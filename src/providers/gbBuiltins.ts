export const gbBuiltins = [
  {
    name: "@A1DDL",
    url: "%40A1DDL",
    documentation:
      "$$$$ @A1DDL   NOTICE  BR232186  14/06/04    21:15:02     8064           \n                                             DATE     14/06/04\n\n     Procedure @A1DDL                         Voir aussi : @MODTRI\n     -----------------  \nEV1 EV2 EV3 EV4 TAB2 = @A1DDL TAB1;\n\n\n    Objet :\n    _______\n  \n  La procedure @A1DDL permet de calculer la reponse dynamique d un\noscilateur non lineaire a 1 degre de liberte soumis a un chargement \nsismique applique en effort impose (calcul dans la repere relatif \na la structure). L originalite de cette procedure est que le \ncoefficient d amortissement est actualise en fonction d une loi \nphenomenologique.   \n  \nTAB1    : TABLE      table de donnees\n          TAB1 . 1  = M;     -- masse de la structure\n          TAB1 . 2  = BETA;  -- coefficient beta (schema de Newmark)\n          TAB1 . 3  = GAMMA; -- coefficient gamma (schema de Newmark)\n          TAB1 . 4  = FPLAS; -- effort de plastification\n          TAB1 . 5  = KA;    -- raideur de l acier\n          TAB1 . 6  = KB;    -- raideur du beton\n          TAB1 . 7  = ACTU   -- type d actualisation\n          TAB1 . 8  = TIME   -- liste de temps (type LISTREEL)\n          TAB1 . 9  = AXTAB  -- liste d acceleration (type LISTREEL)\n          TAB1 . 10 = XI0    -- taux d amortissement initial\n          TAB1 . 11 = XMIN   -- taux d amrotissement minimal\n          TAB1 . 12 = AMMAX  -- taux d amortissement maximal \n          TAB1 . 13 = NC     -- indicateur sur le type d actualisation\n          TAB1 . 14 = DPLUS  -- endommagement positif initial\n          TAB1 . 15 = DMOIN  -- endommagement negatif initial\n          TAB1 . 16 = MAXDP  -- maximum du deplacement positif initial\n          TAB1 . 17 = MAXDM  -- minimum du deplacement negatif initial\n          TAB1 . 18 = AOLD   -- taux d amortissement au premier pas       \n\nEV1     : EVOLUTION    Evolution du deplacements en fonction du temps\nEV2     : EVOLUTION    Evolution de la vitesse en fonction du temps\nEV3     : EVOLUTION    Evolution de l acceleration en fonction du temps\nEV4     : EVOLUTION    Evolution de l amortissement en fonction du temps\n\nTAB2    : TABLE      table de sortie des variables internes\n          TAB2 . 1 = FO1     -- Force\n          TAB2 . 2 = DPLUS   -- Endommagement positif final\n          TAB2 . 3 = DMOIN   -- Endommagement negatif final\n          TAB2 . 4 = MAXDP   -- Maximum des deplacements positifs\n          TAB2 . 5 = MAXDM   -- Minimum des deplacement negatifs\n          TAB2 . 6 = FF      -- Effort de stabilisation\n          TAB2 . 7 = XI      -- Taux d amortissement final\n                                 \n                                 ",
  },
  {
    name: "@AFEVOZT",
    url: "%40AFEVOZT",
    documentation:
      "$$$$ @AFEVOZT NOTICE  GF238795  15/06/29    15:38:38     8564           \n                                             DATE     15/06/29\n                                             \n    Procedure @AFEVOZT                   Voir aussi : MONTAGNE, TRAC\n    ------------------  \n\n\nLa procedure @AFEVOZT permet creer un champ par point pour representer un jeu\nd'evolutions sous forme d'iso-valeur. Ceci permet, par exemple, de representer\nl'evolution d'un grandeur le long d'un axe et au cours du temps sur un unique\ngraphique.\n \nLes evolutions doivent etre donnees dans une table contenant les entrees:\n   -TAB1. i : evolutions a afficher (i est un entier);\n   -TAB1.'TEMPS' : liste des temps (ou autre parametre) associes \u00e0 chaque\n   evolution.\n\nAvec l'option 'HORIZONTAL', l'abscisse des evolutions est representee dans la\ndirection X, le temps dans la direction Y.\nAvec l'option 'VERTICAL', l'abscisse des evolutions est representee dans la\ndirection Y, le temps dans la direction X.\nSans precision, l'option 'VERTICAL' est assumee.\nDans tous les cas, la couleur des iso-valeurs est basees sur l'ordonnees des\nevolutions.\n\nLe reel FLOT1 permet de preciser le rapport d'aspect entre l'abscisse des\nevolutions et le temps.\nSans precision, le rapport d'aspect est de 1.0, ce qui signifie que sur\nl'affichage, le temps est mis \u00e0 l'echelle afin que le graphique soit un carre.\nAvec un rapport d'aspect negatif, on peut changer le sens d'orientation de l'axe\ndes temps. \nSens d'augmentation du temps :\n         |   HORIZONTAL   |  VERTICAL\nFLOT1>0  |   vers le haut |  vers la droite\nFLOT1<0  |   vers le bas  |  vers la gauche\n\nLa procedure renvoie un champ par point et son maillage support pour pouvoir\nl'afficher avec l'operateur 'TRAC'.\nLe maillage resultat contient le maillage support et les lignes marquant les\ntemps des evolutions.\nLes lignes correspondants aux differents instants peuvent \u00eatre obtenues par la\ncommande :\n('ELEM' mail1 'SEG2').\nPour tracer le graphique en visualisant les differents instants et en cachant le\nmaillage support, on pourra utiliser la commande :\n'TRAC' CHPO1 ('ELEM' MAIL1 'TRI3') ('ELEM' MAIL1 'SEG2');\n\nExemple :\n'OPTI' 'DIME' 2;\n*Creation de la table\nTATEST = 'TABLE';\nLITEMP = 'PROG' 0. 'PAS' 0.5 5 5.1 5.2 5.3 5.4 5.5 6 'PAS' 1 10;\n\nTATEST . 'TEMPS' = LITEMP;\nLIZ = 'PROG' 0. 'PAS' 0.05 1.0;\n*Remplissage des evolutions\n'REPE' ITP ('DIME' LITEMP);\n   TPCOUR = 'EXTR' LITEMP &ITP;\n   LIVAL = 'PROG';\n   'REPE' itz ('DIME' liz);;\n      ZCOUR = 'EXTR' LIZ &ITZ;\n      VALCOUR = ('SIN' ( (360. * ZCOUR - 90) + ( 50 * ('COS' (20. *\n      TPCOUR))))) * (1 + (TPCOUR / 10.));\n      LIVAL = LIVAL 'ET' VALCOUR;\n   'FIN'ITZ;\n   TATEST . &ITP = 'EVOL' 'MANU' 'ABSC' LIZ 'ORDO' LIVAL;\n'FIN' ITP;\n\nLIST TATEST;\n*Trace sous forme d'evolution\nEVOTOT = 'VIDE' 'EVOLUTION';\n'REPE' ITP ('DIME' LITEMP);\n   EVOTOT = EVOTOT 'ET' TATEST . &ITP ;\n'FIN' ITP;\nDESS EVOTOT;\n*Trace sous forme d'iso-valeur\nMATEST CHTEST = @AFEVOZT TATEST 'HORIZONTAL' -0.5;\nTRAC CHTEST MATEST ('CONTOUR' MATEST);\nTRAC CHTEST MATEST ('ELEM' MATEST 'SEG2');\n        ",
  },
  {
    name: "@ALGSTA",
    url: "%40ALGSTA",
    documentation:
      "$$$$ @ALGSTA  NOTICE  CHAT      11/09/12    21:15:06     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @ALGSTA                        Voir aussi : @STATIO\n    -----------------                          \n      \n\n\n    Objet :\n    _______\n\n Cette procedure est appelee en interne par la procedure @STATIO",
  },
  {
    name: "@ANA_LIM",
    url: "%40ANA_LIM",
    documentation:
      "$$$$ @ANA_LIM NOTICE  CHAT      11/09/12    21:15:06     7124           \n                                             DATE     11/09/12\n\n  Procedure @ANA_LIM                        Voir aussi :                     \n    ------------------  \n    @ANA_LIM TAB1;\n\n   TAB1.  BLOCAGES_MECANIQUES           MAXITERATION\n          BRIDE                         MECARUINE\n          CADIM                         MODELE\n          CALCUL_COQUE                  PAS \n          CHARGEMENT                    PRECISION\n          CONTRAINTES                   PROCEDURE_PERSO1\n          CRITERE                       REPRISE\n          DEPLA                         RESULTAT\n          EVOLCL                        SIGLIM\n          LISTCL                        \n          LISTITER \n         \n\n    Objet :\n    _______\n\nCette procedure permet de calculer le chargement limite d'une structure\nsous la forme d'une suite monotone decroissante convergeant vers la \nsolution. \nLa modelisation est equivalente a un calcul plastique parfait.\nVersion 04/96 \nElle s'utilise comme PASAPAS\n\nCommentaires\n------------\n\nTAB1   : Objet de type TABLE.                                        \n\nEn entree, TAB1 sert a definir les options et les  parametres du calcul.\nLes indices de l'objet TAB1 sont des mots dont voici la liste :                 \n*********************************************************************           \n        \nMODELE          MMODEL          objet modele (MECANIQUE ELASTIQUE)\n                                Indispensable\n\nCHARGEMENT      CHPOINT         Forces nodales equivalentes \n                                Indispensable\n        \nBLOCAGES_MECANIQUES RIGIDITE    blocages mecaniques\n                                Indispensable\n                                        \nCRITERE         MOT             choix du critere de plasticite\n                                VONMISES OU tresca (taper TRSCA)\n                                defaut: VONMISES\n                                \nSIGLIM          FLOTTANT        limite d'ecoulement \n                ou MCHAML       pour un MCHAML il faut un type SCALAIRE\n                                appuye aux points de calcul des \n                                contraintes\n                                (voir operateur CHAN -> type \"SCALAIRE\"\n                                et \"STRESSES\")\n                                 valeur par defaut: 1.\n\nCALCUL_COQUE    MCHAML          active un calcul en coque\n        stype CARACTERISTIQUES  Caracteristiques de la coque (EPAI,\n                                ALFA) pour un veritable calcul \n                                 plastique ALFA=2/3\n\nPRECISION       FLOTTANT        valeur de la precision           \n                                        valeur par defaut: 1e-3\n        \nMAXITERATION     ENTIER         nombre maximum d'iterations      \n                                        valeur par defaut: 50\n        \nPAS              ENTIER         pas d'affichage des resultats      \n                                        valeur par defaut: 1\n       \n\nREPRISE         LOGIQUE         si REPRISE=VRAI il s'agit de la\n                                reprise d'un calcul\n                                (exemple a la fin)\n                                \nPROCEDURE_PERSO1 LOGIQUE        VRAI si procedure perso a la fin de \n                                chaque iteration\n                                \n        \nEn sortie, TAB1 permet de retrouver les resultats:\n\n indice         type objet\n\nMECARUINE       MCHAML          VMises a convergence            \n          sstype CONTRAINTES    \n        \nCONTRAINTES     MCHAML          contraintes a convergence\n\n\nYOUNG           MCHAML          young a convergence\n                \n\nLISTITER        LISTREEL        liste des iterations\n                                        \n                                        \nLISTCL          LISTREEL        liste des charges limites\n                                        \n                                        \nEVOLCL          EVOLUTION       evolution des charges limites\n                                        en fonction des iterations\n                                        \nCADIM           FLOTTANT        charge limite resultat de \n                                chargement limite/chargement elastique\n                                    \nDEPLA           CHPO            deplacements a convergence\n        \n       \n\nle barometre permet de verifier que les Von Mises (ou les Tresca )\ns'appuient bien sur la surface de charge.\n\nliste des avertissements:\n\nAVERT1:vous etes totalement elastique (passage au dessous de la limite\nelastique)\nAVERT2:la suite des charges limites est croissante -> invalidite de la \ntheorie\nAVERT3:pas assez d'iterations\n\nremarques:\n-@ANA_LIM fonctionne soit en depplacements imposes soit en forces\nimposes,mais pas avec les deux conditions pour un meme calcul.\nLorsqu'un calcul est fait en 'forces imposees', le parametre \"charge \nlimite\" represente la valeur a multiplier au chargement initial imposes\npour obtenir le chargement limite.\n- Lorsqu'un calcul est fait en 'deplacements imposes', il convient de\ndepouiller le chargement a la fin de chaque iteration par l'intermediaire\nd'une procedure PERSO1 qui traitera le resultat pour le transformer en \nreactions aux endroits d'application des deplacements (REDU BSIG)\n- Pour une reprise, a la fin du premier calcul, ajouter \ntable.REPRISE=vrai et relancer @ANA_LIM \n- Le \"ratio elastique\" correspond au Vmises maxi apres un calcul \nelastique incompressible  divise par la limite d'ecoulement.\nPour plus de precisions voir David Plancq (42257492)",
  },
  {
    name: "@ARR",
    url: "%40ARR",
    documentation:
      "$$$$ @ARR     NOTICE  CHAT      11/09/12    21:15:09     7124           \n                                             DATE     11/09/12\n\n     Procedure @ARR                          Voir aussi : @FIX\n     --------------                                       ENTI  \n  Syntaxe :   MOT2 = @ARR FLOT1 ENTI1 (MOT1)\n\n  \n  \n\n        Objet :\n        -------\n\n    Procedure renvoyant, a partir d'un reel FLOT1 et d'un nombre de\n    decimales ENTI1, l'arrondi du reel, avec ENTI1 chiffres apres la\n    virgule, sous la forme du 'MOT' MOT2.\n\n        Commentaire :\n        -------------\n\n    FLOT1 : nombre dont on souhaite prendre l'arrondi\n\n    ENTI1 : nombre de chiffres apres la virgule\n\n    MOT1  : mot facultatif valant 'EXPOSANT' et for\u00e7ant l'ecriture du\n            nombre sous la forme 'aEb' (a etant la mantisse 'ET' b\n            l'exposant).\n\n        Remarques :\n        -----------\n    \n    1 - On passe automatiquement en notation EXPOSANT si l'affichage ne\n        contiendrait autrement que des 0 ou si FLOT1 depasse 1.D10\n\n    2 - l'operateur 'ENTIER' renvoie la troncature et non pas la partie\n        entiere, ce qui n'est pas valide pour les nombres negatifs\n        et est corrige ici.\n        \n    3 - Ne marche pas avec de grands nombres.\n    \n    4 - Resultat lie a la precision machine",
  },
  {
    name: "@B_TPO2D",
    url: "%40B_TPO2D",
    documentation:
      "$$$$ @B_TPO2D NOTICE  CHAT      11/09/12    21:15:15     7124           \n                                             DATE     11/09/12\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n            PAR Miguel A. Bretones UPC Barcelona\n\n\n     Procedure @B_TPO2D                      Voir aussi : @PLOTPRI\n     ------------------                        \n     @B_TPO2D SIG1 MODL1 ( FLOT1 ) ;",
  },
  {
    name: "@CARENE",
    url: "%40CARENE",
    documentation:
      "$$$$ @CARENE  NOTICE  CHAT      11/09/12    21:15:18     7124           \n                                             DATE     11/09/12\n\n    Procedure @CARENE                        Voir aussi : @lisse @couple\n    -----------------                                     @tole2 @tole3      \n\n    MAIL1  TAB2 TAB3 = @CARENE TAB1 LISTREE1 LISTREE2 FLOT1 ENT1 ;\n\n\n    Objet :\n    _______\n\nLa procedure @CARENE cree une carene (maillage tridimensionnel forme\nd'elements de type QUA4) a partir de couples ( formes d'elements de\ntype SEG2). Ces couples (2 au minimum) doivent avoir le meme nombre de\npoints. Les points de meme rang des couples sont relies par une latte\n(deformation elastique d'une poutre). La carene est generee par\nsurfaces reglees appuyees sur 2 lattes consecutives.\n\n\n    Commentaires :\n    _____________\n\n    TAB1     :  Table donnant les couples.\n                   TAB1.1 = couple initial.\n                   TAB1.2 = couple final.   \n                   TAB1.N = couple intermediaire facultatif (N=3,4..)\n\n    LISTREE1 :  Objet LISTREEL de 3 valeurs precisant les rotations\n                imposees RX,RY,RZ au niveau du couple initial.\n                -45. < RX,RY,RZ < 45.\n                Si RX,RY,RZ > 45. la rotation est libre.\n\n    LISTREE2 : Objet LISTREEL de 3 valeurs precisant les rotations\n               imposees RX,RY,RZ au niveau du couple final.\n               -45. < RX,RY,RZ < 45.\n               Si RX,RY,RZ > 45. la rotation est libre.\n\n    FLOT1    : reel donnant la longueur des elements le long d'une\n               latte.\n\n    ENT1    : Entier precisant la direction des lattes.\n                  = 1 , la latte est sur OX.\n                  = 2 , la latte est sur OY.\n                  = 3 , la latte est sur OZ.\n\n\n\n    Exemple d'utilisation :\n    ________________________\n\n\n    titre 'essai de maillage par carene';\n    ev = evol manu ' absci' ( prog  0.04 0.4 0.53 0.67 0.77 0.77)\n         'ordo' ( prog -0.2 -0.13 -0.08 0. 0.23 0.41);\n    evo1L = @lisse ev 50 0. 40 2;\n    uu2 = extraire evo1l ordo;\n    uu1 = extraire evo1l absc;                                              \n    evo2l = evol manu absci (prog 40*0.04) ordo uu2;\n    ec1 = @couple  evo1l evo2l 2;\n\n* maillage de l'etrave\n    u1 = prog  -1.2 -1.34 -1.49 -1.6  -1.68 -1.74  -1.79   ;\n    u2 = prog -0.16  -0.143 -0.11  -0.01 0.11 0.32 0.64;\n    evf = evol manu absc u1  ordo u2;\n    evo1Le = @lisse evf  50 50. 40 1;\n    uu2 = extraire evo1le ordo;\n    uu1 = extraire evo1le absc;\n    evo2le = evol manu absci (prog 40*0.04) ordo uu2;\n    ec2 =  @couple  evo2le evo1le 1;\n    ta= table;\n    ta. 1 = ec1; ta . 2 = ec2;\n    pr1 = prog 0 2 0 ;  pr2 = prog 25 50 50 ;\n    dis = 0.5;\n    aa bb cc  = @carene ta pr1 pr2 dis 1;\n    trac aa ( 0 10000 5000);               \n\n\n$$$$\n\n \n ",
  },
  {
    name: "@CARTOON",
    url: "%40CARTOON",
    documentation:
      "$$$$ @CARTOON NOTICE  CHAT      11/09/12    21:15:18     7124           \n                                             DATE     11/09/12\n\n\n  Procedure @CARTOON                       Voir aussi :\n     ------------------  \n(DEF1 = ) @CARTOON TAB1 GEO1 (BLO1) (OEIL1) (AMPL) ( 'NOSCIL' ) ;\n\n\n\n    Objet :\n    _______\n\n  La procedure @CARTOON effectue une animation des deformees\n  successives de GEO1 obtenues a partir des deplacements contenus\n  dans TAB1.RESUDEPL.\n  Dans le cas ou BLO1 est donne, les vecteurs correspondants aux\n  reactions sont traces.\n  En 3D cette animation est visualisee suivant le point d'observation\n  OEIL1.\n  On peut preciser l'amplitude maximale des deformees avec le\n  coefficient AMPL.Par defaut il est determine automatiquement.\n  Il est possible de desactiver l'option OSCIL qui est prise par defaut,\n  en utilisant l'option NOSCIL.On obtient alors une simple animation.\n\n  TAB1    : TABLE      resultat de NONLIN\n  GEO1    : MAILLAGE\n  BLO1    : RIGIDITE   blocage dont on veut tracer les reactions\n  OEIL    : POINT      point d'observation en 3D\n  DEF1    : DEFORMEE   resultat si demande\n  AMPL    : FLOTTANT   coefficent d'amplification des deformees\n  NOSCIL  : MOT        desactive les oscillations\n\n    remarque :\n    __________\n\n  Pour stopper l'animation, il suffit de cliquer dans la fenetre de \n  dessin.",
  },
  {
    name: "@CDG",
    url: "%40CDG",
    documentation:
      "$$$$ @CDG     NOTICE  CHAT      11/09/12    21:15:19     7124           \n                                             DATE     11/09/12\n\n     CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n    A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n  PAR  DELERUYELLE F.   (SOCOTEC-INDUSTRIE a L IPSN/DES)\n\n                                                                         \n  Procedure @CDG                  Voir aussi :\n      --------------   \n      XG1 XG2 (XG3)  =  @CDG  MODL1 (CAR1) ;\n                                                                         \n\n\n      Objet :                                                            \n      ______\n                                                                         \n      Cette  procedure calcule les coordonnees du centre de gravite de\n      la geometrie contenue dans un modele.\n                                                                         \n                                                                         \n      Commentaires :\n      _____________\n                                                                         \n      MODL1  : objet modele (type MMODEL).                              \n                                                                         \n      CAR1   : champ de caracteristiques geometriques (facultatif)\n               (type MCHAML,sous-type CARACTERISTIQUES).\n               Si on veut prendre en compte une distribution de masse\n               volumique non uniforme, il faut entrer dans CAR1 le champ\n               par element de MATERIAU (pour donner RHO) et le champ de\n               CARACTERISTIQUES (pour donner EPAI, SECT, ...).\n                                                                         \n      XG1    : premiere coordonnee du centre de gravite (type FLOTTANT).\n                                                                         \n      XG2    : seconde coordonnee du centre de gravite (type FLOTTANT).\n                                                                         \n      XG3    : eventuellement, troisieme coordonnee du centre de gravite\n               en 3 D (type FLOTTANT).\n                                                                         \n                                                                         \n      Exemple :\n      ________\n\n      mo1 = mode s3d mecanique elastique isotrope coq3 coq4 ;\n      ca1 = cara mo1 epai 0.5 ;\n      xg1 xg2 xg3 = @cdg mo1 ca1 ;\n      list xg1 ; list xg2 ; list xg3 ;\n\n      Remarques :\n      __________\n\n      1) Cette procedure n'a ete testee que sur des modeles a formulation\n         MECANIQUE.\n\n      2) Pour les coques, le domaine d'integration est la surface de la\n         coque et pour les poutres, le domaine d'integration est la ligne\n         moyenne de la poutre. Si l'on veut integrer sur le volume de ces\n         elements, il faut donner le champs de caracteristiques geometri-\n         ques CAR1 (type MCHAML, sous-type CARACTERISTIQUES).\n\n      3) Dans le cas des coques, meme en fournissant CAR1, on ne prend pas\n         en compte l'excentrement.\n\n      4) On peut traiter un modele mecanique contenant plusieurs types\n         d'elements.",
  },
  {
    name: "@CFD10",
    url: "%40CFD10",
    documentation:
      "$$$$ @CFD10   NOTICE  BR232186  14/06/04    21:15:02     8064           \n                                             DATE     14/06/04\n\n     Procedure @CFD10                         Voir aussi : @A1DDL\n     -----------------  \nF02 = @CFD10 FO1;\n\n\n\n    Objet :\n    _______\n  \n  La procedure @CFD10 permet de determiner la valeur du taux \nd amortissement F02 a partir d un indicateur d endommagement \nstructural. Elle est appelee par la procedure @A1DDL.\n  \nF01     : FLOTTANT   Indicateur d endommagement structural\nF02     : FLOTTANT   Taux d amortissement \n\n                                 \n                                 ",
  },
  {
    name: "@CFS10",
    url: "%40CFS10",
    documentation:
      "$$$$ @CFS10   NOTICE  BR232186  14/06/04    21:15:02     8064           \n                                             DATE     14/06/04\n\n     Procedure @CFS10                         Voir aussi : @A1DDL\n     -----------------  \nF02 = @CFS10 FO1;\n\n\n\n    Objet :\n    _______\n  \n  La procedure @CFS10 permet de determiner la valeur du taux \nd amortissement F02 a partir d un indicateur d intensite de\nchargement sismique. Elle est appelee par la procedure @A1DDL.\n  \nF01     : FLOTTANT   Indicateur d intensite de chargement sismique\nF02     : FLOTTANT   Taux d amortissement \n\n                                 \n                                 ",
  },
  {
    name: "@CHFLEC",
    url: "%40CHFLEC",
    documentation:
      "$$$$ @CHFLEC  NOTICE  CHAT      11/09/12    21:15:24     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR      M. D. DUREISSEIX\n                 L.M.T. STRUCTURES & C.M.A.O.\n\n                                                                                \n  Procedure @CHFLEC                            Voir aussi :\n     -----------------  \n     PTF1 = @CHFLEC ECH1 CHPO1 (ARG1) (TAIL1) ;\n\n\n     Objet :                                                                    \n     ______                                                                     \n\n  Procedure pour construire un CHamp de FLEChes\n\n  on envoie\n          ECH1   FLOTTANT echelle pour le trace des efforts\n          CHPO1  CHPOINT  champ par point a representer\n         /ARG1   MOT      si egal a 'G   ' seul le cote gauche est trace\n                                    'D   ' seul le cote droit est trace\n         /TAIL1  FLOTTANT taille des tetes de fleche\n                          si non precise : 1/5 de la valeur maxi\n  on recupere\n          PTF1   MAILLAGE definissant les fleches\n\n\n ",
  },
  {
    name: "@CIRCONS",
    url: "%40CIRCONS",
    documentation:
      "$$$$ @CIRCONS NOTICE  PASCAL    12/10/18    21:15:01     7532           \n                                             DATE     12/10/18\n\n\n    Procedure @CIRCONS                              Voir aussi : @P_VORO\n    ------------------                                             \n    PT1 R1 = @CIRCONS ELT1 ;\n\n    Objet :\n    -------\n\n       La procedure @CIRCONS calcule le centre et le rayon du cercle\n    (sphere) circonscrit(e) a un element de type TRI3 (TET4) en 2D (3D).\n\n\n    Commentaire :\n    -------------\n\n    ELT1     = MAILLAGE, 1 element de type TRI3 ou TET4 ;\n\n    PT1      = POINT, centre du cercle (sphere) circonscrit(e) ;\n\n    R1       = FLOTTANT, rayon du cercle (sphere) circonscrit(e).",
  },
  {
    name: "@CLCH",
    url: "%40CLCH",
    documentation:
      '$$$$ @CLCH    NOTICE  CHAT      11/09/12    21:15:27     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLCH           Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ----------------\n        \n        RIG1 F1 = @CLCH MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------   \n    \n    Date :     06/2007\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    en contrainte homogene au contour avec un chargment en \n    contrainte moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage (MAILLAGE)\n    TAB1  : Contrainte moyenne imposee (TABLE) selon l\'ordre \n            suivant:         \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Cette procedure fonctionne pour des porosites\n       debouchantes uniquement si celles-ci sont "periodiques" \n       ',
  },
  {
    name: "@CLDH",
    url: "%40CLDH",
    documentation:
      "$$$$ @CLDH    NOTICE  CHAT      11/09/12    21:15:28     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLDH           Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ----------------\n        \n        RIG1 F1 = @CLDH MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------   G.TREGO (CEA Saclay DEN/DMN/SRMA)        \n    \n    Date :     10/2006\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    en deformation homogene au contour avec un chargment en \n    deformation moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage (MAILLAGE)\n    TAB1  : Deformation moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = EXX, \n               TAB1.2 = EYY, \n               TAB1.3 = EZZ, \n               TAB1.4 = EXY, \n               TAB1.5 = EXZ, \n               TAB1.6 = EYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Cette procedure utilise l'enveloppe du maillage\n       volumique. En consequence, le maillage considere n'est\n       pas limite a une geometrie parallelepipedique.\n       Attention a l'utilisation dans le cas de materiaux\n       poreux... \n       ",
  },
  {
    name: "@CLDHC",
    url: "%40CLDHC",
    documentation:
      "$$$$ @CLDHC   NOTICE  CHAT      11/09/12    21:15:27     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLDHC           Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ----------------\n        \n        RIG1 F1 = @CLDHC MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2006\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    en deformation homogene au contour avec un chargment en \n    contrainte moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage dont l'enveloppe est un\n            parallelepipede rectangle (MAILLAGE)\n    TAB1  : Contrainte moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Pour une utilisation avec la procedure KEFF, preferer\n       l'utilisation de @CLDH, plus efficace pour un resultat\n       identique.\n       Cette procedure fonctionne pour des porosites\n       debouchantes uniquement si celles-ci sont \"periodiques\" \n       ",
  },
  {
    name: "@CLIM",
    url: "%40CLIM",
    documentation:
      "$$$$ @CLIM    NOTICE  CHAT      11/09/12    21:15:28     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLIM            Voir aussi: KEFF, KEFFT\n    \n    -----------------\n        \n        RIG1 F1 = @CLIM  PROC0 MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2006\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions aux limites\n    \n    Commentaires :\n    --------------\n    PROC0 : PROCEDURE, nom de la procedure choisie comme\n            condition aux limites parmi:\n        @CLPD, @CLPC, @CLCH, @CLDH, @CLDHC, @CLMI1C, @CLMI2C\n    MAIL0 : Maillage (MAILLAGE)\n    TAB1  : Contrainte ou deformation moyenne imposee en\n            fonction de la procedure choisie (TABLE) \n            selon l'ordre suivant:           \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ;\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Se reporter aux notices des notices @CLPD, @CLPC, @CLCH,\n       @CLDH, @CLDHC, @CLMI1C, @CLMI2C pour plus de precisions\n\n       ",
  },
  {
    name: "@CLMI1C",
    url: "%40CLMI1C",
    documentation:
      "$$$$ @CLMI1C  NOTICE  CHAT      11/09/12    21:15:28     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLMI1C          Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ----------------\n        \n        RIG1 F1 = @CLMI1C MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     01/2009\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    en mixte normal de type 1 (le deplacement normal et les\n    contraintes tangentielles respectent des conditions\n    uniformes) au contour avec un chargment en contrainte \n    moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage dont l'enveloppe est un\n            parallelepipede rectangle (MAILLAGE)\n    TAB1  : Contrainte moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Cette procedure fonctionne pour des porosites\n       debouchantes uniquement si celles-ci sont \"periodiques\" \n       ",
  },
  {
    name: "@CLMI2C",
    url: "%40CLMI2C",
    documentation:
      "$$$$ @CLMI2C  NOTICE  CHAT      11/09/12    21:15:28     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLMI2C          Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ----------------\n        \n        RIG1 F1 = @CLMI2C MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     01/2009\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    en mixte normal de type 2 (le deplacement tangntiel et la\n    contrainte normale respectent des conditions\n    uniformes) au contour avec un chargment en contrainte \n    moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage dont l'enveloppe est un\n            parallelepipede rectangle (MAILLAGE)\n    TAB1  : Contrainte moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Cette procedure fonctionne pour des porosites\n       debouchantes uniquement si celles-ci sont \"periodiques\" \n       ",
  },
  {
    name: "@CLPC",
    url: "%40CLPC",
    documentation:
      "$$$$ @CLPC    NOTICE  CHAT      11/09/12    21:15:29     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLPC            Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ---------------\n        \n        RIG1 F1 = @CLPC MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2006\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    periodiques et un chargment en contrainte moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage periodique dont l'enveloppe est un\n            parallelepipede rectangle (MAILLAGE)\n    TAB1  : Contrainte moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = SXX, \n               TAB1.2 = SYY, \n               TAB1.3 = SZZ, \n               TAB1.4 = SXY, \n               TAB1.5 = SXZ, \n               TAB1.6 = SYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Pour une utilisation avec la procedure KEFF, preferer\n       l'utilisation de @CLPD, plus efficace pour un resltat\n       identique.\n       Les maillages de faces en regards doivent etre\n       superposables par translation.\n       Cette procedure fonctionne pour des porosites\n       debouchantes.\n       ",
  },
  {
    name: "@CLPD",
    url: "%40CLPD",
    documentation:
      "$$$$ @CLPD    NOTICE  CHAT      11/09/12    21:15:29     7124           \n                                             DATE     11/09/12\n\n    Procedure @CLPD            Voir aussi: @CLIM, @KEFF, KEFFT\n    \n    ---------------\n        \n        RIG1 F1 = @CLPD MAIL0 TAB1;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     10/2006\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite et les\n    forces nodales associees a un jeu de conditions au limites\n    periodiques et un chargment en deformation moyenne imposee.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage periodique dont l'enveloppe est un\n            parallelepipede rectangle (MAILLAGE)\n    TAB1  : Deformation moyenne imposee (TABLE) selon l'ordre \n            suivant:         \n               TAB1.1 = EXX, \n               TAB1.2 = EYY, \n               TAB1.3 = EZZ, \n               TAB1.4 = EXY, \n               TAB1.5 = EXZ, \n               TAB1.6 = EYZ,\n    RIG1  : Rigidite associe au chargement (RIGIDITE)\n    F1    : Forces nodales associees au chargement (CHPOINT)           \n               \n    Remarques :\n    -----------\n       Les maillages de faces en regards doivent etre\n       superposables par translation.\n       Cette procedure fonctionne pour des porosites\n       debouchantes.\n       ",
  },
  {
    name: "@CORIGI",
    url: "%40CORIGI",
    documentation:
      '$$$$ @CORIGI  NOTICE  CHAT      11/09/12    21:15:35     7124           \n                                             DATE     11/09/12\n\n    Procedure @CORIGI            Voir aussi: @CLIM\n    \n    -----------------\n        \n        RIG1 = @CORIGI MAIL0;\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2006\n    ------\n    \n    Exemple associe :     utilise par les procedures @CLIM\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Cette procedure permet de construire la rigidite associee\n    au blocage d\'un mouvement de corps rigide.\n    \n    Commentaires :\n    --------------\n    MAIL0 : Maillage quelconque (MAILLAGE)\n    RIG1  : Rigidite associee (RIGIDITE)\n\n    Remarques :\n    -----------\n        Cette procedure est notamment utile pour des geometries\n        complexes pour lesquelles le blocage du mouvement de \n        corps rigide ne semble pas "evident".\n       ',
  },
  {
    name: "@COUPLAN",
    url: "%40COUPLAN",
    documentation:
      "$$$$ @COUPLAN NOTICE  PASCAL    12/10/18    21:15:01     7532           \n                                             DATE     12/10/18\n\n\n    Procedure @COUPLAN                    Voir aussi : @P_VORO, @P_BOIT2\n    ------------------\n\n    TAB2 TAB3 = @COUPLAN TAB1 P1 P2 P3 ;\n\n    Objet :\n    -------\n\n       Procedure permettant de couper par un plan la partition de\n    Voronoi decrite par la table TAB1, resultat de la procedure @P_VORO.\n\n    Commentaire :\n    -------------\n\n    TAB1      = Objet TABLE, resultat de la procedure @P_VORO ;\n\n    P1/P2/P3  = Points du plan de coupe ; \n\n    TAB2/TAB3 = TABLEs resultats contenant les points sommets de la\n                partition de Voronoi decrite par TAB1 coupee par le\n                Plan defini par P1 P2 P3.",
  },
  {
    name: "@COUPLE",
    url: "%40COUPLE",
    documentation:
      "$$$$ @COUPLE  NOTICE  CHAT      11/09/12    21:15:38     7124           \n                                             DATE     11/09/12\n\n    Procedure @COUPLE                        Voir aussi : @lisse @carene\n    -----------------                                     @tole2 @tole3       \n\n    MAIL1 = @COUPLE  EVOL1 EVOL2 ENT1 ;\n\n\n    Objet :\n    _______\n\nLa procedure @COUPLE  cree un couple i.e un maillage de segments a 2\nnoeuds de type seg2 a partir de deux EVOLUTIONS.\n\n\n    Commentaires :\n    _____________\n\n    EVOL1   : Evolution dans le plan YOZ.\n\n    EVOL2   : Evolution dans le plan XOZ.\n\n    ENT1    : Entier valant 1 si le couple est dans le plan XOZ ou \n              valant 2 si le couple est dans le plan YOZ.\n\n    Exemple d'utilisation :\n    ________________________\n\n\n     u1 = prog -1.79  -1.73 -1.67 -1.6 -1.49  -1.34  -1.2;\n     u2 = prog 0.64 0.32 0.12 -0.01 -0.12 -0.15 -0.16;\n     evf = evol manu absc u1  ordo u2;\n     evo1Le = @lisse evf 50 0. 40 1;\n     uu2 = extraire evo1le ordo;\n     uu1 = extraire evo1le absc;\n     evo2le = evol manu absci (prog 40*0.04) ordo uu2;\n     ec2 =  @couple  evo2le evo1le 1;\n\n$$$$\n\n \n ",
  },
  {
    name: "@COUTOR1",
    url: "%40COUTOR1",
    documentation:
      "$$$$ @COUTOR1 NOTICE  CHAT      11/09/12    21:15:39     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n     Procedure @COUTOR1                      voir aussi : @FRENET\n     ------------------                                   @COUTOR2\n\n     DS RAY TOR ALPHA BETA = @COUTOR1 ELEM1 CHT CHN CHB ;\n\n\n\n Objet :\n ______\n\nCette procedure calcule la courbure et la torsion d un segment de \nligne.\n        \nCommentaire :\n_____________\n\n        ELEM1 : Objet de type maillage constitue d un seul element de\n                type SEG2 ou SEG3.\n\n        CHT   : Champ par points du vecteur unitaire de la tangente (type\n                CHPOINT) reduit a l element ELEM1 et de composantes\n                'TX', 'TY', ('TZ').\n\n        CHN   : Champ par points du vecteur unitaire de la normale (type\n                CHPOINT) reduit a l element ELEM1 et de composantes\n                'NX', 'NY', ('NZ').\n\n        CHB   : Champ par points du vecteur unitaire de la binormale (type\n                CHPOINT) reduit a l element ELEM1 et de composantes\n                'BX', 'BY', ('BZ').\n\n        DS    : Longueur de l element ELEM1 (type FLOTTANT).\n\n        RAY   : Rayon de courbure de l element ELEM1 (type FLOTTANT).\n\n        TOR   : Rayon de torsion de l element ELEM1 (type FLOTTANT).\n\n        ALPHA : Angle de courbure\n                (rotation du repere initial autour de la binormale)\n                (type FLOTTANT).\n\n        BETA  : Angle de torsion\n                (rotation du repere initial autour de la tangente)\n                (type FLOTTANT).\n\n\nRemarque 1 :\n____________\n\n        La direction de la tangente est celle de la description de la ligne.\n        le repere T, N, B, est dans le sens direct.\n\nRemarque 2 :\n____________\n\n        Cette procedure est utilisee par la procedure 'FRENET' pour calculer\n        les reperes aux extremites de la ligne.\n\nRemarque 3 :\n____________\n\n        En dimension 2 :        TOR = 0.\n                                BETA = 0.\n        ",
  },
  {
    name: "@COUTOR2",
    url: "%40COUTOR2",
    documentation:
      "$$$$ @COUTOR2 NOTICE  CHAT      11/09/12    21:15:40     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n\n     Procedure @COUTOR2                      Voir aussi : @COUTOR1\n     ------------------                                   @FRENET  \n     CHRT = @COUTOR2 LIG1 CHT CHN CHB ;\n\n\n\nObjet :\n_______\n\nCette procedure calcule la courbure et la torsion d une ligne sur \nchacun de ses elements.\n\nCommentaire :\n_____________\n\n        LIG1  : Objet de type maillage qui doit etre constitue d \n                elements de type SEG2 ou SEG3.\n\n        CHT   : Champ par points du vecteur unitaire de la tangente\n                (type CHPOINT) de composantes 'TX',  'TY', ('TZ').\n\n        CHN   : Champ par points du vecteur unitaire de la normale\n                (type CHPOINT) de composantes 'NX', 'NY', ('NZ').\n\n        CHB   : Champ par points du vecteur unitaire de la binormale\n                (type CHPOINT) de composantes 'BX', 'BY', ('BZ').\n\n        CHRT  : Champ par elements de composantes 'R' et 'T'\n                (type MCHAML).\n\n\nRemarque 1 :\n____________\n\n        La direction de la tangente est celle de la description de la ligne.\n        le repere T, N, B, est dans le sens direct.\n\nRemarque 2 :\n____________\n\n        En dimension 2 : la valeur de la composante T de CHRT est nulle sur\n                         tous les elements.\n                                \nRemarque 3 :\n____________\n\n        Le champ par elements CHRT est de sous-type 'GRAVITE'.",
  },
  {
    name: "@CRIPL",
    url: "%40CRIPL",
    documentation:
      "$$$$ @CRIPL   NOTICE  CHAT      11/09/12    21:15:40     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @CRIPL                         Voir aussi : @STATIO\n    ----------------                          \n\n\n    Objet :\n    _______\n\n Cette procedure est appelee en interne par la procedure @STATIO",
  },
  {
    name: "@DEDUIRE",
    url: "%40DEDUIRE",
    documentation:
      "$$$$ @DEDUIRE NOTICE  CHAT      11/09/12    21:15:47     7124           \n                                             DATE     11/09/12\n\n    Procedure @DEDUIRE                       Voir aussi : PLUS TOUR\n    ------------------                                    DEDU       \n\n \n\n             OBJ1  =  @DEDUIRE OBJ2 MAIT_ANC MAIT_NOU ;\n\n    Objet :\n    _______\n\n    La procedure @DEDUIRE construit a partir du maillage OBJ2 et du \n    maillage de noeuds (de OBJ2) maitres MAIT_ANC un nouvel objet \n    ou l'ensemble de noeuds maitres est devenu MAIT_NOU.\n   \n   ",
  },
  {
    name: "@DEFA2DL",
    url: "%40DEFA2DL",
    documentation:
      "$$$$ @DEFA2DL NOTICE  CHAT      11/09/12    21:15:48     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR MM. J.Y. COGNARD & D. DUREISSEIX\n                     L.M.T. STRUCTURES & CMAO\n\n                                                                                \n  Procedure @DEFA2DL                                     Voir aussi :\n     ------------------  \n     MAI1 = @DEFA2DL LIG0 PIN1 TAI1 TYP1 (DES1) (LOG1)\n\n\n     Objet :                                                                    \n     ______                                                                     \n\n  Procedure pour construire une ligne d'appuis en 2D (utilise @DEFA2DP)\n      DEFinition d'Appuis en 2D pour une Ligne\n\n  on envoie\n          LIG0  MAILLAGE ligne support des appuis\n          PIN1  POINT    pour definir l'interieur du domaine\n          TAI1  FLOTTANT pour definir la taille\n          TYP1  MOT      pour definir le type d'appui sur la ligne\n            'roul' : ligne d'appuis simples\n            'enca' : ligne d'encastrements\n            'mixt' : encastement du premier point plus\n                     ligne d'appuis simples\n          DES1  /MOT     pour une verification\n            'trac' : pour le trace des appuis un par un\n          LOG1 /LOGIQUE  pour l'espacement des appuis\n            VRAI l'espacement mini est 2.*TAI1\n            FAUX un appui tous les points de LIG0\n  on recupere\n          MAI1   MAILLAGE definissant la ligne d'appui\n\n\n ",
  },
  {
    name: "@DEFA2DP",
    url: "%40DEFA2DP",
    documentation:
      "$$$$ @DEFA2DP NOTICE  CHAT      11/09/12    21:15:48     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR MM. J.Y. COGNARD & D. DUREISSEIX\n                     L.M.T. STRUCTURES & CMAO\n\n                                                                                \n  Procedure @DEFA2DP                                     Voir aussi :\n     ------------------  \n     MAI1 = @DEFA2DP TAI1 ORI1 VEC1 TYP1 ;\n\n\n     Objet :                                                                    \n     ______                                                                     \n\n  Procedure pour construire un appui en 2D (voir @DEFA2DL)\n      DEFinition d'un Appui en 2D pour un Point\n\n  on envoie\n          TAI1  FLOTTANT pour definir la taille\n          ORI1  POINT    pour definir l'origine\n          VEC1  POINT    vecteur interieur pour l'orientation\n          TYP1  MOT      pour definir le type d'appui\n                         'roul' pour un appui simple\n                         'enca' pour un encastrement (par defaut)\n  on recupere\n          MAI1  MAILLAGE definissant l'appui\n\n\n ",
  },
  {
    name: "@DEFPL",
    url: "%40DEFPL",
    documentation:
      "$$$$ @DEFPL   NOTICE  CHAT      11/09/12    21:15:48     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @DEFPL                         Voir aussi : @STATIO\n    ----------------                          \n      \n\n\n    Objet :\n    _______\n\n Cette procedure est appelee en interne par la procedure @STATIO",
  },
  {
    name: "@DESLIS",
    url: "%40DESLIS",
    documentation:
      "$$$$ @DESLIS  NOTICE  CHAT      11/09/12    21:15:50     7124           \n                                             DATE     11/09/12\n\n   Procedure @DESLIS                         Voir aussi : DESS PROG\n                                                          LIST  LECT  \n   @DESliS | LISTREE1 |  ( 'LOGX'                      ) ;\n           | LISTENT1 |  ( 'LOGY'                      ) ;\n                         ( 'GRIL'                      ) ;\n                         ( 'XBOR'  XINF XSUP           ) ;\n                         ( 'YBOR'  YINF YSUP           ) ;\n                         ( 'MIMA'                      ) ;\n                         ( 'DATE'                      ) ;\n                         ( 'LOGO'                      ) ;\n                         ( 'CHOI'  (N1 (N2 (N3 ...)))  ) ;\n                         ( 'TITR'  'bla bla...'        ) ;\n                         ( 'TITX'  'blax'              ) ;\n                         ( 'TITY'  'blay'              ) ;\n                         ( 'AXES'                      ) ;\n                         ( 'NCLK'                      ) ;\n\n\n    Objet\n    -----\n    Cette procedure permet de tracer a l'aide de l'operateur DESSIN\n    l'evolutions des valeurs contenue dans la liste entree\n\n    Commentaires\n    -------------\n\n    LISTREE1  liste de valeurs reelles a tracer (type LISTREEL)\n\n    LISTENT1  liste de valeurs entieres a tracer (type LISTENTI)\n\n\n    Tous les mot-clefs sont des options generales de DESSIN\n            (Cf. DESS) les mots possibles sont : 'LOGX' 'LOGY' 'GRIL'\n            'CARR' 'XBOR' 'YBOR' 'DATE' 'LOGO' \n            'TITR' 'TITX' 'TITY' 'AXES' 'NCLK'.\n\n    On affiche toujours les valeurs min et max de la liste        ",
  },
  {
    name: "@ENCA",
    url: "%40ENCA",
    documentation:
      "$$$$ @ENCA    NOTICE  CHAT      11/09/12    21:16:01     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR M. D. DUREISSEIX\n                    L.M.T. STRUCTURES & C.M.A.O.\n\n                                                                                \n  Procedure @ENCA                                      Voir aussi :\n     ---------------  \n     PTF1 = @ENCA TAIL1 MAIL1 VEC1 ;\n\n\n     Objet :                                                                    \n     ______                                                                     \n\n  Procedure pour construire un vrai ENCAstrement en 2D\n\n  on envoie\n          TAIL1  FLOTTANT pour definir la taille\n          MAIL1  MAILLAGE ligne sur laquelle il y a encastrement\n          VEC1   POINT    vecteur pour l'orientation des hachures\n                          (normale interieure)\n  on recupere\n          PTF1   MAILLAGE definissant l'encastrement\n\n\n ",
  },
  {
    name: "@EXCEL1",
    url: "%40EXCEL1",
    documentation:
      "$$$$ @EXCEL1  NOTICE  CHAT      11/09/12    21:16:06     7124           \n                                             DATE     11/09/12\n\n\n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CASTEM2000                          \n       PAR  Ch. LABORDERIE  (LMT - ENS Cachan )\n                                                                         \n                                                                         \n  Procedure @EXCEL1                              Voir aussi :\n      -----------------  \n      @EXCEL1 EVOL1 FICH1 ;\n                                                                         \n      Objet :                                                            \n      ______\n                                                                         \n      Cette procedure met un objet EVOLUTION dans un fichier FICH1\n      utilisable sous EXCEL. Le ; sert de separateur entre les deux\n      colonnes de chiffres.\n\n      Commentaires :\n      _____________\n                                                                         \n      EVOL1  : objet de type EVOLUTION\n\n      FICH1  : nom du fichier resultat (type MOT)\n\n\n ",
  },
  {
    name: "@FIS_1",
    url: "%40FIS_1",
    documentation:
      "$$$$ @FIS_1   NOTICE  MB234859  17/10/02    21:15:01     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure @FIS_1                                Voir aussi :\n    ----------------                              \n\n\n    Objet :\n    _______\n\n Procedure appelee par @FIS_3DS",
  },
  {
    name: "@FIS_2",
    url: "%40FIS_2",
    documentation:
      "$$$$ @FIS_2   NOTICE  MB234859  17/10/02    21:15:01     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure @FIS_2                                 Voir aussi :\n    ----------------                              \n\n\n    Objet :\n    _______\n\n Procedure appelee par @FIS_3DS",
  },
  {
    name: "@FIS_3",
    url: "%40FIS_3",
    documentation:
      "$$$$ @FIS_3   NOTICE  MB234859  17/10/02    21:15:01     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure @FIS_3                                Voir aussi :\n    ----------------                              \n\n\n    Objet :\n    _______\n\n Procedure appelee par @FIS_3DS",
  },
  {
    name: "@FIS_3DS",
    url: "%40FIS_3DS",
    documentation:
      "$$$$ @FIS_3DS NOTICE  MB234859  17/10/02    21:15:02     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure @FIS_3DS                            Voir aussi :\n    ------------------                              \nVTOT LFF LEVREINF SAR SLAF SINF SAV_S SSUP_S SLAT_S BOUDIN EP3 = \n\n    @FIS_3DS  C A LO TO HO NT NC NS RC0 RC1 RC2 RC3 \n              ALPHA NDT NSDT XL XT XH ;\n\n\n    Objet :\n    _______\n\n    La procedure @FIS_3DS permet de creer un bloc fissure 3D massif\nen utilisant des elements Hexaedres a 20 noeuds et prismes a 15\nnoeuds. La fissure est supposee elliptique.\n\n      Commentaire :\n      _____________\n\n*                                                                       \n* c         demi grand axe de l'ellipse                                 \n* a         demi petit axe de l'ellipse                                       \n* rc0       rayon du tore                                               \n* rc1       coefficient multiplicateur du parametre rc0\n*           definissant l'epaisseur de la premiere couronne\n*           de deraffinement\n* rc2       coefficient multiplicateur du parametre rc0\n*           definissant l'epaisseur de la deuxieme couronne\n*           de deraffinement\n* rc3       coefficient multiplicateur du parametre rc0\n*           definissant l'epaisseur de la troisieme couronne\n*           de deraffinement (si ndt=2)\n* nc        nombre de couronnes                                         \n* ns        nombre de secteurs sur 90 degres                            \n* nt        nombre de divisions sur un quart d'ellipse                  \n* eps       demi-angle d'ouverture de la fissure (degres)               \n* lo        longueur du bloc                                            \n* to        largeur du bloc                                             \n* ho        hauteur du bloc                                             \n* ndt       nombre de couronnes de deraffinement (1 ou 2)               \n* nsdt      Nombre de secteurs sur 90 degres au niveau des \n*           couronnes de deraffinement des tranches (2 ou 4)\n* beta      impose le decoupage le long de la generatrice               \n* alpha     impose l'angle des differentes tranches                     \n* xl        impose le nombre d'elements pour la prolongation            \n*           du bloc initial suivant l'axe x (longueur)                  \n* xt        impose le nombre d'elements pour la prolongation            \n*           du bloc initial suivant l'axe y (largeur)                   \n* xh        impose le nombre d'elements pour la prolongation            \n*           du bloc initial suivant l'axe -z (hauteur)                  \n\nEn sortie differentes parties du maillage sont nommees Vtot est le\nmaillage complet.",
  },
  {
    name: "@FIX",
    url: "%40FIX",
    documentation:
      "$$$$ @FIX     NOTICE  CHAT      11/09/12    21:16:15     7124           \n                                             DATE     11/09/12\n\n     Procedure @FIX                          Voir aussi : @ARR\n     --------------                                       ENTI  \n  Syntaxe :  MOT2 = @FIX FLOT1 ENTI1 (MOT1)\n\n  \n  \n\n        Objet :\n        -------\n\n    Procedure renvoyant, a partir d'un reel FLOT1 et d'un nombre de\n    decimales ENTI1, la troncature du reel, avec ENTI1 chiffres apres la\n    virgule, sous la forme du 'MOT' MOT2.\n\n        Commentaire :\n        -------------\n\n    FLOT1 : nombre que l'on souhaite tronquer\n\n    ENTI1 : nombre de chiffres apres la virgule\n\n    MOT1  : mot facultatif valant 'EXPOSANT' et for\u00e7ant l'ecriture du\n            nombre sous la forme 'aEb' (a etant la mantisse 'ET' b\n            l'exposant).\n\n        Remarques :\n        -----------\n    \n    1 - On passe automatiquement en notation EXPOSANT si l'affichage ne\n        contiendrait autrement que des 0 ou si FLOT1 depasse 1.D10,\n\n    2 - Ne marche pas avec de grands nombres,\n    \n    3 - Resultat lie a la precision machine",
  },
  {
    name: "@FRENET",
    url: "%40FRENET",
    documentation:
      "$$$$ @FRENET  NOTICE  CHAT      11/09/12    21:16:19     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n\n      Procedure @FRENET                      Voir aussi : @COUTOR1\n      -----------------                                   @COUTOR2  \n                                                          @ORTHO1  \n      CHT CHN CHB = @FRENET LIG1 ('TRACE') (OEIL1);\n\n\n\n     Objet :\n     ______\n\n      Cette  procedure calcule le repere de Frenet le long d'une ligne\n\n      Commentaire:\n      ____________\n\n      LIG1 : objet de type MAILLAGE qui doit etre constitue d'elements\n             de type SEG2 ou SEG3.\n\n      TRACE : Mot-cle indiquant qu'il faut tracer le repere de\n              Frenet.\n\n      OEIL1: objet de type POINT indiquant le point de vue du trace\n             pour une ligne en 3D.\n\n      CHT  : champ par points du vecteur unitaire de la tangente\n             (type CHPOINT) de composantes 'TX', 'TY', 'TZ'.\n\n      CHN  : champ par points du vecteur unitaire de la normale\n             (type CHPOINT) de composantes 'NX', 'NY', 'NZ'.\n\n      CHB  : champ par points du vecteur unitaire de la binormale\n             (type CHPOINT) de composantes 'BX', 'BY', 'BZ'.\n\n\n      Remarque 1:\n      ___________\n\n      En dimension 2 les composantes BX et BY de CHB ont une valeur \n      nulle en tout point .\n\n\n      Remarque 2:\n      ___________\n\n      La direction de la tangente est celle de la description de la \n      ligne .Le repere (t,n,b) est dans le sens direct .\n\n\n      Remarque 3:\n      ___________\n\n      Il est necessaire que la courbe LIG1 comprenne au moins 5 \n      elements.\n\n      Remarque 4:\n      ___________\n\n      Si TRACE n'est pas specifie le trace du repere ne sera pas \n      effectue.",
  },
  {
    name: "@GATTPAR",
    url: "%40GATTPAR",
    documentation:
      "$$$$ @GATTPAR NOTICE  CHAT      11/09/12    21:16:22     7124           \n                                             DATE     11/09/12\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DES UTILISATEURS DES MODELES \n                  GATT_MONERIE ET UO2_DCN\n             PAR C. STRUB ( CEA/DMT/SEMT/LM2S )\n\n  Procedure @GATTPAR                         Voir aussi :\n     ------------------  \n        TAB1 = @GATTPAR NOMFIC ('TOUTATIS') ;\n\n\n  Objet :\n  -----\n\n      Cette procedure peut etre utilisee avant l'appel a l'operateur\n      'MATE', dans le cas de l'utilisation des modeles GATT_MONERIE ou\n      UO2_DCN (cf. operateur 'MODE'), pour lire des donnees sur un \n      fichier.\n\n  En entree :\n\n  NOMFIC      nom du fichier contenant differentes donnees necessaires\n              a la construction des parametres materiau (objets CASTEM)\n              pour le modele GATT_MONERIE ou UO2_DCN (type MOT).\n\n  TOUTATIS : mot-cle dans le cadre d'une utilisation avec TOUTATIS\n             certaines donnees necessaires a la construction des \n             parametres materiau, sont alors definies dans le code \n             TOUTATIS.\n\n  En sortie :\n\n  TAB1        table dont les indices de type MOT sont des noms de \n              composantes materiau a introduire dans le cadre du modele \n              GATT_MONERIE ou UO2_DCN. Chaque objet indexe dans TAB1 \n              peut etre utilise dans l'operateur 'MATE'.",
  },
  {
    name: "@GLOBAL",
    url: "%40GLOBAL",
    documentation:
      "$$$$ @GLOBAL  NOTICE  CHAT      11/09/12    21:16:23     7124           \n                                             DATE     11/09/12\n\n\n  Procedure @GLOBAL                           Voir aussi :\n     -----------------  \nEVOL2=@GLOBAL TAB1 BLO1 EVOL1 MOT1;\n\n\n\n    Objet :\n    _______\n\n  La procedure @GLOBAL construit un objet EVOL2 de type evolution\n  contenant :\n  En abscisse un listreel obtenu par interpolation de la\n  liste des pas de temps successifs contenus dans TAB1 sur EVOL1.\n  En ordonnee un listreel contenant les valeurs de la composante\n  de nom MOT1 de la resultante des reactions successives de BLO1.\n\nTAB1    : TABLE      resultat de NONLIN\nBLO1    : RIGIDITE   blocage permettant de calculer les reactions\nEVOL1   : EVOLUTION  contient evolution d'un deplacement en fonction\n                     du temps.\nMOT1    : MOT        nom de la composante de la resultante\nEVOL2   : EVOLUTION  resultat contenant evolution de la composante\n                     desiree de la resultante des reactions en fonction\n                     du deplacement contenu dans EVOL1\n\n    Exemple d'utilisation :\n    ________________________\n\nexemple de description des objets avant un calcul non lineaire\n\n\nBLO1=BLOQ GEO1 UY;\nCHP1=DEPI BLO1 1.;\nLIST1=PROG 0. PAS 0.1 1.;\nLIST2=PROG 0. PAS 0.01 0.05 PAS -0.01 0.0;\nEVOL1=EVOL MANU TEMPS LIST1 FLECHE LIST2;\nCHAR1=CHARGEMENT EVOL1 CHP1;\nLT1=PROG 0. PAS 0.033 1.;\nNONLIN TAB1 MOD1 MAT1 (RIG1 ET BLO1 ET BLO2 ET SYM1) CHAR1 LT1;\n\nutilisation de la procedure\n\nEVOL2=@GLOBAL TAB1 BLO1 EVOL1 FY;\nDESSIN EVOL2;",
  },
  {
    name: "@HELICE",
    url: "%40HELICE",
    documentation:
      "$$$$ @HELICE  NOTICE  CHAT      11/09/12    21:16:27     7124           \n                                             DATE     11/09/12\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n  Procedure @HELICE                                Voir aussi :\n     -----------------  \n     GEO2 GEO3 = @HELICE GEO1 TYP1 P0 V0 PAS ALPHA NP ;\n\n\n     Objet :\n     ______\n\n     Cette  procedure cree le maillage engendre par une transformation\n     helico\u00efdale.\n\n     Commentaire:\n     ____________\n\n     GEO1  : Base de l'helice (POINT ou MAILLAGE de type ligne\n             ou surface )\n\n     TYP1  : MOT definissant le type de la base, pouvant prendre\n             l'une des trois valeurs 'POIN' 'LIGN' ou 'SURF'\n\n     P0    : POINT de l'axe de l'helice\n\n     V0    : Vecteur directeur de l'axe de l'helice (de type POINT)\n\n     PAS   : Pas de l'helice (de type FLOTTANT)\n\n     ALPHA : Angle de rotation autour de l'axe de l'helice (de type\n             FLOTTANT)\n\n     NP    : Nombre d'elements crees entre la base et le sommet de\n             l'helice (de type ENTIER)\n\n     GEO2  : Sommet de l'helice, homeomorphe a GEO1 (POINT ou MAILLAGE\n             de type ligne ou surface )\n\n     GEO3  : MAILLAGE de la trajectoire de l'helice, de type ligne\n             surface ou volume\n\n     Remarque   :\n     ____________\n\n     Si GEO1 est un point GEO2 sera un point et GEO3 une ligne.\n\n     Si GEO1 est une ligne GEO2 sera une ligne et GEO3 une surface.\n\n     Si GEO1 est une surface GEO2 sera une surface et GEO3 un volume.",
  },
  {
    name: "@HISTOGR",
    url: "%40HISTOGR",
    documentation:
      "$$$$ @HISTOGR NOTICE  BP208322  19/08/23    21:15:01     10289          \n                                             DATE     19/08/23\n\n    Proc\u00e9dure @HISTOGR                  Voir aussi : TRAC DESS EVOL\n    ------------------                           \n\n            (EVOL2 TABL2) = @HISTOGR LREE1 (TABL1) (LOGI1)\n\n\n\n    Objet :\n    _______\n\n    Cr\u00e9ation/Trac\u00e9 de donn\u00e9es sous forme d'histogramme\n\n    \n    Commentaire :\n    _____________\n\n    LREE1 = Objet LISTREEL contenant les donn\u00e9es \u00e0 tracer. A chaque\n            valeur de cette liste sera associ\u00e9e une barre de\n            l'histogramme.\n\n    LOGI1 = Variable LOGIQUE indiquant si on veut r\u00e9cup\u00e9rer le graphe\n            sous forme d'objets EVOL2 et TABL2 (\u00e0 transmettre \u00e0 DESS)\n\n    TABL1 = Objet TABLE controlant l'apparence du graphique :\n\n          - Indice 'COUL' [MOT ou LISTMOTS]\n            = Couleur(s) des barres (d\u00e9faut='DEFA')\n\n          - Indice 'NOMS' [TABLE] \n            = Legendes affectees a chaque barre (d\u00e9faut=numero).\n\n          - Indice 'LARG' [LISTREEL] \n            = Largeurs des barres (d\u00e9faut=[0.8 ... 0.8])\n\n          - Indice 'ESPA' [FLOTTANT] \n            = Espace entre 2 barres (d\u00e9faut=0.2)\n\n          - Indice 'HPOS' [FLOTTANT]\n            = D\u00e9calage horizontal du graphique (d\u00e9faut=0.)\n\n          - Indice 'INVE' [LOGIQUE] \n            = Tracer les barres de droite \u00e0 gauche ? (d\u00e9faut=FAUX)\n\n          - Indice 'DESS' [MOT]\n            = Options pass\u00e9es \u00e0 DESS (d\u00e9faut=pas de trac\u00e9)\n              La pr\u00e9sence de ce mot-cl\u00e9 induit que @HISTOGR proc\u00e8de au\n              trac\u00e9 de l'histogramme (ind\u00e9pendemment de LOGI1)\n\n\n    Exemple :\n    _________\n\n*   Visualisation d'une distribution al\u00e9atoire gaussienne\n\n    NN = 10000 ;\n\n    LTIRAG1 = BRUI 'BLAN' 'GAUS' 0. 2. NN ;\n    LTIRAG1 = LTIRAG1 - (MASQ LTIRAG1 'INFERIEUR' 0.) ;\n    LTIRAG1 = ENTI LTIRAG1 ;\n\n    IMIN1 = MINI LTIRAG1 ;\n    NC = (MAXI LTIRAG1) - IMIN1 + 1 ;\n    LCOMPT1 = PROG NC*0. ;\n\n    REPE BLOC1 NN ;\n        IPOS1 = (EXTR LTIRAG1 &BLOC1) + 1 - IMIN1 ;\n        ICOMPT1 = EXTR LCOMPT1 IPOS1 ;\n        REMP LCOMPT1 IPOS1 (ICOMPT1 + 1.) ;\n    FIN BLOC1 ;\n\n    TOPT1 = TABL ;\n    TOPT1 . 'HPOS' = FLOT IMIN1 ;\n    TOPT1 . 'DESS' = 'GRIL AXES' ;\n\n    @HISTOGR LCOMPT1 TOPT1 FAUX ;\n    \n*   autre exemple : cf. dessin.dgibi",
  },
  {
    name: "@INCLUSI",
    url: "%40INCLUSI",
    documentation:
      "$$$$ @INCLUSI NOTICE  PASCAL    12/11/14    21:15:01     7568           \n                                             DATE     12/11/14\n\n    Procedure @INCLUSI                    Voir aussi : @P_VORO, @P_BOIT2\n    -----------------  \n    TAB2 = @INCLUSI TAB1 DPAR1 DEXC1 (DENS1) (ITRA1) ;\n\n    Objet :\n    -------\n\n    La procedure @INCLUSI maille un echantilon numerique cubique\n    d'un materiau constitue de particules spheriques de meme taille,\n    en inclusions dans une matrice.\n\n    Pour cela, elle s'appuie sur la partition de Voronoi des centres des\n    particules, obtenue a l'aide des procedures @P_VORO et @P_BOIT2.\n\n    Commentaire :\n    -------------\n\n    TAB1     = TABLE, resultat de la procedure @P_BOIT2 ;\n\n    DPAR1    = FLOTTANT, diametre des particules ;\n\n    DEXC1    = FLOTTANT, distance minimum entre centres des particules :\n               DEXC1 doit etre strictement superieure a DPAR1 ;\n\n    DENS1    = FLOTTANT, densite (taille) \"moyenne\" des elements du\n               maillage, prise egale au quart de la taille moyenne des\n               cellules de Voronoi par defaut. Toutefois, @INCLUSI\n               raffine automatiquement le maillage pour avoir au moins\n               2 elements finis dans chaque ligament de matrice, dont\n               l'epaisseur minimale est egale a (DEXC1-DPAR1) ;\n\n    ITRA1    = LOGIQUE, active des traces.\n\n    TAB2     = TABLE, sous-indicee comme suit :\n    . 'MAIL' = MAILLAGE des particules et de la matrice ;\n    . 'PART' = MAILLAGE des particules ;\n    . 'MATR' = MAILLAGE de la matrice ;\n    . 'MPT'  = MAILLAGE de points, centres des particules ;\n\n    Si PT1 est un point de TAB2 . 'MPT' alors :\n    . PT1 . 'MAIL' = maillage de la particule de centre PT1 et de la\n                     portion de matrice comprise dans la cellule de\n                     Voronoi indicee par PT1 dans TAB1 ;\n    . PT1 . 'PART' = maillage de la particule de centre PT1 ;\n    . PT1 . 'MART' = maillage de la portion de matrice ;\n    . PT1 . 'MPT'  = MAILLAGE de points, centres des particules voisines\n                     a PT1 ;\n    Si PT2 est un point de TAB2 . PT1 . 'MPT' alors :\n    . PT1 . PT2 . 'MATR' : maillage de la face commune aux sous-maillages\n                     des portions de matrice relatives aux particules de\n                     centres PT1 et PT2 dans la partition de Voronoi\n                     definie par TAB1.\n\n    Remarques :\n    -----------\n       La procedure @INCLUSI ne reussit pas toujours a generer le mail-\n    -lage demande, notamment lorsque des particules sont tangentes a une\n    face ou a une arete du cube. Pour ameliorer sa robustesse, elle\n    s'autorise a deplacer ou a aplanir legerement les particules qui\n    posent probleme. L'utilisateur en est informe par un message. Il\n    peut donc etre utile de faire une copie des affichages, en les\n    redirigeant, par exemple, dans un fichier.\n    ",
  },
  {
    name: "@INITIA",
    url: "%40INITIA",
    documentation:
      "$$$$ @INITIA  NOTICE  CHAT      11/09/12    21:16:36     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @INITIA                        Voir aussi : @STATIO\n    -----------------                          \n      \n\n\n    Objet :\n    _______\n\n Cette procedure est appelee en interne par la procedure @STATIO",
  },
  {
    name: "@INTLIN",
    url: "%40INTLIN",
    documentation:
      "$$$$ @INTLIN  NOTICE  BR232186  14/06/04    21:15:02     8064           \n                                             DATE     14/06/04\n\n     Procedure @INTLIN                        Voir aussi : @A1DDL\n     -----------------  \nY0 = @INTLIN LI1 LI2 X0;\n\n\n\n    Objet :\n    _______\n  \n  La procedure @INTLIN permet de realiser l interpolation lineaire\nd un objet X0 de type FLOTTANT sur la base de deux listes LI1 et LI2\nde type LISTREEL et renvoie un objet Y0 de type FLOTTANT.\n  \nLI1     : LISTREEL   Liste d abscisses\nLI2     : LISTREEL   Liste d ordonnees\nX0      : FLOTTANT   Objet a interpoler\nY0      : FLOTTANT   Objet interpole",
  },
  {
    name: "@ISOSURF",
    url: "%40ISOSURF",
    documentation:
      "$$$$ @ISOSURF NOTICE  CHAT      11/09/12    21:16:39     7124           \n                                             DATE     11/09/12\n\n  Procedure @ISOSURF                      Voir aussi : \n     --------------                                       \n     Syntaxe :   MAIL1 CHPF1 = @ISOSURF MASSIF0 LIS1 HANA1 ;\n\n  \n  \n\n        Objet :\n        -------\n\n    Procedure qui extrait les isosurfaces dont les valeurs sont \n    listees dans une liste de reels (LIS1) d'un champoint (HANA1) \n    appuye sur un maillage (MASSIF0).\n\n    Le resultat final est constitue du maillage surfacique\n    regroupant l'ensemble des isosurface MAIF1 et du champoint \n    CHPF1 des isovaleurs LIS1 appuyees sur MAIF1.\n\n    Postraitement TRAC CACH MAIF1 CHPF1 ;\n\n        Commentaire :\n        -------------\n\n    Entree  :\n    ---------\n    MASSIF0  : Maillage support du champoint\n\n    LIS1     : Liste (LISTREEL) d'isovaleurs a rechercher\n\n    HANA1    : Champoint appuye sur MASSIF0\n\n    Sortie  :\n    ---------\n    MAIF1    : Maillage de l'ensemble des isosurfaces\n\n    CHPF1    : Champoint des isovaleurs LIS1 appuyees sur MAIF1\n\n\n        Remarques :\n        -----------\n\n    1 - Attention la procedure utilise une elimination des points\n        doubles des isosurfaces extraites",
  },
  {
    name: "@KEFF",
    url: "%40KEFF",
    documentation:
      "$$$$ @KEFF    NOTICE  CHAT      11/09/12    21:16:42     7124           \n                                             DATE     11/09/12\n\n    Procedure @KEFF            Voir aussi: @CLIM\n    \n    -----------------\n        \n        K C D = @KEFF MODTOT MATTOT PROC AMPL0 CONV0 VISU0;\n\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2008\n    ------\n    \n    Exemple associe :     test_AMITEX.dgibi\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Determination du tenseur d'elasticite apparent a partir d\n    une microstructure,de ses parametres materiaux et d'un\n    choix de conditions aux limites. Cette\n    evaluation est realisee a partir de 6 calculs elementaires.\n    \n    Commentaires :\n    --------------\n        MODTOT : objet modele (MODEL)\n        MATTOT : champ de caracteristiques elastiques associees\n                 au modele (CHMAL)\n        PROC   : PROCEDURE utilisee pour definir les conditions\n                 aux limites, au choix:\n                 @CLPC, @CLPD, @CLDH, @CLDHC, @CLCH, @CLMI1C,\n                 @CLMI2C\n        AMPL0  : REEL definissant l'amplitude des chargements\n        CONV0  : ENTIER, definissant la convention utilisee\n                 pour decrire le tenseur de rigidite apparent\n                 0 = convention de Voigt\n                 1 = convention \"racine de 2\"\n        VISU0  : TABLE gerant les visualisations\n             VISU0 ; 1 = 0 ou 1, pour les deformees\n             VISU0 . 2 = 0 ou 1, pour les champs de contrainte\n             VISU0 . 3 = 0 ou 1, pour les champs de deformation\n\n\n        K : TABLE, tenseur apparent\n        C : TABLE, contraintes moyennes pour les 6 chargements\n        D : TABLE, deformations moyennes pour les 6 chargements\n\n       ",
  },
  {
    name: "@LACALC",
    url: "%40LACALC",
    documentation:
      "$$$$ @LACALC  NOTICE  CHAT      11/09/12    21:16:50     7124           \n                                             DATE     11/09/12\n\n    Procedure @LACALC                        Voir aussi : @LAREAD\n    -----------------  \n    DEP1 = @LACALC TAB_LAM CLIM FF (RIG2) ;\n\n\n    Objet:\n    ------\n\n    Cette procedure permet d'effectuer un calcul elastique\n   statique sur un maillage compose de plusieurs zones en\n   materiau composite multicouche.\n\n    En entree:\n\n    TAB_LAM  Table caracteristique du multicouche (TABLE)\n    CLIM     Conditions aux limites pour la structure (RIGIDITE)\n    FF       Forces (CHPOINT)\n    RIG2     Raideurs additionnelles pour les parties de la\n             structure qui ne sont pas composees par des\n             multicouches (Optionnel) (RIGIDITE)\n\n    En sortie:\n\n    DEP1     Champ de deplacement (CHPOINT)",
  },
  {
    name: "@LACRIT",
    url: "%40LACRIT",
    documentation:
      '$$$$ @LACRIT  NOTICE  CHAT      11/09/12    21:16:50     7124           \n                                             DATE     11/09/12\n\n    Procedure @LACRIT                        Voir aussi : @LAREAD\n    -----------------                                     @LASIEP  \n    TAB_CRIT = @LACRIT TAB_LAM NZON TAB_SIEP FM MOT_CRIT ;\n\n\n    Objet:\n    ------\n\n    Cette procedure permet d\'effectuer un calcul couche par\n    couche et element par element du "failure rate" relatif\n    a un des criteres suivants:\n\n                    MAXSTRESS  Maximum Stress\n                    MAXSTRAIN  Maximum Strain\n                    TSAI-WU    Tsai-Wu\n                    TSAI-HILL  Tsai-Hill\n                    HOFFMANN   Hoffmann\n\n    En entree:\n\n    TAB_LAM   Table caracteristique (TABLE)\n    NZON      Numero de l\'i-eme zone\n    TAB_SIEP  Table des contraintes et des deformations (TABLE)\n    FM        Facteur Multiplicatif des contraintes ou\n              des deformations (FLOTTANT)\n    MOT_CRIT  Mot cle pour selectionner le critere de rupture\n              (MOT)\n\n    En sortie:\n\n    TAB_CRIT  Table des "failure rates" (TABLE)',
  },
  {
    name: "@LAFAIL",
    url: "%40LAFAIL",
    documentation:
      "$$$$ @LAFAIL  NOTICE  CHAT      11/09/12    21:16:50     7124           \n                                             DATE     11/09/12\n                                           \n    Procedure @LAFAIL                        Voir aussi : @LAREAD\n    -----------------  \n    @LAFAIL TAB_LAM TAB_FAIL ;\n\n\n    Objet:\n    ------\n\n    Cette procedure permet de verifier la resistance limite\n    d'un multicouche par mise a zero des proprietes elastiques\n    des couches qui arrivent a rupture.\n\n    avec\n\n    TAB_LAM  Table caracteristique du multicouche\n    TAB_FAIL Table caracteristique pour conduire un calcul\n             de resistance pour un multicouche.\n             La table contient en entree:\n\n               Index    Description\n\n             'SOUSTYPE' MOT de valeur 'LAMINATE_FAIL'\n             'TYP_FAIL' MOT pour identifier le type de verification\n                        que nous voulons effectuer.\n                        Celui-ci peut valoir:\n                        'FPF' : First Ply Failure (Defaut)\n                        'LPF' : Last  Ply Failure\n             'ITERMAX'  ENTIER nombre maximum des iterations pour\n                        converger. (Defaut 10)\n             'PREC'     FLOTTANT indique la valeur de la\n                        precision de convergence. (Defaut 1.e-2)\n             'CLIM'     Objet RIGIDITE des conditions aux limites\n             'CHARG'    Objet CHPOINT du chargement\n             'RIG2'     Objet RIGIDITE pour une raideur\n                        additionnelle a cela du multicouche\n                        (Optionnel)\n\n             et en sortie:\n\n             'FMF'      Facteur multiplicatif du chargement pour\n                        le First Ply Failure\n             'NPF'      Indice de la premiere couche cassee\n             'NZF'      Indice de la zone a laquelle appartient\n                        la premiere couche cassee\n             'FML'      Facteur multiplicatif du chargement pour\n                        le Last Ply Failure",
  },
  {
    name: "@LAGRAPH",
    url: "%40LAGRAPH",
    documentation:
      "$$$$ @LAGRAPH NOTICE  CHAT      11/09/12    21:16:51     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAGRAPH                       Voir aussi : @LAREAD\n    ---------------                                       @LACALC  \n    TSIG = @LAGRAPH TAB_LAM DEPL1 NZON VET1 P0 ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de visualiser la variation des contraintes\n    suivant l'epaisseur par rapport a un point demande.\n\n    En entree:\n\n    TAB_LAM  Table caracteristique du multicouche\n    DEPL1    Champ des deplacements\n    NZON     Numero de la zone demandee\n    VET1     Direction d'orientation du champ des contraintes\n    P0       Point pur lequel on veut visualiser les contraintes\n\n    En sortie:\n\n    TSIG     Table des contraintes",
  },
  {
    name: "@LAKAPPA",
    url: "%40LAKAPPA",
    documentation:
      "$$$$ @LAKAPPA NOTICE  CHAT      11/09/12    21:16:51     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAKAPPA                       Voir aussi : @LAREAD\n    ------------------  \n    @LAKAPPA TAB_LAM ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de modifier les modules de cisallement\n    G13 et G23 en function du calcul des facteurs correttives de\n    la stratification des couches.\n\n    En entree\n\n    TAB_LAM   Table caracteristique du multicouche composite",
  },
  {
    name: "@LALIST",
    url: "%40LALIST",
    documentation:
      "$$$$ @LALIST  NOTICE  CHAT      11/09/12    21:16:51     7124           \n                                             DATE     11/09/12\n\n    Procedure @LALIST                        Voir aussi : @LAREAD\n    -----------------  \n    @LALIST TAB_COMP ;\n\n\n    Objet:\n    ------\n\n    Cette procedure produit une liste des caracteristiques, zone\n    par zone, des multicouches contenus dans la table de definition\n\n    En entree:\n\n    TAB_COMP  table caracteristique des multicouches composites",
  },
  {
    name: "@LAMASS",
    url: "%40LAMASS",
    documentation:
      "$$$$ @LAMASS  NOTICE  CHAT      11/09/12    21:16:51     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAMASS                        Voir aussi : @LAREAD\n    -----------------  \n    MAS1 = @LAMASS TAB_LAM ;\n\n\n    Objet :\n    -------\n\n    Cette procedure calcule les matrices de masse d'un \n    multicouche composite.\n\n    En entree\n\n    TAB_LAM   Table caracteristique du multicouche composite\n\n    En sortie\n\n    MAS1      Resultat de type RIGIDITE de sous-type MASSE.",
  },
  {
    name: "@LAMAT",
    url: "%40LAMAT",
    documentation:
      "$$$$ @LAMAT   NOTICE  CHAT      11/09/12    21:16:52     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAMAT                         Voir aussi : @LAREAD\n    ----------------  \n     TAB_MAT = @LAMAT  TAB_LAM NZONE  ;\n\n\n    Objet:\n    ------\n\n    Cette procedure permet d'avoir, selon le type d'homogeneisation\n    demande:\n    - la matrice de Hooke homogeneisee et les caracteristiques\n      equivalentes (si TAB_ZONA.'TIPO'='OMOG')\n    - les objets de type MATERIAU relatif a chaque couche excentree \n      (si TAB_ZONA.'TIPO'='MLAY')\n\n     En entree\n\n     TAB_LAM   Table des caracteristiques du multicouche \n\n     NZONE     Numero de l'i-eme zone (Entier)\n\n     En sortie\n\n     TAB_MAT   Table des objets MATERIAU ou MAHOOK et CARACTER pour\n                la i-eme zone (index MAT et CAR).",
  },
  {
    name: "@LAREAD",
    url: "%40LAREAD",
    documentation:
      "$$$$ @LAREAD  NOTICE  CHAT      11/09/12    21:16:52     7124           \n                                             DATE     11/09/12\n\n  Procedure @LAREAD                                   Voir aussi :\n    -----------------  \n    @LAREAD TAB_LAM (NUNIT) (NOM_FILE) ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de completer une table des caracteristiques\n    des multicouches a partir des donnes contenus en un fichier de\n    structure opportune.\n\n    En entree:\n\n    TAB_LAM       Table caracteristique des multicouches composites\n                  avec les informations suivantes:\n                  TAB_LAM.TIPO     : option de calcul (Mot)\n                                     MLAY ou OMOG\n                  TAB_LAM.I        : info sur la i-eme zone (Table)\n                  TAB_LAM.I.MAIL   : MAILLAGE\n                  TAB_LAM.I.FELF   : Type d'elements (ListMots)\n                  TAB_LAM.I.METRIF : Method de references (Mot)\n                                     DIRE ou RADI\n                  TAB_LAM.I.DIRRIF : Direction de references (Point)\n                  TAB_LAM.I.DIRNOR : Direction normal (Point)\n    NUNIT*ENTIER  Numero unite de laquelle lire les donnees (Defaut 2)\n    NOM_FILE*MOT  Nom du fichier sur lequel on veut effectuer\n                  la lecture (Optionnel)\n\n    En sortie:\n\n    TAB_LAM       Table caracteristique des multicouches composites\n\n    Note \n    ----\n    Pour connaitre la structure du fichier des donnes et\n    de la table TAB_LAM voir les rapports a sujet des\n    materiaux composites multicouches dans Castem 2000.",
  },
  {
    name: "@LARIG",
    url: "%40LARIG",
    documentation:
      "$$$$ @LARIG   NOTICE  CHAT      11/09/12    21:16:53     7124           \n                                             DATE     11/09/12\n\n    Procedure @LARIG                         Voir aussi : @LAMAT\n    ----------------  \n    RIG1 = @LARIG TAB_MAT ;\n\n\n    Objet:\n    ------\n\n    Cette procedure permet de calculer la matrice de raideur du\n    multicouche relatif a une zone soit dans le cas de couche\n    excentree soit dans le cas de multicouche homogeneisee.\n\n\n    En entree\n\n    TAB_MAT  Table des objets de type MATERIAU ou MAHOOK et\n             CARACTER (index MAT et CAR)\n\n     En sortie\n\n     RIG1     Objet de type RIGIDITE pour la zone consideree",
  },
  {
    name: "@LASIEP",
    url: "%40LASIEP",
    documentation:
      "$$$$ @LASIEP  NOTICE  CHAT      11/09/12    21:16:53     7124           \n                                             DATE     11/09/12\n\n    Procedure @LASIEP                        Voir aussi : @LAREAD\n    -----------------                                     @LACALC  \n    TAB_SIEP = @LASIEP TAB_LAM NZON DEP1 (MOT1) ;\n\n\n    Objet:\n    ------\n\n     Cette procedure permet de calculer couche par couche les\n     contraintes et les deformations pour une zone donnee et les\n     reporte dans le systeme de reference associe a la direction\n     de reference pour l'orthotropie (DIRRIF).\n\n    En entree:\n\n    TAB_LAM    Table caracteristique du multicouche\n    NZON       Numero de l'i-eme zone (Entier)\n    DEP1       Champ de deplacement\n    MOT1       Mot cle avec lequel on peut demander les champs\n               de contraintes et de deformations ensemble ou\n               separes.\n               Elle est optionnelle et peut valoir :\n                         'ALL' : tous le deux     (Defaut)\n                         'SIG' : contraintes seules\n                         'EPS' : deformations seules\n\n     En sortie:\n\n     TAB_SIEP   Table avec les champs de contraintes et de deformations",
  },
  {
    name: "@LAVERG",
    url: "%40LAVERG",
    documentation:
      '$$$$ @LAVERG  NOTICE  CHAT      11/09/12    21:16:53     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAVERG                        Voir aussi : @LACRIT\n    -----------------  \n    @LAVERG TAB_CRIT NPLY OEIL1 ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet d\'effectuer une verification graphique\n    du "failure rate" relatif a un des criteres de rupture.\n\n    En entree:\n\n    TAB_CRIT  Table des "failure rates" couche par couche\n              (Voir la procedure LACRIT)\n    NPLY      Numero de la couche qu\'on veut verifier\n    OEIL1     Oeil (POINT)',
  },
  {
    name: "@LAVIS",
    url: "%40LAVIS",
    documentation:
      "$$$$ @LAVIS   NOTICE  CHAT      11/09/12    21:16:53     7124           \n                                             DATE     11/09/12\n\n    Procedure @LAVIS                         Voir aussi : @LAREAD\n    ----------------  \n    @LAVIS TAB_LAM NUM_ZONA ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de montrer la stratification des couches\n    pour une zone donnee.\n\n    En entree\n\n    TAB_LAM   Table caracteristique du multicouche composite\n    NUM_ZONA  Numero de la zone a montrer.",
  },
  {
    name: "@LIREENT",
    url: "%40LIREENT",
    documentation:
      "$$$$ @LIREENT NOTICE  CHAT      11/09/12    21:17:05     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure @LIREENT                             Voir aussi :\n    ------------------  \n        ENT1 = @LIREENT  ENT2 ENT3 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet, dans une utilisation interactive,\nd'acquerir de la part de l'utilisateur un nombre entier compris\nentre deux bornes.\n    En cas d'erreur, un message apparait a l'ecran.\n\n    Commentaire :\n    _____________\n\n    ENT2  : borne inferieure (type ENTIER)\n\n    ENT3  : borne superieure (type ENTIER)\n\n    ENT1  : nombre entier obtenu  (type ENTIER)\n\n    Remarque :\n    __________\n\n    Les operandes doivent etre entres dans l'ordre indique\ndans la syntaxe.",
  },
  {
    name: "@LIRERIS",
    url: "%40LIRERIS",
    documentation:
      "$$$$ @LIRERIS NOTICE  CHAT      11/09/12    21:17:05     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure @LIRERIS                            Voir aussi :\n    ------------------  \n        LOG1 = @LIRERIS ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet, dans une utilisation interactive,\nd'acquerir de la part de l'utilisateur une reponse OUI ou NON.\n    En cas d'erreur, un message apparait a l'ecran.\n\n    Commentaire :\n    _____________\n\n    LOG1  : objet booleen (type LOGIQUE)",
  },
  {
    name: "@LISPA16",
    url: "%40LISPA16",
    documentation:
      "$$$$ @LISPA16 NOTICE  MB234859  17/10/02    21:15:01     9577           \n                                             DATE     17/10/02\n\n  Procedure @LISPA16                         Voir aussi :\n  ------------------  \n     @LISPA16 TAB1 TAB2 ;  \n\n                                   TAB1.'FAT' .'CC' .'ROO2' .'FLU' .'CT'\n                                       .'EPS' .'A316'\n                                       .'MFIS' .'MTOT' .'OBJ' .'OBJT'\n                                       .'MAT' .'MATT' . 'CAR' .'CART' \n                                       .'BLO' \n\n                                   TAB2.'DP' .'DC' .'PA' .'PB' .'CA' \n                                       .'CB'\n                                       .'DPTH' .'DCTH' .'TPSM'              \n\n\n\n\n  Objet :\n  -------\n\n  Cette procedure evalue la propagation en fatigue-fluage le long d'un \n front de fissure modelise par des elements LISP, en fonction du niveau  \n de sollicitation, en appliquant le procedure de l'Annexe A16 du RCC-MR \n (Rapport DMT 94/043).\n  Pour l'acier 316, les caracteristiques du materiau a 525\u00b0C sont deja \n rentrees dans la procedure.\n  Cette procedure a ete developpee dans le cadre d'un travail presente \n dans le rapport 94/612.\n\n\n\n  Description des arguments d'entres et de sortie :\n  -------------------------------------------------\n\n  1) Arguments d'entree :\n  -----------------------\n\n    TAB1 (type TABLE) : table contenant les donnees du materiau ( a noter\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8 que les unites sont a respecter).\n\n\n     * Pour un materiau autre que A316\n          \n      -> donnees en fatigue\n\n       TAB1.FAT.'COEFFICIENT' : coefficient C de la loi de propagation  \n                                                           n  \n                                de Paris  da/dN = C (DKeff).\n\n       TAB1.FAT.'EXPOSANT'    : exposant n de la loi de propagation \n                                                            n  \n                                de Paris   da/dN = C (DKeff) .\n                              \n       C et n sont entres pour un DKeff exprime en MPaVm et da/dN en \n       m/cycle. \n       TAB1.CC.'EPS'          : abscisses de la courbe de traction \n                                cyclique du materiau. \n\n       TAB1.CC.'SIG'          : ordonnees de la courbe de traction \n                                cyclique du materiau;\n         \n       TAB1.'ROO2'            : limite d'elasticite du materiau a 0,2%.\n\n\n     -> donnees en fluage\n\n       TAB1.FLU.'COEFFICIENT' : coefficient A de la loi de propagation en\n                                fluage  \n                                           *q\n                                da/dt = A C   .                      \n\n       TAB1.FLU.'EXPOSANT'    : exposant q de la loi de propagation en \n                                                  *q\n                                fluage da/dt = A C   .  \n\n       TAB1.CT.'EPS'          : abscisses de la courbe de traction \n                                monotone du materiau.\n\n       TAB1.CT.'SIG'          : ordonnees de la courbe de traction \n                                monotone du materiau.\n\n       TAB1.EPS.'COEFFSEC'    : coefficient C de la loi de fluage \n                                                n\n                                secondaireEpsf = 100 C sig  .\n\n       TAB1.EPS.'EXPSEC'      : exposant n de la loi de fluage secondaire\n                                                n\n                                Epsf = 100 C sig  . \n       \n                                   *\n       A et q sont entres pour un C exprime en MPam/h et un da/dt en m/h.\n       C est entre pour les contraintes exprimees en MPa.  \n\n     * Si le materiau est l'acier 316\n\n       TAB1.'A316'            : VRAI (objet de type LOGIQUE) \n\n       Cette option contient les lois de comportement necessaires au \n       calcul en fatigue-fluage pour l'acier 316 a 525\u00b0C. On a tenu \n       compte du fluage primaire et du fluage secondaire.           \n\n\n\n    TAB2 (type TABLE) : table contenant les donnees du chargement\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n       TAB2.'DP'          : objet de type CHPOINT de forces appliquees \n                            a la structure pour la contribution primaire  \n                            du chargement en fatigue.\n\n       TAB2.'DC'          : objet de type CHPOINT de forces appliquees a\n                            la structure pour le chargement complet de\n                            fatigue.\n\n       TAB2.'PA'          : objet de type CHPOINT de forces appliquees a\n                            la structure pour la contribution primaire du \n                            chargement A.\n\n       TAB2.'PB'         : objet de type CHPOINT de forces appliquees a\n                           la structure pour la contribution primaire du\n                           chargement B.\n\n       TAB2.'CA'         : objet de type CHPOINT de forces appliquees a\n                           la structure pour le chargement A complet. \n\n       TAB2.'CB'         : objet de type CHPOINT de forces appliquees a\n                           la structure pour le chargement B complet.\n\n       TAB2.'DPTH'       : objet de type CHPOINT de trmperatures \n                           appliquees a la structure pour la \n                           contribution primaire du chargement thermique.  \n\n       TAB2.'DCTH'       : objet de type CHPOINT de temperatures \n                           appliquees a la structure pour le chargement \n                           thermique complet.\n\n       TAB2.'TPSM'       : objet de type FLOTTANT. Temps de maintien du \n                           chargement (B) en fluage. \n                           Il est entre en heure.\n\n     Remarque : Selon l'Annexe A16 version2, le chargement de fatigue est\n     defini par DP = PB - PA (DC = CB - CA). S'il existe un transitoire\n     thermique T entre les etats permanents A et B alors  \n     DP = PB - PA + PT   (DC = CB - CA + CT) (PT et CT sont les champs \n     de forces associes respectivement aux champs DPTH et DCTH).\n\n\n    AUTRES ARGUMENTS OBLIGATOIRES :\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n \n       TAB1.'MFIS'      : objet de type MAILLAGE constitue par les\n                          elements LISP. \n      \n       TAB1.'MTOT'      : objet de type MAILLAGE constitue par les\n                          autres elements.\n\n       TAB1.'OBJ'       : objet de MMODEL, modele associe au maillage\n                          constitue d'elements LISP.  \n\n       TAB1.'OBJT'      : objet de MMODEL, modele associe au reste du\n                          maillage.\n\n       TAB1.'MAT'       : objet de MCHAML, materiau associe au maillage\n                          constitue d'elements LISP.  \n\n       TAB1.'MATT'      : objet de MCHAML, materiau associe au reste du\n                          maillage.\n\n       TAB1.'CAR'       : objet de MCHAML, caracteristiques associees au\n                          maillage constitue d'elements LISP.  \n\n       TAB1.'CART'      : objet de MCHAML, caracteristiques associees au\n                          reste du maillage.\n\n     Remarque : TAB1.'CAR' contient la definition geometrique de la \n     fissure au niveau de chaque element LISP. Son contenu evolue au \n     cours du calcul en fatigue-fluage.\n     Le maillage doit etre en mm.\n\n       TAB1.'BLO'       : objet de RIGIDITE contenant toutes les\n                          conditions limites de blocage pour effectuer\n                          une resolution.\n\n\n    ARGUMENTS OPTIONNELS :\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n \n       TAB1.'REACTUA'   : objet de type FLOTTANT, s'exprimant en\n                          pourcentage de la profondeur initialisee a la\n                          reactualisation precedente ( < 10% valeur par\n                          defaut).\n\n       TAB1.'ALIMIT'    : objet de type FLOTTANT, rapport a/w \n                          (a profondeur, w epaisseur de coque)\n                          maximum marquant la fin de calcul (0,7 par\n                          defaut).\n     \n       TAB1.'FATUNI'    : objet de type LOGIQUE. Si vrai on ne calcule\n                          que la contribution de la propagation par\n                          fatigue (fatigue et fluage pris en compte par\n                          defaut).\n\n       TAB1.'NBREA'     : objet de type ENTIER representant le nombre\n                          de reactualisations.\n\n       TAB1.'PROPA'     : objet de type ENTIER permettant\n                          eventuellement en fluage primaire de changer\n                          le nombre de pas de calcul durant le temps de\n                          maintien ( par defaut 500). C'est le nombre\n                          maximum entre deux reactualisations.\n\n       TAB1.'RELAX'     : objet de type LOGIQUE. Si vrai, ceci permet de \n                          tenir compte de la relaxation des contraintes\n                          au cours du temps de maintien.\n \n     Remarque : Pour le calcul de la contrainte de reference, on fait \n     appel a la procedure @SIGREF.                              \n                                \n\n\n  2) Arguments de sortie :\n  ------------------------\n\n     Ces arguments sont rajoutes dans TAB1.\n     Les tables sont indicees par le numero de reactualisation. \n\n\n    Nombre de cycles :\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n     TAB1.'EVNCY'         : table contenant le nombre total N de cycles \n                            atteint a la nieme reactualisation\n                            (N = TAB1.'EVNCY'.n).\n\n     TAB1.EVCAR.'TOTAL'   : table contenant les objets caracteristiques\n                            associes a chaque reactualisation cumulant\n                            fatigue et fluage.\n\n     TAB1.EVCAR.'FATIGUE' : table contenant seulement la contribution\n                            de fatigue.\n\n     TAB1.EVCAR.'FLUAGE'  : table contenant seulement la contribution\n                            de fluage.\n\n     Remarque : Pour ces tables, n = 0 repere l'objet caracteristique\n     initiale.  \n\n\n    Champs des efforts generalises issus des resolutions:\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n     TAB1.EVCON.'DELTSIG' : table contenant le champ des efforts issus\n                            du chargement complet de fatigue.\n\n     TAB1.EVCON.'DELTSIG1': table contenant le champ des efforts issus\n                            du chargement primaire de fatigue.\n\n     TAB1.EVCON.'CHSIG-A' : table contenant le champ des efforts issus\n                            du chargement complet A.\n\n     TAB1.EVCON.'CHSIG-A1': table contenant le champ des efforts issus\n                            du chargement primaire A.\n\n     TAB1.EVCON.'CHSIG-B' : table contenant le champ des efforts issus\n                            du chargement complet B (fluage).\n\n     TAB1.EVCON.'CHSIG-B1': table contenant le champ des efforts issus\n                            du chargement primaire B (fluage).\n\n     Remarque : Ces champs contiennent les efforts fournis par les s\n     resolution successives avec les elements LISP definis par unite \n     de longueur et par rapport a la fibre neutre du barreau sain \n     (Nzz = sigm t ; Mxx = sigb t\u00b2/6 ; t est l'epaisseur du barreau),\n     ainsi que le facteur d'intensite de contrainte KI.\n\n \n\n    Champs des parametres principaux de l'Annexe A16 ( elements LISP):\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n     TAB1.EVCON.'SDEFRAS' : table des champs de contrainte reelle pres \n                            du defaut sous chargement A.\n\n     TAB1.EVCON.'SDEFRBS' : table des champs de contrainte reelle pres \n                            du defaut sous chargement B.\n\n     TAB1.EVCON.'SDEFR'   : table des champs de contrainte reelle pres \n                            du defaut sous chargement de fatigue.\n\n     TAB1.EVCON.'VALR'    : table des champs de la valeur R, rapport des\n                            valeurs extremes que voit le defaut en chacun \n                            de ces points.\n\n     TAB1.EVCON.'VALQ'    : table des champs de la valeur Q :\n                            si R < 0    Q = (1 - 0,5 R) / (1 - R), \n                            si R > 0    Q = 1 / (1 - 0,5 R).\n\n     TAB1.EVCON.'VALPSI'  : table des champs de la valeur psi (correction\n                            de plasticite).\n \n     TAB1.EVCON.'VALKDJ'  : table des champs de la valeur kDJ(methode Js).\n\n     TAB1.EVCON.'VALDJ'   : table des champs de la valeur DJ (prenant en\n                            compte la plasticite).\n\n     TAB1.EVCON.'VALDKEFF': table des champs de la valeur DKeff\n                            (variation de la valeur efficace du facteur\n                            d'intensite de contrainte corrige).\n\n     TAB1.EVCON.'EPSILON' : table des champs de la valeur epsfluage\n                            cumulee en % (methode 4 du rapport 94/612).\n\n\n    Listes de reels des valeurs maxi au cours du temps:\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n       TAB1.'LR-NBCYT'   : liste de reels des nombres de cycles totaux.\n\n\n       TAB1.'LR-DAFAT'   : liste de reels des Da de fatigue maxi.\n \n       TAB1.'LR-DAFLU'   : liste de reels des Da de fluage maxi.\n\n\n       TAB1.'LR-ATOT1'   : liste de reels de la profondeur maxi sur \n                           tous les elements LISP due a la contribution\n                           de fatigue.\n     \n       TAB1.'LR-ATOT2'   : liste de reels de la profondeur maxi due a la\n                           contribution de fluage.\n\n       TAB1.'LR-ATOT'    : liste de reels de la profondeur maxi due aux\n                           contributions combinees de la fatigue et du \n                           fluage.\n\n       TAB1.'LR-EPFLU'   : liste de reels des epsfluage cumule maxi.\n                                                              \n       TAB1.'LR-SEFB'    : liste de reels de la contrainte sig(B)efficace\n                           maxi. \n\n\n\n    Traces:\n    \u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\u00a8\n\n       EVCHSIGB       : objet de type EVOLUTION, trace des contraintes\n                        efficaces maxi (en B).\n\n       EVDAFLU        : objet de type evolution, trace des da de\n                        fluage maxi en fonction des nombres de cycles\n                        totaux.\n\n       EVDAATOT       : objet de type evolution, trace des profondeurs\n                        maxi due aux contributions combinees de la\n                        fatigue et du fluage en fonction des nombre\n                        de cycles totaux.\n\n       EVEPFLU        : objet de type evolution, trace des epsfluage\n                        cumule maxi en fonction des nombres de cycles \n                        totaux.\n       \n      Ce sont des traces fournis par la procedure juste apes l'execution\n      (obtenus en appelant DESS avec les listes precedentes). \n\n \n ",
  },
  {
    name: "@LISSE",
    url: "%40LISSE",
    documentation:
      "$$$$ @LISSE   NOTICE  CHAT      11/09/12    21:17:06     7124           \n                                             DATE     11/09/12\n\n    Procedure @LISSE                         Voir aussi : @couple @carene\n    -----------------                                     @tole2  @tole3   \n    EVOL2 = @LISSE  EVOL1 FLOT1 FLOT2 ENT1 ENT2 ;\n\n\n    Objet :\n    _______\n\nLa procedure @LISSE effectue le lissage d'une evolution par deformation\nelastique d'une poutre. La poutre passe par les points de l'evolution\nEVOL1 donnee en entree.\n\n\n    Commentaire :\n    _____________\n\n    FLOT1   : reel donnant la rotation ( en degre) imposee a l'origine\n              de la poutre.\n              -45. < FLOT1 < 45. . SI FLOT1 > 45. il est ignore et la\n              rotation est libre.\n\n    FLOT2   : reel donnant la rotation ( en degre) imposee a\n              l'extremite de la poutre. \n              -45. < FLOT2 < 45. . SI FLOT2 > 45. il est ignore et la\n              rotation est libre.\n\n    ENT1    : entier donnant le nombre de points sur la courbe EVOL2.\n\n    ENT2    : entier donnant la direction de la poutre : 1 si la\n              poutre est suivant les abscisses et 2 si elle est situee\n              sur les ordonnees.\n\n\n\n\n    Exemple d'utilisation :\n    ________________________\n\n\n   ev = evol manu ' absci' ( prog  0.04 0.4 0.53 0.67 0.77 0.77)\n        'ordo' ( prog -0.2 -0.13 -0.08 0. 0.23 0.41);\n   evo1L = @lisse ev 50 0. 40 2;\n$$$$\n\n \n ",
  },
  {
    name: "@MATETHM",
    url: "%40MATETHM",
    documentation:
      "$$$$ @MATETHM NOTICE  CHAT      11/09/12    21:17:11     7124           \n                                             DATE     11/09/12\n\n    Procedure @MATETHM\n    ------------------\n\n    MAT1 SEC1 = @MATETHM MOD1 CHPO1 ;\n\n\n    Objet :\n    -------\n\n       La procedure @MATETHM construit le champ de caracteristiques MAT1\n    associe au modele MOD1 dans le cas d'une formulation THERMOHYDRIQUE,\n    materiau SCHREFLER, ainsi que le second membre du systeme d'equations\n    couplees associe a ce modele. La procedure @MATETHM se substitue a\n    l'operateur MATE dans le cas d'une formulation THERMOHYDRIQUE.\n\n       Elle fait appel a la procedure @SATURAT qui donne la saturation\n    en eau liquide du milieu poreux. Plus generalement, cette procedure\n    contient les caracteristiques materielles des differentes phases\n    constituant le milieu : solide poreux (beton), eau liquide et vapeur,\n    air sec. A priori, seule les caracteristiques de la phase solide sont\n    susceptibles d'etre modifiees.\n\n    Commentaire :\n    -------------\n\n    MOD1   = MMODEL, modele THERMOHYDRIQUE SCHREFLER ;\n\n    CHPO1  = CHPOINT d'inconnues primales (PG,PC,T) ;\n\n    MAT1   = MCHAML de caracteriques associes a MOD1 ;\n\n    SEC1   = CHPOINT a ajouter au second membre lors de la resolution\n             (pre-cable dans PASAPAS) ;\n\n    Remarque :\n    ----------\n\n       Le modele THERMOHYDRIQUE SCHREFLER permet de decrire le comporte-\n    -ment thermohydrique d'un milieu poreux deformable insature en eau\n    selon l'approche developpee par B.A. Schrefler et R.W.Lewis [1].\n\n\n    References :\n    ------------\n\n    [1] - R.W.Lewis et B.A. Schrefler - The Finite Element Method in the\n    Static and Dynamic Deformation and Consolidation of Porous Media,\n    Wiley (ed.), 1998 (2nd edition).",
  },
  {
    name: "@MESU",
    url: "%40MESU",
    documentation:
      "$$$$ @MESU    NOTICE  CHAT      11/09/12    21:17:15     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n  Procedure @MESU                              Voir aussi :\n     ---------------  \n     VAL1 = @MESU  GEO1 ;\n\n\n     Objet :\n     ______\n\n     Cette  procedure calcule la mesure d'un maillage :\n\n         - longueur d'une ligne\n         - aire d'une surface\n         - volume d'un massif\n\n\n     Commentaire:\n     ____________\n\n     GEO1 : maillage que l'on veut mesurer\n\n     VAL1 : mesure du maillage (type FLOTTANT)",
  },
  {
    name: "@MISTPAR",
    url: "%40MISTPAR",
    documentation:
      "$$$$ @MISTPAR NOTICE  CHAT      11/09/12    21:17:16     7124           \n                                             DATE     11/09/12\n\n  CETTE PROCEDURE A ETE MISE GRACIEUSEMENT A DISPOSITION DES UTILISATEURS\n  DU MODELE MISTRAL :\n  - PAR C. STRUB (CEA/DMT/SEMI/LEMO) pour la version 1.1 (CAST3M 2001 a 2003)\n  - puis par R. LIMON (CEA/DMN/SEMI/LCMI) et F. BENTEJAC (CEA/DM2S/SEMT/LM2S)\n    pour la version 2.0 (CAST3M 2004 a ...)\n\n  Procedure @MISTPAR                            Voir aussi :\n     ------------------  \n     PDILT    E1 E2 E3 NU12 NU23 NU13 MU12 MU23 MU13 \n     PNBRE PCOHI PECOU PEDIR PRVCE PECRX PDVDI PCROI PINCR\n       = @mistpar NOMFIC SENSIP1 SENSIP2 ;\n\n\n  Objet :\n  -----\n\n      Cette procedure peut etre utilisee avant l'appel a l'operateur 'MATE',\n      dans le cas de l'utilisation du modele MISTRAL (cf. operateur MODL), pour:\n      lire les donnees sur un fichier.\n\n  En entree :\n\n  NOMFIC      nom du fichier contenant les parametres materiau pour le\n              modele MISTRAL (type MOT).\n\n  SENSIP1     numero d'ordre de la 1ere direction de la base d'orthotropie\n              de MISTRAL dans la base d'orthotropie de CAST3M, affecte du \n              signe - s'il y a changement de sens (type ENTIER).\n\n  SENSIP2     numero d'ordre de la 2eme direction de la base d'orthotropie\n              de MISTRAL dans la base d'orthotropie de CAST3M, affecte du \n              signe - s'il y a changement de sens (type ENTIER).\n\n  En sortie :\n\n  PDILT       liste de reels contenant les parametres des fonctions \n              traduisant l'evolution des coefficients de dilatation\n              thermique en fonction de la temperature (type LISTREELS).\n\n  E1 E2 E3 NU12 NU23 NU13 MU12 MU23 MU13 :\n              coefficients d'elasticite en fonction de la temperature absolue\n              (en K) dans la base d'orthotropie de CAST3M (type EVOLUTION)\n\n  PNBRE       liste de 4 entiers en format reel contenant (type LISTREELS):\n               - les nombres de (tenseurs de) :\n                 - deformations plastiques instantanees a seuil\n                   (0 ou 1),\n                 - deformations viscoplastiques (0 a 3),\n                 - contraintes internes (0 a 3),\n               - un nombre indiquant l'existence (>0) ou non (0) de\n                 variable(s) de durcissement d'irradiation\n                 differente(s) de la fluence de neutrons rapides.\n \n  PCOHI       liste de reels contenant les parametres des fonctions \n              traduisant l'evolution des coefficients d'anisotropie\n              plastique (de Hill) en fonction de la temperature et de\n              la fluence de neutrons rapides * (type LISTREELS).\n\n  PECOU       liste de reels contenant les parametres relatifs a la loi\n              d'ecoulement ** (type LISTREELS).\n\n  PEDIR       liste de reels contenant les parametres relatifs aux \n              contraintes seuil * (type LISTREELS).\n\n  PRVCE       liste de reels contenant les parametres de la loi \n              de restauration, vieillissement et couplage au niveau\n              des deformations plastiques equivalentes * (type LISTREELS).\n\n  PECRX       liste de reels contenant les parametres relatifs aux\n              contraintes internes ***  (type LISTREELS).\n\n  PDVDI       liste de reels contenant les parametres relatifs a la variable\n              de durcissement d'irradiation * (type LISTREELS).\n\n              *     :        pour toutes les deformations plastiques\n              **    :        pour toutes les deformations viscoplastiques\n              ***   :        pour toutes les contraintes internes\n\n\n  PCROI       liste de reels contenant les parametres de la loi de croissance\n              sous irradiation (type LISTREELS).\n\n  PINCR       liste de reels contenant les increments maximaux autorises pour\n              la determination automatique du pas de temps lors de l'integration\n              des equations d'evolution des variables materiau par MISTRAL\n              (type LISTREELS).",
  },
  {
    name: "@MOD",
    url: "%40MOD",
    documentation:
      "$$$$ @MOD     NOTICE  CHAT      11/09/12    21:17:17     7124           \n                                             DATE     11/09/12\n\n     Procedure @MOD                          Voir aussi : MULT\n     -------------  \n     OBJ3 = @MOD OBJ1 OBJ2 ;\n\n\n     Objet :\n     -------\n\n     Cet operateur calcule OBJ1 modulo OBJ2.\n\n     Commentaire :\n     -------------\n\n     types possibles pour OBJ1 et OBJ2 :\n           ENTIER, FLOTTANT, LISTENTI, ou LISTREEL\n\n     OBJ3 : liste si l'un des deux arguments est une liste\n              (LISTENTI ou LISTREEL)\n            scalaire sinon (ENTIER ou FLOTTANT)\n\n            reel si l'un des deux arguments contient des reels\n              (FLOTTANT ou LISTREEL)\n            entier sinon (ENTIER ou LISTENTI)\n\n     Remarque :\n     ----------\n\n     OBJ2 doit etre strictement positif.",
  },
  {
    name: "@MODTRI",
    url: "%40MODTRI",
    documentation:
      "$$$$ @MODTRI  NOTICE  BR232186  14/06/04    21:15:02     8064           \n                                             DATE     14/06/04\n\n     Procedure @MODTRI                        Voir aussi : @A1DDL\n     -----------------  \nTAB3 = @MODTRI TAB1 TAB2;\n\n\n\n    Objet :\n    _______\n  \n  La procedure @MODTRI permet de calculer la reponse statique \n(force - deplacement) d un poteau en beton arme assimile a \nune structure a 1 DDL. La procedure @MODTRI construit une table \nresultat TAB3 a partir d une table de donnees TAB1 et d une \ntable caracterisant l etat initial des variables internes TAB2:\n  \nTAB1    : TABLE      table de donnees\n          TAB1 . 1   Pente 1 (elastique)  \n          TAB1 . 2   Pente 2 (endommagee)\n          TAB1 . 3   Pente 3 (plastique)\n          TAB1 . 4   Seuil d endommagement\n          TAB1 . 5   Seuil de plastification\n\nTAB2    : TABLE      table de variables internes initiales\n          TAB2 . 1   Endommagement lie aux deplacements positifs   \n          TAB2 . 2   Endommagement lie aux deplacements negatifs\n          TAB2 . 3   Deplacement courant\n          TAB2 . 4   Deplacement positif maximum sur l historique en temps\n          TAB2 . 5   Deplacement negatif maximum sur l historique en temps\n                  \nTAB3    : TABLE      table de variables internes finales\n          TAB3 . 1   Force   \n          TAB3 . 2   Endommagement lie aux deplacements positifs  \n          TAB3 . 3   Endommagement lie aux deplacements negatifs\n          TAB3 . 4   Deplacement positif maximum sur l historique en temps\n          TAB3 . 5   Deplacement negatif maximum sur l historique en temps\n          TAB3 . 6   Endommagement courant\n                                 \n                                 ",
  },
  {
    name: "@M_VORO",
    url: "%40M_VORO",
    documentation:
      "$$$$ @M_VORO  NOTICE  PASCAL    12/10/18    21:15:02     7532           \n                                             DATE     12/10/18\n\n    Procedure @M_VORO                     Voir aussi : @P_VORO, @P_BOIT2\n    -----------------  \n    TAB2 = @M_VORO TAB1 DENS1 (FLOT1) (ITRA1) ;\n\n    Objet :\n    -------\n\n    Procedure de maillage d'un agregat cubique de polyedres de Voronoi.\n\n    Commentaire :\n    -------------\n\n    TAB1     = TABLE, resultat de la procedure @P_BOIT ;\n\n    DENS1    = FLOTTANT, densite du maillage ;\n\n    FLOT1    = FLOTTANT, critere pour l'elimination de faces de petite\n               taille (0,3xDENS1 par defaut) ;\n\n    ITRA1    = LOGIQUE, active des traces (pour DeBogage) ;\n\n    TAB2     = TABLE, dont l'indice 'MAIL' contient le maillage de\n               l'agregat, l'indice 'ARET' celui des aretes de chaque\n               polyedre (pour traces).\n               De plus, chaque point de la partition de Voronoi sert\n               d'indice pour le maillage du polyedre qui lui est associe\n               (TAB2 . PT1 . 'MAIL', TAB2 . PT1 . 'ARET').",
  },
  {
    name: "@ORTHO",
    url: "%40ORTHO",
    documentation:
      "$$$$ @ORTHO   NOTICE  CHAT      11/09/12    21:17:29     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n         PROCEDURE MISE A JOUR PAR OF LE 09/03/2009 \n\n\n    Procedure @ORTHO                          Voir aussi : @FRENET\n    ----------------  \n  MAT1 MODL1 = @ORTHO GEO1 LIG1 CH1 CH2 ALPH1 LIST1\n                      (TYPEMOD (TYPEELT)) (PTGENE) ;\n\n\n\n    Objet :\n    _______\n\n  Cette procedure permet la creation du champ par elements des caracteristiques \nmecaniques d'un materiau orthotrope ayant une geometrie quelconque.\nLes directions d'orthotropie sont obtenues a partir du repere local d'une ligne \ndirectrice.\n\n\n    Commentaire :\n    _____________\n\n  GEO1    :  Geometrie du maillage (type MAILLAGE)\n\n  LIG1    :  Ligne directrice de la geometrie GEO1 (type MAILLAGE)\n\n  CH1     :  Champ par points du vecteur unitaire de la premiere direction \n             liee a LIG1 (type CHPOINT)\n\n  CH2     :  Champ par points du vecteur unitaire de la deuxieme direction \n             liee a LIG1 (type CHPOINT)\n\n  ALPH1   :  Angle entre CH1 et la premiere direction d'orthotropie\n             (type FLOTTANT)\n\n  LIST1   :  Liste des caracteristiques mecaniques (constantes) du materiau\n             (type LISTREEL)\n\n  TYPEMOD :  Mot-cle correspondant a la modelisation souhaitee (type MOT) :\n\n             'COMI'  modele 2D/3D COques MInces\n                      (elements finis de type COQ2, COQ3 ou DKT)\n             'COEP'  modele 3D COques EPaisses/cisaillement transverse\n                      (elements finis de type DST, COQ4, COQ6 ou COQ8)\n             'TRID'  modele massif 3D\n             'AXIS'  modele massif 2D axisymetrique\n             'FOUR'  modele massif 2D serie de Fourier\n             'PLANCONT'  modele massif 2D en contraintes planes\n             'PLANDEFO'  modele massif 2D en deformations planes\n             'PLANGENE'  modele massif 2D en deformations planes generalisees\n\n             (Par defaut, la modelisation correspond au mode de calcul massif \n              courant donne par 'VALEUR' 'MODE'.)\n\n  TYPEELT :  Mot-cle permettant de preciser (lorsque TYPEMOD vaut 'COMI') \n             l'element fini de type coque mince ('COQ3' ou 'DKT') a \n             associer aux elements TRI3 du maillage GEO1 (type MOT)\n             (Par defaut, l'element COQ3 sera utilise.)\n\n  PTGENE  :  Point support (obligatoire) dans le cas d'une modelisation 2D \n             massive ou coques minces en deformations planes generalisees\n\n  MAT1    :  Champ par elements contenant les caracteristiques du materiau \n             orthotrope (type MCHAML, sous-type CARACTERISTIQUES)\n\n  MODL1   :  Objet modele definissant le materiau orthotrope (type MMODEL)\n\n\n    Remarque 1 :\n    ____________\n\n  LIST1 doit imperativement comporter les 13 valeurs suivantes :\n\n   E1     module d'Young suivant la premiere direction d'orthotropie\n   E2     module d'Young suivant la deuxieme direction d'orthotropie\n   E3     module d'Young suivant la troisieme direction d'orthotropie\n   NU12   coefficient de Poisson\n   NU23   coefficient de Poisson\n   NU13   coefficient de Poisson\n   GR12   module de Coulomb\n   GR23   module de Coulomb\n   GR13   module de Coulomb\n   ALP1   coefficient de dilatation thermique suivant la premiere \n          direction d'orthotropie\n   ALP2   coefficient de dilatation thermique suivant la deuxieme \n          direction d'orthotropie\n   ALP3   coefficient de dilatation thermique suivant la troisieme \n          direction d'orthotropie\n   RHO    masse volumique\n\n   (Mettre des 0. aux valeurs inutiles pour la modelisation consideree.)\n\n    Remarque 2 :\n    ____________\n\n  Dans le cas d'un probleme comprenant des modelisations de type coques \nminces, coques epaisses et massives, il faut faire appel a la procedure \n@ORTHO pour chaque modelisation consideree. Le maillage GEO1 peut etre  \nforme de plusieurs types d'elements de meme type (massifs ou coques).\n\n    Remarque 3 :\n    ____________\n\n  Les champs par points CH1 et CH2 peuvent etre obtenus en appliquant \nla procedure @FRENET a la ligne de maillage LIG1.\n\n    Remarque 4 :\n    ____________\n\n  La procedure @ORTHO remplace l'appel aux deux operateurs MODL et MATE. \nLa liste des caracteristiques d'orthotropie est donnee dans la notice de \nl'operateur MATE pour chaque type de materiau.",
  },
  {
    name: "@OTCOQUE",
    url: "%40OTCOQUE",
    documentation:
      "$$$$ @OTCOQUE NOTICE  CHAT      11/09/12    21:17:29     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure @OTCOQUE                         Voir aussi :\n    ------------------  \n   LREEL1 DEP1 = @OTCOQUE FLOT1 ENTI1 FLOT2 FLOT3 FLOT4\n                          TAB1  TAB2\n                          FORC1 RIG1 P1;\n                          \n\n    Objet :\n    ________\n\n    Cette procedure qui s'utilise en mode interactif, permet\n d'optimiser les couches d'une structure de type coque ou plaque\n selon la methode du FULL-STRESS-DESIGN.\n\n\n    Commentaires :\n    ______________\n\n    LREEL1 :  liste contenant les couches des zones\n              (type LISTREEL)\n\n    DEP1   :  champ de deplacements de la structure optimisee\n              (type CHPOINT)\n\n    FLOT1  :  critere de convergence pour le sigma equivalent\n              (type FLOTTANT)\n\n    ENTI1  :  nombre maximum d'iterations (type ENTIER)\n\n    FLOT2  :  couche initiale de la structure, valeur identique pour\n              toutes les zones (type FLOTTANT)\n\n    FLOT3  :  valeur maximale du sigma equivalent, calculee en\n              fonction de l'operateur VMIS (type FLOTTANT)\n\n    FLOT4  :  epaisseur minimale acceptable (type FLOTTANT)\n\n    TAB1   :  table contenant pour la i-eme zone l'objet relatif\n              MMODL (type TABLE),TAB1.I (type MMODL), I (type ENTIER)\n\n    TAB2   :  table contenant pour la i-eme zone l'objet relatif\n              avec les caracteristiques du materiau (type TABLE),\n              TAB2.I (type MCHAML), I (type ENTIER)\n\n    FORC1  :  champ de forces (type CHPOINT)\n\n    RIG1   :  rigidite associee aux liaisons et a la partie de la\n              structure qui n'a pas subi d'optimisation (type\n              RIGIDITE),\n\n    P1     :  point de vue pour les traces.\n\n\n    Note :\n    ______\n\n    - La methode ne donnera un resultat optimal d'un point de\n vue mathematique que pour les structures isostatiques.\n    - Il faut diviser la structure en zones a l'interieur desquelles\n l'epaisseur est supposee uniforme.\n    - La convergence peut etre controllee par un parametre qui \n est appele interactivement a chaque iteration; il a pour fonction\n la reduction ou l'amplification de la variation des epaisseurs\n evaluee a chaque iteration sur la base du rapport entre \n le sigma equivalent maximum de la zone et le sigma equivalent \n optimal.\n      ",
  },
  {
    name: "@OTPOUT",
    url: "%40OTPOUT",
    documentation:
      "$$$$ @OTPOUT  NOTICE  CHAT      11/09/12    21:17:30     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure @OTPOUT                             Voir aussi :\n    ------------------  \n    TAB1 DEP1 = @OTPOUT FLOT1 ENTI1 FLOT2 FLOT3 FLOT4  FLOT4 FLOT5\n                        TAB2  TAB3\n                        FORC1 RIG1 TAB4;\n                        \n\n    Objet :\n    _______\n\n    Cette procedure,qui s'utilise en mode interactif, permet\n d'optimiser les hauteurs et les bases de modeles de poutres\n a section rectangulaire selon la methode du FULL-STRESS-DESIGN.\n\n\n    Commentaires :\n    ______________\n\n    TAB1   :  objet de type TABLE; TAB1.I (type LISTREEL) pour la i-eme\n              zone fournit une liste contenant les valeurs de base,\n              hauteur et surface de la section, resultat de l'optimisation\n              I (type ENTIER),\n\n    DEP1   :  champ de deplacement de la structure optimisee\n              (type CHPOINT),\n\n    FLOT1  :  critere de convergence pour le sigma equivalent\n              (type FLOTTANT),\n\n    ENTI1  :  nombre maximum d'iterations (type ENTIER),\n\n    FLOT2  :  base initiale des poutres de la structure, valeur \n              identique pour toutes les zones (type FLOTTANT),\n\n    FLOT3  :  hauteur initiale des poutres de la structure, valeur\n              identique pour toutes les zones (type FLOTTANT),\n\n    FLOT4  :  valeur optimale du sigma equivalent, calcule\n              a partir des efforts flexionnels et membranaires \n              normaux (type FLOTTANT),\n\n    FLOT5  :  plus petite dimension acceptable pour la poutre\n              (type FLOTTANT),\n\n    TAB2   :  table contenant pour la i-eme zone l'objet relatif\n              MMODL (type TABLE),TAB2.I (type MMODL), I (type ENTIER),\n\n    TAB3   :  table contenant pour la i-eme zone l'objet relatif\n              avec les caracteristiques du materiau (type TABLE),\n              TAB3.I (type MCHAML), I (type ENTIER),\n\n    FORC1  :  champ de forces (type CHPOINT),\n\n    RIG1   :  rigidite associee aux liaisons et a une partie\n              de la structure n'ayant pas subi d'optimisation\n              (type RIGIDITE),\n\n    TAB4   :  table contenant pour la i-eme zone le vecteur relatif\n              pour l'orientation des axes locaux (type TABLE),\n              TAB4.I (type POINT), I (type ENTIER),\n\n\n    Note :\n    ______\n\n    - La methode ne donnera un resultat optimal, d'un point de vue\n mathematique, que pour les structures isostatiques.\n    - If faut diviser la structure en zones a l'interieur desquelles les\ndimensions des poutres sont supposees uniformes.\n    - La convergence peut etre controllee par un parametre qui \n est appele interactivement a chaque iteration; il a pour fonction\n la reduction ou l'amplification de la variation des epaisseurs\n evaluee a chaque iteration sur la base du rapport entre \n le sigma equivalent maximum de la zone et le sigma equivalent \n optimal.",
  },
  {
    name: "@PALETTE",
    url: "%40PALETTE",
    documentation:
      "$$$$ @PALETTE NOTICE  BP208322  20/07/02    21:15:01     10633          \n                                             DATE     20/07/02\n\n\n    Procedure @PALETTE   \n    ------------------\n    \n    LMOT1 = @PALETTE NCOUL1;\n    \n    Objet :\n    -------    \n    Cette procedure construit une palette de noms de couleurs Cast3M\n    pour leur application a des evolutions par exemple.    \n    \n    Entrees :\n    ---------    \n    NCOUL1   : nombre de couleurs (type ENTIER) compris entre 1 et 20\n\n    Sorties :\n    ---------    \n    LMOT1    : LISTMOTS compose de NCOUL couleurs differentes.\n    \n    Exemple :\n    ---------       \n    ...\n    evol1  = COUL evol1 (@PALETTE (DIME evol1));\n    DESS evol1;\n    ...\n    \n    ",
  },
  {
    name: "@PASHIST",
    url: "%40PASHIST",
    documentation:
      "$$$$ @PASHIST NOTICE  CHAT      11/09/12    21:17:33     7124           \n                                             DATE     11/09/12\n\n\n\n    Procedure @PASHIST                               voir aussi : HIST\n    --------------\n\n    LRE1     = @PASHIST MOD1 CHAM1 | (MOT1)  | ;\n                                   | (LMOT1) |\n\n    Objet :\n    _______\n\n    La procedure @PASHIST determine une plage d'echantillonnage des\nvaleurs du champ CHAM1 (objet LISTREEL) a passer en argument de\nl'operateur HIST.\n\n    Commentaire :\n    _____________\n\n    MOD1   : modele (de type MMODEL) ;\n\n    CHAM1  : champ par elements (de type MCHAML) ;\n\n    MOT1   : nom de la composante de CHAM1 a traiter (de type MOT) ;\n\n    LMOT1  : nom de(s) la composante(s) de CHAM1 a traiter (de type\n             LISTMOTS).",
  },
  {
    name: "@PLOTPRI",
    url: "%40PLOTPRI",
    documentation:
      "$$$$ @PLOTPRI NOTICE  CHAT      11/09/12    21:17:38     7124           \n                                             DATE     11/09/12\n    \n    Procedure @PLOTPRI                       Voir aussi : @B_TPO2D\n    ------------------  \n    @PLOTPRI  SIG1 MODE1 ;\n\n\n    Objet :\n    ________\n\n    Cette procedure qui s'utilise en mode interactif permet de\n tracer un champ vectoriel de contraintes principales, ainsi\n que le champ de contraintes equivalentes de Von Mises qui lui\n correspond.\n\n\n    Commentaire :\n    __________\n\n    SIG1   :   champ de contraintes (type MCHAML)\n\n    MODE1  :   objet modele relatif au champ (type MMODEL)\n\n\n    Note :\n    ______\n\n    Les fleches rouges correspondent a une contrainte principale\n de traction tandis que les vertes correspondent a une contrainte\n de compression.  \n Cette procedure ne peut s'utiliser qu'en 2D.",
  },
  {
    name: "@POINTIR",
    url: "%40POINTIR",
    documentation:
      "$$$$ @POINTIR NOTICE  PASCAL    12/10/18    21:15:02     7532           \n                                             DATE     12/10/18\n\n\n    Procedure @POINTIR\n    ------------------\n\n  PTS1 = @POINTIR | 'UNIF' N1                | (MAIL1) ('PINI' PTS2) ...\n                  | 'EXCL' N1 'SPHE' R1 (N2) |\n\n     ... ('GERM' | 'AUTO' | ) ;\n                 | IGER1  |\n\n    Objet :\n    _______ \n\n      La procedure @POINTIR realise un maillage de points (POI1)\n    repartis aleatoirement selon une distribution uniforme (option UNIF)\n    ou selon un processus d'exclusion (option EXCL) dans le domaine\n    defini par le maillage MAIL1 ou, par defaut, dans le domaine unite.\n    En 2D, le domaine unite est un carre de cote 1 centre sur le point\n    de coordonnees (0,5;0,5) ; en 3D, il s'agit d'un cube de cote 1\n    centre sur le point de coordonnees (0,5;0,5;0,5).\n\n    Commentaire :\n    _____________\n\n    'UNIF'    = Mot cle pour une distribution uniforme de points.\n\n    'EXCL'    = Mot cle pour une distribution generee selon un processus\n                \"d'exclusion\" : chaque point de la distribution est a\n                une distance minimale R1 des autres.\n\n    N1        = Objet de type ENTIER : nombre de points a generer.\n                Dans le cas de l'option EXCL, en fonction de la dis-\n                -tance R1 d'exclusion, il est possible que le processus\n                n'arrive pas a generer le nombre de points demande.\n\n    'SPHE'    = Mot cle indiquant que la zone d'exclusion autour des\n                points est une sphere (cercle en 2D) centree sur ces\n                points.\n\n    R1        = Objet de type FLOTTANT : rayon de la zone d'exclusion.\n\n    N2        = Objet de type ENTIER : nombre d'iterations du processus\n                d'exclusion pour placer les N1 points demandes.\n                Par defaut, N2 est egal a 25*N1.\n                \n    MAIL1     = Objet de type MAILLAGE (surface en 2D, volume en 3D) :\n                defini le domaine dans lequel sont tires les points.\n\n    'PINI'    = Mot cle indiquant la donnee de points initiaux.\n\n    PTS2      = Objet MAILLAGE de type POI1 : points initiaux, utiles\n                uniquement dans le cas de l'option 'EXCL'.\n                N.B. : Ces points ne sont pas inclus dans PTS1 en\n                       sortie de la procedure.\n\n    'GERM'    = Mot cle indiquant la donnee d'un nouveau germe.\n\n    'AUTO'    = Modification automatique du germe par congruence : le\n                germe, stocke dans le fichier /tmp/germe, est modifie\n                a chaque appel de @POINTIR avec l'option 'AUTO'.\n\n    IGERM1    = Indice d'initialisation du generateur de nombres\n                aleatoires.\n\n    PTS1      = Objet de type MAILLAGE : maillage de POI1.",
  },
  {
    name: "@POLO",
    url: "%40POLO",
    documentation:
      "$$$$ @POLO    NOTICE  CHAT      11/09/12    21:17:40     7124           \n                                             DATE     11/09/12\n\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n  Procedure @POLO                           Voir aussi :\n     ---------------  \n     TABCHB TAB2 = @POLO TAGEO1 TABOB1 ( PL1 ) ;\n     \n\n\n  Objet :\n  -----\n\n  Calcul d'un champ magnetique poloidal genere par un ensemble\n  de bobines.\n\n\n  En entree :\n\n  TAGEO1        table contenant (type TABLE)            \n     i          objet geometrique ou l'on veut calculer le\n                champ magnetique (type MAILLAGE)\n\n  TABOB1        table a deux indices contenant les donnees\n                relatives aux bobines (type TABLE)\n                - 1er indice :\n     i          numero de la bobine (type ENTIER)\n                - 2eme indice (pour chaque bobine) :\n     COUL       couleur de la bobine (voir palette dans COUL)\n     RI         rayon interne (type FLOTTANT)\n     RE         rayon externe (type FLOTTANT)\n     H          hauteur de la section (type FLOTTANT)\n     C          centre de la section (type POINT)\n     V          vecteur normal a la section (type POINT)\n     SOL        solenation : courant global dans la bobine =\n                courant * nombre de spires (type FLOTTANT)\n                + options facultatives (en 1er indice) :\n     TRAC1      si existe : trace du maillage des bobines\n     TRAC2      si existe : trace du contour des bobines dans\n                        les plans de coupe                      \n\n  PL1           table a deux indices contenant la definition\n                des plans de coupe (facultative / type TABLE)\n                - 1er indice :\n     i          numero du plan (type ENTIER)\n                - 2eme indice (deux possibilites) :     \n                1/ pour definir chaque plan :           \n     PP         point quelconque du plan (type POINT)\n     VP         vecteur normal (type POINT)\n                2/ pour reprendre un contour deja calcule :\n     MAIL       contour des bobines dans un plan de coupe\n                (type MAILLAGE)                         \n\n  En sortie :\n\n  TABCHB        table contenant (type TABLE)            \n     i          champ de Biot et Savart relatif au i-eme\n                maillage GEO1 (type CHPOINT)\n\n  TAB2          table contenant (type TABLE)\n  BOBMAI.i      maillage de chaque bobine i (type MAILLAGE)\n  LIG.j         ensemble des coupes sur le plan j\n                (type MAILLAGE)\n  CHBLIG.j      champ magnetique relatif au maillage LIG.j\n                (type CHPOINT)\n                                                        \n  Remarques :\n\n  Les grandeurs suivantes sont \"en dur\" dans la procedure :\n                                                        \n  NELE          nombre elements generes lors des rotations\n                effectuees pendant la creation du maillage des\n                bobines                                 \n  COEF1         coefficient etablissant la distance critique\n                de selection des points lors de la recherche\n                de contour                              ",
  },
  {
    name: "@POMI",
    url: "%40POMI",
    documentation:
      "$$$$ @POMI    NOTICE  CHAT      11/09/12    21:17:40     7124           \n                                             DATE     11/09/12\n\n\n        CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n       A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n  PAR  DELERUYELLE F.   (SOCOTEC-INDUSTRIE a l'IPSN/DES)\n\n  Procedure @POMI                            Voir aussi :\n      ---------------  \n      TCN PN  =  @POMI  F1 N (PAS1) (IDEM) ;\n                                                                         \n\n                                                                         \n      Objet :                                                            \n      ______\n                                                                         \n      Cette procedure determine le polynome Pn(x) de degre n le plus\n      'proche' d'une fonction f(x) donnee. Il s'agit en fait du polynome\n      de degre n minimisant :\n                                    2    /b              2\n                              D(f,Pn) = /  [f(x) - Pn(x)] . dx\n                                       /a\n\n      On peut s'en servir pour faire du lissage, ou pour approcher une\n      fonction 'experimentale' (donnee point par point) par une expres-\n      sion analytique.\n\n      Commentaires :\n      _____________\n                                                                         \n      F1     : fonction f(x) qu'on cherche a approcher par un polynome.\n               (type EVOLUTION).\n                                                                         \n      N      : degre du polynome Pn(x) recherche (type ENTIER).\n               Il doit etre superieur ou egale a 1 .\n                                                                         \n      PAS1   : pas du decoupage sur l'axe des abscisses de l'evolution\n               visualisant le polynome recherche Pn(x).\n               Facultatif, la valeur par defaut est detaillee en remarque.\n               (type FLOTTANT).\n\n      IDEM   : mot cle facultatif indiquant qu'on veut sur l'evolution\n               visualisant le polynome recherche Pn(x) les meme abscisses\n               que sur l'evolution visualisant la fonction f(x).\n               (type MOT).\n                                                                         \n      TCN    : table indexee par des entiers donnant les coeficients du\n               polynome Pn(x) recherche     (type TABLE).\n                                                        2            n\n                           Si:  Pn(x) = a0 + a1.x + a2.x + ... + an.x\n                        Alors:   a0 = TCN.0\n                                 a1 = TCN.1\n                                   ...\n\n      PN     : evolution visualisant le polynome Pn(x) recherche.\n               (type EVOLUTION).\n\n\n      Exemple :\n      ________\n\n      xx = prog 50.  100. 200. 300. 400. 500. ;\n      yy = prog 2.37 2.06 1.74 161  1.42 1.2 ;\n      f0 = evol blan manu 'XX' xx 'YY' yy;\n      ta f1 = @POMI f0 5 ;\n      list ta;\n      dess (f0 et f1);\n\n      Remarques :\n      __________\n\n      1) La procedure a besoin d'etre en dimension 2 ou 3 pour resoudre.\n         Si ca n'est pas le cas, elle passe automatiquement en dimension\n         2 et y reste en vue d'utilisations ulterieures.\n\n      2) Le polynome Pn(x) obtenu ne passe que rarement aux memes points\n         que la fonction f(x). Mais il est le plus proche de la fonction\n         f(x) au sens de la 'distance' D(f,Pn) definie plus haut.\n         Pn(x) n'est pas un polynome de degre n passant par des points\n         donnes, car ce genre de polynome oscille generalement beaucoup.\n\n      3) La fonction f(x) n'est connue que par son evolution F1 .\n         Le calcul est base sur une formule analytique qui suppose que la\n         fonction f(x) varie lineairement entre ces points connus.\n\n      4) Le pas PAS1, s'il n'est pas fournis, est calcule comme suit :\n         On considere A et B les extremites du domaine de definition de\n         f(x), NBP le nombre de points de f(x), et :\n                     PAS1 = ((B-A)/(NBP-1)) / 4.\n         Ce pas ne sert qu'a fournir l'evolution PN . Il n'influe pas\n         sur le calcul des coefficients du polynome.\n\n      5) Le polynome Pn(x) va necessairement avoir une limite infini au\n         voisinage de l'infini. Il serait dangereux de s'en servir pour\n         extrapoler une fonction connue point par point.\n\n\n\n ",
  },
  {
    name: "@P_BOIT2",
    url: "%40P_BOIT2",
    documentation:
      "$$$$ @P_BOIT2 NOTICE  PASCAL    12/10/18    21:15:02     7532           \n                                             DATE     12/10/18\n\n    Procedure @P_BOIT2                     Voir aussi : @P_VORO, @M_VORO \n    -----------------  \n    TAB2  = @P_BOIT2 TAB1 (IVISU1) ;\n\n    Objet :\n    -------\n\n       Procedure determinant l'intersection d'un maillage de polyedres\n    de Voronoi construit par la procedure @P_VORO avec le cube de cote 1\n    et dont les 3 plans de base sont X=Y=Z=0. @P_BOIT2 utilise la pro-\n    -cedure @COUPLAN, contrairement a @P_BOIT.\n\n    Commentaire :\n    -------------\n\n    TAB1     = TABLE, resultat de la procedure @P_VORO ;\n\n    IVISU1   = LOGIQUE, active des traces (pour DeBogage) ;\n\n    TAB2     = TABLE, dont l'indice 'MAV' contient le maillage des\n               aretes des polyedres.\n               De plus, chaque point de la partition de Voronoi sert\n               d'indice pour le maillage des aretes du polyedre associe\n               (TAB2 . PT1 . 'MAV').\n\n    Remarque : Fait appel aux procedures @COUPLAN.",
  },
  {
    name: "@P_VORO",
    url: "%40P_VORO",
    documentation:
      "$$$$ @P_VORO  NOTICE  PASCAL    12/10/18    21:15:02     7532           \n                                             DATE     12/10/18\n\n    Procedure @P_VORO                     Voir aussi : @P_BOIT2, @M_VORO\n    -----------------  \n    TAB1 = @P_VORO MPOI1 (FLOT1) (ILOG1) ;\n\n    Objet :\n    -------\n\n       Construit la partition de Voronoi d'un ensemble de points\n    (maillage de POI1). S'appuie sur une triangulation de cet ensemble\n    de points dans une boite de dimension finie, ce qui permet de\n    construire les polyedres associes aux points situes sur leur\n    enveloppe convexe.\n\n    Commentaire :\n    -------------\n\n    MPOI1    = MAILLAGE, nuage de points (POI1) ;\n\n    FLOT1    = FLOTTANT, rapport de la taille de la boite de triangu-\n               -lation sur la dimension du nuage de points ;\n\n    ILOG1    = LOGIQUE, mettre a VRAI pour activer TRAC ;\n\n    TAB1     = TABLE, dont chaque indice est un point de MPOI1, dont\n               le sous-indice 'MAV' contient le Maillage des Aretes du\n               polyedre de Voronoi associe a ce point et le sous-indice\n               'MPT' celui des Points de la Triangulation adjacents a\n               chaque face de ce polyedre.\n               De plus, l'indice 'MAV' de la table contient le Maillage\n               des Aretes de tous les polyedres et l'indice 'MPT' le\n               maillage MPOI1.",
  },
  {
    name: "@RAYO",
    url: "%40RAYO",
    documentation:
      "$$$$ @RAYO    NOTICE  CHAT      11/09/12    21:17:51     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure @RAYO                           Voir aussi :\n    ---------------  \n    ST SINT L1EXT L2EXT L3EXT L4EXT LEVD LEVG = @RAYO PF P1 NBC;\n\n\n\n    Objet :\n    _______\n\nCette procedure cree un maillage rayonnant symetrique autour de la \npointe de fissure. La zone centrale entourant la pointe de fissure\nest maillee en TRI6, les NBC-1 autres zones etant maillees en QUA8.\nAfin de pouvoir distinguer les parties infirieures et supirieure de la\nzone (en cas de fissure dans une interface par exemple), la couleur \nrouge est affectie a la partie gauche du maillage et la couleur jaune a\nla partie droite (la gauche et la droite etant definies par rapport a \nun observateur place en pointe et regardant la fissure).\n\n\n    Sorties :\n    _______\n\n    ST      : MAILLAGE de la zone rayonnante\n\n    SINT    : MAILLAGE de la zone centrale (maillee en TRI6)\n\n    L1EXT   : MAILLAGEs des frontieres exterieures de ST (un par\n    L2EXT     quart de cercle depuis la levre gauche vers la levre\n    L3EXT     droite de la fissure.\n    L4EXT     \n\n    LEVD    : MAILLAGE de la levre droite de la fissure  \n\n    LEVD    : MAILLAGE de la levre gauche de la fissure  \n\n    Commentaire :\n    _____________\n\n    PF      : pointe de la fissure (type POINT)\n\n    P1      : point correspondant a l'extremite de la zone rayonnante\n              sur la levre de la fissure (type POINT)\n\n    NBC     : nombre de couronnes demande (type ENTIER)",
  },
  {
    name: "@RCCM",
    url: "%40RCCM",
    documentation:
      "$$$$ @RCCM    NOTICE  CHAT      11/09/12    21:17:52     7124           \n                                             DATE     11/09/12\n \n  Procedure @RCCM                            Voir aussi :\n     ---------------  \n      \n\n \n \n     @RCCM TABCOUP TABETAT TABGROU TABFATI ;\n \n \n     Objet :\n     _______\n \n     Le RCC-M definit un ensemble de regles techniques de conception\n     et de construction des materiels mecaniques d'un ilot nucleaire.\n\n     Ces regles visent a assurer aux materiels auxquels elles \n     s'appliquent des securites vis a vis de differents types de\n     dommages :\n     - deformation excessive,\n     - instabilite,\n     - deformation progressive,\n     - fatigue,\n     - rupture brutale.\n         \n\n     Le dossier d'analyse du comportement pour tout appareil construit\n     justifie que certains criteres (du volume B 3200 du rccm,\n     princpalement, dits de niveaux 0, A, C et D, correspondant a\n     differentes situations de fonctionnement, ainsi que les criteres\n     applicables a l'epreuve hydraulique) soient respectes pour des\n     chargements precises dans une specification d'equipement.\n     Ces criteres conduisent a l'analyse des contraintes sur des\n     segments d'appui (appeles coupes), normaux a la surface mediane\n     d'une paroi ou conduisant au chemin le plus court entre les 2 faces\n     de la paroi dans les zones de discontinuite.\n\n\n     Les contraintes analysees sont principalement les :\n\n     - contrainte totale      : c'est la valeur atteinte en un point de\n                                la paroi par une contrainte, sous \n                                l'effet de l'ensemble des actions\n                                auxquelles est soumis l'appareil.\n\n     - contrainte de membrane : pour un tenseur de contraintes, de\n                                composantes sij, le tenseur de\n                                contrainte de membrane est le tenseur sm\n                                dont les composantes (sij)m sont egales\n                                a la valeur moyenne des contraintes sij\n                                le long du segment d'appui.\n\n     - contrainte de flexion  \n       linearisee             : c'est la difference, en tout point du\n                                segment d'appui, du tenseur s linearise \n                                (sl) et du tenseur sm : \n                                (sij)f = (sij)l - (sij)m .\n\n     Ces contraintes sont ensuite differenciees, suivant les\n     redistributions par plasticite qu'elles peuvent entrainer, en\n     contraintes :\n     - primaire   : fraction de la contrainte totale qui ne peut \n                    disparaitre du fait d'une faible deformation\n                    permanente. Ces contraintes sont essentiellement les\n                    contraintes de membrane et parfois les contraintes\n                    de flexion.\n     - secondaire : fraction de la contrainte totale qui peut\n                    disparaitre en consequence d'une faible deformation\n                    permanente, deduction faite des contraintes de\n                    pointe. Ces contraintes sont essentiellement les\n                    contraintes thermiques et les contraintes de flexion\n                    au voisinage d'une discontinuite majeure.\n     - de pointe  : le tenseur des contraintes de pointe en un point est\n                    la difference entre le tenseur des contraintes\n                    totales et le tenseur correspondant a la \n                    distribution linearisee de meme moment et meme\n                    valeur moyenne.\n \n     Dans le cadre de l'analyse elastique, il est fait appel au critere\n     de plasticite de Tresca , la contrainte significative a prendre en\n     compte etant egale a la difference entre la plus grande et la plus\n     petite des trois contraintes principales prises algebriquement, les\n     contraintes de tension etant considerees comme positives et les\n     contraintes dec compression comme negatives. Elle est appelee\n     \"contrainte equivalente de Tresca\".\n\n\n     Les criteres de contrainte a respecter sont principalement les :\n\n     - critere de niveau 0 en situation de premiere categorie, dite de\n       reference (situation dans laquelle se trouverait le materiel s'il\n       etait soumis a des actions constantes dans le temps definies a\n       partir des actions les plus severes auxquelles est soumis \n       l'appareil lorsqu'il se trouve dans la situation de 2eme\n       categorie), visant a premunir le materiel contre les dommages de\n       deformation excessive, d'instabilites plastique, elastique et\n       elastoplastique :\n       . la contrainte equivalente primaire de membrane generale est\n         limitee a Sm,\n       . la contrainte equivalente primaire de membrane locale est\n         limitee a 1,5 Sm,\n       . la contrainte equivalente primaire de membrane + flexion est\n         limitee a 1,5 Sm,\n       (Sm : contrainte equivalente admissible donnee dans le RCCM-M\n       pour les differents materiaux. Ici elle prise a la temperature de\n       calcul).\n\n     - critere de niveau A en situation de deuxieme categorie\n       (situation dans laquelle peut se trouver le materiel en cours du\n       fonctionnement normal, en marche continue, regimes transitoires,\n       incidents courants) visant a premunir le materiel contre les\n       deformations progressives et de fatigue (fissuration\n       progressive) :\n       . l'amplitude de variation de la somme des contraintes\n         linearisees, primaires et secondaires, (notee Sn) determinee\n         sur les peaux doit etre limitee a 3 Sm. Si cette limite est\n         depassee, l'analyse peut etre poursuivie par la methode\n         d'analyse elastoplastique simplifiee, a condition que le\n         depassement ne soit du qu'aux contraintes de flexion d'origine\n         thermique,\n       . en cas du depassement des 3 Sm, une analyse elastoplastique\n         simplifiee doit satisfaire aux exigences suivantes :\n         * l'amplitude de variation (notee Sn*) determinee a partir de\n           la somme des contraintes linearisees, primaires +\n           secondaires, a l'exclusion des contraintes de flexion\n           d'origine thermique, est limitee a 3 Sm,\n         * les exigences relatives au rochet thermique doivent etre\n           verifiees,\n         * un facteur de concentration elastoplastique (Ke) doit etre\n           introduit au sein des analyses en fatigue :\n           Ke = 1,0                        pour Sn <= 3Sm\n                       1-n      Sn\n           Ke = 1,0 + ------ ( --- - 1)    pour 3Sm < Sn < 3mSm \n                      n(m-1)   3Sm\n                1\n           Ke = -                          pour Sn >= 3mSm\n                n\n          avec :\n                                            __________________________\n                                            |     |     |             |\n                                            |  m  |  n  | Temperature |\n                                            |     |     |  maximale   |\n          __________________________________|_____|_____|_____________|\n          | Acier faiblement allie          | 2,0 | 0,2 |    370 dC   |\n          | Acier inoxydable martensitique  | 2,0 | 0,2 |    370 dC   |\n          | Acier au carbone                | 3,0 | 0,2 |    370 dC   |\n          | Acier inoxydable austenitique   | 1,7 | 0,3 |    430 dC   |\n          | Alliage fer_nickel_chrome       | 1,7 | 0,3 |    430 dC   |\n          |___________________________________________________________|\n\n         NOTA :  Depuis juin 1994, le rccm propose en plus une autre\n         ------  formulation pour le calcul du facteur \"Ke\" de\n                 concentration elastoplastique (qui peut etre defini\n                 comme etant le rapport entre l'amplitude de deformation\n                 reele a l'amplitude de deformation fictive determinee\n                 par l'analyse elastoplastique).\n                 Cette nouvelle formulation est basee sur une partition\n                 de \"Ke\" en termes mecaniques et thermiques des\n                 contraintes qui n'est pas progammee ici, dans la\n                 version actuelle de @RCCM.\n\n       . la verification de la resistance au dommage de fatigue d'un\n         materiel soumis a des evolutions dans le temps des\n         sollicitations de nature mecanique ou thermique doit etre\n         effectuee,\n\n     - critere de niveau C en situation de troisieme categorie\n       (situation exceptionnele dans laquelle peut se trouver le\n       materiel dans des circonstances accidentelles tres peu frequentes\n       mais dont l'eventualite doit etre envisagee), visant a premunir\n       le materiel contre les memes dommages que les criteres de niveau\n       0, mais avec des marges de securite plus faibles :\n       . memes criteres que pour le niveau 0, mais Sm est remplacee par\n         1,2 Sm (Celle-ci etant prise a la temperature maximale atteinte\n         au cours de la situation consideree),\n\n     - critere de niveau D en situation de quatrieme categorie\n       (situation hautement improbable dont on convient d'etudier les\n       consequences sur la surete du materiel), visant a premunir le\n       materiel contre les dommages d'instabilite elastique ou\n       elastoplastique (correspondant a une perte d'integrite de la\n       barriere de pression), mais ici le risque de deformation\n       excessive n'est pas exclu :\n       . memes criteres que pour le niveau 0, mais Sm est remplacee par\n         la plus petite des 2 valeurs suivantes :\n         * 2,4 Sm,\n         * 0,7 Su, ou Su est la resistance a la rupture.\n         (Ces valeurs etant prises a la temperature appropriee).\n\n     - critere en situation d'epreuve :\n       . la contrainte equivalente primaire de membrane generale ne doit\n         pas exceder 90 % de la limite d'elasticite du materiau a la\n         temperature d'epreuve,\n       . la contrainte equivalente primaire de membrane + flexion ne\n         doit pas exceder 135 % de la limite d'elasticite du materiau a\n         la temperature d'epreuve.\n\n\n     Commentaires :\n     _____________\n\n     La procedure @RCCM permet, a l'aide des tables definies ci-apres,\n     la verification tous les crtieres du rccm rappeles ci-dessus, grace\n     aux possiblilites de :\n     - linearisations des contraintes dans des coupes,\n     - decomposition des contraintes en contraintes de membrane,\n       membrane+flexion et totales, en peaux interieure et exterieure,\n     - contrainte equivalente de Tresca,\n     - amplitude de variation maximale de la somme des contraintes\n       linearisees, primaires et secondaires (Sn),\n     - amplitude de variation maximale de la somme des contraintes\n       linearisees, primaires et secondaires, flexion d'origine\n       thermique exclue (Sn*),\n     - calcul a la fatigue, avec prise en compte de seismes et du\n       coefficient \"Ke\" de concentration elastoplastique.\n\n\n     Ces tables sont :\n \n     TABCOUP : table de definition des coupes (type TABLE).\n\n     TABETAT : table de definition des etats (type TABLE).\n\n     TABGROU : table de definition eventuelle des groupes de\n               transitoires (type TABLE).\n\n     TABFATI : table des donnees eventuelles du calcul a la fatigue\n               (type TABLE).\n \n\n     Elles sont remplies de la facon suivante (operations 1 a 4) :\n\n     1- La table TABCOUP est remplie a l'aide de la procedure @REMPCOU \n        (un appel par definition de coupe) :\n\n        @REMPCOU TABCOUP PI PE NS MODELC EPAIS GRAPH ECRI | NOMN | |DIR2 |;\n\n        Objet :\n        _______\n \n        Creation des coupes (segments d'appui).\n\n        Le premier appel creera la coupe 1, le deuxieme la coupe 2, etc.\n\n        Les coupes sont definies dans le repere local lie a la coupe en\n        2D ou axisymetrique et dans le repere general en 3D.\n\n        Commentaires :\n        _____________\n\n        PI     : point interieur de la paroi ou aboutit la coupe\n                (type POINT).\n\n        PE     : point exterieur de la paroi ou aboutit la coupe\n                (type POINT).\n\n        NS     : le nombre de sous-divisions de la coupe (type ENTIER).\n\n        MODELC : le modele qui contient la coupe (type MMODEL).\n                 Attention, ce modele doit etre strictement limite a la\n                 piece contenant la coupe. (Les contraintes le long de\n                 la coupe sont determinees a l'aide de l'operateur PROI\n                 qui ne fonctionne correctement que si son action est\n                 limitee au modele lie a la piece contenant la coupe).\n\n        EPAIS  : l'epaisseur du trait (type FLOTTANT) affectee a la\n                 coupe pour sa visualisation graphique eventuelle.\n\n        GRAPH  : mot 'O' ou 'N' (type MOT) permettant de visualiser la\n                 coupe et de tracer l'evolution des contraintes\n                 elementaires dans la coupe.\n\n        ECRI   : mot 'O' ou 'N' (type MOT) permettant de lister\n                 l'evolution des contraintes elementaires dans la coupe.\n \n        NOMN   : nom eventuel (type MOT) permettant la sortie d'un\n                 fichier sous ce nom pour calcul de nocivite par la\n                 methode de superposition interne a JI.\n                 \n        DIR2     :  (Type POINT ) obligatoire en 3D donne la direction \n            OY du repere d analyse des contraintes  (OX etant PI PE)            \n\n     2- La table TABETAT est une table a 2 indices cree par\n        l'utilisateur de la facon suivante :\n\n        m = mot 'M' ;\n        t = mot 'T' ;\n        tabetat   = table ;\n        tabetat.m = table ;\n        tabetat.t = table ;\n\n        tabetat.t etant alors optionnelle.\n\n        Objet :\n        _______\n \n        Creation des etats primaires et secondaires.\n\n        L'indice m est reserve aux etats thermomecaniques et L'indice t\n        aux etats thermiques permettant d'exclure les contraintes de\n        flexion d'origine thermique dans les etats thermomecaniques.\n \n        Le deuxieme indice represente le numero d'etat. On affecte a la\n        table ainsi indicee un champ de contraintes correspondant au\n        numero d'etat (contraintes d'origine thermomecanique pour\n        l'indice m et contraintes d'origine thermiques pour l'indice t).\n \n        Les numeros d'etats lies a l'indice t doivent correspondre aux\n        numeros d'etats lies a l'indice m. Exemple :\n \n        tabetat.m.1  = CHAMC1  ;\n        tabetat.m.2  = CHAMC2  ;\n \n        tabetat.t.1  = CHAMCT1 ;\n        tabetat.t.2  = CHAMCT2 ;\n \n        Dans cet exemple :\n \n        - CHAMC1 est champ de contraintes d'origine thermomecanique\n          definissant l'etat 1 ;\n\n        - CHAMC2 est champ de contraintes d'origine thermomecanique\n          definissant l'etat 2 ;\n \n        - CHAMCT1 est champ de contraintes d'origine thermique\n          permettant d'exclure les contraintes de flexion d'origine\n          thermique dans l'etat 1,\n \n        - CHAMCT2 est champ de contraintes d'origine thermique\n          permettant d'exclure les contraintes de flexion d'origine\n          thermique dans l'etat 2,\n\n        Il ne doit pas y avoir de trous dans la numerotation des etats\n        thermomecaniques. Par contre, il peut y avoir des trous dans les\n        indices de la tabetat.t, car les etats thermomecaniques peuvent\n        etre des etats purement mecaniques, auquel cas il n'y a pas de\n        flexion d'origine thermique a exclure; a la limite, la table \n        tabetat.t peut ne pas exister ou etre vide, auquel cas tous les\n        etats sont mecaniques ou consideres comme tels.\n \n        Dans le cas ou il n'existe pas de flexion d'origine thermique a\n        exclure, 2 situations peuvent se presenter :\n \n        - la table tabetat.t n'a pas ete definie, auquel cas la\n          procedure va exclure la contrainte de flexion d'origine\n          mecanique aux etats mecaniques definis (Ceci trouve parfois\n          son utilite, comme par exemple l'analyse des levres minces des\n          mecanismes de controle des grappes),\n \n        - la table tabetat.t a ete definie mais est vide, auquel cas la\n          procedure ne va exclure aucune flexion aux etats mecaniques\n          definis.\n\n \n     3- La table TABGROU est remplie a l'aide de la procedure @REMPGRO\n        (un appel par definition de groupe) :\n \n        @REMPGRO TABGROU LISTET ;\n \n        Objet :\n        _______\n \n        Creation des transitoires.\n\n        Le premier appel creera le groupe 1, le deuxieme la groupe 2,\n        etc..\n\n        Les groupes sont des ensembles d'etats. Dans chacun de ces\n        groupes la procedure @RCCM recherche les 2 etats qui conduisent\n        a l'amplitude de variation maximale de la somme des contraintes\n        primaires et secondaires (Sn en situation de deuxieme categorie)\n        et auxquels on affectera un certain nombre d'occurences dans le\n        calcul a la fatigue. Eventuellement, on aura aussi Sn*\n        (Variation maximale des contraintes de membrane+flexion, flexion\n        thermique exclue) et les 2 etats correspondants.\n\n        En plus des etats entres avec TABETAT on peut, dans un groupe,\n        avoir un etat nul de contraintes correspondant a une situation\n        sans chargement du materiel (etat 0).\n\n        Il est clair, que dans un groupe il y a au moins 2 etats.\n\n        Commentaires :\n        _____________\n\n        LISTET : liste des etats du groupe (type LISTENTI).\n\n\n     4- La table TABFATI est remplie a l'aide de la procedure @REMPFAT\n        (un appel pour definir les occurences des groupes et ensuite un\n        appel par definition de coupe pour les caracteristiques et pour\n        les seismes eventuels) :\n\n        @REMPFAT TABFATI CODE OCCUR ;      ==> CODE = 1\n        @REMPFAT TABFATI CODE CARAC ;      ==> CODE = 2\n        ........................... ;\n        @REMPFAT TABFATI CODE SEISM ;      ==> CODE = 3\n        ........................... ;\n\n        Objet :\n        _______\n\n        Creation des tables pour calcul de tenue a la fatigue.\n\n        Le premier appel affectera le nombre d'occurences aux groupes,\n        le deuxieme affectera des caracteristiques a la coupe 1, le \n        troisieme affectera des caracteristiques a la coupe 2, etc..,\n        ensuite il est possible d'introduire un torseur de seisme pour\n        la coupe 1, puis la coupe 2, etc...\n\n\n        Commentaires :\n        _____________\n \n        CODE   : code (type ENTIER) permettant de differencier les\n                 appels :\n                 . 1 pour donner les occurences,\n                 . 2 pour donner les caracteristiques dans les coupes,\n                 . 3 pour donner les seismes eventuels.\n\n        OCCUR  : liste du nombre d'occurences (type LISTREEL) pour\n                 chaque groupe, dans l'ordre de numerotation des\n                 groupes,\n\n        CARAC  : liste des caracteristiques des coupes (type LISTREEL)\n                 pour chaque coupe, dans l'ordre de numerotation des\n                 coupes. Ces caracteristiques sont, dans l'ordre :\n                 . le code materiau defini dans le RCCM-M :\n                   * 1 : aciers au carbone et faiblement allies, limite\n                         de rupture <= 550 MPa \n                   * 2 : aciers au carbone et faiblement allies, limite\n                         de rupture >= 790 MPa  <= 900 MPa\n                   * 3 : aciers inoxydables et les alliages au nickel\n                   * 4 : aciers de boulonnerie, contrainte nominale\n                         max <= 2,7Sm\n                   * 5 : aciers de boulonnerie, contrainte nominale\n                         max 3Sm\n                 . le module d'elasticite mini,\n                 . le facteur de reduction de la tenue a la fatigue,\n                 . les Sm, m et n definis dans le RCCM-M (voir criteres\n                   de niveau A)\n                 . un code eventuel pour combinaison d'un seisme avec\n                   les transitoires :\n                   * 0 : pas de seisme,\n                   * 1 : le programme determine le Tresca maxi de \n                         l'amplitude des contraintes sismique\n                         considerees seules; ce Tresca  est ajoute aux\n                         amplitudes des contraintes des transitoires.\n                         Ce calcul est conservatif, mais presente\n                         l'avantage d'etre effectue tres rapidement par\n                         le programme.\n                   * 2 : La combinaison du seisme avec les transitoires\n                         s'effectue au niveau des contraintes\n                         elementaires et avec un signe qui rend maximal\n                         les variations des contraintes.\n                         Ce calcul, bien que realiste presente\n                         l'inconvenient d'etre tres long si le nombre\n                         des composantes sismiques non nulles est eleve.\n\n        SEISM  : liste eventuelle des seismes dans les coupes\n                 (type LISTREEL), dans l'ordre de numerotation des\n                 coupes. Ces seismes sont donnes comme suit :\n                 . en 2D : 4 composantes suivies du nombre de seismes et\n                           du nombre de cycles par seisme.\n                           Si le champ a ete determine dans un modele\n                           2D,  les composantes sont donnees dans\n                           l'ordre :\n                           * Sx,\n                           * Sy,\n                           * Sz,\n                           * Sxy\n                           Si le champ de contraintes a ete determine\n                           dans un modele axisymetrique, les composantes\n                           sont donnees dans l'ordre :\n                           * radial,\n                           * longitudinal,\n                           * circonferentiel,\n                           * cisaillement.\n                        \n                 . en 3D : 6 composantes suivies du nombre de seismes et\n                           du nombre de cycles par seisme.\n                           Les composantes sont donnees dans l'ordre :\n                           * Sx,\n                           * Sy,\n                           * Sz,\n                           * Sxy,\n                           * Syz,\n                           * Sxz,\n                           \n\n\n     Exemple :\n     _________\n \n     * ----------------tables pour le calcul rccm-----------------------\n\n     m = mot 'M' ;\n     t = mot 'T' ;\n     tabetat.m = table ;\n     tabetat.t = table ;\n     tabcoup   = table ;\n     tabgrou   = table ;\n     tabfati   = table ;\n\n     * ----------------definition des coupes----------------------------\n\n     @rempcou tabcoup p1 p2 50 modl1  0.4 'n' 'n' ; 'coupe 1' ;\n     @rempcou tabcoup p3 p4 50 modl2  0.4 'n' 'n' ; 'coupe 2' ;\n\n     * ----------------definition des etats-----------------------------\n\n     tabetat.m.1  = chamc1  ; 'etat 1 thermomecanique repere etat 1' ;\n     tabetat.m.2  = chamc2  ; 'etat 2 thermomecanique repere etat 2' ;\n     tabetat.m.3  = chamc3  ; 'etat 3 thermomecanique repere etat 3' ;\n\n     tabetat.t.1  = chamct1 ; 'etat 1 thermique seul repere etat 4' ;\n     tabetat.t.2  = chamct2 ; 'etat 2 thermique seul repere etat 5' ;\n     tabetat.t.3  = chamct3 ; 'etat 3 thermique seul repere etat 6' ;\n\n     * ----------------definition des groupes de transitoires-----------\n\n     @rempgro tabgrou (lect 1 0 3) ; 'groupe 1' ;\n     @rempgro tabgrou (lect 0 1)   ; 'groupe 2' ;\n     @rempgro tabgrou (lect 1 2 3) ; 'groupe 3' ;\n\n     * ----------------donnees pour la fatigue--------------------------\n\n     @rempfat tabfati 1 (prog 1.E5 2.E5 5.E5) ;'n\"ombre d\"occurences'  ;\n     @rempfat tabfati 2 (prog 3. 209000. 2.4 115. 1.7 0.3 2.);'coupe 1';\n     @rempfat tabfati 2 (prog 3. 197000. 2.8 115. 1.7 0.3 2.);'coupe 2';\n     @rempfat tabfati 3 (prog 90. -110. -50.  10. 100. 200.) ;'coupe 1';\n     @rempfat tabfati 3 (prog 70. -130. -20. -30.  90. 300.) ;'coupe 2';\n\n     * ----------------calcul rccm--------------------------------------\n\n     @rccm tabcoup tabetat tabgrou tabfati ;",
  },
  {
    name: "@RCCMCO2",
    url: "%40RCCMCO2",
    documentation:
      "$$$$ @RCCMCO2 NOTICE  CHAT      11/09/12    21:17:51     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @RCCMCO2                       Voir aussi : @RCCM\n    ------------------                          \n      \n\n\n    Objet :\n    _______\n\n    Cette procedure est appelee en interne par la procedure RCCM",
  },
  {
    name: "@RCCMTRV",
    url: "%40RCCMTRV",
    documentation:
      "$$$$ @RCCMTRV NOTICE  CHAT      11/09/12    21:17:52     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @RCCMTRV                       Voir aussi : @RCCM\n    ------------------                          \n      \n\n\n    Objet :\n    _______\n\n    Cette procedure est appelee en interne par la procedure RCCM",
  },
  {
    name: "@RELIEF",
    url: "%40RELIEF",
    documentation:
      "$$$$ @RELIEF  NOTICE  CHAT      11/09/12    21:17:55     7124           \n                                             DATE     11/09/12\n\n    Directive @RELIEF                                Voir aussi MONTAGNE\n    -----------------\n\n         @RELIEF  ;\n\n\n    Objet :\n    _______\n\n    Cette procedure interactive sert a visualiser en relief une\n    composante d'un champ  par point  ou  un champ  par element  et\n    de superposer  les isovaleurs d'une  deuxieme  composante  ou\n    d'une  composante  d'un deuxieme champ par point ou champ par\n    element.\n\n    Remarque :\n    __________\n\n\n    On ne peut pas fournir de modele bases sur des QUAF",
  },
  {
    name: "@REMPCOU",
    url: "%40REMPCOU",
    documentation:
      "$$$$ @REMPCOU NOTICE  CHAT      11/09/12    21:17:55     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @REMPCOU                       Voir aussi : @RCCM\n    ------------------                        \n      \n\n\n    Objet :\n    _______\n\n    Cette procedure prepare les tables decrivant les coupes\npour le post-traitement  par la procedure RCCM. Voir notice de RCCM",
  },
  {
    name: "@REMPFAT",
    url: "%40REMPFAT",
    documentation:
      "$$$$ @REMPFAT NOTICE  CHAT      11/09/12    21:17:55     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @REMPFAT                       Voir aussi : @RCCM\n    ----------------                           \n      \n\n\n    Objet :\n    _______\n\n    Cette procedure prepare les tables de fatigue\npour le post-traitement  par la procedure RCCM. Voir notice de RCCM",
  },
  {
    name: "@REMPGRO",
    url: "%40REMPGRO",
    documentation:
      "$$$$ @REMPGRO NOTICE  CHAT      11/09/12    21:17:56     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @REMPGRO                       Voir aussi : @RCCM\n    ------------------                        \n      \n\n\n    Objet :\n    _______\n\n    Cette procedure prepare les tables de groupe de charge\npour le post-traitement  par la procedure RCCM. Voir notice de RCCM",
  },
  {
    name: "@REPERE",
    url: "%40REPERE",
    documentation:
      "$$$$ @REPERE  NOTICE  GOUNAND   17/01/11    21:15:00     9272           \n                                             DATE     17/01/11\n\n\n             CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n            A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n        PAR M. CHAMPANEY Laurent (L.M.T. STRUCTURES et CMAO)\n                    \n\n                                                                                \n  Procedure @REPERE                          Voir aussi :\n     -----------------  \n     RP1 = @REPERE ORI1 TAIL0 NOM1 COUL1 ;\n\n\n     Objet :                                                                    \n     ______                                                                     \n\n  Procedure pour la construction d'un repere X;Y(;Z) a TRACer\n\n  En entree :\n  \n                ORI1     POINT     origine du repere\n                                   => (0. 0. (0.)) par defaut\n\n                TAIL0    LISTREEL  tailles en X,Y(,Z) du repere\n                                   => (PROG 1. 1. (1.)) par defaut\n                                   \n                         Remarque : - si un 2eme doublet/triplet de\n                                      valeurs est fourni dans TAIL0,\n                                      il specifiera les dimensions de\n                                      la tete des fleches\n                                    - si un 3eme doublet/triplet de\n                                      valeurs est fourni dans TAIL0,\n                                      il specifiera les dimensions des\n                                      lettres nommant les 2/3 axes\n\n                NOM1     LOGIQUE   VRAI pour nommer les axes\n                                   => VRAI par defaut\n\n                COUL1    MOT       couleur du repere\n                                   => DEFA par defaut\n                                   \n  En sortie :\n  \n                RP1      MAILLAGE  du repere",
  },
  {
    name: "@RRSR",
    url: "%40RRSR",
    documentation:
      "$$$$ @RRSR    NOTICE  CB215821  19/11/18    21:15:00     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RRSR forme partie du objet @RSTH et est appelee avec\n    l'abbreviation %'RSR'.\n\n\n    Commentaire :\n    _____________\n\n    La methode @RRSR affiche la resultat du calcul pour les param\u00e8tres\n    du random set avec le nombre serielle ENT1\n\n    FLO1 : valeur du resultat pour le nombre serielle ENT1 de la\n           variation des param\u00e8tres du Random Set\n\n    ENT1 : nombre serielle ENT1 de la variation des param\u00e8tres\n           du Random Set\n\n    DBG1 : Argument optionel de type ENTIER indiquant le niveau du \n           deboggage (DBG1 manquant ouDBG1=0, pas de deboggage)\n\n\n    Exemple :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@RRST",
    url: "%40RRST",
    documentation:
      "$$$$ @RRST    NOTICE  CB215821  19/11/18    21:15:01     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RRST forme partie du objet @RSTH et est appelee avec\n    l'abbreviation %'RST'.\n\n\n    Commentaire :\n    _____________\n\n    La methode @RRST initialise un objet @RSTH avec les donnees\n    dans la TABLE TAB1.\n\n\n    Exemples :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@RRSV",
    url: "%40RRSV",
    documentation:
      "$$$$ @RRSV    NOTICE  CB215821  19/11/18    21:15:01     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RRSV forme partie du objet @RSTH et est appelee avec\n    l'abbreviation %'RSV'.\n\n\n    Commentaire :\n    _____________\n\n    La methode @RRSV extrait le valeur des param\u00e8tres du random set\n    avec le nombre serielle ENT1 et introduit les valeurs dans la\n    table %'RT' pour chaque param\u00e8tre avec un index .'RSV'\n\n    ENT1 : nombre serielle ENT1 de la variation des param\u00e8tres\n           du Random Set\n\n    DBG1 : Argument optionel de type ENTIER indiquant le niveau du \n           deboggage (DBG1 manquant ouDBG1=0, pas de deboggage)\n\n\n    Exemple :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@RSCS",
    url: "%40RSCS",
    documentation:
      "$$$$ @RSCS    NOTICE  CB215821  19/11/18    21:15:01     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RSCS forme partie du objet @RSTH et est appelee avec\n    l'abbreviation %'SCS'.\n\n\n    Commentaire :\n    _____________\n\n    La methode @RSCS converte les donnees dans le liste LRE1 pour\n    les valeurs des probabilites cumules de un Random Set en un\n    format compatible avec une evolution.\n\n    LRE2 : liste des valeurs pour les probabilites cumules en format\n           compatible avec une evolution\n\n    LRE1 : liste des valeurs pour les probabilites cumules\n\n    DBG1 : Argument optionel de type ENTIER indiquant le niveau du \n           deboggage (DBG1 manquant ouDBG1=0, pas de deboggage)\n\n\n    Exemple :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@RSCV",
    url: "%40RSCV",
    documentation:
      "$$$$ @RSCV    NOTICE  CB215821  19/11/18    21:15:02     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RSCV forme partie du objet @RSTH et est appelee avec\n    l'abbreviation %'SCV'.\n\n\n    Commentaire :\n    _____________\n\n    La methode @RSCV converti les donnees dans le LISTREEL LRE1 pour\n    les valeurs des elements focales d'un Random Set en un format\n    compatible avec une evolution.\n\n    LRE2 : liste des valeurs pour les elements focales en format\n           compatible avec une evolution\n\n    LRE1 : liste des valeurs pour les elements focales\n\n    DBG1 : Argument optionel de type ENTIER indiquant le niveau du \n           deboggage (DBG1 manquant ouDBG1=0, pas de deboggage)\n\n\n    Exemple :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@RSTH",
    url: "%40RSTH",
    documentation:
      "$$$$ @RSTH    NOTICE  CB215821  19/11/18    21:15:02     10383          \n                                             DATE     19/11/18\n\n    Objet :\n    _______\n\n    La methode @RSTH cree un objet OBJ1 pour calculer avec la theorie\n    des Random Sets (constructeur d'objet).\n\n\n    Commentaire :\n    _____________\n\n    OBJ1        : Objet random set (type OBJET)\n\n\n    L'objet OBJ1 a les methodes publiques suivantes:\n\n    OBJ1%'RST' : Appelle la methode @RRST pour initialiser le \"random set\"\n    OBJ1%'RSV' : Appelle la methode @RRSV pour extraire la valeur\n                 courante du \"random set\"\n    OBJ1%'RSR' : Appelle la methode @RRSR pour afficher un resultat\n                 courant du \"random set\"\n    OBJ1%'SCV' : Appelle la methode @RSCV pour extraire les valeurs\n                 du LISTREEL pour le \"random set\" (Intervalles des parametres)\n    OBJ1%'SCS' : Appelle la methode @RSCS pour extraire les valeurs\n                 du LISTREEL pour le \"random set\" (Probabilite cumulee)\n\n\n    L'objet a les variables publiques suivantes:\n\n    %'RT'   : TABLE TAB1 contennant les distributions des parametres\n    %'NX'   : Variable auxiliaire pour l'enumeration des valeurs courantes\n    %'CX'   : Variable auxiliaire pour l'enumeration des valeurs courantes\n    %'RX'   : Variable auxiliaire pour l'enumeration des valeurs courantes\n    %'PX'   : Variable auxiliaire pour l'enumeration des valeurs courantes\n    %'IR'   : Variable auxiliaire pour les indices de la TABLE TAB1\n    %'IX'   : Numero actuel de parametres dans le \"Random Set\"\n    %'SN'   : Numero sequentiel de l'element courants du resultat\n    %'PN'   : Probabilite de realisation de l'element courant\n    %'MIN'  : Valeurs minimales des elements courants du resultat\n    %'CPN'  : Probabilites      des elements courants du resultat\n    %'MAX'  : Valeurs maximales des elements courants du resultat\n    %'CPX'  : Probabilites      des elements courants du resultat\n\n    %'MINS' : Valeurs minimales    des elements du resultat\n              ordonnes et modifies pour generer une evolution\n    %'CPNS' : Probabilites cumules des elements du resultat\n              ordonnes et modifies pour generer une evolution\n              (valeur identique au %'CPXS')\n    %'MAXS' : Valeurs maximales    des elements du resultat\n              ordonnes et modifies pour generer une evolution\n    %'CPXS' : Probabilites cumules des elements du resultat \n              ordonnes et modifies pour generer une evolution\n              (valeur identique au %'CPNS')\n\n\n    La table TAB1 doit avoir le format suivant:\n\n    TAB1.'VAR'       : TABLE    contenant les donnees pour la variable VAR\n    TAB1.'VAR'.'MIN' : LISTREEL avec les valeurs de la borne inferieure des elements focales\n    TAB1.'VAR'.'MAX' : LISTREEL avec les valeurs de la borne superieure des elements focales\n    TAB1.'VAR'.'CPB' : LISTREEL avec les valeurs de probabilite cumule  des elements focales\n\n    DBG1 : An optional argument with a value of type ENTIER indicating\n           the debugging level (DBG1 missing or DBG1=0, no debugging)\n\n\n    Exemple :\n    _________\n\n    Random_Set_Theory_01.dgibi\n    Random_Set_Theory_03.dgibi\n    Random_Set_Theory_03.dgibi",
  },
  {
    name: "@SATURAT",
    url: "%40SATURAT",
    documentation:
      "$$$$ @SATURAT NOTICE  CHAT      11/09/12    21:18:02     7124           \n                                             DATE     11/09/12\n\n    Procedure @SATURAT\n    ------------------\n\n    MAT1 = @SATURAT CHTK1 CHPC1 ;\n\n\n    Objet :\n    -------\n\n       La procedure @SATURAT determine, par defaut, la saturation en eau\n    liquide d'un milieu poreux modelise par un modele THERMOHYDRIQUE \n    SCHREFLER. Elle est fonction de la temperature du milieu en Kelvin\n    et de sa pression capillaire en Pascal.\n\n       Cette procedure est appelee par la procedure @MATETHM.\n\n    Commentaire :\n    -------------\n\n    CHTK1  = CHPOINT de temperature (K) ;\n\n    CHPC1  = CHPOINT de pression capillaire (Pa) ;",
  },
  {
    name: "@SIGREF",
    url: "%40SIGREF",
    documentation:
      "$$$$ @SIGREF  NOTICE  CHAT      11/09/12    21:18:06     7124           \n                                             DATE     11/09/12\n                                                   \n  Procedure @SIGREF                               Voir aussi :\n  ----------------  \n     SS = @SIGREF PNOM MNOM EPAI FISS MODL1 ;  \n\n\n\n\n  Objet :\n  -------\n\n    Cette procedure est appelee par @LISPA16. Elle permet de calculer la\n  contrainte de reference pour l'application de l'Annexe A16 du RCC-MR aux\n  elements LISP. \n\n\n  Commentaire :\n  -------------\n\n SS   : contrainte de reference (type MCHAML)\n\n PNOM : effort de traction nominal Nzz (type MCHAML)\n\n MNOM : effort de flexion nominal Mxx (type MCHAML)\n\n EPAI : epaisseur de l'element LISP (type MCHAML)\n\n FISS : profondeur de la fissure (type MCHAML)\n\n MODL1 :objet modele (type MMODEL) associe au maillage constitue d'elements\n        LISP\n\n   \n ",
  },
  {
    name: "@SOLVMEC",
    url: "%40SOLVMEC",
    documentation:
      "$$$$ @SOLVMEC NOTICE  FD218221  21/05/07    21:15:01     11001          \n                                             DATE     21/05/07\n\n    Procedure @SOLVMEC                       Voir aussi : PASAPAS UNPAS\n    ------------------  \n    @SOLVMEC  TAB1 ;\n\n    Objet :\n    -------\n\n       La procedure @SOLVMEC permet d'effectuer un calcul mecanique non lineaire\n    incremental selon un parametre d'evolution donne par l'utilisateur\n    (pseudo temps ou temps reel).\n\n       Cette procedure est analogue a la procedure PASAPAS (indices en entree et\n    en sortie identiques) mais en constitue une version beaucoup plus simplifiee\n    et ceci a des fins de tests ou pedagogiques uniquement.\n\n       Cette procedure n'est pas supportee et ne rentre pas dans le perimetre de\n    validation de Cast3M. La procedure de reference pour le calcul incremental\n    en mecanique et thermique est PASAPAS.\n\n       De plus, les performances sont sensiblement moins elevees que celles de PASAPAS\n    et le domaine d'application est limite a la mecanique seule. Cependant, elle met\n    en oeuvre, comme dans PASAPAS, un schema de quasi Newton-Raphson pour la minimisation\n    du residu. Celui-ci est facilement lisible et modifiable pour l'utilisateur.\n\n\n       Les indices de la table TAB1 a definir sont les suivants :\n\n    MODELE              : Objet de type MMODEL, obligatoire.\n                          Ensemble des modeles avec une formulation mecanique\n                          --> objet cree par l'operateur MODE.\n\n    CARACTERISTIQUES    : Objet de type MCHAML, obligatoire.\n                          Champ de caracteristiques materielles et geometriques\n                          (si necessaire) associees au modele\n                          --> objet cree par les operateurs MATE/CARA.\n\n    BLOCAGES_MECANIQUES : Objet de type RIGIDITE, obligatoire.\n                          Matrice des blocages mecaniques associee a une condition aux\n                          limites de type Dirichlet (deplacement impose)\n                          --> objet cree par les operateurs BLOQ/RELA.\n\n    CHARGEMENT          : Objet de type CHARGEME, obligatoire.\n                          Definition du chargement en fonction du parametre d'evolution\n                          Les types de chargements acceptes sont :\n                          * ceux de type 'DIMP' (deplacements imposes)\n                          * ceux de type 'MECA' (efforts      imposes)\n                          --> objet cree par l'operateur CHAR.\n\n    TEMPS_CALCULES      : Objet de type LISTREEL, obligatoire.\n                          Liste des valeurs du parametre d'evolution (temps) pour\n                          lesquelles on effectue le calcul.\n                          --> objet cree par l'operateur PROG.\n\n    GRANDS_DEPLACEMENTS : Objet de type LOGIQUE, facultatif,\n                          egal a FAUX par defaut.\n                          Indique que l'on souhaite faire le calcul sous l'hypothese\n                          des \"grands deplacements\", c'est-a-dire :\n                          - re-calcul de la matrice de rigidite sur la configuration\n                            au debut de chaque pas de temps\n                            (et non la configuration initiale) ;\n                          - prise en compte de la matrice de raideur geometrique\n                            associee aux contraintes au debut du pas de temps\n                            (appel a l'operateur KSIG) ;\n                          - utilisation de la deformation quadratique (Green Lagrange)\n                            pour evaluer l'increment de deformation sur chaque pas de\n                            temps (et non la deformation lineaire) ;\n                          - transport des contraintes sur la configuration a la fin\n                            du pas de temps (operateur PICA).\n                          - verification de l'equilibre sur la configuration a la fin\n                            du pas de temps (et non la configuration initiale).\n\n    ACCELERATION_CONVERGENCE : Objet de type LOGIQUE, facultatif,\n                          egal a FAUX par defaut.\n                          Indique que l'on souhaite utiliser l'acceleration de convergence\n                          basee sur les precedents residus (operateur ACT3).\n                          L'acceleration est effectuee toutes les 4 iterations.",
  },
  {
    name: "@STAT",
    url: "%40STAT",
    documentation:
      "$$$$ @STAT    NOTICE  CHAT      11/09/12    21:18:12     7124           \n                                             DATE     11/09/12\n\n\n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CASTEM2000                          \n   PAR  DELERUYELLE Fr.  (SOCOTEC-INDUSTRIE a l'IPSN/DES)\n                                                                         \n                                                                         \n  Procedure @STAT                                Voir aussi :\n      ---------------  \n      XM EX (YM EY A B R)  =  @STAT  LX (LY) ;\n                                                                         \n      Objet :                                                            \n      ______\n                                                                         \n      Cette procedure calcule les moyennes, ecarts types, et coefficients\n      de regression lineaire de listes de reels.\n\n      Commentaires :\n      _____________\n                                                                         \n      LX     : liste de reels dont on veut la moyenne et l'ecart type.\n               (type LISTREEL).\n\n      LY     : eventuellement, seconde liste de reels.\n               (type LISTREEL).\n                                                                         \n      XM     : moyenne de la liste LX  (type FLOTTANT).\n\n      EX     : ecart type de la liste LX (type FLOTTANT).\n                                                                         \n      YM     : si LY a ete donnee, moyenne de cette seconde liste.\n               (type FLOTTANT).\n\n      EY     : si LY a ete donnee, ecart type de cette seconde liste.\n               (type FLOTTANT).\n                                                                         \n      A      : coefficient directeur de la droite de regression lineaire\n               de LY sur LX (type FLOTTANT).\n                                                                         \n      B      : ordonnee a l'origine de la droite de regression lineaire\n               de LY sur LX (type FLOTTANT).\n\n      R      : coefficient de correlation de la regression lineaire\n               de LY sur LX (type FLOTTANT).\n\n      Exemple :\n      ________\n\n      lx = prog 0 1.85 4.65 7 10 11 12 15.8 ;                                 \n      ly = prog 2.25 2. 1.75 1.4 1. 0.8 1. 1.2 ;                              \n      xm ex ym ey a b r = @STAT lx ly ;\n      mess 'moy. y=' ym 'ecart type y=' ((ey / ym) * 100.) '%';               \n      ly2 = (lx * a) + (prog (dime lx) * b) ;                                 \n      titr 'a=' a 'b=' b 'r=' r ;\n      ev0 = evol blanc manu 'x' lx 'y' ly ;                                   \n      ev1 = evol rouge manu 'x' lx 'y' ly2 ;                                  \n      dess (ev0 et ev1) ;                                                     \n\n      Remarques :\n      __________\n\n      1) L'ecart type n'est pas donne en pourcentage. Il faut faire\n         (ex/xm)*100.  pour l'avoir en 'pour cent'.\n\n      2) A et B sont tels que LX etant une liste d'abscisses et LY une\n         liste d'ordonnees, la droite de regression lineaire aura pour\n         equation : y = A.x + B\n\n      3) Une regression lineaire de LY sur LX ne se justifie que si la\n         valeur absolue du coefficient de correlation R est proche de 1.\n\n\n ",
  },
  {
    name: "@STATIO",
    url: "%40STATIO",
    documentation:
      "$$$$ @STATIO  NOTICE  CHAT      11/09/12    21:18:12     7124           \n                                             DATE     11/09/12\n\n\n\nL'algorithme stationnaire a ete cree et developpe par DANG VAN K.,\nMAITOURNAM H. et NGUYEN Q. S. du Laboratoire de Mecanique des Solides\na l'Ecole Polytechnique.\n\nPour en connaitre le principe, voir l'article paru dans \"Journal of\nthe Mechanics and Physics of Solids\", ecrit par DANG VAN K. et\nMAITOURNAM H., intitule : \"Steady-state flow in classical elastoplas-\nticity : applications to repeated rolling and sliding contact\" (1993,\n41(11), pp. 1691-1710).\n\nCette procedure a ete programmee en langage Gibiane par DRAGON M., en\nthese au Laboratoire de Mecanique des Solides.\n\n\n\n  Procedure @STATIO                               Voir aussi :\n    -----------------  \n    @STATIO  TAB1 ;\n\n\n    TAB1.  BLOCAGES_MECANIQUES\n           CARACTERISTIQUES\n           CHARGEMENT\n           CONTRAINTES\n           CONTRAINTES_PLASTIQUES\n           CONVERGENCE\n           CRITERE_PLASTICITE\n           DEFORMATIONS\n           DEFORMATIONS_PLASTIQUES\n           DEPLACEMENTS\n           EP2D\n           EP3D\n           FORCES_PLASTIQUES\n           MAXITERATION\n           MODELE\n           MODELE_TABLE\n           PRECISION\n           VARIABLES_INTERNES\n           VA2D\n           VA3D\n\n\n           \n    Objet :\n    _______\n\nCette procedure permet de calculer les deformations plastiques d'une \nstructure soumise a un chargement mobile, dans l'etat stationnaire atteint\napres un grand nombre de cycles de chargement. \n\nOn se place dans le repere lie au chargement, et l'etat stationnaire est \ndetermine directement. Exemples de telles structures : rail soumis au\npassage repete d'une roue (2D), disque en rotation soumis au contact d'un \npion (3D) ...\n\n\n   Commentaire :\n   _____________\n\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres,\net en majuscules s'ils sont mis entre cotes).\n\nTAB1 contient les parametres du calcul a definir en entree d'une part, \net les grandeurs mecaniques determinees au cours de la procedure d'autre\npart.\n\n     -  Liste des parametres a definir en entree :\n\n BLOCAGES_MECANIQUES : (type RIGIDITE) blocages mecaniques\n\n CARACTERISTIQUES    : (type MCHAML, sous-type CARACTERISTIQUES) champ de \n                       caracteristiques materielles, materiau elasto-plas-\n                       tique\n\n CHARGEMENT          : (type CHPOINT) chargement defini sous la forme de\n                       de forces nodales\n\n MAXITERATION        : (type ENTIER) nombre maximal d'iterations\n\n MODELE              : (type MMODEL) objet modele s'appuyant sur le mail-\n                       lage entier de la structure, elasto-plastique \n\n MODELE_TABLE        : (type TABLE) table indicee par des entiers de 1 a n,\n                       contenant les n colonnes du maillage 2D ou les n \n                       parts (type MMODEL) du maillage 3D axisymetrique\n                       (voir Remarques)\n\n PRECISION           : (type FLOTTANT) precision utilisee dans le calcul du\n                       critere de plasticite, et dans le test de stationna-\n                       rite (par exemple 1.e-3)\n\n\n     -  Liste des parametres utilises au cours du calcul :\n\n Ces objets de type TABLE, contiennent sous les indices i designant les ite-\n rations, pour chacune de ces iterations (jusqu'a la convergence ou jusqu'a\n TAB1 . MAXITERATION) :\n\n CONTRAINTES             : (type MCHAML, sous-type CONTRAINTES) contraintes\n                           obtenues par le calcul elastique\n\n CONTRAINTES_PLASTIQUES  : (type MCHAML, sous-type CONTRAINTES) (L : epsp),\n                           ou L est la matrice de Hook et epsp le champ des \n                           deformations plastiques\n\n CONVERGENCE             : (type LOGIQUE) mis a VRAI lorsque le calcul\n                           converge a la derniere iteration\n\n CRITERE                 : (type TABLE) table resultant du calcul du critere\n                           de plasticite contenant les 3 indices suivants :\n                           PL  : logique VRAI si la solution est plastique\n                           NPL : nombre de points de Gauss ou la solution \n                                 est plastique\n                           CR  : (type MCHAML) vaut 1 en chaque point ou le\n                                 critere est viole, et 0 sinon\n\n DEFORMATIONS            : (type MCHAML, sous-type DEFORMATIONS) deformations\n                           obtenues par le calcul elastique\n\n DEFORMATIONS_PLASTIQUES : (type MCHAML, sous-type DEFORMATIONS) deformations\n                           plastiques calculees par l'algorithme stationnaire\n\n DEPLACEMENTS            : (type CHPOINT, sous-type DEPLACEMENTS) deplace-\n                           ments obtenues par le calcul elastique\n\n EP2D                    : (type MCHAML, sous-type DEFORMATIONS) deformations\n                           plastiques initiales pour chaque iteration en 2D\n\n EP3D                    : (type MCHAML, sous-type DEFORMATIONS) deformations\n                           plastiques initiales pour chaque iteration en 3D\n\n FORCES_PLASTIQUES       : (type CHPOINT, sous-type FORCE) forces calculees\n                           a partir des CONTRAINTES_PLASTIQUES\n\n VARIABLES_INTERNES      : (type MCHAML, sous-type VARIABLES INTERNES) vari-\n                           ables internes\n\n VA2D                    : (type MCHAML, sous-type VARIABLES INTERNES) vari-\n                           ables internes initiales pour chaque iteration en\n                           2D\n\n VA3D                    : (type MCHAML, sous-type VARIABLES INTERNES) vari-\n                           ables internes initiales pour chaque iteration en\n                           3D\n\n\nRemarques :\n-----------\n\nCette procedure, du fait du probleme mecanique et de l'algorithme,\nnecessite un maillage particulier (voir MODELE_TABLE) :\n\n2D : maillage forme de colonnes d'elements, contenant chacune le meme\n     nombre d'elements en hauteur et un seul en largeur (comme un tab-\n     leau, rectangle modelisant une portion de rail par exemple). Il peut\n     etre realise par translation d'une premiere colonne, dans la direc-\n     tion du mouvement de la structure.\n\n\n       y          V mouvement du chargement\n       |                  ------>\n       |__x     ______________________________\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|       |___|___|      |___|\n               |___|_______|___|___|______|___|\n                n          (i+1) i          1\n\n\n3D : maillage axisymetrique, forme de parts (de gateau) toutes identiques,\n     realise par exemple par rotation d'une premiere part autour de l'axe \n     Oz. (Camembert modelisant un disque par exemple.)\n\nUn exemple peut etre consulte : sta2d.dgibi.\n\n \n ",
  },
  {
    name: "@STBL",
    url: "%40STBL",
    documentation:
      "$$$$ @STBL    NOTICE  CHAT      11/09/12    21:18:12     7124           \n                                             DATE     11/09/12\n\n  Procedure @STBL                              Voir aussi :\n    ---------------  \n    OBJ1 = @STBL TAB1 ;\n\n\n    Objet :\n    _______\n\nLa procedure @STBL effectue l'operation ET sur tous les objets contenus\ndans la table TAB1 et sous les indices entiers allant de 1 a N.",
  },
  {
    name: "@SYSLIN",
    url: "%40SYSLIN",
    documentation:
      "$$$$ @SYSLIN  NOTICE  CHAT      11/09/12    21:18:14     7124           \n                                             DATE     11/09/12\n\n    Procedure @SYSLIN            Voir aussi: @KEFF\n    \n    -----------------\n        \n        TABU0 = @SYSLIN TABM0 TABX0;\n\n    \n    Auteurs:   L. GELEBART (CEA Saclay DEN/DMN/SRMA)\n    --------    \n    \n    Date :     09/2008\n    ------\n    \n    Exemple associe :     utilise par les procedures @KEFF\n    -----------------\n    \n    Contact :   lionel(dot)gelebart(at)cea(dot)fr\n    ---------\n    \n\n\n    Objet :\n    -------\n    Resolution du systeme lineaire M.U=X\n    \n    Commentaires :\n    --------------\n    TABM0 : Table decrivant la matrice M\n                TABM0 . i. j = M(i,j)\n    TABX0 : Table decrivant le vacteur X\n                TABX0 . j = X(j)\n    TABU0 : Table resultat donnant le vecteur solution U\n                TABU0 . j = U(j)\n    Remarques :\n    -----------\n        Cette procedure utilise RESOU. Il peut parfois etre\n        necessaire de modifier l'ordre des equations pour que\n        RESOU puisse resoudre le systeme\n       ",
  },
  {
    name: "@TEST",
    url: "%40TEST",
    documentation:
      "$$$$ @TEST    NOTICE  CHAT      11/09/12    21:18:17     7124           \n                                             DATE     11/09/12\n                                            \n    Procedure @TEST                          Voir aussi : @STATIO\n    ---------------                          \n      \n\n\n    Objet :\n    _______\n\n Cette procedure est appelee en interne par la procedure @STATIO",
  },
  {
    name: "@TOLE2",
    url: "%40TOLE2",
    documentation:
      "$$$$ @TOLE2   NOTICE  CHAT      11/09/12    21:18:19     7124           \n                                             DATE     11/09/12\n\n    Procedure @TOLE2                         Voir aussi : @couple @carene\n    -----------------                                     @lisse  @tole3      \n\n    MAI2 = @TOLE2 MAI1  FLOT1  ENT1  ;\n\n\n    Objet :\n    _______\n\nLa procedure @TOLE2 cree un maillage massif de CUB8 a partir d'un\nmaillage MAI1 de carene ( maillage surfacique tridimensionnel QUA4).\nLa surface de la carene est au milieu de l'epaisseur.\n\n    Commentaire :\n    _____________\n\n    FLOT1   : reel donnant l'epaisseur de la carene.\n\n    ENT1    : entier donnant le nombre d'elements dans l'epaisseur.",
  },
  {
    name: "@TOLE3",
    url: "%40TOLE3",
    documentation:
      "$$$$ @TOLE3   NOTICE  CHAT      11/09/12    21:18:20     7124           \n                                             DATE     11/09/12\n\n    Procedure @TOLE3                         Voir aussi : @couple @carene\n    -----------------                                     @lisse  @tole2      \n\n    MAI1 MAI2 MAI3 MAI4 MAI5 = @TOLE3 MAI6 MAI7 FLOT1 ENT1;\n\n\n    Objet :\n    _______\n\nLa procedure @TOLE3  cree un maillage massif de CUB8 a partir de 2\ncouples de carenes ayant le meme nombre de points (maillage 3D de\nSEG2). Ce couple massif a ses faces laterales planes et paralleles.\n\n\n    Commentaire :\n    _____________\n\n    MAI6   : maillage du premier couple externe (type SEG2).\n\n    MAI7   : maillage du second couple externe(type SEG2).\n\n    FLOT1  : epaisseur de la carene.\n\n    ENT1   : entier donnant le nombre d'elements dans l'epaisseur.\n\n    MAI1   : maillage du premier couple interne (SEG2).\n\n    MAI2   : maillage du second couple interne (SEG2).\n\n    MAI3   : maillage de la surface exterieure ( elle s'appuie sur\n             les deux couples  externes) (QUA4).\n\n    MAI4   : maillage de la surface interne (elle s'appuie sur les \n             deux couples internes) (QUA4).\n\n    MAI5   : maillage volumique ( CUB8) du couple massif.",
  },
  {
    name: "@TORO",
    url: "%40TORO",
    documentation:
      "$$$$ @TORO    NOTICE  CHAT      11/09/12    21:18:20     7124           \n                                             DATE     11/09/12\n                                                                                \n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n  procedure @TORO                           Voir aussi :\n     ---------------  \n     TABCHB TAB2 = @TORO TAGEO1 TABOB1 ;\n                                                                               \n\n     Objet:                                                                  \n     -----                                                                      \n                                                                       \n     Calcul de l'induction magnetique creee par un ensemble           \n     de bobines circulaires ou en 'D', reparties regulierement       \n     autour de l'axe Oz, en l'absence de fer.                                 \n                                                                           \n     Commentaire :                                                              \n     _____________                                                              \n\n                                                                             \n     En entree :                                                         \n                                                                   \n                                                                      \n     TAGEO1        table des domaines de calcul du champ              \n     ------         \n\n        TAGEO1.i   geometrie ou le champ est calcule (type TABLE)               \n        TAGEO1.i.'mail' : maillage de la geometrie (type MAILLAGE) \n                                                                        \n     TABOB1        table a deux indices contenant les donnees                   \n     ------        relatives aux bobines (type TABLE)                \n\n           .GENE    table contenant les donnees geometriques                    \n                 .1 nbob: nombre de bobines (type ENTIER)         \n                 .2 b: largeur des bobines (type FLOTTANT)         \n                 .3 h: hauteur des bobines (type FLOTTANT)              \n                 .4 cbob: centre de la bobine (type POINT)            \n                 .5 vn: vecteur normal au plan de la bobine (type POINT)\n                 .6 tsol: table des solenations des bobines            \n                         .i solenation (courant * nombre de spires)   \n                            de la bobine i (type FLOTTANT)           \n                 .7 rt: rayon du tore (type FLOTTANT)                \n                 .8 ri: nombre de bobines (type FLOTTANT)              \n           .TYPE     'c' pour une bobine circulaire                 \n                     'd' pour une bobine en 'D'                      \n           .TRAC1 si oui : trace du maillage des bobines (type LOGIQUE)\n           .CBIOT si oui : calcul de l'induction magnetique             \n           .D       = troncon : table des troncons:                    \n                      troncon.j = troncj : table du troncon j:         \n                         troncj.'l' longueur du troncon si rectiligne, \n                               .'r' rayon de courbure et               \n                               .'alpha' angle de courbure si courbe   \n                                                                            \n     En sortie :                                                              \n                                                                            \n                                                                             \n     TABCHB        table contenant                          \n     ------         \n             TABCHB.i   champ de Biot et Savart relatif au i-eme                \n                        maillage GEO1 (type CHPOINT)                            \n                                                                         \n     TAB2          table contenant                        \n     ----         \n     BOBMAI.i      maillage de chaque bobine (type MAILLAGE)         \n     CONT.j        ensemble des coupes sur le plan j                \n                   (type MAILLAGE)                                    \n                                                           \n     Remarques:                                                            \n     ---------                                                         \n                                                        \n     Les grandeurs suivantes sont \"en dur\" dans la procedure :\n                                                \n     NELE       nombre d'elements generes lors des rotations\n                et des translations effectuees pendant la\n                creation du maillage des bobines.\n                                                              \n     COEF1      coefficient etablissant la distance critique\n                de selection des points lors de la recherche\n                de contour.\n\n     La procedure fournit l'induction dans le vide, calculee avec\n     mu0 = 4 pi 10-7.\n\n ",
  },
  {
    name: "@TOTAL",
    url: "%40TOTAL",
    documentation:
      "$$$$ @TOTAL   NOTICE  CHAT      11/09/12    21:18:20     7124           \n                                             DATE     11/09/12\n\n          CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n         A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n             PAR P. LIBEYRE ( CEA/DSM/DRFC )\n\n\n  Procedure @TOTAL                            Voir aussi :\n     ----------------  \n     TOT = @TOTAL CH1 GEO COMP1 ;\n\n\n     Objet :\n     ______\n\n     Cette  procedure calcule la resultante de la composante\n     d'un CHPOINT sur un maillage donne.\n\n     Commentaire:\n     ____________\n\n     CH1   : champ par points dont on veut sommer une composante\n             (type CHPOINT)\n\n     GEO   : MAILLAGE sur lequel on veut effectuer la sommation\n\n     COMP1 : nom de la composante a sommer (type MOT)\n\n     TOT   : resultante de type FLOTTANT",
  },
  {
    name: "@USCALC",
    url: "%40USCALC",
    documentation:
      "$$$$ @USCALC  NOTICE  MB234859  20/07/29    21:15:01     10666          \n                                             DATE     20/07/29\n\n Procedure @USCALC                        Voir aussi : @USDEPL @USINIB\n  ----------------                     @USPROF @USPOST @USTMPS @USURE      \n         TAB2 = @USCALC TAB1 ENT1 ; \n\n\n  Objet :\n  -------\n\n    Procedure qui determine, pour chaque noeud du maillage se trouvant \n    a l'indice 'SURFACE_APPLICATION', le cisaillement, la pression de \n    contact, le glissement et l'energie dissipee. Elle recupere \n    egalement la valeur du deplacement impose sur le pas et la force de \n    cisaillement associee et cree les cycles de fretting\n\n    (Voir ci-dessous pour les indices de la table concernes)\n \n  Commentaires :\n  --------------\n\n    TAB2 : Objet de type TABLE correspondant a la boite d'usure, avec \n           les indices correctement initialises\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*\n\n Resultats en fin de calcul\n --------------------------\n    Notations utilisees :\n     - Colonne 1\n       - indice T si il s'agit d'une TABLE suivi de \n         - indice U -> stocke a chaque CycActu (numero du cycle d'usure)\n         - indice I -> stocke a chaque IncActu (pas de temps)\n       \n     - Colonne 2 \n       - indice E si il s'agit d'une EVOLUTION\n       - indice L si il s'agit d'une LISTREEL\n       - indice C si il s'agit d'un  CHPOINT\n \n     - Colonne 3\n       - indice de la table ou l'objet est stocke \n\n    Par exemple,\n     - l'indice 'CISAILLEMENT_CONTACT' est une table ayant autant \n    d'indice que d'increment de temps calcule et chacun de ces increments \n    contient un objet de type CHPOINT.\n     - l'indice 'ENERGIE_DISSIPEE_TOTALE' contient un objet de type \n    CHPOINT.\n\n   1  | 2 |            3                                       \n+----------------------------------------------------------------------+\n   TI   E   BOX1.'EVO_GLISSEMENT_CONTACT'    \n   TI   C   BOX1.'CISAILLEMENT_CONTACT'  \n   TI   E   BOX1.'EVO_CISAILLEMENT_CONTACT'         \n   TI   C   BOX1.'PRESSION_CONTACT'                \n   TI   E   BOX1.'EVO_PRESSION_CONTACT' \n   TI   C   BOX1.'ENERGIE_DISSIPEE'       \n   TU   C   BOX1.'ENERGIE_DISSIPEE_CYCLE'             \n        C   BOX1.'ENERGIE_DISSIPEE_TOTALE'\n   TI   E   BOX1.'EVO_ENERGIE_DISSIPEE'          \n   TU   E   BOX1.'EVO_ENERGIE_DISSIPEE_CYCLE'         \n        E   BOX1.'EVO_ENERGIE_DISSIPEE_TOTALE'\n        C   BOX1.'LISTE_DELTAS'\n        C   BOX1.'LISTE_FORCES_TANGENTIELLES' \n   TU   E   BOX1.'CYCLE_DE_FRETTING'          \n+----------------------------------------------------------------------+",
  },
  {
    name: "@USDEPL",
    url: "%40USDEPL",
    documentation:
      "$$$$ @USDEPL  NOTICE  MB234859  20/07/29    21:15:02     10666          \n                                             DATE     20/07/29\n\n Procedure @USDEPL                        Voir aussi : @USCALC @USINIB\n -----------------                     @USPROF @USPOST @USTMPS @USURE      \n                @USDEPL TAB1 ENT1 ; \n\n\n  Objet :\n  -------\n\n    Procedure qui applique le profil d'usure au maillage  \n \n  Commentaires :\n  --------------\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*",
  },
  {
    name: "@USINIB",
    url: "%40USINIB",
    documentation:
      "$$$$ @USINIB  NOTICE  MB234859  20/07/29    21:15:02     10666          \n                                             DATE     20/07/29\n\n Procedure @USINIB                        Voir aussi : @USCALC @USDEPL \n -----------------                     @USPROF @USPOST @USTMPS @USURE  \n             @USINIB TAB1 ENT1 ;\n\n\n  Objet :\n  -------\n\n    Procedure d'initialisation des tables de stockage des resultats. \n \n  Commentaires :\n  --------------\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*",
  },
  {
    name: "@USPOST",
    url: "%40USPOST",
    documentation:
      "$$$$ @USPOST  NOTICE  MB234859  20/07/29    21:15:03     10666          \n                                             DATE     20/07/29\n\n Procedure @USPOST                        Voir aussi : @USCALC @USDEPL\n -----------------                     @USINIB @USPROF @USTMPS @USURE  \n         TAB2 = @USPOST TAB1 ENT1 ; \n\n\n  Objet :\n  -------\n\n    Procedure de post-traitement supplementaire appelee en fin de cycle\n    d'usure. Elle calcule l'energie dissipee durant le cycle numerique \n    (integration du cycle de fretting), le volume use durant beta cycles \n    numeriques (integration du profil d'usure) et le nombre de cycles \n    reels equivalent (variable scalaire incrementee).\n\n    (Voir ci-dessous pour les indices de la table concernes)\n \n  Commentaires :\n  --------------\n\n    TAB2 : Objet de type TABLE correspondant a la boite d'usure, avec \n           les indices correctement initialises\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*\n\n Resultats en fin de calcul\n --------------------------\n    Notations utilisees :\n     - Colonne 1\n       - indice T si il s'agit d'une TABLE suivi de \n         - indice U -> stocke a chaque CycActu (numero du cycle d'usure)\n         - indice I -> stocke a chaque IncActu (pas de temps)\n       \n     - Colonne 2 \n       - indice E si il s'agit d'une EVOLUTION\n       - indice L si il s'agit d'une LISTREEL\n       - indice C si il s'agit d'un  CHPOINT\n \n     - Colonne 3\n       - indice de la table ou l'objet est stocke \n\n    Par exemple,\n     - l'indice 'LISTE_PRESSION_MAX' est un objet de type LISTREEL\n\n   1  | 2 |            3                                       \n+----------------------------------------------------------------------+         \n        L   BOX1.'LISTE_PRESSION_MAX'                \n        L   BOX1.'LISTE_CISAILLEMENT_MAX'  \n   TU   E   BOX1.'EVO_PRESSION_MOYENNE_CYCLE' \n   TU   E   BOX1.'EVO_CISAILLEMENT_MOYEN_CYCLE'\n        L   BOX1.'LISTE_DELTA_T'\n        L   BOX1.'LISTE_NUMERO_CYCLE_NUMERIQUE' \n        L   BOX1.'LISTE_CYCLES_REELS_EQUIVALENTS'\n        L   BOX1.'LISTE_ENERGIE_DISSIPEE_CYCLE'\n        L   BOX1.'LISTE_ENERGIE_DISSIPEE_TOTALE'\n        L   BOX1.'LISTE_VOLUME_USE_CYCLE' \n        L   BOX1.'LISTE_VOLUME_USE_TOTAL'               \n        E   BOX1.'EVO_ENERGIE_DISS_CYCLE'    \n        E   BOX1.'EVO_ENERGIE_DISS_TOTALE'               \n        E   BOX1.'EVO_VOLUME_USE_TOTAL_VS_CYCLES_REELS'\n        E   BOX1.'EVO_VOLUME_USE_TOTAL_VS_ENERGIE_DISS_TOTALE'\n        E   BOX1.'EVO_DELTA_G_VS_CYCLES_REELS_EQUIV'\n        E   BOX1.'EVO_DELTA_T_VS_CYCLES_REELS_EQUIV'\n        E   BOX1.'EVO_PRESSION_MAX_VS_CYCLES_NUMS'   \n        E   BOX1.'EVO_CISAILLEMENT_MAX_VS_CYCLES_NUMS'\n+----------------------------------------------------------------------+",
  },
  {
    name: "@USPROF",
    url: "%40USPROF",
    documentation:
      "$$$$ @USPROF  NOTICE  MB234859  20/07/29    21:15:03     10666          \n                                             DATE     20/07/29\n\n Procedure @USPROF                        Voir aussi : @USCALC @USDEPL\n -----------------                     @USINIB @USPOST @USTMPS @USURE  \n         TAB2 = @USPROF TAB1 ENT1 ; \n\n\n  Objet :\n  -------\n\n    Procedure qui calcule le profil d usure a appliquer selon  \n\n                      DeltaH = alpha * beta * phi \n\n    Avec \n     - alpha : valeur se trouvant a l'indice 'COEFFICIENT_USURE'\n     - beta  : valeur se trouvant a l'indice 'FACTEUR_ACCELERATION'\n     - phi   : densite surfacique d'energie dissipee (voir @USCALC)\n\n    (Voir ci-dessous pour les indices de la table concernes)\n \n  Commentaires :\n  --------------\n\n    TAB2 : Objet de type TABLE correspondant a la boite d'usure, avec \n           les indices correctement initialises\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*\n\n Resultats en fin de calcul\n --------------------------\n    Notations utilisees :\n     - Colonne 1\n       - indice T si il s'agit d'une TABLE suivi de \n         - indice U -> stocke a chaque CycActu (numero du cycle d'usure)\n         - indice I -> stocke a chaque IncActu (pas de temps)\n       \n     - Colonne 2 \n       - indice E si il s'agit d'une EVOLUTION\n       - indice L si il s'agit d'une LISTREEL\n       - indice C si il s'agit d'un  CHPOINT\n \n     - Colonne 3\n       - indice de la table ou l'objet est stocke \n\n    Par exemple,\n     - l'indice 'USURE_APPLIQUEE' est une table ayant autant d'indice\n       que de cycle d'usure et contenant un objet de type CHPOINT\n\n   1  | 2 |            3                                       \n+----------------------------------------------------------------------+\n   TU   C   BOX1.'USURE_APPLIQUEE'  \n   TU   C   BOX1.'USURE_CUMULEE'     \n   TU   E   BOX1.'EVO_USURE_APPLIQUEE'\n   TU   E   BOX1.'EVO_USURE_CUMULEE'  \n+----------------------------------------------------------------------+",
  },
  {
    name: "@USTMPS",
    url: "%40USTMPS",
    documentation:
      "$$$$ @USTMPS  NOTICE  MB234859  20/07/29    21:15:04     10666          \n                                             DATE     20/07/29\n\n Procedure @USTMPS                        Voir aussi : @USCALC @USDEPL\n -----------------                     @USINIB @USPROF @USPOST @USURE  \n         LREEL1 LREEL2 = @USTMPS TAB1 ; \n\n\n  Objet :\n  -------\n\n    Procedure determinant, selon les profils des cycles d'usure, la \n    liste des instants a calculer. \n \n  Commentaires :\n  --------------\n\n    LREEL1   : Objet de type LISTREEL contenant la liste des instants a\n               calculer\n\n    LREEL2   : Objet de type LISTREEL contenant la liste des instants a\n               sauvegarder\n\n    TAB1     : Objet de type TABLE correspondant a la boite d'usure\n\n  Cette procedure est appelee par @USURE\n\n*---------------------------------------------------------------------*",
  },
  {
    name: "@USURE",
    url: "%40USURE",
    documentation:
      "$$$$ @USURE   NOTICE  MB234859  19/10/10    21:15:02     10331          \n                                             DATE     19/10/10\n\n Procedure @USURE                         Voir aussi : @USCALC @USDEPL\n ----------------                      @USINIB @USPROF @USPOST @USTMPS  \n         TAB2 = @USURE TAB1 ENT1 ; \n\n\n  Objet :\n  -------\n\n    Procedure principale pour les calculs d'usure. Elle determine \n     - si on est dans la phase d'usure -> si oui appel a @USCALC\n     - si on doit appliquer le profil d'usure -> si oui appel a @USPROF, \n       @USPOST et @USDEPL\n     - si on commence un nouveau cycle d'usure ou si on en termine un\n\n  Commentaires :\n  --------------\n\n    TAB2 : Objet de type TABLE correspondant a la boite d'usure, avec \n           les indices correctement initialises\n\n    TAB1 : Objet de type TABLE correspondant a la boite d'usure\n\n    ENT1 : Objet de type ENTIER donnant le numero de la boite a \n           considerer\n\n  Cette procedure est appelee par PERSO1\n\n*---------------------------------------------------------------------*",
  },
  {
    name: "@VECOUL",
    url: "%40VECOUL",
    documentation:
      "$$$$ @VECOUL  NOTICE  GOUNAND   12/12/06    21:15:34     7592           \n                                             DATE     12/12/06\n\n  Procedure @VECOUL                      Voir aussi : \n     --------------                                       \n     Syntaxe :   VCTOT1 = @VECOUL CH1 AMPL1 (LMOT1) (MOT1) (VRED1) ;\n\n  \n  \n\n        Objet :\n        -------\n\n    Procedure qui construit un objet VCTOT1 (type VECTEUR)\n    de couleur variable en fonction de sa norme\n    a partir d'un champs de vecteur CH1 (type CHPOINT).\n\n    L'objet VCTOT1 est constitue de 10 sous-vecteurs de couleurs\n    VIOL AZUR BLEU TURQ OCEA VERT OLIV JAUN ORAN ROUG\n    qui correspondent a 10 intervalles de la plage de la norme\n    (echelle lineaire dans le sens croissant).\n\n    Les composantes des sous-vecteurs de couleurs sont renommees pour\n    permettre l'affichage de la valeur moyenne de la norme du vecteur\n    associee a sa couleur lors du trace graphique.\n\n    Il est possible d'extraire un pourcentage (VRED1 x 100) % \n    (si VRED1 dans [0,1]) ou un nombre donn\u00e9 VRED1 (si VRED1 > 1) de ces\n    vecteurs : aleatoirement si MOT1 = ALTR, regulierement sinon.\n\n    Postraitement TRAC VCTOT1 MAILLAGE ;\n\n        Commentaire :\n        -------------\n\n    Entree  :\n    ---------\n    CH1      : Champs de vecteur (type CHPOINT)\n\n    AMPL1    : Facteur d'amplification (FLOTTANT) OBLIGATOIRE\n\n    LMOT1    : Pr\u00e9ciser les noms de composantes voulues (type LISTMOTS)\n\n    MOT1     : Extraction aleatoire si MOT1 = ALTR, reguliere sinon\n\n    VRED1    : Pourcentage ([0,1]) ou nombre (>1) de vecteurs extraits \n               (type FLOTTANT)\n\n    Sortie  :\n    ---------\n    VCTOT1   : Vecteur (VECTEUR) compose de 10 sous-type vecteur de\n               differentes couleurs.\n\n        Remarques :\n        -----------\n\n    1 - Le facteur d'amplification AMPL1 est une entree obligatoire.\n    \n    2 - Si VRED1 < 0., on extrait 100 %.",
  },
  {
    name: "@VIS3D",
    url: "%40VIS3D",
    documentation:
      "$$$$ @VIS3D   NOTICE  CHAT      11/09/12    21:18:32     7124           \n                                             DATE     11/09/12\n\n\n  Procedure VIS3D                             Voir aussi :\n     ---------------  \n   @VIS3D GEO1 POINT1 POINT2 OEIL NROT (ROTOT);\n\n\n\n    Objet :\n    _______\n\n  La procedure @VIS3D effectue une animation de l'enveloppe du maillage\n  GEO1 par NROT rotations successives entre -ROTOT/2 et +ROTOT/2\n  autour de l'axe defini par les points POINT1 et POINT2.\n  Cette animation est visualisee suivant le point d'observation OEIL;\n\nGEO1    : MAILLAGE (3D)\nPOINT1  : POINT\nPOINT2  : POINT\nOEIL    : POINT\nNROT    : ENTIER\nROTOT   : FLOTTANT\n\n    remarque :\n    __________\n\n  Les arguments doivent etre indiques dans l'ordre.\n  Pour stopper l'animation, il suffit de cliquer dans la fenetre de\n  dessin.",
  },
  {
    name: "@VISOR",
    url: "%40VISOR",
    documentation:
      "$$$$ @VISOR   NOTICE  CHAT      11/09/12    21:18:32     7124           \n                                             DATE     11/09/12\n                                                                        \n                                                                        \n       CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n      A DISPOSITION DE LA COMMUNAUTE  CASTEM2000\n    PAR  DELERUYELLE Fr.  (SOCOTEC-INDUSTRIE a l'IPSN/DES)\n\n  Procedure @VISOR                         Voir aussi :\n      ----------------  \n      VEC1  =  @VISOR  GEO1 (FLOT1) (COUL1) ;\n                                                                        \n\n                                                                        \n      Objet :                                                           \n      ______                                                            \n                                                                        \n    Cette procedure permet de visualiser l'orientation des elements\n    orientables (SEG2,SEG3,TRI3,TRI6,QUA4,QUA8). Elle produit un\n    objet de type VECTEUR qu'on peut tracer.\n                                                                        \n                                                                        \n      Commentaires :                                                    \n      _____________                                                     \n                                                                        \n      GEO1   : Maillage. (type MAILLAGE)\n                                                                        \n      FLOT1  : Coefficient d'amplification du vecteur resultat.\n               Facultatif, il vaut 2/3 par defaut. (type FLOTTANT)\n                                                                        \n      COUL1  : Couleur du vecteur resultat.\n               Facultatif, il est jaune par defaut. (type MOT)\n\n      VEC1   : Objet resultat. (type VECTEUR)\n                                                                        \n                                                                        \n      Exemple :                                                         \n      ________                                                          \n                                                                        \n      opti dime 2 elem qua8 ;\n      li = (0 0) d 5 (1 0) ;\n      su = li tran 3 (0 -1) ;\n      vo1 = @VISOR li ;         trac vo1 li ;\n      vo2 = @VISOR su roug ;    trac vo2 su ;\n      vo3 = @VISOR (su et li) ; trac vo3 su ;\n      vo4 = @VISOR (cont su) ;  trac vo4 su ;\n                                                                        \n                                                                        \n      Remarques :\n      _________\n                                                                        \n      1) En 2D, pour les elements plans, la fleche est vers le\n         bas pour les elements retrogrades (aiguilles d'une montre)\n         et vers le haut pour les elements directs (trigonometriques).\n\n      2) En 3D, pour les elements plans, la fleche est dans le sens\n         de la normale positive.\n                                                                        \n      3) Pour les elements lignes, la fleche est dans le sens de\n         parcourt des elements.\n                                                                        \n\n\n ",
  },
  {
    name: "@ZACPLUS",
    url: "%40ZACPLUS",
    documentation:
      "$$$$ @ZACPLUS NOTICE  CHAT      11/09/12    21:18:36     7124           \n                                             DATE     11/09/12\n\n                                                        \n  procedure @ZACPLUS                           Voir aussi :\n    -----------------      \n    RES = @ZACPLUS TBZA;\n\n\n\n    Objet :\n    _______\n\n    La procedure @ZACPLUS calcule directement l'etat limite d'une\n    structure soumise a un chargement cyclique. La methode de calcul\n    utilisee  dans @ZACPLUS est basee sur les travaux des methodes \n    d'analyses simplifiees de MM. ZARKA ARNAUDEAU CASIER et sur les \n    modifications proposees par M. GATT \n\n\n    Commentaire : \n    _____________\n   \n    TBZA  : objet de type TABLE contenant les donnees suivantes\n\n        \n    indice       type objet pointe               commentaires\n\n  \n    TBZA.SIG1      MCHAML       solutions elastiques correspondant\n    TBZA.SIG2                   aux extrema du cycle de chargement.\n                                Ces contraintes elastiques seront \n                                precedemment calculees hors de la\n                                procedure.\n                                Nous supposons que la structure etudiee \n                                est soumise a un chargement cyclique \n                                dependant d'un seul parametre.\n                                La reponse elastique sera de la forme :\n\n                                SIG elas = (1 - F)*SIG1 + F*SIG2\n\n                                (F etant une fonction periodique a\n                                valeur dans l'intervalle [0,1]). \n\n    TBZA.CLIM      RIGIDITE     rigidites de blocage utilisees dans\n                                le calculde SIG1 et SIG2.\n\n    TBZA.I         TABLE        table contenant les caracteristiques \n                                du Ieme materiau de la structure.\n\n    TBZA.I.GEOM    MAILLAGE     Ieme partie geometrique delimitant l'un\n                                des materiaux constituant la structure.\n\n    TBZA.I.YOUN    FLOTTANT     module d'Young de la Ieme partie \n                   MCHAML       geometrique.\n                   EVOLUTION \n\n    TBZA.I.NU      FLOTTANT     coefficient de Poisson \n                   MCHAML       de la Ieme partie geometrique.\n                   EVOLUTION\n\n    TBZA.I.SIGY    FLOTTANT     limite d'elasticite\n                   MCHAML       de la Ieme partie geometrique.\n                   EVOLUTION\n\n    TBZA.I.H       FLOTTANT     module d'ecrouissage\n                   MCHAML       de la Ieme partie geometrique.\n                   EVOLUTION\n\n\n    RES  : objet de type TABLE contenant les resultats suivants\n\n\n    DEPFINA        MCHAML       amplitudes des deformations plastiques \n                                (delta epsilon plastiques).\n\n    DSIFINA        MCHAML       amplitudes des contraintes(delta sigma).\n\n    EPMFINA        MCHAML       deformations plastiques moyennes \n                                   (epsilon plastiques moyen).\n\n    SIMFINA        MCHAML       contraintes moyennes (sigma moyen).\n\n\n    MATETOT        MCHAML       champ contenant les caracteristiques \n                                des materiaux composant la structure \n                                globale.\n\n    MODETOT        MMODEL       modele associe au maillage \n                                de la structure globale.\n\n\n\n\n\n    Remarque 1: \n    ___________\n\n    Cette procedure peut etre utilisee dans les modes de calcul \n    suivants :\n        - contraintes planes \n        - deformations planes\n        - axisymetrique\n        - tridimensionnel\n\n    Remarque 2: \n    ___________\n    \n    Pour utiliser cette procedur il faut que tous les MODELEs \n    utilises dans le calcul de la structure aient le meme nom de\n    constituant. Il faut donc le definir au moment de la creation \n    des modeles (operateur MODE).",
  },
  {
    name: "@ZACPRO1",
    url: "%40ZACPRO1",
    documentation:
      "$$$$ @ZACPRO1 NOTICE  CHAT      11/09/12    21:18:36     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO1                          Voir aussi :\n    ------------------  \n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO2",
    url: "%40ZACPRO2",
    documentation:
      "$$$$ @ZACPRO2 NOTICE  CHAT      11/09/12    21:18:37     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO2                             Voir aussi :\n    ------------------  \n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO3",
    url: "%40ZACPRO3",
    documentation:
      "$$$$ @ZACPRO3 NOTICE  CHAT      11/09/12    21:18:37     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO3                            Voir aussi :\n    ------------------  \n\n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO4",
    url: "%40ZACPRO4",
    documentation:
      "$$$$ @ZACPRO4 NOTICE  CHAT      11/09/12    21:18:37     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO4                          Voir aussi :\n    ------------------  \n\n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO5",
    url: "%40ZACPRO5",
    documentation:
      "$$$$ @ZACPRO5 NOTICE  CHAT      11/09/12    21:18:37     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO5                           Voir aussi :\n    ------------------  \n\n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO6",
    url: "%40ZACPRO6",
    documentation:
      "$$$$ @ZACPRO6 NOTICE  CHAT      11/09/12    21:18:38     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO6                           Voir aussi :\n    ------------------  \n\n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO7",
    url: "%40ZACPRO7",
    documentation:
      "$$$$ @ZACPRO7 NOTICE  CHAT      11/09/12    21:18:38     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO7                            Voir aussi :\n    ------------------  \n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "@ZACPRO8",
    url: "%40ZACPRO8",
    documentation:
      "$$$$ @ZACPRO8 NOTICE  CHAT      11/09/12    21:18:38     7124           \n                                             DATE     11/09/12\n \n\n  procedure @ZACPRO8                             Voir aussi :\n    ------------------  \n\n      Cette procedure est appelee par la procedure @ZACPLUS  ",
  },
  {
    name: "/",
    url: "AAA1",
    documentation:
      "$$$$ /        NOTICE  CB215821  16/11/28    21:15:01     9202           \n                                             DATE     16/11/28\n\n   Operateur /                               Voir aussi : + -\n   -----------                                            **  *  \n   RESU1 = ( MODL1) OBJET1 / OBJET2 ;                     \n\n\n   Objet :\n   _______\n\n   L'operateur / calcule la division de OBJET1 par OBJET2.\n\n   Operations possibles :\n   ______________________\n\n---------------------------------------------------------------------\n|     OBJET1        |      OBJET2           |       RESU1           |\n---------------------------------------------------------------------\n|     ENTIER        |      ENTIER           |      ENTIER           |\n|     ENTIER        |     FLOTTANT          |     FLOTTANT          |\n|     ENTIER        |     LISTREEL          |     LISTREEL          |\n|     ENTIER        |     EVOLUTIO          |     EVOLUTIO          |\n|     ENTIER        |     CHPOINT           |     CHPOINT           |\n|     ENTIER        |     MCHAML            |     MCHAML            |\n---------------------------------------------------------------------\n|    FLOTTANT       |      ENTIER           |     FLOTTANT          |\n|    FLOTTANT       |     FLOTTANT          |     FLOTTANT          |\n|    FLOTTANT       |     LISTREEL          |     LISTREEL          |\n|    FLOTTANT       |     EVOLUTIO          |     EVOLUTIO          |\n|    FLOTTANT       |     CHPOINT           |     CHPOINT           |\n|    FLOTTANT       |     MCHAML            |     MCHAML            |\n---------------------------------------------------------------------\n|     POINT         |      ENTIER           |      POINT            |\n|     POINT         |     FLOTTANT          |      POINT            |\n---------------------------------------------------------------------\n|    LISTREEL       |      ENTIER           |     LISTREEL          |\n|    LISTREEL       |     FLOTTANT          |     LISTREEL          |\n|    LISTREEL       |     LISTREEL          |     LISTREEL          |\n|    LISTREEL       |     LISTENTI          |     LISTREEL          |\n---------------------------------------------------------------------\n|    LISTENTI       |      ENTIER           |     LISTENTI          |\n|    LISTENTI       |     FLOTTANT          |     LISTREEL          |\n|    LISTENTI       |     LISTENTI          |     LISTENTI          |\n|    LISTENTI       |     LISTREEL          |     LISTREEL          |\n---------------------------------------------------------------------\n|    EVOLUTION      |      ENTIER           |     EVOLUTION         |\n|    EVOLUTION      |     FLOTTANT          |     EVOLUTION         |\n|    EVOLUTION      |     EVOLUTION         |     EVOLUTION         |\n---------------------------------------------------------------------\n|    CHPOINT        |      ENTIER           |     CHPOINT           |\n|    CHPOINT        |     FLOTTANT          |     CHPOINT           |\n| CHPOINT (LISTMOT1)|  CHPOINT  (LISTMOT2)  |  CHPOINT  (LISTMOT3)  |\n---------------------------------------------------------------------\n|    MCHAML         |      ENTIER           |     MCHAML            |\n|    MCHAML         |     FLOTTANT          |     MCHAML            |\n| (MODL1) MCHAML    |     MCHAML            |     MCHAML            |\n| MCHAML (LISTMOT1) |   MCHAML (LISTMOT2)   |    MCHAML (LISTMOT3)  |\n---------------------------------------------------------------------\n|    RIGIDITE       |      ENTIER           |     RIGIDITE          |\n|    RIGIDITE       |     FLOTTANT          |     RIGIDITE          |\n---------------------------------------------------------------------\n|  TABLE 'VECTEUR'  |        ENTIER         |   TABLE 'VECTEUR'     |\n|  TABLE 'VECTEUR'  |       FLOTTANT        |   TABLE 'VECTEUR'     |\n---------------------------------------------------------------------\n\n\n    Remarque 1 :\n    ____________\n\n  Lorsque l'operateur / calcule la division de deux CHPOINT, on\nutilise par defaut la regle de division suivante : tout point \nayant dans un des CHPOINT une composante unique de nom \"SCAL\",\nvoit toutes les valeurs des composantes de l'autre CHPOINT\ndivisees par la valeur du scalaire. Le CHPOINT RESU1 ne porte\nque sur de tels points.\n\n   Lorsque l'operateur / calcule la division de deux CHPOINT, on peut       \naussi utiliser la regle de division suivante a condition de \nfournir trois listes mot de longueur egale  qui constituent \nla cle de l'operation : \nLa ieme composante du chpoint resultat aura pour nom le ieme mot\nde la troisieme liste de mots et sera egale au produit \nde la composante du 1er champoint reperee par le ieme mot de la \n1ere liste de mots par la composante du 2nd champoint reperee par \nle ieme mot de la 2nde liste de mots. \n \nEx :\n      chp3          chp1           chp2  \n   composante    composante     composante\n    resultat      argument1      argument2\n      'FX'          'KX'           'UX'\n      'FY'          'KYX'          'UX'\n\n      lmot1 = 'MOTS' 'KX'  'KYX' ;\n      lmot2 = 'MOTS' 'UX'  'UX' ;\n      lmot3 = 'MOTS' 'FX'  'FY' ;\n      chp3  =  chp1  '/'  chp2   lmot1 lmot2 lmot3 ; \n     \nDans le cadre de cette option on peut specifier la nature du champ\nresultat avec le mot cle 'NATURE'. Celui ci est alors suivi d'un des\ntrois mots suivant 'DIFFUS' 'DISCRET' 'INDETERMINE'.\nOn rappelle qu'un champ par point vaut zero la ou il n'est pas defini.\n   \n\n    Remarque 2 :\n    ____________\n\n    L'operateur / calcule la division d'un objet de type TABLE\nde sous-type 'VECTEUR' par un nombre (FLOTTANT ou ENTIER) VAL1.\nLe resultat est de type TABLE et de sous-type 'VECTEUR'.\n\n    Remarque 3 :\n    ____________\n\n    Lorsque l'operateur / calcule la division de deux objets de type\nEVOLUTION, les deux objets donnes, doivent avoir le Meme nombre de\ncourbes N1, et doivent etre de Meme type, c'est-a-dire soit reels,\nsoit complexes :\n\n    a) Objets EVOLUTION reels:\n\n    On effectue la division terme a terme des deux courbes de Meme indice\npour les deux objets; les abscisses de ces courbes doivent etre des\nprogressions identiques; elles deviennent les abscisses des courbes du\nnouvel objet EVOLUTION cree par l'operateur.\n\n    b) Objets EVOLUTION complexes :\n\n    Les abscisses doivent etre identiques; elles deviennent les\nabscisses du nouvel objet EVOLUTION cree par l'operateur.\nChacun des deux objets peut etre, soit \"PREE PIMA\", soit \"MODU PHAS\".\n\nL'objet EVOL3 a le meme type que EVOL1. On peut lui attribuer une\ncouleur COUL1 :\n\n                    EVOL3 = EVOL1 / EVOL2  ( COUL1 ) ;\n\n    Remarque 4 :\n    ____________\n\n    Lorsque l'operateur / calcule la division de deux objets, l'un de\ntype MCHAML (ou CHPOINT ) et l'autre, de type EVOLUTION, il\ntransforme toutes les valeurs du MCHAML (ou du CHPOINT )\nOBJET1 a l'aide de la fonction representee par l'objet EVOLUTION, OBJET2\n\n    Remarque 5 :\n    ____________\n\n    Lorsque l'operateur / calcule la division de deux objets de\ntype MCHAML, ils doivent avoir les meme sous zones elementaires\nIl y a 3 sortes de divisions :\n\n    - Un MCHAML quelconque (objet1) par un MCHAML scalaire (objet2)\n      de sous zones identiques. Dans ce cas l'ordre doit etre respecte.\n\n    - Un MCHAML par un autre MCHAML pour peu qu'ils aient les memes\n      noms de composantes et les memes sous zones. La division\n      s'effectue composante par composante. Les composantes peuvent\n      avoir un type FLOTTANT, LISTREEL ou EVOLUTIOn.\n\n    - Un MCHAML par un autre MCHAML pour peu qu'ils aient les memes\n      sous zones. L'utilisateur doit alors fournir trois listmots\n      de longueur egale, et la regle de division est identique \n      au cas du CHPOINT (voir ci-dessus). De plus on peut fournir une\n      progression de meme longueur que les listmots, dont les \n      coefficients divisent respectivement les composantes du \n      champ resultat. Les composantes peuvent avoir un type FLOTTANT,\n      LISTREEL ou EVOLUTIOn.",
  },
  {
    name: "**",
    url: "AAA3",
    documentation:
      "$$$$ **       NOTICE  CB215821  20/09/21    21:15:00     10720          \n                                             DATE     20/09/21\n\n    Operateur * *                             Voir aussi : * +\n    ------------                                          -  /   \n    RESU1 = OBJET1 ** OBJET2 ;                            \n\n\n    Objet :\n    _______\n\n    L'operateur ** eleve l'objet OBJET1 a la puissance OBJET2\n\n    Operations possibles :\n\n\n---------------------------------------------------------------------\n|     OBJET1        |      OBJET2           |       RESU1           |\n---------------------------------------------------------------------\n|     ENTIER        |      ENTIER           |      ENTIER           |\n|     ENTIER        |     FLOTTANT          |     FLOTTANT          |\n|     ENTIER        |     LISTREEL          |     LISTREEL          |\n|     ENTIER        |     LISTENTI          |     LISTENTI          |\n|     ENTIER        |     EVOLUTIO          |     EVOLUTIO          |\n|     ENTIER        |     CHPOINT           |     CHPOINT           |\n|     ENTIER        |     MCHAML            |     MCHAML            |\n---------------------------------------------------------------------\n|    FLOTTANT       |      ENTIER           |     FLOTTANT          |\n|    FLOTTANT       |     FLOTTANT          |     FLOTTANT          |\n|    FLOTTANT       |     LISTREEL          |     LISTREEL          |\n|    FLOTTANT       |     LISTENTI          |     LISTREEL          |\n|    FLOTTANT       |     EVOLUTIO          |     EVOLUTIO          |\n|    FLOTTANT       |     CHPOINT           |     CHPOINT           |\n|    FLOTTANT       |     MCHAML            |     MCHAML            |\n---------------------------------------------------------------------\n|    LISTREEL       |      ENTIER           |     LISTREEL          |\n|    LISTREEL       |     FLOTTANT          |     LISTREEL          |\n|    LISTREEL       |     LISTREEL          |     LISTREEL          |\n|    LISTREEL       |     LISTENTI          |     LISTREEL          |\n---------------------------------------------------------------------\n|    LISTENTI       |      ENTIER           |     LISTENTI          |\n|    LISTENTI       |     FLOTTANT          |     LISTREEL          |\n|    LISTENTI       |     LISTREEL          |     LISTREEL          |\n|    LISTENTI       |     LISTENTI          |     LISTENTI          |\n---------------------------------------------------------------------\n|    EVOLUTION      |      ENTIER           |     EVOLUTION         |\n|    EVOLUTION      |     FLOTTANT          |     EVOLUTION         |\n---------------------------------------------------------------------\n|    CHPOINT        |      ENTIER           |     CHPOINT           |\n|    CHPOINT        |     FLOTTANT          |     CHPOINT           |\n---------------------------------------------------------------------\n|    MCHAML         |      ENTIER           |     MCHAML            |\n|    MCHAML         |     FLOTTANT          |     MCHAML            |\n---------------------------------------------------------------------\n|    RIGIDITE       |      ENTIER           |     RIGIDITE          |\n|    RIGIDITE       |     FLOTTANT          |     RIGIDITE          |\n---------------------------------------------------------------------\n\n$$$$\n ",
  },
  {
    name: "*",
    url: "AAA2",
    documentation:
      "$$$$ *        NOTICE  CB215821  16/11/28    21:15:01     9202           \n                                             DATE     16/11/28\n\n   Operateur *                               Voir aussi : + -\n   -----------                                            **  /  \n   RESU1 = ( MODL1) OBJET1 * OBJET2 ;                     \n\n\n   Objet :\n   _______\n\n   L'operateur * calcule le produit des objets OBJET1 et OBJET2.\n\n   Operations possibles :\n   ______________________\n\n---------------------------------------------------------------------\n|     OBJET1        |      OBJET2           |       RESU1           |\n---------------------------------------------------------------------\n|     ENTIER        |      ENTIER           |      ENTIER           |\n|     ENTIER        |     FLOTTANT          |     FLOTTANT          |\n|     ENTIER        |      POINT            |      POINT            |\n|     ENTIER        |     LISTREEL          |     LISTREEL          |\n|     ENTIER        |     LISTENTI          |     LISTENTI          |\n|     ENTIER        |     CHPOINT           |     CHPOINT           |\n|     ENTIER        |     MCHAML            |     MCHAML            |\n|     ENTIER        |     RIGIDITE          |     RIGIDITE          |\n|     ENTIER        |     EVOLUTION         |     EVOLUTION         |\n|     ENTIER        |     TABLE 'VECTEUR'   |     TABLE 'VECTEUR'   |\n---------------------------------------------------------------------\n|    FLOTTANT       |      ENTIER           |     FLOTTANT          |\n|    FLOTTANT       |     FLOTTANT          |     FLOTTANT          |\n|    FLOTTANT       |      POINT            |      POINT            |\n|    FLOTTANT       |     LISTREEL          |     LISTREEL          |\n|    FLOTTANT       |     LISTENTI          |     LISTENTI          |\n|    FLOTTANT       |     CHPOINT           |     CHPOINT           |\n|    FLOTTANT       |     MCHAML            |     MCHAML            |\n|    FLOTTANT       |     RIGIDITE          |     RIGIDITE          |\n|    FLOTTANT       |     EVOLUTION         |     EVOLUTION         |\n|    FLOTTANT       |     TABLE 'VECTEUR'   |     TABLE 'VECTEUR'   |\n---------------------------------------------------------------------\n|     POINT         |      ENTIER           |      POINT            |\n|     POINT         |     FLOTTANT          |      POINT            |\n---------------------------------------------------------------------\n|    LISTREEL       |      ENTIER           |     LISTREEL          |\n|    LISTREEL       |     FLOTTANT          |     LISTREEL          |\n|    LISTREEL       |     LISTREEL          |     LISTREEL          |\n|    LISTREEL       |     LISTENTI          |     LISTREEL          |\n---------------------------------------------------------------------\n|    LISTENTI       |      ENTIER           |     LISTENTI          |\n|    LISTENTI       |     FLOTTANT          |     LISTREEL          |\n|    LISTENTI       |     LISTENTI          |     LISTENTI          |\n|    LISTENTI       |     LISTREEL          |     LISTREEL          |\n---------------------------------------------------------------------\n|    EVOLUTION      |      ENTIER           |     EVOLUTION         |\n|    EVOLUTION      |     FLOTTANT          |     EVOLUTION         |\n|    EVOLUTION      |     MCHAML            |     MCHAML            |\n|    EVOLUTION      |     CHPOINT           |     CHPOINT           |\n|    EVOLUTION      |     EVOLUTION         |     EVOLUTION         |\n---------------------------------------------------------------------\n|    CHPOINT        |      ENTIER           |     CHPOINT           |\n|    CHPOINT        |     FLOTTANT          |     CHPOINT           |\n| CHPOINT (LISTMOT1)|  CHPOINT  (LISTMOT2)  |  CHPOINT  (LISTMOT3)  |\n|    CHPOINT        |     RIGIDITE          |     CHPOINT           |\n|    CHPOINT        |     EVOLUTION         |     CHPOINT           |\n---------------------------------------------------------------------\n|    MCHAML         |      ENTIER           |     MCHAML            |\n|    MCHAML         |     FLOTTANT          |     MCHAML            |\n|    MCHAML         |     EVOLUTION         |     MCHAML            |\n| (MODL1) MCHAML    |     MCHAML            |     MCHAML            |\n| MCHAML (LISTMOT1) |   MCHAML (LISTMOT2)   |    MCHAML (LISTMOT3)  |\n---------------------------------------------------------------------\n|    RIGIDITE       |     CHPOINT           |     CHPOINT           |\n|    RIGIDITE       |      ENTIER           |     RIGIDITE          |\n|    RIGIDITE       |     FLOTTANT          |     RIGIDITE          |\n---------------------------------------------------------------------\n|  TABLE 'VECTEUR'  |        ENTIER         |   TABLE 'VECTEUR'     |\n|  TABLE 'VECTEUR'  |       FLOTTANT        |   TABLE 'VECTEUR'     |\n---------------------------------------------------------------------\n\n\n    Remarque 1 :\n    ____________\n\n  Lorsque l'operateur * calcule le produit de deux CHPOINT, on\nutilise par defaut la regle de multiplication suivante : tout point \nayant dans un des CHPOINT une composante unique de nom \"SCAL\",\nvoit toutes les valeurs des composantes de l'autre CHPOINT\nmultipliees par la valeur du scalaire. Le CHPOINT RESU1 ne porte\nque sur de tels points.\n\n   Lorsque l'operateur * calcule le produit de deux CHPOINT, on peut       \naussi utiliser la regle de multiplication suivante a condition de \nfournir trois listes mot de longueur egale  qui constituent \nla cle de l'operation : \nLa ieme composante du chpoint resultat aura pour nom le ieme mot\nde la troisieme liste de mots et sera egale au produit \nde la composante du 1er champoint reperee par le ieme mot de la \n1ere liste de mots par la composante du 2nd champoint reperee par \nle ieme mot de la 2nde liste de mots. \n \nEx :\n      chp3          chp1           chp2  \n   composante    composante     composante\n    resultat      argument1      argument2\n      'FX'          'KX'           'UX'\n      'FY'          'KYX'          'UX'\n\n      lmot1 = 'MOTS' 'KX'  'KYX' ;\n      lmot2 = 'MOTS' 'UX'  'UX' ;\n      lmot3 = 'MOTS' 'FX'  'FY' ;\n      chp3  =  chp1  '*'  chp2   lmot1 lmot2 lmot3 ; \n     \nDans le cadre de cette option on peut specifier la nature du champ\nresultat avec le mot cle 'NATURE'. Celui ci est alors suivi d'un des\ntrois mots suivant 'DIFFUS' 'DISCRET' 'INDETERMINE'.\nOn rappelle qu'un champ par point vaut zero la ou il n'est pas defini.\n   \n\n    Remarque 2 :\n    ____________\n\n    L'operateur * calcule le produit d'un objet de type TABLE\nde sous-type 'VECTEUR' par un nombre (FLOTTANT ou ENTIER) VAL1.\nLe resultat est de type TABLE et de sous-type 'VECTEUR'.\n\n    Remarque 3 :\n    ____________\n\n    Lorsque l'operateur * calcule le produit de deux objets de type\nEVOLUTION, les deux objets donnes, doivent avoir le Meme nombre de\ncourbes N1, et doivent etre de Meme type, c'est-a-dire soit reels,\nsoit complexes :\n\n    a) Objets EVOLUTION reels:\n\n    On effectue le produit terme a terme des deux courbes de Meme indice\npour les deux objets; les abscisses de ces courbes doivent etre des\nprogressions identiques; elles deviennent les abscisses des courbes du\nnouvel objet EVOLUTION cree par l'operateur.\n\n    b) Objets EVOLUTION complexes :\n\n    Les abscisses doivent etre identiques; elles deviennent les\nabscisses du nouvel objet EVOLUTION cree par l'operateur.\nChacun des deux objets peut etre, soit \"PREE PIMA\", soit \"MODU PHAS\".\n\nL'objet EVOL3 a le meme type que EVOL1. On peut lui attribuer une\ncouleur COUL1 :\n\n                    EVOL3 = EVOL1 * EVOL2  ( COUL1 ) ;\n\n    Remarque 4 :\n    ____________\n\n    Lorsque l'operateur * calcule le produit de deux objets, l'un de\ntype MCHAML (ou CHPOINT ) et l'autre, de type EVOLUTION, il\ntransforme toutes les valeurs du MCHAML (ou du CHPOINT )\nOBJET1 a l'aide de la fonction representee par l'objet EVOLUTION, OBJET2\n\n    Remarque 5 :\n    ____________\n\n    Lorsque l'operateur * calcule le produit de deux objets de\ntype MCHAML, ils doivent avoir les meme sous zones elementaires\nIl y a cinq sortes de multiplications :\n\n    - Un MCHAML quelconque par un MCHAML scalaire de sous zones\n      identiques.\n\n    - Un MCHAML par un autre MCHAML pour peu qu'ils aient les memes\n      noms de composantes et les memes sous zones. La multiplication\n      s'effectue composante par composante. Les composantes peuvent\n      avoir un type FLOTTANT, LISTREEL ou EVOLUTIOn.\n\n    - Un MCHAML par un autre MCHAML pour peu qu'ils aient les memes\n      sous zones. L'utilisateur doit alors fournir trois listmots\n      de longueur egale, et la regle de multiplication est identique \n      au cas du CHPOINT (voir ci-dessus). De plus on peut fournir une\n      progression de meme longueur que les listmots, dont les \n      coefficients multiplient respectivement les composantes du \n      champ resultat. Les composantes peuvent avoir un type FLOTTANT,\n      LISTREEL ou EVOLUTIOn.\n\n    - Un MCHAML de matrices de Hooke par un MCHAML de contraintes ou\n      de deformations. Il faut dans ce cas donner aussi l'objet modele\n      MODL1 (type MMODEL).\n\n    - Un MCHAML de gradient par un MCHAML de gradient ou de gradient\n      en flexion. Il faut dans ce cas donner aussi l'objet modele\n      MODL1 (type MMODEL).",
  },
  {
    name: "+",
    url: "AAA5",
    documentation:
      "$$$$ +        NOTICE  CB215821  16/11/28    21:15:02     9202           \n                                             DATE     16/11/28\n\n    Operateur +                              Voir aussi : - * / **\n    ----------------------\n    |  1ere possibilite  |\n    ----------------------\n\n    RESU1 = OBJET1 + OBJET2 (LMOTS);\n\n    Objet :\n    _______\n\n    L'operateur + calcule la somme des objets OBJET1 et OBJET2.\n\n    Operations possibles :\n    _____________________\n    \n   ---------------------------------------------------------------\n   |      OBJET1       |      OBJET2        |       RESU1        |\n   |-------------------------------------------------------------|\n   |      ENTIER       |      ENTIER        |      ENTIER        |\n   |      ENTIER       |     FLOTTANT       |     FLOTTANT       |\n   |      ENTIER       |     LISTENTI       |     LISTENTI       |\n   |      ENTIER       |     LISTREEL       |     LISTREEL       |\n   |      ENTIER       |     EVOLUTIO       |     EVOLUTIO       |\n   |      ENTIER       |      MCHAML        |     MCHAML         |\n   |-------------------|--------------------|--------------------|\n   |     FLOTTANT      |      ENTIER        |     FLOTTANT       |\n   |     FLOTTANT      |     FLOTTANT       |     FLOTTANT       |\n   |     FLOTTANT      |     LISTENTI       |     LISTREEL       |\n   |     FLOTTANT      |     LISTREEL       |     LISTREEL       |\n   |     FLOTTANT      |     EVOLUTIO       |     EVOLUTIO       |\n   |     FLOTTANT      |      MCHAML        |     MCHAML         |\n   |-------------------|--------------------|--------------------|\n   |     CHPOINT       |     CHPOINT        |     CHPOINT        |\n   |     CHPOINT       |     FLOTTANT       |     CHPOINT        |\n   |-------------------|--------------------|--------------------|\n   |     MCHAML        |      MCHAML        |      MCHAML        |\n   |     MCHAML        |      ENTIER        |      MCHAML        |\n   |     MCHAML        |      FLOTTANT      |      MCHAML        |\n   |-------------------|--------------------|--------------------|\n   |     EVOLUTION     |     EVOLUTION      |     EVOLUTION      |\n   |-------------------|--------------------|--------------------|\n   |     LISTENTI      |      ENTIER        |     LISTENTI       |\n   |     LISTENTI      |     FLOTTANT       |     LISTREEL       |\n   |     LISTENTI      |     LISTENTI       |     LISTENTI       |\n   |     LISTENTI      |     LISTREEL       |     LISTREEL       |\n   |-------------------|--------------------|--------------------|\n   |     LISTREEL      |      ENTIER        |     LISTREEL       |\n   |     LISTREEL      |     FLOTTANT       |     LISTREEL       |\n   |     LISTREEL      |     LISTREEL       |     LISTREEL       |\n   |     LISTREEL      |     LISTENTI       |     LISTREEL       |\n   |-------------------|--------------------|--------------------|\n   |     EVOLUTIO      |      ENTIER        |     EVOLUTIO       |\n   |     EVOLUTIO      |     FLOTTANT       |     EVOLUTIO       |\n   |-------------------|--------------------|--------------------|\n   |  TABLE 'VECTEUR'  |   TABLE 'VECTEUR'  |   TABLE 'VECTEUR'  |\n   ---------------------------------------------------------------\n\n    Remarque 1 :\n    ____________\n\n    L'operateur + calcule la somme de deux objets de type TABLE\nde sous-type 'VECTEUR'. Les tables doivent etre sommables, c'est a\ndire les elements d'indice commun doivent etre de type ENTIER ou\nFLOTTANT.\n\n    Remarque 2 :\n    ____________\n\n    Lorsque l'operateur + calcule la somme de deux objets EVOLUTION,\nles deux objets, doivent etre de meme type, c'est-a-dire, soit reels,\nsoit complexes :\n\n    a) Objets EVOLUTION reels :\n\n    La somme est faite pour - OBJET1=f(x) defini sur le domaine D1\n                            - OBJET2=g(x) defini sur le domaine D2,\npuis on calcule la somme sur le domaine commun (D1 et D2).\n\n    b) Objets EVOLUTION complexes :\n\n    Les deux objets doivent avoir les memes abscisses.\nChacun des deux objets peut etre soit \"PREE PIMA\" soit \"MODU PHAS\" .\nL'objet RESULTAT aura le meme type que OBJET1.\n\n    Remarque 3 :\n    ____________\n\n    Lorsque l'operateur + calcule la somme d'un LIST(ENTI/REEL) avec un\nENTIER/FLOTTANT, l'ENTIER/FLOTTANT est additionne a tous les termes du\nLIST(ENTI/REEL).\n\n    Remarque 4 :\n    ____________\n\n    Lorsque l'operateur + calcule la somme de deux MCHAML, pour les\nsous zones elementaires similaires et pour les noms de composantes\nidentiques, il effectue la somme; sinon il realise l'adjonction.\n\n    Dans le cas ou les MCHAML pointent sur des objets non FLOTTANT, on\ngarde l'objet de pointeur non nul. Si les deux pointeurs sont non nuls,\nune addition est faite dans le cas des 'POINT', des 'LISTREEL' et des\n'EVOLUTIO', en appliquant les regles de l'addition relatives a ces\nobjets. Dans les autres cas un message d'erreur est envoye.\n\n    Dans le cas de l'addition faisant intervenir un FLOTTANT/ENTIER\net un MCHAML, il faut fournir un LISTMOTS (LMOTS)contenant la liste des\ncomposantes sur lesquelles l'operation doit etre realisee, les autres\ncomposantes seront alors inchangees. LMOTS est non necessaire si le\nMCHAML contient une seule composante. \n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n    \n    OBJET2 = +  TAB1 ;\n\n    Objet :\n    _______\n\n    L'operateur + construit la somme de l'ensemble des objets\ncontenus dans la table de sous-type ESCLAVE TAB1. Ces objets\ndoivent etre de type, CHAMPOINT OU MCHAML.",
  },
  {
    name: "-",
    url: "AAA4",
    documentation:
      "$$$$ -        NOTICE  CB215821  16/11/28    21:15:02     9202           \n                                             DATE     16/11/28\n\n    Operateur -                              Voir aussi : + * / **\n\n    Objet :\n    _______\n\n    L'operateur - calcule la difference des objets OBJET1 et OBJET2.\n\n    Operations possibles :\n    ______________________\n\n   ---------------------------------------------------------------\n   |      OBJET1       |      OBJET2        |       RESU1        |\n   |-------------------------------------------------------------|\n   |      ENTIER       |      ENTIER        |      ENTIER        |\n   |      ENTIER       |     FLOTTANT       |     FLOTTANT       |\n   |      ENTIER       |     LISTENTI       |     LISTENTI       |\n   |      ENTIER       |     LISTREEL       |     LISTREEL       |\n   |      ENTIER       |     EVOLUTIO       |     EVOLUTIO       |\n   |      ENTIER       |     CHPOINT        |     CHPOINT        |\n   |      ENTIER       |     MCHAML         |     MCHAML         |\n   |-------------------|--------------------|--------------------|\n   |     FLOTTANT      |      ENTIER        |     FLOTTANT       |\n   |     FLOTTANT      |     FLOTTANT       |     FLOTTANT       |\n   |     FLOTTANT      |     LISTENTI       |     LISTREEL       |\n   |     FLOTTANT      |     LISTREEL       |     LISTREEL       |\n   |     FLOTTANT      |     EVOLUTIO       |     EVOLUTIO       |\n   |     FLOTTANT      |     CHPOINT        |     CHPOINT        |\n   |     FLOTTANT      |     MCHAML         |     MCHAML         |\n   |-------------------|--------------------|--------------------|\n   |     CHPOINT       |     CHPOINT        |     CHPOINT        |\n   |     CHPOINT       |     ENTIER         |     CHPOINT        |\n   |     CHPOINT       |     FLOTTANT       |     CHPOINT        |\n   |-------------------|--------------------|--------------------|\n   |     MCHAML        |      MCHAML        |      MCHAML        |\n   |     MCHAML        |      ENTIER        |      MCHAML        |\n   |     MCHAML        |      FLOTTANT      |      MCHAML        |\n   |-------------------|--------------------|--------------------|\n   |     EVOLUTION     |     EVOLUTION      |     EVOLUTION      |\n   |-------------------|--------------------|--------------------|\n   |     LISTENTI      |      ENTIER        |     LISTENTI       |\n   |     LISTENTI      |     FLOTTANT       |     LISTREEL       |\n   |     LISTENTI      |     LISTENTI       |     LISTENTI       |\n   |     LISTENTI      |     LISTREEL       |     LISTREEL       |\n   |-------------------|--------------------|--------------------|\n   |     LISTREEL      |      ENTIER        |     LISTREEL       |\n   |     LISTREEL      |     FLOTTANT       |     LISTREEL       |\n   |     LISTREEL      |     LISTREEL       |     LISTREEL       |\n   |     LISTREEL      |     LISTENTI       |     LISTREEL       |\n   |-------------------|--------------------|--------------------|\n   |     EVOLUTIO      |      ENTIER        |     EVOLUTIO       |\n   |     EVOLUTIO      |     FLOTTANT       |     EVOLUTIO       |\n   |-------------------|--------------------|--------------------|\n   |  TABLE 'VECTEUR'  |   TABLE 'VECTEUR'  |   TABLE 'VECTEUR'  |\n   ---------------------------------------------------------------\n\n   \n    Remarque 1 :\n    ____________\n\n    Lorsque l'operateur - calcule la difference entre un CHPOINT et\nun FLOTTANT, il soustrait \u00e0 toutes les valeurs du CHPOINT la valeur du\nFLOTTANT. La difference entre un FLOTTANT et un CHPOINT donne le\nMeme resultat au signe pres.\n\n\n    Remarque 2 :\n    ____________\n\n    L'operateur - calcule la difference de deux objets de type TABLE\nde sous-type 'VECTEUR'. Les tables doivent etre soustractibles, c'est\n@ dire les elements d'indice commun doivent etre de type ENTIER ou\nFLOTTANT.\n\n\n    Remarque 3 :\n    ____________\n\n    Lorsque l'operateur - calcule la difference entre deux objets de\ntype EVOLUTION, les deux objets, doivent etre de Meme type, c.\u00e0.d,\nsoit reels, soit complexes :\n\n    a) Objets EVOLUTION reels :\n\n    La somme est faite pour OBJET1=f(x) defini sur le domaine D1\n                            OBJET2=g(x) defini sur le domaine D2,\npuis on calcule la difference sur le domaine commun (D1 et D2) .\n\n    b) Objets EVOLUTION complexes :\n\n    Les deux objets doivent avoir les memes abscisses. Chacun des deux\nobjets peut etre soit \"PREE PIMA\" soit \"MODU PHAS\" . L'objet RESU1\naura le meme type que OBJET1.\n\n\n    Remarque 4 :\n    ____________\n\n    Lorsque l'operateur - calcule la difference entre LIST(ENTI/REEL)\net ENTIER/FLOTTANT, la soustraction est effectuee sur tous les\ntermes du LIST(ENTI/REEL). L'ordre de OBJET1 et OBJET2 est important\n\n\n    Remarque 5 :\n    ____________\n\n    Lorsque l'operateur - calcule la difference de deux MCHAML,\npour les sous zones elementaires similaires, il effectue la difference\npour les noms de composantes identiques, sinon il realise l'adjonction\n(La sous-zone est opposee avant l'adjonction si elle appartient a \nOBJET2).\n\n    Dans le cas ou les MCHAML pointent sur des objets non FLOTTANT, on\ngarde l'objet de pointeur non nul. Si les deux pointeurs sont non nuls,\nune soustraction est faite dans le cas des 'POINT', des 'LISTREEL' et\ndes 'EVOLUTIO', en appliquant les regles de la soustraction relatives\na ces objets. Dans les autres cas, un message d'erreur est envoye.\n\n    Dans le cas de la soustraction faisant intervenir un FLOTTANT/ENTIER\net un MCHAML, il faut fournir un LISTMOTS (LMOTS)contenant la liste des\ncomposantes sur lesquelles l'operation doit etre realisee, les autres\ncomposantes seront alors inchangees. LMOTS est non necessaire si le\nMCHAML contient une seule composante. ",
  },
  {
    name: "<",
    url: "AAA6",
    documentation:
      "$$$$ <        NOTICE  FD218221  21/04/26    21:15:00     10981\n                                             DATE     21/04/26\n\n    Operateur <                              Voir aussi : > EGA\n    -----------                                           <EG     NEG  \n                                                          >EG  \n    LOG1 =   VAL1 <  VAL2  ;\n\n\n    Objet :\n    _______\n\n    L'operateur < compare deux nombres.\n\n    Commentaire :\n    _____________\n \n    VAL1, VAL2  :  nombres de type ENTIER OU FLOTTANT\n\n    LOG1        : resultat de type LOGIQUE. a pour valeur VRAI si\n                  a pour valeur VRAI si VAL1 est plus petit que VAL2 et\n                  FAUX sinon.",
  },
  {
    name: ">",
    url: "AAA8",
    documentation:
      "$$$$ >        NOTICE  FD218221  21/04/26    21:15:01     10981\n                                             DATE     21/04/26\n\n    Operateur >                              Voir aussi : < EGA\n    -----------                                           <EG     NEG  \n                                                          >EG  \n    LOG1 =  VAL1 > VAL2  ;\n\n\n    Objet :\n    _______\n\n    L'operateur > compare deux nombres\n\n    Commentaire :\n    _____________\n\n    VAL1, VAL2  : nombres de type ENTIER ou FLOTTANT\n\n    LOG1        : resultat de type LOGIQUE\n                  a pour valeur VRAI si VAL1 est plus grand que VAL2 et\n                  FAUX sinon.",
  },
  {
    name: "<EG",
    url: "AAA7",
    documentation:
      "$$$$ <EG      NOTICE  FD218221  21/04/26    21:15:01     10981\n                                             DATE     21/04/26\n\n    Operateur <EG                            Voir aussi : < EGA\n    -------------                                         >     NEG  \n                                                          >EG  \n    LOG1 = VAL1 <EG  VAL2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur <EG compare deux nombres.\n\n    Commentaire :\n    _____________\n\n    VAL1, VAL2  : nombres de type ENTIER ou FLOTTANT\n\n    LOG1        : resultat de type LOGIQUE\n                  a pour valeur VRAI si VAL1 est plus petit ou egal a\n                  VAL2 et FAUX sinon.",
  },
  {
    name: ">EG",
    url: "AAA9",
    documentation:
      "$$$$ >EG      NOTICE  FD218221  21/04/26    21:15:01     10981\n                                             DATE     21/04/26\n\n    Operateur >EG                            Voir aussi : > EGA\n    -------------                                         <      NEG  \n                                                          <EG  \n    LOG1 = VAL1  >EG  VAL2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur >EG compare deux nombres\n\n    Commentaire :\n    _____________\n\n    VAL1, VAL2  : nombres de type ENTIER ou FLOTTANT\n\n    LOG1        : resultat de type LOGIQUE\n                  a pour valeur VRAI si VAL1 est plus grand ou egal a\n                  VAL2 et FAUX sinon.",
  },
  {
    name: "ABS",
    url: "ABS",
    documentation:
      "$$$$ ABS      NOTICE  CB215821  18/06/05    21:15:01     9830           \n                                             DATE     18/06/05\n\n      RESU1 =  'ABS'  OBJET1 ;\n\n\n    Operateur ABS                            Voir aussi : SIGN MASQ\n    -------------  \n    Objet :\n    _______\n\n    L'operateur ABSOLU calcule la valeur absolue d'OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    ENTIER       |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTENTI     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n\n\n      Remarque :\n      __________\n\n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee,\n      seule l'ordonnee subit l'operation.",
  },
  {
    name: "ACCDCHI1",
    url: "ACCDCHI1",
    documentation:
      "$$$$ ACCDCHI1 NOTICE  CHAT      11/09/12    21:15:00     7124           \n                                             DATE     11/09/12\n        \n    Methode ACCDCHI1                         Voir aussi : LINVCOMP \n    ---------------                                       OBJE    DONCHI1   \n                                                          CHI1    LIRSOSO  \n                                                          \n        OBJ1  = ACCDCHI1 MOT1  ;\n                                                        \n                                                      \n\n        Objet\n        -----\n\n     La methode ACCDCHI1 permet d'acceder au contenu des objets de\n     CLASSE DONCHI1.\n\n        Commentaires\n        -------------\n\n        voir DONCHI1",
  },
  {
    name: "ACCDCHI2",
    url: "ACCDCHI2",
    documentation:
      "$$$$ ACCDCHI2 NOTICE  CHAT      11/09/12    21:15:01     7124           \n                                             DATE     11/09/12\n \n     Methode ACCD CHI2                        Voir aussi : CHI2 OBJE\n     ---------------                                      DONCHI2  \n\n     CHP1  = ACCDCHI2 MOT1  ;\n\n\n        Objet\n        -----\n\n     La methode ACCDCHI2 permet d'acceder au contenu des objets de\n     CLASSE DONCHI2.\n\n        Commentaires\n        -------------\n\n        voir DONCHI2",
  },
  {
    name: "ACCEVITE",
    url: "ACCEVITE",
    documentation:
      "$$$$ ACCEVITE NOTICE  MB234859  17/10/02    21:15:02     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure ACCEVITE                            Voir aussi :\n   ------------------  \n   EVOL1_V=FREQPERI EVOL2_A MOT1;\n\n\n   objet:\n   -----\n\n   effectue la transformation d'un spectre de reponse d'acceleration\n   EVOL2_A (comportant N courbes) en frequence ou periode en un\n   spectre de reponse en vitesse (comportant N courbes) en frequence\n   ou en periode selon MOT1 valant 'FREQ'(uence) ou 'PERI'(ode).",
  },
  {
    name: "ACIER",
    url: "ACIER",
    documentation:
      "$$$$ ACIER    NOTICE  CHAT      11/09/12    21:15:01     7124           \n                                             DATE     11/09/12\n\n    Procedure ACIER                          Voir aussi : MATE\n    ---------------                                       MATR  \n    MAT1 = ACIER  'A316L'  MODL1  ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de creer un champ de materiau ayant les pro-\nprietes, en unites SI, de l'acier 316L.\n\n\n    Commentaire :\n    _____________\n\n    MODL1 : objet modele (type MMODEL)\n\n    MAT1  : description du materiau \"acier 316L\" (type MCHAML, sous-\n            type CARACTERISTIQUES)",
  },
  {
    name: "ACOH",
    url: "ACOH",
    documentation:
      "$$$$ ACOH     NOTICE  CB215821  18/06/05    21:15:01     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ACOH'  OBJET1 ;\n\n\n    Operateur ACOH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                               ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur ACOH calcule l'arc cosinus  hyperbolique de l'objet \n    OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ACOS",
    url: "ACOS",
    documentation:
      "$$$$ ACOS     NOTICE  CB215821  18/06/05    21:15:01     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ACOS'  OBJET1 ;\n\n\n    Operateur A COS                           Voir aussi : COS SIN TAN\n    --------------                                             ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur ACOS (arc-cosinus) calcule l'arc-cosinus d'OBJET1.\n    Le resultat est en degres, dans l'intervalle [0 ; 180].\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ACQU",
    url: "ACQU",
    documentation:
      "$$$$ ACQU     NOTICE  GOUNAND   14/01/30    21:15:01     7922           \n                                             DATE     14/01/30\n                                             \n    Operateur ACQUERIR                       Voir aussi : REST\n    ------------------                                    LIRE  \n    ----------------------\n    |  1ere possibilite  |\n    ----------------------\n\n    ACQUERIR   OBJET1*TYP1  (N1) ( OBJET2*TYP2 ....) ;\n\n                                 OBJETi=ENTIER,FLOTTANT,MOT\n                                        LISTENTI,LISTREEL\n\n\n    Objet :\n    _______\n\n    Insere dans un ensemble de donnees de CASTEM 2000, l'operateur\nACQUERIR permet d'acquerir des objets OBJET1 (OBJET2 . . .) sur\nun fichier d'unite logique N2 definie par :\n\n                  OPTION ACQUERIR  N2 ;\n\n    Remarque 1 :\n    ____________\n\n    Les types possibles des objets a acquerir sont :    - ENTIER\n                                                        - FLOTTANT\n                                                        - MOT\n                                                        - LISTENTI\n                                                        - LISTREEL\n\n    Il est possible d'omettre le type de l'objet a acquerir;\ndans ce cas ,il ne faut pas mettre le * .\n\n    Remarque 2 :\n    ____________\n\n    Dans le cas d'objets de type LISTENTI ou LISTREEL il est necessaire\nde fournir le nombre de valeurs a lire, N1 (type ENTIER).\n\n    Remarque 3 :\n    ____________\n\n    Le fichier doit etre compose d'enregistrements de 256 caracteres.\n    Les objets de type MOT lus ont 72 caracteres au maximum.\n\n     Exemple :\n     _________\n\n     Le fichier de lecture etant le suivant :\n\n     1  ' est plus petit que ' 2\n     2  fois 3 egale 6\n     12  34  56 78       90\n\nla sequence de lecture suivante :\n\n        ACQUERIR   I*ENTIER  MM*MOT J*FLOTTANT;\n        ACQUERIR   K*ENTIER ;\n        ACQUERIR   LL*LISTENTI  5 ;\n\nconduit a :    I =1\n               MM= est plus petit que\n               J =2\n               K =2\n               LL= 12 34 56 78 90\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n    MOT1 = 'ACQU' 'BRUT' ;\n\n    Objet :\n    _______\n\n    L'operateur ACQUERIR permet de lire un enregistrement sur une unite\n    logique definie prealablement par la directive :\n\n                  'OPTION' 'ACQUERIR'  N2 ;\n            ou    'OPTION' 'ACQUERIR'  MOT2 ;\n    \n    avec : \n    N2   : objet de type ENTIER, numero d'unite logique\n    MOT2 : objet de type MOT, nom de fichier\n\n    Le resultat de l'acquisition est un objet MOT1 de type MOT \n    (512 caracteres maxi).",
  },
  {
    name: "ACT3",
    url: "ACT3",
    documentation:
      "$$$$ ACT3     NOTICE  CHAT      11/09/12    21:15:02     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ACT3                                  Voir aussi : \n    ----------------  \n     CHPO  =  ACT3 CHPO2 CHPO1 CHPO0 CHFO3 CHFO2 CHFO1 CHFO0;\n\n\n    Objet :\n    _______\n\n    L'operateur ACT3 sert a accelerer la convergence de calculs\nnon lineaires en mecanique.\n\n    Methode :\n    _________\n\n   A partir de 3 increments de forces correctrices et des 4 \ndesequilibres correspondant, ACT3 evalue la correction de force\ncorrectrice permettant de minimiser le desequilibre en resolvant \nle probleme tangent sur sa restriction au sous-espace de dimension \n3 defini par les champs en entree.",
  },
  {
    name: "ACTI",
    url: "ACTI",
    documentation:
      "$$$$ ACTI     NOTICE  CHAT      11/09/12    21:15:02     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ACTIVE                           Voir aussi :\n    ----------------   \n     CH1  =  ACTIVE  | GEOM   CH2  CH3  CH4  ( FLOT1 )  (MOT1) ;\n                     |\n                     | SECA   CHPO1 CHPO2 CHPO3 CHPO4 ;\n\n\n    Objet :\n    _______\n\n    L'operateur ACTIVE sert a accelerer la convergence de calculs\nnon lineaires .\n\n    Commentaire :\n    _____________\n\n    Deux types d'acceleration sont disponibles :\n\n    a) GEOMETRIQUE :\n\n        A partir de 3 champs successifs CH2, CH3, CH4\n        on fabrique le champ CH1, en supposant\n        que ces 3 champs sont en progression geometrique.\n        S'il s'agit de CHPOINTs , on accelere toutes les\n        composantes .\n        S'il s'agit de MCHAMLs on n'accelere que  la composante\n        de nom MOT1  (ce nom est inutile, si le champ\n        n'a qu'une composante ).\n        On n'accelere que si le taux de convergence est inferieur a\n        FLOT1, egal a 0.98, par defaut, (type FLOTTANT).\n\n    b) SECANTE :\n\n        A partir de 4 champs ( type CHPOINT ) qui sont, dans l'ordre :\n\n           CHPO1 :  increment de deplacement a la premiere iteration\n           CHPO2 :  increment de deplacement a l'iteration n-1\n           CHPO3 :  increment de deplacement a l'iteration n\n           CHPO4 :  increment de forces correctrices non lineaires a\n                    l'iteration n\n\n    on calcule un vecteur CHAMP1 ( type CHPOINT ) qui est une estimation\n    acceleree de CHPO3.",
  },
  {
    name: "ACTI3",
    url: "ACTI3",
    documentation:
      "$$$$ ACTI3    NOTICE  CHAT      11/09/12    21:15:02     7124           \n                                             DATE     11/09/12\n\n  Procedure ACTI3                                Voir aussi :\n    ---------------  \n\n    Objet :\n    _______\n\n   Cette procedure pourrait etre utilisee par la procedure INCREME.\nEn fait celle ci utilise l'operateur  ACT3 qui a exactement le meme\nrole.\n\n   A partir de 4 champs de deplacements et des 4 champs d'increments\nde forces correctrices associes, ACTI3 evalue le champs d'increments\nde deplacement permettant de resoudre le probleme sur la restriction\nde l'application tangente au  sous-espace  de dimension 3 defini par\nles champs en entree.",
  },
  {
    name: "ACTUSAT1",
    url: "ACTUSAT1",
    documentation:
      "$$$$ ACTUSAT1 NOTICE  CHAT      11/09/12    21:15:03     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure ACTUSAT1                       Voir aussi : DARCYSAT\n    ------------------                    \n    CHPO1 CHPO2 = ACTUSAT1 CHPO3 CHPO4 ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure effectue le calcul de la permeabilite (chpo2)\n et de la capapcite hydraulique (chpo1) a partir des charges\n actuelle (chpo4)  et precedente (chpo3) . Les point du\n   support des champs sont des points faces.\n   Cette procedure est a utiliser a partir de la procedure DARCYSAT\n   Elle correspond a la methode 1",
  },
  {
    name: "ACTUSAT2",
    url: "ACTUSAT2",
    documentation:
      "$$$$ ACTUSAT2 NOTICE  CHAT      11/09/12    21:15:03     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure ACTUSAT2                       Voir aussi : DARCYSAT\n    ------------------                  \n    CHPO1 CHPO2 = ACTUSAT2 CHPO3 CHPO4 ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure effectue le calcul de la permeabilite (chpo2)\n et de la capapcite hydraulique (chpo1) a partir des charges\n actuelle (chpo4)  et precedente (chpo3) . Les point du\n   support des champs sont des points centres.\n   Cette procedure est a utiliser a partir de la procedure DARCYSAT\n   Elle correspond a la methode 2.",
  },
  {
    name: "ACTUSAT3",
    url: "ACTUSAT3",
    documentation:
      "$$$$ ACTUSAT3 NOTICE  CHAT      11/09/12    21:15:03     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure ACTUSAT3                       Voir aussi : DARCYSAT\n    ------------------                 \n    CHPO1 CHPO2 = ACTUSAT3 CHPO3 CHPO4 ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure effectue le calcul de la permeabilite (chpo2)\n et de la capapcite hydraulique (chpo1) a partir des charges\n actuelle (chpo4)  et precedente (chpo3) . Les point du\n   support des champs sont des points faces.\n   Cette procedure est a utiliser a partir de la procedure DARCYSAT\n   Elle correspond a la methode 3",
  },
  {
    name: "ADET",
    url: "ADET",
    documentation:
      "$$$$ ADET     NOTICE  PASCAL    20/12/03    21:15:00     10801          \n                                             DATE     20/12/03\n\n    Operateur ADET                            Voir aussi : SIGN\n    --------------  \n      RESU1 =  ADET ('NOUV')   MO1 |  CHAR1  TI   |    ;\n                    ( CHAM1)       |  MOT1   XI   |\n                                   |  CHAM2       |\n                                   |  TABL1       |                     \n                                                 \n                                \n\n\n    Objet :\n    _______\n\n    L'operateur ADET  cree un champ par element s'appuyant sur \n    le modele MO1 si le mot NOUV est employe. Sinon il complete a\n    partir du champ par element CHAM1.\n\n\n      Commentaire :\n      _____________\n        \n    Le champ par element cree est sur les points de gauss des contraintes.      \n    \n    On peut utiliser autant de fois que necessaire les donnees\n    suivantes :\n    \n        -  CHAR1 TI : a partir de l'objet chargement CHAR1 et pour\n                      le temps TI il fabrique tous les champs \n                      dont le type est autre que :\n                      MECA DIMP TIMP TERA TECO Q    DEFI REAC\n                      CIMP UIMP FORC MODE MATE BLOD BLOM BLOT\n        -  MOT1 XI  : a partir du mot MOT1 ( de 4 lettres au plus)\n                      et du flottant XI il cree un champ par element          \n                      constant de nom composante MOT1\n        -  CHAM2    : addition du champ par element CHAM2\n        -  TABL1    : a partir d'une table les champs sous les indices \n                      'DEPLACEMENTS' 'CONTRAINTES' 'VARIABLES_INTERNES'\n                      'TEMPERATURES' 'PROPORTIONS_PHASE' sont inclus \n                      dans le chaump par element.\n                      \n                      \n\n      RESU1  : objet de type MCHAML (champ par element)",
  },
  {
    name: "ADVE",
    url: "ADVE",
    documentation:
      "$$$$ ADVE     NOTICE  CB215821  21/01/12    21:15:01     10846          \n                                             DATE     21/01/12\n\n  Operateur ADVE                               Voir aussi :\n     --------------                               MODE  MATE  \n     ADV1 = ADVE MOD1 MAT1 ('SYMM') ; \n\n     Description :\n     -------------\n\n     L'operateur ADVE construit la matrice de rigidite du type :\n\n       (ADV1)ij = Ni (V . grad(Nj)) dx ,\n\n     V etant un champ vectoriel a une ou deux ou trois composantes. Cette\n     matrice est  non  symetrique  et correspond a  la  discretisation du \n     transport de la temperature par un champ de vitesse V (v.gradT). Cet\n     operateur est  disponible pour  les formulations  THERMIQUE ISOTROPE\n     avec des  elements MASSIFS et egalement 'TUY2' (tuyau) en 3D.\n\n     Contenu :\n     ---------\n\n     MOD1    : MMODEL de type THERMIQUE ISOTROPE ADVECTION\n\n     MAT1    : MCHAML de type 'CARACTERISTIQUES' decrivant le champ de vitesse\n               2D massif : 'UX', 'UY'\n               3D massif : 'UX', 'UY', 'UZ'\n               3D tuyau  : 'VITE'\n\n     ADV1    : RIGIDITE, non symetrique\n\n     Notes :\n     -------\n\n       1 - Si le mot cle 'SYMM' est present, le resultat sera la partie\n           symetrique de la matrice originale, c-a-d :\n\n          (ADV1)ij = [Ni (V . grad(Nj)) + Nj (V . grad(Ni))]/2 dx\n\n           Dans ce cas, la RIGIDITE resultante sera symetrique.",
  },
  {
    name: "AFCO",
    url: "AFCO",
    documentation:
      "$$$$ AFCO     NOTICE  CHAT      11/09/12    21:15:04     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur AFCO                           Voir aussi : COUL\n    --------------  \n    GEO1 = AFCO  GEO2 ;\n    \n\n\n    Objet :\n    _______\n\n    Cet operateur cree un objet GEO1 (type MAILLAGE) identique a l'objet\nGEO2 (type MAILLAGE) mais chaque sous-objet a une couleur specifique.\n\n    Remarque :\n    __________\n\n    Les couleurs sont attribuees comme suit :\n\n            BLEU      : SEG2,TRI3,CUB8,TET4,LIA3\n            ROUGE     : QUA4,PRI6,PYR5,RAC2,LIA4\n            ROSE      : SEG3,TRI6,CU20,TE10,LIA6\n            VERT      : QUA8,PR15,PY13,RAC3,LIA8\n            TURQUOISE : TRI4,QUA5\n            JAUNE     : TRI7,QUA9\n            BLANC     : MULT",
  },
  {
    name: "AFFE",
    url: "AFFE",
    documentation:
      "$$$$ AFFE\n                                             DATE     94/01/10\n  Op\u00e9rateur AFFECTE                               Voir aussi :\n    -----------------  \n    Cet op\u00e9rateur n'est plus disponible. Il est remplac\u00e9 par MODL.",
  },
  {
    name: "AFFI",
    url: "AFFI",
    documentation:
      "$$$$ AFFI     NOTICE  CHAT      11/09/12    21:15:04     7124           \n                                             DATE     11/09/12\n\n    Operateur AFFINITE                       Voir aussi : HOMO\n    ------------------  \n\n    GEO2 = GEO1  AFFI  FLOT1 POIN1 POIN2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur AFFINITE construit un objet par affinite geometrique\n    d'un rapport donne suivant une direction precisee par deux points.\n\n\n    Commentaire :\n    _____________\n\n    GEO1         : geometrie initiale (type MAILLAGE)\n\n    POIN1, POIN2 : points definissant la direction suivant laquelle\n                   on opere l'affinite (type POINT). Le point POIN1\n                   est conserve.\n\n    FLOT1        : rapport de l'affinite (type FLOTTANT)\n\n    GEO2         : geometrie resultant de l'affinite (type MAILLAGE)\n\n\n    Remarques :\n    ___________\n\n    1) Cet operateur n'est pas utilisable en DIMEnsion 1.\n\n    2) GEO1 GEO2 ... GEOn  AFFI  FLOT1 POIN1 POIN2 ;\n\n    L'operation est effectuee sur les n objets simultanement et a\nn resultats :\n\n       NC1 NC2 NC3 NC4 NS = C1 C2 C3 C4 S AFFI 0.2 (0 0) (10 0) ;\n\n \n ",
  },
  {
    name: "AFFICHE",
    url: "AFFICHE",
    documentation:
      "$$$$ AFFICHE  NOTICE  CHAT      11/09/12    21:15:04     7124           \n                                             DATE     11/09/12\n\n    Procedure AFFICHE                        Voir aussi : DESS\n    -----------------                                     TRAC  \n    AFFICHE  RIG1 CHPO1 GEO1 FLOT1 FLOT2 ;\n    \n\n\n    Objet :\n    _______\n\n    Cette procedure affiche sur l'ecran la deformee d'une structure\nsoumise a un chargement donne .\n\n    Commentaire :\n    _____________\n\n    RIG1  : matrice de rigidite de la structure (type RIGIDITE)\n\n    CHPO1 : chargement de la structure (type CHPOINT)\n\n    GEO1  : maillage de la structure (type MAILLAGE)\n\n    FLOT1 : coefficient d'amplification de la deformee (type FLOTTANT)\n\n    FLOT2 : coefficient d'amplification des vecteurs representatifs\n            du chargement (type FLOTTANT)\n\n    Remarque :\n    __________\n\n    Les operandes doivent etre entres dans l'ordre indique dans la\nsyntaxe.",
  },
  {
    name: "AFT",
    url: "AFT",
    documentation:
      "$$$$ AFT      NOTICE  MB234859  17/10/02    21:15:02     9577           \n                                             DATE     17/10/02\n                                           \n\n    Procedure AFT                       Voir aussi : CONTINU\n\n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure CONTINU. \n   \n  ----------------------------------+----------------------------------\n              Frequence             |             Temps\n  ----------------------------------+----------------------------------\n                                    |\n  0. Entree : deplacement exprime   |      1. Recombine le deplacement\n  sous forme de serie de Fourier    |      \n                                    |      u(t)  =  U_0\n  U = (U_0 U_1 V_1 ... U_H V_H)   =====>    + \\sum_{k=1..H} cos kwt U_k \n                                    |       + \\sum_{k=1..H} sin kwt V_k\n                                    |      \n                                    |                ||\n  ----------------------------------|--------------- || ---------------\n                                    |                \\/\n                                    |                \n  3. Sortie : forces non-lineaire   |       2. Calcul de la force non-\n                                  <=====       lineaire via CHARMECA\n  Fnl = (Fnl_0 ... Fnl_k Gnl_k)     |                         .\n                                    |          fnl(t) = fnl(u,u)\n                                    |\n  ----------------------------------+----------------------------------  \n   ",
  },
  {
    name: "AFT1",
    url: "AFT1",
    documentation:
      "$$$$ AFT1     NOTICE  MB234859  17/10/02    21:15:02     9577           \n                                             DATE     17/10/02\n                                           \n\n    Procedure AFT1                            Voir aussi : AFT\n\n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure AFT. \n   Elle permet de calculer le deplacement temporel\n   a partir de son expresion dans le domaine frequentiel.",
  },
  {
    name: "AFT2",
    url: "AFT2",
    documentation:
      "$$$$ AFT2     NOTICE  MB234859  17/10/02    21:15:02     9577           \n                                             DATE     17/10/02\n                                           \n\n    Procedure AFT2                            Voir aussi : AFT\n\n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure AFT. \n   Elle permet de calculer la transformee de Fourier de la force\n   a partir de son expression dans le domaine temporel.",
  },
  {
    name: "AIDE",
    url: "AIDE",
    documentation:
      "$$$$ AIDE     NOTICE  CHAT      11/09/12    21:15:05     7124           \n                                             DATE     11/09/12\n  Operateur AIDE                           Voir aussi :\n    --------------                             \n      LISMO1  =  AIDE  MOT1 ;\n\n\nFRAN====**************************************************\nMOTS-CLES : INDEX MOT-CLE  RECHERCHE \nDICTIONNAIRE\nFRAN====*************************************************\n\n    Objet :\n    _______\n\n    L'operateur AIDE  cherche dans la notice tous les operateurs \nayant la chaine MOT1 dans sa liste de mots-cles.\n    Une impression de la liste a lieu si la liste n'est pas vide,\net un objet de type LISTMOTS est cree.\n    MOT1 doit etre une chaine en majuscules.",
  },
  {
    name: "AJU1",
    url: "AJU1",
    documentation:
      "$$$$ AJU1     NOTICE  CHAT      11/09/14    21:15:01     7129           \n                                             DATE     11/09/14\n\n  Operateur AJU1                          Voir aussi :\n    --------------                        \n\n\n\n    Objet :\n    _______\n\n    Cet operateur est utilise par la procedure AJUSTE",
  },
  {
    name: "AJU2",
    url: "AJU2",
    documentation:
      "$$$$ AJU2     NOTICE  CHAT      11/09/14    21:15:01     7129           \n                                             DATE     11/09/14\n\n  Operateur AJU2                            Voir aussi :\n    --------------                          \n\n\n\n    Objet :\n    _______\n\n    Cet operateur est utilise par la procedure AJUSTE",
  },
  {
    name: "AJUSTE",
    url: "AJUSTE",
    documentation:
      "$$$$ AJUSTE   NOTICE  CHAT      11/09/12    21:15:05     7124           \n                                             DATE     11/09/12\n \n    procedure AJUSTE                              Voir aussi : MOCA LEVM \n    ----------------   \n    Q P = AJUSTE  TAB1 ; \n \n            TAB1.'X'             (TAB1.'PMIN') \n            TAB1.'F'             (TAB1.'PMAX') \n            TAB1.'K'             (TAB1.'PRECISION') \n            TAB1.'L'             (TAB1.'MXTER') \n           (TAB1.'POIDS')        (TAB1.'MESSAGES')   \n                                 (TAB1.'IMPRESSION')  \n            \n\n \n    Objet : \n    -------- \n \n      Soit une fonction F(x,y,z...,p1,..,pk) mise sous la forme : \n \n       F(x,p) = q1 * f1(x,y,z,.,p1,..,pk) \n              + q2 * f2(x,y,z,.,p1,..,pk) \n              + ... \n              + ql * fl(x,y,z,.,p1,..,pk) \n \n              + g(x,y,z,.,p1,..,pk) \n \n       qi (i=1,l) sont les parametres lineaires. \n       pj (j=1,k) sont les parametres non lineaires. \n \n       La procedure ajuste ces differents parametres afin que la \n       fonction passe au mieux dans une serie de N couples \n \n                   ( (x,y,z,...) ; Fdi(x,y,z,..) )  \n \n       fournie par l' utilisateur. \n \n       En fait, on cherche a minimiser la fonction : \n \n           G = [ (poids(i) * ( F(x,p) - Fdi(x,y,z..) )**2 ] \n             somme sur i=1,N \n \n    Donnees : \n    ---------- \n \n       TAB1.'X'      : TABLE indicee par des entiers i=1,N qui contient \n                       le(s) LISTREEL(s) x,y,z,..... \n \n       TAB1.'F'      : valeurs a caler F(x,y,z...) (LISTREEL). \n \n       TAB1.'K'      : nombre de parametres non lineaires (ENTIER). \n \n       TAB1.'L'      : nombre de parametres lineaires (ENTIER). \n \n       TAB1.'MESSAGES' : niveau de message (defaut=0 : rien) \n                       1 -> resultats, 2 -> iterations \n \n       TAB1.'IMPRESSION' : frequence des impressions si MESSAGES=2 \n                      (type ENTIER, defaut : toutes les 20 iterations).  \n \n \n       TAB1.'PMIN'   : valeurs minimum de p  \n                       (LISTREEL, obligatoire si K > 0). \n \n       TAB1.'PMAX'   : valeurs maximum de p  \n                       (LISTREEL, obligatoire si K > 0). \n \n       TAB1.'PRECISION' : (LISTREEL, utile si K>0) : \n                       critere de precision de convergence pour les K \n                       parametres non lineaires (defaut 1.e-7) \n \n       TAB1.'MXTER'  : nombre maximum d'iterations  \n                       (ENTIER, utile si K>1, defaut=100).  \n \n       TAB1.'POIDS'  : valeurs de poids a affecter a chacun des points de \n                       mesure fournis. (LISTREEL, defaut=1.)   \n \n       TAB1.'NOM_FCT': nom de la procedure qui calcule les fi(x,p) et g(x,p) \n                       (MOT, defaut='FCT'). \n \n       TAB1.'NOM_DERI': nom de la procedure qui calcule les derivees de \n                       fi(x,p) et g(x,p) par rapport aux p_j  \n                       (MOT, defaut='DERI'). \n \n     Sortie : \n     -------- \n       Q et P sont des LISTREELs contenant les parametres qi et pi. \n  \n \n     Utilisation : \n     -------------- \n \n       Deux procedures sont a creer par l'utilisateur. \n \n      - Procedure FCT: \n \n       Son but est de calculer la fonction a ajuster connaissant les \n       valeurs des abscisses x,y,. et ceci pour un jeu de parametres \n       p donne. En fait, on demande de calculer les fonctions \n       f1,f2,...,fl et la fonction g. \n       Pour chaque fonction fi, la procedure calcule autant de \n       valeurs qu'il y a de valeurs dans x,y,z .. Le resultat doit \n       etre mis sous la forme d'un objet TABLE. \n \n       tbfonc = FCT xtab p; \n \n       En argument FCT recevra la table TAB1.'X', ainsi que le \n       LISTREEL p qui contient les valeurs courantes de P. \n \n       La table doit se mettre sous la forme suivante: \n \n                      tbfonc.'F'.i  =  listreel des valeurs de fi \n \n                      tbfonc.'G'    =  listreel des valeurs de g \n \n       Les parametres lineaires qi n'ont pas a etre ecrit. \n \n      - Procedure DERI: \n \n       Elle construit une table de listreels contenant les valeurs des \n       fonctions f1,f2,...,fl et g derivees par rapport aux parametres \n       non lineaires pj pour chaque valeur de x,y,z.. et de p. \n \n       tbderi = DERI xtab p; \n \n       En argument DERI recevra la table TAB1.'X', ainsi que le \n       LISTREEL p. \n \n       La table doit etre cree de la fa\u00e7on suivante: \n \n                   tbderi.'F'. j . i = listreel des valeurs de dfi/dpj \n \n                   tbderi.'G'. j     = listreel des valeurs de dg/dpj \n \n \n     Remarques : \n     ----------- \n \n \n      - Les abscisses etant dans un LISTR\u00c9EL, il faut que les \n        constantes soient exprimees, dans les procedures FCT et DERI, \n        sous forme de LISTR\u00c9EL.  \n \n        ex: f1(x)=x+1   donne   f1(x)=x+(prog N*1); \n            N etant la dimension de x. \n \n      - Attention, les fonctions sinusoidales ont pour operandes des \n        degres.  \n \n      - on peut creer des procedures de nom differents de ceux par \n        defaut en completant les indices 'NOM_FCT' et 'NOM_DERI'. Bien \n        faire preceder le nom de la procedure par l'operateur 'MOT'. \n \n      - exemples dans :  ajuste1.dgibi  ajuste2.dgibi  identifi.dgibi \n \n \n \n\n \n ",
  },
  {
    name: "ALEA",
    url: "ALEA",
    documentation:
      "$$$$ ALEA     NOTICE  CHAT      11/09/12    21:15:05     7124           \n                                             DATE     11/09/12\n\n     Operateur ALEA                          Voir aussi : DCOV BRUI\n     --------------  \n     OBJ1 = 'ALEA' 'BANDES_TOURNANTES' | MODE1  (MOT1)\n                            | MAIL1\n            'EXPO' 'SIGMA' FLOT1 ('MOYENNE' FLOT2)\n                   |  'LAMBDA' FLOT3 \n                   |  'LAMBDA1' FLOT4 (VEC4) \n                     ('LAMBDA2' FLOT5 (VEC5))\n                     ('LAMBDA3' FLOT6 (VEC6))\n\n\n        Objet :\n        -------\n\n        Generation d'un champ scalaire aleatoire gaussien stationnaire\n        (de moyenne, ecart-type 'ET' fonction de correlation\n        constants) par la methode des bandes tournantes.\n        Ce champ obeit a une loi de covariance exponentielle.\n        La matrice de covariance a pour expression :\n\n        Cij = s\u00b2 * EXP ( - (d1\u00b2/l1\u00b2 + d2\u00b2/l2\u00b2 + d3\u00b2/l3\u00b2) ** .5 )\n\n        ou s est l'ecart-type,\n          (d1,d2,d3) sont les coordonnees du vecteur liant\n          Pi et Pj deux points du maillage,\n          (l1,l2,l3) les longueurs de correlation dans les 3 directions.\n\n        Commentaires :\n        -------------\n\n    'BANDES_TOURNANTES'\n             : mot-cle indiquant que l'on utilise la methode des bandes\n               tournantes (la seule methode disponible par cet\n               operateur pour l'instant ; voir 'DCOV' et 'BRUI' pour la\n               methode de decomposition matricielle).\n\n       MODE1 : Modele sur lequel s'appuie le champ resultat\n               (type MMODEL), pour obtenir un champ par element en\n               sortie.\n\n        MOT1 : mot-clef facultatif valant 'NOEUD','GRAVITE','RIGIDITE',\n               'MASSE','STRESSES'\n               indiquant quels points supports prendre en compte dans la\n               generation du champ (defaut = 'NOEUD').\n               Les options 'RIGIDITE','MASSE','STRESSES' reclament un\n               modele de mecanique ; l'option 'GRAVITE' reclame un\n               modele NAVIER-STOKES ou DARCY.\n\n       MAIL1 : Maillage sur lequel s'appuie le champ resultat (type \n               MAILLAGE), pour obtenir un champ par point en sortie.\n\n      'EXPO' : mot-cle indiquant que la loi de covariance est\n               exponentielle.\n\n     'SIGMA' : mot-cle suivi de :\n\n       FLOT1 : ecart-type du champ a engendrer (type FLOTTANT).\n\n   'MOYENNE' : mot-cle optionnel suivi de :\n\n       FLOT2 : valeur de la moyenne du champ aleatoire (type FLOTTANT)\n               par defaut = 0.     \n\n    'LAMBDA' : mot-cle pour une correlation isotrope, suivi de :\n\n       FLOT3 : longueur de correlation isotrope (type FLOTTANT).\n\n   'LAMBDA1' : mots-cles pour une structure de correlation anisotrope. \n  ('LAMBDA2')  Il sont autant que la dimension de la structure de\n  ('LAMBDA3')  correlation, et sont suivis respectivement de :\n\n       FLOT4 : longueurs de correlation (type FLOTTANT) dans les 3 \n      (FLOT5)    \n      (FLOT6)  directions principales.\n\n      (VEC4) : directions optionnelles des axes principaux \n      (VEC5)   de correlation 1, 2, et 3 respectivement (type POINT). \n      (VEC6)   Ils doivent etre non nuls et orthogonaux. \n               Par defaut, ce sont les axes (1 0 0), (0 1 0) et (0 0 1).\n\n        OBJ1 : champ resultat (type CHPOINT ou MCHAML selon que\n               l'on donne un maillage ou un modele en entree), \n               nature 'DIFFUS' (si c'est un champ-point), une\n               composante 'SCAL'. \n\n        Remarques :\n        ----------\n\n           1.  Le resultat obtenu est d'autant meilleure qualite que le\n               maillage donne en entree est regulier et respecte\n               la structure d'anisotropie eventuelle de la correlation.\n               Aucune verification concernant cette regularite n'est\n               effectuee.\n        \n\n        ",
  },
  {
    name: "AMOR",
    url: "AMOR",
    documentation:
      "$$$$ AMOR     NOTICE  WANG      14/02/14    21:15:00     7962           \n                                             DATE     14/02/14\n\n  Operateur AMOR                               Voir aussi :\n    --------------  \n\n\n    Objet :\n    _______\n\n    L'operateur AMOR calcule des matrices d'amortissement dans\ndifferents cas :\n\n\n    -------------------------------\n    | Cas 1 : amortissement modal |\n    -------------------------------\n\n\n    AMOR1 = AMOR  | BASE1 |  LREEL1 ;\n                  | TAB1  |\n\n\n    L'operateur AMOR construit une matrice diagonale d'amortissements\nmodaux. Elle affecte a chaque mode de base un amortissement reduit.\n\n\n    Commentaire :\n    _____________\n\n  AMOR1   : matrice d'amortissement (type RIGIDITE, sous-type\n            AMORTISSEMENT)\n\n  BASE1   : base modale (type BASEMODA)\n\n  TAB1    : objet TABLE definissant les modes, les pseudo-modes, ...\n                - de sous-type BASE_MODALE, ou\n                - de sous-type ENSEMBLE_DE_BASES.\n\n  LREEL1  : coefficients des amortissements modaux reduits (en %)\n            (type LISTREEL)\n\n\n    Dans le cas d'une structure unique, le n-ieme coefficient de la\nliste de reels correspond au n-ieme mode de la base.\n    Dans le cas de plusieurs structures, la liste de reels sera donnee\npar structure et par mode.\n\n\n    ----------------------------------\n    | Cas 2 : frontieres absorbantes |\n    ----------------------------------\n\n\n\n     AMOR1  =  AMOR  MODL1  GEO1  MAT1  ;\n\n    L'operateur AMOR calcule la matrice d'amortissement associee a\nla frontiere d'un maillage, dans le cas d'elements solides ou fluides,\nen 2D ou en 3D. La formulation correspond a la frontiere visqueuse de\nLysmer et Kuhlemeyer (1969).\n\n\n    Commentaire :\n    ____________\n\n  AMOR1   : matrice d'amortissement (type RIGIDITE)\n\n  MODL1   : modele du sol ou du fluide (type MMODEL)\n\n  GEO1    : maillage de la frontiere (type MAILLAGE)\n\n  MAT1    : champ de caracteristiques materiau pour le sol ou le fluide\n            (type MCHAML)\n\n\n\n\n\n   -------------------------------------------\n    | Cas 3 : amortissement materiel visqueux |\n    -------------------------------------------\n\n     AMOR1  =  AMOR  MODL1  MAT1  ;\n\n    L'operateur AMOR calcule la matrice d'amortissement visqueux\n    defini par le parametre de viscosite du materiau 'VISQ'.\n    dans le cas d'elements solides massifs, barres,\n    poutres (POUT, TIMO et TIMO modele SECTION) et coques.\n    La matrice d'amortissement est calculee de fa\u00e7on similaire a la raideur.\n\n    Commentaire :\n    ____________\n\n  AMOR1   : matrice d'amortissement (type RIGIDITE)\n\n  MODL1   : modele (type MMODEL)\n\n  MAT1    : champ de caracteristiques materiau\n            (type MCHAML)",
  },
  {
    name: "ANALYSER",
    url: "ANALYSER",
    documentation:
      "$$$$ ANALYSER NOTICE  MB234859  17/10/02    21:15:03     9577           \n                                             DATE     17/10/02\n\n    Procedure ANALYSER                       Voir aussi : RECOMPOS\n    ------------------                                    RECOMPOM  \n\n    N1 EVOL1_DECO EVOL2_RESI=ANALYSER EVOL3_SIGN (TAB1);\n\n\n\n    Objet :\n    -------\n\n    La procedure ANALYSER permet d'effectuer l'analyse en ondelettes\n    orthogonales d'un signal donne sur une grille uniforme de longueur\n    quelconque EVOL3_SIGN (dont on ne traite que la premiere courbe)\n    et suivant les options de TAB1.  N1 indique le nombre de niveaux\n    d'analyse effectif, EVOL1_DECO (contenant N1 courbes) contient la\n    decomposition (des basses vers les hautes \"frequences\") et\n    EVOL2_RESI (contenant une courbes) le residu de EVOL3_SIGN.\n\n    Remarque:\n    ---------\n\n    La procedure ANALYSER utilise la procedure MULTIDEC.\n\n    Options :\n    ---------\n\n    Le contenu significatif de TAB1 est le suivant:\n\n    indice  type objet    commentaires\n             pointe\n\n     PUIS    ENTIER      PUIS permet d'imposer le nombre de points\n                         d'analyse (NPA=2**PUIS+1). Par defaut tout\n                         le signal est traite, eventuellement complete\n                         par des zero.\n\n     LDEC    ENTIER      permet de specifier le nombre de niveaux de\n                         decomposition souhaite. Par defaut c'est le\n                         maximum.\n\n     BORD    MOT         specifie les conditions de bord pour les\n                         calculs de correlation: 'SYME'(trique) ou\n                         'PADD'(ing) de zero. Le defaut est 'SYME'.\n\n     TYPE    MOT         permet de specifier le type d'ondelette\n                         orthogonale: 'MALL'(at) ou 'DAUB'(echie).\n                         Le defaut est 'MALL'.",
  },
  {
    name: "ANIME",
    url: "ANIME",
    documentation:
      "$$$$ ANIME    NOTICE  CHAT      11/09/12    21:15:07     7124           \n                                             DATE     11/09/12\n\n    Procedure ANIME                          Voir aussi : TRAC\n    ---------------  \n    DEFO1 = ANIME  N1 GEO1 CHPO1 FLOT1 (CHPO2 FLOT2 (COUL1))...\n            ... | CHPO3\n                | CHEL MODE   ; \n                                                            \n;\n\n\n    Objet :\n    _______\n\n    La procedure ANIME construit un objet de type DEFORME propre a etre\nvisualise en animation a l'aide des options ANIME et OSCIL de l'\noperateur TRAC.\n\n    Commentaire :\n    _____________\n\n    N1    : nombre de deformees (nombre d'images) a creer (type ENTIER)\n\n    GEO1  : maillage a representer (type MAILLAGE)\n\n    CHPO1 : champ de deplacement a representer (type CHPOINT)\n\n    FLOT1 : coefficient d'amplification du champ de deplacement\n            (type FLOTTANT)\n\n    CHPO2 : champ de vecteurs forces eventuel a tracer (type CHPOINT)\n\n    FLOT2 : coefficient d'amplification du champ de forces\n            (type FLOTTANT)\n\n    COUL1 : couleur du champ de forces (type MOT)\n\n    CHPO3 : champ de scalaire dont on desire voir les isovaleurs.\n            (type CHPOINT)\n \n    CHEL  : champ de scalaire dont on desire voir les isovaleurs.\n            (type MCHAML)\n\n    MODE  : modele associe au precedent ",
  },
  {
    name: "ANIMGKS",
    url: "ANIMGKS",
    documentation:
      "$$$$ ANIMGKS  NOTICE  CHAT      11/09/12    21:15:07     7124           \n                                             DATE     11/09/12\n\n  Procedure ANIMGKS                             Voir aussi :\n    -----------------  \n\n\n    Objet :\n    _______\n\n    Cette procedure sert a faire de l'animation avec un systeme graphique\nGKS. Contacter P. VERPEAUX pour son utilisation.",
  },
  {
    name: "ANLIMTRE",
    url: "ANLIMTRE",
    documentation:
      "$$$$ ANLIMTRE NOTICE  CHAT      11/09/12    21:15:07     7124           \n                                             DATE     11/09/12\n\n    Procedure ANLIMTRE                       Voir aussi : SIMP\n    ------------------  \n    IENT1 = ALIMTRE TAB1 ;\n\n                         TAB1.'MESH' .'PBLOQ' .'PSOLL' .'VSOLL'\n                             .'CONLIM' .'REACMAX'\n\n\n    Objet :\n    _______\n\n    Cette procedure est une procedure d'analyse limite pour des\n    reseaux de barres articulees par la methode du Simplex.\n\n\n    Commentaire :\n    _____________\n\n  Soit un reseau de barres articulees formant le maillage MESH et\n  bloque en deplacement sur l'ensemble de points PBLOQ. On se propose\n  de trouver le maximum de la charge placee au point PSOLL dans la\n  direction VSOLL sachant que la contrainte EFFX dans chaque barre\n  est soumise a la contrainte |EFFX| <EG CONLIM\n\n\n    IENT1  : indice resultat (type ENTIER), qui vaut 0 en cas\n             de fonctionnement correct\n\n\n    TAB1   : Objet de type TABLE.\n\n                 En entree, TAB1 doit contenir :\n\n         indice        type objet         commentaires\n                         pointe\n\n       MESH             MAILLAGE       le maillage\n\n       PBLOQ            MAILLAGE       ensemble de points bloques en\n                                       deplacement\n       PSOLL            POINT          point charge\n\n       VSOLL            POINT          direction de la charge\n\n       CONLIM           FLOTTANT       valeur de la contrainte limite\n\n       REACMAX          FLOTTANT       valeur de la reaction d'appui\n                                       limite\n                 En sortie, TAB1 contient :\n\n         indice        type objet         commentaires\n                         pointe\n\n       CHARLIM          FLOTTANT       la charge limite\n\n       MCHPV            MCHAML         les parametres internes\n\n       CHPPB            CHPOINT        les bloquages\n\n       CHPPS            CHPOINT        les sollicitations",
  },
  {
    name: "ANNO",
    url: "ANNO",
    documentation:
      "$$$$ ANNO     NOTICE  JC220346  20/01/07    21:15:01     10490          \n                                             DATE     20/01/07\n\n    Operateur ANNO                         Voir aussi : TRAC\n\n    Objet :\n    _______\n\n    L'op\u00e9rateur ANNO permet de cr\u00e9er un objet ANNOTATION. Ces objets\n    peuvent etre regroupes a l'aide de l'operateur ET et transmis\n    a TRAC pour enrichir l'affichage graphique.\n\n    Plusieurs syntaxes sont disponibles pour creer differents types\n    d'annotations :\n    \n\n    Syntaxes :\n    __________\n\n\n    1) Affichage d'une legende discrete (categories)\n\n       ANNO1 = ANNO 'CATE' COUL1 TITR1 ;\n\n\n    2) Affichage d'etiquettes localisees\n\n       ANNO1 = ANNO 'ETIQ' POIN1 (COUL1) (POSI1) (DIST1) (LIEN1) MSG1 ;\n\n\n\n   Commentaires :\n   ______________\n\n   1) Une legende de type \"categorie\" est un rectangle de couleur COUL1\n      couple a un texte TITR1 affiche sur le bandeau de droite, a la\n      place des isovaleurs.\n\n   2) Une etiquette est un message MSG1 affiche en un point POIN1 du\n      domaine. La couleur COUL1 peut etre specifiee, ainsi que la\n      position de l'etiquette par rapport a POIN1 (mot-cle 'SO', 'S',\n      'SE', 'O', 'C', 'E', 'NO', 'N', 'NE') et sa distance DIST1. Enfin,\n      LIEN1 (type LOGIQUE) indique s'il faut dessiner une ligne entre\n      POIN1 et l'etiquette (par defaut : VRAI)\n      ",
  },
  {
    name: "ANNOIMP",
    url: "ANNOIMP",
    documentation:
      "$$$$ ANNOIMP  NOTICE  CHAT      11/09/12    21:15:07     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure ANNOIMP                             Voir aussi :\n    -----------------  \n    GEO1 = ANNOIMP  N1 FLOT1 FLOT2 HAUT1 FLOT3 FLOT4 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure genere un maillage d'anneau imparfait d'axe Oz.\n\n    Commentaire :\n    _____________\n\n    Le rayon de l'anneau varie suivant la loi suivante :\n\n    RAY1 = FLOT2 + FLOT3 * cos(FLOT1 * FLOT4)\n\n    Les coordonnees de la base sont donnees par :\n\n          X1 = FLOT2 * cos(FLOT4)\n          Y1 = FLOT2 * sin(FLOT4)\n          Z1 = 0\n\n\n    HAUT1  : hauteur de l'anneau (type FLOTTANT)\n\n    FLOT1  : mode (type FLOTTANT)\n\n    FLOT2  : rayon (type FLOTTANT)\n\n    FLOT3  : defaut (type FLOTTANT)\n\n    FLOT4  : angle par rapport a Oz (type FLOTTANT)\n\n    N1     : nombre de segments sur la base de l'anneau (type ENTIER)",
  },
  {
    name: "ANNU",
    url: "ANNU",
    documentation:
      "$$$$ ANNU     NOTICE  CHAT      11/09/12    21:15:08     7124           \n                                             DATE     11/09/12\n\n\n\n  Operateur ANNU                             Voir aussi :\n    --------------                             \n    Cet operateur est a usage interne de Gibiane",
  },
  {
    name: "ANTI",
    url: "ANTI",
    documentation:
      "$$$$ ANTI     NOTICE  CHAT      11/09/12    21:15:08     7124           \n                                             DATE     11/09/12\n\n    Operateur ANTI :                         Voir aussi : SYMT BLOQ\n    --------------                                        RELA     RESO  \n                                                          REAC     TRAC  \n\n   RIG1 = ANTI ('DEPL') ('ROTA') POIN1 POIN2 (POIN3 si 3D) GEO1 (FLOT1)\n\n\n    Objet :\n    _______\n\n   L'operateur ANTISYMETRIE permet d'imposer des conditions aux limites\nde type antisymetrique sur les d.d.l. en DEPLACEMENT et/ou en ROTATION.\n\n    Commentaire :\n    _____________\n\n    Cet operateur cree l'objet RIG1 de type RIGIDITE associe aux\nconditions aux limites. Il faudra l'adjoindre a la rigidite de la\nstructure calculee.\n\n\n    POIN1,POIN2       : points qui definissent l'AXE d'ANTISYMETRIE\n                        en 2D (type POINT)\n\n    POIN1,POIN2,POIN3 : points qui definissent le PLAN d'ANTISYMETRIE\n                        en 3D (type POINT)\n\n    GEO1              : objet sur lequel on impose les conditions aux\n                        limites (type MAILLAGE)\n\n    FLOT1             : valeur du critere de selection des points\n                        appartenant a l'axe/au plan d'antisymetrie\n                        (type FLOTTANT).\n                        Par defaut on utilise le 1/10 de la densite\n                        courante.\n                        FLOT1 est donc NECESSAIRE lorsqu'aucune densite\n                        n'a ete definie precedemment .\n\n    'DEPL'            : Mot-cle pour creer des conditions aux limites,\n                        de type ANTISYMETRIE sur les d.d.l. de depla-\n                        cement.\n\n    'ROTA'            : Mot-cle pour creer des conditions aux limites,\n                        de type ANTISYMETRIE sur les d.d.l. de rotation.\n\nL'une au moins de ces deux dernieres specifications est OBLIGATOIRE.\n\n\n    ATTENTION  Le choix du critere conditionne l'ensemble des points\n    _________  sur lesquels porteront les conditions d'antisymetrie.\n               Il est donc conseille d'une part de le choisir avec\n               soin et d'autre part de visualiser les blocages ainsi\n               obtenus au moyen de l'operateur TRAC.\n\n    REMARQUE   Cet operateur n'est pas disponible en dimension 1.\n    ________   L'utilisation de l'operateur BLOQUE est suffisante.",
  },
  {
    name: "APPU",
    url: "APPU",
    documentation:
      "$$$$ APPU     NOTICE  PASCAL    15/06/23    21:15:02     8551           \n                                             DATE     15/06/23\n                                             \n  Operateur APPUI                         Voir aussi :\n    ---------------  \n   RIG1 = APPUI | ('DEPL') ('ROTA') | ('DIRECTION' VEC1) |  FLOT1 GEO1 ;\n                |  'RADIAL'  POIN1  POIN2                |\n                |   MOT1 ...                             |\n\n\n    Objet :\n    _______\n\n    L'operateur APPUI construit la rigidite RIG2, associee a des appuis\nlineaires ( ressorts) appliques a des degres de liberte.\nCette rigidite sera ulterieurement a adjoindre a la rigidite de la\nstructure.\n\n    Commentaire :\n    _____________\n\n\n    'DEPL'      : Mot-cle pour mettre un appui sur chacune des\n                  composantes de deplacement\n\n    'ROTA'      : Mot-cle pour mettre un appui sur chacune des\n                  composantes de rotation\n\n    'RADIAL'    : Mot-cle pour bloquer le deplacement radial\n                  par rapport | au point POIN1 en 2D (type POINT),\n                              | a l'axe POIN1 POIN2 en 3D (type POINT).\n\n    'DIRECTION' : Mot-cle pour bloquer le deplacement\n                  (par defaut) ou la rotation (mot-cle 'ROTA')\n                  selon la direction definie par le vecteur VEC1\n\n    VEC1        : vecteur (type POINT)\n\n    MOT1        : un ou plusieurs noms (type MOT) representant les\n                  degres de liberte sur lesquels on veut mettre un\n                  appui (dans ce cas ne pas se servir des\n                  mots-cles precedents )\n\n                  Les noms des degres de liberte possibles sont :\n\n         pour un calcul en MODE PLAN CONT :  UX   UY\n         pour un calcul en MODE PLAN DEFO :  UX   UY\n         pour un calcul en MODE AXIS      :  UR   UZ   RT\n         pour un calcul en MODE FOUR      :  UR   UZ   UT   RT\n         pour un calcul en MODE TRID      :  UX   UY   UZ   RX   RY   RZ\n\n\n    FLOT1       : raideur elastique de l'appui (type FLOTTANT)\n\n    GEO1        : objet o\u00ba seront imposes les appuis\n                  (type MAILLAGE ou POINT)\n\n    RIG1        : matrice resultat (type RIGIDITE, sous-type RIGIDITE)\n\n    Remarque :\n    __________\n\n    Cette rigidite doit etre passee en argument de l'indice \n    RIGIDITE_CONSTANTE de la table d'entree de PASAPAS.",
  },
  {
    name: "ARCGAU",
    url: "ARCGAU",
    documentation:
      "$$$$ ARCGAU   NOTICE  CHAT      11/09/12    21:15:08     7124           \n                                             DATE     11/09/12\n\n  Procedure ARCGAU                               Voir aussi :\n    ----------------  \n       CHPO1 = ARCGAU TAB1 ;\n\n                TAB1.'PUISSANCE' .'RENDEMENT'\n                    .'DIFFUSVITE'  .'CONDUCTIVITE'\n                    .'VITESSE'\n                    .'T0' .'TFUSION'\n                    .'NTERMES'\n                    .'MAILLAGE'\n                    .'EPAISSEUR'\n                    .'LOCAL' .'INSTANT'\n                    .'PRECISION'\n                    .'NSURFACES' .'SURFACE'\n                    .'GAUSS' .'ECART-TYPE'\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule le champ de temperature resultant du\n    deplacement d'un arc de soudure sur une plaque infinie. L'arc est \n    soit ponctuel, soit gaussien et se deplace selon l'axe X.\n    La largeur de bain (largeur de l'isotherme a TFUSION) est calculee\n    pour toutes les surfaces donnees dans la table.\n    La solution analytique du probleme est tiree de Rosenthal : \n    Mathematical Theory of Heat Distribution During Welding and \n    Cutting. \n\n    Commentaire :\n    _____________\n\n    En entree :\n    __________\n\n        TAB1 : Objet de type TABLE, indice par des mots, servant a\n                definir les options de calcul :\n \n        Arguments :\n        ___________\n\n            'PUISSANCE' : REEL : Puissance de l'arc (en W)        \n\n            'RENDEMENT' : REEL : Rendement de l'arc : Rapport de  \n               la puissance recue par la piece et de la puissance \n               de l'arc                                           \n\n            'DIFFUSVITE' : REEL : Diffusivite thermique du materiau \n               (en m2/s)                                 \n\n            'CONDUCTIVITE' : REEL : Conductivite thermique du     \n               materiau (en W/Km2)                                \n\n            'VITESSE' : REEL : Vitesse de deplacement de l'arc (en m/s)\n\n            'T0' : REEL : Temperature ambiante (en \u00b0C ou en K)    \n\n            'NTERMES' : ENTIER : Nombre de termes de la somme     \n\n            'MAILLAGE' : MAILLAGE : Maillage support du champ de  \n               temperature                                        \n\n            'EPAISSEUR' : REEL : Epaisseur de la piece (en m)     \n\n            'LOCAL' : BOOLEEN : VRAI si la piece est decrite dans \n               le repere local a l'arc                            \n\n            'INSTANT' : REEL : Si 'LOCAL' est FAUX, instant       \n               auquel il faut calculer le champ de temperature    \n               (l'abscisse de l'arc est alors V*t) (en s)         \n\n            'TFUSION' : REEL : Temperature de fusion (en \u00b0C ou en K)\n\n            'PRECISION' : REEL : Precision du calcul de la largeur de \n               bain (en m)                             \n\n            'NSURFACES' : ENTIER : Nombre de surfaces sur lesquelles \n               la largeur de bain doit etre calculee    \n\n            'SURFACE' : TABLE : indice par des entiers\n                    'SURFACE'.I : MAILLAGE : i-eme surface sur    \n                       laquelle la largeur de bain doit etre      \n                       calculee                                   \n\n            'GAUSS' : BOOLEEN : VRAI si la source est gaussienne  \n\n            'ECART-TYPE' : REEL : Ecart-type de la gaussienne (en m)\n\n\n    En sortie :\n    __________\n\n            CHPO1 : CHPOINT : Champ de temperature (en \u00b0C ou en K)\n\n            Dans la table en entree :\n\n               'LARGEUR' : TABLE :\n                    'LARGEUR'.I : REEL : Largeur de bain calculee \n                        sur la i-eme surface\n\n               'XBAIN' : TABLE :\n                    'XBAIN'.I : REEL : Abscisse a laquelle la\n                        largeur de bain est maximale pour la\n                        i-eme surface",
  },
  {
    name: "ARET",
    url: "ARET",
    documentation:
      "$$$$ ARET     NOTICE  CHAT      11/09/12    21:15:09     7124           \n                                             DATE     11/09/12\n\n    Operateur ARETE                          Voir aussi : TRAC CONT\n    ---------------                                       ENVE  \n    ARET1 = ARETE VOLU1 ( TETA ) ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur ARETE construit un maillage constitue d'elements SEG2\n    representant les aretes vives d'un maillage tridimensionnel. Dans\n    cet operateur, une arete est consideree comme vive si la difference\n    d'angle entre les normales des facettes adjacentes est superieure\n    a une borne TETA valant 20 degres par defaut.\n\n\n    Commentaire :\n    ____________\n\n\n    ARET1 : objet de type MAILLAGE contenant uniquement des elements\n            SEG2 representant les aretes vives.\n\n    VOLU1 : objet de type MAILLAGE tridimensionnel.\n\n    TETA  : critere d'angle en degres (type FLOTTANT).",
  },
  {
    name: "ARGU",
    url: "ARGU",
    documentation:
      "$$$$ ARGU     NOTICE  JC220346  12/09/05    21:15:02     7494           \n                                             DATE     12/09/05\n\n    Operateur ARGUMENT                       Voir aussi : DEBP FINP\n    ------------------                                    QUIT  RESP  \n                                                          DEBM  FINM  \n    ARGUMENT  OBJET1?TYP1  OBJET2?TYP2  .....;\n\n\n\n    Objet :\n    _______\n\n    L'operateur ARGUMENT permet de lire des arguments OBJETi, de type\n    TYPi, depuis l'interieur d'une procedure.\n\n    Pour des raisons de performances, il est preferable de recuperer\n    les arguments directement dans DEBPROC quand c'est possible.\n\n\n    Commentaire :\n    _____________\n\n    L'ensemble ?TYPi est facultatif. S'il est omis, ARGU essaie de\n    recuperer un objet de n'importe quel type.\n\n    Le caractere ? vaut :\n\n    - soit *  si la lecture est imperative\n    - soit /  sinon\n\n    Les types d'objet possibles sont:\n\n        'MAILLAGE'     'AFFECTE '    'DEFORME '\n        'CHPOINT '     'CHAMELEM'    'LISTREEL'\n        'RIGIDITE'     'BLOQSTRU'    'LISTENTI'\n        'ELEMSTRU'     'SOLUTION'    'CHARGEME'\n        'STRUCTUR'     'TABLE   '    'MODELE  '\n        'MAFFEC  '     'MSOSTU  '    'EVOLUTIO'\n        'IMATRI  '     'MJONCT  '    'SUPERELE'\n        'ATTACHE '     'MMATRI  '    'LOGIQUE '\n        'FLOTTANT'     'ENTIER  '    'MOT     '\n        'TEXTE   '     'LISTMOTS'    'VECTEUR '\n        'VECTDOUB'     'POINT   '    'CONFIGUR'\n        'LISTCHPO'     'BASEMODA'    'PROCEDUR'\n        'BLOC    '     'MMODEL  '    'MCHAML  '\n        'MINTE   '     'NUAGE   '    'MATRIK  '\n\n\n    Exemple :\n    _________\n\n    Procedure faisant l'addition de n entiers avec n plus grand ou\n    egal a 2.\n\n\n             DEBP ADDI ;\n             ARGU  I*ENTIER  J*ENTIER  ;\n             K = I + J ;\n             REPETER NFOI;\n             ARGU L/ENTIER;\n             SI ( EXISTE L) ;\n             K = K + L ;\n             SINON;\n             QUITTER NFOI;\n             FINSI;\n             FIN NFOI;\n             FINPROC K;\n             X = ADDI 2 5  4;",
  },
  {
    name: "ASIH",
    url: "ASIH",
    documentation:
      "$$$$ ASIH     NOTICE  CB215821  18/06/05    21:15:01     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ASIH'  OBJET1 ;\n\n\n    Operateur ASIH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH      ATAH  \n    Objet :\n    _______\n\n    L'operateur ASIH calcule l'arc sinus    hyperbolique de l'objet \n    OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ASIN",
    url: "ASIN",
    documentation:
      "$$$$ ASIN     NOTICE  CB215821  18/06/05    21:15:02     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ASIN'  OBJET1 ;\n\n\n    Operateur A SIN                           Voir aussi : COS  SIN TAN\n    --------------                                        ACOS      ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur ASIN (arc-sinus)   calcule l'arc-sinus d'OBJET1.\n    Le resultat est en degres, dans l'intervalle [-90 ; 90].\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ASPARAM",
    url: "ASPARAM",
    documentation:
      "$$$$ ASPARAM  NOTICE  CHAT      11/09/12    21:15:09     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure ASPARAM                        Voir aussi : ENCEINTE\n    -----------------  \n      ASPARAM OBJ1 ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure ASPARAM complete la table RXT de la procedure ENCEINTE\n en vue de modeliser l'aspersion.\n Cette procedure est appelee par la procedure ENCEINTE\n\n    Commentaire\n    ___________\n\n     OBJ1    Table en entree de la procedure ENCEINTE",
  },
  {
    name: "ASSI",
    url: "ASSI",
    documentation:
      "$$$$ ASSI     NOTICE  CHAT      11/09/12    21:15:10     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ASSI                            Voir aussi :\n    --------------  \n\n   1 ere possibilite\n   _________________\n           \n       RES1 ... RESn = ASSI IASSIS INS1 ... INSP;\n\n    Objet :\n    _______\n\n    L'operateur ASSIstant fait executer par l'assistant IASSIS\n (ENTIER) l'instruction elementaire :\n\n     RES1 ... RESn = INS1 ... INSP;\n\n    Si la version parallele de Castem est utilisee, l'instruction\n sera terminee aussitot qu'elle sera transferee a l'assistant.\n Si une autre instruction a besoin de ces resultats, elle devra attendre\n que ceux-ci soient disponobles.\n\n    Exemple 1 :\n    ___________\n\n    MAT1 = ASSI 1 MATER MODEL1 YOUNG 1E5 NU 0.3;\n\n    L'assistant 1 va se charger d'executer : \n\n    MAT1 =  MATER MODEL1 YOUNG 1E5 NU 0.3;\n\n\n    Si une autre instruction utilise par la suite MAT1, elle sera\n bloquee en attendant la disponibilite de MAT1 (que ce soit sur le\n maitre ou sur un assistant).\n\n\n   2eme possibilite\n   ________________\n\n    RES1 ... RESn = ASSI 'TOUS' INS1 ... INSP;\n\n   Objet :\n   _______\n\n    Si la meme instruction est executee sur plusieurs assistants mais\n avec des donnees differentes, il suffit d'utiliser l'option 'tous' \n et de stocker les donnees a distribuer sous forme de tables de soustype \n ESCLAVE ou les donnees associees a l'assistant I se trouvent a l'indice I.\n Les resultats sont stockes dans des tables de sous types ESCLAVE.\n\n    Exemple 2 :\n    ___________\n\n     TMAT1 = 'ASSI' 'TOUS' MATER TMODL1 'YOUNG' 1E5 'NU' 0.3 ;\n\n       TMODL1     : table de sous type ESCLAVE\n       TMODL1 . i : modele associe a l'assistant i\n       TMAT1      : table de sous type ESCLAVE\n       TMAT1 . i  : resultat associe a l'assistant i\n\n  \n    Exemple 3 :\n    ___________\n\n       TMODL1 = 'TABLE' ESCLAVE ;\n       TMODL1 . 1 = MODL1 ;  \n       TMODL1 . 3 = MODL2 ;  TMODL1 . 4 = MODL4 ;\n      \n*       Declaration de 2 assistants\n       'OPTI' 'ASSI' 2 ; \n\n       TMAT1 = ASSI 'TOUS' 'MATER' TMODL1 'YOUNG' 1E5 'NU' 0.3 ;\n la commande precedente est equivalente aux instructions suivantes : \n       TMAT1 = 'TABLE' ESCLAVE ;\n       TMAT1 . 1 = ASSI 1 'MATER' TMODL1 . 1 'YOUNG' 1E5 'NU' 0.3 ;\n       TMAT1 . 3 = 'MATER' TMODL1 . 3 'YOUNG' 1E5 'NU' 0.3 ;\n       TMAT1 . 4 = ASSI 1 'MATER' TMODL1 . 4 'YOUNG' 1E5 'NU' 0.3 ;\n\n\n Remarques :\n ___________\n\n    Lors de l'utilisation de l'option 'tous', toutes les tables ESCLAVES\n existantes dans l'instruction doivent avoir les memes indices.\n\n    Il est tres fortement deconseiller de transferer des tables a un\n assistant i car ces objets peuvent etre modifies durant l'operation. \n\n   Il est possible de faire travailler le maitre comme un assistant (le\n numero d'assistant qui lui est associe est 0 ).\n\n   Il est possible de definir un IASSIS plus grand que le nombre \n d'assistants declares NBass (opti assi nbass ; ). L'operation sera\n transferee sur l'assistant I defini par I = modulo (IASSIS,nbass+1)\n (le maitre jouant aussi le role d'un assistant).\n\n   Ces deux dernieres proprietes permettent de tester un programme \n GIBIANE parallele sur une machine sequentielle en definisaant 0 \n assistant ('OPTI' 'ASSI' 0 ; ).",
  },
  {
    name: "ATAH",
    url: "ATAH",
    documentation:
      "$$$$ ATAH     NOTICE  CB215821  18/06/05    21:15:02     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ATAH'  OBJET1 ;\n\n\n    Operateur ATAH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH  \n    Objet :\n    _______\n\n    L'operateur ATAH calcule l'arc tangente hyperbolique de l'objet \n    OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ATG",
    url: "ATG",
    documentation:
      "$$$$ ATG      NOTICE  CB215821  18/06/05    21:15:02     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'ATG'   OBJET1  (OBJET2) ;\n\n\n    Operateur ATG                            Voir aussi : COS SIN TAN\n    -------------                                         ACOS ASIN   \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur ATG (arc-tangente) calcule l'arc-tangente\n    d'OBJET1, ou d' OBJET1 / OBJET2 si OBJET2 est donne.\n\n    Le resultat est en degres, dans l'intervalle [-90 ; 90] \n    pour l'arc-tangente a un argument et dans l'intervalle \n    [-180 ; 180] pour l'arc-tangente a deux arguments.\n\n    ----------------------------------------------------------------\n    |       OBJET1      |      ( OBJET2 )     |       RESU1        |\n    ----------------------------------------------------------------\n    |       ENTIER      |     (  ENTIER  )    |      FLOTTANT      |\n    |      FLOTTANT     |     ( FLOTTANT )    |      FLOTTANT      |\n    |      CHPOINT      |     ( CHPOINT  )    |      CHPOINT       |\n    |      LISTENTI     |     ( LISTENTI )    |      LISTREEL      |\n    |      LISTREEL     |     ( LISTREEL )    |      LISTREEL      |\n    |      EVOLUTIO     |                     |      EVOLUTIO      |\n    |       MCHAML      |       (MCHAML)      |       MCHAML       |\n    ----------------------------------------------------------------\n\n      \n      \n    Remarque 1 :\n    __________\n      \n    Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n    seule l'ordonnee subit l'operation.\n      \n    Remarque 2 :\n    ____________\n\n    Lorsque l'objet OBJET2, est omis, l'operateur ATG calcule\n    l'arc tangente de l'objet OBJET1 (type ENTIER ou FLOTTANT).\n\n    Remarque 3 :\n    ____________\n\n    Lorsque l'operateur ATG calcule l'arc tangente d'un CHPOINT, il\n    remplace chaque valeur du CHPOINT par son arc tangente. L'objet\n    RESU1 est, dans ce cas, de type CHPOINT, de meme structure\n    qu'OBJET2. \n\n    Remarque 4 :\n    ____________\n\n    Lorsque l'operateur ATG calcule l'arc tangente d'OBJET1 de type\n    CHPOINT divise par l'OBJET2 de type CHPOINT, chaque valeur d'OBJET1\n    est divisee par la valeur correspondante d'OBJET2, si elle existe\n    (sinon un angle de +- 90 degres est donne), puis on en prend l'arc\n    tangente. Dans ce cas, l'objet RESU1 est de type CHPOINT, de Meme\n    structure qu'OBJET2.\n      ",
  },
  {
    name: "AUTOPILO",
    url: "AUTOPILO",
    documentation:
      "$$$$ AUTOPILO NOTICE  CHAT      11/09/12    21:15:10     7124           \n                                             DATE     11/09/12\n\n  Procedure AUTOPILO                       Voir aussi :\n    ------------------   \n                      \n Cette procedure est appelee par la procedure de calcul nonlineaire\nen cas de demande de limitation de charge automatique. \nLe but de cette procedure est de fournir un coefficient pour normer \nDELT afin que ce dernier soit compatible avec le critere de pilotage. \nCe coefficient est une norme de DELT au sens du critere. En principe il \nest positif. Toutefois lui donner un signe permet de forcer l'algorithme \nvers un direction donnee. Par defaut le critere est le max de \nl'increment de deformation totale et de l'increment de deformation \n\"plastique\" (total - elastique). \nPour plus d'information voir la procedure elle meme.",
  },
  {
    name: "AVCT",
    url: "AVCT",
    documentation:
      "$$$$ AVCT     NOTICE  CHAT      11/09/12    21:15:10     7124           \n                                             DATE     11/09/12\n\n  Directive AVCT                              Voir aussi :    \n     --------------  \n\n\n\n    Objet : realise un increment en temps.\n    -----\n\n     n    n-1         -1    n-1\n    T  = T    + DT * D   * G\n\n    ou\n\n     n               -1   n-1            -1    n-1\n    T  =  (1+DT*D1/D)    T    + (D/DT+D1)   * G         (matrice masse diagonale\n\n        ALIAS :\n                 n           n-1    n-1\n    (D/DT + D1) T  - (D/DT) T    = G\n\n\n    T : inconnue au SOMMET --> l'increment est au SOMMET\n\n    T : inconnue au CENTRE --> l'increment est au FACE\n\n\n    Syntaxe :\n    -------\n\n    AVCT (rv.kizt) (rv.kizc) (rv.pasdetps) (rv.kizg) (rv.kizd)\n         ALFA 'IMPR' FIDT ;\n\n\n    rv.kizt\n\n    Table 'KIZT' cree par l'utilisateur et placee dans la table cree par\n    EQEX a l'entree KIZT (ici rv.kizt)\n    Cette table contient les CHAMPOINT-TRIO inconnues\n\n\n    < rv.kizc >\n\n    Table 'KIZC' cree par EQEX contient les conditions limites de type\n    valeur imposee.\n\n\n    < rv.padetps >\n\n    Table de type 'PASDETPS' Contient les informations relatives au\n    pas de temps. Elle est cree par les operateurs de discretisation\n    ayant une limite de stabilite en temps (NS , NSKE etc )\n    En l'absence de cette table DT est pris egal a 1.\n\n\n    < rv.kizg >\n\n    Table de type 'KIZG' cree par les operateurs de discretisation\n    contient les increments ranges dans l'ordre des inconnues de la\n    KIZT.\n\n\n    < rv.kizd >\n\n    Table de type 'KIZD' cree par KDIA contient les matrices masse\n    diagonales (sous forme de CHAMPOINT-TRIO)\n\n    < ALFA > Flottant : tolerance sur le pas de temps\n    DT reel = ALFA * DT calcule    (par defaut ALFA=1.)\n\n    < IMPR > Mot : impression d'informations sur les pas de temps\n\n    < FIDT > Entier : frequence de l'impression",
  },
  {
    name: "BALOURD",
    url: "BALOURD",
    documentation:
      "$$$$ BALOURD  NOTICE  MB234859  17/10/02    21:15:03     9577           \n                                             DATE     17/10/02\n \n     Procedure BALOURD                      Voir aussi GYRO, CAMPBELL\n     ------------------                                  \n\n \n                    BALOURD TAB1 PROMEG   \n\nObjet:\n------ \n  \n\n \n         BALOURD calcule la reponse d'une machine tournante \n           a un balourd en utilisant eventuellement \n           une base de modes propres\n                                                            \n\n   INPUT\n \n TAB1     Table contenant:\n \n    TAB1.'BASE_MODALE': Table contenant la base de modes reels utilisees\n                 (table generee par VIBR avec l'option TBAS)\n                 Si aucune base modale n'est donnee, le calcul est \n                effectuedirectement dans l'espace physique.\n \n    Les matrices de masse, de raideur, d'amortissement et de couplage \n   gyroscopique peuvent etre donnees deja projetees sur la base de \n   modes reels ou non:\n   \n    TAB1.'MASS_PROJ': Matrice de masse projetee sur les modes \n                      reels utilises \n    TAB1.'MASSE': Matrice de masse \n \n    TAB1.'RIGI_PROJ': Matrice de rigidite projetee sur les modes \n                     reels utilises \n    TAB1.'RIGIDITE': Matrice de rigidite\n \n    TAB1.'AMOR_PROJ': Matrice d'amortissement projetee sur les modes \n                      reels utilises \n    TAB1.'AMORTISSEMENT': Matrice d'amortissement\n\n    TAB1.'KROT_PROJ': Matrice de raideur antisymetrique due a \n         l'amortissement  corotatif projetee sur les modes reels utilises \n    TAB1.'KROTATIF': Matrice de raideur antisymetrique due a \n             l'amortissement corotatif\n \n    TAB1.'GYRO_PROJ': Matrice de couplage gyrsocopique projetee sur \n                      les modes reels utilises \n    TAB1.'GYROSCOPIQUE': Matrice de couplage gyrsocopique.\n      La matrice de couplage gyroscopique doit etre donnee pour une vitesse \n      de rotation de 1 rad/s\n \n    La force de balourd peut etre definie de plusieurs fa\u00e7on\n \n   1- La force de balourd reelle est donnee\n      et la procedure calcule automatiquement la partie imaginaire \n      necessaire au calcul en supposant l'axe de l'arbre tournant oriente  \n      suivant l'axe Ox  et tournant avec une vitesse positive\n \n    TAB1.'FBALOURD': Force de balourd pour une vitesse de rotation unite\n      La force de balourd doit etre donnee pour une vitesse de rotation de \n      1 rad/s\n\n    TAB1.'VROTATION': CHPO defini sur les memes points que la force de balourd \n      et donnant la direction du vecteur rotation \n      (composante du CHPO: RX RY RZ). \n      Par defaut, vecteur Ox. Ce vecteur permet de calculer la partie imaginaire\n      du vecteur force de balourd.  \n \n   2- L'utilisateur donne directement la partie reelle et la partie imaginaire \n      utilises pour la calcul (projetee ou non sur la base modale utilisee)\n \n    TAB1.'FBAR_PROJ': Force de balourd reelle projetee sur les modes \n                     reels utilises \n    TAB1.'FBAI_PROJ': Force de balourd imaginaire projetee sur les modes \n                      reels utilises \n \n    TAB1.'FBALREEL': Force de balourd reelle pour une vitesse de\n                    rotation unite. La force de balourd doit etre donnee pour \n                    une vitesse de rotation de 1 rad/s.\n    TAB1.'FBALIMAG': Force de balourd imaginaire pour une vitesse de \n                    rotation unite. La force de balourd doit etre donnee pour\n                   une vitesse de rotation de 1 rad/s\n \n    TAB1.'REPONSE' : Table contenant les i points ou sont calcules les reponses \n     (TAB1.'REPONSE').i.'POINT': \n \n    TAB1.'SAUVDEFO': Vrai si on veut sauver les deformees pour chaque reponse i\n \n \n    TAB1.'AFFICHAGE': VRAI si on veut afficher les frequences de rotation \n                      au cours du calcul \n \n\n  PROMEG:  LISTREEL contenant les vitesses de rotation (en rad/s) pour lesquelle\n            on calcule la reponse au balourd\n \n   OUTPUT\n \n    TAB1.'REPONSE' : Table contenant i indices\n     (TAB1.'REPONSE'). i . 'POINT': Points ou sont calcules les reponses \n     Grandeurs donnees directement par l'inversion du systeme \n    (pas de sens physique)\n         (TAB1.'REPONSE'). i . 'UXREEL': Deplacement UX reel \n         (TAB1.'REPONSE'). i . 'UYREEL': Deplacement UY reel \n         (TAB1.'REPONSE'). i . 'UZREEL': Deplacement UZ reel \n         (TAB1.'REPONSE'). i . 'RXREEL': Rotation    RX reel \n         (TAB1.'REPONSE'). i . 'RYREEL': Rotation    RY reel \n         (TAB1.'REPONSE'). i . 'RZREEL': Rotation    RZ reel \n         (TAB1.'REPONSE'). i . 'UXIMAG': Deplacement UX imaginaire\n         (TAB1.'REPONSE'). i . 'UYIMAG': Deplacement UY imaginaire\n         (TAB1.'REPONSE'). i . 'UZIMAG': Deplacement UZ imaginaire\n         (TAB1.'REPONSE'). i . 'RXIMAG': Rotation    RX imaginaire\n         (TAB1.'REPONSE'). i . 'RYIMAG': Rotation    RY imaginaire\n         (TAB1.'REPONSE'). i . 'RZIMAG': Rotation    RZ imaginaire\n \n     \n \n     Grandeurs dans le repere de calcul\n         (TAB1.'REPONSE'). i . 'UX': Deplacement UX \n         (TAB1.'REPONSE'). i . 'UY': Deplacement UY \n         (TAB1.'REPONSE'). i . 'UZ': Deplacement UZ \n         (TAB1.'REPONSE'). i . 'RX': Rotation    RX  \n         (TAB1.'REPONSE'). i . 'RY': Rotation    RY  \n         (TAB1.'REPONSE'). i . 'RZ': Rotation    RZ  \n         (TAB1.'REPONSE'). i . 'GAXE': Deplacement maximum correspondant \n                           au grand axe de l'ellipse (trajectoire decrite)  \n                                    \n         (TAB1.'REPONSE'). i . 'PAXE':  Deplacement maximum correspondant\n                           au petit axe de l'ellipse (trajectoire decrite)  \n \n      Deformees relles et imaginaires pour chacune des frequences\n      TAB1.'SAUVDEFO': Table qui contiendra les deformees pour chaque reponse i\n      (TAB1.'SAUVDEFO'). i.'FREQROTA' : Frequence de rotation\n      (TAB1.'SAUVDEFO'). i. 'DEFORMEE_REELLE' : Deformee reelle\n      (TAB1.'SAUVDEFO'). i. 'DEFORMEE_IMAGINAIRE' : Deformee imaginaire\n \n                                                                ",
  },
  {
    name: "BARY",
    url: "BARY",
    documentation:
      "$$$$ BARY     NOTICE  BP208322  16/12/14    21:15:01     9260           \n                                             DATE     16/12/14\n                                             \n  Operateur BARYCENTRE                            Voir aussi :\n    --------------------  \n    POIN1 = BARY GEO1 ('ELEM');\n\n\n    Objet :                                                                     \n    _______\n\n    L'operateur BARYCENTRE cree le point (ou le maillage de points)\n    correspondant a la moyenne arithmetique de l'ensemble des noeuds\n    contenus dans une geometrie GEO1.\n\n    Commentaire :\n    _____________\n\n    GEO1  : geometrie (type MAILLAGE)\n\n    POIN1 : barycentre de la geometrie GEO1 (type POINT \n            ou MAILLAGE de POI1)\n            \n    'ELEM': option pour calculer le barycentre de chaque element\n            (le resultat sera alors de type MAILLAGE de POI1)\n\n    Remarque : \n    _____________\n\n    Ce barycentre ne coincide pas en general avec le centre de\n    gravite de la geometrie.",
  },
  {
    name: "BASE",
    url: "BASE",
    documentation:
      "$$$$ BASE     NOTICE  MB234859  17/10/02    21:15:03     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur BASE                                 Voir aussi :\n     --------------  \n     Cas 1 :\n     -----\n     BAS1 = BASE  STRU1 (ATTA1) (SOL1) (SOL2)  ;\n\n     Cas 2 :\n     -----\n     TAB1 = BASE  TAB2  TAB3  | 'PLUS'   VEC1   ;\n                              | 'ROTA'   FLOT1  P1  P2  ;\n\n\n     Objet :\n     -------\n\n     Cas 1 :\n     -----\n     Dans une analyse sur base modale, une structure est representee\npar un ensemble de modes et de solutions statiques.\nLa specification des liaisons qui s'exercent eventuellement sur la\nstructure, ainsi que la specification de l'ensemble de modes et de\nsolutions statiques, definissent le probleme a resoudre.\nL'operateur BASE permet de construire un objet (type BASEMODA)\nqui rassemble ces diverses informations.\n\n     Cas 2 :\n     -----\n     L'operateur BASE effectue une operation geometrique de translation\n('PLUS') ou de rotation ('ROTA') sur un objet contenant les modes et\nles pseudo-modes d'une structure.\n\n    Commentaire :\n    _____________\n\n    STRU1   : objet contenant la description de la structure, soit\n              elementaire, soit forme de sous-structures identiques\n              (type STRUCTUR).\n\n    ATTA1   : objet contenant la specification des liaisons\n              (type ATTACHE).\n\n    SOL1    : objet contenant l'ensemble des modes\n              (type SOLUTION, sous-type MODE).\n\n    SOL2    : objet contenant l'ensemble des solutions statiques\n              (type SOLUTION, sous-type SOLUTION STATIQUE)\n\n    La specification des modes ,des liaisons, des solutions statiques\nest facultative.\n\n    TAB1    : objet contenant les caracteristiques modales de la\n              structure apres translation ou rotation (type TABLE).\n              structure de TAB1 :   TAB1.'BASE'  = TAB4\n                                        .'POINT' = TAB5\n                TAB4 a la Meme structure que TAB2.\n                TAB5 donne la correspondance dans la nouvelle geome-\n                     trie des points contenus dans TAB3 (type TABLE),\n                     TAB5.(TAB3.I) = QI , QI est le point qui corres-\n                     pond au niveau de la geometrie modifiee au point\n                     PI = TAB3.I de la geometrie initiale.\n\n    TAB2    : objet contenant les caracteristiques modales de la\n              structure initiale (type TABLE),\n              table de sous-type BASE_MODALE.\n\n    TAB3    : objet de type TABLE indice par des ENTIERs variant de 1 a\n              N et contenant des points de la geometrie,\n              table de sous-type POINT.\n\n    'PLUS'  : objet de type MOT indiquant que l'operation geometrique\n              effectuee est une translation de vecteur VEC1 (objet de\n              type POINT).\n\n    'ROTA'  : objet de type MOT indiquant que l'operation geometrique\n              effectuee est une rotation d'angle FLOT1 (en degre) autour\n              de l'axe defini par le point P1 (en 2D) ou les points P1\n              et P2 (en 3D).\n\n\n\n    Combinaisons possibles :\n    _______________________\n\n    Si STRU1 est elementaire :\n\n      BAS1 = BASE  STRU1 ATTA1 SOL1 SOL2 ;\n      BAS2 = BASE  STRU1 ATTA1 SOL1      ;\n      BAS3 = BASE  STRU1 ATTA1      SOL2 ;\n      BAS4 = BASE  STRU1 ATTA1           ;\n      BAS5 = BASE  STRU1       SOL1      ;\n\n    Si STRU est un ensemble de sous-structures identiques :\n\n      BAS6 = BASE  STRU1 ATTA1 SOL1     ;\n      BAS7 = BASE  STRU1 ATTA1          ;\n      BAS8 = BASE  STRU1       SOL1     ;\n\n    Remarque :\n    __________\n\n    Dans le cas o\u00ba les solutions statiques sont deduites des liaisons\nl'operateur BASE calcule automatiquement les solutions statiques,\npar defaut.\n\n    Lecture d'une base elementaire :\n    ________________________________\n\n    Des operateurs comme PJBA , EVOL, RECO ,... demandent pour\noperandes une base elementaire, c'est-a-dire une base modale qui\nne soit pas un ensemble de sous-bases.\n\n    Il existe trois possibilites de lecture :\n\n      BAS         : lecture de la base elementaire BAS\n      BAS STRU    : lecture de la base elementaire prise dans BAS ,\n                    associee a la sous structure STRU\n      BAS STRU N1 : recherche de la base elementaire BAS, associee a la\n                    Nieme sous-structure prise dans l'ensemble des\n                    sous-structures identiques STRU.\n\n    Exemple 1 :\n    ___________\n\n      B1 = BASE STRU1 MOD1 ;              B1 est elementaire\n      B  = B1 ET B2 ET ....;\n      FN1= PJBA B1       FORCE1 ;      |  Ces deux formulations\n      FN1= PJBA B STRU1  FORCE1 ;      |  sont equivalentes\n\n    Exemple 2 :\n    ___________\n\n      STRU2= STRU1 RIGI2 MASS2 6 ;        STRU2 contient 6 sous-\n                                          structures identiques\n      B2   = BASE STRU2 MOD2 ;\n      FN2  = PJBA B2 STRU2 4 FORCE2 ;     B2 STRU2 4 represente la\n                                          base elementaire attachee a la\n                                          4ieme sous-structure de STRU2",
  },
  {
    name: "BGMO",
    url: "BGMO",
    documentation:
      "$$$$ BGMO     NOTICE  CHAT      11/09/12    21:15:11     7124           \n                                             DATE     11/09/12\n\n  Operateur BGMO                               Voir aussi :    \n     --------------                                                      \n     OBJ2 = BGMO MOT1 OBJ1 (VAL1) (VAL2) ;         \n\n\n\n     Description :\n     -----------\n\n     L'operateur BGMO evalue les fonctions apparaissant dans le modele\n     de decalcification de mortier de Bruno Gerard. Ces fonctions, \n     dependantes de la temperature sont la capacite, la conductivite et\n     leurs derivees en fonction de la temperature. Bien que ces fonctions\n     soient dimensionnelles, l'operateur peut aussi travailler pour des\n     problemes adimensionnels.\n\n     Cet operateur contient les fonctions de couplage decrivant \n     l'interaction entre le probleme chimique et le probleme mecanique.\n     Ces fonctions sont (1-CHD) ou CHD est le dommage chimique, et\n     la conductivite due au dommage mecanique.\n\n     Contenu :\n     -------\n\n     MOT1   : 'COND' pour la conductivite\n              'DCON' pour la derive de la conductivite\n              'CAPA' pour la capacite\n              'DCAP' pour la derive de la capacite\n              'CHED' pour un moins le dommage chimique\n              'CONM' pour la conductivite due au dommage mecanique\n     OBJ1  : REEL ou MCHAML decrivant la temperature\n     VAL1  : temperature de reference (REEL). Valeur par defaut : 1.\n             si 'CONM' est utilise, l'argument de cette fonction est un\n             endommagement normalise et cette valeur n'est pas utilisee\n     VAL2  : conductivite/capacite de reference (REEL). Valeur par \n             defaut : 1.\n             Si 'CHED' est utilise, le resultat est un endommagement \n             normalise et VAL2 n'est pas utilisee.\n     OBJ2  : REEL ou MCHAML resultant de l'evaluation\n\n     Notes\n     -----\n     Les unites sont les metres, annees et mmol/l\n     La temperature/concentration peut varier de 0 a 20 mmol/l\n     L'endommagement varie de 0 a 1",
  },
  {
    name: "BIBLIO",
    url: "BIBLIO",
    documentation:
      "$$$$ BIBLIO   NOTICE  PASCAL    21/10/01    21:15:01     11113          \n                                             DATE     21/10/01\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Specification generale\n2. Mot-cle \"316L\"\n    2.1 Caracteristiques thermomecaniques (Depradeux, 2004) (defaut)\n    2.2 Caracteristiques thermomecaniques (Cambon, 2018)\n3. Mot-cle \"9Cr ODS\"\n    3.1 Caracteristiques thermomecaniques (Le Gloannec, 2016)\n4. References bibliographiques\n\n  \n1. Specification generale1 \n========================= \n  Procedure BIBLIO                         Voir aussi :\n    ----------------   \n    TAB1  =  BIBLIO  MOT1  ('REFE' ENT1) ;\n\n\n    Objet :\n    -------\n\n        La procedure BIBLIO fournit des donnees issues de la litterature.\n    Les donnees d'un meme sujet sont identifiees par un mot-cle (MOT1).\n    La liste des mot-cles disponibles, donc des sujets couverts par BIBLIO,\n    est precisee dans cette notice, de meme que la liste des references\n    bibliographiques.\n\n        Pour un meme sujet (mot-cle), il peut y avoir plusieurs references\n    bibliographiques. L'option REFE permet alors de choisir parmi celles-ci.\n    Le numero de chaque reference est donne entre deux crochets dans la liste\n    des references bibliographiques, classee par ordre alphabetique du nom du\n    1er auteur. Enfin, pour un sujet donnee, la reference utilisee par defaut\n    est precisee dans la description des donnees associees a chaque mot-cle.\n\n\n    Commentaire :\n    -------------\n\n    MOT1     : objet MOT, sujet pour lequel on souhaite obtenir des donnees.\n\n    ENT1     : objet ENTIER, numero de la reference souhaitee.\n  \n2. Mot-cle \"316L\" \n================= \n \n  \n2.1 Caracteristiques thermomecaniques (Depradeux, 2004) (defaut) \n---------------------------------------------------------------- \n    Donnees fournies dans TAB1 :\n    ----------------------------\n\n    TAB1 . 'RHO'  : objet EVOLUTION, masse volumique (kg/m^3) en fonction\n                    de la temperature (degC) (tableau 3.6, p. 93).\n                    La valeur a 1500 degC est tiree de la remarque en bas\n                    de p. 95 concernant la chaleur latente massique.\n\n\n    - Caracteristiques thermiques :\n\n    TAB1 . 'K'    : objet EVOLUTION, conductivite thermique (W/m/degC) en\n                    fonction de la temperature (degC) (tableau 3.6, p. 93).\n                    La valeur a 1500 degC est majoree pour tenir compte des\n                    effets hydrodynamiques dans le bain de metal fondu (voir\n                    remarque 1 ci-dessous).\n\n    TAB1 . 'C'    : objet EVOLUTION, capacite calorifique massique (J/kg/degC)\n                    en fonction de la temperature (degC) (tableau 3.6,p. 93).\n\n    TAB1 . 'TFUS' : objet FLOTTANT, temperature de fusion (degC).\n\n    TAB1 . 'QLAT' : objet FLOTTANT, chaleur latente massique de fusion (J/kg).\n                    Valeur tiree de la remarque en bas de p. 95 concernant\n                    la chaleur latente massique.\n\n\n    - Caracteristiques mecaniques :\n\n    TAB1 . 'NU'   : objet FLOTTANT, coefficient de Poisson (P. 59).\n\n    TAB1 . 'YOUN' : objet EVOLUTION, module de Young (Pa) en fonction de\n                    la temperature (degC).\n                    Colonne E(2), tableau A2.1, p. 210.\n\n    TAB1 . 'ALPH' : objet EVOLUTION, coefficient de dilatation thermique\n                    en fonction de la temperature (degC).\n                    Colonne alpha(2), tableau A6.2, p. 211.\n\n    TAB1 . 'SIGY' : objet EVOLUTION, limite d'elasticite conventionnelle (Pa)\n                    en fonction de la temperature (degC).\n                    Colonne Sigm(3), tableau A6.3, p. 212.\n\n    TAB1 . 'TRAC' : objet EVOLUTION, courbes de traction conventionnelle (Pa)\n                    en fonction de la temperature (degC).\n                    Tableau A6.4, p. 212-213.\n                    NB : limite elastique a 0,2% de def. plastique.\n\n    TAB1 . 'ECRO' : objet EVOLUTION, courbes d'ecrouissage (Sig. Vs Eps.Plas.)\n                    conventionnelle (Pa) en fonction de la temperature (degC).\n                    Ces courbes sont derivees des courbes de traction (TRAC) :\n                    on corrige la def. totale de la def. elas. (Sig/Youn) pour\n                    avoir la def. plas., puis on interpole la valeur de la\n                    contrainte pour une valeur nulle de la def. plastique.\n                    NB : la contrainte a Eps.Plas.=0 n'est pas necessairement\n                         egale a la limite d'elasticite (SIGY) fournie ci-dessus.\n\n\n    Remarque 1 : la valeur majoree de la conductivite thermique est tiree\n    ------------ de (Cambon, 2018) (voir table 1).\n                 \n\n  \n2.2 Caracteristiques thermomecaniques (Cambon, 2018) \n---------------------------------------------------- \n    Donnees fournies dans TAB1 :\n    ----------------------------\n\n    - Caracteristiques thermiques :\n\n    TAB1 . 'K'    : objet EVOLUTION, conductivite thermique (W/m/degC) en\n                    fonction de la temperature (degC) (Table 1).\n\n    TAB1 . 'ENTH' : objet EVOLUTION, enthalpie volumique (J/m^3) en fonction\n                    de la temperature (degC) (table 1).\n\n    TAB1 . 'TFUS' : objet FLOTTANT, temperature de fusion (degC).\n                    Valeur prise au milieu de l'intervalle de temperatures\n                    de changement de phase indiquee dans la reference\n                    (1400-1500 degC).\n\n    TAB1 . 'QLAT' : objet FLOTTANT, chaleur latente volumique de fusion (J/m^3).\n\n\n    - Caracteristiques mecaniques :\n\n    TAB1 . 'YOUN' : objet EVOLUTION, module de Young (Pa) en fonction de\n                    la temperature (degC) (table 2).\n\n    TAB1 . 'SIGY' : objet EVOLUTION, limite d'elasticite conventionnelle (Pa)\n                    en fonction de la temperature (degC) (table 2).\n\n    TAB1 . 'ALPH' : objet EVOLUTION, coefficient de dilatation thermique\n                    en fonction de la temperature (degC) (table 2).\n\n    TAB1 . 'H'    : objet EVOLUTION, module d'ecrouissage (Pa) en fonction de\n                    la temperature (degC) (table 2).\n\n    TAB1 . 'ECRO' : objet EVOLUTION, courbes d'ecrouissage (Sig. Vs Eps.Plas.)\n                    conventionnelle (Pa) en fonction de la temperature (degC).\n                    Ces courbes sont construites a partir des donnees fournies\n                    sur la limite elastique (SIGY) et sur celles du module\n                    d'ecrouissage (H).\n  \n3. Mot-cle \"9Cr ODS\" \n==================== \n \n  \n3.1 Caracteristiques thermomecaniques (Le Gloannec, 2016) \n--------------------------------------------------------- \n    Donnees fournies dans TAB1 :\n    ----------------------------\n\n    TAB1 . 'RHO'  : objet FLOTTANT, masse volumique (kg/m^3)\n\n\n    - Caracteristiques thermiques :\n\n    TAB1 . 'K'    : objet EVOLUTION, conductivite thermique (W/m^3/degC)\n                    en fonction de la temperature (degC)\n\n    TAB1 . 'C'    : objet EVOLUTION, capacite calorifique massique (J/kg/degC)\n                    en fonction de la temperature (degC)\n\n\n    - Caracteristiques electriques :\n\n    TAB1 . 'KE'   : objet EVOLUTION, conductivite electrique (S/m)\n                    en fonction de la temperature (degC)\n\n\n    - Caracteristiques mecaniques thermo-elastiques :\n\n    TAB1 . 'YOUN' : objet EVOLUTION, module d'Young (Pa) en fonction\n                    de la temperature (degC)\n\n    TAB1 . 'NU'   : objet FLOTTANT, coefficient de Poisson\n\n    TAB1 . 'ALPH' : objet EVOLUTION, dilatation thermique (/degC)\n                    en fonction de la temperature (degC)\n\n\n    - Parametres loi elasto-visco-plastique a ecrouissage isotrope :\n\n    TAB1 . 'KK'   : objet EVOLUTION, limite elastique (Pa)\n                    en fonction de la temperature (degC)\n\n    TAB1 . 'RMAX' : objet EVOLUTION, limite elastique a saturation\n                    en fonction de la temperature (degC) pour le modele\n                    de comportement NOUAILHAS_B (voir MATE)\n\n    TAB1 . 'RMIN' : objet EVOLUTION, ecrouissage isotrope a saturation\n                    en fonction de la temperature (degC),\n                    parametre Rinf de la loi de comportement elasto-visco-\n                    -plastique p. 92 de (Le Gloannec, 2016)\n\n    TAB1 . 'BR'   : objet EVOLUTION, coefficient d'ecrouissage isotrope (Pa)\n                    en fonction de la temperature (degC)\n\n    TAB1 . 'N'    : objet EVOLUTION, exposant de la loi de Norton pour\n                    la viscosite en fonction de la temperature (degC)\n\n    TAB1 . 'K0'   : objet EVOLUTION, contrainte d'ecoulement visqueux (MPa.s)\n                    en fonction de la temperature (degC)\n\n\n    Remarque : les noms des parametres de la loi elasto-visco-plastique\n    ---------- a ecrouissage isotrope conviennent au modele NOUAILHAS_B,\n               les autres parametres de ce modele pouvant etre pris nuls.\n               Toutefois, ils peuvent egalement etre utilises avec d'autres\n               modeles de comportement, quitte a modifier leurs noms,\n               notamment dans les etiquettes des ordonnees des courbes\n               d'evolution.\n  \n4. References bibliographiques \n============================== \n \n  \n4.1  \n---- ",
  },
  {
    name: "BIF",
    url: "BIF",
    documentation:
      "$$$$ BIF      NOTICE  CHAT      11/09/12    21:15:12     7124           \n                                             DATE     11/09/12\n\n    Operateur BIF                            Voir aussi : PPRE\n    -------------                                         FROT  \n\n    SYNTAXE (EQEX) : Cf operateur EQEX\n    _______________\n\n\n    'OPER' BIF  tabbif\n\n\n\n\n    OBJET :\n    ______\n\nL'operateur BIF calcule les coefficients de couplage pour les equations\nde quantite de mouvement et d'energie pour le gaz et le 'fluide\nparticules'. (formulation EF)\nLes equations de qdm sont divisees par la masse volumique et ont pour\ninconnues les vitesses.\nLes equations d'energie sont divisees par (Rho*Cp) et ont pour inconnues\nles temperatures.\n\n\n\n    COMMENTAIRES :\n    ______________\n\n\n  qdm:         BIF calcule Kp et Kg. Les termes Ip et Ig sont\n               assembles via FROT.\n\n               Ig   : gaz         terme source de qdm du a la trainee\n               Ip   : particules, terme source de qdm du a la trainee\n               [Ig] = [Ip] = m/s2 (force/unite de masse)\n               Ig   = Kg * (Upart - Ugaz)\n               Ip   = Kp * (Ugaz  - Upart)\n               Kg   = Fd * alpha\n               Kp   = Fd * rhog / rhop\n               Fd   = (9/2) * nuf * (1 + 0.241 * Re^0.687) /Dp^2\n\n  energie:     BIF calcule Hp et Hg. Les termes Qp et Qg sont\n               assembles via ECHI.\n\n               Qg   : gaz   terme source d'energie (ech. par convection)\n               Qp   : part. terme source d energie (ech. par convection)\n               [Qg] = [Qp] = K/s\n               Qg   = Hg * Volume * (Tpart - Tgaz)\n               Qp   = Hp * Volume * (Tgaz  - Tpart)\n               Hg   = H  * 6 * alpha / Dp / rhoCpg / Volume\n               Hp   = H  * 6 / Dp / rhoCpp / Volume\n               H    = Nu * lambdag / Dp\n\n\ntabbif                                                          TABLE\ntabbif.'RHOF'    masse volumique du fluide gaz (kg/m3)          FLOTTANT\ntabbif.'RHOP'    masse volumique des particules (kg/m3)         FLOTTANT\ntabbif.'DPART'   diametre des particules (m)                    FLOTTANT\ntabbif.'NUF'     viscosite cinematique du fluide (m2/s)         FLOTTANT\ntabbif.'ALPHA'   indice de la table INCO pour la                MOT\n                 fraction volumique des particules (CHPOINT SCAL SOMMET)\ntabbif.'UFLUID'  indice de la table INCO pour la                MOT\n                 vitesse du gaz                    (CHPOINT VECT SOMMET)\ntabbif.'UPART'   indice de la table INCO pour la                MOT\n                 vitesse des particules            (CHPOINT VECT SOMMET)\ntabbif.'KFLUID'  indice de la table INCO pour le                MOT\n                 coefficient Kg (gaz)              (CHPOINT VECT CENTRE)\ntabbif.'KPART'   indice de la table INCO pour le                MOT\n                 coefficient Kp (particules)       (CHPOINT VECT CENTRE)\n\nEt pour le cas THERMIQUE (optionnel):\n\ntabbif.'LAMBDAF' conductivite thermique du gaz (Jm2/sK)         FLOTTANT\ntabbif.'ROCPF'   masse vol. x capacite calor. du gaz (J/K)      FLOTTANT\ntabbif.'ROCPP'   masse vol. x capacite calor. des part. (J/K)   FLOTTANT\ntabbif.'TGASN'   indice de la table INCO pour la                MOT\n                 temperature du gaz aux noeuds     (CHPOINT SCAL SOMMET)\ntabbif.'TGASE'   indice de la table INCO pour la                MOT\n                 temperature du gaz aux elements   (CHPOINT SCAL CENTRE)\ntabbif.'TPARTN'  indice de la table INCO pour la                MOT\n                 temperature des part. aux noeuds  (CHPOINT SCAL SOMMET)\ntabbif.'TPARTE'  indice de la table INCO pour la                MOT\n                 temperature des part aux elements (CHPOINT SCAL CENTRE)\ntabbif.'HFLUID'  indice de la table INCO pour le                MOT\n                 coefficient d'echange Hg (gaz)    (CHPOINT SCAL CENTRE)\ntabbif.'HPART'   indice de la table INCO pour le                MOT\n                 coefficient d'echange Hp (part.)  (CHPOINT SCAL CENTRE)\n\n\n\nREMARQUE :\n__________\n\n\nBIF controle l'existence de tabbif.'HPART':\n    - si tabbif.'HPART' existe         ====> calcule  Kp, Kg, Hp, Hg\n    - si tabbif.'HPART' n'existe pas   ====> calcule  Kp, Kg",
  },
  {
    name: "BILI_EFZ",
    url: "BILI_EFZ",
    documentation:
      "$$$$ BILI_EFZ NOTICE  CHAT      11/09/12    21:15:12     7124           \n                                             DATE     11/09/12\n\n    Procedure BILI_EFZ                       Voir aussi : MODE \n    ------------------                                    MATE  \n    EVOL1=BILI_EFZ LREE1 LENT1 TABL1;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de tester le modele de plasticite de \npoutre 'BILIN_EFFZ', plasticite en effort tranchant.\n \n    A partir d'un programme de chargement en courbure dont les\nextremites des branches sont definies par LREE1 (objet de type \nLISTREEL) et dont le nombre de point par branche est specifie par\nLENT1 (objet de type LISTENTI), on produit la courbe EVOL1 (objet\nde type evolution) de reponse du modele.\n\n    La table TABL1 contient les parametres sigificatifs du modele:\n\n    indice   |    type objet   |     commentaires\n             |      point      |\n    ---------|-----------------|-------------------------\n     GELA    |     FLOTTANT    |     Module de cisaillement elastique\n     GAYI    |     FLOTTANT    |     Module de cisaillement plastique\n     YEFF    |     FLOTTANT    |     Effort tranchant  de plasticite\n     SECZ    |     FLOTTANT    |     Section reduite\n\n \n ",
  },
  {
    name: "BILI_MOY",
    url: "BILI_MOY",
    documentation:
      "$$$$ BILI_MOY NOTICE  CHAT      11/09/12    21:15:12     7124           \n                                             DATE     11/09/12\n\n    Procedure BILI_MOY                       Voir aussi : MODE\n    ------------------                                    MATE  \n    EVOL1=BILI_MOY LREE1 LENT1 TABL1;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de tester le modele de plasticite de \npoutre 'BILINEAIRE', plasticite de flexion.\n \n    A partir d'un programme de chargement en courbure dont les\nextremites des branches sont definies par LREE1 (objet de type \nLISTREEL) et dont le nombre de point par branche est specifie par\nLENT1 (objet de type LISTENTI), on produit la courbe EVOL1 (objet\nde type evolution) de reponse du modele.\n\n    La table TABL1 contient les parametres sigificatifs du modele:\n\n    indice   |    type objet   |     commentaires\n             |      point      |\n    ---------|-----------------|-------------------------\n     EELA    |     FLOTTANT    |     Module elastique\n     EAYI    |     FLOTTANT    |     Module plastique\n     YMOM    |     FLOTTANT    |     Moment de plasticite\n     INRY    |     FLOTTANT    |     Moment d'inertie\n\n \n ",
  },
  {
    name: "BIOT",
    url: "BIOT",
    documentation:
      "$$$$ BIOT     NOTICE  CHAT      11/09/12    21:15:12     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur BIOT                                  Voir aussi :\n    --------------  \n    Cas 1 :\n    -----\n\n    CHPO1 = BIOT |('POTE')|\n                 |('INDU')|  GEO1  \n\n                 |  'CERC'  CENTR1  POIN1 POIN2 RI RE H  |\n                 |  'ARC'   CENTR1  POIN1 POIN2 RI RE H  |  \n                 |  'BARR'  POIN1   POIN2 POIN3 DY DZ    |\n                 |  'FIL'   POIN1   POIN2                |\n\n                 ('TRAP' P1 P2) DENS  MU0     ;\n    Cas 2 :\n    -----\n                 \n    CHPO3 = BIOT CHPO2 GEO1 ;\n                 \n\n\n\n    Objet :\n    -------\n    \n    Cas 1 :\n    -----\n    L'operateur BIOT construit le champ  d'induction ou le potentiel\n    vecteur de Biot et Savart cree sur l'objet GEO1 par une portion\n    d'inducteur filaire, surfacique ou massif de section droite\n    rectangulaire (defaut) ou trapezoidale. Il ne fonctionne qu'en 3D.\n\n    Cas 2 :\n    -----\n    L'operateur BIOT construit le champ d'induction et le flux cree \n    sur l'objet GEO1 par une ( ou plusieurs ) spire(s) d'axe z par \n    une methode d'integrale elliptique. Le flux du champ d'induction \n    en un point de GEO1 est calcule a travers le cercle d'axe z \n    engendre par ce point. Il ne fonctionne qu'en 3D.\n      \n    Commentaire :\n    _____________\n\n    'POTE' : on calcule le potentiel vecteur.\n    'INDU' : on calcule l'induction (defaut).\n     GEO1  : objet geometrique support du champ a calculer (type\n             MAILLAGE)\n\n    La geometrie de l'inducteur varie selon les mots cles choisis :\n\n    'CERC' : mot-cle suivi de :\n    CENTR1 : centre du cercle (type POINT)\n    POIN1  | deux points du plan de la spire (type POINT)\n    POIN2  | (les trois points doivent definir un plan)\n    RI     : rayon interieur de l'inducteur (type FLOTTANT)\n    RE     : rayon exterieur de l'inducteur (type FLOTTANT)\n    H      : hauteur totale de l'inducteur dans le plan\n             median  (type FLOTTANT)\n        Remarque : des valeurs adaptees de RI, RE et H permettent\n                   de modeliser une spire circulaire ou des nappes\n                   de courant surfaciques circulaires.\n                        RI = RE et H = 0 : spire circulaire\n                        RI = RE et H > 0 : nappe cylindrique\n                        H = 0            : couronne\n\n\n    'ARC'  : mot-cle suivi de :\n    CENTR1 : centre du cercle (type POINT)\n    POIN1  : premiere extremite de l'arc (type POINT)\n    POIN2  : deuxieme extremite de l'arc (type POINT)\n    RI     : rayon interieur de l'inducteur (type FLOTTANT)\n    RE     : rayon exterieur de l'inducteur (type FLOTTANT)\n    H      : hauteur totale de l'inducteur dans le plan\n             median  (type FLOTTANT)\n        Remarque : des valeurs adaptees de RI, RE et H permettent\n                   de modeliser un arc circulaire ou des nappes\n                   de courant surfaciques circulaires. \n                        RI = RE et H = 0 : portion de spire circulaire\n                        RI = RE et H > 0 : portion de nappe cylindrique\n                        H = 0            : portion de couronne\n\n\n    'BARR' : mot-cle suivi de :\n    POIN1  : centre de gravite de la section initiale (type POINT)\n    POIN2  : centre de gravite de la section finale (type POINT)\n     Le courant est oriente suivant l'axe local Ox (POIN1 POIN2)\n    POIN3  : point definissant avec POIN1 l'axe local oy de la barre\n             (type POINT)\n    DY     : largeur de la barre dans le plan POIN1 POIN2 POIN3 (plan xOy)\n             (type FLOTTANT)\n    DZ     : hauteur de la barre suivant le plan median orthogonal\n             au prececent (plan xOz) (type FLOTTANT).\n        Remarque : des valeurs adaptees de DY et DZ permettent\n                   de modeliser des nappes rectangulaires de courant.\n                        DZ = 0 : nappe rectangulaire dans le plan xOy\n                        DY = 0 : nappe rectangulaire dans le plan xOz\n\n\n    'FIL'  : mot-cle suivi de :\n    POIN1  : premiere extremite du fil (type POINT)\n    POIN2  : deuxieme extremite du fil (type POINT)\n\n\n    'TRAP' : mot-cle permettant de definir une section trapezoidale :\n             Dans le cas circulaire, on suppose que la section\n             est dans le plan (r,z), les faces paralleles etant dans la\n             direction z de l'axe de rotation.\n             Dans le cas rectiligne, on suppose que la section\n             est dans le plan (x,z), les faces paralleles etant dans la\n             direction z. \n             Les pentes sont alors definies dans le repere local de la\n             section :\n                  P1     : pente inferieure (type FLOTTANT)\n                  P2     : pente superieure (type FLOTTANT)\n        Remarque : des valeurs adaptees de P1 et P2 permettent\n                   de modeliser des inducteurs a section triangulaire\n                   ou des nappes de courant surfacique tronconiques. \n                        P1 = P2 et H = 0        : tronc de cone\n                                                (cas circulaire)\n                        H = |P2 - P1|(RE-RI)/2  : section triangulaire\n\n                \n    DENS   : densite de courant (A/m2 dans le cas massif, ou A/m\n             dans le cas surfacique ou A dans le cas filaire) dans la section\n             droite de l'inducteur (type FLOTTANT), comptee positivement\n             comme suit :\n\n             - cas 'CERC' : selon le sens trigonometrique lie a CENTR1,\n                            POIN1, POIN2\n             - cas 'ARC'  : de POIN1 vers POIN2\n             - cas 'BARR' : de POIN1 vers POIN2\n             - cas 'FIL'  : de POIN1 vers POIN2\n\n    MU0    : permeabilite du vide  accordee a l'unite de longueur\n             utilisee (type FLOTTANT )\n\n    CHPO1  : champ resultant (type CHPOINT) de composantes :\n                BX BY BZ pour l'induction\n                AX AY AZ pour le potentiel vecteur. \n    \n    CHPO2  : objet (type CHPOINT ) contenant la description des differents \n             inducteurs ( spire d'axe z ) . Chacun d'eux est decrit par \n             un point du support et par deux composantes :\n              - 'E' pour la section de la surface plane.\n                    ( par defaut E = 1.e-5 m\u00b2)\n              - 'I' pour l'intensite du courant le traversant ( en A)\n                    ( par defaut I= 1 A ) .\n    \n    CHPO3  : champ resultant (type CHPOINT) de composantes :\n                BX BY BZ pour l'induction\n                FLUX pour le flux .",
  },
  {
    name: "BIOVOL",
    url: "BIOVOL",
    documentation:
      "$$$$ BIOVOL   NOTICE  CHAT      11/09/12    21:15:13     7124           \n                                             DATE     11/09/12\n\n  Procedure BIOVOL                           Voir aussi :\n        -----------------  \n             CHP1 = BIOVOL GEO1 GEO2 CHP2 FLOT1 \n\n\n\n        Objet :\n        -------\n\n        Calcul du champ magnetique par BIOT ET SAVART  par\n        integration  sur des elements de formes quelconques \n\n        Commentaire :\n        -------------\n \n           GEO1   maillage de  l'inducteur \n           GEO2   maillage sur lequel on calcule le champ \n           CHP2   chpoint des densites de courant sur GEO1\n                 (JX JY JZ) peut etre obtenu par appel a COUR3D\n\n        en sortie :\n\n           CHP1   chpoint d'induction  sur GEO2  ( BX BY BZ) ",
  },
  {
    name: "BLOQ",
    url: "BLOQ",
    documentation:
      "$$$$ BLOQ     NOTICE  BP208322  20/11/12    21:15:01     10775          \n                                             DATE     20/11/12\n\n    Operateur BLOQUE                         Voir aussi : DEPI RELA\n    ----------------                                      REAC    SYMT  \n                                                          RESO    ANTI  \n                                                          OPTI    MODE  \n                                                          \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Blocage construit a partir de MOT ou de LISTMOTS\n    1.1 Syntaxe\n    1.2 Objet\n    1.3 Commentaires\n    1.4 Exemple\n    1.5 Remarques\n2. Blocage construit pour calculer une base de solutions statiques (sous-structuration)\n    2.1 Syntaxe\n    2.2 Objet\n    2.3 Entree\n    2.4 Sortie\n    2.5 Remarque\n\n  \n1. Blocage construit a partir de MOT ou de LISTMOTS1 \n=================================================== \n  \n1.1 Syntaxe \n----------- \nRIG1 = BLOQ |('MAXI')| |      MOT1 ...                          | GEO1;\n            |('MINI')| |      LISTMOT1                          |\n                       |('DEPL')('ROTA') | ('DIRECTION' |VEC1 |)|\n                       |                                |CHPO1| |\n                       |     'RADIAL' POIN1 (POIN2)             |\n                       |     'ORTHO'  POIN1 (POIN2)             |\n\n  \n1.2 Objet \n--------- \n    L'operateur BLOQUE construit la rigidite RIG1, associee a des\n    conditions de valeurs imposees sur les inconnues d'un probleme\n    discretise par la methode des mulitplicateur de Lagrange.\n    \n\n  \n1.3 Commentaires \n---------------- \n    Les conditions peuvent etre des conditions d'egalite ou des \n    conditions unilaterales, auquel cas il faut specifier le \n    mot-cle 'MINI' ou 'MAXI', selon que l'on desire limiter la \n    valeur minimale ou la valeur maximale des inconnues concernees \n    (cf. exemple 1). \n\n    MOT1 ... : un (ou plusieurs) nom(s) representant les degres de\n               liberte a bloquer. Les noms des degres de liberte associe \n               a un modele specifique sont affiches lorsque celui-ci est\n               liste (cf. remarque 3).\n               \n    LISTMOT1 : idem MOT1 mais sous la forme d'un LISTMOTS.\n\n    'DEPL'   : mot-cle pour bloquer tous les d.d.l. en deplacement\n               (voir remarque pour le point support en MODE PLAN)\n\n    'ROTA'   : mot-cle pour bloquer tous les d.d.l. en rotation\n               (voir remarque pour le point support en MODE PLAN)\n               \n    'DIRECTION': mot-cle pour bloquer le deplacement (par defaut)\n                 ou la rotation (mot-cle 'ROTA') selon la direction\n                 definie par le vecteur VEC1 (type POINT) ou par le\n                 champ de vecteur CHPO1 (type CHPOINT).\n\n    'RADIAL'   : mot-cle pour bloquer le deplacement radial\n                 par rapport | au point POIN1 en 2D .\n                             | a l'axe POIN1 POIN2 en 3D .\n\n    'ORTHO'    : mot-cle pour bloquer le deplacement ortho-radial\n                 par rapport | au point POIN1 en 2D\n                             | a l'axe POIN1 POIN2 en 3D\n\n    GEO1      : objet ou seront imposees les conditions aux\n                limites (type MAILLAGE ou POINT)\n\n    RIG1      : matrice resultat (type RIGIDITE, sous-type RIGIDITE)\n\n    \n  \n1.4 Exemple \n----------- \n 1. Si on souhaite imposer une condition UX <EG 0.3, on donnera :\n    \n         RIG1 = 'BLOQ' 'MAXI' 'UX' mesh1;\n         FO1  = 'DEPI' RIG1 0.3 ;\n\n  \n1.5 Remarques \n------------- \n 1. Assemblage\n    \n    Pour la resolution, cette matrice de blocage doit etre a adjointe \n    a la \"rigidite\" de la structure.\n    \n 2. Deplacement impose\n    \n    Lors la resolution du probleme, les valeurs non nulles a imposer \n    doivent etre fournies comme second membre dans un objet de type \n    CHPOINT construit a l'aide de l'operateur DEPIMP.\n         \n 3. Nom des degres de libertes pour un modele de :\n    \n     - MECANIQUE :       \n       si calcul en MODE PLAN CONT :  UX   UY\n       si calcul en MODE PLAN DEFO :  UX   UY\n       si calcul en MODE PLAN GENE :  UX   UY   RZ(*) UZ   RX   RY\n       si calcul en MODE AXIS      :  UR   UZ   RT\n       si calcul en MODE FOUR      :  UR   UZ   UT    RT\n       si calcul en MODE TRID      :  UX   UY   UZ    RX   RY   RZ\n       si calcul en MODE UNID PLAN :  UX   UY   UZ(+)\n       si calcul en MODE UNID AXIS :  UR   UZ(+)\n       si calcul en MODE UNID SPHE :  UR \n       \n     - LIQUIDE   :  P    PI  \n     \n     - THERMIQUE :  T\n     \n     - DARCY     :  TH\n\n    (*) : pour les elements COQ2 seulement. Par ailleurs, UZ, RX, RY ne\n          concernent que le point support des inconnues supplementaires.\n          \n    (+) : Les inconnues UY et UZ ne concernent que le point support des\n          deformation(s) generalisee(s) des modes de calcul 1D.\n\n 4. Deformations planes generalisees\n    \n    Les ddls de liberte du point support des inconnues supplementaires  \n    doivent etre bloques explicitement.\n    Par exemple :  RIG1 = 'BLOQUE' 'RX  ' pt1 ;\n    Les mot-cles 'DEPL' et 'ROTA' ne sont pas a utiliser.\n    \n    \n  \n2. Blocage construit pour calculer une base de solutions statiques (sous-structuration) \n======================================================================================= \n \n  \n2.1 Syntaxe \n----------- \n       RIG1 = BLOQ TAB1 ;\n       \n  \n2.2 Objet \n--------- \n    Construit les rigidites de blocage selon les informations \n    contenues dans TAB1 et les concatene dans RIG1.\n    \n  \n2.3 Entree \n---------- \n    TAB1 : objet TABLE, sous-type 'LIAISONS_STATIQUES', dont les \n           indices sont des entiers et les sous-objets des objets TABLE,\n           contenant les indices definissant le ddl a bloquer :\n    TAB1 . 'POINT-LIAISON' : objet POINT (exemple P1)\n    TAB1 . 'DDL_LIAISON'   : objet MOT   (exemple 'UX')\n     \n  \n2.4 Sortie \n---------- \n    TAB1 . 'BLOCAGE' : objet RIGIDITE (exemple (BLOQ P1 UX))\n    RIG2             : objet RIGIDITE, assemblage de toutes les \n                       rigidites elementaires creees.\n    \n  \n2.5 Remarque \n------------ \n 1. Deplacement impose\n    L'appel a DEPI avec cette meme table en argument permettra de \n    construire ulterieurement :\n    TAB1 . 'FORCE' : objet CHPOINT (exemple (DEPI (BLOQ P1 UX) 0.))",
  },
  {
    name: "BMTD",
    url: "BMTD",
    documentation:
      "$$$$ BMTD     NOTICE  CHAT      11/09/12    21:15:13     7124           \n                                             DATE     11/09/12\n\n    Operateur BMTD                           Voir aussi : MHYB DMMU\n    --------------                                        DMTD         \n   CHP2 = 'BMTD' MODL1 RIG1  CHP1 ;\n\n\n    Objet:\n    ------\n   Cet operateur est utilise dans le cadre d'une formulation\n   elements finis mixtes hybrides.\n   Soit D la matrice divergence, pour un element.\n   D est une matrice ligne dont tous les termes sont 1.\n   Soit M une matrice elementaire de diffusion.\n   Soit B la matrice de correspondance entre les numeros de face\n    locaux et globaux.\n   Cet operateur va calculer pour chaque element le produit:\n                        -1 t\n                     B M    D  CHP1\n\n   Commentaires:\n   ------------\n\n   MODL1 : Objet modele (type MMODEL) decrivant la formulation\n           utilisee. On attend une formulation DARCY (cf. MODE).\n\n   RIG1  : Objet rigidite de sous type DARCY contenant les\n           matrices  elementaires inverses pour les elements\n           hybrides . Cet objet rigidite est le resultat de MHYB .\n\n   CHP1  : Objet de type CHPOINT, dont le support geometrique est le\n           maillage CENTRE\n\n   CHP2  : Objet de type CHPOINT dont le support geometrique est le\n           l'objet geometrie de RIG1,( MAILLAGE FACE ) .\n           Les noms des composantes sont ceux  de CHP1",
  },
  {
    name: "BOA",
    url: "BOA",
    documentation:
      "$$$$ BOA      NOTICE  CHAT      11/09/12    21:15:13     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure BOA                                   Voir aussi :\n    -------------  \n    TAB1 = BOA  (TAB2) ;\n    \n\n\n    Objet :\n    _______\n\n    La procedure BOA permet de mailler des lignes de tuyauterie de \nfa\u00e7on interactive. Les donnees fournies sont proches de celles que \nl'on rencontre couramment sur un plan.\n\n    Commentaire :\n    _____________\n\n    TAB2  : operande facultatif (type TABLE)\n            TAB2 est issu d'une execution anterieure de BOA.\n            TAB2 peut etre ainsi complete ou rectifie.\n\n    TAB1  : objet resultat (type TABLE)\n\n    Remarque :\n    __________\n\n    TAB1 se decompose comme suit :\n\n         TAB1 'MAILLAGE' : maillage total\n\n         TAB1 MOT1       : table decrivant la ligne de tuyauterie de\n                           nom MOT1\n\n           TAB1 MOT1 'MAILLAGE' : maillage de la ligne MOT1\n           TAB1 MOT1 'TRONCON'  : table des maillages des tron\u00e7ons d'une\n                                  ligne\n           TAB1 MOT1 'ELEMENT'  : type d'element geometrique pour la\n                                  ligne MOT1\n           TAB1 MOT1 'PENTE'    : pente par defaut de la ligne MOT1\n           TAB1 MOT1 'ENTREE'   : unite de longueur en entree\n           TAB1 MOT1 'SORTIE'   : unite de longueur en sortie\n           TAB1 MOT1 'COULEUR'  : couleur pour la ligne MOT1\n\n    Utilisation :\n    _____________\n\n    - Il suffit de repondre aux questions pour decrire les tuyauteries,\n      qui sont definies sous forme de tron\u00e7ons jointifs.\n\n    - Il est possible de definir des tron\u00e7ons de droite, des arcs, des\n      coudes et doubles coudes, avec denivele eventuel.\n\n    - Quand on parle de \"nom\" de ligne ou de tron\u00e7on, il s'agit en fait\n      du nom de l'indice qui repere l'objet dans la table appropriee.\n      C'est un objet de type MOT qu'il est conseille de fournir entre\n      apostrophes.\n\n    - En cas d'erreur de donnees, la procedure BOA peut s'arreter\n      prematurement et produire un objet TAB1 non conforme. Dans ce cas,\n      il suffit bien souvent d'executer a nouveau BOA sans rien modifier\n      pour qu'une mise en ordre des resultats acquis soit effectuee.",
  },
  {
    name: "BOITE",
    url: "BOITE",
    documentation:
      "$$$$ BOITE    NOTICE  GOUNAND   17/01/11    21:15:03     9272           \n                                             DATE     17/01/11\n\n    Procedure BOITE                         Voir aussi : TRAC\n    ---------------                                      COOR  \n    MAIL2 = BOITE MAIL1 ;\n\n    Objet :\n    _______\n\n    Construit le maillage d'une boite englobante du maillage donne en \n    entree. \n\n    Commentaire :\n    _____________\n\n      MAIL1 : maillage d'entree (type MAILLAGE)\n\n      MAIL2 : boite englobante (type MAILLAGE)\n\n\n    Remarque :\n    __________\n\n    MAIL2 est constitue d'un element SEG2, QUA4 ou CUB8 suivant la \n    dimension courante 1, 2 ou 3.\n    Cette procedure est utile, conjointement \u00e0 l'option 'BOIT' de \n    l'operateur TRAC.\n    ",
  },
  {
    name: "BORN",
    url: "BORN",
    documentation:
      "$$$$ BORN     NOTICE  CB215821  21/03/03    21:15:01     10910          \n                                             DATE     21/03/03\n\n\n    Operateur BORNER                         Voir aussi : MASQ\n    ----------------  \n\n    RES1  = BORNER  OBJ1 (OBJ2)  | 'MAXIMUM' OBJ4      |  ...  ;\n                                 | 'MINIMUM' OBJ3      |\n                                 | 'COMPRIS' OBJ3 OBJ4 |\n\n    Objet :\n    _______\n\n    L'operateur BORNER permet de seuiller/borner les valeurs de l'objet\n OBJ1 (maximum/minimum ou inclusion dans un intervalle).\n Le resultat est mis dans l'objet RES1 de meme type que OBJ1.\n\n    Chaque valeur de OBJ1 est comparee a la (aux) borne(s) fournie(s).\nCette valeur est conservee si elle est inferieure/superieure a la borne\n(operation 'MAXIMUM'/'MINIMUM') ou egale a la borne sinon.\nL'operation 'COMPRIS' correspond a une operation 'MINIMUM' suivie d'une\noperation 'MAXIMUM'.\n\n\n    Commentaire :\n    _____________\n\n    OBJ1    objet de type LISTENTI, LISTREEL, EVOLUTION, CHPOINT, MCHAML\n    RES1    objet de meme type que OBJ1\n\n    OBJ3    borne(s) avec la(les)quelle(s) sont comparees les valeurs\n    OBJ4    de OBJ1\n\n    OBJ2   Si OBJ1 est un objet EVOLUTION OBJ2 est l'entier correspondant\n             au numero de la courbe a borner.\n           Si OBJ1 est un objet CHPOINT/MCHAML OBJ2 est le MOT correspondant\n             au nom de la composante a borner. Si OBJ1 ne contient qu'une\n             seule composante, le nom de la composante est facultatif.\n           Cf. tableau ci-dessous :\n\n\n    -------------------------------------------------------------\n    |    OBJ1 / RES1    |       OBJ2        |    OBJ3 / OBJ4    |\n    -------------------------------------------------------------\n    |     LISTENTI      |                   |       ENTIER      |\n    |     LISTREEL      |                   |      FLOTTANT     |\n    |     EVOLUTION     |      ENTIER       |      FLOTTANT     |\n    |     CHPOINT       |       MOT         |      FLOTTANT     |\n    |     MCHAML        |       MOT         |      FLOTTANT     |\n    -------------------------------------------------------------\n\n\n    Remarques :\n    -----------\n\n    Dans le cas des objets de type EVOLUTION, il est possible de borner\n plusieurs courbes de OBJ1 et seules les courbes traitees sont mises\n dans l'objet resultat RES1.\n\n    Par exemple :\n      RES1 = BORNER Evol1 N1 'MAXIMUM' FLO1  N2 'COMPRIS' FLO2 FLO3 ;\n\n    Dans le cas des objets de type MCHAML/CHPOINT, il est possible de\n borner plusieurs composantes de OBJ1 et seules les composantes traitees\n sont mises dans l'objet resultat RES1. Les composantes peuvent etre de\n type FLOTTANT, LISTENTI, LISTREEL, EVOLUTION quand OBJ1 est un MCHAML.\n\n    Par exemple :\n      RES1 = BORNER Chpo1 'COM1' 'MAXIMUM' FLO1 'COM2' 'MINIMUM' FLO2 ;",
  },
  {
    name: "BROCHE",
    url: "BROCHE",
    documentation:
      "$$$$ BROCHE   NOTICE  MAGN      12/03/21    21:15:00     7325           \n                                             DATE     12/03/21\n                                                                                \n  Procedure BROCHE                         Voir aussi :\n    ----------------  \n      BROCHE  RXT TBT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure BROCHE est une procedure interne appelee par EXECRXT\n\n    Commentaires\n    ____________\n\n    RXT   TABLE  :\n    TBT   TABLE  :",
  },
  {
    name: "BRUCHE",
    url: "BRUCHE",
    documentation:
      "$$$$ BRUCHE   NOTICE  CHAT      11/09/12    21:15:14     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure BRUCHE                         Voir aussi :\n    ----------------  \n      BRUCHE  RXT TBT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure BRUCHE est une procedure interne appelee par EXECRXT\n\n    Commentaires\n    ____________\n\n    RXT   TABLE  :\n    TBT   TABLE  :",
  },
  {
    name: "BRUI",
    url: "BRUI",
    documentation:
      "$$$$ BRUI     NOTICE  MB234859  17/10/02    21:15:03     9577           \n                                             DATE     17/10/02\n                                             \n    Operateur BRUI                                 Voir aussi : DCOV\n    --------------                                              ALEA  \n                                           | ENTI2         |\n    RESU1 = 'BRUI' 'BLAN' MOT1 FLOT1 FLOT2 | LREEL1 (COUL1)| (ENTI3) ;\n                                           | GEO1          |\n    ou\n\n    RESU1 = 'BRUI' 'BLAN' 'POIS' ENTI1 ENTI2 (ENTI3) ;\n\n\n\n    Objet :\n    _______\n\n\n    1e SYNTAXE : selon les donnees, l'operateur BRUI construit un\n                 LISTREEL, un CHAMPOIN ou une EVOLUTIO dont les valeurs\n                 sont aleatoires.\n\n    Commentaire :\n    _____________\n\n    'BLAN' : mot-cle indiquant que les valeurs sont non correlees.\n\n    MOT1   : type de repartition des valeurs, a choisir parmi les mots :\n                  'GAUS'  gaussienne\n                  'UNIF'  uniforme\n                  'EXPO'  exponentielle\n\n    FLOT1  : moyenne des valeurs generees (type FLOTTANT).\n             Dans le cas EXPO, la moyenne ne sert a rien.\n\n    FLOT2  : ecart-type (options 'GAUS' et 'EXPO') ou\n             amplitude  (option  'UNIF') (type FLOTTANT).\n\n    ENTI2  : longueur du LISTREEL RESU1,\n    ou\n    LREEL1 : variable temps de l'EVOLUTION RESU1 (type LISTREEL),\n    ou\n    GEO1   : support geometrique du CHAMPOIN RESU1 (type MAILLAGE).\n\n    COUL1  : Si LRREL1 est donne, couleur de la courbe representee par\n             l'EVOLUTION (type MOT, 'BLAN' par defaut).\n\n    ENTI3  : indice d'initialisation du generateur de nombre aleatoires\n             (type ENTIER).\n\n    RESU1  : resultat de type :\n              - LISTREEL si ENTI1 est donne.\n              - EVOLUTION si LRREL1 est donne.\n              - CHPO1 si GEO1 est donne.\n\n\n\n    2e SYNTAXE : l'operateur BRUI construit un LISTENTI dont les valeurs\n                 aleatoires suivent une distribution de Poisson.\n\n    Commentaire :\n    _____________\n\n    'BLAN' : mot-cle indiquant que les valeurs sont non correlees.\n\n    'POIS' : mot-cle indiquant que les valeurs suivent une distribution\n             de Poisson.\n\n    ENTI1  : valeur moyenne de la distribution.\n\n    ENTI2  : longueur du LISTENTI RESU1.\n\n    ENTI3  : indice d'initialisation du generateur de nombre aleatoires\n             (type ENTIER).\n\n    RESU1  : resultat, LISTENTI de valeurs aleatoires suivant une\n             distribution de Poisson.\n\n\n    Remarques :\n    ___________\n\n    1) L'indice ENTI3 permet de sauter ENTI3 termes du generateur\nde nombres aleatoires. Cette option est a utiliser dans le cas\nd'une reprise de calcul car le generateur est reinitialise\na chaque lancement de castem.\n\n    2) Les appels consecutifs a l'operateurs BRUI au sein d'une meme\nexecution (a l'interieur d'une boucle par exemple) generent des series\nde valeurs distinctes. Mieux vaut laisser le generateur se debrouiller\nseul et ne pas preciser ENTI3 au moment de l'appel.",
  },
  {
    name: "BSIG",
    url: "BSIG",
    documentation:
      "$$$$ BSIG     NOTICE  PV        18/03/28    21:15:00     9788           \n                                             DATE     18/03/28\n                                             \n  Operateur BSIGMA                                  Voir aussi :\n    ----------------  \n      FORC1 =  BSIGMA ('NOER') MODL1 SIG1 ( CAR1 ) (HOO1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur BSIGMA calcul le champ de forces nodales resultant de\n    l'integration d'un champ de contraintes.\n\n\n      Commentaire :\n      _____________\n\n\n     'NOER' : mot-cle indiquant de ne pas faire d'erreur en cas de\n              changement de signe du jacobien. Dans ce cas, en \n              sortie FORC1 contient un entier non nul.\n\n      MODL1 : Objet modele ( type MMODEL ).\n\n      SIG1  : champ de CONTRAINTES (type MCHAML, sous-type\n              CONTRAINTES)\n\n      CAR1   : champ de caracteristiques geometriques (type MCHAML,\n               sous-type CARACTERISTIQUES) necessaire pour certains\n               elements (poutres ,coques...).\n               Il contient egalement les caracteristiques materielles\n               pour l'element coque DST dans l'absence du champ de\n               matrices de Hooke.\n               Il contient les coefficients de phases d'un modele\n               MELANGE PARALLELE quand le champ de contraintes\n               contient les pseudo-contraintes associees a chacune\n               des phases et non les contraintes globales.\n                 \n\n      HOO1   : champ de matrices de Hooke necessaire pour l'element\n               coque DST si CAR1 ne contient pas les caracteristiques\n               materielles (type MCHAML, sous-type MATRICE DE HOOKE)\n\n      FORC1 : champ de forces nodales (type CHPOINT)",
  },
  {
    name: "CABL",
    url: "CABL",
    documentation:
      "$$$$ CABL     NOTICE  CHAT      11/09/12    21:15:15     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CABLE                                Voir aussi :\n    ---------------  \n    RIG1 = CABLE  GEO1  FLOT1  FLOT2;\n\n\n    Objet :\n    _______\n\n    L'operateur CABLE permet de calculer la rigidite d'un cable\n\n    Commentaire :\n    _____________\n\n    GEO1   :  support geometrique du cable (type MAILLAGE)\n              ce support geometrique doit etre un element de type SEG2\n\n    FLOT1  :  force correspondant a un allongement EPS1 exprime en %\n              (type FLOTTANT)\n\n    FLOT2  :  allongement (en %) du cable correspondant a la\n              force FORC1 (type FLOTTANT)\n\n    RIG1   :  rigidite du cable (type RIGIDITE)",
  },
  {
    name: "CALACTIV",
    url: "CALACTIV",
    documentation:
      "$$$$ CALACTIV NOTICE  CHAT      11/09/12    21:15:15     7124           \n                                             DATE     11/09/12\n                                                \n    Procedure CALACTIV                       Voir aussi : CHI1 CHI2\n    ------------------                                    COAC      \n\n  CHP1 = CALACTIV TAB1 TAB2 LENT1 ;\n\n\n        Objet\n        -----\n        Cette procedure calcule l'activite d'especes, dans une solution\n        chimique, apres utilisation des operateurs CHI1 et CHI2.\n\n        Commentaires\n        -------------\n        TAB1 : table de soustype CHIMI1. Resultat de l'operateur CHI1.\n        TAB2 : table de soustype CHIMI2. Resultat de l'operateur CHI2.\n        LENT1: LISTENTI liste des identificateurs des especes pour\n              lesquelles on veut faire le calcul.\n        CHP1 : objet de type CHPOIN ayant une composante pour chaque\n              espece de LENT1. Il contient l'activite de chaque espece\n              en chaque point du maillage considere.\n\n\n \n ",
  },
  {
    name: "CALCDISP",
    url: "CALCDISP",
    documentation:
      "$$$$ CALCDISP NOTICE  CHAT      11/09/12    21:15:15     7124           \n                                             DATE     11/09/12\n\n  Operateur CALCDISP                       Voir aussi :\n      ------------------  \n      dif_disp =  CALCDISP QELEM DISPL DISPT     ;\n\n\n\n\n   -----------------------------------------------------------------\n   ---------PROCEDURE DE CALCUL DE LA DISPERSIVITE------------------\n   -----------------------------------------------------------------\n\n   APPELE PAR TRANSGEN\n\n  |-----------------------------------------------------------------|\n  | Generalites : CALCDISP calcule le tenseur de dispersion         |\n  |               du probleme de transport convection-diffusion.    |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | DISPL   : coefficient longitudinal de dispersivite  CHPO        |\n  |                                                                 |\n  | DISPT   : coefficient transverse de dispersivite CHPO           |\n  |                                                                 |\n  | QELEM    : vitesse au centre de chaque element CHPO - VX VY VZ  |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | dif_disp : C'est le tenseur de dispersion                       |\n  |            composantes K11 K21 K22 K31 K32 K33                  |\n  |                                                                 |\n  |                                                                 |\n  |******************************************************************",
  },
  {
    name: "CALCP",
    url: "CALCP",
    documentation:
      "$$$$ CALCP    NOTICE  CHAT      11/09/12    21:15:16     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure CALCP                          Voir aussi : ENCEINTE\n    ---------------  \n\n    Cph2 Cphe Cpo2 Cpn2 Cpco2 Cpco Cpair = CALCP T ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure donnant la chaleur specifique a pression constante (Cp)\n  des gaz suivants : H2 , He , 02 , N2 , CO2 , CO , Air.\n\n\n    Commentaires\n    ____________\n\n      T    : est la temperature en Celsius\n             et peut etre un CHPOINT ou un FLOTTANT ou un LISTREEL.\n      Cpi  : est la chaleur specifique a pression constante en J/kg/K\n             et est du meme type que la temperature d'entree\n             pour chacun des gaz enumeres.",
  },
  {
    name: "CALCTRAC",
    url: "CALCTRAC",
    documentation:
      "$$$$ CALCTRAC NOTICE  CHAT      11/09/12    21:15:16     7124           \n                                             DATE     11/09/12\n\n     Operateur CALCTRAC                    Voir aussi : KRES\n     ------------------  \n     CALCTRAC MoDARCY Difftot' Cini nomespec nbespece LMLump\n                 (matrtr) TABRES Tbdartra CHCLIM;                 \n\n\n\n   APPELE PAR TRANGEOL\n\n\n  |-----------------------------------------------------------------|\n  | Generalites : CALCTRAC calcule les traces de concentration      |\n  |               associees a la donnee de concentrations initiales |\n  |               Les Conditions limites de flux et de concentration|\n  |               sont pris en compte.                              |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | Difftot  : Coefficient de diffusion totale, integre decentrement|\n  |                                                                 |\n  | Cini     : Concentration initiale, CHPOINT centre.              |\n  |            Composante 'H'.                                      |\n  |                                                                 |\n  | nomespec : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | LMLump   : Logique. Si vrai on effectue une condensation de     |\n  |            masse de la matrice EFMH                             |\n  |                                                                 |\n  | TABRES   : table contenant les options de resolution pour KRES  |\n  |                                                                 |\n  | TbDarTra : Table Darcy transitoire utilisee par MHYB, SMTP ...  |\n  |                                                                 |\n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES-SORTIES                         |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | MatrTr   : matrice globale sur les traces, MATRIK. optionnel.   |\n  |            plus rapide si presente.                             |\n  |                                                                 |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | Tcfin   : Trace de concentration aux faces (une composante par  |\n  |           espece chimique)                                      |\n  |                                                                 |\n  |*****************************************************************",
  },
  {
    name: "CALCULER",
    url: "CALCULER",
    documentation:
      "$$$$ CALCULER NOTICE  CHAT      11/09/12    21:15:16     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure CALCULER                       Voir aussi :\n    ------------------  \n    CALCULER  ;\n    \n\n\n    Objet :\n    _______\n\n    Cette procedure permet une saisie assistee des donnees necessaires\n    pour effectuer un calcul de structures bidimensionnelles en elas-\n    ticite lineaire.",
  },
  {
    name: "CALLM",
    url: "CALLM",
    documentation:
      "$$$$ CALLM    NOTICE  CHAT      11/09/12    21:15:16     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure CALLM                          Voir aussi : ENCEINTE\n    ---------------                                       CALMU  \n    Lmh2 Lmhe Lmo2 Lmn2 Lmco2 Lmco Lmvap Lmair = CALLM T ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure donnant la conductivite thermique fonction de la temperature\n  pour les gaz suivants : H2, He, 02, N2, CO2, CO, H2Ovapeur, Air.\n\n\n    Commentaires\n    ____________\n\n      T    : est la temperature en Kelvin\n             et peut etre un CHPOINT ou un FLOTTANT ou un LISTREEL.\n      Lmi  : est la conductivite thermique en W/m/K\n             et est du meme type que la temperature d'entree\n             pour chacun des gaz enumeres.",
  },
  {
    name: "CALMU",
    url: "CALMU",
    documentation:
      "$$$$ CALMU    NOTICE  CHAT      11/09/12    21:15:17     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure CALMU                          Voir aussi : ENCEINTE\n    -------------  \n    Muh2 Muhe Muo2 Mun2 Muco2 Muco Muvap Muair = CALMU T ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure donnant la viscosite dynamique en fonction de la temperature\n  pour les gaz suivants : H2 , He , 02 , N2 , CO2 , CO , H2O , Air.\n\n\n    Commentaires\n    ____________\n\n      T    : est la temperature en Kelvin\n             et peut etre un CHPOINT ou un FLOTTANT ou un LISTREEL.\n      Mui  : est la viscosite dynamique en Kg/m/s\n             et est du meme type que la temperature d'entree\n             pour chacun des gaz enumeres.",
  },
  {
    name: "CALP",
    url: "CALP",
    documentation:
      "$$$$ CALP     NOTICE  PASCAL    18/11/12    21:15:00     9989           \n                                             DATE     18/11/12\n\n    Operateur CALP                           Voir aussi : SIGM VMIS RTEN\n    --------------                                        EPSI CARA  \n    Cet operateur a plusieurs fonctions selon les donnees.\n\n    ---------------\n    | 1 Fonction |\n    ---------------\n  \n    CHAM2 = CALP MODL1 CHAM1 (MOT1) ; \n\n    Objet :\n    -------\n\n    L'operateur CALP (CALcul en Peau) calcule un champ de contraintes\n    ou de deformations au sens des milieux continus,a partir d'un champ\n    de contraintes ou de deformations generalisees calcule dans des\n    elements de coque, ou de poutre.\n\n    Dans le cas des coques, ce calcul est effectue aux points obtenus\n    par projection des points supports soit dans le plan moyen de la\n    coque, soit en peau superieure ou en peau inferieure. Lorsque les\n    coques possedent plusieurs points d'integration dans l'epaisseur,\n    l'operateur ne fait qu'extraire les valeurs aux points appropries.\n\n    L'operateur n'effectue pas de rotation du tenseur de contraintes\n    dont les composantes s'expriment donc dans les memes reperes dans\n    lesquels etaient exprimees les contraintes generalisees (dans les\n    reperes locaux). Si on veut obtenir les contraintes exprimees\n    dans le meme repere sur un ensemble d'elements, il convient \n    d'appliquer l'operateur RTEN sur le champ des contraintes avant\n    d'utiliser CALP.\n\n    Dans le cas des poutres, ce calcul est effectue en des points\n    dont on donne les coordonnees dans le repere local.\n\n    Les contraintes ainsi obtenues sont exprimees dans le repere \n    local : l'axe X est parallele a l'axe de la poutre, le plan XY \n    est defini par le vecteur contenu dans la composante VECT du\n    champ des caracteristiques.\n\n\n    Commentaire :\n    _____________\n\n\n    CHAM1    : champ de contraintes ou de deformations generalisees\n               (type MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n    CARA1    : champ de caracteristiques geometriques (type MCHAML)\n               devant contenir obligatoirement l'epaisseur pour les\n               coques et  les donnees suivantes pour les poutres :\n              'DY '  : coordonnee y du point ou l'on veut le resultat\n              'DZ '  : coordonnee z du point ou l'on veut le resultat\n              'SECT' : section droite\n              'INRY' : moment d'inertie par rapport a l'axe local OY\n              'INRZ' : moment d'inertie par rapport a l'axe local OZ\n\n    MODL1    : objet modele (type MMODEL)\n\n    MOT1     : mot-cle qui indique pour les coques ou l'on veut calculer\n               le resultat:\n\n                'SUPE' pour la peau superieure\n                'MOYE' pour le plan moyen (par defaut)\n                'INFE' pour la peau inferieure\n\n    CHAM2    : champ de contraintes ou de deformations (type MCHAML,\n               sous-type CONTRAINTES ou DEFORMATIONS)\n\n\n    Remarques   :\n    -------------\n\n    1.  Dans le cas des poutres la contrainte de cisaillement due au\n   moment de torsion n'est pas traitee .\n\n    2.  Dans le cas des coques avec cisaillement transverse, ce\n   cisaillement est la valeur moyenne sur l'epaisseur quel que soit\n   l'endroit ou l'on calcule les contraintes.\n\n\n\n    -------------------\n    | 2 eme Fonction  |\n    -------------------\n\n    CHAM2 = CALP MODL1 CHAM1 CARA1 ;                    \n\n    Objet:\n    ______\n\n    Projection d un champ de temperature defini sur un massif sur \n    nouveau modele de coque\n  \n\n\n    CHAM1 : champ par elements (type MCHAML) de TEMPERATURE defini\n            sur un objet massif \n    \n    CARA1 : Caracteristiques associees au modele MODE (type MCHAML)\n    \n    MODL1 : modele   MMODEL   sur des elements  de coques  \n\n    CHAM2 : objet resultant de la projection champ par \n            elements de composantes TINF T et TSUP  associees\n            aux temperatures de la peau interne  de la couche mediane et\n            de la peau externe \n\n\n\n\n    Remarque :\n    __________\n\n    Le Mchaml  d origine doit obligatoirement etre defini sur un massif \n       ",
  },
  {
    name: "CAMPBELL",
    url: "CAMPBELL",
    documentation:
      "$$$$ CAMPBELL NOTICE  MB234859  17/10/02    21:15:03     9577           \n                                             DATE     17/10/02\n\n Procedure CAMPBELL              Voir aussi: BALOURD, GYRO, CORI, KCEN\n ------------------\n \n  \n\n\n  Calcule le diagramme de Campbell d'une machine tournante.\n  Le diagramme peut etre calcule dans le repere fixe \n  (diagramme classique pour des modelisation de type poutre \n  avec couplage gyroscopique) \n  ou dans le repere tournant (evolution des frequences en tenant compte\n  des raideurs centrifuges, de precontrainte et du couplage de Coriolis)\n\n  CAMPBELL TAB1 PRFREQ\n\n PRFREQ:  LISTREEL contenant les vitesses de rotation pour lesquelles\n            on calcule le diagramme de Campbell  \n\n \n TAB1     Table contenant:\n \n 1/ Si l'utilisateur a deja calcule la base modale:\n    TAB1.'BASE_MODALE': Table contenant la base de modes reels utilisees\n                        (table generee par VIBR avec l'option TBAS)\n\n 2/ Si l'utilisateur desire calculer la base modale pour chaque vitesse de rotat\n   (utile pour la prise en compte de la raideur de precontrainte et la raideur c\n    TAB1.'NMODES' : Nombre de modes a calculer\n    TAB1.'FREQ_PROCHE': Valeur de frequence autour de laquelle seront cherches \n                        les modes propres \n \n    Les matrices de masse, de raideur, d'amortissement et de couplage \n    gyroscopique  peuvent etre donnees deja projetees sur la base de \n    modes reels ou non:\n   \n    TAB1.'MASS_PROJ': Matrice de masse projetee sur les modes reels utilises \n    TAB1.'MASSE': Matrice de masse \n \n    TAB1.'RIGI_PROJ': Matrice de rigidite projetee sur les modes reels utilises \n    TAB1.'RIGIDITE': Matrice de rigidite \n \n    TAB1.'AMOR_PROJ': Matrice d'amortissement projetee sur les modes reels\n                     utilises \n    TAB1.'AMORTISSEMENT': Matrice d'amortissement\n\n Pour les diagrammes de Campbell classique (dans le repere fixe) \n\n    TAB1.'KROT_PROJ': Matrice de raideur antisymetrique due a l'amortissement \n                      corotatif projetee sur les modes reels utilises \n    TAB1.'KROTATIF': Matrice de raideur antisymetrique due a l'amortissement \n                       corotatif\n\n    TAB1.'GYRO_PROJ': Matrice de couplage gyrsocopique projetee sur \n                     les modes reels utilises \n    TAB1.'GYROSCOPIQUE': Matrice de couplage gyrsocopique pour une vitesse \n                        de rotation unite\n   \n Pour les diagrammes de Campbell dans le repere tournant \n\n   TAB1.'CORI_PROJ': Matrice de couplage de Coriolis projetee sur les modes reel\n   TAB1.'CORIOLIS': Matrice de couplage de Coriolis pour une vitesse de rotation\n\n   TAB1.'KSIG_PROJ': Matrice de raideur de precontrainte projetee sur les modes \n   TAB1.'KSIGMA': Matrice de raideur de precontrainte pour une vitesse de rotati\n\n   TAB1.'KCEN_PROJ': Matrice de raideur centrifuge projetee sur les modes reels \n   TAB1.'KCENT': Matrice de raideur centrifuge pour une vitesse de rotation unit\n     \n     Les matrices de couplage gyroscopique, de raideur de precontrainte et de ra\n     doivent etre donnees pour une vitesse de rotation unite\n      (1 Hz, 1 rad/s ou 1 tour/min selon le choix de l'utilisateur)\n\n    TAB1.'AFFICHAGE': VRAI si on veut afficher les frequences de rotation \n                  au cours du calcul \n\n   TAB1.'CLASSEMENT':VRAI si on veut classer les modes directs(pulsation reelle>\n                                 et les modes retrogrades (pulsation reelle <0) \n\n   TAB1.'AXE_DIRECT': Vecteur parallele a la vitesse de rotation necessaire pour\n                       definir les sens direct et retrograde\n \n   OUTPUT\n \n  TAB1. i     Table contenant les resultats pour le mode complexe i\n               (N modes reels donnant 2N modes complexes)\n    (TAB1. i). 'FREQUENCE_REELLE'    : Evolution donnant la frequence reelle \n                                       en fonction de la frequence de rotation\n    (TAB1. i). 'FREQUENCE_IMAGINAIRE':  Evolution donnant la frequence imaginair\n                                       en fonction de la frequence de rotation\n    (TAB1. i). 'FREQUENCE_MODULE' : Evolution donnant le module de la frequence\n                                       en fonction de la frequence de rotation\n    (TAB1. i). 'AMORTISSEMENT' : Evolution donnant l'amortissement en fonction\n                                       de la frequence de rotation\n\n PRFREQ:  LISTREEL contenant les frequences de rotation (Hz, rad/s ou autre unit\n           pour lesquelles on calcule le diagramme de Campbell  \n\n\n Remarque:\n ---------\n         Pour chaque frequence de rotation, les frequences et amortissements\n         sont classes par ordre croissant. La ligne i correspond donc\n         a la frequence ieme par ordre croissant (pas de suivi de mode).\n         Pour un meme point, l'amortissement et les frequences\n         peuvent aussi correspondre a des modes differents.  \n ",
  },
  {
    name: "CAPA",
    url: "CAPA",
    documentation:
      "$$$$ CAPA     NOTICE  CB215821  17/07/18    21:15:02     9504           \n                                             DATE     17/07/18\n                                             \n    Operateur CAPACITE                       Voir aussi : SORE COND\n    ------------------  \n    CAP1 = CAPACITE  MMODE1 CAR1 ( TAB1 ) ;\n\n                                   TAB1.'SOUSTYPE' .'CHALEUR LATENTE'\n                                       .'TPHASE 1'.'TPHASE 2'\n                                       .'CHAMP THERMIQUE 1'\n                                       .'CHAMP THERMIQUE 2'\n\n\n    Objet :\n    _______\n\n    L'operateur CAPACITE cree une matrice de capacite calorifique.\n\n    Commentaire :\n    _____________\n\n    MMODE1 : structure modelisee (type MMODEL)\n\n    CAR1   : objet contenant les caracteristiques physiques de la\n             structure (type MCHAML, sous-type CARACTERISTIQUES)\n\n    TAB1   : table (type TABLE) contenant les renseignements pour le\n             changement de phase, avec les indices suivants :\n\n      'SOUSTYPE'         : 'THERMIQUE' (type MOT)\n\n      'CHALEUR LATENTE'  : chaleur latente du changement de phase\n                                   (type FLOTTANT)\n      'TPHASE 1'         : temperature 1 de changement de phase\n                                   (type FLOTTANT)\n      'TPHASE 2'        : temperature 2 de changement de phase\n                                   (type FLOTTANT)\n      'CHAMP THERMIQUE 1': temperature au debut du pas\n                                   (type CHPOINT)\n      'CHAMP THERMIQUE 2': temperature a la fin du pas\n                                   (type CHPOINT)\n\n    CAP1   : matrice de capacite calorifique (type RIGIDITE)\n\n    Remarque :\n    __________\n\n    Dans le cas general la matrice de capacite est l'integrale sur le \n    domaine de   tN . RHO . C . N . DV   ou N est la matrice\n    des fonctions de forme.\n\n    Le changement de phase se fait entre les temperatures TPHASE 1\n    et TPHASE 2 entrainant une variation lineaire d'enthalpie massique de\n    CHALEUR LATENTE + C.(TPHASE 2 - TPHASE 1) ou C est la capacite\n    fournie dans le champ CAR1. Les temperatures TPHASE 1 et TPHASE 2\n    doivent etre differentes.\n      \n    Lorsque TAB1 est specifie la matrice de capacite est obtenue comme\n    la derivee de l'enthalpie volumique entre les distributions\n    thermique CHAMP THERMIQUE 1 et CHAMP THERMIQUE 2.",
  },
  {
    name: "CAPI",
    url: "CAPI",
    documentation:
      "$$$$ CAPI     NOTICE  FD218221  20/12/17    21:15:06     10820          \n                                             DATE     20/12/17\n\n    Operateur CAPI                           Voir aussi : CAPI\n    --------------  \n    CH2 =  CAPI |  -     | MODL1 CH1 DEP1 (DEP2);\n                | 'JAUM' |\n                | 'UTIL' |\n\n    Objet :\n    _______\n\n 1. Par defaut (pas de mot-cle), l'operateur CAPI transforme :\n    - un champ de contraintes de Cauchy \n      en un champ de contraintes de Piola-Kirchhoff de seconde espece \n    - ou un champ de deformations d'Almansi-Euler \n      en un champ de deformations de Green-Lagrange.\n      \n 2. En presence du mot-cle 'JAUM' (Jaummann), l'operateur CAPI effectue  \n    un changement de repere sur le champ pour passer du repere  \n    general au repere corotationnel.\n    \n 3. En presence du mot-cle 'UTIL' (utilisateur), CAPI ne fait rien.\n\n\n   Commentaire :\n   _____________\n\n   MODL1: objet de type MMODEL.\n\n   CH1  : champ de contraintes/deformation avant transformation \n          (type MCHAML, sous-type CONTRAINTES/DEFORMATIONS)\n\n   DEP1 : champ de deplacements qui permet de passer de la configuration\n          de reference a la configuration actuelle (type CHPOINT)\n\n   DEP2 : pour la XFEM, champ de deplacements qui permet de passer \n          de la configuration ou la fissure est fermee\n          a la configuration de reference (type CHPOINT)\n\n   CH2  : champ de contraintes apres transformation\n          (type MCHAML, sous-type CONTRAINTES/DEFORMATIONS)",
  },
  {
    name: "CARA",
    url: "CARA",
    documentation:
      "$$$$ CARA     NOTICE  CHAT      11/09/12    21:15:18     7124           \n                                             DATE     11/09/12\n\n    Operateur CARACTERISTIQUE                Voir aussi : MODE VMIS\n    -------------------------                             MATE  \n    CAR1 = CARA  MODL1 NOMCi VALi  ...   ;\n\n\n    Objet :\n    _______\n\n    L'operateur CARA permet de construire le MCHAML CAR1 decrivant\n    des caracteristiques qui ne peuvent pas etre deduites du maillage.\n    Ces proprietes vont caracteriser l'objet MMODEL MODL1.\n\n    Commentaire :\n    _____________\n\n    MODL1   : objet modele (type MMODEL)\n\n    NOMCi   : nom de la ieme composantes (type MOT)\n\n    VALi    : valeur de la ieme composante (type FLOTTANT)\n\n    CAR1    : objet contenant les caracteristiques geometrique (type\n              MCHAML , sous-type CARACTERISTIQUES)\n\n\n   -------------------------------------------------------\n   | Noms des caracteristiques pour les elements massifs |\n   -------------------------------------------------------\n\n   ('DIM3')    : epaisseur dans le cas des contraintes planes\n\n   ('REND')  : rendement du materiau\n\n    ---  Cas isotrope :    'ISOTROPE' : mot-cle\n                          FLOTT : type FLOTTANT, valeur de la grandeur\n  ---------------------------------------------------------------------\n  | Noms des caracteristiques pour les elements COQ2, COQ3, COQ4, DKT, \n                                                DST \n  ---------------------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   ('CALF')  : coefficient utilise dans le critere de plasticite\n               (par defaut 2/3)\n   ('EXCE')  : excentrement du plan moyen de la coque par rapport au \n               plan de reference, compte positif dans le sens de la \n               normale (non disponible pour COQ3)\n   ('DIM3')  : epaisseur dans l'autre direction (cas des COQ2 en \n                                                 contraintes planes)\n\n\n   ----------------------------------------------------------\n   | Noms des caracteristiques pour les elements COQ6, COQ8 |\n   ----------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   ('EXCE')  : excentrement par rapport au plan moyen, compte positif\n               dans le sens de la normale\n\n   ----------------------------------------------------------------------\n   | Noms des caracteristiques pour un element POJS, SEGS, QUAS ou TRIS |\n   ----------------------------------------------------------------------\n\n   La section est decrite dans le plan xOy. L'axe Ox du repere de \n   description de la section est l'axe local Oy de l'element TIMO.\n   \n   'ALPY'    : coefficient qui multiplie la contrainte de cisaillement\n               sxy (Ox et Oy sont des axes locaux de l'element TIMO).\n\n   'ALPZ'    : coefficient qui multiplie la contrainte de cisaillement\n               sxz (Ox et Oz sont des axes locaux de l'element TIMO).\n\n   Ces coefficients dans le cas d'une section homogene peuvent etre \n   definis d'apres la theorie de Timoshenko.\n              \n   -------------------------------------------------------------------\n   | Noms des caracteristiques pour les elements de joint generalise |\n   -------------------------------------------------------------------\n\n   ('EPAI')    : epaisseur du joint\n\n   ----------------------------------------------------------\n   | Noms des caracteristiques pour un element BARR ou BAR3  |\n   ----------------------------------------------------------\n\n   'SECT'    : section droite\n\n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element BAEX |\n   ---------------------------------------------------\n\n   'SECT'    : section droite\n   'EXCZ'    : excentrement suivant l'axe local z\n   'EXCY'    : excentrement suivant l'axe local y\n   'VX  '    : composante x  du vecteur orientant l'axe local Oy\n   'VY  '    : composante y  du vecteur orientant l'axe local Oy\n   'VZ  '    : composante z  du vecteur orientant l'axe local Oy\n\n\n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element CERCE |\n   ---------------------------------------------------\n\n   'SECT'    : section droite\n\n   ------------------------------------------------------------\n   | Noms des caracteristiques pour un element POUTRE ou TIMO |\n   ------------------------------------------------------------\n\n    Les caracteristiques de la poutre sont definies dans le repere local\n    de l'element (Ox axe de la poutre oriente du premier point vers\n    le second, Oy axe defini si necessaire par l'utilisateur,\n    Oz completant le repere). Il faut que les axes Oy Oz soient des axes \n    pricipaux de la section car on ne definit pas les moments d'inertie\n    croisees (sauf poul l'element TIMO avec un modele SECTION)\n\n    'SECT'     : section droite\n    'INRY'     : moment d'inertie par rapport a l'axe local Oy\n    'INRZ'     : moment d'inertie par rapport a l'axe local Oz\n    'TORS'     : moment d'inertie de torsion\n    ('SECY')   : section reduite a l'effort tranchant selon l'axe local\n    ('SECZ')   : section reduite a l'effort tranchant selon l'axe local\n    ('VECT')   : mot-cle permettant de definir l'axe local Oy. Il doit\n                 etre suivi par un vecteur appartenant au plan xOy\n                 (objet de type POINT).\n    ('DX  ') | : 3 distances permettant de calculer des contraintes a\n    ('DY  ') |   partir des moments, pour le critere de plasticite\n    ('DZ  ') |   (cf VMIS).\n    ('OMEG') |   Vitesse de rotation de la poutre autour de son axe (en rad/s).\n                  Utilise pour calculer la matrice de couplage gyroscopique.\n\n    Par defaut, les sections SECY et SECZ sont prises egales a SECT pour \n    l'element TIMO et pour les elements POUTRE on neglige l'energie\n    de deformation de cisaillement (cela  revient a imposer des valeurs\n    infinies pour les sections reduites)\n\n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element TUYAU |\n   ---------------------------------------------------\n\n    Cet element sert a representer des portions de tuyau droit ou de\n    coude, la differenciation se faisant par le rayon de courbure.\n    Les caracteristiques du tuyau sont definies dans le repere local de\n    l'element, de la Meme fa\u00e7on que pour l'element POUTRE.\n\n   'EPAI'    : epaisseur\n   'RAYO'    : rayon exterieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n   ('VECT')  : mot-cle permettant de definir l'axe local Oy. Il doit\n               etre suivi par un POINT representant un vecteur de xOy.\n               Cette donnee est imperative s'il s'agit d'un coude.\n\n               Attention : pour les coudes, le vecteur local Oz, deduit\n               ---------\n               de Ox et Oy, est situe dans le plan du coude et oriente\n               par convention vers l'extrados du coude.\n   ('PRES')  : pression interne (0. par defaut)\n   ('CISA')  : coefficient multiplicatif de la section reduite\n               a l'effort tranchant (0. par defaut)\n   ('CFFX')  : facteur multiplicatif permettant de calculer la\n               contrainte de membrane a partir de l'effort EFFX, pour\n               le critere de plasticite (1. par defaut), (cf VMIS).\n   ('CFMX')  : facteur multiplicatif permettant de calculer la\n               contrainte de torsion a partir du moment MOMX, pour\n               le critere de plasticite (3.**0.5 par defaut), (cf VMIS).\n   ('CFMY')  : facteur multiplicatif permettant de calculer la\n               contrainte de flexion a partir du moment MOMY, pour\n               le critere de plasticite ((pi/4)*gamma par defaut),\n               (cf VMIS).\n   ('CFMZ')  : facteur multiplicatif permettant de calculer la\n               contrainte de flexion a partir du moment MOMZ, pour\n               le critere de plasticite ((pi/4)*gamma par defaut),\n               (cf VMIS).\n   ('CFPR')  : facteur multiplicatif permettant de calculer la\n               contrainte circonferentielle due a la pression. Facteur\n               non utilise pour le critere de plasticite mais\n               seulement dans le calcul de la contrainte equivalente\n               (0. par defaut), (cf VMIS).\n\n               Remarque : pour CFMY et CFMZ, gamma est egal a 1. pour\n               ---------\n               les parties droites et a maxi ( 1., (8/9)/lambda**2/3 )\n               pour les coudes, avec lambda = epai*raco/rmoy**2 ou\n               rmoy est le rayon moyen du tuyau.\n    ('OMEG') |   Vitesse de rotation de la poutre autour de son axe\n                 (en rad/s)\n\n   --------------------------------------------------------\n   | Noms des caracteristiques pour un element LINESPRING |\n   --------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   'FISS'    : profondeur de l'entaille\n   'VX  ' |\n   'VY  ' |  : composantes d'un vecteur normal au plan de l'element LISP\n   'VZ  ' |    et oriente du cote ou s'ouvre l'entaille\n\n    Remarque :\n    __________\n\n    Les points en vis a vis du linespring doivent etre ecartes l'un de \n    l'autre d'une distance comprise entre 1.e-3 et 1.e-6 fois la longueur\n    du linespring.\n    Le repere local est defini comme suit:\n    l'axe x va du point 1 au point 2 de l'element,\n    l'axe y est dirige selon le vecteur V donne (VX VY VZ),\n    l'axe z complete le triedre.\n    Si le vecteur V est oriente dans le sens oppose a la normale positive\n    N a l'element, un message apparait, au moment du calcul des contraintes,\n    signalant que le repere (x,N,z) n'est pas direct, cependant les valeurs\n    sont correctes.\n\n    Il ne doit pas y avoir d'angle inferieur a 175 degres ou superieur\n    a 185 degres entre les elements dans leur plan (defini a l'aide\n    du vecteur normal). \n\n\n   -----------------------------------------------------------\n   | Noms des caracteristiques pour un element TUYAU FISSURE |\n   -----------------------------------------------------------\n\n     Cet element permet de representer des portions de tuyau droit ou\n     de coude fissure, la difference etant faite d'apres le rayon de\n     courbure.\n\n     Les caracteristiques du tuyau sont definies dans le repere local de\n     l'element, de la Meme fa\u00e7on que pour l'element POUTRE.\n\n    'EPAI'    : epaisseur\n    'RAYO'    : rayon exterieur du tuyau\n    'ANGL'    : ouverture totale en degre de la fissure\n    'VX  ' |\n    'VY  ' |  : composantes du vecteur definissant l'axe du tuyau fissure\n    'VZ  ' |\n    'VXF '  |\n    'VYF '  | : composantes du vecteur definissant l'orientation de la\n    'VZF '  |   fissure\n\n    Remarque :\n    __________\n\n    Le domaine de validite de cet element correspond a un rapport RAYO/EPAI \n    compris entre 5.5 et 20.5.\n\n\n   -----------------------------------------------------\n   | Noms des caracteristiques pour un element RACCORD |\n   -----------------------------------------------------\n\n    Pour les elements de raccord fluide-structure autres que LITU,\n    il est necessaire de connaitre la position du fluide par rapport\n    a l'element de raccord. Pour cela on donne derriere le mot-cle 'LIQU'\n    l'objet geometrique representant le fluide.\n\n\n   --------------------------------------------------\n   | Noms des caracteristiques pour un element LSE2 |\n   --------------------------------------------------\n\n    'RAYO'   : rayon interieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n\n\n   -------------------------------------------------\n   | Noms des caracteristiques pour un element LITU|\n   -------------------------------------------------\n\n    'RAYO'   : rayon interieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n   ('VECT')  : mot-cle permettant de definir l'axe local Oy. Il doit\n               etre suivi par un POINT representant un vecteur de xOy.\n               Cette donnee est imperative s'il s'agit d'un coude.\n\n               Attention : pour les coudes, le vecteur local Oz, deduit\n               ---------\n               de Ox et Oy, est situe dans le plan du coude et oriente\n               par convention vers l'extrados du coude.\n\n\n   -------------------------------------------------------------\n   | noms des caracteristiques pour un element HOMOGENEISE TRIH |\n   -------------------------------------------------------------\n\n   'SCEL'    : mesure de la cellule elementaire agrandie\n   'SFLU'    : mesure du domaine fluide dans la cellule agrandie\n   'EPS '    : pas tubulaire du milieu\n   'NOF1'    : rapport de la norme de la deformee modale du tube\n               par la norme de la pression selon l'axe du faisceau\n   'NOF2'    : rapport du produit scalaire de la deformee modale du tube\n               et de la deformee modale de la pression par le carre\n               de la norme de la pression selon l'axe du faisceau\n\n    Remarque :\n    __________\n\n    Dans le cas de l'etude d'une tranche , les coefficients 'NOF1' et\n    'NOF2' valent un tous les deux.\n\n   -------------------------------------------------------------\n   | noms des caracteristiques pour un element HOMOGENEISE QUAH |\n   |                                                       CUBH |\n   -------------------------------------------------------------\n\n   'SCEL'    : mesure de la cellule elementaire agrandie\n   'SFLU'    : mesure du domaine fluide dans la cellule agrandie\n   'EPS '    : pas tubulaire du milieu\n   'SECT'    : section d'une poutre  \n   'INRZ'    : moment d'inertie d'une poutre par rapport a l'axe Oz",
  },
  {
    name: "CARB",
    url: "CARB",
    documentation:
      "$$$$ CARB     NOTICE  FANDEUR   14/10/10    21:15:12     8178           \n                                             DATE     14/10/10\n\n  Op\u00e9rateur CARB                           Voir aussi :\n    --------------  \n    Objet :\n    _______\n\n    Cet op\u00e9rateur a \u00e9t\u00e9 d\u00e9branch\u00e9.\n    Se reporter \u00e0 l'op\u00e9rateur CARA(CTERISTIQUES).",
  },
  {
    name: "CBLO",
    url: "CBLO",
    documentation:
      "$$$$ CBLO     NOTICE  CHAT      11/09/12    21:15:18     7124           \n                                             DATE     11/09/12\n  Operateur CBLO                           Voir aussi :\n    --------------  \n    TAB2 = CBLO TAB1 FLOT1;\n \n\n    Objet :\n    _______\n \n    L'operateur CBLO genere une table TAB2 (type TABLE) de blocs\ncompatibles a partir de la table TAB1 de bloc incompatibles, a la\ntolerance FLOT1 (type FLOTTANT) pres.\n \n    Remarques :\n    ___________\n \n  - TAB1 est un table de 'SOUSTYPE' 'LISTE_DE_BLOCS'. Les autres indices\nde TAB1 sont tous des entiers et pointent sur des objets de type MAILLAGE\nformant un bloc (2D) ou sur des tables de 'SOUSTYPE' 'LISTE_DE_FACES'.\n \n  - En 2D un bloc est une suite ordonnee de point (elements de type POI1) \nqui permet de genere le contour du bloc.\n \n \n P2 +--------------+ P3\n    |              |\n    |              |\n    |    BLOC1     |      Par exemple on a BLOC1=P1 et P2 et P3 et P4\n    |              |                    ou BLOC1=P1 et P4 et P3 et P2\n    |              |\n P1 +--------------+ P4\n \n  - Deux blocs contigus sont dits compatibles si tous les elements de\nleurs contours en regard sont geometriquement identiques\n \n P2 +--------------+ P3\n    |              |\n    |              |\n    |    BLOC1     |      Par exemple BLOC1(=P1 et P2 et P3 et P4 et P5)\n    |              |      est compatible avec BLOC2(=Q1 et Q2 et Q3 et Q4\n P1 |      P5      | P4                     et Q5) si P4 et Q4 d'une part\n    +------+-------+-------------+          et P5 et Q5 d'autre part sont\n        Q5 |       Q4            | Q3       des points differents occupant\n           |                     |          la meme position a TOL2 pres.\n           |       BLOC2         |\n           |                     |\n           |                     |\n        Q1 +---------------------+ Q2\n \n  - En 3D un bloc est un ensemble de faces contenu dans la table\nde 'SOUSTYPE' 'LISTE_DE_FACES'. Les autres indices de cette table sont\ntous des entiers et pointent sur des objets de type MAILLAGE formant\nune face. Chaque face est decrite par un contour ferme de SEG2 ne\ncomportant aucun trou.\n ",
  },
  {
    name: "CCDONCHI",
    url: "CCDONCHI",
    documentation:
      "$$$$ CCDONCHI NOTICE  CHAT      11/09/12    21:15:19     7124           \n                                             DATE     11/09/12\n                                             \n     Procedure CCDONCHI                      Voir aussi : CHI2 DONCHI2\n     ------------------                                   CHI2   DONCHI2  \n                                                          DOMA   KCHT  \n\n  OBJ4 = CCDONCHI TAB1 MOT1 OBJ1 (OBJ2) (OBJ3) ...(OBJn) ;\n\n\n        Objet\n        -----\n        Cette procedure permet de grouper sur un maillage des objets\n        de classe DONCHI2 calcules sur differents sous maillages.\n        Les differents maillages sont consideres dans l'ordre dans\n        lequel ils sont donnes.\n        Commentaires\n        -------------\n        TAB1 : table de sous type DOMAINE.\n        MOT1 : mot precisant le support geometrique des CHPOINTS\n              pour le domaine considere: SOMMET\n                                         FACE\n                                         CENTRE\n        OBJ1  OBJ2 .. OBJn:\n              Objets de type DONCHI2 definis sur des sous maillages\n              de celui sur lequel est defini TAB1.\n        OBJ4 : Objet de type DONCHI2 resultat.\n\n \n ",
  },
  {
    name: "CCON",
    url: "CCON",
    documentation:
      "$$$$ CCON     NOTICE  JC220346  16/11/18    21:15:26     9187           \n                                             DATE     16/11/18\n\n    Operateur CCON                                Voir aussi : PART\n    --------------  \n    TAB1 = CCON ( | 'STR1' | ) MAIL1 ;\n                  | 'STR2' | \n\n\n    +-----------------------------------------------------------------+\n    | CET OPERATEUR EST OBSOLETE ET SERA SUPPRIME DANS LES PROCHAINES |\n    | VERSIONS                                                        |\n    |                                                                 |\n    | SES FONCTIONNALITES ONT ETE INCLUSES DANS L'OPERATEUR PART QUI  |\n    | EST PLUS GENERAL                                      ====      |\n    +-----------------------------------------------------------------+\n\n\n    Objet :\n    -------\n\n    L'operateur CCON separe les composantes connexes d'un maillage et\n    les met dans un objet TABLE indice par des entiers 1, 2, 3...\n\n    En presence du mot-cle 'STR1' (cas des lignes), les points\n    appartenant a plus de deux elements separent les composantes\n    connexes.\n\n    En presence du mot cle 'STR2' (cas des surfaces), la connexion\n    entre voisins s'effectue par les aretes, et uniquement si celles-ci \n    n'appartiennent pas a plus de deux elements.\n\n    ",
  },
  {
    name: "CER3",
    url: "CER3",
    documentation:
      "$$$$ CER3     NOTICE  CHAT      11/09/12    21:15:19     7124           \n                                             DATE     11/09/12\n\n    Operateur CER3                           Voir aussi : CERC, TOUR\n    --------------  \n   GEO1 = CER3 (N1)  POIN1 POIN2 POIN3  ('DINI' DENS1) ('DFIN' DENS2) ;\n\n\n    Objet :\n    _______\n\n    L'operateur CER3 permet de construire un arc de cercle passant par\ntrois points.\n\n    Commentaire :\n    _____________\n\n    POIN1 |\n    POIN2 | : points permettant de definir l'arc de cercle(type POINT)\n    POIN3 |\n\n    N1      : nombre d'elements generes (type ENTIER)\n\n    DENS1 | :densites associees aux points POIN1 et POIN3(type FLOTTANT\n    DENS2 |\n\n    GEO1    : arc de cercle (type MAILLAGE)\n\n\n    Remarque :\n    __________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n    Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    Si N1 est negatif, N1 elements seront engendres et leurs tailles\nseront calculees en tenant compte des densites des extremites.\n\n    Si les densites associees aux points POIN1 et POIN3 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ntroisieme point, derriere le mot-cle 'DFIN'.\n\n    Si une ligne LIG1 est donnee a la place du point POIN1 (ou POIN3),\ncette ligne est prolongee jusqu'au point POIN3 (la ligne commence au\npoint POIN3).\n    Si le point POIN3 n'est pas donne, la premiere extremite de la\nligne LIG1 est consideree, ce qui permet de fermer celle-ci.",
  },
  {
    name: "CERC",
    url: "CERC",
    documentation:
      "$$$$ CERC     NOTICE  BP208322  21/10/25    21:15:01     11144          \n                                             DATE     21/10/25\n\n  Voir aussi : DROI, CER3, \n                                                          PARA  ROTA  \n    Operateur CERCLE\n    ----------------\n\n    GEO1 = CERC (N1) ('DINI' DENS1) ('DFIN' DENS2) ...\n    \n                ... | ('CENTR')       POIN1 CENTR2 POIN3 ;\n                    |  'PASS'         POIN1 POIN2  POIN3 ;\n                    |  'ROTA'   FLOT1 POIN1 POIN2 (POIN3) ('ELIM');\n\n\n    (C est aussi admis a la place de CERC)\n\n    \n    Objet :\n    ______\n\n    L'operateur CERC permet de construire un arc de cercle GEO1. Trois\n    syntaxes sont disponibles : 'CENTR' (par defaut), 'PASS' et 'ROTA'.\n    \n    \n    Commentaire communs :\n    ____________________\n    \n    N1      : nombre d'elements generes (type ENTIER)\n\n    DENS1 | : densites associees aux points POIN1 et POIN3\n    DENS2 |   (type FLOTTANT)\n    \n\n    Syntaxe 'CENTR' :\n    ________________\n    \n    POIN1 | : points extremite de l'arc de cercle (type POINT)\n    POIN3 |\n    \n    CENTR2  : centre du cercle (type POINT)\n    \n    GEO1    : arc de cercle (type MAILLAGE) de centre CENTR2, \n              construit entre les points POIN1 et POIN3. \n              Par convention, l'arc construit est l'arc le plus court. \n              On ne peut pas construire de demi-cercle.\n              \n              \n    Syntaxe 'PASS' :\n    _______________\n    \n    POIN1 | : points de l'arc de cercle (type POINT)\n    POIN2 |\n    POIN3 |\n    \n    GEO1    : arc de cercle (type MAILLAGE) passant par les points POIN1\n              POIN2 et POIN3.\n              \n              \n    Syntaxe 'ROTA' :\n    _______________\n    \n    FLOT1   : angle de rotation en degre (type FLOTTANT)\n    \n    POIN1   : points extremite initiale de l'arc de cercle (type POINT)\n    \n    POIN2 | : points definissant l'axe de rotation (type POINT)\n   (POIN3)|   (POIN3 est inutile en 2D)\n   \n    'ELIM'  : identification du point final comme etant le point initial\n              (possible seulement si FLOT1=360 degres)\n    \n    GEO1    : arc de cercle (type MAILLAGE) engendr\\'e par la rotation\n              de  POIN1 autour de l'axe defini par POIN2 et POIN3.\n\n\n    Remarque 1 :\n    ___________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\n    tailles seront calcules en fonction des densites des extremites.\n    Si N1 est specifie et positif, N1 elements d'egale longueur\n    seront engendres.\n    Si N1 est negatif, N1 elements seront engendres et leurs tailles\n    seront calculees en tenant compte des densites des extremites.\n\n    Remarque 2 :\n    ___________\n\n    Si les densites associees aux points des extremites ne sont pas\n    correctes, il est possible de les surcharger. Pour le premier \n    point, il faut donner la bonne valeur derriere le mot-cle 'DINI' \n    et, pour le deuxieme point, derriere le mot-cle 'DFIN'.\n\n    Remarque 3 :\n    ___________\n\n    Si une ligne LIG1 est donnee a la place du point POIN1, GEO1 sera\n    constitue de la ligne LIG1 prolongee par un arc de cercle jusqu'au \n    point POIN3.\n    De meme, si une ligne LIG3 est donnee a la place de POIN3, GEO1 \n    sera constitue de l'arc de cercle joignant POIN1 au premier point  \n    de LIG3 prolongee par LIG3.\n    Si une ligne LIG1 est donne a la place des points POIN1 et POIN3,\n    alors l'arc de cercle joindra les deux extremites de LIG1, ce qui  \n    permet de fermer celle-ci.",
  },
  {
    name: "CFL",
    url: "CFL",
    documentation:
      "$$$$ CFL      NOTICE  CHAT      11/09/12    21:15:20     7124           \n                                             DATE     11/09/12\n\n    Operateur CFL                            Voir aussi : TAIL \n    --------------                                         CSON  \n                                                                                \n     CHAM4  =  'CFL'  MODL1   |  MATR1   \n                              |\n                              |  ( CARA1 ) 'CSON' CHAM2  \n                              |\n                              |  MATR2  'TAILLE'  CHAM3 ;\n\n\n    Objet :\n    _______\n\n    L'operateur CFL permet de  determiner le pas de temps de la\ncondition CFL (Courant Friedriech Levy) pour chaque element d'un\nmodele de comportement. Les deux options permettent de fournir \ndirectement la taille ou la celerite du son dans un materiau.\n\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele ( type MMODEL ).\n\n      MATR1 : objet de type MCHAML de sous-type CARACTERISTIQUES,\n              decrivant les parametres du modele de comportement\n              (obtenu avec l'operateur MATE) ainsi que les cara-\n              cteristiques geometriques d'eventuels elements coques\n              ou poutres (obtenu avec l'operateur CARA).\n\n      MATR2 : objet de type MCHAML de sous-type CARACTERISTIQUES,\n              decrivant les parametres du modele de comportement\n              (obtenu avec l'operateur MATE).\n\n      CHAM2  : objet de type MCHAML definissant la celerite du son \n               au centre de gravite de l'element nom de composante\n               'CSON' . (obtenu avec l'operateur CSON)\n\n      CHAM3  : objet de type MCHAML definissant la taille de\n               propagation de l'information d'un noeud vers des\n               elements non adjacents (composantes 'L' pour\n               les elements massifs et 'L2H' pour les elements\n               coques ou poutres). \n\n      CHAM4  : objet resultat de type MCHAML defini au centre des\n               de gravite des elements de composante 'TCFL' . \n\n\n    Remarque :\n    __________\n\n  La condition CFL s'ecrit alors avec l'operateur 'MINI' qui va\ncalculer le minimum du champ par element CHAM4. Ce minimum constitue\nun minorant du pas de stabilite pour les algorithmes explicites.",
  },
  {
    name: "CFND",
    url: "CFND",
    documentation:
      "$$$$ CFND     NOTICE  CHAT      11/09/12    21:15:20     7124           \n                                             DATE     11/09/12\n                                            \n \n    Operateur CFND                           \n    --------------\n    \n      CHP2 =  CFND   CHP1  MOD1 ;\n                               \n\n\n    Objet :\n    _______\n\n    L'operateur CFND modifie le champ par point CHP1 pour le\nrendre compatible avec les relations de conformites incluses dans\nle modele MOD1.\n    Cet operateur est appele par la procedure CH_THETA.",
  },
  {
    name: "CH2CLIM",
    url: "CH2CLIM",
    documentation:
      "$$$$ CH2CLIM  NOTICE  CHAT      11/09/12    21:15:20     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CH2CLIM                         Voir aussi : METH OBJE\n     ---------------                                      DONCHI1 CHDCLIM  \n                                                          CHANOLII  \n      CH2CLIM MOT1 LENT1\n\n\n        Objet\n        -----\n\n     La methode CH2CLIM charge un LISTENTI a l'indice MOT1\n     de l'element %CLIM d'un objet DONCHI1.\n     MOT1 est un mot pris dans la liste : TYP3 COMP3 TYP4 TYP5 TYP6",
  },
  {
    name: "CHAI",
    url: "CHAI",
    documentation:
      "$$$$ CHAI     NOTICE  JC220346  19/12/31    21:15:03     10470          \n                                             DATE     19/12/31\n\n    Operateur CHAINE                         Voir aussi : TEXT\n    ----------------  \n    MOT1 = CHAINE  ('FORMAT' MOT2 ) OBJ1 |(*N)| ( OBJ2  .....)  ;\n                                         |(/N)|\n                                         |(<N)|\n                                         |(>N)|\n\n\n    Objet :\n    _______\n\n    L'operateur CHAINE permet de fabriquer un objet MOT1 de type MOT \n    de 512 caracteres au plus.\n\n    Commentaire :\n    _____________\n\n    OBJi : objets de type MOT, ENTIER, FLOTTANT ou LOGIQUE\n\n    MOT2 : format FORTRAN dans lequel on souhaite ecrire les flottants.\n           On peut preciser le format pour chacun des flottants.\n           MOT2 doit obligatoirement commencer et finir par des \n           parentheses.\n           Le format par defaut est '(1PE12.5)' (Cf. formats fortran)\n           exemples\n            '(A4)'    : chaine de 4 caracteres\n            '(I5)'    : entier sur 5 chiffres\n            '(F8.5)'  : flottant sur 8 caracteres avec 5 decimales maxi\n                        sans exposant\n            '(E12.5)' : flottant sur 12 caracteres avec 5 decimales maxi\n                        et exposant genre 'E5'\n            '(D12.5)' : flottant sur 12 caracteres avec 5 decimales maxi\n                        et exposant genre 'D+05'\n                    \n\n    Remarque :\n    __________\n\n    La chaine est fabriquee par concatenation des chaines de caracteres\n    des objets OBJi de type MOT.\n\n    Si OBJi est un objet de type ENTIER, FLOTTANT ou LOGIQUE, il est \n    d'abord converti en chaine de caracteres.\n    \n    Pour les flottants, on prend en compte la derniere option FORMAT\n    rencontree. Cette option doit etre utilisee avec precaution car une\n    erreur de codage peut entrainer l'arret du programme.\n\n    On peut par *N, <N, /N, >N demander que l'ecriture de l'objet OBJi\n    place juste avant soit decale a droite (ou a gauche) sur la N-ieme\n    colonne, en absolu ou en relatif :\n    \n    CHAI 'ABC' 'DEF'*10 ;   --->   \"ABC....DEF\"       (gauche/absolu)\n    CHAI 'ABC' 'DEF'/10 ;   --->   \"ABC......DEF\"     (droite/absolu)\n    CHAI 'ABC' 'DEF'<10 ;   --->   \"ABC.......DEF\"    (gauche/relatif)\n    CHAI 'ABC' 'DEF'>10 ;   --->   \"ABC.........DEF\"  (droite/relatif)\n    \n \n    Exemples :\n    __________\n\n    1)\n    PRESS = 25.86  ;\n    ICAS  = 2 ;\n    AA=CHAINE  ' CAS DE CHARGE NUMERO:' ICAS '  PRESSION :' PRESS;\n\n CAS DE CHARGE NUMERO:2  PRESSION : 2.58600E+01\n\n    2)\n    AA=CHAINE  ' CAS DE CHARGE NUMERO:' ICAS  FORMAT '(F6.2)'\n             '  PRESSION :' PRESS;\n\n CAS DE CHARGE NUMERO:2  PRESSION : 25.86\n\n    3)\n    F1 = '(F6.2)' ;\n    BB = CHAINE ' PRES1=' FORMAT F1 PRESS ' PRES2=' PRESS ' PRES3='\n         FORMAT '(SP,1PE10.3)' PRESS ;\n\n PRES1= 25.86 PRES2= 25.86 PRES3=+2.586E+01\n\n    4)\n    IJK=321; CC=CHAINE IJK*10 IJK*20;\n             DD=CHAINE IJK/10 IJK/20;\n    MESS CC ; MESS DD;\n\n       321       321\n         321       321",
  },
  {
    name: "CHAMINT",
    url: "CHAMINT",
    documentation:
      "$$$$ CHAMINT  NOTICE  CHAT      11/09/12    21:15:21     7124           \n                                             DATE     11/09/12\n\n  Operatueur CHAMINT                           Voir aussi :\n    ------------------  \n    CH2 xstart = CHAMINT CH1 ;\n\n\n    \n    utilise par TRANSGEN - pas pour utilisateur\n\n    CH1      chargement\n    \n    CH2      chargement CH1 integre dans le temps\n\n    xstart   valeur du temps a partir de laquelle\n             le chargement est constant. Pour ne\n             pas appele TIRE inutilement. Vaut\n             le dernier temps si n'arrive jamais.",
  },
  {
    name: "CHAN",
    url: "CHAN",
    documentation:
      "$$$$ CHAN     NOTICE  GOUNAND   21/04/14    21:15:01     10964          \n                                             DATE     21/04/14\n\n  Operateur CHANGER                        Voir aussi : \n\n    Cet operateur permet de changer un attribut ou le type d'un objet.\n    Sa syntaxe generale est la suivante :\n\n    OBJET1 = CHAN (MOT1) OBJET2 (OBJET3)(OBJET4) (OBJET..) (MOT2) (MOT3);\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n    1. Tableau de synthese des options\n    2. Resultat de type MAILLAGE\n    3. Resultat de type CHPOINT\n    4. Resultat de type MCHAML\n    5. Resultat de type MMODEL\n    6. Resultat de type MATRIK\n    7. Resultat de type RIGIDITE\n    8. Resultat de type CHARGEMENT\n    9. Resultat de type MOT\n    10. Resultat de type EVOLUTION\n  \n1. Tableau de synthese des options \n---------------------------------- \n+-----------+------------+----------+----------+-------------+---------+\n|           |            |          |          |             |         |\n|  OBJET1   |  MOT1      | OBJET2   | OBJET3   |    MOT2     | MOT3    |\n|           |            |          |          |             |         |\n+-----------+------------+----------+----------+-------------+---------+\n|  MAILLAGE | (TYPE)     | MAILLAGE  (LISTENTI)                        |\n------------------------------------------------------------------------\n|  CHPOINT  |  'CHPO'    | CHPOINT  | (MMODEL)                         |\n|  CHPOINT  |  'CHPO'    | MCHAML   |  MMODEL  | ('MOYE')              |\n|                                              | ('SOMM')              |\n|                                              | ('SUPP')              |\n------------------------------------------------------------------------\n|  CHPOINT  | 'ATTRIBUT' | CHPOINT  |          |'NATURE'    | 'INDETER'|\n|                                                           | 'DIFFUS' |\n|                                                           | 'DISCRET'|\n------------------------------------------------------------------------\n|  CHPOINT  | 'COMP'     | CHPOINT  | MOT1              |  ...         |\n|                                   | LISTMOT1 LISTMOT2 |              |\n|                                         ...  | ( 'NATU' | 'INDETER'  |\n|                                                         | 'DIFFUS'   |\n|                                                         | 'DISCRET') |\n------------------------------------------------------------------------\n|  CHPOINT  | 'TITR'     | CHPOINT  | MOT1                             |\n------------------------------------------------------------------------\n|  MCHAML   | 'NOEUD'    | MCHAML   | MMODEL                           |\n|           | 'GRAVITE'  |                                             |\n|           | 'RIGIDITE' |                                             |\n|           | 'MASSE'    |                                             |\n|           | 'STRESSES' |                                             |\n------------------------------------------------------------------------\n|  MCHAML   | 'CHAM'     | MCHAML   | MMODEL   | ('NOEUD')   | (TYP1)  |\n|                        | CHPOINT  | MMODEL   | ('GRAVITE') |         |\n|                                              | ('RIGIDITE')|         |\n|                                              | ('MASSE'   )|         |\n|                                              | ('STRESSES')|         |\n|  MCHAML   | 'CHAM'     | CHPOINT  | MAILLAGE                         |\n------------------------------------------------------------------------\n|  MCHAML   | 'COMP'     | MOT1              | CHE1                    |\n|                        | LISTMOT1 LISTMOT2 |                         |\n------------------------------------------------------------------------\n|  MCHAML   |  'TYPE'    | MCHAML   |          |   TYP1                |\n------------------------------------------------------------------------\n|  MCHAML   |  'CONS'    | MCHAML   |          |   MOT1                |\n------------------------------------------------------------------------\n|  MMODEL   |  'CONS'    | MMODEL   |          |   MOT1                |\n------------------------------------------------------------------------\n|  MATRIK   |  'INCO'    |  MATRIK  | LMOT1  LMOT2  LMOT3  LMOT4       |\n|                                   |  MOT1   MOT2   MOT3   MOT4       |\n------------------------------------------------------------------------\n|  RIGIDITE |  'INCO'    | RIGIDITE | LMOT1  LMOT2  LMOT3  LMOT4 | ... |\n|                                   |  MOT1   MOT2   MOT3   MOT4 |     |\n|                                   |             'COMPL'        |     |\n|            ...  | ('SYME') |                                         |\n|                 | ('ANTI') | ('MULT')                                |\n|                 | ('QUEL') |                                         |\n------------------------------------------------------------------------\n|  RIGIDITE | 'TYPE'     |  RIGIDITE |         |   MOT1                |\n------------------------------------------------------------------------\n|  RIGIDITE | 'DEPE'     |  RIGIDITE                                   |\n------------------------------------------------------------------------\n| RIG1 RIG2 | 'COND'     | RIGIDITE                                    |\n------------------------------------------------------------------------\n|  CHARGEME | 'TABL'     | CHARG1  MOT1      |                         |\n------------------------------------------------------------------------\n|  MOT      | 'MAJU'     | MOT               |                         |\n|           | 'MINU'     |                                             |\n------------------------------------------------------------------------\n|  EVOLUTIO | 'TITR'     | EVOL1    |   -    | MOT1                    |\n|           | 'LEGE'     |          |  (k)   |                         |\n|           | 'NOMABS'   |          |  (k)   |                         |\n|           | 'NOMORD'   |          |  (k)   |                         |\n------------------------------------------------------------------------\n\n\n  \n2. Resultat de type MAILLAGE \n---------------------------- \n   -----------------> pour changer le type d'\u00e9l\u00e9ment\n\n     GEO2 = CHAN (TYPE) GEO1 (LENTI1) ;\n\n   L'operateur CHAN construit un MAILLAGE GEO2 equivalent au MAILLAGE\n   GEO1, mais forme d'elements du type demande TYPE (type MOT). Par\n   defaut, on prend le type courant (cf OPTION).\n   Si GEO1 est constitue d'elements quadratiques pour les fluides\n   (complets) , TYPE peut prendre une des valeurs suivantes 'TRI3',\n   'QUA4', 'TET4', 'PYR5', 'CUB8'.\n\n   Si on donne pour TYPE le mot 'LIGNE', le maillage resultat est\n   constitue uniquement de lignes.\n   Si on donne pour TYPE le mot 'SURFACE', le maillage resultat est\n   constitue uniquement d'elements triangulaires ou quadrangulaires,\n   correspondant aux facettes des elements de GEO1.\n   Si on donne pour TYPE le mot 'LINEAIRE' chaque element quadratique\n   est remplace par un element lineaire.\n   Si on donne pour TYPE le mot 'QUADRATIQUE' chaque element lineaire\n   est remplace par un element quadratique.\n   Si on donne pour TYPE le mot 'QUAF' chaque element 'QUADRATIQUE' est\n   remplace par un element quadratique pour les fluides c'est a dire\n   complet : TRI6 -> TRI7, QUA8 -> QUA9 CU20 -> CU27 etc.\n\n   LENTI1  : Connectivite a etablir (type LISTENTI). GEO1 doit \u00eatre de\n             type POI1. GEO2 sera constitue d'autant d'elements que de\n             N-uplets de connectivite dans LENTI1.\n\n\n  \n3. Resultat de type CHPOINT \n--------------------------- \n   -----------------> a partir d'un MCHAML\n\n    CHP2 = CHAN  'CHPO'  MODL1 CHAM1 ( 'MOT1' );\n\n   En presence du mot cle 'CHPO', l'operateur CHAN construit le CHPOINT\n   CHPO2 a partir d'un nouveau champ par element CHAM1 (type MCHAML).\n   \n   Ce CHPOINT sera appuye sur les noeuds du maillage, sous-jacent au\n   modele MODL1 (type MMODEL), en calculant : \n   - la moyenne des valeurs aux noeuds des elements adjacents \n     si MOT1 est egal a 'MOYE' (option par defaut), \n   - ou la somme des contributions de chaque element aux noeuds\n     si MOT1 vaut 'SOMM'.\n   Ces valeurs aux noeuds sont determinees soit par extrapolation a\n   partir des valeurs connues a l'interieur de l'element en cas de\n   champ de sous-type SCALAIRE, en utilisant une methode de moindres\n   carres et les fontions de forme de l'element, soit par moyenne\n   directe de ces valeurs pour les champs de tout autre type.\n   Le CHPOINT resultat est de nature diffuse.\n   \n   Si MOT1 vaut 'SUPP', alors le CHPOINT cree sera appuye sur les points\n   d'integration supportant le MCHAML. Aucune extrapolation n'intervient\n   alors dans son calcul.\n\n\n   -----------------> pour changer la TITRE d'un CHPOINT\n\n    CHP2 = CHANGER  'TITRE' CHP1 MOT1 ;\n\n\n   En presence du mot cle 'TITRE' l'operateur CHANGER cree un champ\n   de point (type CHPOINT) CHP2 identique a CHP1 mais dont le titre\n   a ete change en MOT1 (72 caracteres maxi.)\n\n\n\n   -----------------> pour changer la NATURE d'un CHPOINT\n\n    CHP2 = CHANGER  'ATTRIBUT' CHP1  'NATURE'    | 'INDETER'  |\n                                                 | 'DIFFUS'   |\n                                                 | 'DISCRET'  | ;\n\n\n   En presence du mot cle 'ATTRIBUT' l'operateur CHANGER cree un champ\n   de point (type CHPOINT) CHP2 identique a CHP1 mais dont les attributs\n   peuvent etre modifies par les autres mots cles de la commande\n   (par exemple 'NATURE' et 'DIFFUS' ).\n   Il est conseille de respecter la position des termes de la commande.\n\n\n   -----------------> pour changer les noms de COMPosante d'un CHPOINT\n\n    CHPO2 = CHAN 'COMP' | MOT1              | CHPO1 ('NATU' |'INDETER'\n                        | LISTMOT1 LISTMOT2 |               |'DIFFUS'\n                                                            |'DISCRET');\n\n   En presence du mot-cle 'COMP' l operateur cree un nouveau champ par\n   points en changeant eventuellement le nom de certaines composantes.\n\n   Le champ par elements ne doit comporter qu'un constituant.\n   On utilise la syntaxe specifiant un mot dans les cas ou le champ par\n   points, ou le champ par elements, possede une composante. Dans les\n   autres cas, on precise la liste des composantes a renommer selon une\n   seconde liste.\n\n    CHPO1   : champ par points (type CHPOINT)\n    MOT1    : nouveau nom attribue a la composante (type MOT)\n    LISMOT1 : liste des composantes a renommer (type LISTMOTS)\n    LISMOT2 : liste des nouvelles composantes (type LISTMOTS)\n    CHPO2   : objet resultat (type CHPOINT)\n\n   Remarques :\n\n    1. Les noms de composantes font 4 caracteres.\n\n    2. La liste LISMOT1 des composantes a remplacer dans CHPO1 peut\n       n'etre qu'une sous-liste de la liste de toutes les composantes\n       de CHPO1. La i-eme composante de LISMOT1 sera remplacee par la\n       i-eme composante de LISMOT2 (ces deux listes doivent avoir la\n       meme longueur, celle-ci etant inferieure ou egale au nombre de\n       composantes).\n\n\n  \n4. Resultat de type MCHAML \n-------------------------- \n   -----------------> pour changer le support d'un MCHAML\n\n    CHAM2 = CHAN  | 'NOEUD'    |  MODL1  CHAM1 (TYP1) ;\n                  | 'GRAVITE'  |\n                  | 'RIGIDITE' |\n                  | 'MASSE'    |\n                  | 'STRESSES' |\n\n   En presence  de l'un  des  mots-cles  'NOEUD', 'GRAVITE', 'RIGIDITE',\n   'MASSE', 'STRESSES', l'operateur CHAN construit a partir du champ par\n   element CHAM1 (type MCHAML) et d'un objet modele MODL1 (type MMODEL),\n   un champ par  element CHAM2 de  meme type que  CHAM1 (ou de type TYP1\n   (type MOT)) appuye respectivement aux noeuds, aux centres de gravite,\n   aux points d'integration de  la raideur, aux points  d'integration de\n   la  masse  aux points  de calcul  des  contraintes  des  elements. On\n   utilise pour cela une methode  de moindres carres et les fonctions de\n   forme de l'element.\n\n\n   -----------------> a partir d'un CHPOINT\n\n    CHAM1 = CHAN  'CHAM'  CHPO1  | GEO1  ;\n                                 | MODL1 | ('NOEUD')  ) | (TYP1) ;\n                                         | ('GRAVITE' ) |\n                                         | ('RIGIDITE') |\n                                         | ('MASSE'   ) |\n                                         | ('STRESSES') |\n\n   En presence du mot-cle 'CHAM', l'operateur CHAN cree un champ par\n   element CHAM1 (type MCHAML) a partir d'un champ par point CHPO1\n   (type CHPOINT) appuye sur un MAILLAGE GEO1 ou sur un modele MODL1\n   (type MMODEL).  On peut alors dans ce dernier cas indiquer le lieu\n   on l'on souhaite que le MCHAML soit appuye : aux noeuds ( option\n   par defaut ), au centre de gravite, aux points d'integration de la\n   raideur, aux points d'integration de la masse, aux points de calcul\n   des contraintes dans les elements et on peut egalement indiquer un\n   sous-type TYP1 (type MOT) pour le MCHAML resultat (mis a blanc par\n   defaut).\n   Dans le cas d'un champ de temperature defini sur des coques avec\n   integration dans l'epaisseur, T en chaque point de Gauss est calculee\n   en fonction de T,TINF,TSUP suivant une variation parabolique dans\n   l'epaisseur.\n\n\n   -----------------> pour changer les noms de COMPosante d'un MCHAML\n\n    CHE2 = CHAN 'COMP' | MOT1              | CHE1  ;\n                       | LISTMOT1 LISTMOT2 |\n\n   En presence du mot-cle 'COMP' l operateur cree un nouveau champ par\n   elements en changeant eventuellement le nom de certaines composantes.\n\n   Le champ par elements ne doit comporter qu'un constituant.\n   On utilise la syntaxe specifiant un mot dans les cas ou le champ par\n   points, ou le champ par elements, possede une composante. Dans les\n   autres cas, on precise la liste des composantes a renommer selon une\n   seconde liste.\n\n    CHE1    : champ par elements (type MCHAML)\n    MOT1    : nouveau nom attribue a la composante (type MOT)\n    LISMOT1 : liste des composantes a renommer (type LISTMOTS)\n    LISMOT2 : liste des nouvelles composantes (type LISTMOTS)\n    CHE2   : objet resultat (type MCHAML)\n\n   Remarques :\n\n    1. Les noms de composantes font 4 caracteres.\n\n    2. La liste LISMOT1 des composantes a remplacer dans CHE1 peut\n       n'etre qu'une sous-liste de la liste de toutes les composantes\n       de CHE1. La i-eme composante de LISMOT1 sera remplacee par la\n       i-eme composante de LISMOT2 (ces deux listes doivent avoir la\n       meme longueur, celle-ci etant inferieure ou egale au nombre de\n       composantes).\n\n\n   -----------------> pour changer le TYPE d'un MCHAML\n\n    CHAM2 = CHAN  'TYPE'  CHAM1   TYP1  ;\n\n   En presence du mot-cle 'TYPE' ,l'operateur CHAN cree un nouveau\n   champ par element CHAM2 (type MCHAML) avec le sous-type  decrit par\n   le chaine de caracteres TYP1 a partir d'un nouveau champ par element\n   CHAM1 (type MCHAML) .\n\n\n   -----------------> pour changer le CONStituant d'un MCHAML\n\n    CHAM2 = CHAN  'CONS'  CHAM1   MOT1  ;\n\n   En presence du mot-cle 'CONS' ,l'operateur CHAN cree un nouveau\n   champ par element CHAM2 (type MCHAML) dont les sous zones ont\n   pour noms de constituants MOT1. Le champ CHAM1 ne doit avoir qu'un\n   seul nom de constituant.\n\n\n  \n5. Resultat de type MMODEL \n-------------------------- \n   -----------------> pour changer le CONStituant d'un MMODEL\n\n    MOD2 = CHAN  'CONS'  MOD1   MOT1  ;\n\n   En presence du mot-cle 'CONS', l'operateur CHAN cree un nouveau\n   objet modele MODE2 (type MMODEL) dont les sous zones ont pour\n   nom de constituant MOT1. MOD1 (type MMODEL) ne doit avoir qu'un\n   seul nom de constituant.\n\n\n  \n6. Resultat de type MATRIK \n-------------------------- \n   -----------------> pour changer les INCOnnues d'une MATRIK\n\n    cf. remarque pour les objets de type RIGIDITE\n\n\n  \n7. Resultat de type RIGIDITE \n---------------------------- \n   -----------------> pour changer les INCOnnues d'une RIGIDITE\n\n    RIG2  = CHAN 'INCO' RIG1 | LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 | ...\n                             |     MOT1     MOT2     MOT3     MOT4 |\n                             |                  'COMPL'            |             \n\n          ... | ('SYME') |  | ('MULT') | ;\n              | ('ANTI') |  | ('DUPL') |\n              | ('QUEL') |\n\n   RIG1 :  objet rigidite\n   LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 : objets listmots\n\n\n   Si on veut  changer le nom des composantes primales et duales\n   d'une matrice. LISTMOT1 et LISTMOT2, de meme longueur, donnent\n   respectivement les noms initiaux des inconnues primales et\n   leurs nouveaux noms. LISTMOT3 et LISTMOT4  agissent sur les\n   inconnues duales. A la place des LISTMOTS, on peut donner des\n   MOT.\n\n   Si le mot COMPLEXE est founit a la place des LISTMOTS on fait\n   preceder chaque nom d'inconnues par la lettre I.\n\n   Si necessaire, on peut changer le type de matrice a l'aide des\n   mots cles 'SYME' (matrice symetrique), 'ANTI' (matrice\n   antisymetrique) ou 'QUEL' (matrice quelconque). Par defaut,\n   RIG2 est de nature QUELconque.\n\n   En effet, dans le cas de couplages multi-physiques, les matrices\n   blocs du syst\u00e8me peuvent etre sym\u00e9triques sans que le syst\u00e8me\n   assembl\u00e9 ne le soit, ce qui engendre une erreur au moment de la\n   r\u00e9solution.  Ce choix par d\u00e9faut permet d'\u00e9viter cette erreur.\n\n   Attention, au niveau de la resolution, la recuperation des\n   multiplicateurs de Lagrange ne peut se faire que si les noms\n   d'inconnues sur lesquelles ils agissent soient reperes au\n   prealable. C'est le cas pour les noms generes par COMPLEXE\n   mais ce n'est pas le cas de la majorite des noms.\n\n   Le mot cle 'MULT' permet de forcer le changement de nom de\n   composantes des multiplicateurs de Lagrange.\n\n   Le mot-cle 'DUPL' permet de creer un nouveau noeud support\n   associe a chaque multiplicateurs de Lagrange LX de la rigidite.\n   Exemple :\n   Rel1 = BLOQ UX p1;\n   Rel2 = CHAN 'INCO' Rel1 (mots UX LX) (mots FX FLX)\n                           (mots UY LX) (mots FY FLX) 'DUPL';\n   --> Rel2 est ainsi une matrice de relation similaire a celle qu'on\n       obtiendrait avec la commande : Rel2 = BLOQ UY p1;\n\n\n   -----------------> pour changer le TYPE d'une RIGIDITE\n\n    RIG2  = CHAN  'TYPE'  RIG1 MOT1 ;\n\n   En pr\u00e9sence du mot-cl\u00e9 'TYPE', CHANger cr\u00e9e une rigidit\u00e9 RIG2\n   identique \u00e0 RIG1 mais avec un sous-type diff\u00e9rent pr\u00e9cis\u00e9 par MOT1\n   ('RIGIDITE', 'AMORTISS', ou 'MASSE' par exemple).\n\n\n   -----------------> pour creer une RIGIDITE de DEPEndance\n\n    rig2 = CHAN  'DEPE'   RIG1   ;\n\n   rig1 : matrice  de relations ( rela accro)\n   rig2 : matrice  de dependance\n\n   Transformation d une matrice de relations en matrice de dependances\n   Permet d'operer une condensation  elimination  des ddl liees (voir\n   utilisation dans CMCT).\n   Si cette matrice est passee a RESOU avec les raideurs normales\n   a la place des relations dont elle est issue, le resultat est\n   identique mais la resolution  est faite sur une matrice de taille\n   reduite\n\n\n   -----------------> pour creer les RIGIDITE de CONDensation et duales\n\n    rig2 rig3 = CHAN  'COND'   RIG1   ;\n\n   rig1 : matrice de relations ( rela accro )\n   rig2 : matrice de condensation\n   rig3 : matrice duale de rig2\n\n   Si on veut  operer une condensation en dehors de RESOU par\n   CMCT puis une resolution, le second membre doit etre egalement\n   condense par :\n\n             chpo3 = chpo2 * rig3\n\n    remontee sur les ddl elimines apres resolution\n\n             chpo4 = solution * rig2 ;\n\n\n  \n8. Resultat de type CHARGEMENT \n------------------------------ \n   -----------------> pour changer la forme d'un CHARGEMEnt\n\n      CHARG1= 'CHAN' 'TABL' CHARG2  MOTYP;\n\n   Il s'agit de mettre sous la forme d'un chargement defini\n   par deux tables tous les chargements de CHARG2 de type\n   MOTYP ('MECA' ...)  dans le but de reduire le temps d'acces\n   par l'operateur TIRE. Ceci est utile dans le cas ou le nombre de\n   chargement est tres eleve par exemple en seisme.\n\n   CHARG2  : objet chargement\n\n   MOTYP   : objet mot contenant le typer du chargement considere\n\n   CHARG1  : objet resulat de type chargement equivallent a charg2 sauf\n             pour la presentation sous forme table-table du type MOTYP\n\n\n  \n9. Resultat de type MOT \n----------------------- \n   -----------------> pour changer la casse d'un mot\n\n\n      MOT2 = 'CHAN'  | 'MAJU' | MOT1 ;\n                     | 'MINU' |\n\n   Change la casse d'une chaine de caracteres.\n   Avec l'option 'MAJU', les lettres minuscules sont mises en\n   majuscules.\n   Avec l'option 'MINU', les lettres majuscules sont mises en\n   majuscules.\n\n   MOT2  : objet de type MOT resultat\n   MOT1  : objet de type MOT operande\n\n  \n10. Resultat de type EVOLUTION \n------------------------------ \n   -----------------> pour changer le titre d'une evolution\n\n      EVOL2 = CHAN 'TITR' EVOL1  MOT1;\n\n   MOT1 : nouveau titre general des courbes de l'objet evolution\n\n\n   -----------------> pour changer le titre de la legende d'une courbe\n                      contenue dans une evolution\n\n      EVOL2 = CHAN 'LEGE' EVOL1 k MOT1;\n\n   k    : numero de la courbe a traiter (par defaut, toutes les courbes\n          seront traitees)\n   MOT1 : nouveau titre de legende de la k ieme courbe\n\n\n   -----------------> pour changer le nom de l'abscisse d'une courbe\n                      contenue dans une evolution\n\n      EVOL2 = CHAN 'NOMABS' EVOL1 k MOT1;\n\n   k    : numero de la courbe a traiter (par defaut, toutes les courbes\n          seront traitees)\n   MOT1 : nouveau nom de l'abscisse de la k ieme courbe\n\n\n   -----------------> pour changer le nom de l'ordonnee d'une courbe\n                      contenue dans une evolution\n\n      EVOL2 = CHAN 'NOMORD' EVOL1 k MOT1;\n\n   k    : numero de la courbe a traiter (par defaut, toutes les courbes\n          seront traitees)\n   MOT1 : nouveau nom de l'ordonnee de la k ieme courbe",
  },
  {
    name: "CHANOLII",
    url: "CHANOLII",
    documentation:
      "$$$$ CHANOLII NOTICE  CHAT      11/09/12    21:15:21     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHANOLII                        Voir aussi : METH OBJE\n     ---------------                                      CHDCLIM                 \n      CHANOLII MOT1 LENT1\n\n\n        Objet\n        -----\n\n     La methode CHANOLII charge l'objet LENT1 de type LISTENTI\n     dans l'element %MOT1 d'un objet CHDCLIM.",
  },
  {
    name: "CHANUOBJ",
    url: "CHANUOBJ",
    documentation:
      "$$$$ CHANUOBJ NOTICE  CHAT      11/09/12    21:15:22     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHANUOBJ                        Voir aussi : METH OBJE\n     ---------------                                      INDIOBJE  \n      CHANUOBJ ENTI1 OBJ1\n\n\n        Objet\n        -----\n\n     La methode CHANUOBJ charge l'objet OBJ1 de type OBJET\n     dans l'element %ENTI1 d'un objet INDIOBJE.",
  },
  {
    name: "CHANVCOM",
    url: "CHANVCOM",
    documentation:
      "$$$$ CHANVCOM NOTICE  CHAT      11/09/12    21:15:22     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHANVCOM                        Voir aussi : METH DONCHI1\n     ---------------                                      OBJE  LINVCOMP  \n      CHANVCOM ENTI1 OBJ1\n\n\n        Objet\n        -----\n\n     La methode CHANVCOM charge l'objet OBJ1 de CLASSE LINVCOMP\n     a l'indice ENTI1 de l'element %NVCOMP d'un objet DONCHI1.",
  },
  {
    name: "CHANVESP",
    url: "CHANVESP",
    documentation:
      "$$$$ CHANVESP NOTICE  CHAT      11/09/12    21:15:22     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHANVESP                        Voir aussi : METH DONCHI1\n     ---------------                                      OBJE  LIESPECE  \n                                                \n      CHANVESP ENTI1 OBJ1\n\n\n        Objet\n        -----\n\n     La methode CHANVESP charge l'objet OBJ1 de CLASSE LIESPECE\n     a l'indice ENTI1 de l'element %NVESP d'un objet DONCHI1.",
  },
  {
    name: "CHANVSOS",
    url: "CHANVSOS",
    documentation:
      "$$$$ CHANVSOS NOTICE  CHAT      11/09/12    21:15:22     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHANVSOS                        Voir aussi : METH DONCHI1\n     ----------------                                     OBJE  LIRSOSO  \n      CHANVSOS ENTI1 OBJ1\n\n\n        Objet\n        -----\n\n     La methode CHANVSOS charge l'objet OBJ1 de CLASSE LIRSOSO\n     a l'indice ENTI1 de l'element %NVSOSO d'un objet DONCHI1.",
  },
  {
    name: "CHAR",
    url: "CHAR",
    documentation:
      "$$$$ CHAR     NOTICE  FD218221  21/04/23    21:15:01     10975          \n                                             DATE     21/04/23\n\n    Operateur CHARGEMENT                     Voir aussi : FORC PLUS TOUR\n    --------------------                                  TIRE PROI FORM  \n           CHAR1 = CHAR (MOT) | CHE1  | (EVOL1) |  ... (|'LIBRE'|)\n                              | CHPO1 |                 |'LIE ' |\n                              | TABLE1  TABLE2|\n\n       ... ( | 'TRAN' VEC1 EVOL2                |  ) ;\n             | 'ROTA' POIN1 (POIN2 si 3D) EVOL2 |\n             | 'TRAJ' CHPO2                     |\n\n\n\n    Objet :\n    _______\n\n    L'operateur CHAR construit un objet CHAR1 de type CHARGEMENT,\n  de sous-type FORCE, contenant la description spatiale et temporelle du\n  chargement. On peut associer a l'objet CHARGEMENT un nom (donnee\n  facultative).\n\n    On peut specifier un chargement non-lie au milieu etudie en definissant\n  un champ sur des points n'appartenant pas a ce milieu et en utilisant le\n  mot-cle 'LIBRE'. C'est par exemple le cas d'un outil d'usinage qui voit\n  defiler une piece. On specifie le deplacement eventuel d'un CHARGEMENT de\n  nature 'LIBRE' ou 'LIE ', en le definissant sur des points n'appartenant\n  pas au milieu etudie, et en utilisant l'une des options 'TRAN', 'ROTA'\n  ou 'TRAJ'.\n\n    Dans le cadre de la procedure PASAPAS, le chargement est evalue :\n  s'il est de nature LIBRE, il s'applique tel quel, sinon, il s'applique\n  au milieu sur la configuration initiale, puis est transporte sur la\n  configuration actuelle.\n\n    On peut egalement specifier un CHARGEMENT de nom TRAJ pour definir une\n  trajectoire. Dans ce cas, l'operateur prend comme argument le champ\n  d'abscisse curviligne le long de cette trajectoire (ligne maillee) et\n  l'evolution de cette abscisse au cours du temps. Le nom de chargement\n  TRAJ est ainsi reserve.\n\n    Enfin, on peut specifier un CHARGEMENT de nom MAIL, MODE ou RIGI pour\n  ordonner en fonction du temps des maillages, modeles ou rigidites.\n  Dans ce cas, l'operateur utilise la syntaxe avec des tables.\n\n    Commentaire :\n    _____________\n\n       MOT     : donnee facultative.\n                 type CHARACTER*4\n                 Dans le cas de l'utilisation de la procedure\n                 PASAPAS ce mot est indispensable.\n                    \n                    *** MECANIQUE ***\n                    -  la   pression                         PRES\n                    -  les  deplacements imposes             DIMP\n                    -  l'increment de deplacement impose     DINC\n                    -  les  deformation libres imposes       DEFI\n                    -  Les  autres chargements (meca)        MECA\n                    -  la   temperature                      T\n                    -  Flux (en consolidation)               FLUX\n                    -  les  blocages mecaniques              BLOM\n                    -  Des  parametres externes de nom       MOT1\n\n                    *** THERMIQUE ***\n                    -  les  temperatures imposees            TIMP\n                    -  Les  flux de chaleur                  Q\n                    -  Les  temperatures ext.(convection)    TECO\n                    -  Les  temperatures ext.(rayonnement)   TERA\n                    -  les  blocages thermiques              BLOT\n\n                    *** DIFFUSION *** (Si 'INCO' 'CO' 'QCO')\n                    -  la   concentration                    CO  \n                    -  les  concentrations imposees          CIMP\n                    -  Les  flux de diffusion                QCO\n                    -  les  blocages diffusions              BLOD\n\n                    *** MODELE ***\n                    -  le   modele                           MODE\n                    -  les  caracteristiques                 MATE\n\n       CHPO1 ou CHE1  : description spatiale du chargement\n                 type CHPOINT ou MCHAML\n\n       EVOL1   : donnee facultative\n                 description temporelle du chargement (type EVOLUTION) :\n                 fonction contenant en abscisse les temps (dans l'ordre\n                 chronologique) et en ordonnee les valeurs F(TEMP) de la\n                 fonction F aux temps TEMP.\n                 Par defaut, le chargement est constant.\n\n ou\n\n       TABLE1  : Table indicee par des entiers pointant vers les\n                 temps (type FLOTTANT). Cette liste d'entiers est\n                 obligatoirement egale a ( 0 1 2 3 ... N ).\n\n       TABLE2  : Table indicee par ces memes entiers pointant vers\n                 des CHPOINTS ou des MCHAMLS\n\n\n\n      'LIBRE','LIE ' : Mot-cle facultatif precisant la dependance du\n                 chargement au milieu etudie (par defaut 'LIE ').\n\n      'TRAN'   : mot-cle facultatif, indiquant que le chargement est\n                 anime d'un mouvement de translation relativement au\n                 corps modelise, suivi de :\n\n       VEC1    : vecteur de translation (type POINT)\n       EVOL2   : description temporelle de la translation (type\n                 EVOLUTION), fonction contenant en abscisse les temps\n                 (dans l'ordre chronologique ) et en ordonnee les\n                 valeurs de la vitesse\n\n ou\n\n      'ROTA'   : mot-cle facultatif, indiquant que le chargement est\n                 anime d'un mouvement de rotation relativement au\n                 corps modelise, suivi de :\n\n  POIN1 POIN2  : points (type POINT) definissant l'axe (oriente) de rotation\n        EVOL2  : description temporelle de la rotation (type EVOLUTION),\n                 fonction contenant en abscisse les temps\n                 (dans l'ordre chronologique ) et en ordonnee les\n                 valeurs de la vitesse angulaire\n\n ou\n\n      'TRAJ'   : mot-cle facultatif, indiquant que le chargement est\n                 anime d'un mouvement relativement au corps modelise,\n                 defini par une trajectoire, suivi de :\n       CHPO2   : ensemble des points de la trajectoire constituant le\n                 support geometrique de l'objet de type CHPOINT, muni\n                 d'une composante scalaire de titre 'TEMP', dont les\n                 valeurs sont les dates de la chronologie. Le support\n                 du champ doit etre construit en respectant cette chronologie.\n\n   Remarque :\n\n  - Pour la donnee du chargement de type TECO et TERA le nom de la\n    composante du CHPOINT definissant la temperature exterieure doit\n    etre T. Dans le cas de TECO pour des elements coques ont peut\n    aussi specifier  TINF ou TSUP pour une convection sur face\n    inferieur ou superieur",
  },
  {
    name: "CHARTHER",
    url: "CHARTHER",
    documentation:
      "$$$$ CHARTHER NOTICE  FANDEUR   17/04/06    21:15:01     9389           \n                                             DATE     17/04/06\n\n    Procedure CHARTHER                       Voir aussi : PASAPAS\n    ------------------                                    \n           TAB1   = CHARTHER  TAB2  FLOT1 ;\n\n\n    Objet :\n    _______\n\n   La procedure CHARTHER est a surcharger par l'utilisateur quand \n il souhaite definir ses propres conditions aux limites thermiques \n \"non conservatives\" qui doivent etre mises a jour au cours des \n iterations du schema de calcul d'un pas de temps de thermique.\n\n [Nota : Le rayonnement est traite dans la procedure specifique de \n         nom \"PAS_RAYO\". La procedure \"CHARTHER\" est reservee aux \n         seules fins specifiques d'un utilisateur (eclaire). ]\n\n\n    Commentaire :\n    _____________\n\n       TAB2     : c'est la table entree dans PASAPAS\n\n       FLOT1    : instant (FLOTTANT) pour lequel on veut calculer des termes\n                  de flux (second membre) et/ou des relations (matrice)\n\n       TAB1     : est une table dont les indices sont\n\n                   -  'ADDI_SECOND'  pointe un chpoint second membre\n\n                   -  'ADDI_MATRICE'  pointe une matrice a mettre au \n                      premier membre\n ",
  },
  {
    name: "CHAU",
    url: "CHAU",
    documentation:
      "$$$$ CHAU     NOTICE  CHAT      11/09/12    21:15:23     7124           \n                                             DATE     11/09/12\n\n  Operateur CHAUSSETTE                          Voir aussi :\n    --------------------  \n    ENT1=CHAU 'SERVEUR'                      ('ATTENTE' ENT4);\n    ENT1=CHAU 'CLIENT' MOT1;\n    ENT1=CHAU 'ECRITURE' LREE1      ('ECHO') ('ATTENTE' ENT4);\n    ENT1=CHAU 'ECRITURE' MOT2       ('ECHO') ('ATTENTE' ENT4);\n    ENT1 LREE2=CHAU 'LECTLIST' ENT2 ('ECHO') ('ATTENTE' ENT4);\n    ENT1 MOT3=CHAU 'LECTUMOT' ENT3  ('ECHO') ('ATTENTE' ENT4);\n    ENT1=CHAU 'FERMETURE' ('COMPLETE');\n\n    Objet :\n    -------\n\n    L'operateur CHAUSSETTE permet d'ouvrir un port de communication\n(service castem/numero 2000) soit comme serveur (mot cle 'SERVEUR')\nsur l'ordinateur courant, soit de type client (mot cle 'CLIENT') sur\nl'ordinateur-hote de nom MOT1 (type MOT). \n\n    On peut ensuite ecrire sur le port (mot cle 'ECRITURE') la suite\nde flottant LREE1 (type LISTREEL) ou un mot MOT2 (type MOT), ou bien \nlire sur le port (mot cle 'LECTLIST') la suite de flottant LREE2 \n(type LISTREEL) de longueur ENT2 (type ENTIER) ou bien (mot cle \n'LECTUMOT') le mot MOT3 (type MOT) de longueur ENT3 (type ENTIER).\n\n    En fin d'utilisation, le port est ferme (mot cle 'FERMETURE').\n\n    Remarque :\n    ----------\n\n    1) Le processus de lecture etant bloquant (du moins pendant un laps\nde temps donne - voir remarque 3), CHAUSSETTE permet d'implenter non\nseulement une ligne de communication, mais aussi un semaphore.\n\n    2) Lors de la transmission des donnees on peut travailler avec un\necho (mot cle 'ECHO'). En ecriture, on attend la lecture de l'echo\nque l'on compare au paquet original. En lecture on retransmet en \necriture le paquet que l'on vient de lire.\n\n    3) Toute les operations de lecture, ainsi que l'attente du serveur\npour un client, sont affectees d'un temps d'attente maximum de 30\nsecondes avant sortie avec erreur. On peut modifier ce temps en\nintroduisant le mot cle 'ATTENTE' suivi du nouveau temps d'attente ENT4\n(type ENTIER) exprime en seconde.\n\n    4) ENT1 (type ENTIER) permet de verifier si l'operation demandee a \nete effectivement realisee. Le code suivant est utilise:\n\n    ENT1=1  : pas de probleme,\n    ENT1=-1 : l'operation n'a pas ete realisee au niveau du port,\n    ENT1=-2 : les donnees ont ete inaccessibles sur le reseau dans\n              le temps d'attente.\n    ENT1=-3 : en mode 'ECRITURE' avec 'ECHO', on ne relit pas exactement\n              ce que l'on a transmis\n\n    5) Dans le cas d'une ouverture en mode 'SERVEUR', le port peut etre mis\nen mode de 'FERMETURE' complete (mot cle 'COMPLETE') ou partielle. Si la\nfermeture est partielle, le serveur fonctionne en mode incremental et peut\nen particulier satisfaire, lors d'une re-ouverture en mode 'SERVEUR', la\nconnection avec un client en attente de communication. Dans le cas d'une\nfermeture incomplete, le port ne peut etre ouvert en mode 'CLIENT'. Dans le\ncas d'une fermeture complete, on ne peut effectuer une reouverture en mode\n'SERVEUR' que lorsque tous les clients ont ete fermes.\n\n ",
  },
  {
    name: "CHDCLIM",
    url: "CHDCLIM",
    documentation:
      "$$$$ CHDCLIM  NOTICE  CHAT      11/09/12    21:15:23     7124           \n                                             DATE     11/09/12\n                                             \n     Methode CHDCLIM                         Voir aussi : METH CHANOLII\n     ---------------                                      OBJE  CH2CLIM  \n      OBJ1 = OBJET CHDCLIM ;\n\n\n        Objet\n        -----\n\n     La methode CHDCLIM definit un objet de CLASSE CHDCLIM.\n     Les elements sont des mots definis par l'utilisateur.\n     Methode associee:  GDCLIM.\n             appel: OBJ1%GDCLIM MOT1 LENT1 ;",
  },
  {
    name: "CHI1",
    url: "CHI1",
    documentation:
      "$$$$ CHI1     NOTICE  CHAT      11/09/12    21:15:24     7124           \n                                             DATE     11/09/12\n  \n  Operateur CHI1                                Voir aussi :\n   --------------  \n       TAB2 = CHI1 TAB1 'COMP' VAL1 < 'LOGK' VAL2 > <'ENTH' VAL3 >    ;\n\n\n        Objet\n       -------\n       Le but est de calculer la speciation d'une eau, en tout point\n       d'un domaine a partir de la donnee des concentrations analytiques\n       de chaque composant chimique du systeme. Le calcul se fait en\n       deux temps a l'aide des operateurs CHI1 et CHI2.\n       CHI1 rassemble toutes les donnees relatives a un systeme chimique,\n       et CHI2 effectue la speciation.\n        La terminologie est celle de Mineql.\n\n          Toutes les concentrations sont donnees en moles par litre.\n\n       Commentaires\n       ------------\n       TAB1 est une TABLE indicee par les mots:\n            'IDEN'  <'CHXMX'>  <'BDD'>  <'CLIM'>  <'NVCOMP'>\n            <'NVESP'> <'ECHANGE'>  <'TEMPERATURE'>\n\n       TAB1.IDEN est un objet de type LISTENTI contenant les\n             identifiants (dans la base de donnees),des composants chimi\n             ques a utiliser.\n\n       TAB1.CHXMX est un objet de type LISTENTI contenant les identifi\n             ants des mineraux a retenir. A defaut on conserve tous les\n             mineraux dont les composants sont dans TAB1.IDEN.\n\n       TAB1.BDD  contient un mot servant a preciser le format de la base\n             de donnees. 'STRASBG' ou 'MINEQL' .\n             'MINEQL' correspond a la base de donnees standard de Mineql.\n             'STRASBG' correspond a la base de donnees issue de Kindis.\n             Les formats sont decrits dans le rapport DMT/94/597.\n             L'option par defaut est 'MINEQL'.\n\n       TAB1.CLIM  est une TABLE servant a definir les contraintes chimi\n             ques. Cette TABLE est indicee par des mots tous facultatifs.\n             <'TYP3'> <'COMP3'> <'TYP4'>  <'TYP5'> <'TYP6'>\n\n             TAB1.CLIM.TYP3 est un objet de type LISTENTI contenant les\n                  identifiants des especes dont on veut imposer l'activi\n                  te.\n\n             TAB1.CLIM.COMP3  est un objet de type LISTENTI contenant\n                  pour chacune des especes de TAB1.CLIM.TYP3 l'identifi\n                  ant du composant immobile . Si TAB1.CLIM.TYP3 ne\n                  contient que des especes simples cette donnee est \n                  inutile.\n\n             TAB1.CLIM.TYP4 est un objet de type LISTENTI contenant les\n                  identifiants des especes precipitees.\n\n             TAB1.CLIM.TYP5 est un objet de type LISTENTI contenant les\n                  identifiants des especes en solution, pouvant etre\n                  precipites.\n\n             TAB1.CLIM.TYP6 est un objet de type LISTENTI contenant les\n                  identifiants des especes non prises en compte.\n\n       TAB1.NVCOMP  est une TABLE permettant de rajouter des composants\n            (ne figurant pas dans la base de donnees). Pour n composants\n             , cette TABLE sera indicee par des nombres de 1 a n.\n             Pour le i ieme composant a rajouter TAB1.NVCOMP.i sera une\n             TABLE indicee par les mots:  'IDEN' 'NOM' 'CHARGE'\n             TAB1.NVCOMP.i.IDEN est un entier identifiant du nouveau\n                       composant.\n             TAB1.NVCOMP.i.NOM est un mot nom de ce composant\n             TAB1.NVCOMP.i.CHARGE  est un entier charge de l'espece\n                       simple associee.\n\n       TAB1.NVESP est une TABLE permettant de rajouter ou de modifier \n             des especes.Pour n especes, cette TABLE sera indicee par\n             des nombres, de 1 a n.\n             Pour la i ieme espece a rajouter TAB1.NVESP.i sera une\n             TABLE indicee par les mots:\n                  'IDEN' 'LOGK' <'ITYP'> <'COMP'> <'STOECH'>\n\n             TAB1.NVESP.i.IDEN est un entier identifiant de l'espece\n\n             TAB1.NVESP.i.LOGK est un reel logk de l'espece\n\n             TAB1.NVESP.i.ITYP entier type de l'espece\n                               2   complexe en solution\n                               3   activite fixee\n                               4   mineraux precipites\n                               5   mineraux dissous\n                               6   non pris en compte dans le calcul\n\n             TAB1.NVESP.i.COMP objet LISTENTI contenant les identifiants\n                              des composants de l'espece. Le nombre de\n                              ces identifiants doit etre inferieur a 4\n                              pour une base de donnee de type MINEQL\n                              et inferieur a 8 pour une base de donnee\n                              de type STRASBG.\n\n             TAB1.NVESP.i.STOECH    objet LISTREEL coefficient\n                              stoechiometrique correspondant a chacun \n                              de ces composants.\n             TAB1.NVESP.i.NOMESPECE  mot. Nom de cette nouvelle espece\n                               chimique. ( au plus 32 caracteres.La\n                               valeur par defaut est contituee de 32\n                               blancs)\n       \n       TAB1.NVSOSO est une TABLE permettant d'ajouter des solutions\n             solides (qui ne figurent pas encore dans les bases de \n             donnees). Pour n solutions solides, cette TABLE sera indicee \n             par des nombres, de 1 a n.\n             Pour la i ieme solution solide a ajouter TAB1.NVSOSO.i sera \n             une TABLE indicee par les mots:\n                      'IDEN' <'ITYP'> 'SOLID' <'FRACTIO'>\n\n             TAB1.NVSOSO.i.IDEN est un entier identifiant de la solution \n                              solide\n\n             TAB1.NVSOSO.i.ITYP entier type de la solution solide\n                               3  activite fixee\n                               4  solutions solides precipitees\n                               5  solutions solides dissoutes\n                               6  non pris en compte dans le calcul\n                         Pour les types 3 et 4, il faut obligatoirement\n                         donner les fractions molaires des poles des\n                         solutions solides; pour les types 5 et 6, ce \n                         n'est pas obligatoire.   \n\n              TAB.1.NVSOSO.i.SOLID objet LISTENTI contenant les \n                         identifiants des poles mineraux purs de la\n                         solution solide. Le nombre de ces poles doit\n                         etre inferieur a 36. Ces poles sont mis \n                         automatiquement en type 6 (ils servent au calcul,\n                         mais n'ont pas d'existance physique).\n               \n              TAB1.NVSOSO.i.FRACTIO objet LISTREEL contenant les fractions\n                         molaires correspondant a chacun des poles.\n                         (Si la solution solide est mise en type 3 ou 4, \n                         l'operateur chi1 a besoin des fractions molaires \n                         pour calculer les coefficients stoechiometriques\n                         ainsi que le logK de la solution solide. \n                         Si la solution solide est mise en type 5 ou 6, \n                         l'operateur chi2 calculera lui meme les fractions \n                         molaires et le reste).\n\n       TAB1.ECHANGE objet de type LISTENTI contenant les identifiants \n             des sites de surface par echange ionique.\n             L'espece simple associee sera mise automatiquement en \n             type 6 (sert au calcul mais n'a pas d'existence physique) .\n             Soient les deux epeces echangeables c1b et c2b telles que\n             n1 * c1b + n2 * c2b = ns ( nombre total de sites ) liees\n             par le coefficient de selectivite \n                                k12=(c1b/c1)**n2*(c2/c2b)**n1 .\n             On definira deux especes c1b et c2b dont les constantes\n             de formation seront  k1=c1b/c1*(cidx)**n1 et\n             k2=c2b/c2*(cidx)**n2  (avec cidx concentration de l'espece\n             simple associee au site) telles que k12=(k1)**n2/(k2)**n1.\n             Le coefficient d'activite des especes de surface est prise\n             egale a 1\n\n       TAB1.TEMPERATURE mot 'OUI'  'NON' ou entier (1 ou 2).\n              'NON' on ne tient pas compte de la temperature. C'est \n              l'option par defaut.\n            - Cas de la base STRASBG.\n              Si 'OUI' on prendra en compte les effets thermiques sur \n              le logk, par interpolation de donnees tabulees.\n            - Cas de la base MINEQL.\n               1 ou 'OUI' on utilise la premiere approximation d'Ulich\n                    K(T)=K0+f(H(T)-H(T0))\n\n               2 on utilise la deuxieme approximation d'Ulich \n                    K(T)=K0+f((H(T)-H(T0)),(Cp(T)-Cp(T0)))\n\n       COMP est un mot-cle\n\n       VAL1  est l'adresse du fichier de composants de la\n             base de donnees. Cette adresse peut etre, soit une chaine \n             de caracteres (le nom du fichier), soit un entier (l'unite\n             de lecture). Dans le cas ou l'on donne le nom du fichier, \n             le code lui affecte la premiere unite de lecture disponible\n             a partir de 80. Cette unite sera liberee a la sortie de\n             l'operateur.\n\n       LOGK  est un mot-cle\n\n       VAL2  est l'adresse du fichier de logk de la base de donnees.\n             Cette adresse peut etre,soit une chaine de caracteres\n             (le nom du fichier), soit un entier (l'unite de lecture).\n             Dans le cas ou l'on donne le nom du fichier, le code lui\n             affecte la deuxieme unite de lecture disponible a partir de\n             80. Cette unite sera liberee a la sortie de l'operateur.\n             Dans le cas ou les composants et les logk sont sur le meme\n             fichier il est inutile de preciser 'LOGK' VAL2, toutefois\n             si ces donnees figurent,le code reconnaitra que les\n             fichiers ont le meme nom et lira en sequence.\n\n       ENTH  est un mot-cle\n\n       VAL3  est l'adresse du fichier de la base de donnees,\n             permettant de prendre en compte les effets thermiques.\n             Cette adresse peut etre,soit une chaine de caracteres \n             (le nom du fichier),soit un entier (l'unite de lecture).\n             Dans le cas ou l'on donne le nom du fichier, le code \n             lui affecte la troisieme unite de lecture disponible a\n             partir de 80. Cette unite sera liberee a la sortie de \n             l'operateur.\n             Dans le cas ou ces donnees et les logk sont sur le meme\n             fichier il est inutile de preciser 'ENTH' VAL3, toutefois\n             si VAL2 et VAL3 sont identiques,le code lira en sequence.\n\n\n\n\n       TAB2 est une TABLE contenant le systeme chimique. Cette TABLE a\n            pour sous type CHIMI1, et elle est indicee par les mots:\n                    'DESCHI' 'IDEN' <'REDOX'>  <'TEMPE'>\n\n       TAB2.DESCHI est une TABLE contenant la description du systeme\n             chimique. Elle est indicee par les mots:\n            'IDX' 'NOM' 'CHARGE' 'IDY' 'NN' 'MATRICEA' 'LOGK' 'IDSURF'\n            <'IDZ' 'MATRICEF' 'IDP'>\n \n             TAB2.DESCHI.IDX  objet LISTENTI contenant les identifiants\n                   des composants retenus\n      \n             TAB2.DESCHI.NOM  objet LISTMOTS contenant les noms de ces\n                   composants (sur 32 caracteres).\n      \n             TAB2.DESCHI.CHARGE objet LISTENTI contenant la charge de\n                   ces composants.\n      \n             TAB2.DESCHI.IDY objet LISTENTI contenant les identifiants \n                   des especes retenues.\n\n             TAB2.DESCHI.NOMESPECE  objet LISTMOTS contenant les noms\n                   de ces especes (sur 32 caracteres).\n      \n             TAB2.DESCHI.NN objet LISTENTI de 6 valeurs contenant le\n                   nombre d'especes de chaque type c'est a dire:\n                    nombre d'especes simples en solution (type 1)\n                    nombre de complexes en solution (type 2)\n                    nombre d'especes a activite fixee (type 3)\n                    nombre de mineraux precipites (type 4)\n                    nombre de mineraux precipitables en solution(type 5)\n                    nombre d'especes non prises en compte dans le calcul\n                    (type 6)\n      \n             TAB2.DESCHI.MATRICEA objet LISTREEL matrice contenant les \n                   coefficients stoechiometriques de chaque espece.\n      \n             TAB2.DESCHI.LOGK  objet LISTREEL valeur pour chaque espece\n                   de la constante de formation logk.\n      \n             TAB2.DESCHI.IDSURF objet LISTENTI  nature des especes de \n                   type 2.\n                   0 en solution ,1 echange ionique (fixee) ,2 adsorbee\n\n             TAB2.DESCHI.IDZ objet LISTENTI contenant les identifiants \n                   des solutions solides retenues.\n\n             TAB2.DESCHI.IDP objet LISTENTI contenant les identifiants \n                   des poles de solutions solides retenus.\n\n             TAB2.DESCHI.MATRICEF objet LISTREEL matricie contenant les \n                   fractions molaires de chaque solution solide\n\n       TAB2.IDEN est une TABLE indicee par les mots:\n             'COMP' 'SOLU' 'NOMSOLU' <'PRECI' 'NOMPRECI'>\n             <'SURF' 'NOMSURF'>  <'TYP3' 'NOMTYP3'> <IMP3>\n             <'TYP6' 'NOMTYP6'>  <'PARF'> <'REAC'>  <'IMMO'>\n             <'SOSO' 'NOMSOSO' 'POLE' 'NOMPOLE'>\n\n             TAB2.IDEN.COMP objet de type LISTENTI entiers servant a\n                   decrire la nature des composants.\n                   1 conservatifs, 2 reactifs, 3 immobiles.\n      \n             TAB2.IDEN.SOLU objet LISTENTI identifiants des especes en\n                   solution\n      \n             TAB2.IDEN.NOMSOLU objet LISTMOTS noms attribues par le code\n                   a ces especes en solution. Ces noms ont 4 caracteres\n                   dont le premier est W suivi eventuellement de 0 ou 00\n                   et du numero d'ordre dans la liste TAB2.DESCHI.IDY de\n                   l'identifiant concerne.\n      \n             TAB2.IDEN.PRECI objet LISTENTI identifiants des especes \n                   precipites potentiels.\n      \n             TAB2.IDEN.NOMPRECI objet LISTMOTS noms attribues par le \n                   code a ces especes. Ces noms ont 4 caracteres dont le\n                   premier est W suivi eventuellement de 0 ou 00 et du\n                   numero d'ordre dans la liste  TAB2.DESCHI.IDY  de\n                   l'identifiant concerne.\n      \n             TAB2.IDEN.SURF objet LISTENTI identifiants des especes de \n                   surface.\n      \n             TAB2.IDEN.NOMSURF objet LISTMOTS noms attribues par le code \n                   a ces especes.\n      \n             TAB2.IDEN.TYP3 objet LISTENTI identifiants des especes dont\n                   l activite est imposee(meme liste que TAB1.CLIM.TYP3)\n      \n             TAB2.IDEN.NOMTYP3 objet LISTMOTS noms attribues par le code\n                   a ces especes.\n      \n             TAB2.IDEN.IMP3 objet LISTENTI identifiants des especes de\n                   type 3. (activite imposee, redox).\n      \n             TAB2.IDEN.TYP6  objet LISTENTI identifiants des especes non\n                   prises en compte dans le calcul.\n      \n             TAB2.IDEN.NOMTYP6  objet LISTMOTS noms attribues par le code\n                   a ces especes.\n      \n             TAB2.IDEN.PARF objet LISTENTI identifiants des composants \n                   non reactifs\n      \n             TAB2.IDEN.REAC objet LISTENTI identifiants des composants\n                   reactifs\n      \n             TAB2.IDEN.IMMO objet LISTENTI identifiants des composants\n                   non transportes( par exemple:composant de surface,\n                   composant associe a une espece a activite imposee )\n\n             TAB2.IDEN.SOSO objet LISTENTI identifiants des solutions \n                   solides.\n\n             TAB2.IDEN.NOMSOSO objet LISTMOTS noms attribues par le code a\n                   ces solutions solides.\n\n             TAB2.IDEN.POLE objet LISTENTI identifiant des poles de \n                   solutions solides.\n\n             TAB2.IDEN.NOMPOLE objet LISTMOTS noms attribues par le code a\n                   ces poles de solutions solides.\n\n       TAB2.REDOX objet TABLE contenant les donnees relatives aux redox.\n             Cette TABLE est indicee par les mots: 'I1' 'I2' 'A1' 'A2'\n\n             TAB2.REDOX.I1  objet LISTENTI identifiant du composant\n                   mobile\n      \n             TAB2.REDOX.I2 objet LISTENTI identifiant du composant lie \n                   au composant mobile.\n      \n             TAB2.REDOX.A1 objet LISTREEL coefficient stoechiometrique\n                   de l'electron e-\n      \n             TAB2.REDOX.A2 objet LISTREEL coefficient stoechiometrique\n                   du proton H+\n\n       TAB2.TEMPE est une TABLE contenant les donnees relatives a la\n               temperature pour les especes selectionnees. Elle est\n               indicee par les mots:\n               'DELTAH' 'DELCP' 'APPROX'  pour la base MINEQL\n               'COEF' 'LOGK' 'TMIN' 'TMAX' 'NVT' 'NUMT' pour la base\n                 STRASBG\n\n             TAB2.TEMPE.DELTAH objet LISTREEL. Variation d'enthalpie\n\n             TAB2.TEMPE.DELCP objet LISTREEL. Variation de capacite\n                   calorifique\n\n             TAB2.TEMPE.APPROX entier (1 ou 2) type d'approximation.\n\n             TAB2.TEMPE.COEF objet LISTREEL.Coefficients d'interpolation.\n                   Pour chaque espece retenue,il y a 4 valeurs pour \n                   chacune des 8 temperatures de reference.\n\n             TAB2.TEMPE.TMINA objet LISTREEL. Pour chaque espece retenue,\n                   temperature auquelles on donne le LogK.( cette liste\n                   est dimensionnee au (nombre d'especes)*(max de valeurs)\n\n             TAB2.TEMPE.LOGK objet LISTREEL. Valeurs des Logk aux\n                   temperatures de la liste TMIMA.\n\n             TAB2.TEMPE.NVT objet LISTENTI. Pour chaque espece retenue,\n                    nombre de temperatures disponibles.\n\n             TAB2.TEMPE.NUMT objet LISTENTI. Pour chaque espece retenue,\n                    identifiant de l'espece.\n\n\n\n\n \n\n \n\n \n \n \n \n \n \n ",
  },
  {
    name: "CHI2",
    url: "CHI2",
    documentation:
      "$$$$ CHI2     NOTICE  CHAT      11/09/12    21:15:24     7124           \n                                             DATE     11/09/12\n  \n  Operateur CHI2                                Voir aussi : \n   --------------  \n       TAB4 = CHI2  TAB1  TAB2  <TAB3> ;\n\n\n        Objet\n       -------\n       Le but est de calculer la speciation d'une eau, en tout point\n       d'un domaine a partir de la donnee des concentrations analytiques\n       de chaque composant chimique du systeme. Le calcul se fait en\n       deux temps a l'aide des operateurs CHI1 et CHI2.\n       CHI1 rassemble toutes les donnees relatives a un systeme chimique,\n       et CHI2 effectue la speciation.\n        La terminologie est celle de Mineql.\n\n          Toutes les concentrations sont donnees en moles par litre.\n\n       Commentaires\n       ------------\n       TAB1 est un objet de type TABLE et de sous type chimi1 \n            (cf operateur CHI1)\n\n\n       TAB2 est un objet de type TABLE de sous-type 'DONNEES_CHIMIQUES'.\n            Elle est indicee par les mots :\n           'LOGC' 'TOT' <'FIONI'> <'NTY4'> <'TEMPE'>  <'CLIM'>\n\n       TAB2.LOGC est un objet de type CHPOIN qui possede une composante\n             par composant chimique. Pour chaque composant chimique il \n             contiendra le log de l'estimation de l'espece simple\n             associee. Le nom de ces composantes est un mot de 4 \n             caracteres, forme par X suivi eventuellement de 0 ou 00 et\n             du numero identifiant le composant chimique.\n\n       TAB2.TOT est un objet de type CHPOIN qui possede une composante\n             par composant chimique. Pour chaque composant chimique il\n             contiendra la concentration totale  (ou analytique) ( en\n             solution + mineraux). Le nom de ces composantes est un mot\n             de 4 caracteres, forme par X suivi eventuellement de 0 ou \n             00 et du numero identifiant le composant chimique.\n\n       TAB2.FIONI objet de type CHPOIN ayant une composante scalaire, et\n             contenant une estimation de la force ionique en chaque \n             point du maillage.\n\n       TAB2.NTY4 objet de type CHPOIN ayant une composante pour chaque\n             espece de precipite potentiel. En chaque point du maillage\n             on indiquera si le mineral est precipite ( =1) ou non( =0).\n             Les nom des composantes sont ceux figurant dans la liste\n             TAB1.IDEN.NOMPRECI.\n\n       TAB2.TEMPE objet de type CHPOIN contenant la temperature.\n\n       TAB2.CLIM valeur de l'activite imposee des especes de type 3.\n             Objet de type CHPOIN ayant une composante pour chaque\n             espece dont l'activite est imposee.Les noms des composantes\n             sont ceux figurant dans la liste TAB1.IDEN.NOMTYP3.\n\n       TAB3 est un objet de type TABLE contenant les parametres de\n            calcul. Elle est indicee par les mots :\n            <'EPS'> <'ITMAX'> <'ITERSOLI'> <'PRECPE'> <'IAFFICHE'>\n           <'NITERPE'> <'DELPE'> <'MDELPE'>  <'NFI'>  <'SORTIE'>\n           <'IMPRIM'>\n\n       TAB3.EPS  est un REEL, la precision du calcul.\n             Valeur par defaut 1.E-4.\n\n       TAB3.ITMAX est un ENTIER nombre maximal d'iterations dans la\n             resolution du systeme chimique. Valeur par defaut 20.\n\n       TAB3.ITERSOLI est un ENTIER nombre maximal d'iterations, pour\n             trouver les mineraux precipites. Valeur par defaut 10.\n\n       TAB3.IAFFICHE est un ENTIER permettant le choix d'affichage des\n             resultats pour les solutions solides.\n             1  coefficients stoechiometriques des solutions solides\n             2  fractions molaires des solutions solides\n             Valeur par defaut 2.\n\n\n       TAB3.CALCLOG est un ENTIER, indication sur le calcul en log\n              de concentration ou pas dans la speciation \n             0 calcul en concentration     \n             1 calcul en log de concentration\n             Valeur par defaut 0\n             \n       TAB3.PRECPE est un REEL, precision sur le calcul redox.\n             Valeur par defaut 1.E-10\n\n       TAB3.NITERPE   est un ENTIER nombre maximal d'iterations de\n              dichotomie. Valeur par defaut 50.\n\n       TAB3.DELPE est un REEL, l'intervalle initial des iterations de\n               dichotomie. La valeur par defaut est 1.\n\n       TAB3.MDELPE est un ENTIER nombre maximal de pas dans la recherche\n             de l'intervalle de dichotomie. Valeur par defaut 20.\n            ( evite de cycler lorsque l'on est tres loin de la solution)\n\n       TAB3.NFI est un ENTIER nombre de cycles de chimie.\n              Valeur par defaut 4. Un cycle correspond a la sequence:\n                    * calcul de la force ionique\n                    * modification des logk\n                                           |---\n                    * boucle mineraux a    |* resolution ( iterative )\n                        precipiter         |\n                                           |* verification des mineraux\n                                           |  precipites\n                                           |---\n\n       TAB3.SORTIE est un objet de type LISTMOTS. Ces mots doivent\n             etre pris dans la liste:\n             'PREC' 'FION' 'TYP6' 'TYP3' 'NTY4' 'TYP5' 'SURF' 'SOLU'\n             'POLE' 'LOGK'\n             Ils servent a preciser les elements que l'on veut voir\n             figurer dans la TABLE TAB4.\n\n       TAB3.IMPRIM est un objet de type LISTENTI . Dans le cas ou\n             l'on demande un niveau de message superieur a 0\n             ( OPTION IMPI 1 ), ceci permet de limiter les impressions\n             aux seuls noeuds du maillage dont le numero figure dans \n             la liste.\n\n\n\n\n       TAB4 objet de type TABLE de sous type CHIMI2, contenant la\n            speciation du systeme. Elle est indicee par les mots:\n            'AQUE' 'FIXE' 'LOGC' 'ERR' <'PREC'>  <'FION'> <'TYP6'>\n              <'TYP3'> <'NTY4'> <'TYP5'> <'SURF'> <'SOLU'> <'POLE'>\n              <'LOGK'> \n\n       TAB4.AQUE est un objet de type CHPOIN qui a une composante par\n             composant chimique. Le nom de ces composantes est un mot \n             de 4 caracteres, forme par, X suivi eventuellement de 0\n             ou 00 et du numero identifiant le composant chimique.\n             Pour chaque composant il contiendra la concentration  \n             en solution .\n\n       TAB4.FIXE est un objet de type CHPOIN qui a une composante par\n             composant chimique. Pour chaque composant il contiendra la\n             concentration du mineral precipite+surface.\n\n       TAB4.LOGC est un objet de type CHPOIN qui possede une composante\n             par composant chimique. Pour chaque composant chimique il \n             contiendra le log de la concentration de l'espece simple\n             associee.\n\n       TAB4.PREC est un objet de type CHPOIN qui a une composante par\n              espece chimique precipite. Le nom de ces composantes sont\n              ceux figurant dans la liste TAB1.IDEN.NOMPRECI.\n              Il contiendra la concentration des especes precipitees.\n\n       TAB4.ERR est un objet de type CHPOIN contenant les erreurs\n                eventuellement survenue lors du calcul\n                ( 0 : resultats ok,\n                  1 : nb d'iteration de Newton superieur a ITMAX,\n                  7 : violation de la regle des phases,\n                  8 : pb dans la resolutionn du systeme lineaire\n                     dans le newton)\n       \n       TAB4.FION est un objet de type CHPOIN contenant la force ionique\n\n       TAB4.TYP6 est un objet de type CHPOIN qui a une composante par\n             espece chimique de type 6. Le nom de ces composantes sont\n             ceux figurant dans la liste TAB1.IDEN.NOMTYP6.\n             Il contiendra la concentration des especes de type 6,\n             c'est a dire non prises en compte dans le probleme.\n\n       TAB4.TYP3 est un objet de type CHPOIN qui a une composante par\n             espece chimique de type 3. Le nom de ces composantes sont\n             ceux figurant dans la liste TAB1.IDEN.NOMTYP3.\n              Il contiendra la concentration des especes de type 3.\n             C'est a dire la quantite totale necessaire de chaque espece\n             pour que la contrainte soit verifiee.\n             Par exemple si on veut imposer un pH de 8 ,la concentration\n             trouvee en type 3 donne l'oppose de la quantite d H+\n             necessaire pour avoir un pH de 8.\n\n       TAB4.NTY4 objet de type CHPOIN ayant une composante pour chaque\n             espece de precipite potentiel. En chaque point du maillage\n             on indiquera si le mineral est precipite ( =1) ou non( =0).\n             Les nom des composantes sont ceux figurant dans la liste\n             TAB1.IDEN.NOMPRECI.\n\n       TAB4.TYP5 est un objet de type CHPOIN qui a une composante par\n             espece chimique de type 5.\n              Il contiendra la concentration des especes de type 5.\n              Les especes de type 5 sont les precipites potentiels qui\n              ne sont pas precipites.\n\n       TAB4.SURF est un objet de type CHPOIN qui a une composante par\n             espece chimique de surface.\n             Il contiendra la concentration des especes de surface.\n\n       TAB4.SOLU est un objet de type CHPOIN qui a une composante par\n             espece chimique en solution.\n             Il contiendra la concentration des especes en solution.\n\n       TAB4.POLE est un objet de type CHPOIN qui a une composante par\n             pole de solution solide. Le nom de ces composantes sont \n             ceux figurant dans la liste TAB1.IDEN.NOMPOLE. Il contiendra \n             les fractions molaires des poles de solutions solides.\n\n       TAB4.LOGK est un objet de type CHPOIN qui a une composante par\n             solution solide. Le nom de ces composantes sont ceux \n             figurant dans la liste TAB1.IDEN.NOMSOSO.\n             Il contiendra les logK des solutions solides.\n\n\n \n\n \n\n \n \n \n \n \n \n \n ",
  },
  {
    name: "CHITRNSP",
    url: "CHITRNSP",
    documentation:
      "$$$$ CHITRNSP NOTICE  CHAT      11/09/12    21:15:24     7124           \n                                             DATE     11/09/12\n                                             \n     Procedure CHITRNSP                      Voir aussi : NOCOMCHI BMTD\n     ------------------                                   CHI2      DMTD  \n                                                          TRACHIT   DMMU  \n                                                          TRACHIS   CHI1  \n                                                          NOESPCHI  PECHE        \n            CHITRNSP TAB1  ;\n\n\n        Objet\n        -----\n        Cette procedure permet d'effectuer un calcul couple transport/\n       chimie. Le transport utilise les elements finis mixte_hybrides.\n\n        Commentaires\n        -------------\n    TAB1    est une table de soustype 'GEOCHIMIE'.\n    En entree, TAB1 sert a definir les options et les parametres du\n    calcul.\n    En sortie TAB1 contient les donnees d'entrees et les resultats de\n    fa\u00e7on a permettre une reprise du calcul.\n    Les indices de la table TAB1 sont des mots (a ecrire en\n    toutes lettres, et en majuscules s'ils sont mis entre cotes)\n    dont voici la description :\n                                                                      \n    ------------------------------------------------                  \n    Donnees physiques, geometriques et materielles :\n    ------------------------------------------------                  \n\n    Indices: 'SOUSTYPE' 'MODELE' 'DIFFUSION' <'POROSITE'> 'DOMAINE'\n         'CONVECTION' 'CHIMI1' <'ITERC'> <'PRECISION'> <'DECROISSANCE'>\n\n    'SOUSTYPE'     mot 'GEOCHIMIE'\n\n    'MODELE'    Objet modele (MMODEL cree par MODE,formulation DARCY)\n                                                                      \n    'DIFFUSION' Donnees physiques et materielles :\n              conductivite hydraulique (MCHAML cree par MATE)\n                                                                      \n    'POROSITE'    Contient la porosite au centre de l'element\n              (CHPOIN de support DOMAINE.CENTRE)\n               La valeur par defaut est 1.\n                                                                      \n    'DOMAINE'     References geometriques (TABLE creee par DOMA)      \n                                                                      \n    'CONVECTION'  Flux de la vitesse convective (CHAMPOIN de support  \n                  DOMAINE.FACE)                                       \n                                                                      \n                                                                      \n    'CHIMI1'  Table issue de CHI1\n                                                                      \n                                                                      \n    'ITERC' nombre max d'iterations de couplage (defaut 100)\n                                                                      \n                                                                      \n    'PRECISION' precision critere de convergence pour le couplage\n                 valeur par defaut  1.E-3                             \n                                                                      \n    'DECROISSANCE' table TAB2 contenant les donnees relatives a la\n          decroissance/filiation. Cette table est indicee par le mot\n          'TETA' et des entiers de 1 a N. N etant le nombre de couples\n           pere fils.\n           TAB2.TETA est un reel le coefficient d'implicitation.\n           TAB2.i    est une table d'indices 'PERE' 'FILS' et 'LAMBDA'\n           TAB2.i .'PERE' est un entier identifiant du pere.\n           TAB2.i .'FILS' est un entier identifiant du fils.\n           TAB2.i .'LAMBDA' est un reel la constante de decroissance.\n\n    --------------------------------------                            \n       parametres de calcul de chimie\n    --------------------------------------                            \n                                                                      \n                                                                      \n     indices: <'EPS'> <'ITMAX'> <'ITERSOLI'> <'PRECPE'> <'IAFFICHE'>\n           <'NITERPE'> <'DELPE'> <'MDELPE'> <'NFI'>  <'TEMPE'>\n           <'CLIM'> <'SORTIE'> <'IMPRIM'>\n\n    'EPS'  un REEL, la precision du calcul.\n             Valeur par defaut 1.E-4.\n\n    'ITMAX'  un ENTIER nombre maximal d'iterations dans la\n             resolution du systeme chimique. Valeur par defaut 20.\n\n    'ITERSOLI'  un ENTIER nombre maximal d'iterations, pour\n             trouver les mineraux precipites. Valeur par defaut 10.\n\n    'IAFFICHE'  un ENTIER permettant le choix d'affichage des\n             resultats pour les solutions solides.\n             1  coefficients stoechiometriques des solutions solides\n             2  fractions molaires des solutions solides\n             Valeur par defaut 2.\n\n    'PRECPE'  un REEL, precision sur le calcul redox.\n             Valeur par defaut 1.E-10\n\n    'NITERPE'   un ENTIER nombre maximal d'iterations de\n              dichotomie. Valeur par defaut 50.\n\n    'DELPE' un REEL, l'intervalle initial des iterations de\n               dichotomie. La valeur par defaut est 1.\n\n    'MDELPE' un ENTIER nombre maximal de pas dans la recherche\n             de l'intervalle de dichotomie. Valeur par defaut 20.\n           ( evite de cycler lorsque l'on est tres loin de la solution)\n\n    'NFI' un ENTIER nombre de cycles de chimie.\n              Valeur par defaut 4. Un cycle correspond a la sequence:\n                    * calcul de la force ionique\n                    * modification des logk\n                                           |---\n                    * boucle mineraux a    |* resolution ( iterative )\n                        precipiter         |\n                                           |* verification des mineraux\n                                           |  precipites\n                                           |---\n\n    'TEMPE'  objet de type CHPOIN contenant la temperature.\n\n    'CLIM'  valeur de l'activite imposee des especes de type 3.\n             Objet de type CHPOIN ayant une composante pour chaque\n             espece dont l'activite est imposee.\n\n    'SORTIE'  un objet de type LISTMOTS. Ces mots doivent\n             etre pris dans la liste:\n             'PREC' 'FION' 'TYP6' 'TYP3' 'NTY4' 'TYP5' 'SURF' 'SOLU'\n             'POLE' 'LOGK'\n             Ils servent a preciser les elements que l'on veut voir\n             figurer dans la TABLE TAB1.\n\n    'IMPRIM' un objet de type LISTENTI . Dans le cas ou l'on demande\n             un niveau de message superieur a 0 ( OPTION IMPI 1 ),\n             ceci permet de limiter les impressions aux seuls noeuds\n             du maillage dont le numero figure dans la liste.\n\n    --------------------------------------                            \n    Conditions aux limites / chargements :                            \n    --------------------------------------                            \n\n    Indices : <'BLOCAGE'> <'TRACE_IMPOSE'> <'FLUX_IMPOSE'> <'SOURCE'>\n                                                                      \n    'BLOCAGE'     Contient les matrices de blocage (RIGIDITE)         \n                                                                      \n    'TRACE_IMPOSE' Valeurs des traces de concentrations imposees      \n                 chargement de CHPOIN au centre des faces             \n                                                                      \n    'FLUX_IMPOSE' Valeurs des flux de concentrations imposees         \n                 chargement de CHPOIN au centre des faces             \n                                                                      \n    'SOURCE'      Valeurs de la source                                \n                  Chargement relatifs aux CHPOIN centre               \n                  ( defaut  CHPOIN centre 0.)                         \n                                                                      \n    ---------------------\n    Algorithme en temps :\n    ---------------------\n                                                                      \n    Indices: 'PAS_DE_TEMPS' 'TEMPS_FINAL' <'TEMPS_SAUVES'> <'THETA'>\n\n    'PAS_DE_TEMPS' Valeur du pas de temps de calcul (FLOTTANT)        \n                                                                      \n    'TEMPS_FINAL' Valeur du temps final (FLOTTANT)\n                                                                      \n    'TEMPS_SAUVES' Valeur des temps sauvegardes (LISTREEL - defaut    \n                  on sauve tous les pas de temps)                     \n                 Tous les temps de cette liste doivent etre des\n                 multiples du pas de temps, en cas d'erreur on\n                 sauve au moins le temps initial et le temps final.\n                                                                      \n    'THETA'       Coefficient de relaxation des termes de diffusion_\n                  convection. Compris entre 0. et 1.\n                  (theta-methode) (FLOTTANT - defaut 1.)              \n                  Valeurs de theta generalement utilisees :           \n                       Schema de Euler explicite : 0.                 \n                       Schema de Crank-Nicholson : 1/2                \n                       Schema de Euler implicite : 1.                 \n                                                                      \n  ----------------------------------------------\n   Conditions initales et Resultats\n  -------------------------------------------\n\n        A chacun des indices suivants on trouve une table indicee par\n        des entiers de 0 a N. L'indice i contient la valeur du champ au\n        temps TEMPS.i.\n        L'indice 0 contient les valeurs initiales,qui doivent etre\n        donnees lors d'un premier calcul.\n        Les noms des composantes des CHPOIN sont ceux utilises\n        dans CHI2 (et attribues par le code). On peut obtenir les\n        numeros des identifiants correspondants a l'aide des procedures\n        NOCOMCHI et NOESPCHI.\n\n        Indices indispensables en entree:  'TOT' 'TAQU' 'LOGC'\n\n        Indices toujours presents en sortie: 'TOT' 'TAQU' 'LOGC'\n                                      'TEMPS' 'AQUE' 'FIXE'  'FLUX'\n\n        Indices optionnels en entree: 'TEMPS' 'FION' 'NTY4'\n\n        Indices optionnels en sortie: <'PREC'>  <'FION'> <'TYP6'> \n        <'TYP3'> <'NTY4'> <'TYP5'> <'SURF'> <'SOLU'> <'POLE'> <'LOGK'>\n\n\n    'TEMPS'   TABLE contenant les temps sauvegardes (FLOTTANT)\n         La valeur par defaut lors d'un premier calcul est\n         TAB1. 'TEMPS'. 0 = 0.\n         Lors d'une reprise le temps initial est le temps de plus\n         grand indice de cette table.\n\n    'TOT' TABLE contenant les concentrations totales aux centres\n         des elements. CHPOIN  ayant une composante par composant\n         chimique. (La valeur initiale est indispensable).\n\n    'AQUE' TABLE contenant les concentrations des aqueux aux centres\n          des elements .CHPOIN ayant une composante par composant\n          chimique ( cette table est generee par la procedure)\n\n    'FIXE' TABLE contenant les concentrations des fixees aux centres\n          des elements .CHPOIN ayant une composante par composant\n          chimique ( cette table est generee par la procedure)\n\n    'TAQU' Table contenant les concentrations des aqueux\n          au centre des faces. CHPOIN possedant une composante\n          par composant chimique.(La valeur initiale est\n          indispensable)\n\n    'LOGC' Table contenant pour  chaque composant chimique le log\n          de la concentration de l'espece simple associee aux centres\n          des elements.CHPOIN possedant une composante par composant\n          chimique. (La valeur initiale est  indispensable)\n\n    'FLUX' Table contenant les flux totaux (convectif+ diffusif)\n          au centre des faces. CHPOIN possedant une composante\n          par composant chimique.( cette table est generee par la\n          procedure)\n\n\n    'PREC' TABLE contenant la concentration des especes precipitees.\n          CHPOIN centre ayant une composante par espece chimique\n          precipite.\n\n    'FION' TABLE  contenant la force ionique. CHPOIN centre a une\n          composante ( nom de la composante SCAL)\n\n    'TYP6' TABLE contenant la concentration des especes de type 6.\n           CHPOIN centre ayant une composante par espece chimique\n           de type 6.( cette table est generee par la procedure si TYP6\n           figure dans la liste TAB1.SORTIE)\n\n    'TYP3' TABLE contenant la concentration des especes de type 3.\n           ( cette table est generee par la procedure si TYP3 figure\n           dans la liste TAB1.SORTIE)\n\n    'NTY4' TABLE contenant des CHPOIN centre ayant une composante\n          pour chaque espece de precipite potentiel.\n          En chaque point centre d'element on indiquera si le mineral\n          est precipite ( =1) ou non( =0). Sert a initialiser le choix\n          des mineraux.\n\n    'TYP5' TABLE contenant la concentration des especes de type 5.\n           CHPOIN centre ayant une composante par espece chimique\n           de type 5.( cette table est generee par la procedure si TYP5\n           figure dans la liste TAB1.SORTIE)\n\n    'SURF' TABLE contenant la concentration des especes de surface.\n           CHPOIN centre ayant une composante par espece chimique\n           de surface.( cette table est generee par la procedure si\n           SURF figure dans la liste TAB1.SORTIE)\n\n    'SOLU' TABLE contenant la concentration des especes en solution.\n           CHPOIN centre ayant une composante par espece chimique\n           en solution.( cette table est generee par la procedure si\n           SOLU figure dans la liste TAB1.SORTIE)\n\n    'POLE' TABLE contenant les fractions molaires des poles de\n           solutions solides.CHPOIN centre ayant une composante par\n           pole de solution solide.( cette table est generee par la\n           procedure si POLE figure dans la liste TAB1.SORTIE)\n\n    'LOGK' TABLE contenant les logK des solutions solides.\n           CHPOIN centre ayant une composante par solution solide.\n           ( cette table est generee par la procedure si LOGK\n           figure dans la liste TAB1.SORTIE)\n\n\n\n\n\n \n\n \n\n \n \n \n \n \n\n\n \n \n \n ",
  },
  {
    name: "CHOI",
    url: "CHOI",
    documentation:
      "$$$$ CHOI     NOTICE  CHAT      11/09/12    21:15:25     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CHOI                             Voir aussi :\n    --------------  \n    LOG1 ... LOGn = CHOI CHAINE BOOL1 ... BOOLn ;\n\n\n    Objet :\n    _______\n\n    L'operateur CHOI permet de choisir graphiquement des options\n    dans un ensemble d'options presentees sous forme de cases a\n    cocher.\n\n   CHAINE  : Chaine de caracteres affichee a l'ecran\n\n   BOOL1   : Logique dont le nom est affiche a l'ecran precede de\n   ...       (X) si VRAI et ( ) si FAUX\n   BOOLn\n\n   LOG1    : Logique valant VRAI si l'option a ete retenue et FAUX\n   ...       sinon\n   LOGn",
  },
  {
    name: "CHPO",
    url: "CHPO",
    documentation:
      "$$$$ CHPO     NOTICE  CHAT      11/09/12    21:15:25     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CHPOINT                            Voir aussi :\n    -----------------  \n    CHPO1 = CHPOINT |'ALEATOIRE'       | RIG1 ;\n                    |'UNIFORME'  FLOT1 |\n\n\n    Objet :\n    _______\n\n    L'operateur CHPOINT cree un objet CHPO1 (type CHPOINT), ayant pour\ncomposantes les d.d.l. primaux de l'objet RIG1 (type RIGIDITE).\n\n    Commentaire :\n    _____________\n\n    Le CHPOINT CHPO1 peut avoir :\n\n    - soit des valeurs 'ALEATOIRE'\n    - soit une valeur 'UNIFORME' egale a FLOT1 (type FLOTTANT)",
  },
  {
    name: "CHPR0",
    url: "CHPR0",
    documentation:
      "$$$$ CHPR0    NOTICE  CHAT      11/09/12    21:15:25     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure CHPR0                          Voir aussi : DARCYSAT\n    ---------------                    \n    LREE1  = CHPR0 CHP1 MAIL1 ;\n\n\n\n    Objet :\n    _______\n\n    cree une liste de reel a partir du champoint\n   Cette procedure est a utiliser a partir de la procedure DARCYSAT",
  },
  {
    name: "CHSP",
    url: "CHSP",
    documentation:
      "$$$$ CHSP     NOTICE  MB234859  17/10/02    21:15:04     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur CHSP                                 Voir aussi :\n    ---------------  \n    EVOL2 = CHSP  EVOL1 'ENTR' MOT1 'SORT' MOT2 ('COUL' COUL1);\n\n\n    Objet :\n    _______\n\n    Cet operateur permet de changer un (ou des) spectre(s) donne(s)\nen un (ou des) spectre(s) d'un autre type.\n\n    Commentaire :\n    _____________\n\n\n    EVOL1  : Le (ou les) spectre(s) que l'on souhaite modifier\n             (type EVOLUTION).\n\n    'ENTR' : Mot-cle suivi de :\n\n    MOT1   : type du (ou des) spectre(s) d'entree, choisi parmi :\n             'DEPL', 'VITE' ou 'ACCE'.\n\n    'SORT' : Mot-cle suivi de :\n\n    MOT2   : Type du (ou des) spectre(s) de sortie, choisi parmi:\n             'DEPL', 'VITE' ou 'ACCE'.\n\n    'COUL' : Mot cle facultatif suivi de :\n\n    COUL1  : couleur desiree des courbes (type MOT).\n\n    EVOL2  : Spectre resultat (type EVOLUTION).",
  },
  {
    name: "CHTGAU",
    url: "CHTGAU",
    documentation:
      "$$$$ CHTGAU   NOTICE  CHAT      11/09/12    21:15:25     7124           \n                                             DATE     11/09/12\n\n  Procedure CHTGAU                             Voir aussi :\n    ----------------  \n    CHPO1 = CHTGAU TAB1 ;\n\n                TAB1.'PUISSANCE' .'RENDEMENT'\n                    .'DIFFUSVITE'  .'CONDUCTIVITE'\n                    .'VITESSE'\n                    .'T0'\n                    .'NTERMES'\n                    .'MAILLAGE'\n                    .'EPAISSEUR'\n                    .'LOCAL' .'INSTANT'\n                    .'GAUSS' .'ECART-TYPE'\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule le champ de temperature resultant du\n    deplacement d'un arc de soudure sur une plaque infinie. L'arc est \n    soit ponctuel et se deplace selon l'axe X.\n    La solution analytique du probleme est tiree de Rosenthal : \n    Mathematical Theory of Heat Distribution During Welding and \n    Cutting. \n\n    Commentaire :\n    _____________\n\n    En entree :\n    __________\n\n        TAB1 : Objet de type TABLE, indice par des mots, servant a\n                definir les options de calcul :\n \n        Arguments :\n        ___________\n\n            'PUISSANCE' : REEL : Puissance de l'arc (en W)        \n\n            'RENDEMENT' : REEL : Rendement de l'arc : Rapport de  \n               la puissance recue par la piece et de la puissance \n               de l'arc                                           \n\n            'DIFFUSVITE' : REEL : Diffusivite thermique du materiau \n               (en m2/s)                                 \n\n            'CONDUCTIVITE' : REEL : Conductivite thermique du     \n               materiau (en W/Km2)                                \n\n            'VITESSE' : REEL : Vitesse de deplacement de l'arc (en m/s)\n\n            'T0' : REEL : Temperature ambiante (en \u00b0C ou en K)    \n\n            'NTERMES' : ENTIER : Nombre de termes de la somme     \n\n            'MAILLAGE' : MAILLAGE : Maillage support du champ de  \n               temperature                                        \n\n            'EPAISSEUR' : REEL : Epaisseur de la piece (en m)     \n\n            'LOCAL' : BOOLEEN : VRAI si la piece est decrite dans \n               le repere local a l'arc                            \n\n            'INSTANT' : REEL : Si 'LOCAL' est FAUX, instant       \n               auquel il faut calculer le champ de temperature    \n               (l'abscisse de l'arc est alors V*t) (en s)         \n\n            'GAUSS' : BOOLEEN : VRAI si la source est gaussienne\n\n            'ECART-TYPE' : REEL : Ecart-type de la gaussienne (in m)\n\n    En sortie :\n    __________\n\n            CHPO1 : CHPOINT : Champ de temperature (en \u00b0C ou en K)",
  },
  {
    name: "CHTITR",
    url: "CHTITR",
    documentation:
      "$$$$ CHTITR   NOTICE  MB234859  17/10/02    21:15:05     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure CHTITR                             Voir aussi :\n    ----------------  \n\n\nLa procedure CHTITR est appelee par la procedure DECONV.",
  },
  {
    name: "CH_THETA",
    url: "CH_THETA",
    documentation:
      "$$$$ CH_THETA NOTICE  JB251061  21/02/05    21:15:01     10879          \n                                             DATE     21/02/05\n\n    Procedure CH_THETA                       Voir aussi : G_THETA\n                                                          G_CALCUL  \n                                                          CH_THETX  \n                                                          G_CAS  \n                                                          G_AUX  \n    ------------------  \n    CH_THETA SUPTAB OBJUTI BOOL ;\n\n                              SUPTAB.'MAILLAGE'\n                                    .'FISSURE'\n                                    .'FRONT_FISSURE'\n                                    .'COUCHE'\n                                    .'POINT_1'\n                                    .'POINT_2'\n                                    .'POINT_3'\n                                    .'PCENTRE'\n                                    .'CHPOINT_TRANSFORMATION'\n                                    .'OPERATEUR'\n                                    .'EPAISSEUR'\n\n\n    Objet :\n    _______\n\n  Cette procedure determine un chpoint de type THETA. c'est-a-dire  \n  un champ/point dont la norme est constante a l'interieur d'une      \n  couronne entourant le front d'une fissure, zero a l'exterieur   \n  cette couronne. Le vecteur represente par ce chpoint indique  \n  la direction de propagation eventuelle de la fissure. Pour un   \n  front de fissure tridimensionnel, la procedure cree autant de\n  champs THETA qu'il y a de points sur le front de fissure. Les\n  champs THETA construits sont des champs locaux qui s'appuient\n  sur les noeuds du plan normal au front de fissure au point\n  considere (le maillage doit etre elabore de maniere a prevoir\n  l'existence de ces plans normaux). En 3D Cette procedure est \n  applicable uniquement pour les fissures planes. \n\n    En entree\n    ---------\n\n    SUPTAB = Objet de type TABLE dont les indices sont des              \n             objets de type MOT (a ecrire en toutes lettres).\n             \n     \n    OBJUTI = Objet de type TABLE dont les indices sont des              \n             objets de type MOT (a ecrire en toutes lettres).\n             Cette table est definie par les procedures G_THETA\n             et G_CAS avant de faire appel a CH_THETA.\n             \n             \n    BOOL = Objet de type TABLE dont les indices sont des              \n           objets de type MOT (a ecrire en toutes lettres).\n           Cette table est definie par les procedures G_THETA\n           et G_CAS avant de faire appel a CH_THETA.\n\n\n    1) ARGUMENTS OBLIGATOIRES DANS TOUS LES CAS\n    -------------------------------------------\n    SUPTAB.'MAILLAGE' = Objet de type MAILLAGE representant soit        \n                        la structure totale etudiee (maillage           \n                        utilise dans l'analyse par elements finis,      \n                        soit, pour reduire le temps de calcul, le       \n                        maillage entourant le plus grand des contours   \n                        qu'on a defini pour calculer le champ THETA.    \n    SUPTAB.'FISSURE'  = Objet de type MAILLAGE donnant les deux  \n                        levres d'une fissure si elle est complete (la   \n                        fissure presente des noeuds doubles), une       \n                        seule levre si l'autre levre n'est pas maillee  \n                        en raison, par example, de la symetrie du       \n                        probleme.                                       \n    SUPTAB.'FRONT_FISSURE' = Objet de type POINT (representant la       \n                             pointe de la fissure) si la fissure est    \n                             une ligne, de type MAILLAGE (representant  \n                             le front de la fissure) si la fissure est  \n                             sur un plan en 3D.                         \n    SUPTAB.'COUCHE'   = Objet de type ENTIER representant le nombre     \n                        de couches d'elements (autour du point de       \n                        fissure) qui se deplacent pour simuler la       \n                        propagation de la fissure.                       \n\n\n    2) CAS D'UNE FISSURE CIRCULAIRE DANS UNE GEOMETRIE PLANE               \n    --------------------------------------------------------\n                                                                        \n    SUPTAB.'PCENTRE'  = centre de la fissure circulaire                 \n                                                                        \n                                                                        \n    3) CAS OU L EXTENSION DE FISSURE CORRESPOND A UNE                      \n    SIMPLE TRANSLATION DANS UN TUYAUTERIE DROITE (3D)                   \n    -------------------------------------------------\n                                                                        \n    Dans ce cas on effectue dans la procedure une transformation de     \n    tuyau en plaque en passant au systeme de coordonnees cylindriques.  \n    Il est alors necessaire de fournir :                                \n                                                                        \n    SUPTAB.'POINT_1' = centre du systeme de coordonnees                 \n    SUPTAB.'POINT_2' = POINT tel que l'axe defini par POINT_1           \n                       vers POINT_2 soit l'axe Z poisitif               \n    SUPTAB.'POINT_3' = POINT tel que le plan defini par les 3 points    \n                       POINT_1 POINT_2 POINT_3 donne l'angle theta nul  \n                                                                        \n    4) CAS OU L EXTENSION DE FISSURE NE\n    CORRESPOND PAS A UNE SIMPLE TRANSLATION                                            \n    ---------------------------------------\n                                                                        \n    A) Fissure dans un tuyauterie droite (3D, Rotation)                 \n                                                                        \n    SUPTAB.'POINT_1' = Objet de type POINT                              \n    SUPTAB.'POINT_2' = Objet de type POINT qui, avec le point POINT_1,  \n                       constitue l'axe perpendiculaire a la section     \n                       fissuree.                                        \n                                                                        \n    B) Fissure dans un coude (3D, rotation + transformation)            \n                                                                        \n       Outre les deux points SUPTAB.'POINT_1' et SUPTAB.'POINT_2'       \n       definis en haut on donne encore :                                \n    SUPTAB.'CHPOINT_TRANSFORMATION' = Objet de type CHPOINT utilise     \n                                      pour transformer une coude en     \n                                      un tuyauterie droite.             \n                                                                        \n    SUPTAB.'OPERATEUR' = Objet de type MOT valant 'PLUS' ou 'MOIN'      \n                         pour indiquer l'operateur PLUS ou MOIN a       \n                         utiliser si l'on veut transformer la coude     \n                         en un tuyauterie droite.                       \n                                                                        \n    5) CAS DES ELEMENTS DE COQUE                                        \n    ----------------------------\n                                                                        \n    SUPTAB.'EPAISSEUR' = Objet de type FLOTTANT donnant l'epaisseur     \n                         de la coque a la pointe de la fissure     \n                         \n\n\n\n      En sortie :\n      -----------\n\n    SUPTAB.'CHAMP_THETA' = Objet de type :                                              \n                                                                       \n        - TABLE indicee par des objets de type POINT contenant\n          des elements de type CHPOINT dans les 3 dimensions.\n          Chaque element contient le champ THETA au noeud du \n          front, de coordonnees correspondant au point P: TETA.P.\n          Elle est egalement indicee par le mot 'GLOBAL' pour \n          donner le champ THETA global le long de tout le front\n          de la fissure\n        - CHPOINT contenant le champ THETA en 2 dimensions (ou en\n          3 dimensions avec des elements coque mince) a la pointe \n          de fissure. \n          \n    SUPTAB.'CHAMP_PI' = Objet de meme type que SUPTAB.'CHAMP_THETA'.\n                        Calcule dans le cas ou l'objectif est 'DJ/DA'.\n           \n    OBJUTI.'DIRECTION1' (et 2 et 3 eventuellement) :\n        Objet de type POINT donnant la direction de propagation,\n         ainsi que le ou les vecteurs normaux le cas echeant.\n\n\n           ",
  },
  {
    name: "CH_THETX",
    url: "CH_THETX",
    documentation:
      "$$$$ CH_THETX NOTICE  MB234859  17/10/02    21:15:04     9577           \n                                             DATE     17/10/02\n\n    Procedure CH_THETX                       Voir aussi : G_THETA\n    ------------------  \n    THETA TABUTIL = CH_THETX SUPTAB ;\n\n                          SUPTAB . 'MAILLAGE' \n                                 . 'PSI'\n                                 . 'PHI'\n                                 . 'FRONT_FISSURE' \n                                 . 'COUCHE' \n\n\n    Objet :\n    _______\n\n  Appele par G_THETA qui calcule le taux de restitution d'energie,\n  cette procedure determine un chpoint d'avance virtuelle de type THETA \n  pour les elements XFEM. Plus precisement, il s'agit d'un champ/point \n  dont la norme est constante et egale a 1 a l'interieur d'une couronne\n  entourant le front de fissure, et 0 a l'exterieur de cette couronne. \n  Le vecteur represente par ce chpoint indique la direction de \n  propagation eventuelle de la fissure.\n  \n  Non disponible en 3D pour l'instant. \n  \n\n    En entree\n    ---------\n\n    SUPTAB = Objet de type TABLE dont les indices sont des              \n             objets de type MOT (a ecrire en toutes lettres) :          \n\n\n    ARGUMENTS OBLIGATOIRES                                             \n    \u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\u00b0                                             \n                                                                       \n    SUPTAB.'MAILLAGE' = Objet de type MAILLAGE representant soit       \n                        la structure totale etudiee (maillage          \n                        utilise dans l'analyse par elements finis,     \n                        soit, pour reduire le temps de calcul, le      \n                        maillage entourant le plus grand des contours  \n                        qu'on a defini pour calculer le champ THETA.   \n                                                                       \n    SUPTAB.'PSI'  = Objet de type CHPOINT representant la 1ere level   \n                    decrivant le repere local de la fissure            \n    SUPTAB.'PHI'  = Objet de type CHPOINT representant la 2eme level   \n                    decrivant le repere local de la fissure            \n                                                                       \n    SUPTAB.'FRONT_FISSURE' = Objet representant le front de fissure    \n                            -de type POINT en 2D \n                            -de type MAILLAGE (ligne) en 3D \n                                                                       \n    SUPTAB.'COUCHE'   = Objet de type ENTIER representant le nombre    \n                        de couches d'elements (autour du point de      \n                        fissure) qui se deplacent pour simuler la      \n                        propagtion de la fissure.        \n\n    SORTIE\n    \u00b0\u00b0\u00b0\u00b0\u00b0\u00b0\n\n    THETA = Objet de type :                                              \n                                                                        \n         - TABLE indicee par des objets de type POINT contenant\n           des elements de type CHPOINT dans les 3 dimensions.\n           Chaque element contient le champ THETA au noeud du \n           front, de coordonnees correspondant au point P: TETA.P.\n           Elle est egalement indicee par le mot 'GLOBAL' pour \n           donner le champ THETA global le long de tout le front\n           de la fissure\n         - CHPOINT contenant le champ THETA en 2 dimensions (ou en\n           3 dimensions avec des elements coque mince) a la pointe \n           de fissure. \n           \n\n\n    TABUTIL = Objet de type TABLE contenant le vecteur directeur\n              unitaire donnant la direction du champs THETA\n\n\n           ",
  },
  {
    name: "CINEMA",
    url: "CINEMA",
    documentation:
      "$$$$ CINEMA   NOTICE  CHAT      11/09/12    21:15:26     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure CINEMA                     Voir aussi :\n    ------------------  \n    DEFO1 = CINEMA GEO1 GEO2 GEO3 VEC1;\n\n\n    Objet :\n    _______\n\n    Cette procedure produit une animation d'un objet GEO1 suivant\n    un succession de points de vue GEO2 et d'orientations de vision\n    GEO3 et une direction fixe de la tete VEC1.\n\n    Commentaire :\n    _____________\n\n    GEO1  : objet que l'on cherche a explorer (type MAILLAGE)\n\n    GEO2  : suite de POI1 definissant les positions successives du\n            point de vue (type MAILLAGE)\n\n    GEO3  : suite de POI1 definissant les positions successives de\n            la direction de vision (type MAILLAGE)\n\n    VEC1  : direction de l'axe de la tete de l'observateur (type POINT)\n\n    Remarque :\n    __________\n\n    Il est conseille d'utiliser l'option DIRE de la directive TRAC pour\n    animer l'objet GEO1. Si FLO1 est la distance entre l'oeil et\n    le plan de vision, on peut proceder comme suit:\n\n       DEFO1 = CINEMA GEO1 GEO2 GEO3 VEC1;\n       OEIL1 = (GEO2 'ELEM' 1) 'POINT' 1;\n       OPC11 = (GEO3 'ELEM' 1) 'POINT' 1;\n       OPC12 = VEC1;\n       OPC11 = OPC11/('NORM' OPC11);\n       OPC12 = OPC12 'MOINS' ((OPC11 'PSCA' OPC1)*OPC11);\n       OPC12 = OPC12/('NORM' OPC12);\n       OPC13 = OPC11 'PVEC' OPC12;\n       PC11  = OEIL1 'PLUS' (FLO1*OPC11);\n       PC12  = PC11 'PLUS' OPC12;\n       PC13  = PC11 'PLUS' OPC13;\n       'TRAC' OEIL1 DEFO1 'FACE' 'DIRE' 'COUP' PC11 PC12 PC13 'OSCI';",
  },
  {
    name: "CINEMB",
    url: "CINEMB",
    documentation:
      "$$$$ CINEMB   NOTICE  CHAT      11/09/12    21:15:27     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure CINEMB                         Voir aussi :\n    ------------------  \n    DEFO1 = CINEMB GEO1 GEO2 GEO3 GEO4;\n\n\n    Objet :\n    _______\n\n    Cette procedure produit une animation d'un objet GEO1 suivant\n    un succession de points de vue GEO2, d'orientations de vision\n    GEO3 et d'orientations de la tete GEO4.\n\n    Commentaire :\n    _____________\n\n    GEO1  : objet que l'on cherche a explorer (type MAILLAGE)\n\n    GEO2  : suite de POI1 definissant les positions successives du\n            point de vue (type MAILLAGE)\n\n    GEO3  : suite de POI1 definissant les positions successives de\n            la direction de vision (type MAILLAGE)\n\n    GEO4  : suite de POI1 definissant les orientations successives de\n            l'axe de la tete de l'observateur (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    Il est conseille d'utiliser l'option DIRE de la directive TRAC pour\n    animer l'objet GEO1. Si FLO1 est la distance entre l'oeil et\n    le plan de vision, on peut proceder comme suit:\n\n       DEFO1 = CINEMA GEO1 GEO2 GEO3 GEO4;\n       OEIL1 = (GEO2 'ELEM' 1) 'POINT' 1;\n       OPC11 = (GEO3 'ELEM' 1) 'POINT' 1;\n       OPC12 = (GEO4 'ELEM' 1) 'POINT' 1;;\n       OPC11 = OPC11/('NORM' OPC11);\n       OPC12 = OPC12 'MOINS' ((OPC11 'PSCA' OPC1)*OPC11);\n       OPC12 = OPC12/('NORM' OPC12);\n       OPC13 = OPC11 'PVEC' OPC12;\n       PC11  = OEIL1 'PLUS' (FLO1*OPC11);\n       PC12  = PC11 'PLUS' OPC12;\n       PC13  = PC11 'PLUS' OPC13;\n       'TRAC' OEIL1 DEFO1 'FACE' 'DIRE' 'COUP' PC11 PC12 PC13 'OSCI';",
  },
  {
    name: "CINIMOD",
    url: "CINIMOD",
    documentation:
      "$$$$ CINIMOD  NOTICE  MB234859  17/10/02    21:15:05     9577           \n                                             DATE     17/10/02\n\n  Procedure CINIMOD                           Voir aussi :\n    ---------------  \n\n    CHPO2  =  CINIMOD  TAB1  MAS1  CHPO1 ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure sert a calculer le CHPOINT des coordonees generalisees \n(deplacements ou vitesses) qui correspondent a un CHPOINT des coordonees\n(deplacements ou vitesses) nodales .\n\n    Commentaire :\n    _____________\n\n\n    TAB1   : Base modale (type TABLE de sous-type BASE_MODALE), issue\n             de l'operateur VIBR ( option 'TBAS' ).\n\n    CHPO1  : champ de deplacement (vitesse) nodal (type CHPOINT). Les \n             points et les composantes de CHPO1 doivent etre inclus \n             dans la base.\n\n    CHPO2  : champ de deplacement (vitesse) generalisee (type CHPOINT) de \n             composante ALFA.\n\n    MAS1   : matrice masse (type RIGIDITE)",
  },
  {
    name: "CLINC",
    url: "CLINC",
    documentation:
      "$$$$ CLINC    NOTICE  MAGN      18/06/11    21:15:00     9850           \n                                             DATE     18/06/11\n                                                                                \n  Procedure CLINC                          Voir aussi :\n    ---------------  \n    CLINC    OBJ1 ENTREE TYPE ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure CLINC est une procedure appel\u00e9e par EXECRXT. \n Elle permet de parall\u00e9liser les r\u00e9solutions.\n\n    Commentaires\n    ____________\n\n    OBJ1     : Objet de type TABLE\n    ENTREE   : Objet de type MOT    indice de la table dont on teste\n                                    l'existence\n    TYPE     : Objet de type MOT    type attendu pour OBJ1.ENTREE",
  },
  {
    name: "CLMI",
    url: "CLMI",
    documentation:
      "$$$$ CLMI     NOTICE  CHAT      11/09/12    21:15:29     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur CLMI                          Voir aussi :\n    \n\n    SYNTAXE :\n    -------                            \n    Syntaxe EQEX:\n\n    ... 'EQEX' ...\n              'OPER' 'CLMI' ferm equa 'UE' 'DUE' 'I1NM' 'I2NM'\n              'INCO' 'I1N'\n\n    (... 'EQEX' ...\n              'OPER' 'CLMI' ferm equa 'UE' 'DUE' 'I2NM' 'I1NM'\n              'INCO' 'I2N')\n\n    \n\n    OBJET :\n    -----\n\n Cet operateur discretise les equations integrales de quantite de\n mouvement(1), d'energie cinetique(2) et d'entrainement(3), utilisees\n pour le calcul des couches limites:\n \n          d(D2)   H+2  d(Ue)      Cf\n   (1)    ----- + ---- ----- D2 = ---- \n           dX      Ue   dX         2\n\n          d(D3)    3  d(Ue)      \n   (2)    ----- + --- ----- D3 = 2Cd \n           dX      Ue  dX\n\n          d(D-D1)    1  d(Ue)      \n   (3)    ------- + --- ----- (D-D1) = Ce \n             dX      Ue  dX\n D2: Epaisseur de quantite de mouvement\n D3: Epaisseur d'energie cinetique\n D1: Epaisseur de deplacement\n D: Epaisseur de couche limite\n \n L'operateur CLMI ne discretise qu'une seule equation, donc dans le cas\n d'une methode a deux equations, il faudra appeler deux fois cet\n operateur dans le jeu de donnees.\n Cet operateur permet de traiter les cas de couches limites\n laminaires et turbulentes. Differentes methodes de\n resolution (choix de relations de fermeture) sont laissees\n a l'appreciation de l'utilisateur.\n\n1/Couche limite laminaire:\n__________________________\n  a/Approximation de la couche limite de Blasius:\n    ---------------------------------------------\n    Cette methode peut-etre utilisee lorsque l'on souhaite\n    calculer des couches limites sur parois planes avec des\n    gradients de pression tres faibles.\n  b/Approximation de Von Karman-Polhausen:\n    --------------------------------------\n    Cette methode peut-etre utilisee pour des couches\n    limites laminaires en presence d'un gradient de\n    pression. Le gradient de pression doit varier lentement.\n  c/Methode a deux equations:\n    -------------------------\n    Cette methode est la plus generale, elle permet de\n    calculer les couches limites laminaires, lorsque le\n    gradient de pression varie rapidement. Cette methode est a\n    preferer.\n2/Couche limite turbulente:\n___________________________\n  a/Methode de Head:\n    ----------------\n    Cette methode est basee sur les relations de fermeture\n    de Head. Elle fournit de bons resultats.\n  b/Methode de Michel:\n    ------------------\n    Cette methode repose sur des relations de fermeture\n    deduites de l'etude des couches limites\n    d'equilibre. De maniere generale, elle fournit des resultats\n    meilleurs que dans la methode de Head. Cependant, cette\n    methode a tendance a faire decoller la couche limite\n    pour des valeurs de facteur de forme beaucoup plus\n    faibles que les valeurs experimentales.\n\n\n    Commentaires\n    ____________  \n\n  ferm   FLOTTANT\n         Type de relations de fermeture utilisees \n         1 = Cas laminaire, approximation de Blasius\n         2 = Cas laminaire, methode de Von Karman-Pohlausen\n         3 = Cas laminaire, methode a 2 equations\n         4 = Cas turbulent, methode de Michel\n         5 = Cas turbulent, methode de Head\n         \n  equa   FLOTTANT\n         Type d'equation traitee par l'operateur CLMI\n         1 = Equation de quantite de mouvement\n         2 = Equation d'energie cinetique\n         3 = Equation d'entrainement\n         \n  UE     CHPOINT\n         Champ de vitesse exterieur \n\n  DUE    CHPOINT\n         gradient du champ de vitesse UE\n         (La version actuelle de l'operateur ne calcule pas la derivee\n         du champ UE, c'est pourquoi, il faut donner ce gradient en\n         argument de CLMI. Cet argument devra disparaitre dans une\n         future evolution).  \n  \n  I1NM   CHPOINT\n         Inconnue de l'equation traitee au pas de temps precedent.\n         Physiquement, cet argument est une longueur (unite: m). \n\n  I2NM   CHPOINT\n         Inconnue de la deuxieme equation au pas de temps\n         precedent(si methode a deux equations) \n         Physiquement, cet argument est une longueur (unite: m).\n          \n  I1N    CHPOINT\n         Inconnue de l'equation \n         Physiquement, cet argument est une longueur (unite: m). \n \n    Options : (EQEX)\n    _________\n\n L'algorithme a utiliser est un algorithme IMPLICITE\n La discretisation des equations integrales avec CLMI est du\n type EF avec un decentrement SUPG.\n\n \n    Resultats :\n    ___________\n\n Outre les inconnues I1N, I1NM (I2N, I2NM si methode a deux equations),\n on peut recuperer, dans table des inconnues,le coefficient parietal\n local (CF), le facteur de forme de la couche limite (H). Ces deux\n termes sont calcules dans CLMI, ce sont des CHPOINT.\n\n    Remarques :\n    ___________\n\n Dans les methodes utilisant une seule equation integrale,\n le CHPOINT I2NM n'est pas utilisee, cependant il faut\n laisser cet argument (argument actuellement obligatoire).\n\n Dans une methode a deux equations, prendre de preference comme premiere\n equation, l'equation de quantite de mouvement. Donc I1N et I1NM\n correspondront a l'epaisseur de quantite de mouvement (D2) aux instants\n t et t-dt. La deuxieme equation sera alors l'equation d'energie (I2N,\n I2NM : epaisseur d'energie cinetique(D3)) ou l'equation de d'entrainement\n (I2N, I2NM: difference entre l'epaisseur de couche limite 'ET'\n l'epaisseur de deplacement (D-D1))\n \n ",
  },
  {
    name: "CLST",
    url: "CLST",
    documentation:
      "$$$$ CLST     NOTICE  MB234859  17/10/02    21:15:05     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur CLST                           Voir aussi :\n    --------------  \n    BLSTR1 = CLST  STRU1 RIG1 ;\n\n\n   Objet :\n    _______\n\n  L'operateur CLST cree un objet BLSTR1(type BLOQSTRU) que l'on utilise\npour ecrire des liaisons entre sous-structures.\n\n    Commentaire :\n    _____________\n\n      STRU1  : sous-structure (type STRUCTURE)\n\n      RIG1   : rigidite correspondant a un blocage de la structure\n               (type RIGIDITE)",
  },
  {
    name: "CMCT",
    url: "CMCT",
    documentation:
      "$$$$ CMCT     NOTICE  CHAT      11/09/12    21:15:30     7124           \n                                             DATE     11/09/12\n\n    Operateur CMCT                           Voir aussi : MASS RELA\n    --------------                                        LUMP   BLOQ  \n                                                          INVE   SUPE  \n                                                          CHAN   COND  \n\n    ---------------\n    | 1\u009b Fonction |\n    ---------------\n\n      Syntaxe :\n      ________\n                    \n                  RIG3 = 'CMCT' RIG1 CHPO1 ;                   \n                     \n       Objet :\n      _______\n   \n L'operateur CMCT permet de realiser la condensation sur les inconnues L \nd'un systeme de la forme \n                              t                 \n                      |  M   C   |    | U |     | F |\n                      |          | x  |   |  =  |   |\n                      |  C   0   |    | L |     | d |\n\nou  C . U = d  sont des relations sur les inconnues U.            \net ou M est diagonale inversible.\n\n\n       Commentaire :\n       ____________\n\n              RIG1 : contient les matrices associees aux relations.\n\n              CHPO1 : contient la matrice diagonale M inversee\n                      (voir operateur INVE)\n \n              RIG2 : contient la matrice condensee [ C M-1 Ct ]\n\n       Remarque :\n      ___________\n\nLa representation de l'inverse de M par un champ par point suppose \nque les noms de composantes du champ sont les composantes primales \nde la matrice (exemple UX UY UZ ).\n\n\n    ---------------                          \n    | 2 Fonction |\n    ---------------\n\n      Syntaxe :\n      ________\n                    \n                  RIG3 = 'CMCT' RIG1 RIG2 ;                   \n                     \n       Objet :\n      _______\n   \n L'operateur CMCT permet de realiser la condensation de la matrice \nrig1 sur le les inconnues primales de rig2 quit definit les relations\nde dependance . \n \n                [K]U=F \n                [C] une matrice de dependance  telle que U=[C]V                 \n                      \n             CMCT  rend la matrice   KP = Ct K C \n\n    nota : pour la condensation des forces voir CHAN COND RIG2 ;\n\n       Commentaire :\n       ____________\n       \n              RIG1 :  matrices contenant des ddl esclaves \n\n              RIG2 : contient les matrices definissant des relations\n        sur des ddl de rig1  \n\n              \n \n              RIG3 : contient la matrice condensee [ Ct K  C ]",
  },
  {
    name: "CMOY",
    url: "CMOY",
    documentation:
      "$$$$ CMOY     NOTICE  MB234859  17/10/02    21:15:05     9577           \n                                             DATE     17/10/02\n\n    Operateur CMOY                           Voir aussi : COMT\n    --------------  \n    EVOL1 = CMOY EVOL2 'ACQU' FLOT1 ('DECL' FLOT2) ('NCHO' ENTI1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur CMOY calcule un choc moyen a partir d'un ensemble\nd'impacts. Chaque choc est detecte par le depassement d'un seuil;il est\nenregistre sur un temps d'acquisition pre defini.\n\n    Commentaire :\n    _____________\n\n\n    EVOL2  :  Enregistrements des chocs au cours du temps\n              (type EVOLUTION).\n              Il peut y avoir plusieurs courbes dans EVOL2.\n\n    'ACQU' :  Mot-cle suivi de :\n    FLOT1  :  Temps d'acquisition de chaque choc (type FLOTTANT).\n\n    'DECL' :  Mot-cle suivi de :\n    FLOT2  :  Seuil de declenchement de l'acquisition en % de la valeur\n              maximale en valeur absolue des chocs (type FLOTTANT).\n\n    'NCHO' :  Mot-cle suivi de :\n    ENTI1  :  Nombre de chocs dont on va calculer la moyenne\n              (type ENTIER)\n\n    EVOL1 :  resultat (type EVOLUTION) contenant autant de courbes\n             qu'EVOL2.",
  },
  {
    name: "CNEQ",
    url: "CNEQ",
    documentation:
      "$$$$ CNEQ     NOTICE  CHAT      11/09/12    21:15:30     7124           \n                                             DATE     11/09/12\n\n  Operateur CNEQ                            Voir aussi :\n   --------------  \n      CHPO2 =  CNEQ  MODL1  | CHPO1 | ( CAR1 )  ;\n                            | CHAM1 |\n\n\n    Objet :\n    _______\n\n    L'operateur CNEQ calcule le champ de valeurs nodales equivalent\n a un champ volumique. Il permet par exemple de calculer les forces\n nodales correspondant au poids ou a des forces centrifuges.\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : Objet modele ( type MMODEL ).\n\n      CHPO1 : champ volumique defini aux noeuds (type CHPOINT)\n\n      CHAM1 : champ volumique defini dans les elements (type MCHAML)\n\n      CAR1  : champ de caracteristiques geometriques (type MCHAML,\n              sous-type CARACTERISTIQUES) necessaire pour certains\n              elements (poutres ,coques,..).\n\n      CHPO2 : champ de valeurs nodales (type CHPOINT)\n\n\n      Remarque  :  Actuellement, cet operateur ne fonctionne que pour\n      ___________  les modeles MECANIQUE, et pour les elements massifs,\n                   DKT et COQ4. Les champs volumiques doivent avoir des\n                   noms de composantes de forces.\n                   Il permet egalement de definir le terme source du au\n                   potentiel vecteur inducteur en formulation \n                   MAGNETODYNAMIQUE. Les champs volumiques doivent avoir des\n                   noms de composantes AX AY AZ.",
  },
  {
    name: "COAC",
    url: "COAC",
    documentation:
      "$$$$ COAC     NOTICE  CHAT      11/09/12    21:15:30     7124           \n                                             DATE     11/09/12\n\n  \n  Operateur COAC                            Voir aussi :\n   --------------  \n       CHPO3 = COAC  TAB1  'FORCEION' CHPO1  < 'TEMPERAT' CHPO2 >   ;\n\n\n        Objet\n       -------\n       Calcul du coefficient d'activite d'une eau, en tout point\n       d'un domaine pour un systeme chimique donne.\n\n\n       Commentaires\n       ------------\n       TAB1 est un objet de type TABLE et de sous type chimi1 \n            (cf operateur CHI1)\n\n       'FORCEION' mot cle  ( doit preceder CHPO1)\n\n       CHPO1 nom d'un objet de type CHPOIN ayant une composante scalaire,\n             et contenant la valeur de la force ionique en chaque\n             point du maillage.\n\n       'TEMPERAT' mot cle ( doit preceder CHPO2)\n\n       CHPO2 nom d'un objet de type CHPOIN contenant la temperature en\n             chaque point du maillage. Cette temperature est exprimee\n             en degres Celsius.\n\n       CHPO3 objet de type CHPOIN ayant une composante scalaire, et\n             contenant la valeur du coefficient d'activite en chaque\n             point du maillage.\n\n\n \n\n \n\n \n \n \n ",
  },
  {
    name: "CODENORM",
    url: "CODENORM",
    documentation:
      "$$$$ CODENORM NOTICE  CHAT      11/09/12    21:15:31     7124           \n                                             DATE     11/09/12\n\n                                                                         \n  Procedure CODENORM                       Voir aussi :        \n     ------------------                                \n     CODENORME TAB1 ;                                                \n                                                                         \n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n                                                                         \n     La procedure CODENORME effectue une etude reglementaire des tuyauterie.\n     Les reglements disponibles sont:\n     \n     - RCC-M CLASSES 1 et 2, CRITERES C et D (B3600 et C3600, edition 1993)   \n     - RCC-MR CLASSE 1 , CRITERES C et D (RB3600, edition 1993)\n     - ASME CLASSES 1 et 2, CRITERES C et D (NB3600 et NC3600, edition 1995)\n     - ETCM CLASSE 2 , CRITERES C et D (FRAMATOME N\u00b0 IT/M-96-0670)\n     - EMSI CLASSE 1 , CRITERES C et D (CRITERE 3459)\n     \nREMARQUES:\n----------\n  a) Les coefficients (B1&B2) de contrainte et la contrainte admissible\n     Sm d'EMSI sont empruntes au RCC-M CLASSE 1.\n     \n  b )Les coefficients (B1&B2) de contrainte d'ETCM sont empruntes\n     au RCC-M CLASSE 1 et la contrainte admissible Sh au RCC-M CLASSE 2.\n     \n  c) La contrainte admissible Sm d'ASME CLASSE 1 est emprunte au \n     RCC-M CLASSE 1.\n\n  d) Les coefficients (B1&B2) de contrainte et la contrainte admissible Sm\n     d'ASME CLASSE 2 sont identiques a ceux de la CLASSE 1.\n\n  e) Il est possible de definir manuellement les coefficients de contrainte\n     ( B1,B2 ) pour l'ensemble des reglements, ainsi que (D1, D21, D22) \n     pour RCC-MR. Voir 1.4.4 pour plus de precisions.\n     \n  f) Dans le cadre du reglement RCC-MR CLASSE 1, les moments dus aux \n     deplacements ne sont pas pris en compte pour l'instant. Ainsi, le\n     coefficient d'abattement g est fixe a 0 et les moments m1 (torsion)\n     et m'R (flexion) sont pris nuls par defaut. Toutefois, il est possible\n     pour l'utilisateur de donner g, m1 et m'R en entree dans l'optique \n     d'une evolution de la procedure, g etant normalement donne par calcul.\n     Lequel calcul, n'est pas integre a la procedure pour l'instant.\n  \n  g) Il est possible d'utiliser la procedure apres une reprise de fichier \n     d'un calcul. Mais il y a des restrictions a cette fonctionnalite. \n     En effet, la recuperation des champs de moments issus de plusieurs \n     calculs , par recuperation de fichiers, conduit a une incompatibilite\n     de pointeurs sur les modeles, les caracteristiques et les maillages.\n     Ainsi, on ne peut pas recuperer les moments dus au poids dans un fichier,\n     ceux dus aux efforts permanents dans un autre, et ceux du au seisme encore\n     dans un autre, meme si la geometrie de la ligne, le maillage, le modele et\n     les caracteristiques sont identiques dans les trois calculs qui ont\n     genere ces fichiers. \n\n     On peut soit: \n\n     - traiter separement les cas de contraintes dues au poids, dues aux\n       efforts permanents, dues aux efforts sismiques issus de fichiers \n       differents.\n\n     - enchainer le calcul des contraintes dues aux efforts permanents (calcul\n       statique) et le calcul des contraintes dues aux efforts sismiques\n       (calcul spectrale ou time history) avec des fichiers de jeu de donnees\n       differents, mais avec une reprise de fichier. Pour chaque calcul, il \n       faut sauver, dans un fichier, les modeles, les maillages, les \n       caracteristiques, les contraintes, ainsi que tout ce qui est necessaire\n       au calcul suivant afin d'avoir les meme pointeurs sur ces objets. \n       Ce qui evite les incompatibilites.\n\n     - recuperer toutes ces contraintes d'un fichier issu d'un calcul qui\n       comportait tous ces champs. C'est a dire que l'on a enchaine le calcul\n       des contraintes dues aux efforts permanents et le calcul des contraintes\n       dues aux efforts sismiques dans le meme jeu de donnees.\n\n\n     UTILISATION DE LA PROCEDURE\n     ---------------------------\n     Cette procedure peut etre utilisee de deux fa\u00e7ons.\n\n     Premier cas: on peut tester les differentes reglementations sur des\n     valeurs ponctuelles de moments, pression et donnees geometriques (rayon \n     exterieur, rayon de courbure pour les coudes, epaisseur). Ce sont\n     des ENTIERS ou des FLOTTANTS. On se place dans le mode dit \"MANUEL\".\n     \n     Deuxieme cas: on peut tester les differentes reglementations sur une\n     ligne entiere de tuyauterie. On se limite toutefois aux lignes\n     constituees de parties droites et de coudes. A partir du modele\n     et des caracteristiques, une recuperation automatique des donnees est\n     effectuee. On se place dans le mode dit \"AUTOMATIQUE\". IL est definit\n     par defaut.\n     Les contraintes de reglementaire Sa sont calculees pour toute la\n     structure, et non pas ponctuellement. On doit donner en entree un \n     MCHAML de \"contraintes\", issu de l'operateur SIGMA par exemple, \n     duquel sera extrait les differents moments de torsion et de flexion.\n     Tous les calculs sont alors effectues avec des champs par elements.\n                                                   \n     Commentaires :                                                       \n     ______________                                                       \n                                                                  \n     TAB1  : objet de type TABLE de sous-type DONNEE contenant les       \n             donnees suivantes :                                         \n\n     1. LES ENTREES\n     --------------\n\n     1.1 MODE MANUEL :\n     -----------------\n     \n     1.1.1 MODE DE CALCUL\n     --------------------\n     TAB1.'MAN' : Permet d'imposer le mode \"MANUEL\", le mode \"AUTOMATIQUE\"\n                  etant present par defaut. Se definit comme suit:\n\n     TAB1.'MAN' = 'VRAI' ; (type MOT)\n     \n     Il est alors necessaire et obligatoire de definir la geometrie dont\n     sont issues les valeurs ponctuelles utilisees et la pression.\n\n     1.1.2 NATURE DE LA TUYAUTERIE\n     -----------------------------\n     TAB1.'COUDE' : Designe un coude a 90\u00b0 par defaut, l'angle etant\n                    modifiable ce qui est uniquement utile pour le \n                    reglement RCC-MR. Se definit comme suit:\n                    TAB1.'COUDE' = 'VRAI' ; (type MOT)\n\n\n     TAB1.'DROIT' : Designe une partie droite. Se definit comme suit:\n                    TAB1.'DROIT' = 'VRAI' ; (type MOT)\n\n     On ne peut pas selectionner a la fois un coude et une partie droite.\n\n     1.1.3 CARACTERISTIQUES GEOMETRIQUES\n     -----------------------------------\n\n     TAB1.'RAYON_EXTERIEUR' : Le rayon exterieur de la tuyauterie.\n                              (type ENTIER OU FLOTTANT)\n\n     Uniquement pour les coudes:\n     TAB1.'RAYON DE COURBURE' : Le rayon de courbure moyen du coude.\n                                (type ENTIER OU FLOTTANT)\n\n     TAB1.'EPAISSEUR' : L'epaisseur de calcul de la tuyauterie.\n                        (type ENTIER OU FLOTTANT)\n\n     PRESSION\n     --------\n     TAB1.'PRESSION' : La pression de calcul de la tuyauterie. \n                        (type ENTIER OU FLOTTANT)\n     La pression est facultative, auquel cas si elle n'est pas definie,\n     elle sera prise a 0.\n\n     1.1.4 DEFINITIONS DES MOMENTS\n     -----------------------------\n     TAB1.'M1' : (type TABLE) de sous-type 'M1', ou M1 prend les valeurs :\n               - MTOTAUX si l'utilisateur fournit a la procedure les moments\n                 totaux.\n                 ATTENTION: cette option est compatible uniquement avec les\n                 reglements RCC-M CLASSE 1 et RCC-MR CLASSE 1. \n                 \n               - MPOIDS si l'utilisateur fournit a la procedures les moments\n                 resultants dus au poids         \n                \n               - MPERMANENT si l'utilisateur fournit a la procedure les\n                 moments resultants dus aux efforts dit permanents hors poids.\n                 Toutefois, il est possible de fournir sous le nom\n                 permanent, tous les moments dus aux efforts permanents,\n                 poids compris, en dehors du reglement ASME.\n                 \n               - MSEISME si l'utilisateur fournit a la procedure les\n                 moments resultants dus aux efforts sismiques.\n\n\n     On ne peut pas fournir a la fois les moments totaux et ceux dus au poids,\n     et/ou dus aux efforts permanents et/ou dus aux sollicitations sismiques.\n\n     Pour chaque type de moment, l'utilisateur peut fournir les moments de\n     torsion, de flexion dans le plan et hors plan. Si un moment n'est pas\n     renseigne, il est pris a 0 par defaut:    \n     \n     TAB1.'M1'.'TORSION' : moment de torsion (type ENTIER ou FLOTTANT)\n                           \n     TAB1.'M1'.'FLEXION_DANS_PLAN' moment de flexion dans le plan \n                                   (type ENTIER ou FLOTTANT)\n                                                                   \n     TAB1.'M1'.'FLEXION_HORS_PLAN' moment de flexion hors plan\n                                   (type ENTIER ou FLOTTANT)\n                                                              \n     EXEMPLE:\n     TAB1.'MTOTAUX'.'TORSION'= MOMX ;\n\n                        \n     1.2 MODE AUTOMATIQUE :\n     ----------------------\n     \n     1.2.1 MODELE\n     ------------\n     TAB1.'MODL' : (type MMODEL) contenant les modeles et les\n                   maillages des differentes zones de la ligne de\n                   tuyauterie.\n\n     1.2.2 CARACTERISTIQUES\n     ----------------------\n     TAB1.'CARACTERISTIQUES' : (type MCHAML) contenant les carateristiques\n                               des differentes zones de la ligne de tuyauterie\n                               (i.e, rayon exterieur, epaisseur, rayon de\n                               courbure pour les coudes, pression, module\n                               d'young, ...).\n                               Dans le cas automatique, la pression est aussi\n                               prise a 0 si elle n'est pas definie dans les\n                               caracteristiques. Toutes les autres composantes\n                               sont obligatoires et toute absence entraine\n                               l'arret de la procedure. \n\n\n     1.2.3 DEFINITIONS DES \"CONTRAINTES\"\n     -----------------------------------\n         TAB1.'M1' : (type MCHMAL), ou M1 prend les valeurs :\n               - MTOTAUX si l'utilisateur fournit a la procedure les\n               \"contraintes\" dues a tous les efforts, dites totales.\n                 ATTENTION: cette option est compatible uniquement avec les\n                 reglements RCC-M CLASSE 1 et RCC-MR CLASSE 1. \n                 \n               - MPOIDS si l'utilisateur fournit a la procedures les \n                 \"contraintes\" dues au poids     \n                 \n               - MPERMANENT si l'utilisateur fournit a la procedure les\n                 \"contraintes\" dues aux efforts dit permanents hors poids.\n                 Toutefois, il est possible de fournir sous le nom\n                 permanent, tous les \"contraintes\" dues aux efforts permanents,\n                 poids compris, en dehors du reglement ASME.\n                 \n               - MSEISME si l'utilisateur fournit a la procedure les\n                 \"contraintes\" dues aux efforts sismiques.\n\n     Dans chaque cas, on doit donner en entree un MCHAML de \"contraintes\"\n     (issue de l'operateur SIGMA par exemple) duquel sera extrait les \n     differents moments de torsion et de flexion pour tous les types de\n     \"contraintes\", qu'elles soient totales, dues au poids, dues aux efforts\n     permanents ou dues aux efforts sismiques.\n\n     On ne peut pas fournir a la fois les \"contraintes totales\" et celles dues\n     au poids, et/ou dues aux efforts permanents et/ou dues aux efforts\n     sismiques.\n   \n     EXEMPLE:\n     sigm1 = sigma obtot depl1 cartot ;\n     TAB1.'MTOTAUX'= SIGM1 ;\n\n     1.3 DONNEES OBLIGATOIRES QUELQUE SOIT LE MODE DE CALCUL:\n     -------------------------------------------------------\n     \n     1.3.1 CARACTERISTIQUES PHYSIQUES DU MATERIAU\n     --------------------------------------------\n\n     TAB1.'LIMITE_ELASTIQUE' : La limite d'elasticite conventionnelle a\n                               0.2% de deformation plastique \n                               (Sy)(valeur a la temperature consideree).\n                               Par exemple celle de calcul\n                               (type ENTIER OU FLOTTANT)\n\n     TAB1.'LIMITE_ELASTIQUE_TAMB' : La limite d'elasticite conventionnelle a\n                                    0.2% de deformation plastique a \n                                    temperature ambiante (Re).\n                                    (type ENTIER OU FLOTTANT)\n                    \n     TAB1.'RESISTANCE_RUPTURE' : La resistance a la rupture (Su).\n                                 (valeur a la temperature consideree).\n                                 Par exemple celle de calcul\n                                 (type ENTIER OU FLOTTANT)\n\n     TAB1.'RESISTANCE_RUPTURE_TAMB' : La resistance a la rupture a\n                                      temperature ambiante (Rm).\n                                      (type ENTIER OU FLOTTANT)\n\n  ATTENTION: Si on se place a temperature ambiante (i.e 20\u00b0), on doit\n             obligatoirement prendre Sy = Re et  Su = Rm .\n\n\n     1.3.2 NATURE DU MATERIAU CONSTITUANT LA LIGNE \n     ---------------------------------------------\n     La nature des aciers constituants la ligne de tuyauterie doit etre\n     definie. On se limite a des tuyauteries faites en un seul acier. On\n     ne peut donc pas choisir a la fois ferritique et austenitique. Si \n     on veux traiter une ligne constituee d'aciers differents, il faut \n     separer l'etude en fonction des zones de la ligne de natures differentes.\n     Pour ce faire, il suffit de reduire le modele, le maillage et les\n     caracteristiques a la zone de la ligne traitee. \n     Voir l'operateur REDU.\n     \n     TAB1.'FERRITIQUE' : Designe un acier ferritique. Se definit comme suit:\n                         TAB1.'FERRITIQUE' = 'VRAI' ; (type MOT)\n     TAB1.'AUSTENITIQUE': Designe un acier austenitique. Se definit comme suit:\n                          TAB1.'AUSTENITIQUE' = 'VRAI' ; (type MOT)\n\n     1.4 DEFINITION DES REGLEMENTS, CLASSES ET CRITERES CHOISIS POUR L'ETUDE\n     -----------------------------------------------------------------------\n\n     1.4.1 DEFINITION DES REGLEMENTS\n     -------------------------------\n     TAB1'.'NOM' : TAB2 (type TABLE) de sous-type 'NOM', ou NOM prend\n                   les valeurs : RCCM, RCCMR, ASME, ETCM, EMSI.\n                   designant les differents reglements disponibles.\n\n     1.4.2 DEFINITION DES CLASSES\n     ----------------------------             \n     TAB2.'CLASSEX' : TAB3 (type TABLE) de sous-type 'CLASSEX',\n                      ou X prend les valeurs 1 ou 2\n                      \n     ATTENTION: Pour le reglement ETCM X=2 uniquement, pour les reglements\n                RCC-MR et EMSI X=1 uniquement.  \n\n\n     1.4.3 DEFINITION DES CRITERES\n     -----------------------------      \n     TAB3.'Y' : (type MOT) ou Y prend les valeurs\n                C ou D. Se definit comme suit:\n                TAB3.'Y'= 'VRAI' ; (type MOT)\n\n     1.4.4 COEFFICIENTS DE CONTRAINTE\n     --------------------------------\n     \n     Il est possible de definir manuellement les coefficients de contrainte\n     ( B1,B2 ) pour l'ensemble des reglements, ainsi que (D1, D21, D22) \n     pour RCC-MR. On peut imposer une valeur sur toute la ligne,\n     ou sur une partie de la ligne, si on la traite seule (a l'aide de\n     l'operateur 'REDU' que l'on applique au modele, aux CARACTERISTIQUES \n     et aux \"contraintes\").\n     On peut separement fixer ces coefficients pour les parties droites, ou\n     pour les coudes. Les coefficients qui ne sont pas definis prennent leur\n     valeur par defaut.\n     \n\n     TAB3.'B1d' : (type ENTIER ou FLOTTANT)\n     TAB3.'B2d' : (type ENTIER ou FLOTTANT)\n     Pour RCC-MR  CLASSE 1 uniquement:\n     TAB3.'D1d' : (type ENTIER ou FLOTTANT)\n     TAB3.'D21d' : (type ENTIER ou FLOTTANT)\n     TAB3.'D22d' : (type ENTIER ou FLOTTANT)\n\n     ATTENTION: On remplace d par c pour les coudes.\n \n     1.4.5 CAS PARTICULIERS\n     ----------------------     \n     \n     A) RCC-MR\n     --------- \n     A.1) EFFORTS NORMAUX\n     --------------------\n     Si les efforts normaux sont notables, ils doivent etre renseignes pour\n     etre integres au calcul de Pm+Pb.\n     TAB1.'RCCMR'.'N1' : efforts normaux (type ENTIER\n                         ou FLOTTANT pour le mode \"MANUEL\",\n                         type MCHAML pour le mode \"AUTOMATIQUE\") \n                         \n     A.2) ANGLE DES COUDES\n     ---------------------\n     Il est possible de choisir l'angle du coude, valeur en degre, qui\n     intervient dans les calculs du critere RCC-MR CLASSE 1 . Par defaut,\n     cet angle est pris a 90\u00b0. \n\n     L'imposition d'un angle, different de celui par defaut, peut se faire\n     uniquement dans trois cas:\n\n     - en manuel, cas 1 : pour un calcul ponctuel sur des donnees provenant \n                          d'un coude.\n\n     - en automatique:\n\n       cas 2 : - si l'utilisateur traite une ligne dont les coudes ont tous le\n                 meme angle different de 90\u00b0.\n\n       cas 3 : - si l'utilisateur fournit un objet MODELE (TAB1.'MODL') et\n                 un objet CARACTERISTIQUES(TAB1.'CARACTERISTIQUES')\n                 concernant un coude. \n\n                 Dans le cadre d'une ligne composee de coudes d'angles \n                 differents et de parties droites, l'utilisateur fournira une \n                 reduction (Voir l'operateur REDU) des objets MODELE et\n                 CARACTERISTIQUES au coude qu'il desire traiter, ainsi que\n                 l'angle correspondant.\n                 Il faut relancer la procedure autant de fois qu'il y a de\n                 coudes a traiter.\n\n       \n     TAB1.'RCCMR'.'ANGLE' : angle du coude en degres\n                            (type ENTIER ou FLOTTANT)\n\n     A.3) COEFFICIENT ALPHA \n     ----------------------\n     On peut choisir manuellement le coefficient alpha intervenant dans le\n     calcul de S*(contrainte admissible servant a limiter Sigm+Sigb), la \n     valeur par defaut de alpha etant 1.      \n     \n     TAB1.'RCCMR'.'ALPHA' : coefficient alpha\n                            (type ENTIER ou FLOTTANT)\n\n     A.4) COEFFICIENT D'ABATTEMENT g ET MOMENTS DUS AUX DEPLACEMENT\n     --------------------------------------------------------------\n     Dans le cadre du reglement RCC-MR CLASSE 1, les moments dus aux \n     deplacements ne sont pas pris en compte pour l'instant. Ainsi, le\n     coefficient d'abattement g est fixe a 0 et les moments m1 (torsion)\n     et m'R (flexion) sont pris nuls par defaut. Toutefois, il est possible\n     pour l'utilisateur de donner g, m1 et m'R en entree \n\n     TAB1.'RCCMR'.'g' : coefficient d'abattement\n                        (type ENTIER ou FLOTTANT) \n                        \n     TAB1.'RCCMR'.'m1' : moments de torsion dus aux deplacements\n                         (type ENTIER ou FLOTTANT pour le mode \"MANUEL\",\n                         type MCHAML pour le mode \"AUTOMATIQUE\") \n                         \n     TAB1.'RCCMR'.'mr' : moments de flexion dus aux deplacements\n                         (type ENTIER ou FLOTTANT pour le mode \"MANUEL\",\n                         type MCHAML pour le mode \"AUTOMATIQUE\") \n\n     B) ETCM, CLASSE 2\n     -----------------\n     \n     COEFFICIENT ALPHA et AMORTISSEMENT \n     ----------------------------------\n     On notera l'amortissement beta.\n     On peut choisir manuellement:\n     - Soit le coefficient alpha intervenant dans le critere, la valeur\n       par defaut etant 1. ATTENTION: normalement 1<=alpha<=2 mais la valeur\n       est laissee libre a l'utilisateur sans limitation.\n     \n     TAB1.'ETCM'.'ALPHA' : coefficient alpha\n                           (type ENTIER ou FLOTTANT)\n\n     - Soit le coefficient d'amortissement, s'il est connu. alpha est\n       alors calcule selon la formule alpha = (1/beta)**0.5 \n       avec 1<=alpha<=2.\n       Ici alpha est limite. La valeur de alpha ainsi calculee est stockee\n       dans la table resultat, voir 2.1. \n       \n     TAB1.'ETCM'.'AMORTIS': coefficient d'amortissement\n                            (type ENTIER ou FLOTTANT)\n\n     ATTENTION: On ne peut pas renseigner alpha et l'amortissement\n                en meme temps.\n     \n     C) EMSI, CLASSE 1\n     -----------------\n     COEFFICIENT s et AMORTISSEMENT\n     ------------------------------   \n     On notera l'amortissement beta.\n     On peut choisir manuellement:\n     - Soit le coefficient s intervenant dans le critere, la valeur par\n       defaut etant 3. \n       Si l'amortissement beta<=2% s vaut 3, si beta>2% s vaut 1, mais la\n       valeur est laissee libre a l'utilisateur sans limitation.\n      \n     TAB1.'EMSI'.'s' : coefficient s\n                       (type ENTIER ou FLOTTANT)\n                       \n     - Soit le coefficient d'amortissement beta. Ici s est limite par:\n       beta<=2% s vaut 3, si beta>2% s vaut 1. La valeur de s ainsi determinee\n       est stockee dans la table resultat, voir 2.1.\n       \n     TAB1.'EMSI'.'AMORTIS': coefficient d'amortissement\n                            (type ENTIER ou FLOTTANT)\n\n     ATTENTION: On ne peut pas renseigner s et l'amortissement\n                en meme temps.\n                                       \n     2. LES SORTIES\n     --------------\n     Remarque:\n     Il est conseille, pour plus de facilite, d'utiliser des noms \n     intermediaires pour consulter les differents niveaux de la table\n     des resultats . \n     Exemple, pour consulter :\n     TAB1.'RESULTATS'.'RCCMR_C'.'PmPb'.1, faire:\n     tab = TAB1.'RESULTATS'.'RCCMR_C';\n     list tab.'PmPb'.1 ;\n\n     TABLE DE SORTIE\n     ---------------     \n     Les sorties sont rangees dans une sous-table de la table d'entree TAB1\n     TAB1.'RESULTATS' : TAB4 (type TABLE) de sous-type 'RESULTATS'\n     \n     2.1 SOUS TABLE DE RESULTATS \"REGLEMENT\"\n     ---------------------------------------\n     Pour chaque reglement, il existe une sous-table:\n     TAB4.'NOM' : (type TABLE) de sous-type 'NOM', ou NOM prend\n                  les valeurs : RCCM, RCCMR, ASME, ETCM, EMSI.\n                  designant les differents reglements disponibles. \n                              \n     Pour chaque reglement, les contraintes admissibles en classe 1 Sm ou \n     classe 2 Sh sont :\n     \n     TAB4.'NOM'.'Sm' : contrainte admissible en classe 1\n                       (type ENTIER ou FLOTTANT)\n                       \n     TAB4.'NOM'.'Sh' : contrainte admissible en classe 2\n                       (type ENTIER ou FLOTTANT)\n                       \n     Sauf pour ASME qui ne possede qu'un Sm pour les deux classes.\n\n     CAS PARTICULIER\n     ---------------\n     COEFFICIENTS ALPHA (ETCM) et s (EMSI)\n     -------------------------------------  \n     Pour les reglements ETCM et EMSI, si le coefficient d'amortissement\n     beta est fourni, les coefficients alpha et s determines en fonction\n     de beta sont stockes.\n  \n     TAB4.'ETCM'.'ALPHA' : coefficient alpha\n                           (type ENTIER ou FLOTTANT)\n     TAB4.'EMSI'.'s' : coefficient s\n                       (type ENTIER ou FLOTTANT)\n                                   \n\n     2.2 SOUS TABLE DE RESULTATS \"REGLEMENT/CLASSE/CRITERE\"\n     ------------------------------------------------------\n     Pour chaque combinaison de reglement-classe-critere, il existe\n     une sous-table de resultats:\n     TAB4.'NOM2' : (type TABLE) de sous-type 'NOM2',\n                   ou NOM2 prend les valeurs suivantes:\n                   RCCM_CLASSE_1_C , RCCM_CLASSE_1_D\n                   RCCM_CLASSE_2_C , RCCM_CLASSE_2_D\n                   RCCMR_C , RCCMR_D\n                   ASME_CLASSE_1_C , ASME_CLASSE_1_D\n                   ASME_CLASSE_2_C , ASME_CLASSE_2_D\n                   ETCM_CLASSE_2_C , ETCM_CLASSE_2_D\n                   EMSI_CLASSE_1_C , EMSI_CLASSE_1_D\n\n     Selon le mode de calcul les sorties sont differentes.\n                        \n     2.2.1 MODE MANUEL :\n     -------------------\n     \n     A) MOMENT, MODULE D'INTERTIE, COEFFICIENT CARACTERISTIQUE DES COUDES\n     --------------------------------------------------------------------\n     TAB4.'I' : moment d'inertie (type ENTIER ou FLOTTANT)\n     TAB4.'Z' : module d'inertie (type ENTIER ou FLOTTANT)\n     TAB4.'COEF_COUDE' : Coefficient caracteristique des coudes  \n                         (type ENTIER ou FLOTTANT)\n\n     B) CONTRAINTES\n     --------------\n     B.1) RCC-M CLASSE 1 ET EMSI CLASSE 1, CRITERES C & D\n     ----------------------------------------------------\n     TAB4.'NOM2'.'Sa' : contrainte calculee pour les\n                        criteres C & D\n                        (type ENTIER ou FLOTTANT)\n     \n     et si la zone est une partie droite en critere de niveau D, on determine\n     en plus:\n     TAB4.'NOM2'.'Sapdroite' : contrainte calculee en critere D,\n                               pour une partie droite\n                               (type ENTIER ou FLOTTANT)\n                               \n     ou NOM2 prend les valeurs suivantes:\n     RCCM_CLASSE_1_C ou RCCM_CLASSE_1_D\n     EMSI_CLASSE_1_C ou EMSI_CLASSE_1_D     \n                                       \n     B.2) RCC-M, CLASSE 2, CRITERES C & D\n     ------------------------------------\n     TAB4.'NOM2'.'Sa' : contrainte calculee pour les\n                        criteres C & D (type ENTIER ou FLOTTANT)\n                                  \n     ou NOM2 prend les valeurs suivantes:\n     RCCM_CLASSE_2_C ou RCCM_CLASSE_2_D\n     \n     B.3) RCC-MR, CRITERES C & D\n     ---------------------------\n     TAB4.'NOM2'.'PmPb': contrainte d'instabilite plastique \n                         due a la pression et aux moments dus\n                         aux forces, calculee pour les criteres C & D\n                        (type ENTIER ou FLOTTANT)\n\n     TAB4.'NOM2'.'SigmSigb' : contrainte de flambage due a la pression\n                              et aux moments dus aux forces, \n                              calculee pour les criteres C & D\n                              (type ENTIER ou FLOTTANT)\n                                    \n     ou NOM2 prend les valeurs suivantes :\n     RCCMR_C ou RCCMR_D                      \n       \n     B.4) ASME, CLASSE 1 et 2, CRITERES C & D\n     ----------------------------------------\n      \n     TAB4.'NOM2'.'Sapoids' : contrainte due au poids seul,\n                             calculee pour les classes 1 & 2, les \n                             criteres C & D (type ENTIER ou FLOTTANT) \n     et\n     TAB4.'NOM2'.'Sa' : contrainte calculee due a tous les efforts,\n                        calculee pour les classes 1 & 2, les \n                        criteres C & D (type ENTIER ou FLOTTANT) \n\n     ou NOM2 prend les valeurs suivantes :\n     ASME_CLASSE_1_C , ASME_CLASSE_1_D\n     ASME_CLASSE_2_C , ASME_CLASSE_2_D\n                   \n     B.5) ETCM, CLASSE 2, CRITERES C & D\n     -----------------------------------\n     TAB4.'ETCM_CLASSE_2_C'.'Sac' : contrainte calculee pour le\n                                    critere C (type ENTIER ou FLOTTANT)\n                                  \n     TAB4.'ETCM_CLASSE_2_D'.'Sad' : contrainte calculee pour le\n                                    critere D (type ENTIER ou FLOTTANT)\n     \n     C) CONTRAINTE MAXIMUM TOTAL\n     ---------------------------\n     S'il y a plus d'un reglement-classe-critere dans l'etude reglementaire,\n     la contrainte maximum de toutes les combinaisons reglement-classe-critere,\n     est sauvegardee dans:\n     TAB4.'SAMAX' : contrainte maximum de tous les reglements\n                    (type ENTIER ou FLOTTANT)\n\n     \n     2.2.2 MODE AUTOMATIQUE :\n     -----------------------\n     Une zone est definie par un maillage et un modele. Le nombre de\n     zones constituant la ligne de tuyauterie est sauvegardee dans:\n     TAB4.'NBZONE' : nombre de zones (type ENTIER)\n \n     INDICES DES SOUS-TABLES\n     -----------------------\n     L'ensemble des donnees suivantes sont sauvegardees pour chaque zone.\n     Chaque sous-table est indicee par un entier i variant de 1 au nombre\n     de zones.\n     \n     A) CARACTERISTIQUES DES ZONES\n     -----------------------------\n     TAB4.'MODL' : (type TABLE) de sous-type 'MODL'   \n     TAB4.'MODL'.i : modele de la zone i (type MMODEL)\n     \n     TAB4.'MAIL' : (type TABLE) de sous-type 'MAIL'   \n     TAB4.'MAIL'.i : maillage de la zone i (type MAILLAGE)\n     \n     TAB4.'NATURE' : (type TABLE) de sous-type 'NATURE'   \n     TAB4.'NATURE'.i : nature de la zone i (type MOT)\n                       deux possibilites: COUDE OU ZONE DROITE\n     \n     TAB4.'RAYON' : (type TABLE) de sous-type 'RAYON'   \n     TAB4.'RAYON'.i : rayon de la zone i (type ENTIER OU FLOTTANT)\n     \n     TAB4.'RCOURB' : (type TABLE) de sous-type 'RCOURB'   \n     TAB4.'RCOURB'.i : rayon de courbure la zone i, uniquement\n                       pour les coudes (type ENTIER OU FLOTTANT)\n     \n     TAB4.'EPAISSEUR' : (type TABLE) de sous-type 'EPAISSEUR'   \n     TAB4.'EPAISSEUR'.i : epaisseur de la zone i\n                          (type ENTIER OU FLOTTANT)\n     \n     TAB4.'PRESSION' : (type TABLE) de sous-type 'PRESSION'   \n     TAB4.'PRESSION'.i : pression de la zone i\n                         (type ENTIER OU FLOTTANT)\n     \n     TAB4.'I' : (type TABLE) de sous-type 'I'   \n     TAB4.'I'.i : moment d'inertie de la zone i\n                  (type ENTIER OU FLOTTANT)\n     \n     TAB4.'Z' : (type TABLE) de sous-type 'Z'   \n     TAB4.'Z'.i : module d'inertie de la zone i\n                  (type ENTIER OU FLOTTANT)\n                  \n     TAB4.'COEF_COUDE' : (type TABLE) de sous-type 'COEF_COUDE'           \n     TAB4.'COEF_COUDE'.i : Coefficient caracteristique des coudes\n                           de la zone i (type ENTIER ou FLOTTANT)         \n         \n     B) CONTRAINTES\n     --------------     \n     B.1) RCC-M CLASSE 1 ET EMSI CLASSE 1, CRITERES C & D\n     ----------------------------------------------------\n     TAB4.'NOM2'.'Sa' : type TABLE) de sous-type 'Sa'\n     TAB4.'NOM2'.'Sa'.i : contrainte de la zone i,\n                          calculee pour les criteres C & D\n                          (type MCHAML)\n                          \n     et si la zone est une partie droite, en critere de niveau D,\n     on determine en plus:\n     \n     TAB4.'NOM2'.'Sapdroite' : (type TABLE) de sous-type 'Sapdroite'\n     TAB4.'NOM2'.'Sapdroite'.i : contrainte  de la zone i, calculee en \n                                 critere D, pour une partie droite\n                                (type MCHAML) \n                               \n     ou NOM2 prend les valeurs suivantes:\n     RCCM_CLASSE_1_C ou RCCM_CLASSE_1_D\n     EMSI_CLASSE_1_C ou EMSI_CLASSE_1_D     \n                                               \n     B.2) RCC-M, CLASSE 2, CRITERES C & D\n     ------------------------------------\n     TAB4.'NOM2'.'Sa' : type TABLE) de sous-type 'Sa'\n     TAB4.'NOM2'.'Sa'.i : contrainte de la zone i, calculee pour les\n                          criteres C & D (type MCHAML)\n                                  \n     ou NOM2 prend les valeurs suivantes:\n     RCCM_CLASSE_2_C ou RCCM_CLASSE_2_D\n     \n     B.3) RCC-MR, CRITERES C & D\n     ---------------------------\n     TAB4.'NOM2'.'PmPb' : type TABLE) de sous-type 'PmPb'\n     TAB4.'NOM2'.'PmPb'.i: contrainte d'instabilite plastique \n                           de la zone i due a la pression et \n                           aux moments dus aux forces,\n                           calculee pour les criteres C & D\n                           (type MCHAML)\n\n     TAB4.'NOM2'.'SigmSigb' : type TABLE) de sous-type 'SigmSigb'\n     TAB4.'NOM2'.'SigmSigb'.i : contrainte de flambage de la zone i \n                                due a la pression et aux moments dus \n                                aux forces, calculee pour les criteres C & D\n                                (type MCHAML)\n                                    \n     ou NOM2 prend les valeurs suivantes :\n     RCCMR_C ou RCCMR_D                      \n       \n     B.4) ASME, CLASSE 1 et 2, CRITERES C & D\n     ----------------------------------------\n     TAB4.'NOM2'.'Sa' : type TABLE) de sous-type 'Sapoids'      \n     TAB4.'NOM2'.'Sapoids'.i : contrainte de la zone i due au poids seul,\n                               calculee pour les classes 1 & 2, les \n                               criteres C & D (type MCHAML) \n     et\n     TAB4.'NOM2'.'Sa' : type TABLE) de sous-type 'Sa'     \n     TAB4.'NOM2'.'Sa'.i : contrainte de la zone i due a tous les efforts,\n                          calculee pour les classes 1 & 2, les \n                          criteres C & D (type MCHAML) \n\n     ou NOM2 prend les valeurs suivantes :\n     ASME_CLASSE_1_C , ASME_CLASSE_1_D\n     ASME_CLASSE_2_C , ASME_CLASSE_2_D\n                   \n     B.5) ETCM, CLASSE 2, CRITERES C & D\n     -----------------------------------\n     TAB4.'ETCM_CLASSE_2_C'.'Sac' : type TABLE) de sous-type 'Sac'\n     TAB4.'ETCM_CLASSE_2_C'.'Sac'.i : contrainte de la zone i, \n                                      calculee pour le critere C\n                                      (type MCHAML) \n                                      \n     TAB4.'ETCM_CLASSE_2_D'.'Sad' : type TABLE) de sous-type 'Sad'\n     TAB4.'ETCM_CLASSE_2_D'.'Sad'.i : contrainte de la zone i, \n                                      calculee pour le critere D\n                                      (type MCHAML)\n     \n     C) CONTRAINTES MAXIMUM\n     ----------------------\n     C.1) POUR UNE COMBINAISON REGLEMENT-CLASSE-CRITERE\n     --------------------------------------------------\n     Pour chaque combinaison reglement-classe-critere on sauvegarde\n     la contrainte maximum pour toute la ligne:         \n\n     TAB4.'NOM3'.'Sanom'.'MAX' : contrainte maximum sur toute \n                               la ligne pour la combinaison NOM3\n                               (type ENTIER ou FLOTTANT)\n                                     \n     Le modele correspondant est sauvegarde dans:                       \n     TAB4.'NOM3'.'MODELMAX' : modele de la zone correspondante a \n                              la contrainte maximum sur toute la ligne\n                              pour la combinaison NOM3 (type MMODEL)\n                                                     \n     Le maillage correspondant est sauvegarde dans:                     \n     TAB4.'NOM3'.'MAILMAX' : maillage de la zone correspondante a \n                             la contrainte maximum sur toute la ligne\n                             pour la combinaison NOM3 (type MAILLAGE)\n                             \n     ou NOM3 et Sanom prennent les valeurs suivantes:\n     \n   - Pour RCC-M CLASSE comme pour EMSI CLASSE 1, on fait une distinction \n     dans la nomination entre critere C et critere D car dans le cas d'une \n     partie droite on determine une contrainte supplementaire Sapdroite. \n     Alors que la contrainte Sa entre les deux criteres est identique, \n     il n'y a que la limite admissible qui change. Soit:\n     \n      Critere C : NOM3 = RCCM_CLASSE_1_C et Sanom = Sa\n      Critere D : NOM3 = RCCM_CLASSE_1_D et Sanom = Sa ou Sapdroite\n      \n     De meme:\n      Critere C : NOM3 = EMSI_CLASSE_1_C et Sanom = Sa\n      Critere D : NOM3 = EMSI_CLASSE_1_D et Sanom = Sa ou Sapdroite\n                                   \n   - De meme, pour ETCM CLASSE_2, les contraintes calculee entre critere C \n     (Sac) et critere D(Sad) sont differentes, d'ou:\n     \n     Critere C : NOM3 = ETCM_CLASSE_2_C et Sanom = Sac\n     Critere D : NOM3 = ETCM_CLASSE_2_D et Sanom = Sad\n\n   - Pour RCC-M CLASSE2 : meme contrainte Sa calculee entre les deux criteres,\n                          il n'y a que la limite admissible qui change.\n                          On ne fait pas de distinction dans la nomination.\n                          \n      Criteres C ou D : NOM3 = RCCM_CLASSE_2 et Sanom = Sa\n   \n   - Pour RCC-MR : memes contraintes PmPb et SigmSigb calculees entre les deux \n                   criteres, il n'y a que la limite admissible qui change.\n \n      Criteres C ou D : NOM3 = RCCMR et Sanom = PmPb\n      et\n      Criteres C ou D : NOM3 = RCCMR et Sanom = SigmSigb\n      \n   - Pour ASME CLASSE 1 : memes contraintes Sapoids et Sa calculees entre les \n                          deux criteres, il n'y a que la limite admissible \n                          qui change.\n                          On ne fait pas de distinction dans la nomination.\n                                                  \n      Criteres C ou D : NOM3 = ASME_CLASSE_1 et Sanom = Sapoids\n      et\n      Criteres C ou D : NOM3 = ASME_CLASSE_1 et Sanom = Sa\n      \n   - Pour ASME CLASSE 2 : memes contraintes Sapoids et Sa calculees entre les \n                          deux criteres, il n'y a que la limite admissible \n                          qui change.\n                          On ne fait pas de distinction dans la nomination.\n                                                  \n      Criteres C ou D : NOM3 = ASME_CLASSE_2 et Sanom = Sapoids\n      et\n      Criteres C ou D : NOM3 = ASME_CLASSE_2 et Sanom = Sa\n      \n      \n     C.2) CONTRAINTES MAXIMUM TOTAL\n     ------------------------------\n     S'il y a plus d'une combinaison reglement-classe-critere dans l'etude\n     reglementaire, la contrainte maximum de toutes les combinaisons\n     reglement-classe-critere est sauvegardee dans:\n     TAB4.'SAMAX' : contrainte maximum de tous les reglements\n                    (type MCHAML)\n                    \n     Le modele de la zone correspondante est sauvegarde dans:                   \n     TAB4.'MODELMAX' : modele correspondant a la contrainte maximum\n                       de tous les reglements (type MMODEL)\n     \n     Le maillage de la zone correspondante est sauvegarde dans:                 \n     TAB4.'MAILMAX' : maillage correspondant a la contrainte\n                      maximum de tous les reglements\n                      (type MAILLAGE)\n                                  ",
  },
  {
    name: "COLI",
    url: "COLI",
    documentation:
      "$$$$ COLI     NOTICE  BP208322  15/06/26    21:15:05     8562           \n                                             DATE     15/06/26\n\n    Operateur COLI                           Voir aussi : COMB\n    --------------  \n    CH1 = COLI | CH2 FLOT2  CH3 FLOT3  ( CH4 FLOT4 ...) | ;\n               | LISTCHP1 LISTREE1                      |\n               | TABL1    LISTREE1                      |\n\n    Objet :\n    _______\n\n    L'operateur COLI effectue la combinaison lineaire \n    d'objets de meme type ponderes par une suite de reels.\n    \n    \n    Syntaxe 1 : \n    __________\n    \n    CH1 = COLI  CH2 FLOT2  CH3 FLOT3  ( CH4 FLOT4 ...) ;\n    \n    CH2, CH3, ...     : objets de type CHPOINT ou MCHAML\n    FLOT2, FLOT3, ... : type FLOTTANT\n    \n    CH1 : nouveau champ resultat de meme type que les CHi \n    CH1 =  CH2 * FLOT2  +  CH3 * FLOT3  +  ...\n    \n    \n    Syntaxe 2 : \n    __________\n    \n    CH1 = COLI  LISTCHP1 LISTREE1 ;\n    \n    Les champs CH2, CH3 ... de type CHPOINT sont dans un LISTCHPO\n    Les reels FLOT2, FLOT3, ... sont dans un LISTREEL\n    \n    \n    Syntaxe 3 : \n    __________\n    \n    CH1 = COLI  TABL1    LISTREE1 ;\n\n    Les objets de type CHPOINT, MCHAML ou LISTREEL sont indexes dans une\n    TABLE par des ENTIERS de 1 a N  par PAS de 1\n    Les reels FLOT2, FLOT3, ... sont dans un LISTREEL \n    \n    Exemple avec une table de CHPOINT ou de MCHAML:\n      TABL1 . 1 = CH2; \n      TABL1 . 2 = CH3;\n      LIST1 = PROG FLOT2 FLOT3;\n      CH1 =  COLI  TABL1 LIST1;\n    Le resultat CH1 est un nouveau champ de meme type que les CHi \n    tel que :CH1 =  CH2 * FLOT2  +  CH3 * FLOT3  \n    \n    Exemple avec une table de LISTREEL:\n      TABL1 . 1 = COS (PROG 1. PAS 1. 360.); \n      TABL1 . 2 = SIN (PROG 1. PAS 1. 360.); \n      LIST1 = PROG FLOT2 FLOT3;\n      CH1 = COLI  TABL1 LIST1;\n    Le resultat CH1 est un LISTREEL tel que :\n    CH1 =  (TABL1 . 1) * FLOT2  +  (TABL1 . 2) * FLOT3  \n    \n    ",
  },
  {
    name: "COLL",
    url: "COLL",
    documentation:
      "$$$$ COLL     NOTICE  GF238795  15/01/26    21:15:01     8355           \n                                             DATE     15/01/26\n                                             \n    Operateur COLLABORATEUR                   Voir aussi : ASSI\n    --------------  \nL'op\u00e9rateur COLL(aborateur) fournit des fonctionnalit\u00e9s de communication et\nd'\u00e9changes d'objets entre diff\u00e9rents collaborateurs de Cast3m (copies) pour\npouvoir r\u00e9aliser des calculs \u00e0 m\u00e9moire distribu\u00e9e.\nL'op\u00e9rateur utilise actuellement la libraire openMPI pour transmettre les\nmessages. La fonctionnalit\u00e9 voulue est s\u00e9lectionn\u00e9e en pr\u00e9cisant un mot clef\nqui peut \u00eatre :\n        -DEBUT\n        -FIN\n        -RANG\n        -NOMBRE\n        -ENVOYER\n        -RECEVOIR\n                \n--------------------------------------------------------------------------------\n 1) Initialisation des communications : DEBUT\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      COLL 'DEBUT';\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      N/A\n          \n   -------------------------\n        Description :\n   --------------------------\n      La directive COLL 'DEBUT' initialise l'environnement de communication MPI.\n      Elle initialise aussi les piles de communication gardant l'historique des\n      communications entre les collaborateurs.\n\n      Cette directive doit \u00eatre appel\u00e9e avant toute utilisation des autres\n      fonctionnalit\u00e9s des collaborateurs. Un appel \u00e0 une autre fonctionnalit\u00e9\n      avant un appel \u00e0 COLL 'DEBUT' provoque une sortie en erreur de l'op\u00e9rateur\n      COLL.\n      Elle appelle la fonction mpi_Init_Thread et la documentation d'OpenMPI\n      recommande de l'appeler le plus t\u00f4t possible. De plus, MPI limite son\n      appel \u00e0 une fois par ex\u00e9cution de Cast3m.\n\n--------------------------------------------------------------------------------\n 2) Fermeture des communications : FIN\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      COLL 'FIN';\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      N/A\n          \n   --------------------------\n        Description :\n   --------------------------    \n      Cette directive ferme l'environnement de communication MPI. Elle lib\u00e8re\n      ensuite les piles de communication. Elle doit \u00eatre appel\u00e9e avant de\n      quitter cast3m et une fois toutes les communications termin\u00e9es.\n\n      La directive COLL 'FIN' r\u00e9alise un appel \u00e0 la fonction mpi_Finalize et\n      ne peut \u00eatre appel\u00e9e qu'une fois par ex\u00e9cution. Ceci est une limitation\n      de MPI.\n\n      Une fois COLL 'FIN' appel\u00e9e, il n'est plus possible d'obtenir des\n      informations sur l'environnement parall\u00e8le ou d'\u00e9changer des messages m\u00eame\n      apr\u00e8s un autre appel \u00e0 COLL 'DEBUT'.\n\n      Si un collaborateur se termine sans appeler cette routine, l'environnement\n      d'ex\u00e9cution MPI d\u00e9tecte une sortie non pr\u00e9vue. Il arr\u00eate tous les autres\n      collaborateurs et renvoie une erreur.\n\n--------------------------------------------------------------------------------\n 3) R\u00e9cup\u00e9ration du rang du collaborateur : RANG\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      ENT1= COLL 'RANG';\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      ENT1 : entier, num\u00e9ro du collaborateur\n   \n   --------------------------\n        Description :\n   --------------------------\n      L'op\u00e9rateur COLL 'RANG' permet de r\u00e9cup\u00e9rer le num\u00e9ro du collaborateur\n      dans l'environnement parall\u00e8le.\n      Ce num\u00e9ro est compris entre 1 et (COLL 'NOMBRE').\n\n--------------------------------------------------------------------------------\n 4) R\u00e9cup\u00e9ration du nombre de collaborateurs : NOMBRE\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      ENT1= COLL 'NOMBRE'; \n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      ENT1 : entier, nombre de collaborateurs\n\n   --------------------------\n        Description :\n   --------------------------\n      L'op\u00e9rateur COLL 'NOMBRE' permet de r\u00e9cup\u00e9rer le nombre total de\n      collaborateurs dans l'environnement parall\u00e8le.\n           \n--------------------------------------------------------------------------------\n 5) Envoi d'un message : ENVOYER\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      COLL 'ENVOYER' ENT1 OBJ1 .. OBJi .. OBJn; \n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      ENT1 : Entier, num\u00e9ro du collaborateur destinataire du message.\n      OBJi : Objets \u00e0 envoyer. Leur type doit faire partie des types support\u00e9s. \n          \n   --------------------------\n        Description :\n   --------------------------\n      L'op\u00e9rateur COLL 'ENVOYER' permet d'envoyer des objets \u00e0 un collaborateur.\n      Cet op\u00e9rateur est bloquant. L'envoi du message ne commence que lorsque le\n      destinataire est pr\u00eat \u00e0 recevoir et l'ex\u00e9cution de l'op\u00e9rateur ne se\n      termine que lorsque le message est re\u00e7u.\n\n      Les types d'objet actuellement support\u00e9s sont :\n         -FLOTTANT    : flottant\n         -ENTIER      : entier\n         -LOGIQUE     : logique\n         -MOT         : mot\n         -CONFIGUR    : configuration\n         -POINT       : noeud\n         -MAILLAGE    : maillage\n         -CHPOINT     : champ par point\n         -MCHAML      : champ par \u00e9l\u00e9ment\n         -RIGIDITE    : rigidit\u00e9\n         -MMODEL      : mod\u00e8le\n  \n   --------------------------\n        Notes :\n   --------------------------\n      L'op\u00e9rateur COLL 'ENVOYER' utilise des fonctions bloquantes de MPI\n      (mpi_send, mpi_recv, mpi_probe). La communication est synchrone et peut\n      emp\u00eacher un script de se terminer si l'appel \u00e0 COLL 'RECEVOIR'\n      correspondant n'est pas r\u00e9alis\u00e9 par le destinataire.\n\n      En utilisation directe, il n'est pas possible \u00e0 un collaborateur de\n      s'envoyer lui-m\u00eame un message. En effet, l'appel \u00e0 COLL 'ENVOYER' \u00e9tant\n      bloquant, le collaborateur ne peut pas lancer l'appel au COLL 'RECEVOIR'\n      correspondant. Cela provoque des blocages lors d'un envoi \u00e0 soi-m\u00eame.\n      La solution est alors d'utiliser les assistants pour r\u00e9aliser l'envoi du\n      message. Pour cela, voir la remarque plus bas sur les communications\n      asynchrones.\n\n--------------------------------------------------------------------------------\n 6) R\u00e9ception d'un message : RECEVOIR\n--------------------------------------------------------------------------------\n   --------------------------\n        Syntaxe :\n   --------------------------\n      OBJ1 .. OBJi .. OBJn = COLL 'RECEVOIR' ENT1; \n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n      ENT1 : Entier, num\u00e9ro du collaborateur exp\u00e9diteur du message\n      OBJi : Objets re\u00e7us\n          \n   --------------------------\n        Description :\n   --------------------------\n      L'op\u00e9rateur COLL 'RECEVOIR' attend et re\u00e7oit un message d'un collaborateur\n      donn\u00e9 et puis renvoie \u00e0 l'utilisateur les objets fournis en argument du\n      COLL 'ENVOYER' correspondant. Cet appel est bloquant et ne se termine\n      qu'une fois le message re\u00e7u.\n\n   --------------------------\n        Notes :\n   --------------------------\n      Les objets sont renvoy\u00e9s dans l'ordre dans lequel ils ont \u00e9t\u00e9 donn\u00e9s \u00e0\n      l'envoi.  Ainsi, l'objet i lors d'un appel \u00e0 COLL 'ENVOYER'  restera\n      l'objet i dans la liste des objets r\u00e9sultats de COLL 'RECEVOIR'.\n\n      L'op\u00e9rateur COLL 'RECEVOIR' utilise des fonctions bloquantes de MPI\n      (mpi_send, mpi_recv, mpi_probe). La communication est synchrone et peut\n      emp\u00eacher un script de se terminer si l'appel \u00e0 COLL 'ENVOYER'\n      correspondant n'est pas fait.\n\n--------------------------------------------------------------------------------\n    Remarques\n--------------------------------------------------------------------------------\n   ----------------------------\n        D\u00e9tection des objets envoy\u00e9s\n   ----------------------------\n      Afin de limiter la quantit\u00e9 de donn\u00e9es envoy\u00e9es, les objets d\u00e9j\u00e0 envoy\u00e9s\n      sont d\u00e9tect\u00e9s. L'exp\u00e9diteur ne r\u00e9-envoie pas les objets d\u00e9j\u00e0 trait\u00e9 et le\n      destinataire r\u00e9-utilise les objets qui poss\u00e8de d\u00e9j\u00e0 en m\u00e9moire.\n      Ceci est facilement v\u00e9rifiable en envoyant deux fois le m\u00eame objet et en\n      v\u00e9rifiant que les deux objets re\u00e7us ont le m\u00eame pointeur \u00c9sope.\n\n   ----------------------------\n        Communications asynchrones\n   ----------------------------\n      Les op\u00e9rateurs COLL 'ENVOYER' et COLL 'RECEVOIR' r\u00e9alisent des\n      communications synchrones et utilisent des appels bloquants de MPI. Il est\n      toutefois possibles de r\u00e9aliser des communications asynchrones avec ces\n      op\u00e9rateurs.  Pour cela, il faut utiliser les assistants de Cast3m via\n      l'op\u00e9rateur ASSI.  Cet op\u00e9rateur permet d'ex\u00e9cuter les lignes de commande\n      Gibiane de mani\u00e8re asynchrone.\n      L'interpr\u00e9teur Gibiane passe \u00e0 l'instruction suivante sans attendre la fin\n      de la pr\u00e9c\u00e9dente ce qui permet de lancer la communication sur un assistant\n      et de continuer tout de suite d'ex\u00e9cuter le reste du script. \n      Un communication peut donc se faire de mani\u00e8re asynchrone en utilisant les\n      commandes\n      ASSI 1 COLL 'ENVOYER' ENT1 OBJi;\n      et\n      OBJi = ASSI 1 COLL 'RECEVOIR' ENT2;\n\n      Les r\u00e9sultats de COLL 'RECEVOIR' ne peuvent pas \u00eatre utilis\u00e9 tant que\n      l'op\u00e9rateur ne s'est pas termin\u00e9, c'est \u00e0 dire tant qu'ils n'ont pas \u00e9t\u00e9\n      correctement re\u00e7us.\n\n      De cette mani\u00e8re, un collaborateur peut r\u00e9aliser une communication vers\n      lui-m\u00eame en lan\u00e7ant l'envoi sur un assistant. L'ex\u00e9cution du script pourra\n      continuer jusqu'\u00e0 ce que COLL 'RECEVOIR' soit appel\u00e9.\n   \n   ----------------------------\n   Communication globale\n   ----------------------------\n      Les op\u00e9rateurs de communication r\u00e9alisent des communications point \u00e0\n      point.  Il est possible de r\u00e9aliser facilement une communication globale\n      en utilisant l'option TOUS de l'op\u00e9rateur ASSI.\n      \n      Il faut remplir une liste de destinataire et lancer la commande\n      ASSI TOUS COLL 'ENVOYER' DESTI OBJ TABOBJ;\n\n      La table DESTI est une table d'entier de sous-type ESCLAVE contenant les\n      num\u00e9ro des collaborateurs destinataires. (voir exemple 2)\n\n      Si OBJ est un objet simple, il sera envoy\u00e9 \u00e0 tous les destinataires de la\n      liste DESTI. Si TABOBJ est une table de sous-type ESCLAVE, elle est\n      remplac\u00e9e par l'\u00e9l\u00e9ment correspondant de la table. Ainsi, l'objet TABOBJ.i\n      sera envoy\u00e9 au destinataire DESTI.i.\n\n      De la m\u00eame mani\u00e8re, il est possible de recevoir un message d'une liste\n      d'exp\u00e9diteur en utilisant\n      TABRESU = ASSI TOUS COLL 'RECEVOIR' DESTI;\n\n   ----------------------------\n   Objets configuration\n   ----------------------------\n      Lors de leur premi\u00e8re apparition dans un message, les noeuds sont\n      initialis\u00e9s avec les coordonn\u00e9es de la configuration actuelle de\n      l'exp\u00e9diteur.\n\n      Une fois cr\u00e9\u00e9 chez le destinataire, un noeud n'est pas modifi\u00e9 m\u00eame si ses\n      coordonn\u00e9es ont chang\u00e9 chez l'exp\u00e9diteur. Pour transmettre des nouvelles\n      coordonn\u00e9s de noeuds, il faut envoyer un objet CONFIGUR contenant les\n      coordonn\u00e9es \u00e0 jour des noeuds et appliquer l'objet chez le destinataire\n      par l'op\u00e9rateur FORM (voir exemple 1). \n\n      Les configurations envoy\u00e9es sont r\u00e9duites \u00e0 uniquement \u00e0 la liste des\n      noeuds n\u00e9cessaires. Seule les coordonn\u00e9es des noeuds pr\u00e9sents dans des\n      objets \u00e9chang\u00e9s sont envoy\u00e9es. Les objets CONFIGUR re\u00e7us sont compl\u00e9t\u00e9s\n      avec les coordonn\u00e9es des autres noeuds en m\u00e9moire du destinataire.\n\n      Si le nombre de dimensions est diff\u00e9rent entre les deux collaborateurs,\n      les composantes suppl\u00e9mentaires des coordonn\u00e9es sont tronqu\u00e9es et les\n      composantes manquantes sont mises \u00e0 z\u00e9ro. Par exemple, si un collaborateur\n      en dimension 2 envoie le noeud (12,42) \u00e0 un collaborateur en dimension 3,\n      le noeud cr\u00e9\u00e9 aura les coordonn\u00e9es (12,42,0). Si un collaborateur en\n      dimension 3 envoie le noeud (21,24,6) \u00e0 un collaborateur en dimension 2,\n      le noeud cr\u00e9e aura les coordonn\u00e9es (21,24).\n\n--------------------------------------------------------------------------------\n    Exemples\n--------------------------------------------------------------------------------\n   ----------------------------\n   Envoi d'un maillage et \n   application d'une \n   configuration\n   ----------------------------\n                COLL DEBUT;\n                NPROCE = COLL RANG;\n                SI(NPROCE EGA 1);\n         MA1 = SURF ...;\n                        COLL ENVOYER 2 MA1;\n         DEPLA PLUS MA1 (1 1);\n         CFG1 = FORM;\n         COLL ENVOYER 2 CFG1;\n                SINON;\n                        REMA1 = COLL RECEVOIR 1;\n         RECFG1 = COLL RECEVOIR 1;\n         FORM RECFG1;\n                FINSI;\n      COLL FIN;\n      FIN;\n                \n   ----------------------------\n        Envoi global et d\u00e9tection \n   d'objets d\u00e9j\u00e0 envoy\u00e9s\n   ----------------------------\n                COLL DEBUT;\n                NPROCE = COLL RANG;\n                TOTPROC = COLL NOMBRE;\n                SI(NPROCE EGA 1);\n         DESTI = TABLE 'ESCLAVE';\n         REPETER IDOM (TOTPROC);\n            DESTI.&IDOM=&IDOM;\n         FIN IDOM;\n         MA1 = SURF ...;\n         MA2 = SURF ...;\n         PART1 = PART TOTPROC MA1;\n         ASSI TOUS COLL ENVOYER DESTI PART1 MA2;\n         COLL ENVOYER 2 PART1.2;\n                FINSI;\n      REMA1 REMA2 = COLL RECEVOIR 1;\n                SI(NPROCE EGA 2);\n         REMA3 = COLL RECEVOIR 1;\n         LIST REMA1; \n         LIST REMA3;\n*  Chez le collaborateur 2, REMA3 est le m\u00eame objet que REMA1, le lister\n*  permet de v\u00e9rifier qu'ils ont le m\u00eame pointeur\n                FINSI;\n      COLL FIN;\n      FIN;\n        ",
  },
  {
    name: "COLLER",
    url: "COLLER",
    documentation:
      "$$$$ COLLER   NOTICE  BP208322  17/03/30    21:15:05     9384           \n                                             DATE     17/03/30\n\n                                        \n    Procedure COLLER                      Voir aussi : COLLER1, COLLER2\n    ----------------  \n     COQMASF = COLLER VOLUM8 SURF4 ('SOUPLE') ;\n\n\n FONCTION :\n ---------\n\n     Definir des jonctions coque-massif ou poutre-massif en 3D.\n\n\n OPERANDES :\n ----------\n\n     VOLUM8   : Zone volumique (type MAILLAGE).\n     \n     SURF4    : Zone modelisee en coques ou poutres, ou\n                ensemble de points de l'enveloppe de VOLUM8 sur lesquels\n                on veut connaitre les rotations (type MAILLAGE).\n                \n     'SOUPLE' : mot-cle (type MOT) demandant une certaine souplesse a la\n                \"colle\" : on ne definit la jonction qu'en 1 point sur 2.\n\n RESULTATS :\n ----------\n\n     COQMASF  : Matrice (type RIGIDITE) definissant des rotations sur \n                quelques points bien choisis de l'enveloppe des massifs.\n                A adjoindre aux relations cinematiques (conditions aux \n                limites et autres) du probleme.\n\n REMARQUES :\n ----------\n\n     L'option 'SOUPLE' a ete introduite pour contre-balancer la\n     raideur excessive d'un maillage trop grossier.\n     l'effet de l'option \"souple\" est aussi facile a quantifier que\n     celui des grosses mailles ...\n\n     COLLER permet aussi de generer les valeurs de rotation sur un\n     ensemble de noeuds appartenant a des elements massifs.\n     \n     Les valeurs de deplacements sont deja communes aux deux parties\n     en raison des noeuds communs (cf. noeud X de l'illustration).\n \n ILLUSTRATIONS :\n --------------\n\n                +--+--+--+--+            +--+--+--+\n                |  |  |  |  |            |  |  |  |\n   3D massif    +--+--+--+--+            +--+--+--+\n                |  |  |  |  |            |  |  |  |\n                +--+--+--+--+            +--+--+--+\n                |  |  |  |  |            |  |  |  |\n                +--+--+--+--+            +--+--+--+\n                |  |  |  |  |            |  |  |  |\n                +--+--X--+--+            +--X--+--+\n                      I                      \\    \n   3D coque           I                       \\    \n   ou poutre          I                        \\    \n                      I                         \\    \n                      I                          \\    \n            \n     ",
  },
  {
    name: "COLLER1",
    url: "COLLER1",
    documentation:
      "$$$$ COLLER1  NOTICE  BP208322  17/03/30    21:15:05     9384           \n                                             DATE     17/03/30\n\n    Procedure COLLER1  :                    Voir aussi : COLLER COLLER2\n    --------------------  \n     POUTCOQ = COLLER1 SURF4 POUT2 (ANG) ;\n\n\n FONCTION:\n ---------\n\n     Definir des jonctions poutre-coque en 3D, de facon a permettre\n     aux coques de resister a des moments de torsion.\n\n\n OPERANDES:\n ----------\n\n     SURF4  : Zone en plaques ou coques (type MAILLAGE).\n     POUT2  : Zone en poutres, ou simplement l'ensemble des points de la\n              surface sur lesquels on veut connaitre la rotation normale\n              (type MAILLAGE).\n     ANG    : Angle mini (type FLOTTANT en degres) d'une poutre avec le \n              plan des coques qu'elle touche. En deca de cette valeur  \n              d'angle, on n'effectue aucune operation particuliere de \n              liaison (5 degres par defaut).\n\n RESULTATS:\n ----------\n\n     POUTCOQ  : Matrice (type RIGIDITE) definissant les rotations \n                normales aux coques.\n                A adjoindre aux relations cinematiques (conditions aux \n                limites et autres) du probleme.\n                \n REMARQUES :\n ----------\n \n     COLLER permet aussi de generer les valeurs de rotation normale sur \n     un ensemble de noeuds appartenant a des elements coques.\n     \n     Les valeurs de deplacements sont deja communes aux deux parties\n     en raison des noeuds communs (cf. noeud X de l'illustration).\n \n ILLUSTRATIONS :\n --------------\n \n   3D coque     +--+--X--+--+            +--X--+--+\n                      I                      \\    \n                      I                       \\    \n   3D poutre          I                        \\    \n                      I                         \\    \n                      I                          \\    ",
  },
  {
    name: "COLLER2",
    url: "COLLER2",
    documentation:
      "$$$$ COLLER2  NOTICE  BP208322  17/04/18    21:15:01     9395           \n                                             DATE     17/04/18\n\n                                        \n    Procedure COLLER2                      Voir aussi : COLLER\n    ----------------  \n     RELA84 = COLLER2 MOD4 MAT4 MOD8 PGLUE (CON1 CON2);\n\n\n FONCTION :\n ---------\n\n     Definir des jonctions coque-massif en 2D et 3D sans avoir de \n     noeuds communs mais avec une geometrie compatible.\n\n\n OPERANDES :\n ----------\n\n     MOD4     : Modele de coque (type MMODEL).\n     \n     MAT4     : Caracteristiques de la coque (epaisseur) (type MCHAML).\n     \n     MOD8     : Modele massif (type MMODEL).\n     \n     PGLUE    : Points de la coque a coller au massif (type MAILLAGE ou \n                POINT).\n\n     CON1, CON2 : Noms des constituants des couches inferieures et \n                  superieures dans le cas d'une coque multicouche \n                  (type MOT).\n     \n RESULTATS :\n ----------\n\n     RELA84   : Matrice (type RIGIDITE) definissant des liaisons\n                coque-massif.\n                A adjoindre aux relations cinematiques (conditions aux \n                limites et autres) du probleme.\n\n REMARQUES :\n ----------\n\n   - D'abord, de nouveaux noeuds avec une cinematique de type massif\n     sont generes en face des noeud PGLUE sur les faces superieure et\n     inferieure de la coque, et lies a ces derniers.\n   - Ensuite ces nouveaux noeuds sont relies au massif via RELA 'ACCRO'\n     ce qui implique que leur positionnement geometrique \n     (Xnew = Xpglue +/- EPAI*normale) doit correspondre a l'interieur\n     ou la frontiere du volume du massif.\n \n ILLUSTRATIONS :\n --------------\n\n                +---+---+---+            +--+--+--+\n                |   |   |   |            |  |  |  |\n   3D massif    +---+---+---+            +--+--+--+\n                |   |   |   |            |  |  |  |\n                +---+---+---+            +--+--+--+\n                |   |   |   |            |  |  |  |\n                +---+---+---+            +--+--+--+\n                |   |   |   |            |  |  |  | I \n                +---+---+---+            +--+--+--+ I \n                      I                             I \n   3D coque           I                             I \n   ou poutre          I                             I \n                      I                             I\n                      I                        \n            \n     ",
  },
  {
    name: "COMB",
    url: "COMB",
    documentation:
      "$$$$ COMB     NOTICE  CHAT      11/09/12    21:15:31     7124           \n                                             DATE     11/09/12\n\n    Operateur COMBTABLE                      Voir aussi : COLI\n    -------------------  \n    CHPO1 = COMB ('SEMBLABLE') CHPO2 TAB1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur COMBTABLE effectue une combinaison lineaire d'objets\nconsignes dans une table indicee par des objets de type POINT.\n\n    Commentaire :\n    _____________\n\n  CHPO2  : champ (type CHPOINT) a une composante de nom quelconque,\n           contenant les coefficients de ponderation. Ce champ s'appuie\n           sur l'ensemble ou une partie des points indi\u00e7ant la table.\n           Ne definir CHPO2 que sur une partie equivaut a affecter des\n           coefficients de ponderation nuls aux CHPOINT d'indice-point\n           exclus de cette partie.\n\n    TAB1   : table contenant les CHPOINT a combiner (type TABLE)\n\n    CHPO1  : champ resultat (type CHPOINT)\n\n    Remarque :\n    __________\n\n    L'option 'SEMBLABLE' indique que les CHPOINT a combiner s'appuient\nsur une Meme geometrie.\n\n    C'est une option qui accelere le calcul, mais qui demande a\nl'utilisateur une bonne maitrise et une bonne connaissance de la\nstructure de ses CHPOINT.",
  },
  {
    name: "COMM",
    url: "COMM",
    documentation:
      "$$$$ COMM     NOTICE  CHAT      11/09/12    21:15:32     7124           \n                                             DATE     11/09/12\n                                             \n  Directive COMMENTAIRE                    Voir aussi :\n    ---------------------  \n    COMM  TEXT1 ;\n\n\n    Objet :\n    _______\n\n    La directive COMM permet d'introduire des commentaires\ndans les donnees, TEXT1 etant un objet de type TEXTE.\n\n    Nota : Le commentaire prend fin au \";\" et ne doit pas comporter de\nparentheses ni de signe \"=\";\n\n    Remarque :\n    __________\n\n    Cette directive est tres avantageusement remplacee par la\nmise en colonne 1 d'une asterisque *. Dans ce cas, la ligne est\nsautee au moment de la lecture et aucun caractere n'est interdit.\n\n    Exemple :\n    _________\n\n    COMM  '  ceci est un commentaire ';\n*           celui-ci coute moins cher |",
  },
  {
    name: "COMP",
    url: "COMP",
    documentation:
      "$$$$ COMP     NOTICE  CHAT      11/09/12    21:15:32     7124           \n                                             DATE     11/09/12\n\n    Operateur COMP                           Voir aussi : MODE MATE \n    --------------                                        CARA  \n    CHE1 = COMP  MOD1 CHE2 CHE3 ;\n\n\n    Objet :\n    _______\n\n    L'operateur COMP etablit l'evolution des champs relatifs a un\n    modele physique, lois de comportement, d'etat ou bien cinetique,\n    entre un instant initiale et un instant final.\n    Il est necessaire de preciser l'objet MMODEL qui induit les lois,\n    l'etat initial des champs necessaires a la formulation contenue\n    dans le modele et l'etat final des variables de controle.\n\n    Applications possibles : lois de comportement en mecanique,\n    transitions de phase en metallurgie ...\n\n    Commentaire :\n    _____________\n\n    MOD1  : type MMODEL\n\n    CHE2  : type MCHAML, ensemble des grandeurs decrivant l'etat \n            initial pour chaque modele elementaire, les champs etant\n            identifies par des noms de composantes (en 4 lettres) \n            et de constituants. Sont inclus notamment la date 'TEMP',\n            la temperature 'T   '.\n\n    CHE3  : type MCHAML, ensemble des grandeurs decrivant l'etat \n            final pour chaque modele elementaire, les champs etant\n            identifies de la meme maniere que ci-dessus.\n            Sont inclus notamment la date 'TEMP', la temperature 'T   '.\n\n    CHE1  : type MCHAML, ensemble des grandeurs decrivant l'etat final.\n\n\n    Remarques :\n    _____________\n\n    Mecanique : Les contraintes, variables internes, deformations \n                inelastiques, deformations totales, ainsi eventuellement\n                que les caracteristiques materiau et geometrique, les\n                parametres externes du modele (s'il en existe) et autres\n                grandeurs relatives a l'etat initial sont rangees dans CHE2.\n                La deformation totale, les caracteristiques de materiau et\n                geometriques, les parametres externes du modele (s'il en\n                existe) relatifs a l'etat final sont ranges dans CHE3.\n                CHE1 contient alors entre autre les nouvelles contraintes,\n                variables internes et deformations inelastiques.\n\n    Metallurgie : La temperature, le temps  et les caracteristiques \n                materiau initiales, telles les proportions de phases ou \n                les tailles de grain, sont rangees dans CHE2. La \n                temperature finale est rangee dans CHE3. CHE1 contient\n                les caracteristiques finales, notamment les proportions \n                de phases.  ",
  },
  {
    name: "COMT",
    url: "COMT",
    documentation:
      "$$$$ COMT     NOTICE  BP208322  18/03/05    21:15:04     9771           \n                                             DATE     18/03/05\n\n    Operateur COMT                           Voir aussi : CMOY TOTE\n    --------------  \n    L'operateur COMT determine :\n    - le nombre de chocs de plusieurs enregistrements d'impacts au cours\n      du temps (1ere syntaxe), \n    - ou le nombre + les maximum des forces et/ou les instants de debut \n      et/ou de fin des chocs d'un enregistrement unique (2eme syntaxe). \n    Chaque choc est detecte par le depassement d'un seuil predefini.\n    \n    \n    +--------------------------------------------+\n    |  1ere syntaxe : calcul du nombre de chocs  |\n    +--------------------------------------------+\n    \n    LENT1 = COMT  EVOL1 (FLOT1) ;\n\n    Commentaire :\n    _____________\n\n    EVOL1  :  Enregistrements des forces de chocs au cours du temps\n              (type EVOLUTION). Il peut y avoir plusieurs courbes dans\n              EVOL1.\n\n    FLOT1  :  Seuil de declenchement de l'acquisition en % de la valeur\n              maximale en valeur absolue des chocs (1.D-6% par defaut).\n              (type FLOTTANT).\n\n    LENT1  :  Objet contenant autant de valeurs qu'il y a de courbes\n              dans EVOL1 (type LISTENTI).\n\n    +---------------------------------------------------+\n    |  2eme syntaxe : determination des temps de chocs  |\n    +---------------------------------------------------+\n    \n    ENT1 (LREE1) (LENT2 et/ou LENT3) \n    = COMT  EVOL1 (FLOT1) ('MAXI') ('DEBU' et/ou 'FIN');\n\n\n    Commentaire :\n    _____________\n\n    EVOL1  :  Enregistrements des forces de chocs au cours du temps\n              (type EVOLUTION). Il ne doit y avoir qu'une seule courbe \n              dans EVOL1.\n\n    FLOT1  :  Seuil de declenchement de l'acquisition en % de la valeur\n              maximale en valeur absolue des chocs (1.D-6% par defaut).\n              (type FLOTTANT).\n\n    ENT1   :  Nombre de chocs (type ENTIER)\n    \n    LREE1  :  Liste des maxi des forces de chocs de chaque impact\n              (type LISTREEL)\n    \n    LENT2  :  Objet contenant les indices de debut de choc, c'est-a-dire\n              les entiers i tels que F_i < seuil et F_i+1 > seuil\n              (type LISTENTI)\n              \n    LENT3  :  Objet contenant les indices de fin de choc, c'est-a-dire\n              les entiers i tels que F_i > seuil et F_i+1 < seuil\n              (type LISTENTI)\n              ",
  },
  {
    name: "CONC",
    url: "CONC",
    documentation:
      "$$$$ CONC     NOTICE  CHAT      11/09/12    21:15:32     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CONCAT                         Voir aussi :\n    ----------------  \n    EVOL3 = CONCAT  EVOL1 EVOL2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur CONCAT effectue la concatenation de deux objets.\n\n    Commentaire :\n    _____________\n\n    EVOL1, EVOL2 : objets a concatener (type EVOLUTION)\n                   Ils possedent le Meme nombre de courbes, N1; celles-ci\n                   sont mises bout a bout deux par deux.\n\n    EVOL3        : resultat (type EVOLUTION) contenant N1 courbes\n\n    Remarque :\n    __________\n\n    Pour la concatenation, on place en premier la courbe dont\nla premiere abscisse est inferieure ou egale a la premiere abscisse de\nl'autre courbe.",
  },
  {
    name: "COND",
    url: "COND",
    documentation:
      "$$$$ COND     NOTICE  CB215821  17/07/18    21:15:02     9504           \n                                             DATE     17/07/18\n                                             \n    Operateur CONDUCTIVITE                   Voir aussi : SORE CAPA\n    ----------------------  \n    RIG1 = CONDUCTIVITE  MMODE1 CAR1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur CONDUCTIVITE cree une matrice de conductivite, de\nsous-type : conductivite, convection ou rayonnement selon le modele.\n\n    Commentaire :\n    _____________\n\n    MMODE1  : structure modelisee (type MMODEL).\n\n    CAR1    : caracteristiques physiques de la structure\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n    RIG1    : matrice de conductivite (type RIGIDITE, sous-type\n              CONDUCTIVITE, CONVECTION ou RAYONNEMENT).\n\n    Remarque importante :\n  -----------------------\n\n   La designation des peaux de la coque se fait par rapport a la\n   normale exterieure de l'element : la peau superieure est placee\n   dans le sens de la normale exterieure vis-a-vis du plan median.\n   Dans le cas o\u00ba les elements ne sont pas orientes d'une fa\u00e7on\n   coherente, il faut les reorienter en utilisant l'operateur ORIENT.",
  },
  {
    name: "CONDENS",
    url: "CONDENS",
    documentation:
      "$$$$ CONDENS  NOTICE  CHAT      11/09/12    21:15:32     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure CONDENS                        Voir aussi : ENCEINTE\n    -----------------  \n    QC Fcond Econd Hcond KKC ROVI FHP HT = CONDENS RXT \n    $paroic TP TF MRVP KHcu;\n    \n    ENTREES : RXT         TABLE\n              $paroic     MMODEL de la paroi condensante\n              TP,TF,MRVP  MOT: \n                          TP=indice du CHPO de temperature paroi dans RXT.'TIC' \n                          TF=indice  du CHPO de temperature fluide \n                          MRVP=indice du CHPO de masse volumique de vapeur\n                          \n              KHcu        FLOTTANT: coefficient d'echange convectif utilisateur\n              \n              \n    SORTIES : QC,Econd,Hcond           FLOTTANT\n              Fcond,KKC,ROVI,FHP,HT    CHPO\n              QC=debit de masse d'eau condensee\n              Econd=energie condensee\n              Hcond=enthalpie condensee\n              Fcond=flux surfacique de masse condenssee\n              KKC=coefficient d'echange de masse\n              ROVI=masse volumique de vapeur a l'interface (saturation)\n              FHP=flux d'energie total convection+condensation\n              HT=coefficient d'echange thermique\n              \n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure CONDENS calcule le flux condense par un modele de type\n Chilton-Colburn et la correlation de convection naturelle :\n      Sh = kL/Dv = 0.13 (Gr Sc)**1/3\n      Jv = k ro (Yv - Yvsat)   en kg/m\u00b2s\n  \n    Commentaires\n    ____________\n\n Une option dont le mot-cle defini dans la table RXT ('MODCOND') \n permet d'utiliser une version valable une fraction massique de\n de vapeur quelconque (< 0.9999). cf. notice de EXECRXT.",
  },
  {
    name: "CONF",
    url: "CONF",
    documentation:
      "$$$$ CONF     NOTICE  CHAT      11/09/12    21:15:33     7124           \n                                             DATE     11/09/12\n                                             \n  Directive CONFONDRE                       Voir aussi :\n    -------------------  \n    CONF POIN1 POIN2 ;\n\n\n    Objet :\n    _______\n\n    La directive CONFONDRE reunit les points POIN1 et POIN2 au point\nPOIN2 (TYPE POINT).",
  },
  {
    name: "CONG",
    url: "CONG",
    documentation:
      "$$$$ CONG     NOTICE  CHAT      11/09/12    21:15:33     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CONGE                           Voir aussi :\n    ---------------  \n    GEO1 GEO3 GEO2 =  LIG1 CONG (N1) FLOT1 LIG2  ('DOUBLE') ;\n\n\n    Objet :\n    _______\n\n    L'operateur CONGE permet de construire un conge de raccordement\n(circulaire) entre deux lignes LIG1 et LIG2.\n\n    Commentaire :\n    _____________\n\n    LIG1 | : lignes a raccorder (type MAILLAGE)\n    LIG2 |\n\n    FLOT1  : rayon du conge (type FLOTTANT)\n\n    N1     : nombre d'elements generes (type ENTIER)\n\n    GEO1 | : segments encadrant le conge (type MAILLAGE)\n    GEO2 |   ces segments sont des parties des lignes LIG1 et LIG2\n\n    GEO3   : conge (type MAILLAGE)\n\n\n    Remarque:\n    __________\n\n    Les resultats sont dans l'ordre decrit ci-dessus (GEO1, GEO3, GEO2).\n\n    Le conge est decoupe en N1 elements si N1 est specifie. Sinon le\n decoupage est etabli en fonction des densites associees aux points de\nlignes LIG1 et LIG2.\n\n                      <--                            <--\n             --------------                     /----------\n            |     LIG1                         /     GEO1\n            |                                 /GEO3\n            |                                /\n         |  |                ====>>         |\n         V  | LIG2                       |  |\n            |                            V  | GEO2\n            |                               |\n            |                               |\n\n\n\n\n    Option DOUBLE :\n    _______________\n\n    L'operateur cree un raccordement en \"s\" (appele \"double coude\")\nentre 2 lignes non secantes. Ce raccordement est centre sur le dernier\npoint de la ligne LIG1 lorsque les lignes sont paralleles et sinon\nau milieu de la droite qui realise la distance minimale entre les\ndeux lignes .\n\n\n    -->                                   -->\n-----------                            -------..\n    LIG1                                 GEO1   :.\n                                                 :. GEO3\n                              ====>>              :.\n                                                   :.\n                    LIG2                            :.   GEO2\n       ------------------                             ----------\n              -->                                        -->",
  },
  {
    name: "CONN",
    url: "CONN",
    documentation:
      "$$$$ CONN     NOTICE  CHAT      11/09/12    21:15:33     7124           \n                                             DATE     11/09/12\n \n    Operateur CONNECTIVITE                   Voir aussi : NLOC\n \n \n    CHAM1=CONN MODL1 |FLOT1 |'NORMAL'                    (MOT1);\n                     |CHAM2 |'POINT'    POIN1             MOT1 ;\n                            |'DROITE'   POIN1 POIN2       MOT1 ;\n                            |'PLAN'     POIN1 POIN2 POIN3 MOT1 ;\n                            |'TRANS'    POIN1             MOT1 ;\n \n\n    Objet :\n    _______\n \n    L'operateur CONNECTIVITE determine le champ par element CHAM1\n(sous-type CONNECTIVITE NON LOCAL) des elements de MODL1, sans\nmodification ou bien symetrises par rapport a un point ou une droite\nou un plan ou encore translates, se trouvant a une distance inferieure\na FLOT1 de chaque element de MODL1. La distance peut variee dans le \nmaillage sous-tendant le modele et est alors specifiee par la composante \n'NLAR' du MCHAML CHAM1 (sous-type CARACTERISTIQUE).\n \n    Commentaire :\n    _____________\n \n    'POINT'   : mot-cle indiquant que l'on etablit les connectivites\n                par rapport a un maillage symetrise par rapport a\n                un point, suivi de:\n \n     POIN1    : point de symetrie (type POINT)\n \n    'DROITE'  : mot-cle indiquant que l'on etablit les connectivites\n                par rapport a un maillage symetrise par rapport a\n                une droite, suivi de:\n \n     POIN1 |  : deux points definissant une droite (type POINT)\n     POIN2 |\n \n    'PLAN'    : mot-cle indiquant que l'on etablit les connectivites\n                par rapport a un maillage symetrise par rapport a\n                un plan, suivi de:\n \n     POIN1 |  : trois points definissant un plan (type POINT)\n     POIN2 |\n     POIN3 |\n \n    'TRANS'   : mot-cle indiquant que l'on etablit les connectivites\n                par rapport a un maillage translate suivant un vecteur,\n                suivi de:\n \n     POIN1    : vecteur de translation (type POINT)\n \n     MOT1     : mot indiquant le nom du constituant (facultatif dans\n                le cas 'NORMAL')\n \n \n    Remarque :\n    __________\n \n    Cet operateur constitue un pre-traitement pour les calculs\nen \"non-local\" (voir l'operateur NLOC).\n \n    Attention :\n    ___________\n \n    MODL1 ne doit comporter qu'un seul constituant, et etre associe\na un maillage comportant une seule region geometrique.\n \n    MOT1 sert a distinguer parmis les connectivites associees a un meme\nmodele. Des connectivites differentes doivent avoir des noms de constituant\ndifferents.\n \n    Exemple :\n    _________\n                                         P4  X------------X  P3\n    Soit le maillage rectangulaire           |            |\n    MESH genere a l'aide de quatres          |    MESH    |\n    points P1,P2,P3,P4. Soit MMOD            |            |\n    un modele associe a MESH.            P1  X------------X  P2\n \n    On veut faire un calcul non local (voir l'operateur NLOC) sur MESH dans\n    un cas ou l'on a physiquement deux axes de symetrie P1-P4 et P1-P2. En\n    notant L la longueur caracteristique, la connectivite a generer est la\n    suivante:\n \n    CONN1='CONN' MMOD L 'NORMAL' 'INTERIEUR';\n    CONN2='CONN' MMOD L 'DROITE' P1 P2 'BORD P1-P2';\n    CONN3='CONN' MMOD L 'DROITE' P1 P4 'BORD P1-P4';\n    CONN4='CONN' MMOD L 'POINT'  P1    'COIN MANQUANT P1';\n    CONN_TOT=CONN1 'ET' CONN2 'ET' CONN3 'ET' CONN4;\n ",
  },
  {
    name: "CONT",
    url: "CONT",
    documentation:
      "$$$$ CONT     NOTICE  JC220346  16/11/18    21:15:54     9187           \n                                             DATE     16/11/18\n\n    Operateur CONTOUR                        Voir aussi : ARET ENVE\n    -----------------                                      TRAC  \n    GEO1 = CONTOUR ('NOID') (|'EXTE'|) GEO2 ;\n                             |'INTE'|\n                             |'TOUT'|\n\n\n    Objet :\n    _______\n\n    L'operateur CONTOUR construit le contour d'un maillage.\n\n    \n    Commentaire :\n    _____________\n\n    GEO2  : objet dont on veut le contour (type MAILLAGE)\n\n    GEO1  : contour de l'objet GEO2 (type MAILLAGE)\n    \n\n    Remarques :\n    ___________\n\n    1) Quand le contour est inexistant, une erreur est declenchee sauf\n       si le mot-cle 'NOID' est present (auquel cas un maillage vide\n       est renvoye)\n       \n    2) Les elements ponctuels, lineiques et volumiques de GEO2 n'ont\n       pas de contour\n    \n    3) Une arete d'un element surfacique de GEO2 appartient au contour\n       GEO1 si :\n       \n       a) elle appartient a un seul element (option 'EXTE' par defaut)\n          => frontiere(s) exterieure(s) de GEO2\n          \n       b) elle est partagee par au moins 3 elements (option 'INTE')\n          => frontiere(s) interieure(s) entre les sous-maillages\n             simples de GEO2 (i.e. generalement homeomorphes a des\n             disques ou a des tores)\n             \n       c) elle n'est pas commune a exactement 2 elements (option 'TOUT')\n          => union des frontieres externe(s) et interne(s) de GEO2\n          \n    4) En 2D, seule la notion de frontiere exterieure a generalement\n       du sens (pas de jonction entre 3 surfaces simples ou plus)",
  },
  {
    name: "CONTINU",
    url: "CONTINU",
    documentation:
      "$$$$ CONTINU  NOTICE  FD218221  20/12/17    21:15:07     10820          \n                                             DATE     20/12/17\n\n\n    Procedure CONTINU                       Voir aussi : PASAPAS HBM\n    ______________                                       CON_CALC AFT  \n                                                                                \n    Objet :\n    ______\n\n    La procedure CONTINU propose de resoudre des problemes non-lineaires\n    poses sous la forme d'equations algebriques (1) qui dependent\n    d'un parametre (pseudo-temps not\u00e9 t)\n    par une methode de continuation par pseudo-longueur d'arc.\n       \n      R(U,t)  =  Fext(t) + Fnl(U) - Fint(U,\\sigma)  = 0           (1.a)\n      R(U,t)  =  Fext(t) + Fnl(U) + Z(t) U          = 0           (1.b)\n    \n    avec :\n    \n      R    : vecteur Residu\n      U    : vecteur des inconnues\n      Fext : vecteur des forces exterieures \n      Fint : vecteur des forces internes (=\\int B^T \\sigma)\n      Fnl  : vecteur des forces non-lineaires\n      Z    : matrice de raideur dynamique (voir la procedure HBM)\n      t    : pseudo-temps    \n    \n    \n    Le calcul est realise en 2 etapes :\n    \n    1. Pas predicteur :\n       \n       A partir d'une precedente position (U_n, t_n), le probleme \n       linearise est resolu (2) et une nouvelle position (U_p, t_p) est \n       trouvee en imposant la longueur de l'increment (3) egale a ds.\n       \n          dR/dU * dU_p = - dR/dt * dt_p                             (2)\n          ds^2 = dt_p^2/dt_ref^2 + dU_p^T*dU_p / dU_ref^2           (3)\n    \n       avec : \n          dU_p = U_p - U_n\n          dt_p = t_p - t_n\n          ds   = 1 initialement, mais de valeur adaptative \n                 selon la difficulte de convergence\n\n    2. Pas correcteurs :\n       \n       A partir de la position predite (U_p, t_p), des corrections \n       successives (4) sont realisees dans le plan orthognal a la \n       prediction jusqu'a  rendre le residu inferieur a une tolerance \n       donnee.\n       \n          [ dR/dU  dR/dt ] * (dU^(i))  =  (-R^(i-1))                (4)\n          [ dU_p   dt_p  ]   (dt^(i))     ( 0      )\n    \n    \n    \n    Entree :    (on indique entre parentheses les entrees valables \n    _______      uniquement avec les problemens de type a ou b)\n    \n    TABHBM  =  TABLE\n \n       . 'HBM'                        = VRAI pour indiquer que l'on \n                                        souhaite resoudre un probleme\n                                        du type (b)\n                                        (FAUX par defaut)\n       . 'MODELE'                     = modele mecanique utilise (a)\n       . 'CARACTERISTIQUES'           = materiau et caracteristiques (a)\n       . | 'RIGIDITE_CONSTANTE' (a) | = raideur K (hors modele) \n         | 'RIGIDITE_HBM'       (b) |   \n       . | 'AMORTISSEMENT_CONSTANT' (a)| = amortissement C\n         | 'AMORTISSEMENT_HBM'      (b)|\n       . | 'MASSE_CONSTANTE' (a) |    = masse M\n         | 'MASSE_HBM'       (b) |\n       . | 'BLOCAGES_MECANIQUES' (a) |= Kblocages (hors modele)\n         | 'BLOCAGES_HBM'        (b) |\n       . 'CHARGEMENT'                 = Fext(t)\n\n       . 'MAXI_DEPLACEMENT'           = dU_ref\n       . 'TEMPS_CALCULES'             = listreel de la discretisation \n                                        souhaitee pour les pseudo-pas de\n                                        temps t \n                                        (les temps rellements converges\n                                        seront differents et stockes a  \n                                        l'indice TEMPS_PROG)\n       . 'FREQUENCE' (b)              = evolution de la frequence \n                                        fondamentale du probleme w(t)\n                                        (w(t)=t par defaut)\n                                        voir remarque 1 pour les unites\n\n       . 'HYPOTHESE_DEFORMATIONS'     = LINEAIRE (par defaut)\n                                        QUADRATIQUE\n                                        TRUESDELL\n                                        JAUMANN\n                                        UTILISATEUR\n       . 'GRANDS_DEPLACEMENTS'        = VRAI en grand deplacements (a)\n\n       . 'PROCEDURE_CHARMECA'         = VRAI si forces non-lineaires\n                                        a: pression suiveuse\n                                        b: terme Fnl(U)\n                                        voir remarque 2\n       . 'PROCEDURE_FREQUENCE_TEMPS' (b) = 'AFT' pour l'utilisation de \n                                        la procedure AFT lors du calcul\n                                        des efforts et Jacobienne non-\n                                        lineaires\n       . 'N_PT_TFR' (b)               = 2**N_PT_TFR points seront \n                                        utilises pour la discretisation\n                                        temporelle lors de l'AFT\n                                        \n       . 'PAS_SAUVES'                 = entier N indiquant de sauver les \n                                        resultats (U,t,\\sigma) dans une\n                                        table tous les N pas\n                                        \n       . 'STABILITE'                  = listmots de mots-cles parmi :\n                                      + DIAG pour sauver le nombre de \n                                        termes diagonaux negatifs \n                                        comptes lors de la factorisation\n                                      + FLOQ pour le calcul des \n                                        exposants de Floquet (b)\n       . |'RESULTATS'     (a) |       = table des resultats attendus\n         |'RESULTATS_HBM' (b) |             \n            . i . 'POINT_MESURE'        \n                . 'COMPOSANTES'     \n                . 'COULEUR'\n                . 'TITRE'\n                                        \n       . 'MAXITERATION'               = nombre maxi d'iterations par pas\n                                        (24 par defaut)\n       . 'NB_ITERATION'               = nombre d'iterations juge ideal\n                                        (6 par defaut)\n       . 'MAXIPAS'                    = nombre maxi de pas \n                                        (1000 par defaut)\n       . 'PRECISION'                  = tolerance relative sur le residu\n                                        (1.E-6 par defaut)\n       . 'COMPOSANTES' \n            . | 'FORCE'     (a) |     = listmots des composantes a uti-\n            . | 'FORCE_HBM' (b) |       -liser dans le produit scalaire\n                                        definissant la norme du residu\n \n\n    Sortie :\n    _______\n    \n    TABHBM \n       . 'TEMPS'                      = table des pseudo-temps t\n       . 'DEPLACEMENTS'               = table des inconnues    U\n       . 'CONTRAINTES'                = table des contraintes \\sigma (a)\n       . 'RESULTATS_STABILITE'        \n            . 'DIAG'                  = listreel des resultats de \n                                        DIAG(dR/dU)\n            . 'FLOQ' \n                . 'EXPOSANT_REEL'    |= table des parties relles et \n                . 'EXPOSANT_IMAG'    |  imaginaires des exposants \n                                        de Floquet (b)\n       . 'TEMPS_PROG'              = listreel des pseudo-temps calcules\n       . | 'RESULTATS_HBM' (a) |\n         | 'RESULTATS'     (b) | \n            . j . 'RESULTATS'      = listreel des resultats\n                . 'RESULTATS_EVOL' = evolution associee\n                \n\n    Remarque 1 : probleme de type (b)\n    ___________\n     \n    Les matrices ***_HBM peuvent etre generees par la procedure HBM.\n    La frequence par defaut est en rad/s. Pour travailler en Hz, il faut\n    multiplier AMORTISSEMENT_HBM par 2*pi et MASSE_HBM par (2*pi)**2.\n    \n      \n    Remarque 2 :\n    ___________\n    \n    Le calcul des differents termes (Residu, Raideur et leur derivee)\n    est realise par la procedure CON_CALC definie dans le jeu de \n    donnees dgibi.\n    Si PROCEDURE_CHARMECA = VRAI, CON_CALC appelle l'une des \n    procedures suivantes pour le calcul des termes non-lineaires :\n    - CHARMECA (par defaut)\n    - AFT      (si 'PROCEDURE_FREQUENCE_TEMPS' = mot 'AFT';) qui appelle\n      a son tour CHARMECA qui realise le calcul des termes non-lineaires\n      dans le domaine temporel.\n                                        ",
  },
  {
    name: "CONTSEG3",
    url: "CONTSEG3",
    documentation:
      "$$$$ CONTSEG3 NOTICE  PASCAL    13/11/08    21:15:22     7862           \n                                             DATE     13/11/08\n                                            \n    Procedure CONTSEG3                       Voir aussi : IMPO\n    ------------------  \n    RI1 MA1 MA2 =  CONTSEG3 MA3 MA4  ;\n\n\n    Objet :\n    _______\n\n    Cette procedure prepare le travail en vue de l'utilisation des\ncontacts unilateraux automatique entre deux lignes (composees\nd'elements de type SEG3). A partir des deux lignes (MA3 et MA4)\ndecrites comme pour l'operateur IMPO c'est a dire orientees de telle\nfa\u00e7on que l'autre ligne est sur leur flanc droit, on fournit un objet\nde type rigidite et deux nouveaux objets maillage contenant des SEG2.\n\n       MA3   ---------->--->   \n       MA4    <--------<--------\n\n   En sortie:\n   __________\n\n    RI1     :  objet de type rigidite qui contient des relations entre\n               les noeuds milieux des SEG3 et les noeuds extremites et\n               qu'il  faut additionner aux autres conditions de\n               blocages.\n\n    MA1,MA2:   objets maillages contenant des elements de type SEG2\n               a utiliser pour definir les contacts unilateraux \n              \n\n\n   Remarque :  Les contacts ne seront assures qu'entre les lignes MA1\n               et MA2 qui ne contiennent que les noeuds extremites.\n               Les penetrations des noeuds milieux ne seront pas\n               detectees.",
  },
  {
    name: "CONV",
    url: "CONV",
    documentation:
      "$$$$ CONV     NOTICE  CB215821  16/02/25    21:15:01     3314           \n                                             DATE     16/02/25\n\n    Operateur CONVECTION                      Voir aussi : MODE FLUX\n                                                           FIMP ORIE  \n                                                           MATE  \n    --------------------  \n    CHPO1 = CONV  MMODE1 CHAM1 | MOT1  FLOT1 | ;\n                               | CHPO2       |\n\n\n    Objet :\n    _______\n\n    L'operateur  CONVECTION  permet  d'imposer  une  condition  de  flux\n    lineaire avec une temperature exterieure : \n      Flux = S.H.Text\n\n    Commentaire :\n    _____________\n\n    MMODE1  :  Modele  de 'THERMIQUE'  de 'CONVECTION'  ou 'RAYONNEMENT'\n               portant sur la surface qui echange (type MMODEL)\n\n    CHAM1   :  Materiaux  representant  le coefficient  d'echange sur la \n               surface  (type MCHAML, sous-type CARACTERISTIQUES)  ayant\n               une composante 'H'\n\n    MOT1    :  Elements  coques  pour  lesquels il faut  preciser quelle\n               face echange (COQ2,COQ2,COQ4,COQ6,COQ8)\n                'TINF','TSUP' \n                \n               Elements classiques\n                'T'\n\n    FLOT1   :  Valeur de la temperature exterieure (type FLOTTANT)\n\n    CHPO2   :  Valeurs  de la temperature  exterieure pour les noeuds du\n               MAILLAGE de MMODE1 (type CHPOINT)\n\n    CHPO1   :  Flux nodaux equivalents (Second Membre) (type CHPOINT)\n\n   Remarque importante :\n   _____________________\n\n   La  designation  des peaux  de  la  coque  se  fait par  rapport a la\n   normale exterieure de l'element : la peau  superieure est placee dans\n   le sens  de la normale exterieure  vis-a-vis du plan  median. Dans le\n   cas ou  les elements ne  sont pas orientes  d'une facon coherente, il\n   faut les reorienter en utilisant l'operateur ORIE.\n\n   Dans le cas ou  CHPO2 a plusieurs composantes,  les noms de celles-ci\n   permettront de differencier les diff\u00e9rents flux. Les composantes sont\n   a choisir  parmi les  valeurs de  MOT1. Ceci  permet lors  d'appels a \n   PASAPAS de definir un chargement de type 'TECO' avec des temperatures\n   controlees pour la 'CONVECTION' ou le 'RAYONNEMENT'.\n\n   Remarque :\n   __________\n\n   L'operateur 'CONV' est utilise pour calculer le second membre associe\n   a la  resolution  d'un probleme  de RAYONNEMENT par  linearisation du \n   coefficient  d'echange. Dans ce cas, le  modele passe en argument est\n   de formulation RAYONNEMENT.",
  },
  {
    name: "CONVT",
    url: "CONVT",
    documentation:
      "$$$$ CONVT    NOTICE  CHAT      11/09/12    21:15:34     7124           \n                                             DATE     11/09/12\n\n\n\n     Procedure CONVT                         \n     ---------------                          Voir aussi : @FIX\n                                                           MESS  \n                                                         CHAINE  \n     MOT2 = CONVT FLOT1 (ENTI1) (MOT1) ;\n  \n     Objet :\n     -------\n\n     Cet operateur convertit un temps donne en secondes, en une chaine\n     de caracteres contenant ce temps exprime dans l'unite pertinente\n     (us,ms,s,h,j,a)\n        \n     Commentaire :\n     -------------\n\n     FLOT1 : le temps, en secondes, a exprimer\n\n     ENTI1 : le nombre de chiffres apres la virgule (voir @FIX)\n             (facultatif - defaut 2) \n\n     MOT1  : l'unite dans laquelle convertir le temps (facultative)\n             choix possibles : US,MS,S,H,J,D,A,Y\n\n     MOT2  : le mot affichable, de forme XXX.XXs (voir @FIX) ",
  },
  {
    name: "CON_CALC",
    url: "CON_CALC",
    documentation:
      "$$$$ CON_CALC NOTICE  MB234859  17/10/02    21:15:06     9577           \n                                             DATE     17/10/02\n                                           \n\n    Procedure CON_CALC                       Voir aussi : CONTINU\n\n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure CONTINU. \n   Elle permet de determiner les differents termes (Residu, Raideur \n   et leur derivee) necessaire a la resolution.",
  },
  {
    name: "COOR",
    url: "COOR",
    documentation:
      "$$$$ COOR     NOTICE  PASCAL    21/06/22    21:15:03     11039          \n                                             DATE     21/06/22\n                                             \n  Operateur COORDONNEE                      Voir aussi :\n    --------------------  \n    RESU1 = COOR  (N1) | POIN1 ;\n                       | GEO1  (CURV) ;\n                       | CHPO1 ;\n                       | CHEL1 ;\n                       | MOD1  ;\n\n\n    Objet :\n    _______\n\n       L'operateur COOR renvoie la N1-ieme coordonnee\n    d'un objet de type POINT, MAILLAGE, CHPOINT, MCHAML ou MMODEL.\n\n       L'option CURV renvoie le champ de coordonnee curviligne\n    d'une ligne de maillage orientee.\n\n\n    Operations possibles :\n    ______________________\n\n              -----------------------------------------\n              |  ENTREE            |  SORTIE (RESU1)  |\n    ---------------------------------------------------\n    |  OBJET  |  POINT    (POIN1)  |  FLOTTANT        |\n    |  OBJET  |  MAILLAGE (GEO1)   |  CHPOINT         |\n    |  OBJET  |  CHPOINT  (CHPO1)  |  CHPOINT         |\n    |  OBJET  |  MCHAML   (CHEL1)  |  MCHAML          |\n    |  OBJET  |  MMODEL   (MOD1 )  |  MCHAML          |\n    ---------------------------------------------------\n\n    Remarque 1 :\n    ____________\n\n    Pour un objet de type CHPOINT, l'operateur fournit les coordonnees\n    des noeuds supportant le champ.\n\n    Remarque 2 :\n    ____________\n\n    Pour un objet de type MCHAML, l'operateur fournit pour chaque\n    element les coordonnees des points de l'element ou est exprime le\n    champ.\n\n    Remarque 3 :\n    ____________\n\n    L'operateur COOR rend la densite du point considere pour\n    N1 = IDIM + 1.\n    Ceci est aussi vrai pour des objets MAILLAGE et CHPOINT.\n\n    Remarque 4 :\n    ____________\n\n    Si N1 n'est pas indique, l'operateur COOR rend les deux (ou trois)\n    coordonnees de l'objet.\n\n    Remarque 5 :\n    ____________\n\n    Pour l'option CURV, la donnee de N1 est sans objet, ni consequence.\n\n    Remarque 6 :\n    ____________\n\n    Dans le cas d'un MMODEL, COOR renvoie un MCHAML aux noeuds.\n\n    Exemples :\n    __________\n\n    X Y Z = COOR P1 ;\n      Y   = COOR 2 P1 ;",
  },
  {
    name: "COPI",
    url: "COPI",
    documentation:
      "$$$$ COPI     NOTICE  CHAT      11/09/12    21:15:35     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur COPIER                          Voir aussi :  \n    ----------------  \n      OBJET2 =  COPI  OBJET1 ('GEOMETRIE') ;\n\n                                       OBJET1=LISTCHPO,CHPOINT\n                                              LISTREEL,MCHAML\n                                              TABLE\n\n\n    Objet :\n    _______\n\n    L'operateur COPIER cree un nouvel objet OBJET2 semblable a\nl'objet donne OBJET1.\n\n\n      Commentaire :\n      _____________\n\n      OBJET1 : objet dont les type possibles sont : - LISTCHPO\n                                                    - CHPOINT\n                                                    - LISTREEL\n                                                    - MCHAML\n                                                    - TABLE\n\n      OBJET2 : objet de Meme type qu'OBJET1\n\n\n    Remarque :\n    __________\n\n\n    Dans le seul cas o\u00ba OBJET1 est de type CHPOINT, il est autorise\nd'indiquer le mot 'GEOMETRIE'. La geometrie sous-jacente a OBJET1 est\nalors dupliquee (c'est a dire creation d'un nouvel ensemble de noeuds\nayant les memes numeros que ceux de la geometrie initiale) pour\nconstituer le support d'OBJET2, ce qui n'est pas le cas sinon.",
  },
  {
    name: "COQ2MAS",
    url: "COQ2MAS",
    documentation:
      "$$$$ COQ2MAS  NOTICE  PASCAL    14/01/23    21:15:01     7911           \n                                             DATE     14/01/23\n                                             \nProcedure COQ2MAS:             Voir aussi : FOUR2TRI, POUT2MAS\n\n      MAIL3D = COQ2MAS MOD1 MAT1 TAB1; \n\n\n\nObjet:\n------\n     COQ2MAS genere un maillage volumique MAIL3D \n     a partir d'un modele de coque pour permettre \n     la verification des dimensions et des orientations \n     des modeles de coque. \n     Chaque couche peut etre representee par une coque \n     excentree (maillages contenus dans la table tab1) \n     ou un volume excentre ayant l'epaisseur de l'element \n     de coque (MAIL3D).\n     Les champs de deplacements, de contraintes et \n     de variables internes\n     s'appuyant sur le maillage de coque initial peuvent \n     aussi etre determines sur les nouveaux maillages \n     pour visualisation.\n     \nEntree:\n-------\n   MOD1 : Modele de coque multicouche DKT ou DST\n   \n   MAT1: Materiau contenant les donnees materiaux \n         et les caracteristiques (epaisseur, excentrement) \n         \n   TAB1: Table contenant les champs a transferer et \n         eventuellement les maillages calcules lors d'un appel \n         precedent a la procedure COQ2MAS\n         Dans ce dernier cas, les maillages ne sont pas regeneres\n         mais ceux de la table sont utilises.\n\n   TAB1. 'DEPLACEMENTS': Table contenant les champs de        \n                         deplacements sur le modele de coque \n                         (un indice par champs de deplacements)\n                         \n   TAB1. 'CONTRAINTES': Table contenant les champs de contraintes \n                        sur le modele de coque\n                                                  \n   TAB1. 'VARIABLES_INTERNES': Table contenant les champs de variables\n                               internes sur le modele de coque \n                          \n   Remarque: Les deplacements, contraintes et variables internes \n             issus de la  procedure PASAPAS peuvent etre utilises \n             directement en faisant\n             TAB1.'DEPLACEMENTS' = TABPASPAS . 'DEPLACEMENTS' ;\n             TAB1.'CONTRAINTES' = TABPASPAS . 'CONTRAINTES' ;        \n             TAB1.'VARIABLES_INTERNES'= TABPASPAS.'VARIABLES_INTERNES';\n                                   \n   TAB1.'RELATION_3D': Si cet indice le table contient le booleen VRAI,\n                       les relations cinematiques liant le modele de\n                       coque et le maillage volumique sont crees. \n            \nSortie:\n------\n    MAIL3D: Maillage 3D volumique ou surfacique\n                                                    \n    TAB1: Table completee des indices:\n\n    TAB1. 'MODELE': Modele de la couche i (a l'indice i)\n    \n    TAB1. 'MATERIAU': Materiau de la couche i (a l'indice i)\n    \n    TAB1. 'MAILLAGE_FIBRE_MOYENNE' : Maillage surfacique excentre\n           au niveau de la fibre moyenne pour la couche i (a l'indice i)\n    \n    TAB1. 'MAILLAGE_FIBRE_INFERIEURE' : Maillage surfacique excentre \n           au niveau de la fibre inferieure pour la couche i\n           (a l'indice i)\n        \n    TAB1. 'MAILLAGE_FIBRE_SUPERIEURE' : Maillage surfacique excentre \n           au niveau de la fibre superieure pour la couche i \n           (a l'indice i)\n                   \n    TAB1. 'MAILLAGE_VOLUMIQUE': Maillage volumique excentre ayant\n           l'epaisseur reelle pour la couche i (a l'indice i)\n                 \n    TAB1. 'DEPLACEMENTS_FIBRE_MOYENNE': Champs de deplacements  \n           de la fibre moyenne pour la couche i (a l'indice i)\n         \n    TAB1. 'DEPLACEMENTS_FIBRE_INFERIEURE': Champs de deplacements  \n           de la fibre inferieure pour la couche i (a l'indice i)\n         \n    TAB1. 'DEPLACEMENTS_FIBRE_SUPERIEURE': Champs de deplacements \n           de la fibre  superieure pour la couche i (a l'indice i)\n\n    TAB1. 'DEPLACEMENTS_VOLUMIQUE': Champs de deplacements du maillage \n           volumique pour la couche i (a l'indice i)  \n                \n    TAB1. 'VARI_FIBRE_MOYENNE': Variable interne pour la couche i\n           (indice i) uniquement pour la fibre moyenne\n          \n    TAB1. 'CONTRAINTES_FIBRE_MOYENNE': Contraintes de la \n           fibre moyenne pour la couche i (a l'indice i) \n          \n    TAB1. 'CONTRAINTES_FIBRE_INFERIEURE': Champs de contraintes \n           de la fibre inferieure pour la couche i (a l'indice i)\n         \n    TAB1. 'CONTRAINTES_FIBRE_SUPERIEURE': Champs de contraintes  \n           de la fibre superieure pour la couche i (a l'indice i)\n\n    TAB1. 'CONTRAINTES_VOLUMIQUE': Champs de contraintes du maillage \n           volumique pour la couche i (a l'indice i)     \n          \n    TAB1.'RELATION_3D': Table contenant les relations cinematiques\n          (RIGIDITE) entre le modele de coque et le maillage volumique\n\n   Remarque 1: Les indices 'TOTAL' contiennent les maillages \n               pour l'ensemble des couches\n        \n   Remarque 2: les contraintes et les variables internes sur \n               les couches  excentrees sont donnees aux noeuds (CHPO)\n\n   Remarque 3: Les contraintes dans chaque couche sont donnees \n               dans le repere local des elements de coque.",
  },
  {
    name: "CORI",
    url: "CORI",
    documentation:
      "$$$$ CORI     NOTICE  CHAT      11/09/12    21:15:36     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur CORIOLIS                    Voir aussi : CARA KENT GYRO\n    ------------------                                     \n\n    Objet :\n    _______\n\n    L'operateur CORIOLIS calcule des matrices de couplage ayant \n    pour origine des phenomenes lies aux forces de coriolis \n    (forces proportionnelles a des vitesses dans un repere non galileen)\n\n    RIG1 = CORIOLIS  MODL1  MAT1 VEC1 ('HARM')     \n  \n                  \n      Commentaire :\n      _____________\n\n                                                                      \n     RIG1 : matrice de couplage construite (TYPE rigidite, SOUS-TYPE \n         amortissement)   \n\n     MODL1: Modele   (objet MMODEL)  \n \n                                    \n     MAT1 : Caracteristiques materiau (objet MCHAML)     \n \n               \n     VEC1 : Vecteur rotation (objet POINT)  \n\n    'HARM' : Mot cle facultatif pour specifier si la matrice calculee \n             est une impedance dans le cas des modes de Fourier\n             pour etre utilisee pour les calculs harmoniques\n             (voir operateur IMPE)\n\n                                                                      \n    Cet operateur est valable pour les elements            \n    BARR, POUT, TUYAU, COQUE et MASSIF 3D et 2D Fourier\n                                                                      ",
  },
  {
    name: "CORMAN",
    url: "CORMAN",
    documentation:
      '$$$$ CORMAN   NOTICE  CHAT      11/09/12    21:15:36     7124           \n                                             DATE     11/09/12\n\n    procedure CORMAN   \n    ----------------\n\n\n \n    Cette procedure est appelee par la procedure UNPAS, elle \n    calcule la solution d\'un probleme elastique "grands_deplacements"\n    et "grandes_rotations" par la methode asymptotique numerique.\n   \n    \n    ',
  },
  {
    name: "CORMASSE",
    url: "CORMASSE",
    documentation:
      "$$$$ CORMASSE NOTICE  CHAT      11/09/12    21:15:36     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure CORMASSE                       Voir aussi :\n    ------------------  \n      CORMASSE RXT TBT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure CORMASSE est une procedure interne appelee par EXECRXT\n\n    Commentaires\n    ____________\n\n    RXT   TABLE  :\n    TBT   TABLE  :",
  },
  {
    name: "COS",
    url: "COS",
    documentation:
      "$$$$ COS      NOTICE  CB215821  18/06/05    21:15:02     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'COS'   OBJET1 ;\n\n\n    Operateur COS                            Voir aussi : SIN TAN\n    -------------                                         ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur COS calcule le cosinus de l'objet OBJET1.\n    Les valeurs de OBJET1 doivent etre exprimees en degres.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "COSH",
    url: "COSH",
    documentation:
      "$$$$ COSH     NOTICE  CB215821  18/06/05    21:15:03     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'COSH'  OBJET1 ;\n\n\n    Operateur COSH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                               SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur COSH calcule le cosinus hyperbolique de l'objet OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "COSI",
    url: "COSI",
    documentation:
      "$$$$ COSI     NOTICE  MB234859  17/10/02    21:15:06     9577           \n                                             DATE     17/10/02\n\n    Operateur COSI                           voir aussi : INSI\n    --------------\n\n    EVOL1 = COSI EVOL2 (MOT1);\n\n                                        MOT1='SIMP','LINE'\n\n    objet :\n    _______\n\n    Operateur COSI effectue la correction EVOL1 de signaux en\n    acceleration EVOL2 de fa\u00e7on a assurer une vitesse finale, un\n    deplacement final et un deplacement moyen nuls quand les signaux\n    sont integres numeriquement en utilisant operateur INSI.\n\n    remarques :\n    -----------\n\n    - On suppose que la grille des abscisses est identique pour\n      chaque signal.\n\n    - On suppose que le pas de temps est uniforme.\n\n    - La vitesse et le deplacement initiaux sont supposes nuls.\n\n    option:\n    -------\n\n    Diverses methodes d'integration numerique peuvent etre choisies en\n    utilisant le mot-cle MOT1:\n\n    - MOT1='SIMP'(lifie) se refere a l'utilisation d'une methode des\n      trapezes  pour deduire chaque variable de la discretisation de sa\n      derivee.\n\n    - MOT1='LINE'(aire) se refere a l'utilisation d'un approximation\n      lineaire de acceleration et a son integration consistante.\n      Le defaut pour MOT1 est 'SIMP'.",
  },
  {
    name: "COTE",
    url: "COTE",
    documentation:
      "$$$$ COTE     NOTICE  CHAT      11/09/12    21:15:37     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur COTE                           Voir aussi :\n    --------------  \n    GEO1 = COTE (I1) GEO2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur COTE permet de retrouver le cote I1 de l'objet\nGEO2 (type MAILLAGE). Le resultat est un objet GEO1 (type MAILLAGE).\n\n    Remarque 1 :\n    ____________\n\n    Il faut que la construction de l'objet ait permis de definir les\ncotes suivants :\n\n    I=1   cote initial d'une surface construite par translation ou\n          rotation d'une ligne\n    I=2   cote lateral droit\n    I=3   cote final\n    I=4   cote lateral gauche\n\n    Remarque 2 :\n    ____________\n\n    Le sens de description des cotes est donne en orientant le contour\nd'apres l'orientation de la ligne initiale.\n\n                 <     3\n               |----------|\n               |          |\n            4  |          |  2\n               |----------|\n                  1     >\n\n    Remarque 3 :\n    ____________\n\n    Si le numero du cote n'est pas indique, l'operateur COTE rend les\nquatre (ou trois) cotes de l'objet, GEO1.\n\n    Exemple :\n    _________\n\n           COTE1 COTE2 COTE3 COTE4 = COTE SURF1 ;",
  },
  {
    name: "COUL",
    url: "COUL",
    documentation:
      "$$$$ COUL     NOTICE  FANDEUR   21/05/04    21:15:01     10991          \n                                             DATE     21/05/04\n\n\n    Operateur COULEUR                        Voir aussi : AFCO\n    -----------------  \n    OBJ2 = OBJ1 COUL ( | MOT1   | ) ;\n                     ( | LISMO1 | )\n                     ( | ENT1   | )\n\n    Objet :\n    _______\n\n    L'operateur COUL duplique un objet OBJ1 en lui attribuant une\n    ou plusieurs couleurs choisies.\n\n\n    Commentaire :\n    _____________\n\n    OBJ1   : objet original (type MAILLAGE, EVOLUTIO, DEFORME  ou\n             VECTEUR).\n\n    MOT1   : nom de la couleur choisie (type MOT de 4 lettres) parmi\n             les noms Cast3M listes dans la palette ci-dessous.\n\n    LISMO1 : noms des couleurs choisies (type LISTMOTS), uniquement pour\n             les objets de type EVOLUTIO, DEFORME et VECTEUR.\n\n    ENT1   : ENTIER, numero de la couleur dans la palette ci-dessous.\n             Si ENT1 est negatif, l'operateur attribue la couleur par defaut.\n\n    OBJ2   : objet resultat (meme type que OBJ1).\n\n\n    Remarques :\n    ___________\n\n    1) En l'absence de couleur choisie (MOT1 et LISMO1 et ENT1 absents), \n       la couleur choisie est celle pre-definie par la directive OPTION 'COUL'.\n\n    2) La palette des couleurs disponible est la suivante : \n\n       La couleur DEFA depend de l'unite de sortie graphique :\n         BLANc ou NOIR selon la couleur de fond.\n\n    +----+------------+------------------+---------+---------+---------+\n    |No. | Nom Cast3M |     Nom X11      |  Rouge  |  Vert   |   Bleu  |\n    +----+------------+------------------+---------+---------+---------+\n    |1   |  DEFA      |  white/black     | 1./0.   | 1./0.   | 1./0.   |\n    |2   |  BLEU      |  blue            | 0.0000  | 0.0000  | 1.0000  |\n    |3   |  ROUG      |  red             | 1.0000  | 0.0000  | 0.0000  |\n    |4   |  ROSE      |  magenta         | 1.0000  | 0.0000  | 1.0000  |\n    |5   |  VERT      |  green           | 0.0000  | 1.0000  | 0.0000  |\n    |6   |  TURQuoise |  MediumTurquoise | 0.0000  | 0.8078  | 0.8196  |\n    |7   |  JAUNe     |  yellow          | 1.0000  | 1.0000  | 0.0000  |\n    |8   |  BLANc     |  white           | 1.0000  | 1.0000  | 1.0000  |\n    |9   |  NOIR      |  black           | 0.0000  | 0.0000  | 0.0000  |\n    |10  |  VIOLet    |  DarkViolet      | 0.5804  | 0.0000  | 0.8274  |\n    |11  |  ORANge    |  orange          | 1.0000  | 0.6471  | 0.0000  |\n    |12  |  AZUR      |  DodgerBlue      | 0.1176  | 0.5647  | 1.0000  |\n    |13  |  OCEAn     |  MediumSeaGreen  | 0.2353  | 0.7020  | 0.4431  |\n    |14  |  CYAN      |  LightSkyBlue    | 0.5294  | 0.8078  | 0.9804  |\n    |15  |  OLIVe     |  YellowGreen     | 0.6039  | 0.8039  | 0.1961  |\n    |16  |  GRIS      |  gray            | 0.7450  | 0.7450  | 0.7450  |\n    |17  |  POURpre   |  VioletRed       | 0.8157  | 0.1255  | 0.5647  |\n    |18  |  BRUN      |  SaddleBrown     | 0.5451  | 0.2706  | 0.0745  |\n    |19  |  BRIQue    |  Firebrick       | 0.6980  | 0.1333  | 0.1333  |\n    |20  |  CORAil    |  Coral           | 1.0000  | 0.5000  | 0.3137  |\n    |21  |  BEIGe     |  Wheat           | 0.9607  | 0.8706  | 0.7019  |\n    |22  |  OR        |  Gold            | 1.0000  | 0.8431  | 0.0000  |\n    |23  |  MARIne    |  Navy            | 0.0000  | 0.0000  | 0.5000  |\n    |24  |  BOUTeille |  DarkGreen       | 0.0000  | 0.3921  | 0.0000  |\n    |25  |  LIME      |  Chartreuse      | 0.5000  | 1.0000  | 0.0000  |\n    |26  |  LAVAnde   |  Lavender        | 0.9019  | 0.9019  | 0.9803  |\n    |27  |  BRONze    |  Goldenrod       | 0.8549  | 0.6470  | 0.1254  |\n    |28  |  KAKI      |  Khaki           | 0.9411  | 0.9019  | 0.5490  |\n    |29  |  PEAU      |  LightPink       | 1.0000  | 0.7137  | 0.7568  |\n    |30  |  CARAmel   |  Peru            | 0.8039  | 0.5215  | 0.2470  |\n    |31  |  INDIgo    |  Indigo          | 0.2941  | 0.0000  | 0.5882  |\n    +----+------------+------------------+---------+---------+---------+\n\n ",
  },
  {
    name: "COUP",
    url: "COUP",
    documentation:
      "$$$$ COUP     NOTICE  CHAT      11/09/12    21:15:38     7124           \n                                             DATE     11/09/12\n\n  Operateur COUPER                          Voir aussi :\n    ----------------  \n    GEO2 = COUP GEO1 POIN1 POIN2 POIN3 ;\n\n\n\n    Objet :\n    _______\n\n  L'operateur COUP genere la coupe 2D GEO2 (type MAILLAGE) d'un\nmaillage 3D GEO1 (type MAILLAGE) selon le plan defini par les 3\npoints POIN1, POIN2 et POIN3 (type POINT).\n\n    Commentaire :\n    _____________\n\n    GEO1  : maillage 3D\n\n    GEO2  : maillage de coupe",
  },
  {
    name: "COUPLER",
    url: "COUPLER",
    documentation:
      "$$$$ COUPLER  NOTICE  CHAT      11/09/12    21:15:38     7124           \n                                             DATE     11/09/12\n\n  Procedure  'COUPLER'                       Voir aussi :\n   --------------------  \n GEO2 (GEO3) = COUPLER (GEO1) PO1 CARCOQ (N) ('RAC');\n\n\nOBJET :\n_______\n\nCette procedure genere le maillage GEO2 deduit de GEO1 par translation\nde la demi epaisseur de GEO1. COUPLER genere aussi les elements de\nraccord entre GEO1 et GEO2.\n\nCommentaire:\n_____________\n\nPO1    : Oeil pour definir la direction  dans laquelle le fluide se\n         trouve (type POINT)\nCARCOQ : Caracteristiques de GEO1 (type MCHAML)\nGEO2   : Maillage translate de GEO1 (type MAILLAGE)\n\n\nEn option :\n___________\n\nGEO1   : Maillage de la coque. Necessaire seulement quand le maillage\n         support de CARCOQ est different de GEO1 (type MAILLAGE)\nN      : Entier positif pour demander l'inversion de la frontiere fluide\n         par rapport a la coque GE01 (type ENTIER)\nRAC    : Mot cle indiquant que l'on veut les elements raccord entre GEO1\n         et GEO2 (type MOT)\nGEO3   : Maillage contenant les elements raccord entre GEO1 et GEO2\n         (type MAILLAGE)",
  },
  {
    name: "COUR",
    url: "COUR",
    documentation:
      "$$$$ COUR     NOTICE  CHAT      11/09/12    21:15:39     7124           \n                                             DATE     11/09/12\n\n    Operateur COURBE                         Voir aussi : CUBP\n    ----------------                                      CUBT  \n\n    LIG1 = COURBE (N1) ('DINI' DENS1)  ('DFIN' DENS2) ...\n                  ...  ('PINI' OBJET1) ('PFIN' OBJET2) ...\n                  ...  POIN0 POIN1 (POIN2 (POIN3 ...) ) ...\n                  ...  ('PARAMETRE' FLOT1 FLOT2) ('REGULIER') ;\n\n\n    Objet :\n    _______\n\n    L'operateur COURBE cree une courbe polynomiale dont les\npoints P verifient l'equation suivante :\n\n                            2          3\n    P = POIN0 + U. POIN1 + U .POIN2 + U .POIN3 + ...\n\nU etant un parametre reel.\n\n    Commentaire :\n    _____________\n\n\n\n    N1           : nombre (type ENTIER)\n   'DINI'        : Mot-cle (type MOT) suivi de :\n    DENS1        : valeur de la densite (type FLOTTANT).\n\n   'DFIN'        : Mot-cle (type MOT) suivi de :\n    DENS2        : valeur de la densite (type FLOTTANT).\n\n Pour plus de precisions, se reporter aux operateurs DROITE, CERCLE ...\n\n\n'PINI'        : Mot-cle (type MOT) suivi de :\n OBJET1       : Point initial de la courbe (type POINT), effectivement\n                pris comme tel si ses coordonnees s'obtiennent\n                pour la valeur U1 du parametre U.\n                Le point final de cet objet OBJET1 (type MAILLAGE)\n               (forcement une ligne) sera le point initial de la courbe\n               polynomiale (avec les memes reserves que ci-dessus) et\n               l'objet resultat LIG1 contiendra l'OBJET1 suivi de la\n               courbe polynomiale.\n\n'PFIN'        : Mot-cle (type MOT) suivi de :\n OBJET2       : Point final de la courbe (type POINT), effectivement\n                pris comme tel si ses coordonnees s'obtiennent pour\n                la valeur U2 du parametre U.\n                Le point initial de cet objet OBJET2 (forcement une\n                ligne)(type MAILLAGE) sera le point final de la courbe\n                polynomiale (avec les memes reserves que ci-dessus) e\n                l'objet resultat LIG1 contiendra la courbe polynomial\n                suivie d'OBJET2.\n\n    POIN0,       : Points de la representation polynomiale de la\n    POIN1,         courbe (type POINT).\n    POIN2, ...     Ces points ne font pas partie de la courbe.\n                   POIN0 et POIN1 sont obligatoires.\n\n   'PARAMETRE'   : Mot-cle (type MOT) suivi de :\n    FLOT1, FLOT2 : Bornes du parametre U du polynome de la courbe\n                   (type FLOTTANT), egales a (0,1) par defaut.\n\n   'REGULIER'    : Mot-cle (type MOT) indiquant que la courbe devra\n                   etre subdivisee en elements dont les longueurs\n                   seront etablies selon l'abscisse curviligne\n                   et non pas selon le parametre U.\n\n    LIG1         : Objet resultat (type MAILLAGE).",
  },
  {
    name: "COUR3D",
    url: "COUR3D",
    documentation:
      "$$$$ COUR3D   NOTICE  CHAT      11/09/12    21:15:38     7124           \n                                             DATE     11/09/12\n\n  Procedure COUR3D                      Voir aussi :\n        ----------------  \n        CHP1 = COUR3D GEO1  GEO2 GEO3  MOT1 FLOT1  (LOG1 ) \n\n\n\n       objet :\n       -------\n\n           calcul des courants dans un inducteur  maille en 3D\n        \n       Commentaire :\n       -------------\n\n        GEO1    maillage de l'inducteur ( massif 3d) \n        GEO2    maillage de la zone de sortie  des courants \n        GEO3    maillage de la zone d'entree des courants \n        MOT1    mot 'AMP'  ou 'AT' \n        FLOT1   flottant  densite de courant si  mot1 = AMP\n                         amperes totaux si mot1 = AT \n        LOG1    logiqe valant vrai si on rectifie la densite de \n                courant dans les rayons de courbure \n\n        en sortie :\n\n        CHP1  chpoint des densites de courant sur GEO1  ( JX JY JZ ) ",
  },
  {
    name: "COURSPEC",
    url: "COURSPEC",
    documentation:
      "$$$$ COURSPEC NOTICE  CHAT      11/09/12    21:15:39     7124           \n                                             DATE     11/09/12\n\n   Procedure COURSPEC                        Voir aussi : VALSPE\n   ------------------                                     RESPOWNS  \n   EVOL1_SP=COURSPEC LREEL1_SP FLOT1_DT;\n\n\n   objet:\n   -----\n\n   mise en forme EVOL1_SP pour le trace d'un spectre de puissance\n   stationnaire associe a une decomposition en ondelettes. LREEL1_SP\n   indique la valeur du spectre dans les bandes (obtenu avec VALSPE\n   ou RESPOWNS) et FLOT1_DT le pas de temps de la modulation residu.",
  },
  {
    name: "COUT",
    url: "COUT",
    documentation:
      "$$$$ COUT     NOTICE  GOUNAND   21/03/31    21:15:00     10931          \n                                             DATE     21/03/31\n                                             \n  Operateur COUTURE                       Voir aussi :\n     -----------------  \n    ----------------------  \n    ----------------------\n\n     SURF1 =  COUT LIG1 LIG2  ;\n\n     Objet :\n     _______\n\n     L'operateur COUTURE construit une surface qui relie deux lignes\n     a l'aide de triangles.\n\n     Commentaire :\n     _____________\n\n     LIG1  | : lignes entre lesquelles la surface est generee\n     LIG2  |   (type MAILLAGE)\n\n     SURF1   : surface creee (type MAILLAGE)\n\n     Remarque :\n     __________\n\n     Les deux lignes sont supposees decrites dans le meme sens.\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n     MAIL2 =  COUT MAIL1 POIN1 ;\n\n     Objet :\n     _______\n\n     L'operateur COUTURE cree un etoilement du maillage MAIL1 a partir\n     du point POIN1.\n     \n     Commentaire :\n     _____________\n\n     POIN1   : point (type POINT) a relier au maillage MAIL1\n     MAIL1   : maillage (type MAILLAGE) constitu\u00e9 d'elements POI1,\n               SEG2, TRI3 ou QUA4\n\n     MAIL2   : maillage resultat (type MAILLAGE) constitu\u00e9 d'elements\n               SEG2, TRI3, TET4 ou PYR5\n\n     Remarque :\n     __________\n\n     POIN1 peut appartenir a MAIL1 auquel cas les elements de MAIL1\n     touchant POIN1 ne sont pas etoiles.",
  },
  {
    name: "CREER_3D",
    url: "CREER_3D",
    documentation:
      "$$$$ CREER_3D NOTICE  CHAT      11/09/12    21:15:40     7124           \n                                             DATE     11/09/12\n\n  Procedure CREER_3D                        Voir aussi :\n    -------------------  \n    TAB1 = CREER_3D  GEO1 OBJ1 MODL1 FLOT1 N1 N2  ;\n\n\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de construire un maillage et un champs\nsoit de deplacements, soit de contraintes, soit de deformations \nou soit de pression 3D a partir d'un maillage 2D (forme d'elements\nSEG2, TRI3 ou QUA4 uniquement) et d'un champ respectivement de \ndeplacements, de contraintes, de deformations ou de pression \naxisymetrique ou de Fourier. Il ne peut pas etre fournit de \nmaillage de fluide et de structure en meme temps. Le champ OBJ1\ndoit contenir toutes les composantes compatibles avec le mode de \ncaclcul.  \n\nNote : le MCHAML de sortie est appuye aux noeuds du maillage.\n       le CHPOINT de sortie est de nature 'DIFFUS'\n       dans le cas des MCHAML, on doit donner le modele et celui-ci\nest affecte par la procedure. On ne peut donc pas lancer plusieurs \nfois la procedure a la suite dans le but de recombiner les modes \nfourier. Pour les CHPO, ces operations sont possibles. Donc il faut \npasser du MCHAML au CHPO avant de lancer 'CREER_3D' dans le cas \ndes contraintes et des deformations quand on prevoit de recombiner\napres. \n    Apes l'execution a la procedure l'option 'DIME' vaut 3 .\n\n    Commentaire :\n    _____________\n\n   GEO1  : maillage 2D (type MAILLAGE) \n           (optionnel - donne uniquement si OBJ1 est un CHPOINT)\n   \n   OBJ1 est soit :\n          \n         - champs de deplacements ou de contraintes ou de deformations\n           ou de pression issu d'un calcul axisymetrique ou de\n           FOURIER (type CHPOINT)\n\n            soit\n\n         - champs de contraintes ou de deformations issu d'un calcul\n           axisymetrique ou de FOURIER (type MCHAML)\n\n   MODL1  : modele associe au champs par elements (type MMODEL)\n            (optionnel - donne uniquement si OBJ1 est un MCHAML)\n\n   FLOT1 : angle de rotation en degres pour la construction du\n           maillage 3D (type FLOTTANT)\n\n   N1    : nombre de decoupages de cet angle (type ENTIER)\n\n   N2    : numero de l'harmonique (type ENTIER) ( si calcul axi 0)\n\n   TAB1                : objet de type TABLE \n    \n        .'MAILLAGE'    : objet de type MAILLAGE .\n\n        .'DEPLACEMENT' : objet de type CHPOINT. Actuellement ce champ\n                         n'a comme composantes que 'UX', 'UY', 'UZ'.\n\n        .'CONTRAINTE'  : objet de type CHPOINT ou MCHAML. Ce champs a\n                         comme composantes 'N11' 'N22' 'N12' 'M11'\n               'M22' 'M12' pour les elements coques et 'SMRR' 'SMTT' \n               'SMZZ' 'SMRZ' 'SMRT' 'SMZT' pour les elements massifs.\n\n        .'DEFORMATION' : objet de type CHPOINT ou MCHAML. ce champs a  \n                 comme composantes 'EPSS' 'EPTT' 'GAST' 'RTSS' 'RTTT'\n                'RTST' pour les elements coques et 'EPRR' 'EPZZ' \n                'EPTT' 'GARZ' 'GART' 'GAZT' pour les elements massifs.\n\n        .'FLUIDE'      : objet de type CHPOINT. Ce champs a comme \n                         composantes  'P', 'PI', 'UZ'. \n\n        .'MODELE' : objet de type MMODEL associe au maillage 3D. ",
  },
  {
    name: "CRIT",
    url: "CRIT",
    documentation:
      "$$$$ CRIT     NOTICE  CHAT      11/09/12    21:15:41     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CRIT                           Voir aussi :\n    --------------  \n    CHEL1  =  CRIT  MODL1 SIG1  VAR1   CAR1   ;\n\n\n    Objet :\n    _______\n\n    Etant donne un champ de contraintes, un champ de variables\ninternes, un materiau et eventuellement d'autres caracteristiques,\nl'operateur CRIT calcule le critere de plasticite correspondant.\n\n\n     Commentaire :\n    _____________\n\n\n    MODL1 : objet modele (type MMODEL)\n\n\n    SIG1  : champ de contraintes\n            (type MCHAML, sous-type CONTRAINTES)\n\n    VAR1  : champ de variables  internes\n            (type MCHAML, sous-type VARIABLES INTERNES)\n\n    CAR1  : description du materiau et de caracteristiques geometriques\n            (type MCHAML, sous-type CARACTERISTIQUES)\n\n    CHEL1 : critere de plasticite calcule\n             (type MCHAML, sous-type SCALAIRE)\n\n\n\n    Remarque :\n    _________\n\n    Il convient de respecter l'ordre des donnees en entree .",
  },
  {
    name: "CRITLOC",
    url: "CRITLOC",
    documentation:
      "$$$$ CRITLOC  NOTICE  MB234859  17/10/02    21:15:06     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure CRITLOC                        Voir aussi :\n    ------------------  \n    TAB1 = CRITLOC  TAB2 ;\n                                  TAB2.'TNONL' .'OBJMO' .'RICE'\n                                      .'RICE' .'EPSILON' .'SIGMA'\n                                      .'ALPHA' .'BETA' .'EPSC'\n                                      .'LAMBDA' .'SIG0' .'SIGC\n                                      .'WEIBULL' .'V0' . 'M'\n                                      .'TEMPER'.  'SIGU'  'TEREF'\n                                      .'XMULT' .'IC'  .'N'\n\n\n    Objet :\n    _______\n\n    La procedure CRITLOC permet d'appliquer l'un ou l'autre des deux\ncriteres locaux suivants pour l'analyse de la rupture :\n\n    - critere de Weibull pour la rupture par clivage\n    - critere de Rice pour la rupture ductile\n\n\n    Description des arguments d'entree et de sortie\n    _______________________________________________\n\n\n    1)Dans le cas de l'utilisation des nouveaux objets MMODEL et MCHAML\n\n\n    TAB2 (type table) :\n    _________________\n\n      TAB2.'TNONL'   : table resultat du calcul nonlineaire de\n                       la procedure PASAPAS\n      TAB2.'OBJMO'   : objet modele  correspondant a la zone\n                       geometrique ou l'on veut appliquer le critere\n                       dans le cas du critere de Rice, objet modele\n                       total dans le cas du critere de Weibull\n\n      Si le critere de Rice pour la rupture ductile est demande :\n\n      TAB2.'RICE'    : VRAI\n      TAB2.'EPSILON' : VRAI si decohesion controlee par la deformation\n      TAB2.'SIGMA'   : VRAI si decohesion controlee par la contrainte\n\n      Si TAB2.'EPSILON' est VRAI il faut fournir les donnees des para-\n      metres du critere :\n\n      TAB2.'ALPHA'   : parametres du modele\n      TAB2.'BETA'\n      TAB2.'EPSC'    : deformation necessaire a l'apparition des cavites\n\n      Si TAB2.'SIGMA' est VRAI il faut fournir les parametres du critere\n\n      TAB2.'ALPHA'   : parametres du modele\n      TAB2.'BETA'\n      TAB2.'LAMBDA'  : depend du rapport de forme de l'inclusion et du\n                       sens de prelevement\n      TAB2.'SIG0'    : limite elastique du materiau\n      TAB2.'SIGC'    : contrainte necessaire a l'apparition des cavites\n\n      Si le critere de Weibull pour la rupture par clivage est demande :\n\n      TAB2.'WEIBULL' : VRAI\n\n      TAB2.'V0'      : constante liee a la taille de la microstructure d\n                       materiau\n      TAB2.'M'       : parametre de Weibull\n      TAB2.'TEMPER'  : vaut 1 si la contrainte caracteristique de clivage \n                       (appelee aussi constante du materiau mesurant sa \n                       resistance au clivage) depend de la temperature\n                       et 0 dans dans le cas contraire\n      TAB2.'SIGU'    : objet de type evolution representant la variation \n                       de sigu en fonction de la temperature si temper = 1 \n                       ou valeur de sigu de type constante si temper = 0\n      TAB2.'XMULT'   : intervient pour le calcul du volume plastifie\n                       et vaut : 1 si la structure complete est modelisee\n                                 2  s'il y a une symetrie\n      TAB2.'IC'      : vaut 1 ou 0 suivant que l'on veut prendre en\n                       compte ou non l'effet de la deformation plastique\n                       sur le clivage\n\n      Pour les cas PLAN   il faut fournir en plus :\n      TAB2.'EPAI'    : epaisseur de la structure\n\n      Si TAB2.'TEMPER' vaut 1 il faut fournir egalement :\n      TAB2.'TEREF'   : temperature de reference a laquelle on veut calculer\n                       la contrainte de Weibull  (SIGW depend de SIGU(TEREF))\n\n      Si TAB2.'IC' vaut 1 il faut fournir egalement :\n      TAB2.'N'       : vaut 2 ou 4  en general\n\n\n    TAB1 (type table) :\n    _________________\n\n    Si le critere de Rice pour la rupture ductile est demande :\n\n      la procedure fournit les valeurs moyennees par element de:\n\n      TAB1.'TAUX'    : taux de croissance  R/R0   (type MCHAML)\n      TAB1.'RAPPORT' : taux de triaxialite Sm/Seq (type MCHAML)\n      TAB1.'SIGEQ'   : contrainte de Von Mises    (type MCHAML)\n      TAB1.'EPSEQ'   : deformation plast. cumulee (type MCHAML)\n         et (si option SIGMA)\n      TAB1.'CONTDECO': contrainte locale          (type MCHAML)\n      TAB1.'CPRINMAX': contr. principale maximale (type MCHAML)\n\n    Si le critere de Weibull pour la rupture par clivage est demande :\n\n      TAB1.'SIGW'    : contrainte de Weibull  (type FLOTTANT)\n                       quand SIGU = evolution, SIGW depend de SIGU(TEREF)\n      TAB1.'PROB'    : probabilite de rupture (type FLOTTANT)\n                      quand SIGU = constante, PROBA = 1 - EXP ( - (SIGW/SIGU)**m\n                      quand SIGU = evolution, PROBA = 1 - EXP ( - (SIGW/SIGU(TER\n      TAB1.'VPLAS'   : volume plastique (type FLOTTANT)\n      TAB1.'SIGPMAX' : contrainte principale maximale (type FLOTTANT)\n      TAB1.'ELEMENT' : element associe a SIGPMAX (type MAILLAGE)\n      TAB1.'EPSEQ'   : deformation plast associee a SIGPMAX\n                       (type FLOTTANT)\n\n\n    Remarque :\n    __________\n\n    La procedure CRITLOC intervient en post-traitement d'un calcul\nelastoplastique et par consequent l'argument en entree, TAB2.'TNONL',\nest un objet de type TABLE construit par la procedure PASAPAS.\n\n    Les parametres du critere doivent etre fournis. On doit egalement\nfournir l'objet modele correspondant a la zone geometrique ou l'on veut\nappliquer le critere.\n\n    L'argument de sortie est une table contenant elle-meme plusieurs\ntables dans lesquelles sont stockees pour chaque pas du calcul elasto-\nplastique, la probabilite de rupture pour le critere de Weibull, et le\ntaux de croissance des cavites pour chacun des elements de la zone geo-\nmetrique consideree pour le critere de Rice.\n\n    Des resultats intermediaires de calcul ,tels que la contrainte de\nWeibull et le taux de triaxialite, sont egalement fournis.\n\n    IMPORTANT : cette procedure ne peut etre utilisee qu'avec des ele-\n    ---------   ments massifs.",
  },
  {
    name: "CSON",
    url: "CSON",
    documentation:
      "$$$$ CSON     NOTICE  CHAT      11/09/12    21:15:41     7124           \n                                             DATE     11/09/12\n\n    Operateur CSON                           Voir aussi : TAIL CFL \n    --------------                                      \n       CHAM3  =  'CSON'  MODL1 MATR1 ;\n                      \n\n                     \n \n    Objet :\n    _______\n\n    L'operateur CSON permet de caracteriser la celerite des ondes\nsonores dans un milieu continu mecanique a l'aide de la definition\ndu modele de comportement, des caracteristiques correspondantes.\nLa celerite est une fonction de l'espace.\nPar exemple pour un modele elastique isotrope, la celerite en un\npoint M vaut\n         \n                 c(M) =  (E(M)/RHO(M)) ** 0.5  \n    \n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele ( type MMODEL ).\n\n      MATR1 : objet de type MCHAML de sous-type CARACTERISTIQUES,\n              decrivant les parametres du modele de comportement\n              (obtenu avec l'operateur MATE). \n\n      CHAM3  : objet resultat de type MCHAML defini au centre des\n               de gravite des elements de composante 'CSON'. ",
  },
  {
    name: "CTOD",
    url: "CTOD",
    documentation:
      "$$$$ CTOD     NOTICE  MB234859  17/10/02    21:15:07     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure CTOD                            Voir aussi :\n    --------------  \n    CTOD   DEP1  TAB1 ;\n\n                        TAB1.'FRTFISS'\n                            .'LIFIS1'\n                            .'MAILLAGE' .'PFS1'\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule l'ouverture en pointe d'une fissure\n    chargee en mode I definie , en plasticite etendue , comme\n    2 fois le deplacement de la levre de la fissure au point\n    d'intersection avec la droite a 45 degres .\n    La procedure est applicable aux cas bidimensionnels et tridimen-\n    sionnels.\n    En 3D , l'ouverture de fissure est determinee en chaque noeud\n    sommet du front de fissure , a partir de l'ouverture dans le plan\n    normal au front de fissure au noeud considere.\n    (le maillage doit etre elabore de maniere a prevoir l'existence\n    de ces plans normaux au front de fissure).\n\n    Commentaire :\n    _____________\n\n    En entree :\n    __________\n\n    DEP1  : Champ de deplacements\n\n    TAB1  : Objet de type TABLE ,indice par des mots, servant a\n            definir les options et les parametres du calcul :\n\n      Arguments pour un probleme bidimensionnel\n      _________________________________________\n\n       indice       type objet         commentaires\n                      pointe\n\n      FRTFISS        POINT        pointe de la fissure\n\n      LIFIS1         MAILLAGE     ligne decrivant la levre de la fissure\n\n\n      Arguments pour un probleme tridimensionnel\n      _________________________________________\n\n       indice       type objet         commentaires\n                      pointe\n\n      FRTFISS        MAILLAGE     ligne decrivant le front de fissure\n\n      PSF1           POINT        un point de la surface de fissure\n                                  n'appartenant pas au front\n\n      En sortie :\n      __________\n\n      En sortie, TAB1 permet de retrouver les valeurs de\n      l'ouverture de fissure.\n\n      indice         type objet     commentaires\n                       pointe\n\n      CTOD         FLOTTANT/TABLE   en 2D ,flottant: valeur du CTOD\n                                    en 3D ,table contenant les valeurs\n                                    du CTOD en chaque noeud du front.\n\n      Exemple : pour lister la valeur du CTOD calcule au noeud P15 du\n             front de fissure ,il faudra coder : LIST (TAB1.CTOD.P15 )",
  },
  {
    name: "CUBP",
    url: "CUBP",
    documentation:
      "$$$$ CUBP     NOTICE  CHAT      11/09/12    21:15:41     7124           \n                                             DATE     11/09/12\n\n    Operateur CUBP                           Voir aussi : CUBT\n    --------------                                        COUR  \n    LIG1 = CUBP  (N1) POIN1 POIN2 POIN3 POIN4 ('UNIF') ('DINI' DENS1);\n                                                       ('DFIN' DENS2);\n\n\n    Objet :\n    _______\n\n    L'operateur CUBP construit l'arc de cubique passant par les points\nPOIN1, POIN2, POIN3 et POIN4.\n\n    Commentaire :\n    _____________\n\n    POINi : points par lesquels passe l'arc de cubique (type POINT)\n\n    DENS1 : densite associee au point POIN1 (type FLOTTANT)\n\n    DENS2 : densite associee au point POIN4 (type FLOTTANT)\n\n    N1    : nombre d'elements generes (type ENTIER)\n\n    LIG1  : arc de cubique (type MAILLAGE)\n\n    Remarque 1 :\n    ____________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n    Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    Si N1 est negatif, N1 elements seront engendres et leur tailles\nseront calculees en tenant compte des densites des extremites.\n\n    Remarque 2 :\n    ____________\n\n    Si les densites associees aux points POIN1 et POIN4 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ndernier point, derriere le mot-cle 'DFIN'.\n\n    Remarque 3 :\n    ____________\n\n    Si on donne le mot-cle 'UNIF', la repartition des points sur l'arc\nde cubique sera faite en fonction de l'abscisse curviligne, sinon elle\nsera liee au parametrage issu de la position des points intermediaires.",
  },
  {
    name: "CUBT",
    url: "CUBT",
    documentation:
      "$$$$ CUBT     NOTICE  CHAT      11/09/12    21:15:41     7124           \n                                             DATE     11/09/12\n\n    Operateur CUBT                           Voir aussi : CUBP\n    --------------                                        COUR  \n    LIG1 = CUBT  (N1) POIN1 VECT1 VECT2 POIN2 ...\n                             ... ('DINI' DENS1) ('DFIN' DENS2) ;\n\n\n    Objet :\n    _______\n\n    L'operateur CUBT construit un arc de cubique passant par deux points\nPOIN1 et POIN2; il est de plus tangent respectivement en POIN1 au\nvecteur VECT1 et en POIN2 au vecteur VECT2.\n\n    Commentaire :\n    _____________\n\n    POINi : points par lesquels passe l'arc de cubique (type POINT)\n\n    DENSi : densites associees aux points POINi (type FLOTTANT)\n\n    VECTi : vecteurs definissant les tangentes aux points POINi\n            (type POINT)\n\n    N1    : nombre d'elements generes (type ENTIER)\n\n    LIG1  : arc de cubique resultat (type MAILLAGE)\n\n    Remarque 1 :\n    ____________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n    Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    Si N1 est negatif, N1 elements seront engendres et leur tailles\nseront calculees en tenant compte des densites des extremites.\n\n    Remarque 2 :\n    ____________\n\n    Si les densites associees aux points POIN1 et POIN2 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ndernier point, derriere le mot-cle 'DFIN'.",
  },
  {
    name: "CVOL",
    url: "CVOL",
    documentation:
      "$$$$ CVOL     NOTICE  CHAT      11/09/12    21:15:42     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur CVOL                           Voir aussi :\n    --------------  \n    LREEL1  = CVOL LREEL2 LREEL3 (('NPNE' ENTI1) MOT1) ;\n\n\n\n    objet :\n    -------\n\n    Operateur CVOL effectue la convolution du signal LREEL2 avec la\n    reponse LREEL3. Le resultat LREEL1 comporte le meme nombre de points\n    que LREEL2 et est implicitement associe a la meme grille d'abscisse\n    uniforme de pas 1.\n\n    options :\n    ---------\n\n    - Le signal de reponse est considere par defaut comme symetrique et\n      LREEL3 ne contient que les points d'abscisse positif. Si LREEL3\n      contient tous les points, ENTI1 contient le nombre de points\n      d'abscisse strictement negatif. Il est introduit par le mot clef\n      'NPNE'.\n\n    - La convolution peut etre effectuee par symetrisation du signal ou\n      par \"zero padding\". MOT1 permet de specifier 'SYME' ou 'PADD'.\n      Le defaut est 'SYME'.",
  },
  {
    name: "DALL",
    url: "DALL",
    documentation:
      "$$$$ DALL     NOTICE  CB215821  15/12/04    21:15:04     8724           \n                                             DATE     15/12/04\n\n    Operateur DALLER                         Voir aussi : TRAN REGL\n    ----------------                                      ROTA SURF GENE  \n\n    Objet :\n    _______\n\n    L'operateur DALLER construit une surface, soit a partir de la\ndonnee d'un contour , soit a partir d'une representation polynomiale.\n\n    --------------------\n    | 1ere possibilite |\n    --------------------\n    SURF1 = DALL | COTE1 COTE2 COTE3 COTE4 | 'PLAN' ;\n                 |                         | 'SPHE' CENTR1 ;\n                 |                         | 'CYLI' POIN1  POIN2 ;\n                 |                         | 'CONI' POIN1  POIN2 ;\n                 |                         | 'TORI' CENTR1 POIN1 CENTR1\n                 |                         | 'QUELCONQUE' ;\n\n\n    Commentaire :\n    _____________\n\n    Suivant le mot-cle l'objet genere s'appuie :\n\n          * sur une surface plane           ('PLAN')\n\n          * sur une surface spherique       ('SPHE')\n            de centre CENTR1 (type POINT)\n\n          * sur une surface cylindrique     ('CYLI')\n            d'axe POIN1 POIN2 (type POINT)\n\n          * sur une surface conique         ('CONI')\n            de sommet POIN1 et d'axe POIN1 POIN2 (type POINT)\n\n          * sur une surface torique         ('TORI')\n            de centre CENTR1 (type POINT),\n            d'axe de symetrie POIN1 POIN2 (type POINT)\n            et avec CENTR2 (type POINT) le centre du petit cercle\n\n          * sur une surface issue des cotes ('QUELCONQUE')\n\n\n    COTEi : cotes definissant un contour (type MAILLAGE)\n            il faut que ce contour ait un sens\n\n    CENTRi : centres (type POINT)\n\n    POINi  : points definissant les axes (type POINT)\n\n    SURF1 : objet resultat (type MAILLAGE)\n\n\n    Remarque :\n    __________\n\n    Les elements construits seront orientes d'apres le sens de\ndescription du contour.\n\n    Les cotes opposes n'ont pas forcement le meme nombre de points.\nPar contre le nombre total de points doit etre pair.\n\n                             3ETOC\n                       -----------------\n                      C|\\  | | | | |  /|2\n                      O|-|-|-|-|-|-|-|-|E\n                      T| | | | | | | | |T\n                      E|-|-|-|-|-|-|-|-|O\n                      4| | | | | | | | |C\n                       ------------------\n                             COTE1\n\n    --------------------\n    | 2eme possibilite |\n    --------------------\n    SURF1 = DALL | POLYNOME N1 N2 P00  P01 (P02 (P03 ...) )\n                 |                P10  P11 (P12 (P13 ...) )\n                 |               (P20 (P21 (P22 (P23 ...) )\n                 |               (         ...            )\n                 |               ('PARAMETRE' U1 U2 V1 V2) ('REGULIER');\n\n\n\n    Le resultat est le MAILLAGE de la surface parametree d'equation:\n\n                                   | P00 P01 P02 P03 .. |   |   1     |\n                   2     (N2-1)    | P10 P11 P12 P13 .. |   |   U     |\n    P(U,V) = (1 V V  ...V      ) x | P20 P21 P22 P23 .. | x |  ..     |\n                                   |         ...        |   |U**(N1-1)|\n\n    Commentaire :\n    _____________\n\n    N1, N2        : nombre de colonnes et de lignes de la matrice de\n                    points (type ENTIER)\n\n    P00, P01, ... : points utilises pour la definition parametrique de\n                    la surface (type POINT).\n\n    U1 et U2,     : bornes de variation du parametre U, egales a (0,1)\n                    par defaut (type FLOTTANT).\n\n    V1 et V2,     : bornes de variation du parametre V, egales a (0,1)\n                    par defaut (type FLOTTANT).\n\n    'REGULIER'    : mot-cle indiquant que les points de la surface\n                    doivent etre regulierement repartis dans l'espace\n                    geometrique (eu egard aux densites existantes)\n                    plutot que dans l'espace parametrique.",
  },
  {
    name: "DANS",
    url: "DANS",
    documentation:
      "$$$$ DANS     NOTICE  BP208322  11/11/30    21:15:01     7194           \n                                             DATE     11/11/30\n\n    Operateur DANS                            Voir aussi : EXIS\n    --------------  \n    LOG1 = DANS   |   LECT1        LECT2                |\n                  |   LISTREE1     RE1                  |\n                  |   POINT1       MELE1                |\n                  |   | ('SEQU' )| LISTREE1 LISTREE2    |\n                  |   |  'QUEL'  |                      |\n                  \n                  \n                  \n\n    Objet :\n    _______\n\n   a)  L'operateur DANS fabrique un logique LOG1 qui est VRAI si le LISTENTI\n       LECT1 est inclus dans le LISTENTI LECT2 et FAUX sinon.\n\n       Pour que LECT1 soit inclus dans LECT2, p etant la dimension de LECT1 et \n       q celle de LECT2, il faut qu'il existe n tel que les 1 ... p valeurs de \n       LECT1 soient respectivement egales aux n*p+1 ... (n+1)*p valeurs de LECT2\n\n   b)  L'operateur DANS fabrique un logique qui est VRAI si le reel RE1 est dans\n       le listreel  LISTREE1. La precision est calculee en fonction (*1.e-8)dut\n       plus petit ecart entre deux valeurs consecutives du listreel.\n\n   c)   L'operateur DANS fabrique un logique qui est VRAI si le point POINT1\n        fait partie des noeuds du maillage MELE1.\n        \n   d)   - mot SEQU : L'operateur DANS fabrique un logique qui est vrai si\n                     la sequence du listree1 se retrouve dans le listreel2\n  \n   e)   - mot QUEL : L'operateur DANS fabrique un logique qui est vrai si tous\n                     les element du listreel1 existent dans le listreel2\n     ",
  },
  {
    name: "DARCYSAT",
    url: "DARCYSAT",
    documentation:
      "$$$$ DARCYSAT NOTICE  CHAT      11/09/12    21:15:42     7124           \n                                             DATE     11/09/12\n     Procedure DARCYSAT\n     ------------------                       Voir aussi : HT_PRO\n                                                           KR_PRO  \n                                                           PECHE  \n                                                           TRACHIS  \n                                                           TRACHIT  \n\n     TAB1.'SOUSTYPE'.'MODELE'\n         .'LOI_PERMEABILITE'.'LOI_SATURATION'.'HOMOGENEISATION'\n         .'COEFEMMA'.'BLOCAGES_DARCY'.'CHARGEMENT'.'FORCE_GRAVITE'\n         .'CONVERSION_CHARGE'.'TEMPS'.'TRACE_CHARGE'.'CHARGE'.('FLUX')\n         .'TEMPS_CALCULES'.'TEMPS_SAUVES'.'TEMPS_FINAL'\n         .'DT_INITIAL'.'NPAS'.'CFL'\n         .'NITER'.'ITMAX'.'RESIDU_MAX'.'SOUS_RELAXATION'.'XI'\n         .'DIVISION_DT'.'COFDIV'.'NMAXDT'.'MESSAGE'\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de simuler un transitoire d'ecoulement\n    en zones saturee et non saturee d'un milieu poreux. L'ecoulement\n    est decrit en zone saturee par l'equation de Darcy et en zone non\n    saturee par l'equation de Richard's (ecrite ici avec h en metres)\n\n    zone saturee (Pw - Pg > 0)\n\n      Se dh/dt = -div(U) ; U = -Ks grad(h) ;\n      h = (Pw-Pg)/rho*g + z (m)   ou   h = (Pw-Pg) + rho*g*z (Pa)\n      avec, Se, coefficient d'emmagasinement (1/m),\n            Ks, permeabilite a saturation (m/s),\n            Pw, pression d'eau (Pa),\n            Pg, pression de gaz (Pa),\n            h,  charge (m) et\n            U,  vitesse de Darcy (m/s).\n\n    zone non saturee (Pw - Pg < 0)\n\n      C(P) dh/dt = -div(U) ; U = -K(P) (grad h)\n\n      avec, C(P) capacite capillaire (1/m)\n            K(P), permeabilite (m/s)\n\n    La resolution est effectuee en trace de charge par la methode EFMH.\n    La teneur en eau se deduit de la pression par la procedure HT_PRO.\n    La permeabilite se deduit de la saturation par la procedure KR_PRO.\n    La capacite capillaire est deduite de la teneur en eau et de la\n    pression.\n\n    Le probleme etant non lineaire, des mecanismes automatiques ou non\n    ont ete mis en place pour fiabiliser la convergence du systeme :\n    relaxation de la capacite et de la conductivite hydraulique et\n    homogeneisation des caracteristiques decentree sur les elements,\n    changement automatique de pas de temps ou penalisation sur le\n    terme transitoire.\n\n    Commentaire :\n    _____________\n\n    En entree, TAB1 sert a definir les options et les parametres du\n    calcul. Les indices de la table TAB1 sont des mots (a coder tels\n    quels) dont voici la description :\n\n    ___________________________________________________________________\n    |                                                                 |\n    | Indice      Definition                                          |\n    |                                                                 |\n    -------------------------------------------------------------------\n    |                                                                 |\n    |-------------------------------------------------                |\n    | Donnees physiques, geometriques et materielles :                |\n    |-------------------------------------------------                |\n    |                                                                 |\n    |'SOUSTYPE'   'DARCY_TRANSATUR'   (type MOT)                      |\n    |                                                                 |\n    |'MODELE'     Objet modele (MMODEL cree par MODE)                 |\n    |                                                                 |\n    |'LOI_PERMEABILITE'  Objet table contenant les valeurs des        |\n    |             parametres de la loi de permeabilite calculee par la|\n    |             procedure KR_PRO.                                   |\n    |             3 indices 'SOUSTYPE' possibles :                    |\n    |                                                                 |\n    |             - soustypes au choix                                |\n    |              'PUISSANCE', 'MUALEM', 'BURDINE', 'MUALEM_BURDINE' |\n    |             'BROOKS_COREY', 'EXPONENTIELLE', 'LOGARITHMIQUE'    |  \n    |             : la table doit contenir les                        |\n    |             indices designant les parametres utilises dans la   |\n    |             procedure standard KR_PRO.                          |\n    |                                                                 |\n    |             - soustype 'PERSONNELLE' : la table doit contenir   |\n    |             les indices de la loi construite par l'utilisateur  |\n    |             dans sa propre procedure KR_PRO, ou dans une autre  |\n    |             dont le nom est stipule au sous-indice              |\n    |             'NOM_PROCEDURE'.                                    |\n    |                                                                 |\n    |             - soustype 'MULTIZONE' : les indices doivent        |\n    |             designer les differentes zones, les valeurs de ces  |\n    |             indices etant alors des tables de soustype          |\n    |             'PUISSANCE', 'MUALEM', 'BURDINE', 'MUALEM_BURDINE'  |\n    |             'BROOKS_COREY', 'EXPONENTIELLE', 'LOGARITHMIQUE'    |\n    |             documentees dans la notice de KR_PRO                |\n    |             ou'PERSONNELLE' dont les indices                    |\n    |             designent les parametres des lois affectees a chaque|\n    |             zone. Ces sous-tables doivent aussi contenir le     |\n    |             modele de la zone a l'indice 'MODELE', ces sous-    |\n    |             modeles constituant une partition du domaine general|\n    |                                                                 |\n    |             pour les autres sous-indices (defaut), voir KR_PRO  |\n    |                                                                 |\n    |'LOI_SATURATION' Objet table contenant les valeurs des           |\n    |             parametres de la loi analytique de teneur en eau    |\n    |             calculee par la procedure  HT_PRO.                  |\n    |             3 indices 'SOUSTYPE' possibles :                    |\n    |                                                                 |\n    |             - soustypes aux choix 'VAN_GENUCHTEN',              |\n    |               'EXPONENTIELLE', 'LOGARITHMIQUE'                  |\n    |               : la table doit contenir les                      |\n    |             indices designant les parametres utilises dans la   |\n    |             procedure standard HT_PRO.                          |\n    |                                                                 |\n    |             - soustype 'PERSONNELLE' : la table doit contenir   |\n    |             les indices de la loi construite par l'utilisateur  |\n    |             dans sa propre procedure HT_PRO, ou dans une autre  |\n    |             dont le nom est stipule au sous-indice              |\n    |             'NOM_PROCEDURE'.                                    |\n    |                                                                 |\n    |             - soustype 'MULTIZONE' : les indices doivent        |\n    |             designer les differentes zones, les valeurs de ces  |\n    |             indices etant alors des tables de soustype          |\n    |             'VAN_GENUCHTEN', 'EXPONENTIELLE', 'LOGARITHMIQUE'   |\n    |             ou 'PERSONNELLE' dont les indices designent les     |\n    |             parametres des lois affectees a chaque zone.        |\n    |             Ces sous-tables doivent aussi contenir le modele de |\n    |             la zone a l'indice 'MODELE', ces sous-modeles       |\n    |             constituant une partition du domaine general        |\n    |                                                                 |\n    |             pour les autres sous-indices (defaut), voir HT_PRO  |\n    |                                                                 |\n    |'COEFEMMA'   coefficient d'emmagasinement en zone saturee (m-1)  |\n    |             (FLOTTANT ou CHPOINT, comp. 'SCAL', nature          |\n    |             discrete, defaut = 0)                               |\n    |                                                                 |\n    |'FORCE_GRAVITE' (type FLOTTANT, par ex. = 1000*9.81) valeur de la|\n    |             force de gravite (N/m3) egale a la masse volumique  |\n    |             de l'eau multipliee par l'acceleration de la        |\n    |             pesanteur. En absence de ce mot cle, la gravite     |\n    |             n'est pas prise en compte.                          |\n    |                                                                 |\n    |'CONVERSION_CHARGE' (type 'FLOTTANT', defaut = 1.) facteur de    |\n    |             convertion de la charge en Pascals.                 |\n    |             Pour une pression qui s'exprime en Pascals,         |\n    |             cette valeur est sans dimension et vaut 1.          |\n    |             Pour une pression qui s'exprimerait en metres,      |\n    |             cette valeur serait en Pa/m, et vaudrait rho_w g.   |\n    |                                                                 |\n    |'AXE_G'      VECTEUR donnant la direction des forces de gravite  |\n    |             (facultatif, defaut = 0. 1. en 2D, 0. 0. 1. en 3D)  |\n    |             Utile seulement avec l'indice 'FORCE_GRAVITE'.      |\n    |                                                                 |\n    |-----------------------                                          |\n    | Conditions initiales :                                          |\n    |-----------------------                                          |\n    |                                                                 |\n    |'TEMPS'      TABLE contenant a l'indice 0 la valeur du temps     |\n    |             initial (s) ('FLOTTANT', defaut = 0.)               |\n    |                                                                 |\n    |'CHARGE'     TABLE contenant a l'indice 0 la charge initiale (m) |\n    |             (CHPOINT centre, composante 'H')                    |\n    |                                                                 |\n    |'FLUX'       TABLE contenant a l'indice 0 le flux diffusif       |\n    |             initial (m3/s) (CHPOINT face, composante 'FLUX')    |\n    |             En absence de cet indice le flux n'est pas          |\n    |             sauvegarde                                          |\n    |                                                                 |\n    |                                                                 |\n    |---------------------------------------                          |\n    | Conditions aux limites / chargements :                          |\n    |---------------------------------------                          |\n    |                                                                 |\n    |'TRACE_IMPOSE' Valeurs des traces imposees (charge)              |\n    |                                                                 |\n    |'FLUX_IMPOSE' Valeurs des flux imposes integres par face         |\n    |              (Type CHARGEMENT de CHPO Face) -                   |\n    |                                                                 |\n    |                                                                 |\n    |'FLUXTOT_IMP' Valeurs des flux totaux imposes integres par face  |\n    |              (Type CHARGEMENT de CHPO Face, comp. 'H')          |\n    |                                                                 |\n    |'MIXTES'      Table : - indice C contient les valeurs des flux   |\n    |                               mixtes imposes integres par face  |\n    |                             (Type CHARGEMENT de CHPO Face,      |\n    |                              comp. 'H' defaut 0.)               |\n    |                      - indices A et B sont des reels            |\n    |                                                                 |\n    |              la condition mixte s'ecrit                         |\n    |                   C =  A * flux diffusif +  B * Concentration   |\n    |                                                                 |\n    |'SOURCE'     source d'eau imposee par maille et unite de temps   |\n    |             (option, defaut=0) (type 'CHARGEMENT' 'SOUR')       | \n    |                                                                 |\n    |-------------------------------------------                      |\n    | Homogeneisation des capacite capillaire et                      |\n    |   permeabilite relative sur un element   :                      |\n    |-------------------------------------------                      |\n    |                                                                 |\n    |'HOMOGENEISATION' mot 'CENTRE' (defaut) ou 'DECENTRE'            |\n    |                                                                 |\n    |             'TRACE' : C (capacite capil.) et K (permeabilite)   |\n    |              (uniquement avec les EFMH) calculees a partir des  | \n    |              traces donnees par les EFMH                        | \n    |                                                                 |\n    |             'DECENTRE' : C (capacite capil.) et K (permeabilite)|\n    |                calculees par moyenne arithmetique des valeurs   |\n    |                aux faces evaluees par interpolation.            |\n    |                Permet une meilleure precision lors              |\n    |                de la precense de chocs                          |\n    |                                                                 |\n    |             'CENTRE' : C et K calcules avec la pression moyenne |\n    |                elementaire. moins precis en cas de choc mais    |\n    |               le point fixe converge souvent plus vite          |\n    |                                                                 |\n    |------------------------------------                             |\n    | Algorithme de resolution (PICARD) :                             |\n    |------------------------------------                             |\n    |                                                                 |\n    |'ITMAX'      nombre maximum d'iterations (defaut = 40)           |\n    |                                                                 |\n    |'NITER'      Nombre d'iterations recherche pour atteindre la     |\n    |             convergence d'un temps calcule : une convergence    |\n    |             trop lente induit une diminution automatique du     |\n    |             facteur sur le pas de temps (indice 'CFL') et       |\n    |             inversement (ENTIER, defaut = 10)                   |\n    |                                                                 |\n    |'RESIDU_MAX' critere adimensionnel de convergence                |\n    |             = quantite volumique relative maximale acceptable   |\n    |             de fluide ajoute au systeme pendant un pas de temps.|\n    |             Le residu est construit sur le systeme non relaxe   |\n    |             ('FLOTTANT', defaut = 1.D-4)                        |\n    |                                                                 |\n    |'SOUS_RELAXATION' sous-relaxation sur la capacite et la          |\n    |             permeabilite. La valeur de ce parametre doit etre   |\n    |             comprise entre 0 et 1. Valeur inferieure a 1        |\n    |             conseillee en presence d'oscillations.              |\n    |             La sous-relaxation passe automatiquement a 0,5 au   |\n    |             dela de 'ITMAX'/2 iterations (difficulte de         |\n    |             convergence averee).                                |\n    |             Une fois la convergence atteinte, la sous-relaxation|\n    |             retrouve sa valeur initiale pour le temps calcule   |\n    |             suivant.                                            |\n    |             (FLOTTANT, defaut = 1 : pas de relaxation)          |\n    |             (rappel : la sous-relaxation effectue une moyenne   |\n    |              des valeurs d'une variable obtenues sur deux       |\n    |              iterations successives)                            |\n    |                                                                 |\n    |'COFDIV'     en l'absence de convergence le pas de temps est     |\n    |             diminue de ce facteur ('FLOTTANT', defaut=0.8), et  |\n    |             le calcul est relance                               |\n    |                                                                 |\n    |'NMAXDT'     nombre maximum de fois que ce processus de division |\n    |             de pas de temps est renouvelle (ENTIER, defaut = 6) |\n    |                                                                 |\n    |--------------------------                                       |\n    | Discretisation en temps :                                       |\n    |--------------------------                                       |\n    |                                                                 |\n    |'THETA'      Coefficient d'implicitation compris entre 0. et 1.  |\n    |             (theta-methode diffusion) (FLOTTANT - defaut 1.)    |\n    |             Possibilite de non-convergence lorsque theta<1/2    |\n    |             Valeurs de theta generalement utilisees :           |\n    |                   Schema de Euler explicite : 0.                |\n    |                   Schema de Crank-Nicholson : 1/2               |\n    |                   Schema de Galerkin        : 2/3               |\n    |                   Schema de Euler implicite : 1.                |\n    |                                                                 |\n    |'TEMPS_CALCULES' LISTREEL des temps a calculer (optionnel)       |\n    |                                                                 |\n    |     !!! En absence de l'indice 'TEMPS_CALCULES', le pas de !!!  |\n    |     !!! temps est calcule automatiquement. Dans ce cas les !!!  |\n    |     !!! indices suivants doivent etre renseignes :         !!!  |\n    |                                                                 |\n    |'NPAS'       nombre de pas de temps                              |\n    |             (ENTIER, defaut = jusqu'a TEMPS_FINAL)              |\n    |                                                                 |\n    |'TEMPS_FINAL' temps final (FLOTTANT, obligatoire si NPAS absent) |\n    |                                                                 |\n    |'DT_INITIAL' pas de temps initial ('FLOTTANT', optionel)         |\n    |                                                                 |\n    |'CFL'        Facteur initial sur le pas de temps automatique.    |\n    |             Ce facteur est modifie ensuite au cours de la       |\n    |             resolution pour respecter le critere demande sur la |\n    |             rapidite de convergence NITER                       |\n    |             (FLOTTANT, defaut = 0.5)                            |\n    |                                                                 |\n    |--------------------                                             |\n    |Donnees numeriques :                                             |\n    |--------------------                                             |\n    |                                                                 |\n    | 'LUMP'       FAUX SI pas de mass lumping, VRAI sinon.           |\n    |              VRAI seulement sur des maillages de rectangles et  |\n    |              parallelepipedes rectangles et tenseur de dissusion|\n    |              orthotrope. Permet de rendre les schemas monotone  |\n    |              pour la diffusion-instationnaire                   |\n    |                                                                 |\n    | 'DECENTR'    VRAI si diffusion numerique pour Peclet = 2, permet|\n    |              de stabiliser (en explicite) voire rendre monotone |\n    |              le schema de convection.                           |\n    |              FAUX si schema sans convection, ou en implicite et |\n    |              absence d'oscillations - plus precis               |\n    |                                                                 |\n    | 'TYPDISCRETISATION' 'VF' si VF et 'EFMH' si EFMH                |\n    |                                                                 | \n    | 'CONSERVATIF' Schema conservatif (l'option par defaut ne        |\n    |  l'est pas). Cette option peut donner des resultats plus precis |\n    |  dans certains cas.                                             |\n    |                                                                 |\n    | 'METHINV'    TABLE DE PARAMETRE du solveur KRES, cf KRES        |\n    |              peut etre remplie partiellement                    |\n    |              deux indices importants :                          |\n    |              'TYPINV' OBLIGATOIRE 1 pour direct 3 pour BiCGSTAB |\n    |              'PRECOND' obligatoire 3 pour ILU0, 5 pour ILUT     |\n    |              conseil TYPINV = 1 en 2D ou petits calculs, 3 sinon|\n    |              conseil PRECOND = 3 sauf si problemes mettre 5     |\n    |              DERNIER CONSEIL : si message du type convergence   |\n    |              breakdown, Pivot nul ... mettre la tolerence       |\n    |              BCGSTOL a la precision machine 1.D-300, cf notice  |\n    |              de KRES                                            |\n    |                                                                 |\n    |---------------------------                                      |\n    | Sauvegarde des resultats :                                      |\n    |---------------------------                                      |\n    |                                                                 |\n    |'TEMPS_SAUVES' liste des indices des temps a sauver.             |\n    |             ('LISTREEL', defaut = tous)                         |\n    |                                                                 |\n    |'MESSAGES'   (type ENTIER, 0 a 2) niveau de detail des messages  |\n    |             imprimes a l'execution (0=peu, 1=normal, 2=tous)    |\n    |                                                                 |\n    -------------------------------------------------------------------\n    | Sortie :                                                        |\n    ----------                                                        |\n    |                                                                 |\n    |'TEMPS'      TABLE contenant les temps sauvegardes ('FLOTTANT')  |\n    |                                                                 |\n    |'CHARGE'     TABLE contenant a la charge hydrauliquea (m ou Pa)  |\n    |             (CHPOINT centre, comp. 'H', nature diffus)          |\n    |                                                                 |\n    |'FLUX'       TABLE contenant les flux hydrauliques (m3/s)        |\n    |             (CHPOINT face, comp. 'FLUX', nature discret)        |\n    |             (optionnel, seulement si l'indice 0 a ete defini    |\n    |                                                                 |\n    |'SUCCION'    TABLE contenant la succion Pw - Pg (m ou Pascal)    |\n    |             (CHPOINT centre, comp. 'SCAL')                      |\n    |                                                                 |\n    |'PRESSION'   TABLE contenant la pression (m ou Pascal)           |\n    |             (CHPOINT centre, comp. 'SCAL')                      |\n    |                                                                 |\n    |'SATURATION' TABLE contenant la saturation (s.d. entre 0 et 1)   |\n    |             (CHPOINT centre, comp. 'SCAL')                      |\n    |                                                                 |\n    |'TH2O'       TABLE contenant la teneur en eau                    |\n    |             (s.d. entre 0 et la porosite)                       |\n    |             (CHPOINT centre, comp. 'SCAL')                      |\n    |                                                                 |\n    |'TEMPS_EFFECTUES' LISTREEL contenant les temps effectivement     |\n    |             calcules. Utile avec un pas de temps automatique et |\n    |             les TEMPS_SAUVES specifies                          |\n    |                                                                 |\n    |_________________________________________________________________|\n\n\n     En sortie, TAB1 permet de retrouver les resultats. Ceux-ci sont mis\n dans des tables dont les indices sont des entiers ( 0 1 2 ... N )\n correspondants aux numeros de sauvegarde des resultats, l'indice 0\n designant le temps initial.\n\n        Exemple : pour lister le CHPOINT de charge calcule  pour la\n                  valeur du parametre d'evolution 2.5, il faudra coder :\n                            LIST ( PECHE TAB1 CHARGE 2.5 ) ;\n                  ou\n\n                  si on sait que l'indice i de la table TEMPS contient\n                  la valeur du parametre d'evolution 2.5, on peut coder\n                            LIST ( TAB1 . CHARGE . i ) ;\n\n                  des profils ou des evolutions peuvent etre obtenus\n                  avec les procedures TRACHIS et TRACHIT\n\n     Remarques :\n     ___________\n\n  1 - Les resultats etant reperes dans TAB1. Il n'y a pas d'objets\n      nommes crees par cette procedure.\n\n  2 - En presence d'un pas de temps automatique, un nombre d'iterations\n      demande (indice 'NITER') trop important induit un CFL grand\n      (> 0.5). Le CFL est fourni en commentaire a chaque pas de temps\n      sii le niveau de message est superieur ou egal a 1\n\n  3 - Lorsque le milieu devient sature dans sa totalite, le pas de\n      temps automatique devient tres grand. L'equation resolue\n      redevenant lineaire, la convergence du processus iteratif est\n      immediate.\n\n  4 - Des messages permettent de suivre l'evolution d'un certain\n      nombres de parametre au cours du processus iteratif\n      (si 'MESSAGE' > 0) :\n       - valeur du critere de convergence\n       - maximum et minimum de la trace de charge\n       - minimum de la permeabilite\n       - maximum de la capacite capillaire\n       - nombre de mailles non saturees\n\n  5 - Une fois sorti de DARCYSAT on peut y re-entrer en definissant\n      soit le temps final soit le nombre de pas de temps et en invoquant\n      de nouveau DARCYSAT avec les memes operandes que lors du premier\n      appel.\n\n  6 - Les calculs peuvent etre effectues avec un autre systeme d'unite\n      que celui propose dans la notice (en particulier les charges en\n      Pascal). L'utilisateur doit alors veiller lui-meme a la coherence\n      des unites des differents parametres qu'il utilise et renseigner\n      l'indice 'CONVERSION_CHARGE'.\n\n  7 - La loi de saturation en fonction de la pression capillaire se\n      trouve dans la procedure HT_PRO, celle de permeabilite dans la\n      procedure KR_PRO. L'utilisateur peut les modifier ou construire\n      ses propres procedures sur le meme moule, a condition de preciser\n      leur(s) nom(s) dans les tables stoquees aux indices\n      'LOI_SATURATION' et 'LOI_PERMEABILITE' respectivement.",
  },
  {
    name: "DARCYTRA",
    url: "DARCYTRA",
    documentation:
      "$$$$ DARCYTRA NOTICE  CHAT      11/09/12    21:15:43     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure DARCYTRA                       Voir aussi : PECHE\n    ------------------                                    DARCYSAT  \n    DARCYTRA TAB1 ;\n\n             TAB1.'SOUSTYPE'.'MODELE'.'DOMAINE'.\n                  'CARACTERISTIQUES'.'EMMAGASINEMENT'.'CONVECTION'.\n                  'TEMPS'.'TRACE_CHARGE'.'CHARGE'.'FLUX'.\n                  'BLOCAGE'.'TRACE_IMPOSE'.'FLUX_IMPOSE'.'SOURCE'.\n                  'TEMPS_CALCULES'.'TEMPS_SAUVES'.\n                  'THETA'.'THETA_CONVECTION'\n\n         ou  TAB1.'SOUSTYPE'.'MODELE'.'DOMAINE'.'ORIENTATION'.\n                  'CARACTERISTIQUES'.'POROSITE'.'DECROISSANCE'.\n                  'COEF_RETARD'.'LANGMUIR'.'FREUNDLICH'.\n                  'LIMITE_SOLUBILITE'.'COEF_DISSOLUTION'.\n                  'CONVECTION'.'TEMPS'.'TRACE_CONC'.'CONCENTRATION'.\n                  'FLUX'.'PRECIPITE'.'DISSOLUTION'.\n                  'BLOCAGE'.'TRACE_IMPOSE'.'FLUX_IMPOSE'.\n                  'DISSOLUTION_IMPOSEE'.'SOURCE'.'TEMPS_CALCULES'.\n                  'TEMPS_SAUVES'.'THETA_DIFF'.'THETA_CONVECTION'.\n                  'THETA_DEC'.'THETA_DISS'.'PENALISATION'.\n                  'EPSI_LIM'.'ITMAX_LIM'.'EPSI_RET'.'EPSI_COR'.\n                  'ITMAX_RET'\n\n                                    \n\n    Objet :\n    _______\n\n    Cette procedure a deux fonctions.\n\n 1) En presence de l'indice 'CHARGE', on resoud les equations\nde DARCY en transitoire pour l'ecoulement par une methode d'elements\nfinis mixtes hybrides (EFMH).\n    Les inconnues du probleme sont la charge ('H'),\nla trace de charge ('TH') et le flux diffusif ('FLUX').\n\n 2) En l'absence de l'indice 'CHARGE', resoud l'equation\nde transport par diffusion-convection d'un champ scalaire actif\npar un fluide dont la vitesse est connue. L'espece peut se trouver\nsous trois formes : solute, adsorbat et precipite, dont les lois\nd'echange doivent etre specifiees. A chaque loi correspondent un ou\nplusieurs algorithmes auxquels des parametres numeriques doivent etre\nfournis. On utilise la modelisation Darcy EFMH.\n    Les inconnues du probleme sont la concentration ('H'),\nla trace de concentration ('TH') et le flux diffusif ('FLUX').\n\n\n    Commentaire :\n    _____________\n\n    En entree, TAB1 sert a definir les options et les parametres du\ncalcul. Les indices de la table TAB1 sont des mots (a coder tel quel)\ndont voici la description :\n\n  ___________________________________________________________________\n  |                                                                 |\n  | Indice      Contenu                                             |\n  |                                                                 |\n  -------------------------------------------------------------------\n  |                                                                 |\n  |------------------------------------------------                 |\n  |Donnees physiques, geometriques et materielles :                 |\n  |------------------------------------------------                 |\n  |                                                                 |\n  |   ------ Indices communs a l'ecoulement et au transport ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'SOUSTYPE'   'DARCY' (type MOT)                                  |\n  |                                                                 |\n  |'MODELE'      Objet modele (MMODEL cree par MODE)                |\n  |                                                                 |\n  |'DOMAINE'     References geometriques (TABLE creee par DOMA)     |\n  |                                                                 |\n  |   ------ 1ere possibilite : Resolution de l'ecoulement ------   |\n  |   -----------------------------------------------------------   |\n  |                                                                 |\n  |'CARACTERISTIQUES' Donnees physiques et materielles :            |\n  |              conductivite hydraulique (CHAMELEM cree par MATE)  |\n  |                                                                 |\n  |'EMMAGASINEMENT' Valeur du coefficient d'emmagasinement          |\n  |              (Type CHPO Centre, Comp 'CK', ou FLOTTANT)         |\n  |              - Defaut 1.                                        |\n  |                                                                 |\n  |   ------ 2eme possibilite : Resolution du transport     ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'CARACTERISTIQUES' Donnees physiques et materielles :            |\n  |              diffusivite effective (CHAMELEM cree par MATE)     |\n  |                                                                 |\n  |'POROSITE'    Valeur de la porosite (Type CHPO Centre, Comp      |\n  |              'CK', ou FLOTTANT) - Defaut 1.                     |\n  |                                                                 |\n  |'DECROISSANCE' Valeur du terme de decroissance (Type FLOTTANT)   |\n  |              Tel que dC/dt = - Lambda * C     - Defaut 0.       |\n  |                                                                 |\n  |'COEF_RETARD' Coefficient de retard lineaire dans le cas simple, |\n  |              ou  Pente a l'origine de la fonction F(C) dans le  |\n  |                  cas d'isotherme non lineaire de Langmuir       |\n  |              ou  Coefficient K de l'isotherme de Freundlich     |\n  |              (Type CHPO Centre 'SCAL', ou FLOTTANT)             |\n  |                                                                 |\n  |'LANGMUIR'    Quantite maximale adsorbee sur le solide           |\n  |              rapportee a l'unite de volume du fluide et exprimee|\n  |              dans la meme unite que le solute.                  |\n  |              (Type CHPO Centre 'SCAL', ou FLOTTANT).            |\n  |              F = (R-1) C / [1 + ((R-1) C / Fsat)]               |\n  |              Si cet indice et le suivant sont absents,          |\n  |              l'equilibre d'adsorption est lineaire. Cet indice a|\n  |              priorite sur l'indice FREUNDLICH.                  |\n  |                                                                 |\n  |'FREUNDLICH'  Exposant de la loi de Freundlich F = K (C ^ 1/n)   |\n  |              (Type FLOTTANT).                                   |\n  |              Dans ce cas (et si l'indice LANGMUIR n'existe pas),|\n  |              l'indice 'RETARD' contient le coefficient          |\n  |              K ramene a une unite de volume de fluide.          |\n  |              - Non disponible pour l'instant -                  |\n  |                                                                 |\n  |'LIMITE_SOLUBILITE' Limite de solubilite (Type MCHAML, Comp 'H') |\n  |                                                                 |\n  |'COEF_DISSOLUTION' Coef. de dissolution (Type CHPO Centre, Comp  |\n  |              'SCAL'). Tel que dC/dt = Coef * (Csat - C) - Par   |\n  |              defaut, la dissolution est instantanee             |\n  |                                                                 |\n  |'CONVECTION'  Debit integre de la vitesse convective a travers   |\n  |              chaque face des elements (Type CHPO Face, comp.    |\n  |              'FLUX')                                            |\n  |                                                                 |\n  |----------------------                                           |\n  |Conditions initiales :                                           |\n  |----------------------                                           |\n  |                                                                 |\n  |   ------ Indices communs a l'ecoulement et au transport ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'TEMPS'       TABLE contenant a l'indice 0 la valeur du temps    |\n  |              initial (FLOTTANT)                                 |\n  |                                                                 |\n  |                                                                 |\n  |   ------ 1ere possibilite : Resolution de l'ecoulement ------   |\n  |   -----------------------------------------------------------   |\n  |                                                                 |\n  |'CHARGE'      TABLE contenant a l'indice 0 la charge hydraulique |\n  |              (quantite d'element par unite de volume d'eau)     |\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'TRACE_CHARGE' TABLE contenant a l'indice 0 la trace de          |\n  |              charge initiale (CHPO, 'TH')                       |\n  |                                                                 |\n  |'FLUX'        TABLE contenant a l'indice 0 le flux hydraulique   |\n  |              initial integre sur chaque face (Type CHPO Face,   |\n  |              comp. 'FLUX')                                      |\n  |                                                                 |\n  |   ------ 2eme possibilite : Resolution du transport     ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'CONCENTRATION' TABLE contenant a l'indice 0 la concentration    |\n  |              (quantite d'element par unite de volume d'eau)     |\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'TRACE_CONC'  TABLE contenant a l'indice 0 la trace de           |\n  |              concentration initiale (Type CHPO Face, Comp 'TH') |\n  |                                                                 |\n  |'FLUX'        TABLE contenant a l'indice 0 le flux diffusif      |\n  |              initial integre sur chaque face (Type CHPO Face,   |\n  |              comp. 'FLUX')                                      |\n  |                                                                 |\n  |'PRECIPITE'   TABLE contenant a l'indice 0 la quantite initiale  |\n  |              de precipite par unite de volume de milieu         |\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'DISSOLUTION' TABLE contenant a l'indice 0 la quantite initiale  |\n  |              pour estimer la dissolution au premier pas de temps|\n  |              (Type CHPO, Comp 'H'), voir plus loin.             |\n  |                                                                 |\n  |--------------------------------------                           |\n  |Conditions aux limites / chargements :                           |\n  |--------------------------------------                           |\n  |                                                                 |\n  |   ------ Indices communs a l'ecoulement et au transport ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'BLOCAGE'     Contient les matrices de blocage (RIGIDITE)        |\n  |                                                                 |\n  |'TRACE_IMPOSE' Valeurs des traces imposees (charge ou concentra- |\n  |              -tion) (CHARGEMENT 'TH' - Obligatoire si BLOCAGE)  |\n  |                                                                 |\n  |'FLUX_IMPOSE' Valeurs des flux imposes integres par face         |\n  |              (Type CHARGEMENT de CHPO Face, comp. 'FLUX'-       |\n  |              defaut 0.)                                         |\n  |                                                                 |\n  |'SOURCE'      Valeurs du terme source par maille et par unite de |\n  |              temps (ex : puits, filiation)                      |\n  |              Les valeurs a l'indice i sont les valeurs entre    |\n  |              les temps i-1 et i.                                |\n  |              (CHARGEMENT de CHPO Centre, comp 'SOUR'- defaut 0.)|\n  |                                                                 |\n  |   ------ 2eme possibilite : Resolution du transport     ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'DISSOLUTION_IMPOSEE' Valeurs des dissolutions imposees par unite|\n  |              de temps et par maille. (Type CHARGEMENT de CHPO,  |\n  |              Comp 'H'). Les valeurs a l'indice i sont les       |\n  |              valeurs moyennes de dissolution par unite de temps |\n  |              entre les temps i-1 et i.                          |\n  |              Priorite de la dissolution imposee sur les         |\n  |              cinetiques.                                        |\n  |                                                                 |\n  |--------------------                                             |\n  |Donnees numeriques :                                             |\n  |--------------------                                             |\n  |                                                                 |\n  |   ------ Indices communs a l'ecoulement et au transport ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'TEMPS_CALCULES' Valeur des temps calcules (LISTREEL)            |\n  |              Contient obligatoirement le temps final.           |\n  |                                                                 |\n  |'TEMPS_SAUVES' Valeur des temps sauvegardes (LISTREEL - defaut : |\n  |              on sauve tous les pas de temps)                    |\n  |                                                                 |\n  |   ------ 1ere possibilite : Resolution de l'ecoulement ------   |\n  |   -----------------------------------------------------------   |\n  |                                                                 |\n  |'THETA'       Coefficient de relaxation compris entre 0. et 1.   |\n  |              (theta-methode diffusion) (FLOTTANT - defaut 1.)   |\n  |              Possibilite de non-convergence lorsque theta<1/2   |\n  |              Valeurs de theta generalement utilisees :          |\n  |                   Schema de Euler explicite : 0.                |\n  |                   Schema de Crank-Nicholson : 1/2               |\n  |                   Schema de Galerkin        : 2/3               |\n  |                   Schema de Euler implicite : 1.                |\n  |                                                                 |\n  |   ------ 2eme possibilite : Resolution du transport     ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'THETA_DIFF'  Coefficient de relaxation compris entre 0. et 1.   |\n  |              (theta-methode diffusion) ('FLOTTANT' - defaut 1.) |\n  |                                                                 |\n  |'THETA_CONVECTION' Idem pour la convection                       |\n  |              ('FLOTTANT', Defaut = THETA_DIFF)                  |\n  |                                                                 |\n  |'THETA_DEC'   Idem mais pour la decroissance                     |\n  |              ('FLOTTANT' - defaut 1/2)                          |\n  |                                                                 |\n  |'THETA_DISS'   Idem mais pour la dissolution                     |\n  |              ('FLOTTANT' - defaut 1.)                           |\n  |                                                                 |\n  |'PENALISATION' Coefficient de penalisation pour la prise en      |\n  |              compte de la limite de solubilite. La presence de  |\n  |              cet indice ou du suivant indique quel schema a ete |\n  |              choisi.                                            |\n  |              (Type 'FLOTTANT') - Valeur conseillee 1.D7         |\n  |                                                                 |\n  |'EPSI_LIM'    Precision relative d'arret pour le shema limite de |\n  |              solubilite predicteur-correcteur iteratif          |\n  |              (Type FLOTTANT) - Valeur conseillee 5.D-3          |\n  |                                                                 |\n  |'ITMAX_LIM'   Nombre maxi d'iterations correspondant aux modules |\n  |              de dissolution avant d'abandonner                  |\n  |              (Type 'ENTIER') - Defaut 50                        |\n  |                                                                 |\n  |'EPSI_RET'    Precision relative d'arret pour la resolution      |\n  |              iterative (Picard) de l'adsorption non lineaire    |\n  |              (Type FLOTTANT) - Defaut 1.D-4                     |\n  |                                                                 |\n  |'EPSI_COR'    Petit saut de concentration pour calculer le coef. |\n  |              de retard par la methode de la corde lorsque le    |\n  |              retard est non-lineaire.                           |\n  |              (Type FLOTTANT) - Defaut 1.D-4                     |\n  |                                                                 |\n  |'ITMAX_RET'   Nombre maxi d'iterations correspondant au retard   |\n  |              non lineaire avant d'abandonner.                   |\n  |              (Type 'ENTIER') - Defaut 20                        |\n  |_________________________________________________________________|\n\n\n\n---------------------------------\n Resultats (stockes dans TABLE) :\n---------------------------------\n\n  ___________________________________________________________________\n  |                                                                 |\n  | Indice      Contenu                                             |\n  |                                                                 |\n  -------------------------------------------------------------------\n  |                                                                 |\n  |   ------ Indices communs a l'ecoulement et au transport ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'TEMPS'       TABLE contenant les temps sauvegardes (FLOTTANT)   |\n  |                                                                 |\n  |   ------ 1ere possibilite : Resolution de l'ecoulement  ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'CHARGE'      TABLE contenant les charges                        |\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'TRACE_CHARGE' TABLE contenant les traces de charge              |\n  |              (Type CHPO Face, Comp 'TH')                        |\n  |                                                                 |\n  |'FLUX'        TABLE contenant les debits hydrauliques integres   |\n  |              par face (Type CHPO Face, comp. 'FLUX')            |\n  |                                                                 |\n  |   ------ 2eme possibilite : Resolution du transport     ------  |\n  |   ------------------------------------------------------------  |\n  |                                                                 |\n  |'CONCENTRATION' TABLE contenant les concentrations               |\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'TRACE_CONC'  TABLE contenant les traces de concentration        |\n  |              (Type CHPO Face, Comp 'TH')                        |\n  |                                                                 |\n  |'FLUX'        TABLE contenant les debits diffusifs integres      |\n  |              par face (Type CHPO Face, comp. 'FLUX')            |\n  |                                                                 |\n  |'PRECIPITE'   TABLE contenant la quantite de precipite par maille|\n  |              (Type CHPO Centre, Comp 'H')                       |\n  |                                                                 |\n  |'DISSOLUTION' TABLE contenant la quantite de precipite dissoute  |\n  |              entre deux pas de temps par unite de volume et par |\n  |              unite de temps. La valeur stockee a l'indice i,    |\n  |              est valable entre les temps i-1 et i               |\n  |              (Type CHPO, Comp 'H').                             |\n  |              ATTENTION, les valeurs de cette table resultat     |\n  |              n'ont aucun sens lorsque les temps sauvegardes ne  |\n  |              sont pas les memes que les temps calcules. Toute   |\n  |              tentative d'exploitation donnera alors des         |\n  |              resultats incoherents (erreurs de bilan)           |\n  |                                                                 |\n  |'RETARD'      Si cet indice a ete prealablement defini comme une |\n  |              TABLE, alors il contient les valeurs du coefficient|\n  |              de retard (Type 'CHPO' centre, Comp 'SCAL'). Sinon,|\n  |              les valeurs du coefficient de retard ne sont pas   |\n  |              sauvegardees.                                      |\n  |_________________________________________________________________|\n\n  \n  ___________________________________________________________________\n  |                                                                 |\n  | Indice       Contenu                                            |\n  |                                                                 |\n  -------------------------------------------------------------------\n  |                                                                 |\n  |'TEMPS'       TABLE contenant les temps sauvegardes (FLOTTANT)   |\n  |                                                                 |\n  |'TRACE_CONC'  TABLE contenant les traces de concentration        |\n  |              (Type 'CHPO' Centre, Comp 'TH')                    |\n  |                                                                 |\n  |'CONCENTRATION' TABLE contenant les concentrations               |\n  |              (Type 'CHPO' Centre, Comp 'H')                     |\n  |                                                                 |\n  |'FLUX'        TABLE contenant les debits diffusifs integres par  |\n  |              face (Type 'CHPO' Face, Comp 'FLUX')               |\n  |                                                                 |\n  |'PRECIPITE'   TABLE contenant la quantite de precipite par maille|\n  |              (Type 'CHPO' Centre, Comp 'H')                     |\n  |                                                                 |\n  |'DISSOLUTION' TABLE contenant la quantite de precipite dissoute  |\n  |              entre deux pas de temps par unite de volume et par |\n  |              unite de temps. La valeur stockee a l'indice i,    |\n  |              est valable entre les temps i-1 et i               |\n  |              (Type 'CHPO' Centre, Comp 'H')                     |\n  |              ATTENTION, les valeurs de cette table resultat     |\n  |              n'ont aucun sens lorsque les temps sauvegardes ne  |\n  |              sont pas les memes que les temps calcules. Toute   |\n  |              tentative d'exploitation donnera alors des         |\n  |              resultats incoherents (erreurs de bilan)           |\n  |                                                                 |\n  |'RETARD'      Si cet indice a ete prealablement defini comme une |\n  |              TABLE, alors il contient les valeurs du coefficient|\n  |              de retard (Type 'CHPO' centre, Comp 'SCAL'). Sinon,|\n  |              les valeurs du coefficient de retard ne sont pas   |\n  |              sauvegardees.                                      |\n  |_________________________________________________________________|\n\n  ___________________________________________________________________\n  |                                                                 |\n  | Les tables resultats sont indicees par des entiers variant de 0 |\n  | a N .                                                           |\n  | A l'indice 0 on stocke les valeurs initiales, aux indices       |\n  | suivants les champs correspondant au temps de sortie TEMPS.I .  |\n  | Les champs servant en cas de reprise sont ceux correpondant au  |\n  | dernier indice.                                                 |\n  |_________________________________________________________________|\n\n       Exemple : pour lister le CHPOINT de charge calcule pour la\n                 valeur du parametre d'evolution 2.5, il faudra coder :\n                           LIST ( PECHE TAB1 CHARGE 2.5 ) ;\n                 ou\n\n                 si on sait que l'indice i de la table TEMPS contient\n                 la valeur du parametre d'evolution 2.5, on peut coder\n                           LIST ( TAB1 . CHARGE . i ) ;\n\n\n    Remarques :\n    ___________\n\n    Les resultats etant reperes dans TAB1 il n'y a pas d'objets nommes\ncrees par cette procedure.\n\n    Une fois sortie de DARCYTRA on peut y re-entrer en definissant de\nnouvelles valeurs pour les LISTREELS TEMPS_CALCULES et TEMPS_SAUVES\net en invoquant de nouveau DARCYTRA avec les memes operandes que\nlors du premier appel.\n\n    Les FLUX imposes et les flux\ncalcules sont les flux diffusifs. Les flux convectifs s'obtiennent en\npost-traitement en faisant le produit du flux de vitesse (stocke a\nl'indice CONVECTION) par la trace de charge (stockee a l'indice\nTRACE_CHARGE).",
  },
  {
    name: "DATE",
    url: "DATE",
    documentation:
      "$$$$ DATE     NOTICE  GF238795  16/07/06    21:15:04     9011           \n                                             DATE     16/07/06\n\n    Operateur DATE                         Voir aussi : TEMPS\n    ----------------                           \n    VAL1 = DATE ('LETTRE') | 'CONVERSION' | ;\n                           | 'EPOCH'      |\n                           | 'ANNEE'      |\n                           | 'MOIS'       |\n                           | 'JOUR'       |\n                           | 'HEURE'      |\n                           | 'MINUTE'     |\n                           | 'SECONDE'    |\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. 1\u00e8re fonction : R\u00e9cup\u00e9ration de la date\n2. 2\u00e8me fonction : R\u00e9cup\u00e9ration du temps \u00e9coul\u00e9\n3. 3\u00e8me fonction : Conversion d'un nombre de secondes\n\n  \n1. 1\u00e8re fonction : R\u00e9cup\u00e9ration de la date1 \n============================================= \n   \n   --------------------------\n        Syntaxe :\n   --------------------------\n    VAL1 = DATE ('LETTRE') ( | 'ANNEE'   | ) ;\n                             | 'MOIS'    |\n                             | 'JOUR'    |\n                             | 'HEURE'   |\n                             | 'MINUTE'  |\n                             | 'SECONDE' |\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n    VAL1 : chaine de caract\u00e8res ou flottant\n          \n   -------------------------\n        Description :\n   --------------------------\n    L'op\u00e9rateur DATE sert \u00e0 r\u00e9cup\u00e9rer la date et l'heure actuelle. Si aucune\n    option n'est pr\u00e9cis\u00e9e, VAL1 est une chaine de caract\u00e8re contenant la date\n    compl\u00e8te. Si une option est pr\u00e9cis\u00e9e, seule la partie concern\u00e9e de la date\n    est renvoy\u00e9e sous forme d'entier. On peut donc r\u00e9cup\u00e9rer, par exemple,\n    uniquement l'heure actuelle dans un entier en appelant\n    VAL1 = 'DATE' 'HEURE;\n    \n    L'option 'LETTRE' permet d'obtenir le nom du mois au lieu de son num\u00e9ro.\n    (L'appel 'DATE' 'MOIS' 'LETTRE' renvoie alors une chaine de caract\u00e8re.)\n\n   -------------------------\n        Exemples :\n   --------------------------\n    \n    'LIST' ('DATE' 'LETTRE');                                                   \n    Chaine de 32 caract\u00e8res de contenu : 11 mai  2015 - 17H52min\n    'LIST' ('DATE');                                                   \n    Chaine de 32 caract\u00e8res de contenu : 11/05/2015 - 17:52:38\n  \n2. 2\u00e8me fonction : R\u00e9cup\u00e9ration du temps \u00e9coul\u00e9 \n==================================================== \n \n   --------------------------\n        Syntaxe :\n   --------------------------\n    VAL1 = DATE  'EPOCH' ;\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n    VAL1 : flottant\n\n   -------------------------\n        Description :\n   --------------------------\n    L'op\u00e9rateur DATE renvoie le nombre de secondes depuis un temps non-d\u00e9fini\n    mais fixe lors d'une ex\u00e9cution. Cette valeur permet, par diff\u00e9rence, de\n    mesurer un temps entre deux appels \"'DATE' 'EPOCH'\" ou d'initialiser des\n    s\u00e9ries par un nombre diff\u00e9rent \u00e0 chaque ex\u00e9cution.\n\n   -------------------------\n        Exemple :\n   --------------------------\n    tdeb = 'DATE' 'EPOCH';\n    ...\n    ..... Op\u00e9rations \u00e0 chronom\u00e9trer .....\n    ...\n    tfin = 'DATE' 'EPOCH';\n    'MESS' ('CHAI' 'Temps ecoule : ' (tfin - tdeb)); \n  \n3. 3\u00e8me fonction : Conversion d'un nombre de secondes \n====================================================== \n \n   --------------------------\n        Syntaxe :\n   --------------------------\n    VAL1 = DATE  'CONVERSION' VAL2;\n\n   --------------------------\n        Arguments et r\u00e9sultats :\n   --------------------------\n    VAL1 : chaine de caractere\n    VAL2 : flottant\n\n   -------------------------\n        Description :\n   --------------------------\n    L'op\u00e9rateur DATE convertit le nombre VAL2 de secondes en nombres de jours /\n    heures / minutes / secondes. Le r\u00e9sultat est renvoy\u00e9 sous forme de chaine de\n    caract\u00e8res dans VAL1.\n\n   -------------------------\n        Exemples :\n   --------------------------\n    'LIST' ('DATE' 'CONVERSION' 3600.0);                                       \n    Chaine de 32 caract\u00e8res de contenu :         0J 01H 00min  0.000sec\n\n    'LIST' ('DATE' 'CONVERSION' 123456.789);                                   \n    Chaine de 32 caract\u00e8res de contenu :         1J 10H 17min 36.789sec",
  },
  {
    name: "DBIT",
    url: "DBIT",
    documentation:
      "$$$$ DBIT     NOTICE  CHAT      11/09/12    21:15:43     7124           \n                                             DATE     11/09/12\n\n  Operateur DBIT                           Voir aussi :\n     --------------  \n     Q = DBIT MODE1 U <'IMPR'>;\n\n     Q1 Q2 = DBIT MODE1 U 'ALGE' <'IMPR'>;\n\n\n                                                                                \n     Objet :\n     _______\n                                                                                \n   Calcule le flux d'un vecteur a travers une ligne en 2D ou une surface\n  en 3D\n   Le resultat est un FLOTTANT, somme des flux (debit global).\n   Si le mot cle 'ALGE' est precise, le flux dans le sens de la normale\n   est distingue du flux dans le sens oppose (Q1 et Q2).\n                                                                                \n   La surface ou la ligne peut etre fermee ou non.\n   Types d'elements : en 2D : SEG2 ou SEG3.\n                      en 3D : TRI3, QUA4, TRI7 ou QUA9\n   En 2D axisymetrique la surface consideree est celle engendree par la\n   rotation de 2pi radians de la ligne.\n   La normale utilisee pour le calcul est celle definie implicitement\n   par l'orientation des elements de l'objet maillage qui represente\n   la frontiere (convention trigonometrique).\n   Il est donc imperatif de veiller a la bonne oriention de ces\n   elements lors de la creation du maillage.\n                                                                                \n     Commentaires :\n     ______________\n\n    MODE1 : Objet modele (type MMODEL) 'NAVIER_STOKES'\n    U     : CHPOINT (VECT SOMMET) dont on calcule le debit.\n    Q     : FLOTTANT resultat.\n                                                                                \n                                                                                \n     Remarque :\n     __________\n                                                                                \n  L'operateur imprime le debit global dans le sens de la normale ainsi\n  que le debit global dans le sens oppose si presence du mot cle 'IMPR'",
  },
  {
    name: "DCOV",
    url: "DCOV",
    documentation:
      "$$$$ DCOV     NOTICE  MB234859  17/10/02    21:15:07     9577           \n                                             DATE     17/10/02\n\n     Operateur DCOV                          Voir aussi : BRUI\n     --------------  \n        RIG1 = DCOV GEO1 | 'EXPO'  'SIGMA' FLOT1  ...\n                         | 'GAUS'\n\n       ...  | 'LAMBDA'  FLOT2    ;\n            | 'LAMBDA1' FLOT3 'LAMBDA2' FLOT4 ('LAMBDA3' FLOT5 si 3D)\n                                      ('DIRECTION' VEC1 (VEC2 si 3D)) ;\n\n\n        Objet :\n        -------\n\n        C etant une matrice de covariance, matrice symetrique definie\n        positive, s'appuyant sur les points d'un maillage,\n        l'operateur DCOV calcule la matrice M triangulaire\n        inferieure, telle que  M Mt = C. (M objet de type RIGIDITE)\n        Cette matrice M servira par la suite a generer un champ \n        aleatoire gaussien stationnaire F, tel que F = M G, ou G est \n        un bruit blanc genere a l'aide de l'operateur BRUI. (F et G \n        objets de type CHPO).\n        F aura les caracteristiques suivantes :\n                                      - moyenne nulle\n                                      - matrice de covariance egale a C\n\n        Commentaire :\n        -------------\n\n        GEO1  geometrie sur les points de laquelle est definie la\n              matrice de covariance C . (type MAILLAGE)\n\n        FLOT1 ecart-type (type FLOTTANT). Cette valeur doit etre\n              strictement positive.\n\n        FLOT2 longueur de correlation dans le cas d'une covariance \n              isotrope. (type FLOTTANT)\n              Cette valeur doit etre strictement positive.\n\n        FLOT3, FLOT4 et FLOT5 (si 3D) longueurs de correlation suivant\n              les axes d'anisotropie, dans le cas d'une covariance\n              anisotrope. (types FLOTTANT)\n              Ces valeurs doivent etre strictement positives.\n\n        VEC1 et VEC2 (si 3D) vecteur(s) permettant de definir le repere\n              lie aux directions d'anisotropie, dans le cas d'une \n              covariance anisotrope. (types POINT)\n\n\n        Construction du repere orthonorme direct lie aux directions\n        d'anisotropie :\n         Dans le cas bidimensionnel, la definition d'un seul vecteur\n        (VEC1) - correspondant a LAMBDA1 - est suffisante. Le deuxieme \n        axe - correspondant a LAMBDA2 - est porte par le vecteur qui\n        fait un angle de + 90 degres avec le vecteur VEC1.\n         Dans le cas tridimensionnel, on construit un triedre a partir\n        des deux vecteurs VEC1 et VEC2 fournis par l'utilisateur.\n         Le premier axe correspond a VEC1, le second a VEC2.\n         Le troisieme axe, correspondant a LAMBDA3, est porte par le\n        vecteur obtenu par le produit vectoriel de VEC1 par VEC2.\n\n\n        Dij etant la distance entre deux points Pi et Pj,\n        D1ij, D2ij et D3ij (si 3D), etant les composantes de Dij\n        suivant les axes d'anisotropie 1,2 et 3 (si 3D);\n\n        selon la loi suivie, le terme Cij de la matrice sera :\n\n         loi exponentielle (mot-cle 'EXPO') :\n\n          en isotrope : \n            Cij = FLOT1 * FLOT1 * EXP ( - Dij / FLOT2 )\n\n          en anisotrope 2D :\n            Cij = FLOT1 * FLOT1 * EXP ( -\n               ( (D1ij / FLOT3) ** 2 + (D2ij / FLOT4) ** 2 ) ** 0.5 )\n\n          en anisotrope 3D :\n            Cij = FLOT1 * FLOT1 * EXP ( - ( (D1ij / FLOT3) ** 2 + \n                 (D2ij / FLOT4) ** 2 + (D3ij / FLOT5) ** 2 ) ** 0.5 )\n\n         loi gaussienne (mot-cle 'GAUS') :\n\n          en isotrope : \n            Cij = FLOT1 * FLOT1 * EXP ( - Dij ** 2  / FLOT2 )\n\n          en anisotrope 2D :\n            Cij = FLOT1 * FLOT1 * EXP ( -\n                         ( (D1ij / FLOT3) ** 2 + (D2ij / FLOT4) ** 2 ) )\n\n          en anisotrope 3D :\n            Cij = FLOT1 * FLOT1 * EXP ( - ( (D1ij / FLOT3) ** 2 +\n                           (D2ij / FLOT4) ** 2 + (D3ij / FLOT5) ** 2 ) )\n\n\n        RIG1 objet de type RIGIDITE defini sur un superelement\n             correspondant aux points du maillage GEO1. La matrice est\n             dimensionnee au carre du nombre de points du maillage \n             GEO1. La partie triangulaire superieure ne contient que \n             des 0.\n\n\n        Remarque 1 :\n        ------------\n\n        En dimension 1, seul le cas d'une covariance isotrope est\n        autorise.\n\n        Remarque 2 :\n        ------------\n\n        Le maillage GEO1 peut etre une geometrie quelconque 2D ou 3D.\n        Neanmoins, sa taille devra etre relativement limitee.\n\n        Remarque 3 :\n        ------------\n\n        Dans le cas d'une covariance anisotrope, les directions\n        d'anisotropie sont orthogonales entre elles.\n        En 3D notamment, les vecteurs VEC1 et VEC2 devront etre\n        orthogonaux.\n\n        Remarque 4 :\n        ------------\n\n        La generation de cette matrice M est principalement destinee\n        a la mise en oeuvre de simulations Monte-Carlo.",
  },
  {
    name: "DDFOUR",
    url: "DDFOUR",
    documentation:
      "$$$$ DDFOUR   NOTICE  CHAT      11/09/12    21:15:43     7124           \n                                             DATE     11/09/12\n\n  Procedure DDFOUR                      Voir aussi :\n        ----------------   \n        CHP2 CHP3 = DDFOUR GEO1 GEO2 ENT1 CHP1 FLOT1 (P1) (LOG1 ENT2)\n\n\n        Objet :\n        ------- \n\n         Analyse harmonique des multipoles en magnetostatique 2D \n         potentiel vecteur. \n        \n        Commentaire :\n        -------------\n\n        GEO1   maillage support de la solution en potentiel \n        GEO2   maillage ( arc sur lequel on fait l'analyse )\n        ENT1   nombre d'harmonique  analysees \n        CHP1   solution en potentiel \n        FLOT1  rayon de normalisation \n        P1     origine du cercle d'analyse \n        LOG1   vrai si l'on veut un lissage polynomial\n               ( voir PROI POLY)\n        ENT2   ordre de symetrie pour l'expansion polynomiale\n               si LOG1 = vrai \n      \n        en  sortie :\n\n        CHP2 CHP3   chpoints utilises pour l'analyse d'homogeneite",
  },
  {
    name: "DEADFONC",
    url: "DEADFONC",
    documentation:
      '$$$$ DEADFONC NOTICE  CHAT      11/09/12    21:15:44     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEADFONC                      Voir aussi : DEDUADAP\n    ------------------          \n    Objet :\n    _______\n\n    "DEdu ADap Fonctionnelle"\n\n    Calcule la valeur (par elements ou global) de la fonctionnelle \n    a minimiser.\n\n    Utilise par la procedure DEDUADAP.\n    ',
  },
  {
    name: "DEADJACO",
    url: "DEADJACO",
    documentation:
      '$$$$ DEADJACO NOTICE  CHAT      11/09/12    21:15:44     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEADJACO                      Voir aussi : DEDUADAP\n    ------------------          \n    Objet :\n    _______\n\n    "DEdu ADap Jacobien"\n\n    Calcule un Jacobien signe ou renvoie un code d\'erreur si le\n    signe change sur un element.\n\n    Utilise par la procedure DEDUADAP.\n    ',
  },
  {
    name: "DEADKTAN",
    url: "DEADKTAN",
    documentation:
      '$$$$ DEADKTAN NOTICE  CHAT      11/09/12    21:15:44     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEADKTAN                      Voir aussi : DEDUADAP\n    ------------------          \n    Objet :\n    _______\n\n    "DEdu ADap K-Tangente"\n\n    Calcule la matrice tangente (exacte ou approchee) associee a la\n    fonctionnelle a minimiser.\n\n    Utilise par la procedure DEDUADAP.\n    ',
  },
  {
    name: "DEADRESI",
    url: "DEADRESI",
    documentation:
      '$$$$ DEADRESI NOTICE  CHAT      11/09/12    21:15:44     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEADRESI                      Voir aussi : DEDUADAP\n    ------------------          \n    Objet :\n    _______\n\n    "DEdu ADap RESIdu"\n\n    Calcule le residu a annuler.\n\n    Utilise par la procedure DEDUADAP.\n    ',
  },
  {
    name: "DEADUTIL",
    url: "DEADUTIL",
    documentation:
      '$$$$ DEADUTIL NOTICE  CHAT      11/09/12    21:15:45     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEADUTIL                      Voir aussi : DEDUADAP\n    ------------------          \n    Objet :\n    _______\n\n    "DEdu ADap UTILitaires"\n\n    Des utililitaires utilises par la procedure DEDUADAP.\n    ',
  },
  {
    name: "DEBI",
    url: "DEBI",
    documentation:
      "$$$$ DEBI     NOTICE  AM        20/05/11    21:15:01     10610          \n                                             DATE     20/05/11\n                                             \n  Operateur DEBIT                           Voir aussi :\n    ---------------  \n      CHPO2 = DEBIT  MODL1 | FLOT1 GEO1 |  ( MOT1) ;\n                           | CHPO1      |\n\n\n    Objet :\n    _______\n\n    Cet operateur permet de calculer les valeurs nodales equivalentes\na une condition de debit (lineique en 2D  ou surfacique en 3D)\nimposee sur la frontiere d'un milieu poreux.\n\n\n      Commentaire :\n      _____________\n\n\n        MODL1 : objet massif, sur la frontiere duquel s'applique\n                une condition de debit (type MMODEL).\n\n        FLOT1 : valeur algebrique du debit impose (type FLOTTANT).\n\n        GEO1  : objet (ligne en 2D ,surface en 3D), sur lequel\n                s'applique la condition de debit (type MAILLAGE).\n\n        CHPO1 : les valeurs algebriques des debits aux noeuds\n                (type CHPOINT).\n\n        MOT1  : nom donn au resultat (par defaut, pris dans le modele)\n\n        CHPO2 : valeurs nodales equivalentes (type CHPOINT)",
  },
  {
    name: "DEBM",
    url: "DEBM",
    documentation:
      "$$$$ DEBM     NOTICE  CHAT      11/09/12    21:15:45     7124           \n                                             DATE     11/09/12\n\n    Operateur DEBMETH                        Voir aussi : FINM ARGU\n    -----------------                                     RESP  QUIT  \n    DEBMETH   METH1 (OBJ1?TYP1  OBJ2?TYP2  .... ) ;\n\n\n    Objet :\n    -------\n    Il s'agit de definir une methode qui pourra etre appliquee sur\nun objet de type OBJET.\n\n    L'operateur DEBMETH cree un objet de type PROCEDUR qui contient\nune suite d'instructions elementaires, dont la premiere est DEBMETH\net la derniere est FINMETH.\n\n\n    Commentaire :\n    -------------\n\n  Cette operateur est strictement copie sur l'operateur DEBPROC. c'est\nseulement a l'executuion de la procedure resultante que le comportement\ndiffere. Une procedure definie ainsi ne peut servir que comme une \nmethode sur un objet de type OBJET.",
  },
  {
    name: "DEBP",
    url: "DEBP",
    documentation:
      "$$$$ DEBP     NOTICE  CHAT      11/09/12    21:15:45     7124           \n                                             DATE     11/09/12\n\n    Operateur DEBPROC                        Voir aussi : FINP ARGU\n    -----------------                                     RESP  QUIT  \n    DEBPROC   PROC1 (OBJ1?TYP1  OBJ2?TYP2  .... ) ;\n\n\n    Objet :\n    -------\n\n    L'operateur DEBPROC cree un objet de type PROCEDUR qui contient une\nsuite d'instructions elementaires, dont la premiere est DEBPROC et la\nderniere est FINPROC.\n\n    Commentaire :\n    -------------\n\n    La procedure peut avoir une liste d'arguments types (OBJ1,OBJ2,...).\n? peut prendre deux valeurs :\n\n            *  qui rend la donnee de l'argument obligatoire au\n               moment de l'appel de la procedure,\n\n            /  qui la rend facultative.\n\nLes types d'objet possibles sont:\n \n   'MAILLAGE'     'AFFECTE '    'DEFORME '\n   'CHPOINT '     'CHAMELEM'    'LISTREEL'\n   'RIGIDITE'     'BLOQSTRU'    'LISTENTI'\n   'ELEMSTRU'     'SOLUTION'    'CHARGEME'\n   'STRUCTUR'     'TABLE   '    'MODELE  '\n   'MAFFEC  '     'MSOSTU  '    'EVOLUTIO'\n   'IMATRI  '     'MJONCT  '    'SUPERELE'\n   'ATTACHE '     'MMATRI  '    'LOGIQUE '\n   'FLOTTANT'     'ENTIER  '    'MOT     '\n   'TEXTE   '     'LISTMOTS'    'VECTEUR '\n   'VECTDOUB'     'POINT   '    'CONFIGUR'\n   'LISTCHPO'     'BASEMODA'    'PROCEDUR'\n   'BLOC    '     'MMODEL  '    'MCHAML  '\n   'MINTE   '     'NUAGE   '    'MATRIK  '\n  \n    Il faut bien noter qu'en presence de plusieurs arguments\nde Meme type seul l'ordre permet de les differencier.\n\n    Remarques :\n    -----------\n\n    Une procedure a acces a tous les objets existants avant son\n appel mais ne peut pas les modifier. Tout objet dont le nom\n commence par ! ne sera pas initialise par un objet de meme nom\n defini en dehors de la procedure.\n\n    Les objets crees lors de l'execution d'une procedure ne sont pas\naccessibles a l'exterieur de la procedure.\n\n\n\n    Exemple de procedure de calcul de la fonction MODULO :\n    ------------------------------------------------------\n\n                  DEBPROC  MODULO   I*ENTIER  J*ENTIER ;\n                  MODERR='$$$$$';\n                  SI (J EGA 0) :\n                  MESSAGE  ' ON NE PEUT FAIRE I MODULO ZERO ';\n                  RESPRO MODERR;\n                  QUITTER MODULO ; FINSI;\n                  K*ENTIER = I / J ;\n                  MOD = I - ( K * J ) ;\n                  FINPROC MOD;\n\n    Exemple d'emploi de la procedure MODULO :\n    -----------------------------------------\n\n\n                  K = 8  MODULO 3 ;\n                  SI ( K NEG 2 ) ;\n                  MESSAGE ' ERREUR DANS LA RECOPIE DE L EXEMPLE |' ;\n                  FINSI;\n\n\n ",
  },
  {
    name: "DEBU",
    url: "DEBU",
    documentation:
      "$$$$ DEBU     NOTICE  CHAT      11/09/12    21:15:45     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n Pour avoir des informations generales sur GIBI tapez  INFO GIBI;\n\n Pour avoir des informations particulieres sur un operateur tapez\n   INFO (nom de l'operateur) ;\n\n Pour avoir un exemple d'utilisation  tapez  INFO EXEMPLE;\n\n La liste des operateurs documentes est :\n\n\n---------------------------------------------------------------------\n| Operateurs generaux :                                             |\n| OPTI  FIN   TITR  COMM  OUBL  MANU  DENS  TASS                    |\n---------------------------------------------------------------------\n| Entrees-sorties :                                                 |\n| LIST  TRAC  SORT  LIRE                                            |\n---------------------------------------------------------------------\n| Mise au point interactive de maillage :                           |\n| MODI                                                              |\n---------------------------------------------------------------------\n| Fabrication de logiques :                                         |\n| <     >     <EG   >EG   EG    NEG   ET    OU    NON               |\n---------------------------------------------------------------------\n| Fabrication de mots :                                             |\n| MOT                                                               |\n---------------------------------------------------------------------\n| Fabrication de nombres :                                          |\n| DENS  NBEL  NBNO  COOR  NORM  +     -     *     /     **          |\n| EXP   LOG   ENTI  FLOT  PSCA  PMIX  SIN   COS   ATG   ABS         |\n---------------------------------------------------------------------\n| Fabrication de points :                                           |\n| DIGI  NOEU  POIN  CONF  BARY PVEC  *     /                        |\n---------------------------------------------------------------------\n| Fabrication de lignes :                                           |\n| DROI  CERC  PARA  INTE  COTE  CONT  COMP  QUEL  CER3  CUBP  CUBT  |\n---------------------------------------------------------------------\n| Fabrication de surfaces :                                         |\n| SURF  DALL  TRAN  ROTA  INCL  ORIE  RACC  FACE  LIAI  REGL  COUT  |\n| ENVE  GENE  REGE                                                  |\n---------------------------------------------------------------------\n| Fabrication de volumes :                                          |\n| PAVE  VOLU  REGE                                                  |\n---------------------------------------------------------------------\n| Operations geometriques :                                         |\n| ET    CHAN  INVE  PLUS  MOIN  HOMO  TOUR  AFFI  SYME  ELIM  DIFF  |\n| DEPL  PROJ  ELEM  ORIE  VERS  INTE                                |\n---------------------------------------------------------------------\n| Calcul vectoriel :                                                |\n| PLUS  MOIN  *     /     PSCA  PVEC  PMIX                          |\n---------------------------------------------------------------------\n| Test  boucle procedure et dialogue :                              |\n| SI    SINO  FINS  REPE  QUIT  FIN   DEBP  FINP  OBTE  MESS  TEXT  |\n---------------------------------------------------------------------\n| Gestion des couleurs :                                            |\n| COUL                                                              |\n---------------------------------------------------------------------",
  },
  {
    name: "DECO",
    url: "DECO",
    documentation:
      "$$$$ DECO     NOTICE  CHAT      11/09/12    21:15:46     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur DECO                             Voir aussi :\n    --------------  \n      DECO1 = DECO MODL1 FC1 (CAR1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur DECO calcule la densite de courant correspondant\n    a la fonction de courant (type CHPOINT) obtenue lors de la\n    resolution en formulation magnetodynamique. Pour des modeles\n    de coques, elle est fournie en A/m.\n\n\n      Commentaire :\n      _____________\n\n      MODL1  : Objet de type MMODEL (MAGNETODYNAMIQUE).\n\n      FC1   : Fonction de courant (type CHPOINT).\n\n      CAR1   : Champ de caracteristiques geometriques (type MCHAML).\n\n      DECO1  : Densite de courant (type MCHAML).",
  },
  {
    name: "DECONV",
    url: "DECONV",
    documentation:
      "$$$$ DECONV   NOTICE  MB234859  17/10/02    21:15:07     9577           \n                                             DATE     17/10/02\n\n    procedure DECONV                          Voir aussi : DECONV3D\n    ----------------  \n   TABRESU =  DECONV COUCHE FOND_SOL MOD_SOL (SOL) DIR\n                     GAMMAO F1 F2 (FC) (TYP_F) (P_GAMMA)\n\n\n\nObjet :\n-------\n\nCette procedure permet d'effectuer des calculs d'interaction sol-\nstructure (ISS) en 2D (deformation plane ou mode Fourier 0 (mouvement\nvertical) et 1 (mouvement horizontal)) par la methode des elements\nfinis. Elle a deux fonctions:\n  - formuler la matrice d'amortissement correspondant a la frontiere\n    absorbante visqueuse sur la bordure du maillage de sol,\n  - calculer le chargement sismique au cours du temps a appliquer sur\n    la frontiere par la deconvolution du mouvement sismique\n    (accelerogramme) donnee en surface libre du sol.\nLa resolution du probleme peut s'effectuer ensuite dans le domaine\ntemporel avec l'une des procedures d'integration suivantes :\n  - procedure DYNAMIC en cas de comportement lineaire, possibilite\n    d'inclure des liaisons unilaterales pour modeliser le decollement\n    et le glissement du radier,\n  - procedure PASAPAS en cas de comportement non lineaire du sol et de\n    la structure (deformation plane seulement).\n\nCommentaire :\n-------------\n\nEn entree :\n-----------\n\nCOUCHE : TABLE, a double indice contenant les proprietes du sol :\n\n  COUCHE.I : SOUS-TABLE, relative a la ieme couche du sol et qui\n             contient les indices suivants en toute lettre\n\n  indice 'FRONTIERE'       : MAILLAGE, frontiere verticale de la\n                                       ieme couche\n  indice 'MASSE_VOLUMIQUE' : FLOTTANT, masse volumique\n  indice 'POISSON'         : FLOTTANT, coefficient de Poisson\n  indice 'YOUNG'           : FLOTTANT, module d'Young\n  indice 'AMORTISSEMENT    : FLOTTANT, amortissement reduit\n\nFOND_SOL : MAILLAGE,  frontiere horizontale inferieure du sol\nMOD_SOL  : MMODEL,    modele du sol\nSOL      : MAILLAGE,  maillage du sol (QUA8 ou TRI6), facultatif\nDIR      : MOT,       direction de l'acceleration du champ libre :\n                      'HORI' direction horizontale (onde SV)\n                      'VERT' direction verticale (onde P)\nGAMMAO   : EVOLUTION, acceleration du champ libre en surface. Le\n                      debut de cet accelerogramme doit comprendre\n                      un intervalle a acceleration nulle (100 points\n                      minimum). C'est le temps qui permet au front\n                      d'onde de traverser verticalement le sol\n                      represente par le maillage.\nF1, F2   : FLOTTANT,  frequences sur lesquelles l'amortissement\n                      reduit est ajuste suivant le modele de\n                      Rayleigh\nFC       : FLOTTANT,  frequence de coupure pour la deconvolution\n                      par defaut  FC = 50 Hz\nTYP_F    : MOT,       type de frontiere :  'WHITE' (par defaut)\n                                           'LYSMER'\nP_GAMMA  :'TABLE',    Description des acc\u00e9l\u00e9rogrammes d'entr\u00e9e et de sortie\n                      pour la d\u00e9convolution (facultatif)\n  indice 'ENTREE'           :'TABLE',   description de la nature de l'acc\u00e9l\u00e9ro\n                                      GAMMAO autre que sur la surface libre (fac\n   sous-indice 'NATURE'      : Nature du point de contr\u00f4le :\n                              'MOT' INSIDE : profondeur du sol\n                              'MOT' OUTCROP : outcrop du bedrock\n   sous-indice 'CONTROLE'    :'MAILLAGE',   point de contr\u00f4le sur la fronti\u00e8re\n                               verticale si sous-indice 'NATURE' = INSIDE\n  indice 'I'                :'MAILLAGE', I\u00e8me (i = 1, 2, 3,...) points sur la\n                         fronti\u00e8re verticale pour lesquels on d\u00e9sire sortir\n                         l'acc\u00e9l\u00e9rogramme en champ libre (r\u00e9sultats de\n                         d\u00e9convolution)\n\nEn sortie :\n-----------\n\nTABRESU  : TABLE qui contient les resultats du calcul\n\n  indice 'CHAR'  : CHARGEMENT, excitation sismique au cours du temps\n                               sur la frontiere du sol\n  indice 'AMOR'  : RIGIDITE,   frontiere absorbante de type TYP_F\n  indice 'DEFO'  : EVOLUTION,  deformation maximale du sol en fonction\n                               de la profondeur\n  indice 'ACCE'  : TABLE,      a indice ENTIER, contient les\n                               accelerations des points definis\n                               dans P_GAMMA\n  indice 'PAS'   : FLOTTANT\n  indice 'FCDYN' : FLOTTANT,   pas de temps et frequence de coupure\n                               a utiliser pour le calcul de\n                               l'interaction sol-structure a l'aide\n                               de la procedure DYNAMIC ou PASAPAS\n\nRemarques :\n-----------\n\nLa procedure n'accepte pas les frontieres obliques. Elle peut traiter\nles mouvements horizontaux (onde SV) et verticaux (onde P).\n\nLa procedure est developpee pour effectuer la deconvolution sur la\nmoitie de la frontiere. Lorsque le maillage est symetrique ou\naxisymetrique, il suffit d'appeler une fois la procedure DECONV.\n\nLorsque le maillage ( sol + structure ) n'est pas symetrique, il\ndoit etre divise en deux moities par l'axe OY. On appelle deux fois\nla procedure DECONV pour effectuer la deconvolution des deux\nmoities du maillage.",
  },
  {
    name: "DECONV3D",
    url: "DECONV3D",
    documentation:
      "$$$$ DECONV3D NOTICE  MB234859  17/10/02    21:15:07     9577           \n                                             DATE     17/10/02\n\n    procedure DECONV3D                          Voir aussi : DECONV\n    ------------------  \n   TABRESU =  DECONV3D COUCHE PC FOND_SOL MOD_SOL MAT_SOL DIR\n                       GAMMAO F1 F2 (FC) (P_GAMMA)\n\n\n\nObjet :\n-------\n\nCette procedure permet d'effectuer des calculs sismiques d'interaction\nsol-structure (ISS) en 3D par la methode des elements finis. Elle a\ndeux fonctions lorsque l'on n'\u00e9voque pas la methode de reduction de \ndomaine de Bielak [1]:\n  - Formuler la matrice d'amortissement correspondant a la frontiere\n    absorbante visqueuse sur la bordure du maillage de sol,\n  - Calculer le chargement sismique au cours du temps a appliquer sur\n    la frontiere par la deconvolution du mouvement sismique\n    (accelerogramme) donnee en surface libre du sol\n\nLorsque la methode de Bielak[1] est \u00e9voqu\u00e9e (nouvelle option, si \nCOUCHE.'BLK' existe), le maillage du sol d'entr\u00e9e (appel\u00e9 zone interne)\npeut \u00eatre largement reduit. La procedure cr\u00e9e automatiquement une \ncouche d'elements enveloppe (appel\u00e9e zone intermediare) et calcule le\nchargement sismique \u00e0 appliquer sur cette zone. Dans ce cas, \nl'utilisateur doit cr\u00e9er lui-m\u00eame une zone de sol externe a l'exterieure\nde la zone intermediare et mettre sur sa bordure exterieure une \nfrontiere absorbante \u00e0 l'aide de l'operateur AMOR. Dans cette option, il \nest possible d'introduire des ondes SH inclin\u00e9es comme chargement \nsismique.\n\nLa resolution du probleme peut s'effectuer ensuite dans le domaine\ntemporel sur l'ensemble du maillage sol-structure avec l'une des \nprocedures d'integration suivantes :\n  - procedure DYNAMIC en cas de comportement lineaire, possibilite\n    d'inclure des liaisons unilaterales pour modeliser le decollement\n    et le glissement du radier,\n  - procedure PASAPAS en cas de comportement non lineaire du sol et de\n    la structure.\n\nCommentaire :\n-------------\n\nEn entree :\n-----------\n\nCOUCHE 'TABLE' : table a double indice\n  COUCHE.'BLK' : si existe, deconvolution pour la methode de Bielak\n  COUCHE.'BLK'.'EP_H' : epaisseur horizontale de la zone intermediare\n                        verticale\n  COUCHE.'BLK'.'EP_V' : epaisseur veriticle de la zone intermediare\n                        horizontale\n  COUCHE.I.'indice' : donnees pour la ieme couche du sol\n\n    indice 'FRONTIERE'       'MAILLAGE' : frontiere verticale de la\n                                          ieme couche\n    indice 'MASSE_VOLUMIQUE' 'FLOTTANT' : masse volumique\n    indice 'POISSON'         'FLOTTANT' : coefficient de Poisson\n    indice 'YOUNG'           'FLOTTANT' : module d'Young\n    indice 'AMORTISSEMENT    'FLOTTANT' : amortissement reduit\n\nPC       'MAILLAGE' : point de reference situe au milieu du millage\n                      de sol ou sur l'axe de symetrie si calcul sur\n                      la moitie ou le quart du systeme\nFOND_SOL 'MAILLAGE' : frontiere horizontale inferieure du sol\nMOD_SOL  'MMODEL'   : modele du sol\nMAT_SOL  'MCHAML'   : materiau du sol\nDIR      'MOT'      : direction de l'acceleration GAMMAO\n                      'UX' pour la direction X (onde SV)\n                      'UY' pour la direction Y (onde SH)\n                      'UZ' pour la direction Z (onde P)\nGAMMAO   'EVOLUTIO' : acceleration du 'champ libre' en surface du sol\n                      comportant une plage initiale a zero\n                      acceleration sur au moins 100 pas de temps\nF1, F2   'FLOTTANT' : frequences sur lesquelles l'amortissement\n                    : reduit est ajuste suivant le modele de\n                      RAYLEIGH\nFC       'FLOTTANT' : frequence de coupure pour la deconvolution,\n                      par defaut  FC = 50 Hz\nP_GAMMA  'TABLE'    : points sur la frontiere verticale pour\n                      lesquels on desire sortir les accelerogrammes\n\n  indice 'ENTREE'   :'TABLE' : description de la nature de \n                     l'accelerogramme GAMMAO autre que sur la surface\n                     libre (facultatif) ou description de l'onde \n                     incidente inclin\u00e9e SH.\n    sous-indice 'NATURE'   : nature du point de controle :\n                            'MOT' INSIDE : dans le sol\n                            'MOT' OUTCROP : outcrop du bedrock\n                            'MOT' SH : Onde incidente SH inclin\u00e9e dans \n                                  le cas de la methode Bielak, \n                                  DIR = UX : onde SH dans le plan YZ, \n                                  DIR = UY : onde SH dans le plan XZ.\n    sous-indice 'ANGLE' : Angle d'incidence de l'onde SH si \n                         'NATURE' = SH\n\n    sous-indice 'CONTROLE' :'MAILLAGE': \n                             si 'NATURE' = 'INSIDE', point de controle \n                             sur la frontiere verticale, \n                             si 'NATURE' = 'SH', point de controle \u00e0 la\n                             surface du sol pour lequel on impose \n                             l'acc\u00e9l\u00e9rogramme du champ libre GAMMAO.\n\n  indice 'I'        :'MAILLAGE': ieme (i = 1, 2, 3,...) points sur la\n                      frontiere verticale pour lesquels on desire sortir\n                      l'accelerogramme en champ libre (resultats de\n                      deconvolution)\n\nEn sortie :\n-----------\nTABRESU 'TABLE' :  table qui contient les resultats du calcul\n\n  indice 'CHAR'  'CHARGEMENT' : excitation sismique sur la frontiere\n                                du sol\n  indice 'AMOR'  'RIGIDITE'   : frontiere absorbante (absent, si Bielak)\n  indice 'DEFO'  'EVOLUTIO'   : deformation maximale du sol en\n                                fonction de la profondeur\n  indice 'ACCE'  'TABLE'      : table qui contient les accelerations\n                                des points definis dans P_GAMMA\n  indice 'PAS'   'FLOTTANT'\n  indice 'FCDYN' 'FLOTTANT'   : pas de temps et frequence de coupure\n                                a utiliser pour le calcul dynamique\n                                de l'interaction sol-structure\n                                a l'aide de la procedure DYNAMIC ou\n                                PASAPAS.\n  indice 'BLK_MAI', 'BLK_MOD', 'BLK_MAT', 'BLK_MAS', 'BLK_RIG', \n         'BLK_AMO' : maillage, modele, materiau, masse, rigidite et \n                     amortissement de la zone intermediaire cree par \n                     la procedure\n\nRemarques :\n-----------\n\n1) La procedure n'accepte pas les frontieres obliques.\n\n2) Le calcul ISS peut etre effectue sur la totalite, la moitie ou le\nquart du systeme selon la symetrie du maillage. Il faut donner a la\nprocedure le maillage de frontiere correspondant.\n\n3) La methode de Bielak peut permettre de reduire le nombre d'elements \ndu modele et le temps de calcul.\n\n4) Une onde SH incidente a l'angle azimutal quelconque peut \u00eatre \ndecompos\u00e9e en deux onde SH respectivement dans les plans YZ et XZ.\n\nReference:\n----------\n\n[1] Bielak et al \"Domain reduction method for three dimensional \n    earthquake modeling in localized regions\" Bulletin of the \n    Seismilogical Society of America, Vol. 93, No. 2, pp817, \n    April 2003",
  },
  {
    name: "DEDA",
    url: "DEDA",
    documentation:
      "$$$$ DEDA     NOTICE  FD218221  14/08/07    21:15:03     8140           \n                                             DATE     14/08/07\n\n     Operateur DEDA                       Voir aussi : DEDANS, INCL\n     --------------  \n     LOG1 = DEDA P1 MAIL1 (FLO1) ;\n\n     Objet :\n     _______\n\n    L'operateur DEDA determine si un point est situe a l'interieur d'un\n    domaine defini par un maillage.\n\n\n     Commentaire :\n     _____________\n\n     P1    : objet POINT.\n\n     MAIL1 : objet MAILLAGE, contour (enveloppe) ferme, oriente (voir\n             remarque) et constitue d'elements SEG2 (TRI3) en 2D (3D).\n\n     FLOT1 : objet FLOTTANT, facultatif, tolerance pour le test sur la\n             nullite de l'angle solide total (voir remarque), sa valeur\n             est prise egale a 1E-9 par defaut.\n\n     LOG1  : objet LOGIQUE egal a VRAI si P1 est a l'interieur de MAIL1.\n\n\n     Remarques :\n     ___________\n     \n     On calcule la somme de l'angle solide signe de tous les elements\n     de MAIL1 vu depuis le point P1. Si cette somme est nulle\n     (inferieure a FLOT1), P1 est considere a l'exterieur du maillage.\n\n     Pour les points situe pres du bord, il convient d'utiliser une\n     tolerance FTOL1 \"suffisamment grande\", d'autant plus que le nombre\n     d'elements de MAIL1 est eleve.\n\n     Le maillage MAIL1 doit etre convenablement oriente :\n     - Deux elements adjacents doivent avoir la meme orientation, on\n       pourra utiliser l'operateur VERS pour le verifier.\n     - S'il est constitue de plusieurs parties, les bords internes (les\n       \"trous\") doivent etre orientes dans le sens oppose du bord\n       externe.",
  },
  {
    name: "DEDANS",
    url: "DEDANS",
    documentation:
      "$$$$ DEDANS   NOTICE  FD218221  14/08/07    21:15:04     8140           \n                                             DATE     14/08/07\n\n    Procedure DEDANS                      Voir aussi : DEDA, INCL\n    ----------------  \n    LOG1 = DEDANS PO1 MAIL1 (PREC) ;\n\n\n    Objet :\n    _______\n \n La procedure DEDANS permet de determiner si un point P01 (type POINT)\nest situe a l'interieur d'un contour oriente ferme. Cette operation\nn'a de sens qu'en dimension 2.\n\n   PO1 : objet de type point.\n\n   MAIL1 : objet de type maillage contenant un contour ferme oriente.\n\n   PREC : precision ( type flottant), par defaut 0.\n\n\n   LOG1 : objet de type logique qui vaut VRAi si le point est a  \n          l'interieur de la zone delimitee par le contour.",
  },
  {
    name: "DEDO",
    url: "DEDO",
    documentation:
      "$$$$ DEDO     NOTICE  CHAT      11/09/12    21:15:47     7124           \n                                             DATE     11/09/12\n\n  Operateur DEDOUBLE                       Voir aussi :\n    ------------------  \n    GEO3 GEO4 = DEDO GE01 GEO2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DEDOUBLE permet de dedoubler les noeuds de la ligne \nGE02 dans l'objet maillage GE01. Le resultat est un nouvel objet\nmaillage GE03. GEO4 est la partie nouvelle correspondant a GEO2.\n\n    Remarques :\n    ___________\n\n    Cet operateur ne peut etre utilise qu'en dimension 2. GEO2 doit\netre une ligne continue (constituee d'elements SEG2 ou SEG3), et ne doit \npas contenir de bifurcations.\n\n    Exemple :  \n    _________\n    \n    OPTI DIME 2 ELEM TRI3;\n    P0 = 0.  0.; \n    P1 = 5.  0.;\n    P2 = 10. 0.;\n    D1 = DROI 5  P0 P1;\n    D2 = DROI 5  P1 P2;\n    MAI1 = TRAN (D1 ET D2) 5 (0.  5.);\n    MAI2 = TRAN (D1 ET D2) 5 (0. -5.);\n    DED1  DED2 = DEDOUBLE (MAI1 ET MAI2) D1;\n\n$$$$\n \n \n \n ",
  },
  {
    name: "DEDU",
    url: "DEDU",
    documentation:
      "$$$$ DEDU     NOTICE  PASCAL    21/03/19    21:15:01     10924          \n                                             DATE     21/03/19\n\n    Operateur DEDU                           Voir aussi : PLUS TOUR\n    --------------                                        DEPL  \n                                                          @DEDUIRE  \n\n    ---------------------\n    |  1re possibilite  |\n    ---------------------\n\n       MAI1  =  DEDU MAI2 MAI_ANC MAI_NOU ('REGU') ;\n\n    Objet :\n    _______\n\n    L'operateur DEDU construit a partir du maillage MAI2 et du maillage\n    de noeuds maitres MAI_ANC (noeuds de MAI2) un nouveau maillage MAI1\n    ou l'ensemble des noeuds maitres MAI_ANC est devenu MAI_NOU.\n    En cas de probleme, il est possible d'utiliser la procedure @DEDUIRE\n    qui est beaucoup plus onereuse.\n\n    Si le mot cle 'REGU' est mentionne, le nouveau maillage MAI1 sera\n    regularise par deplacement des noeuds au centre de gravite des\n    noeuds adjacents.\n\n    Exemple pour regulariser un maillage existant :\n\n      REGULARI = PASBEAU DEDU (PASBEAU CONT) (PASBEAU CONT) 'REGU' ;\n\n    Remarque :\n    __________\n\n    Cette possibilite ne fonctionne actuellement que pour les TRI3 et QUA4.\n\n    --------------------\n    |  2e possibilite  |\n    --------------------\n\n       NOBJ1 ... NOBJN = OBJ1 ... OBJN DEDU 'TRAN' GEO1 GEO2 ;\n\n    Objet :\n    _______\n\n    L'operateur DEDU en presence du mot-cle 'TRAN' cree un objet dont le\n    support geometrique s'obtient a partir du support de l'objet initial\n    selon la meme transformation qui permet d'obtenir GEO2 a partir de\n    GEO1. Les points des supports de OBJ1 .. OBJN doivent appartenir a\n    GEO1, ainsi ceux de NOBJ1 .. NOBJN  appartiennent a GEO2. \n\n    Il est necessaire de respecter la syntaxe.\n\n    Commentaire :\n    _____________\n\n    OBJ1 ... OBJN : types POINT, CHPOINT, MCHAML, MMODEL, MAILLAGE\n                OBJ1 peut aussi etre une table. Dans ce cas tous les \n                objets contenus dans la table, qui doivent etre d'un des \n                types ci-dessus, subiront la transformation.Si une table \n                est donnee, il ne doit pas y avoir d'autres objets.\n                \n    GEO1 : type MAILLAGE\n\n    GEO2 : type MAILLAGE, topologiquement equivalent a GEO1\n\n    NOBJ1 ... NOBN : resultats respectivement de memes types\n                     que OBJ1 ... OBJN\n\n    --------------------\n    |  3e possibilite  |\n    --------------------\n\n       NOBJ1 ... NOBJN = OBJ1 ... OBJN\n                DEDU FLOT1 POIN1 (POIN2 si 3D) 'ROTA' GEO1 GEO2 ;\n\n    Objet :\n    _______\n\n    L'operateur DEDU en presence du mot-cle 'ROTA' cree un objet dont le\n    support geometrique s'obtient a partir du support de l'objet initial\n    selon la rotation d'angle FLOT1, de centre POIN1 en 2D, d'axe POIN1\n    POIN2 en 3D, qui permet egalement d'obtenir GEO2 a partir de GEO1.\n    Les points des supports de OBJ1 .. OBJN doivent appartenir a GEO1,\n    ainsi ceux de  NOBJ1 .. NOBJN  appartiennent a GEO2.\n    Si les operandes possedent des composantes :\n       'UX' 'UY 'UZ' ou 'FX' 'FY' 'FZ' ou\n       'RX' 'RY' 'RZ' ou 'MX' 'MY' 'MZ' ou\n       'SMXX' 'SMYY' 'SMZZ' 'SMXY' 'SMXZ' 'SMYZ' ou\n       'EPXX' 'EPYY' 'EPZZ' 'GAXY' 'GAXZ' 'GAYZ',\n    celles-ci subissent egalement la rotation, les autres composantes\n    restant inchangees.\n\n    Il est necessaire de respecter la syntaxe.\n\n    Cette possibilite de l'operateur 'DEDU' n'est pas utilisable en\n    DIMEnsion 1 (sans interet).\n\n    Commentaire :\n    _____________\n\n    OBJ1 ... OBJN : types POINT, CHPOINT, MCHAML, MMODEL, MAILLAGE\n                OBJ1 peut aussi etre une table. Dans ce cas tous les \n                objets contenus dans la table, qui doivent etre d'un des \n                types ci-dessus, subiront la transformation.Si une table \n                est donnee, il ne doit pas y avoir d'autres objets.\n                \n                \n    GEO1 : type MAILLAGE, contient les points des supports des operandes\n\n    GEO2 : type MAILLAGE, image de GEO1 par la rotation specifiee\n\n    NOBJ1 ... NOBJN : resultats respectivement de memes types\n                      que OBJ1 ... OBJN\n\n    --------------------\n    |  4e possibilite  |\n    --------------------\n\n       CHP1  =  DEDU GEO1 CHP2;\n\n    Objet :\n    _______\n\n    Connaissant un champ de deplacement (CHP2) de certains noeuds\n    d'un maillage GEO1, l'operateur deduit un champ de deplacements\n    regularise de tous les noeuds de GEO1.\n\n    --------------------\n    |  5e possibilite  |\n    --------------------\n\n                                                 (|'DENS' CHPO4) ;\n       CHPO2 = 'DEDU' 'ADAP' MAIL (RIG1 (CHPO1)) (|'METR' |CHAM1 MOD1|) \n                                                 (        |CHPO3 MOT1|)\n                                                 ('THET' FLOT1)\n                                                 ('NITM' ENTI1)\n                                                 ('ACVG' LOGI1) \n                                                 ('DISG' MOT2) \n                                                 ('IDIR' ENTI2) \n                                                 ('TINV' TABL1) ;\n\n\n    Objet :\n    _______\n\n    Genere un champ de deplacement permettant de regulariser un \n    maillage ou de l'adapter suivant une metrique.\n\n    Commentaire :\n    _____________\n\n    MAIL   : maillage a regulariser ou adapter\n\n    RIG1   : Conditions sur les deplacements\n    CHPO1    (par defaut, on bloque les noeuds frontieres de MAIL)\n\n    CHAM1  : champ par element defini aux noeuds donnant l'inverse \n             d'une metrique :  \n             tenseur symetrique de composantes G11, G21, G22,...\n             (par defaut, le tenseur unite)\n\n    MOD1   : modele associe a CHAM1\n\n    CHPO3  : idem CHAM1 mais avec la donnee d'un chpoint et d'un nom \n    MOT1     d'espace de discretisation, cf. notice NLIN\n\n    CHPO4  : avec l'option DENSite, regularise le maillage suivant la\n             carte de densite CHPO4 (voir MESU).\n\n    FLOT1  : Flottant compris entre 0. et 1. reglant la balance entre\n             equidistribution (tailles egales des elements) et\n             isotropie (regularite des elements).\n             Valeur par defaut : 0.2\n\n    ENTI1  : Nombre maximum d'iterations non lineaires a effectuer\n             Valeur par defaut : 40\n\n    LOGI1  : Utilisation de l'acceleration de convergence\n             Valeur par defaut : VRAI\n\n    MOT2   : Nom d'espace de discretisation pour l'interpolation\n             geometrique. (MAIL doit alors etre un maillage constitue\n             d'elements de type quadratique pour les fluides QUAF)\n   \n    ENTI2  : Si on donne l'option 'IDIR', le champ de deplacement \n             regularisant n'aura qu'une seule composante, dans la \n             direction de l'espace donnee par ENTI2 \n\n    TABL1  : Si on donne l'option 'TINV', la TABL1 donnant les \n             parametres de resolution sera passee a l'operateur\n             de resolution (cf. notice KRES)\n\n    CHPO2  : champ de deplacement\n\n    Remarques :\n    ___________\n\n    L'option 'ADAP' est censee fonctionner sans conditions sur le\n    maillage. \n    Les modes axi et spheriques ne sont pas implementes.",
  },
  {
    name: "DEDUADAP",
    url: "DEDUADAP",
    documentation:
      "$$$$ DEDUADAP NOTICE  CHAT      11/09/12    21:15:47     7124           \n                                             DATE     11/09/12\n\n\n    Procedure DEDUADAP                      Voir aussi : DEDU\n    ------------------          \n    Objet :\n    _______\n\n    Cette procedure implemente la resolution du probleme \n    d'optimisation non-lineaire qui sous-tend l'algorithme\n    utilise par l'operateur 'DEDU' option 'ADAP'.\n\n    Voir la notice de 'DEDU'.\n    ",
  },
  {
    name: "DEFO",
    url: "DEFO",
    documentation:
      "$$$$ DEFO     NOTICE  CB215821  18/05/23    21:15:00     9825           \n                                             DATE     18/05/23\n\n    Operateur DEFORME                        Voir aussi : TRAC\n    -----------------                                     VECT  \n    DEF1 = DEFORME  GEO1 CHPO1 (FLOT1) (VEC1) (COUL1) | CHPO2\n                                                      | CHEL MODEL\n\n    Objet :\n    _______\n\n    L'operateur  DEFORME construit un  objet  de  type DEFORME  a partir\nd'une  geometrie  initiale  et  d'un  champ  de  deplacements.  On  peut \nappliquer  aux deplacements un coefficient  d'amplification. Une couleur\npeut  etre attribuer a  l'objet  deformee. Un  champ scalaire  peut etre \nassocie a l'objet deforme.\n\n    Commentaire :\n    _____________\n\n    GEO1  : geometrie initiale (type MAILLAGE)\n\n    CHPO1 : champ de deplacements (type CHPOINT)\n\n    FLOT1 : coefficient d'amplification (type FLOTTANT)\n\n    VEC1  : option pour representer un champ par des vecteurs (type\n            VECTEUR)\n\n    COUL1 : couleur attribuee a l'objet deforme (type MOT),\n            la couleur par defaut est celle du maillage a deformer\n            (voir les operateurs COUL et AFCO)\n\n    CHPO2 : champ scalaire (type CHPOINT)\n\n    CHEL  : champ scalaire (type MCHAML)\n\n    MODEL : model associe\n\n    Remarque 1 :\n    ____________\n\n    Si le coefficient FLOT1 n'est pas precise, il est determine\nautomatiquement.\n\n    Remarque 2 :\n    ____________\n\n    Cet objet peut etre visualise par l'operateur TRACE. Son trace peut\netre interprete comme le trace de la deformee de l'objet GEO1 par le\nchamp de deplacements CHPO1 avec une amplification FLOT1 dans la\ncouleur COUL.\n\n    Remarque 3 :\n    ____________\n\n    Il est possible d'associer un objet VEC1 de type VECTEUR a l'objet\nDEFORME, ce qui permet d'obtenir sur le trace de la deformee la\nrepresentation par des vecteurs d'un champ (par exemple le chargement\nou les reactions aux blocages).\n\n    Remarque 4 :\n    ____________\n\n    Il est possible, dans le but d'obtenir plusieurs traces de deformees\nsur le Meme graphique, d'appliquer l'operateur ET entre des objets de\ntype DEFORME.\n\n     Remarque 5 :\n     ____________\n\n     Le champ de scalaire est represente sous forme d'isovaleurs sur la\ndeforme.     ",
  },
  {
    name: "DEG3",
    url: "DEG3",
    documentation:
      "$$$$ DEG3     NOTICE  CHAT      11/09/12    21:15:49     7124           \n                                             DATE     11/09/12\n\n  Operateur DEG3                           Voir aussi :\n    --------------  \n      XR1 XI1 XR2 XI2 XR3 XI3 = DEG3 A0 A1 A2 A3 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DEG3 calcule les racines d'un polynome du 3-eme\ndegre.\n\n      Commentaire :\n      -------------\n\n      Le polynome est de la forme : A0 + A1*X + A2*X**2 + A3*X**3\n\n      Les racines sont :  XR1 + i*XI1\n                          XR2 + i*XI2\n                          XR3 + i*XI3\n\n      A0, A1, A2, A3, XR1, XI1, XR2, XI2, XR3, XI3 sont de type\n      FLOTTANT.",
  },
  {
    name: "DENS",
    url: "DENS",
    documentation:
      "$$$$ DENS     NOTICE  GOUNAND   14/03/14    21:15:01     7995           \n                                             DATE     14/03/14\n                                             \n    Directive DENSITE                        Voir aussi : OPTI VALE\n    -----------------  \n    DENSITE FLOT1 ;\n\n\n    Objet :\n    _______\n\n    La directive DENSITE sert a definir, par defaut, la taille locale\n    FLOT1 (type FLOTTANT) de la maille s'appuyant sur les points a\n    construire.\n\n    Alternativement, on peut utiliser la directive 'OPTI' 'DENS' FLOT1 ;\n\n    Commentaire :\n    _____________\n\n    A chaque point du maillage est associee la taille de la maille\n    venant le toucher. Cette taille peut evidemment varier d'un point a\n    l'autre. Elle est exprimee dans la meme unite que les coordonnees\n    des points.\n\n    Au cours d'une operation de creation de mailles entre deux points le\n    programme s'arrangera pour que la taille des mailles en ces deux\n    points soit la densite associee et pour qu'une progression\n    geometrique des tailles entre les deux points soit realisee.\n\n    ATTENTION :\n    ___________\n\n    Ne pas ecrire \"DENS = 1 ;\". Cela reviendrait a construire le nombre\n    entier DENS de valeur 1 ce qui n'est vraisemblablement pas le but\n    vise par l'utilisateur.",
  },
  {
    name: "DEPB",
    url: "DEPB",
    documentation:
      "$$$$ DEPB     NOTICE  MB234859  17/10/02    21:15:08     9577           \n                                             DATE     17/10/02\n\n    Operateur DEPB                           Voir aussi : DEPI\n    --------------  \n    ATTA1 = DEPB  STRU1 CHPO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DEPB cree un objet de type ATTACHE qui est utilise pour\nimposer des deplacements en certains points d'une sous-structure,\nrepresentee par sa base modale.\n\n    Commentaire :\n    _____________\n\n      STRU1  : sous-structure (type STRUCTURE)\n\n      CHPO1  : champ par point cree par l'operateur DEPI (type CHPOINT)\n\n      ATTA1  : objet resultat (type ATTACHE ,sous-type DEPI)",
  },
  {
    name: "DEPI",
    url: "DEPI",
    documentation:
      "$$$$ DEPI     NOTICE  BP208322  21/01/08    21:15:02     10844          \n                                             DATE     21/01/08\n\n    Operateur DEPIMPOSE                      Voir aussi : BLOQ RELA\n    -------------------                                   SYMT  ANTI  \n                                                          JEU  \n    CHPO1 =  DEPI  RIG1 | FLOT1        ;\n                        | CHPO2        ;\n                        | 'RELA' CHPO3 ;\n\n    DEPI TAB1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DEPI specifie la valeur de certains blocages ou\n    relations.\n\n    Commentaires :\n    ______________\n\n    RIG1   : objet de type RIGIDITE, de sous-type BLOCAGE, definissant\n             les conditions imposees a des degres de liberte.\n\n    FLOT1  : valeur (type FLOTTANT) a imposer a tous les blocages \n             uniformement.\n\n    CHPO2  : champ (type CHPOINT) permettant d'imposer des valeurs \n             aux inconnues bloquees lorsque les blocages ne portent que \n             sur une inconnue.\n             \n             Les composantes doivent etre les memes que celles des \n             blocages de RIG1. Par exemple :\n\n                 BLO1 = BLOQUE LI1 'UX'  ;\n                 CCX  = COOR 1 LI1     ;\n                 CCXX = NOMC 'UX' CCX    ;\n                 FO1  = DEPI BLO1 CCXX ;\n\n    CHPO3  : champ (type CHPOINT) permettant d'imposer des valeurs aux \n             relations entre differents degres de liberte ('option 'RELA'). \n             Cette option n'est possible que si les relations impliquent \n             les degres de liberte d'un meme noeud. \n             \n             Le champ CHPO3 ne doit contenir qu'une seule zone et \n             n'avoir qu'une seule composante nommee 'SCAL'.\n\n    CHPO1  : resultat (type CHPOINT), qu'il convient d'additionner\n             au second membre (forces en mecanique) avant d'effectuer\n             la resolution.\n\n    TAB1 : type TABLE, sous-type 'LIAISONS_STATIQUES'. Les indices de\n           TAB1 sont des entiers pointant sur des objets de type TABLE.\n           Pour chacun l'indice 'FORCE' est cree : CHPOINT exprimant au\n          'POINT_LIAISON', de type POINT, une force d'amplitude unite \n           duale du 'DDL_LIASON', de type MOT, compatible avec  le \n           'BLOCAGE', de type RIGIDITE.\n       \n Remarque : Les degres de liberte de rotation sont exprimes en radians,\n            il convient donc de donner les valeurs qui leurs sont\n            imposees en cette unite.",
  },
  {
    name: "DEPL",
    url: "DEPL",
    documentation:
      "$$$$ DEPL     NOTICE  BP208322  13/06/27    21:15:07     7783           \n                                             DATE     13/06/27\n\n    Directive DEPLACER                       Voir aussi : PLUS TOUR\n    ------------------                                    MOIN    SYME  \n                                                          AFFI    PROJ  \n                                                          HOMO    DEDU  \n    DEPL GEO1 |'PLUS' |  | VEC1  | ;\n              |'MOINS'|  | CHPO1 | ;\n              |'COOR' | 'CYLI'  POIN1  POIN2 (POIN3 SI 3D) ;\n              |       | 'CART' ;\n              |'TOUR' |  ANGL1  | POIN1 (POIN2 SI 3D) ;\n              |       |  CHPO1  | \n              |'HOMO'  RAPP1  POIN1 ;\n              |'AFFI'  RAPP1  POIN1 POIN2 ;\n              |'SYME' | 'POIN'  POIN1 ;\n              |       | 'DROIT' POIN1 POIN2 ;\n              |       | 'PLAN'  POIN1 POIN2 POIN3 ;\n              |'PROJ' |('CYLI') VEC1  | |'PLAN' POIN1 POIN2 POIN3 ;\n              |       | 'CONI'  SOMM1 | |'SPHE' CENT1 POIN1 ;\n              |                         |'CYLI' CENT1 CENT2 POIN1 ;\n              |                         |'CONI' POIN1 POIN2 POIN3 ;\n              |                         |'TORI' CENT1 POIN1 POIN2 POIN3 ;\n              |                         |'DROI' POIN1 POIN2 ;\n              |                         |'CERC' CENT1 POIN1 ;\n              |'COOR' | 'CYLI'  POIN1  POIN2 ( POIN3 SI 3D) ;\n              |       | 'CART' ;\n              |'MILI' ;\n              |'BARS' | POIN1 | (FLOT1) ;\n              |'DEDU' | GEO2 GEO3 ;\n                      | CHP1 ;\n\n\n    Objet :\n    _______\n\n    La directive DEPLACER a pour effet de deplacer l'ensemble des\npoints appartenant a l'objet GEO1 (type MAILLAGE ou POINT) sans\ncreer un nouvel objet.\n\n\n    Commentaire :\n    _____________\n\n    En presence des mots-cles suivants :\n\n 'PLUS'  : on applique a l'ensemble des points une translation\n           du vecteur VEC1 (type POINT) ou du champ CHPO1 (type\n           CHPOINT).\n\n 'MOINS' : on applique a l'ensemble des points une translation\n           du vecteur -VEC1 (type POINT) ou du champ -CHPO1 (type\n           CHPOINT).\n\n 'TOUR'  : on applique a l'ensemble des points une rotation d'angle\n           ANGL1 (type FLOTTANT) ou d'angle CHPO1 (type CHPOINT)\n           autour du POIN1 (type POINT) en 2D\n           ou de l'axe defini par POIN1 POIN2 (type POINT) en 3D.\n\n 'HOMO'  : on applique a l'ensemble des points une homothetie de centre\n           POIN1 (type POINT) et de rapport RAPP1 (type FLOTTANT).\n\n 'AFFI'  : on applique a l'ensemble des points une affinite laissant\n           invariant le point POIN1 (type POINT), de direction definie\n           par (POIN2 - POIN1) et de rapport RAPP1 (type FLOTTANT).\n\n 'SYME'  : on applique a l'ensemble des points une symetrie suivant\n           l'operation desiree :\n               - 'POIN' = par rapport au point POIN1 (type POINT)\n               - 'DROI' = par rapport a la droite POIN1 POIN2\n                          (type POINT)\n               - 'PLAN' = par rapport au plan POIN1 POIN2 POIN3\n                          (type POINT)\n\n 'PROJ'  : on applique a l'ensemble des points une projection\n           CYLIndrique suivant la direction definie par le vecteur\n           VEC1 (type POINT) ou CONIque de centre SOMM1 (type POINT)\n           sur la surface demandee :\n               - PLAN defini par les points POIN1 POIN2 POIN3\n                 (type POINT)\n               - SPHEre de centre CENT1 (type PPOINT) passant par\n                 le point POIN1 (type POINT)\n               - CYLIndre d'axe passant par les points CENT1 et CENT2\n                 (type POINT)\n               - CONE de sommet POIN1 (type POINT) dont l'axe passe par\n                 le point POIN2 et contenant le point POIN3 (type POINT)\n               - TORE de centre CENT1 dont l'axe passe par le point\n                 POIN1, dont un centre de petit cercle est le point\n                 POIN2 et contenant le point POIN3.\n\n     En 2D, la projection se fait sur une ligne :\n       - DROIte definie par les points POIN1 et POIN2 (type POINT)\n       - CERCle de centre CENT1 passant par le point POIN1 (type POINT).\n\n 'COOR'  : on effectue un changement de systeme de coordonnees entre\n           les coordonnees cartesiennes et cylindriques.\n\n              'CYLI' : on desire des coordonnees cylindriques.\n                       Les angles vont de -180 a +180 degres.\n                       En 2D, POIN1 est le centre du systeme de\n                       coordonnees et la ligne definie par POIN1\n                       vers POIN2 donne l'angle theta nul.\n                       En 3D, POIN1 est le centre du systeme de\n                       coordonnees, l'axe defini par POIN1 vers POIN2\n                       est l'axe Z positif et le plan defini par les\n                       trois points POIN1 POIN2 et POIN3 donne\n                       l'angle theta nul.\n\n              'CART' : on desire des coordonnees cartesiennes.\n                       Les angles fournis doivent etre exprimes en\n                       degres variant entre -180 et +180.\n                       En 2D, l'origine du repere ne change pas et\n                       l'axe X correspond a theta egal zero.\n                       En 3D, l'origine et l'axe Z ne changent pas\n                       et l'axe X correspond a theta egal zero.\n\n 'MILI'  :  Les points milieux des elements quadratiques sont\n            projetes sur le plan mediateur des deux extremites.\n\n 'BARS'  :  Les points milieux des elements quadratiques sont deplaces\n            afin de creer des elements de Barsoum en pointe de fissure.\n            La pointe de fissure est donnee par POIN1, la ligne de\n            fissure par GEO2. Seuls les points milieux des elements en\n            pointe de fissure sont deplaces, aucun point de la ligne\n            de fissure n'est deplace. FLOT1 est la coordonnee curviligne\n            du noeud deplace. Si FLOT1 n'est pas specifie, elle est\n            fixee a 0.495 (le noeuds sont alors deplaces pratiquement\n            au quart vers la pointe de fissure).\n\n  'DEDU' :  Les points de l'objet GEO1 sont deplaces par l'application\n            affine qui fait passer des N points de GEO2 aux N points\n            de GEO3. Dans le cas ou CHP1 est fourni (champ de\n            deplacements), les points support du champ correspondent\n            aux points de GEO2 et l'application du champ de deplacement\n            CHP1 aux points de GEO2 permet de deduire GEO3.\n            IMPORTANT : Le nombre de points N definissant la transfor-\n            mation (changement de repere) est au plus egal a (DIME+1),\n            ou DIME est la dimension etudiee (1,2 ou 3).\n\n\n    Remarques :\n    ___________\n\n    A la difference de la directive DEPLACER qui ne fait que deplacer\nl'objet GEO1, les operateurs PLUS, MOINS ... creent un nouvel objet\nGEO2 en copiant et depla\u00e7ant GEO1.\n\n    En dimension 1, seules les operations 'PLUS', 'MOINS', 'HOMO',\n'SYME' (option 'POIN'), 'MILI' et 'DEDU' sont disponibles.",
  },
  {
    name: "DEPOU",
    url: "DEPOU",
    documentation:
      "$$$$ DEPOU    NOTICE  CHAT      11/09/12    21:15:50     7124           \n                                             DATE     11/09/12\n\n    Procedure DEPOU                          Voir aussi : PREC    \n    ---------------                                       PHASAGE  \n                                                          TENSION  \n                                                          EPAIFUT  \n                                                          RETRAIT   \n      TAB1  =  DEPOU  ........;\n\n\n\n    Objet :\n    _______\n\n      Cette procedure permet de fabriquer des evolutions de tensions\n      le long des cables pour les differents instants du calcul. \n      Elle est appellee automatiquement par la procedure PHASAGE. \n    \n       ",
  },
  {
    name: "DESCOUR",
    url: "DESCOUR",
    documentation:
      "$$$$ DESCOUR  NOTICE  CHAT      11/09/12    21:15:50     7124           \n                                             DATE     11/09/12\n\n  Procedure DESCOUR                    Voir aussi :\n        -----------------  \n        DESCOUR TAB1  ENT1  GEO1  MOT1   FLOT1 \n \n\n\n        Objet  :\n        --------\n \n        Description des zones de courants en  magnetostatique a\n        potentiel vecteur.  \n\n        Commentaire :\n        -------------\n\n        TAB1   TABLE qui contiendra le descriptif des zones de courant \n        ENT1   numero d'ordre de la zone decrite \n        GEO1   maillage de la zone  d'ordre ENT1 \n        MOT1   mot valant   'AMP'  OU  'AT'  ou 'FIL' \n        FLOT1  flottant  densite de courant  J (AMP)  ou nombre\n               d'amperes totaux ( AT ) ou  amperes par points (FIL )\n               dans ce dernier cas Geo1 est de type maillage POI1\n\n               On passe  autant de fois dans DESCOUR  qu'il y a de\n               zones distinctes de courant  \n ",
  },
  {
    name: "DESS",
    url: "DESS",
    documentation:
      "$$$$ DESS     NOTICE  BP208322  20/05/12    21:15:01     10612          \n                                             DATE     20/05/12\n\n    Directive DESSIN                         Voir aussi : TRAC EVOL\n    ----------------                                      MOT   CHAI  \n                                                          @HISTOGR OPTI  \n\n   DESS (EVOL1 ET EVOL2 ET ... EVOLN) ( 'LOGX'                      ) ;\n                                      ( 'LOGY'                      ) ;\n                                      ( 'GRIL' (TYPELIGN) ('GRIS')  ) ;\n                                      ( 'CARR'                      ) ;\n                                      ( 'XBOR'  XINF XSUP           ) ;\n                                      ( 'YBOR'  YINF YSUP           ) ;\n                                      ( 'XGRA'  DELTAX              ) ;\n                                      ( 'YGRA'  DELTAY              ) ;\n                                      ( 'MIMA'                      ) ;\n                                      ( 'DATE'                      ) ;\n                                      ( 'LOGO'                      ) ;\n                                      ( 'SEPA'                      ) ;\n                                      ( 'CHOI'  (N1 (N2 (N3 ...)))  ) ;\n                                      ( 'TITR'  'titre global'      ) ;\n                                      ( 'TITX'  'xlabel'            ) ;\n                                      ( 'TITY'  'ylabel'            ) ;\n                                      ( 'POSX'  MOPOSX              ) ;\n                                      ( 'POSY'  MOPOSY              ) ;\n                                      ( 'XFMT'  MOXFMT              ) ;\n                                      ( 'YFMT'  MOYFMT              ) ;\n                                      ( 'AXES'                      ) ;\n                                      ( 'NCLK'                      ) ;\n                                      ( 'LEGE'  (POSITION)          ) ;\n                                      ( TAB1                        ) ;\n\n   avec :\n   TAB1 . i = CHAI ('NOLI'_) (| 'TIRR'_ |) ('REMP'_ ('BLAN'_) )  ...\n                              | 'TIRC'_ |\n                              | 'TIRL'_ |\n                              | 'TIRM'_ |\n\n         ... ('LABEL'_ MOT3) ('MARQ'_ (MOT2) ('PLEIN'_) MOT1) ('REGU');\n         \n   ( ou l'on definit le caractere espace par :  _ = MOT ' ';  )\n   \n\n   TAB1 . 'TITRE'   . i = 'CHAI' MOT4 ;\n   \n   TAB1 . 'INITIAL' . i = ENT1 ;\n   TAB1 . 'FINAL'   . i = ENT2 ;\n   \n   TAB1 . 'LIGNE_VARIABLE' . i = LENT1 ;\n\n\n\n    Objet :\n    _______\n\n    Cette directive permet de tracer une EVOLUTION.\n    Cette evolution est une eventuelle concatenation de plusieurs\n    sous-evolutions EVOLi.\n\n\n    Commentaire :\n    _____________\n\n\n    --------------------------------------------------------------------\n                  OPTIONS GENERALES DE LA ZONE GRAPHIQUE\n    --------------------------------------------------------------------\n\n    \n    PAR DEFAUT :\n\n      - Courbe lineaire en X et en Y\n      - Cadrage automatique\n      - Fenetre rectangulaire\n      - Courbes tracees simultanement dans le meme cadre\n      - Courbes sans marqueurs\n      - Points reunis par des droites\n      - Axes gradues avec des multiples de .02 et .05\n      - Titre general = celui de l'evolution\n      - Nom axe X (resp. Y) = nom absc (resp. ordo) 1ere sous-evolution\n      \n\n    OPTIONS DISPONIBLES :\n\n     'LOGX' :  Echelle logarithmique pour l'axe des abscisses.\n     'LOGY' :  Echelle logarithmique pour l'axe des ordonnees.\n     'GRIL' :  Afficher une \"grille\". Suivi \u00e9ventuellement de :\n       - TYPELIGN : MOT definissant le type de ligne pour la grille\n                  = |  'LIGN'  (LIGNe continue = par d\u00e9faut)\n                    |  'TIRR'  (TIRets normaux)\n                    |  'TIRC'  (TIRets Courts) \n                    |  'TIRL'  (TIRets Longs),\n                    |  'TIRM'  (TIRets Mixtes)\n                    |  'POIN'  (POINtill\u00e9s) \n       - 'GRIS':  Colore en gris les lignes consituant la grille.               \n     'CARR' :  Cadre carre et meme echelle pour les axes X et Y.\n     'XBOR' :  On impose les bornes XINF et XSUP sur l'axe des X.\n     'YBOR' :  On impose les bornes YINF et YSUP sur l'axe des Y.\n     'XGRA' :  On impose l'espace entre chaque graduation de l'axe des X\n               a DELTAX (uniquement possible avec une echelle lineaire).\n     'YGRA' :  On impose l'espace entre chaque graduation de l'axe des Y\n               a DELTAY (uniquement possible avec une echelle lineaire).\n     'MIMA' :  Affichage des minimum et maximum globaux aux courbes.\n     'DATE' :  Affichage de la date.\n     'LOGO' :  Affichage du logo.\n     'SEPA' :  Courbes tracees separement avec les memes axes.\n     'LEGE' :  Ajout des legendes pour les courbes (voir plus bas).\n               Le nombre de legendes individuelles est limit\u00e9 a 30.\n               Suivi \u00e9ventuellement de :\n       - POSITION : MOT definissant la position souhaitee de la legende\n                  = | 'NO' (Nord-Ouest)\n                    | 'NE' (Nord-Est)\n                    | 'SO' (Sud-Ouest)\n                    | 'SE' (Sud-Est)\n                    | 'EXT' (Exterieur = par d\u00e9faut)        \n                    | 'XY' suivi de 2 FLOTTANT X Y.\n               Si la legende est a l'exterieur du cadre, le cadre sera \n               necessairement carre.\n     'CHOI' :  Restreint l'affichage aux courbe(s) de rang(s) N1, N2 ...\n     'TITR' :  Modification du titre general.\n     'TITX' :  Modification du nom de l'axe des abscisses (20 caracteres\n               maximum).\n     'TITY' :  Modification du nom de l'axe des ordonnees (20 caracteres\n               maximum).\n     'POSX' :  Permet de positionner le titre de l'axe des abscisses.\n               Doit \u00eatre suivi du mot-cl\u00e9 MOPOSX \n               \u00e0 choisir parmi :  'EXCE' (position excentr\u00e9e),\n                                  'CENT' (position centr\u00e9e).\n     'POSY' :  Permet de positionner le titre de l'axe des ordonn\u00e9s.\n               Doit \u00eatre suivi du mot-cl\u00e9 MOPOSY \n               \u00e0 choisir parmi :  'EXCE' (position excentr\u00e9e),\n                                  'CENT' (position centr\u00e9e).\n     'XFMT' :  Permet d'imposer le format d'ecriture des valeurs de \n               l'axe X via le format defini par MOXFMT.\n               Exemples de format pour MOXFMT :\n               '(I4)'   : entier sur 4 chiffres\n               '(F5.1)' : la mantisse de la valeur reelle est ecrite sur\n                          5 caracteres avec 1 decimale.\n               Le format par d\u00e9faut utilise 2 decimales ou moins.\n               Cette option est incompatible avec l'option LOGX.\n     'YFMT' :  Permet d'imposer le format d'ecriture des valeurs de \n               l'axe Y via le format defini par MOYFMT.\n               (Exemples et format par d\u00e9faut : cf 'XFMT')\n               Cette option est incompatible avec l'option LOGY.\n     'AXES' :  Trace les axes passant par l'origine (x=0 et y=0),\n               dans la mesure ou ils apparaissent a l'interieur du cadre\n     'NCLK' :  Supprime les possibilites de trace interactif (X & OGL) et\n               passe immediatement a l'instruction suivante.\n\n\n               \n    --------------------------------------------------------------------\n                  OPTIONS SPECIFIQUES A CHAQUE COURBE\n    --------------------------------------------------------------------\n\n    \n      PAR DEFAUT :\n\n        - Les traits sont pleins, sans marque, label ni remplissage\n        - Si l'option 'LEGE' est sp\u00e9cifi\u00e9e, chaque courbe apparait\n          dans la l\u00e9gende si la sous-evolution associee contient un \n          titre de legende (cf. notice de EVOL)\n\n          \n      OPTIONS DE LA TABLE TAB1 :\n      \n      On peut diff\u00e9rencier le traitement de chaque sous-evolution \n      (indicee par i) par l'intermediaire de la table TAB1 (non typee).\n\n      \n      a) A l'indice  TAB1 . i : \n         chaine (en MAJUSCULES) contenant les options de trace \n         pour la i^eme sous-evolution EVOLi\n\n         Ces options sont :\n\n         'NOLI' : pas de ligne\n         'TIRR' : tirets normaux\n         'TIRC' : tirets courts\n         'TIRL' : tirets longs\n         'TIRM' : tirets mixtes (alternativement courts et longs)\n\n         'REMP' : remplissage de l'aire sous la courbe\n                  (par defaut, la couleur de l'aire est celle de EVOLi, \n                   et le trait, s'il est pr\u00e9sent, devient noir ou blanc\n                   selon la couleur du fond; voir option BLAN ci-apres)\n         'BLAN' : le remplissage sous la courbe est blanc(ou noir) et\n                  la couleur du trait demeure celle de EVOLi.\n\n         'MARQ ' (MOT2) ('PLEIN') MOT1 :\n                  trace de marqueurs aux differents points de la courbe.\n\n             - MOT1 est un mot specifiant le type de marqueur :\n                       'CROI' = symbole fois    (x)\n                       'PLUS' = symbole plus    (+)\n                       'MOIN' = symbole moins   (-)\n                       'BARR' = barre verticale (|)\n                       'ETOI' = \u00e9toile \u00e0 huit branches\n                       'CARR' = carre\n                       'LOSA' = losange\n                       'ROND' = rond\n                       'TRID' = triangle pointe en bas\n                       'TRIU' = triangle pointe en haut\n                       'TRIL' = triangle pointe a gauche\n                       'TRIR' = triangle pointe a droite\n\n               /!\\ MOT1 doit toujours etre place en DERNIER\n\n             - Le mot-clef 'PLEIN' indique que le marqueur doit\n               etre rempli avec une couleur.\n\n             - MOT2 est la specification de taille choisie parmi :\n                       'SS' = le plus petit\n                       'S'  \n                       'M'  = taille par defaut\n                       'L'\n                       'XL' = le plus grand\n\n         'LABEL ' MOT3 : trace d'un label aux differents points de la\n                         courbe. Les 72 premiers caracteres de MOT2\n                         sont pris en compte\n\n         'REGU' : tracer uniquement 6 marqueurs regulierement espaces\n\n\n      b) A l'indice  TAB1 . 'TITRE' . i : \n         Texte de la legende (72 caracteres maximum) associee a \n         la i^eme sous-evolution EVOLi a surcharger au titre de la \n         legende defini dans EVOLi.\n         Pour ne pas mettre de legende pour la sous-evolution EVOLi, \n         il faut preciser : TAB1 . 'TITRE' . i = 'MOT' 'PAS DE LEGENDE';\n                \n\n      c) Aux indices  TAB1 . 'INITIAL' . i  et  TAB1 . 'FINAL' . i : \n         Respectivement entiers de debut et de fin de la portion de\n         courbe a tracer.\n         \n         \n      d) A l'indice  TAB1 . 'LIGNE_VARIABLE' . i : \n         Liste d'entier (type LISTENTI) de dimension egale au nombre de\n         segments (= nombre de points - 1). La valeur du j^eme entier \n         permet de sp\u00e9cifier le type de trait a utiliser pour le j^eme \n         segment de la i^eme courbe.\n         Valeur possible de l'entier = | 0  (ligne continue)\n                                       | 1  (tirets normaux TIRR)\n                                       | 2  (tirets courts  TIRC)\n                                       | 3  (tirets longs   TIRL)\n                                       | 4  (tirets mixtes  TIRM)\n                                       | 5  (pointilles     POIN) \n\n\n    Remarque :\n    __________\n\n    Le typage des courbes de l'evolution par le mot-cle 'HIST' permet\n    leur trace sous forme d'histogrammes (voir EVOL 'MANU' 'TYPE' 'HIST'\n    et la procedure @HISTOGR).\n    Lorsqu'une EVOLUTION (ou sous-evolution EVOLi) est de type 'HIST'\n    et qu'on lui associe le marqueur TRID (/TRIU), alors ce repere\n    ainsi que le nom attribue a la courbe (LEGEnde) apparaisent\n    au dessus (/en dessous) de la courbe centre horizontalement.\n    \n    D'autres options de mise en forme (police, \u00e9paisseur du trait ...) \n    sont g\u00e9r\u00e9es par l'op\u00e9rateur OPTION en particulier pour la sortie\n    postscript (PS et PSC).\n    \n    Il est possible d'imprimer dans la sortie postscript des indices,\n    exposants et lettres grecques en utilisant dans les titres (globaux,\n    des axes x et y) et dans les legendes la convention suivante :\n    _{indice}   : pour un indice\n    ^{exposant} : pour un exposant\n    \\a          : pour obtenir le symbole alpha (etc...)\n\n\n\n    Exemple :\n    _________\n\n*   dessine 4 evolutions en imposant des specificites de lignes au trois\n*   premieres, et en affichant en legendes : les traits et explications\n*   pour les deux premieres, juste le trait pour la 3e, et rien du tout\n*   pour la 4e.\n\n    TAB1     = 'TABLE' ;\n    TAB1 . 1 = 'MOT' 'TIRR ';\n    TAB1 . 2 = 'MOT' 'MARQ CROI NOLI';\n    TAB1 . 3 = 'MOT' 'MARQ LOSA';\n    TAB1 . 'TITRE'     = 'TABLE' ;\n    TAB1 . 'TITRE' . 1 = 'MOT' 'le resultat';\n    TAB1 . 'TITRE' . 2 = 'MOT' 'deplacements en X' ;\n    'DESS' (EVOL1 'ET' EVOL2 'ET' EVOL3 'ET' EVOL4) 'LOGO' 'LEGE' TAB1 \n           'TITR' 'D\u00e9placement harmonique : X_{\\W}(t) = sin(\\W t)'\n           'TITX' 't(s)'  'POSX' 'CENT'\n           'TITY' 'X (m)' 'POSY' 'CENT'\n           'GRIL' 'POIN' 'GRIS';\n           \n           \n     Autres exemples : dessin.dgibi\n     ",
  },
  {
    name: "DESTRA",
    url: "DESTRA",
    documentation:
      "$$$$ DESTRA   NOTICE  CHAT      11/09/12    21:15:51     7124           \n                                             DATE     11/09/12\n\n\n Procedure DESTRA                           Voir aussi : TRACHIS DESS\n ----------------                                        TRACHIT  NTAB  \n   DESSTRA   TAB1  (TAB2)  (EVOL1 (TAB3)) \n             ('TABMIMA')\n             ( 'LOGX'                      ) \n             ( 'LOGY'                      ) \n             ( 'GRIL'                      ) \n             ( 'XBOR'  XINF XSUP           ) \n             ( 'YBOR'  YINF YSUP           ) \n             ( 'MIMA'                      ) \n             ( 'DATE'                      ) \n             ( 'LOGO'                      ) \n             ( 'SEPA'                      ) \n             ( 'CHOI' | N1 (N2 (N3 ...)) | ) \n             (        | LENTI1           | ) \n             ( 'TITR'  'bla bla...'        ) \n             ( 'TITX'  'blax'              ) \n             ( 'TITY'  'blay'              ) \n             ( 'AXES'                      ) \n             ( 'NCLK'                      )\n             ( 'REGU'                      ) ;\n\n  Objet\n  -----\n    \n    Cette procedure permet de tracer a l'aide de l'operateur DESS\n    les courbes des evolutions contenues dans les tables sorties\n    par TRACHIS ou TRACHIT. Les textes contenus dans TAB1.'LEGEND1'\n    et TAB1.'LEGEND2' sont concatenes et mis en legende.\n    \n    Elle permet egalement de tracer le tableau des maxima et minima\n    pour ces memes evolutions. Dans ce cas, TAB1.'LEGEND1' est le\n    sous-titre du tableau (ex: l'espece dont on observe la\n    concentration), et TAB1.'LEGEND2' l'en-tete de chaque ligne (ex: le\n    temps correspondant a chaque courbe).\n\n  Commentaires\n  -------------\n\n    TAB1    Table issue de TRACHIS ou TRACHIT.\n\n    TAB2    Table optionnelle (Cf. DESS) contenant des specifications\n            de trace qui viendront ecraser (specifs. de tracer) ou\n            completer (titre) les chaines composees automatiquement.\n            Elle est indicee comme la table, et non au fil des\n            sous-evolutions eventuelles.\n\n    EVOL2   evolution supplementaire eventuelle a superposer, avec\n \n    TBDES2  sa table de specifications de tracer (optionnelle, Cf. DESS)\n            indicee de fa\u00e7on standard (suivant les sous-evolutions)\n\n    'TABMIMA' mot-clef indiquant que l'on veut tracer le tableau\n            des valeurs minimale et maximale de chaque evolution.\n            (Cf. NTAB).\n            La premiere colonne du tableau contiendra les textes\n            de TAB1.'LEGEND2'. Le sous-titre de la table est\n            TAB1.'LEGEND1'.\n\n    'CHOI'  suivi des indice ou de la liste des indices de la table\n            TAB1 a prendre en compte (defaut = tous). Cette\n            fonctionnalite ressemble a celle de l'operateur DESS, mais\n            en differe par le fait que DESS considere les\n            sous-evolutions alors que DESTRA considere des evolutions\n            eventuellement complexes.\n\n    'REGU'  mot-clef demandant que les marqueurs soient places a\n            intervalles reguliers (Cf. operateur DESS)\n\n    Tous les autres mot-clefs sont des options generales de DESS\n            (Cf. DESS) les mots possibles sont : 'LOGX' 'LOGY' 'GRIL'\n            'CARR' 'XBOR' 'YBOR' 'MIMA' 'DATE' 'LOGO' 'SEPA' \n            'TITR' 'TITX' 'TITY' 'AXES' 'NCLK'.",
  },
  {
    name: "DETO",
    url: "DETO",
    documentation:
      "$$$$ DETO     NOTICE  CHAT      11/09/12    21:15:51     7124           \n                                             DATE     11/09/12\n\n  Operateur DETO                           Voir aussi :\n    --------------  \n    CHP2 CHP3 CHP4 = DETO CHP1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DETO evalue pour un melange O2/N2/H2/H2O les\nconditions CJ (Chapman-Jouguet), AICC (Adiabatic Isochore Complete\nCombustion) et Zeldovitch-Neuman-Doringts (ZND), la vitesse de CJ\nainsi que le taux d'avancement de la detonation stable.\n\n    Commentaire :\n    _____________\n\n       CHP1   : Objet de type CHPOINT decrivant le melange.\n\n       CHP2   : Objet resultat de type CHPOINT contenant les\n                conditions CJ, la vitesse CJ et le taux\n                d'avancement de la detonation stable.\n\n       CHP3   : Objet resultat de type CHPOINT contenant les\n                conditions ZND.\n\n       CHP4   : Objet resultat de type CHPOINT contenant les\n                conditions AICC.\n\n    Remarques :\n    ___________\n\n    1) Le nom des composantes de CHPO1 sont :\n 'O2', 'N2', 'H2' et 'H2O' : nombre de moles des constituants\n 'P' , 'T' : pression et temperature du melange\n\n    2) Le nom des composantes des CHPO resultats sont :\n 'RCJ'  'TCJ'  et 'PCJ'  : densite, pression et temperature CJ\n 'TAUX' et 'VCJ'         : taux d'avancement et vitesse de CJ.\n 'RZND' 'TZND' et 'PZND' : densite, pression et temperature ZND\n 'RAIC' 'TAIC' et 'PAIC' : densite, pression et temperature AICC\n\n    3) Les unites sont les suivantes : pression en Pa, temperature\n en K, densite en kg/m3 et vitesse en m/s.",
  },
  {
    name: "DETR",
    url: "DETR",
    documentation:
      "$$$$ DETR     NOTICE  CHAT      11/09/12    21:15:51     7124           \n                                             DATE     11/09/12\n                                             \n    Directive DETR                           Voir aussi : OUBL MENA\n    --------------                                        PLAC  \n    DETR | OBJET1 ('GEOMETRIE') ('TOUT') ('ELEMENTAIRE') |;\n         |                                               |\n         | 'TRAC'   ISEG                                 |\n         \n                                OBJET1=ATTACHE,CHPOINT,CONFIGUR\n                                       EVOLUTIO,LISTENTI,LISTMOTS\n                                       LISTREEL,MAILLAGE,MCHAML\n                                       RIGIDITE,SOLUTION\n                                       \n\n    Objet :\n    _______\n\n    Cette directive detruit l'objet OBJET1. Elle ne doit pas etre\nutilisee a priori; son utilisation est interne a CASTEM2000.\n    En presence du mot TRAC et de la valeur ISEG l'operateur \npreviendra s'il doit supprimer le segment ISEG.\n\n    Commentaire :\n    _____________\n\n    Les types d'objets destructibles sont :\n\n    ATTACHE    CHPOINT    CONFIGUR   EVOLUTIO   LISTENTI   SOLUTION\n\n    LISTMOTS   LISTREEL   MAILLAGE   MCHAML     RIGIDITE\n\n\n    Remarque :\n    __________\n\n    Dans le seul cas o\u00ba OBJET1 est de type CHPOINT, il est autorise\nd'indiquer l'option 'GEOMETRIE'. La geometrie sous-jacente a OBJET1 est\nalors detruite, ce qui n'est pas le cas sinon.\n\n    Dans le seul cas o\u00ba OBJET1 est de type MAILLAGE il est autorise\nd'indiquer l'option 'TOUT'. L'objet et ses sous-objets sont alors\ndetruits.\n\n    Dans le seul cas o\u00ba OBJET1 est de type RIGIDITE il est autorise\nd'indiquer l'option 'ELEMENTAIRE'. L'objet est alors detruit\nainsi que les matrices elementaires le composant.\n\n    Dans le cas o\u00ba, OBJET1 est de type EVOLUTION il est autorise\nd'indiquer l'option 'TOUT'. L'objet est alors detruit ainsi\nque les listes de reels le composant.\n\n    Dans le cas o\u00ba OBJET1 est de type SOLUTION les objets CHPOINT\net MCHAML le composant sont egalement detruits (les geometries sous-\njacentes des champs ne le sont pas ).",
  },
  {
    name: "DEVE",
    url: "DEVE",
    documentation:
      "$$$$ DEVE     NOTICE  MB234859  17/10/02    21:15:08     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur DEVERSOIR                      Voir aussi :\n    -------------------  \n    ATTA1 = DEVE  STRU1 STRU2 'GRAV' FLOT1 'RHO' FLOT2 'RAYO' FLOT3\n\n              'ZINI' FLOT4 'HAUT' FLOT5 'EPLA' FLOT6 'EPLB' FLOT7 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DEVERSOIR construit un objet de type ATTACHE qui\ncontient les donnees d'une liaison de type DEVERSOIR.\n\n    La liaison DEVERSOIR est un modele de couplage hydro-elastique\nentre deux collecteurs annulaires limites par une virole mince.\nLe fluide se deverse du collecteur superieur dans le collecteur\ninferieur (les collecteurs sont des lames d'epaisseur faible\npar rapport au rayon).\n\n    Commentaire :\n    _____________\n\n   STRU1 : objet qui contient les points de liaison sur la lame du haut\n            (type STRUCTURE).\n\n    STRU2 : objet qui contient les points de liaison sur la lame du bas\n            (type STRUCTURE).\n            (les points superieurs et inferieurs doivent correspondre)\n\n   'GRAV' : mot-cle suivi de :\n    FLOT1 : acceleration de la pesanteur (type FLOTTANT)\n\n   'RHO'  : mot-cle suivi de :\n    FLOT2 : masse volumique du fluide (type FLOTTANT)\n\n   'RAYO' : mot-cle suivi de :\n    FLOT3 : rayon du deversoir (type FLOTTANT)\n\n   'ZINI' : mot-cle suivi de :\n    FLOT4 : hauteur de fluide au dessus du rebord du deversoir\n            a l'equilibre (type FLOTTANT)\n\n   'HAUT' : mot-cle suivi de :\n    FLOT5 : hauteur de chute (type FLOTTANT)\n\n   'EPLA' : mot-cle suivi de :\n    FLOT6 : epaisseur de la lame fluide superieure (type FLOTTANT)\n\n   'EPLB' : mot-cle suivi de :\n    FLOT7 : epaisseur de la lame fluide inferieure (type FLOTTANT)\n\n    ATTA1 : objet resultat (type ATTACHE)",
  },
  {
    name: "DFDT",
    url: "DFDT",
    documentation:
      "$$$$ DFDT     NOTICE  CHAT      11/09/12    21:15:52     7124           \n                                             DATE     11/09/12\n                                                                                \n     Operateur DFDT                          Voir aussi : NAVI\n\n\n     Syntaxe EQEX (cf EQEX) :\n\n     ... 'EQEX' ... 'OPTI' MOT1 MOT2 MOT3 ('INCOD' MOT4)\n                    'ZONE' MOD2\n                    'OPER' 'DFDT' OBJ1 OBJ2 (OBJ6) OBJ3 (OBJ4) (OBJ5)\n                    'INCO' MOT5 (MOT6)\n\n\n\n\n     Objet :\n     _______\n\n     L'operateur DFDT discretise le terme de derivee en temps d'une\nequation scalaire ou vectorielle.\n\n     Cet operateur est appele par la procedure transitoire EXEC.\nLa syntaxe indiquee permet a l'utilisateur de construire a l'aide\nde l'operateur EQEX les donnees necessaires a l'operateur.\n\n\n     Commentaires :\n     ______________\n                                                                                \n    'OPTI' : Mot cle introduisant les options numeriques de DFDT\n     MOT1  : Type de discretisation spatiale ('EF','VF','EFM1')\n     MOT2  : Type de discretisation temporelle ('IMPL')\n     MOT3  : Type de decentrement ('CENTREE','SUPG','SUPGDC')\n\n    'INCOD': Precise le support de l'inconnue (facultatif)\n     MOT4  : 'CENTRE'\n\n    'ZONE' : Mot cle introduisant les informations geometriques\n     MOD2  : MODEL de sous-type 'NAVIER_STOKES' pour la zone ou\n             s'applique DFDT\n\n    'OPER' : Mot cle introduisant les donnees physiques associees\n             a l'operateur dont le nom suit\n    'DFDT' : Nom de l'operateur\n     OBJ1  : Coefficient multiplicateur\n             (CHPOINT SCAL [CENTRE ou SOMMET] ou FLOTTANT ou MOT)\n     OBJ2  : Inconnue au pas de temps precedant (CHPOINT ou MOT)\n     OBJ3  : Valeur du pas de temps (FLOTTANT ou MOT)\n             Dans le cas particulier ou on indique 'DELTAT' pour\n             OBJ3 DFDT va chercher le pas de temps dans la table\n             PASDETPS calcule automatiquement en explicite par les\n             operateurs NS NSKE ou TSCA.\n     OBJ4  : Champ de vitesse pour decentrement SUPG ou SUPGDC\n             (CHPOINT VECT SOMMET ou POINT ou MOT)\n     OBJ5  : Coefficient de diffusion pour decentrement SUPG ou SUPGDC\n             (CHPOINT SCAL [CENTRE ou SOMMET] ou MOT)\n     OBJ6  : Inconnue 2 pas de temps en arrier, pour la directive BDF2\n             dans EQEX, (CHPOINT ou MOT)\n     OBJ4 et OBJ5 sont facultatifs si MOT3='CENTREE'.\n\n    'INCO' : Mot cle introduisant le nom des inconnues primale et duale\n     MOT5  : Nom de l'inconnue primale\n     MOT6  : Nom de l'inconnue duale\n     Pour l'instant, primale=duale : MOT6 est donc facultatif.\n\n\n     Remarques :\n     ___________\n                                                                                \n     1) Lorsque OBJi est de type MOT, l'operateur utilise le champ\ncontenu dans la table INCO a l'indice MOT indique.\n\n     2) Le support geometrique (spg) des inconnues contient une des\nclasses de points du modele 'NAVIER_STOKES'.Selon la formulation\nchoisie les compatibilites suivantes sont verifiees :\n   - En formulation EF ou EFM1, le spg de la duale contient SOMMET\n   - En formulation VF ou EFMC, le spg de la duale contient CENTRE\n   - Avec MOT4, on peut autoriser le cas CENTRE en EFM1 et en EF, le\nresultat obtenu etant identique a une formulation VF\n\n     3) Le coefficient multiplicateur OBJ1 et la diffusion OBJ5\npeuvent avoir comme spg SOMMET. Dans l'evaluation des termes\nelementaires, ces champs sont moyennes par element.\n\n     4) L'utilisateur-programmeur developpant ses propres procedures\ntransitoire appellera DFDT suivant la syntaxe :\n  B A  =  DFDT TAB1 ;\navec TAB1 : Table de sous type EQEX contenant les informations\n            physiques et numeriques de l'operateur DFDT. Cette\n            table est construite par l'operateur EQEX.\n     A    : Matrice \"masse\" de type MATRIK\n     B    : Second membre de type CHPO. Le nom de l'inconnue duale\n            MOT6 etant le nom de la composante du CHPO cree. ",
  },
  {
    name: "DFER",
    url: "DFER",
    documentation:
      "$$$$ DFER     NOTICE  CHAT      11/09/12    21:15:52     7124           \n                                             DATE     11/09/12\n                                           \n  Operateur DFER                           Voir aussi :\n    --------------  \n      CHP1 =  DFER  GEO1   GEO2   (FLOT1) ;\n                                 \n\n    Objet :\n    _______\n\n    L'operateur DFER fabrique un chpoint de densite de presence de fers dans un\n    maillage massif. \n\n      Commentaire :\n      _____________\n\n      GEO1   : objet maillage constitue d'elements massifs. \n\n      GEO2   : objet maillage constitue des elements seg2 ou seg3\n      \n      FLOT1  : flottant donnant la distance d'influence d'un fer ( par defaut\n               FLOT1 vaut 0.3)  \n\n      CHP1  : objet de type chpoint representant la densite de fers",
  },
  {
    name: "DFOU",
    url: "DFOU",
    documentation:
      "$$$$ DFOU     NOTICE  CHAT      11/09/12    21:15:52     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur DFOURIER                        Voir aussi :\n    -------------------  \n      CH2 = DFOU  CH1 FLOT1 ;\n\n\n    Objet :\n    _______\n\n    Dans le cas d'une analyse en serie de Fourier, l'operateur DFOURIER\ncalcule les valeurs du champ CH1 pour un angle donne FLOT1.\n\n    Commentaire :\n    _____________\n\n      CH1   : champ de forces ou de deplacements (type CHPOINT) ou\n              champ de contraintes ou de deformations (type MCHAML).\n\n      FLOT1 : valeur de l'angle en degres (type FLOTTANT).\n\n      CH2   : champ resultat, du meme type que CH1.",
  },
  {
    name: "DGSI",
    url: "DGSI",
    documentation:
      "$$$$ DGSI     NOTICE  MB234859  17/10/02    21:15:08     9577           \n                                             DATE     17/10/02\n\n  Operateur DGSI                           Voir aussi :\n     --------------  \n        RES = DGSI OBJ1 <'AXI' i> <'IMPR'> ;\n\n\n\n     OBJET :\n\n     Calcul de la matrice masse diagonale ---> Creation d'un CHAMPOIN\n     D0=NI  ( MASSE LUMPE )     \n\n    OBJ1 : objet MAILLAGE\n\n    AXI  : Calcule en coordonee cylindrique 2D\n    i=1    axe de symetrie ox\n    i=2    axe de symetrie oy",
  },
  {
    name: "DIAD",
    url: "DIAD",
    documentation:
      "$$$$ DIAD     NOTICE  CHAT      11/09/12    21:15:53     7124           \n                                             DATE     11/09/12\n\n    Operateur DIAD                           Voir aussi : MULTIDEC\n    --------------                                        MULTIREC  \n    LIST1  = DIAD (MOT1) LIST2  ;\n                                     MOT1='DIRE','INVE','IVIN'\n\n\n    objet :\n    -------\n\n    Si MOT1='DIRE'(cte), l'operateur DIAD construit LIST1 en supprimant\n    une valeur sur deux de LIST2 (type LISTREEL). Le premier point est\n    toujours conserve.\n\n    Si MOT1='INVE'(rse), l'operateur DIAD construit LIST1 en inserant\n    un zero entre chaque point de LIST2. L'insertion s'effectue toujours\n    apres le premier point et longueur(LIST1)=2*longueur(LIST2) si\n    longueur(LIST2) est pair ou 2*longueur(LIST2)-1 si longueur(LIST2)\n    est impair.\n\n    Si MOT1='IVIN', l'operateur DIAD construit LIST1 en inserant entre\n    chaque point la moyenne de ses deux voisin, avec les memes regles de\n    longueur que celles indiquees au point precedant.\n\n    options :\n    ---------\n\n    MOT1 vaut 'DIRE', 'INVE' ou 'IVIN'. Le defaut est 'DIRE'.",
  },
  {
    name: "DIAG",
    url: "DIAG",
    documentation:
      "$$$$ DIAG     NOTICE  CHAT      11/09/12    21:15:53     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur DIAGNEG                         Voir aussi :\n    -----------------  \n    N1 = DIAGNEG RIG1 ;\n\n\n    Objet :\n    _______\n\n   L'operateur DIAGNEG donne le nombre de valeurs propres negative d'un\nmatrice de rigidite (correction faite des multiplicateurs de Lagrange).\n\n    Commentaire :\n    _____________\n\n    RIG1  : matrice de rigidite (type RIGIDITE)\n\n    N1    : nombre de valeurs propres negatives (type ENTIER)",
  },
  {
    name: "DIFF",
    url: "DIFF",
    documentation:
      "$$$$ DIFF     NOTICE  PASCAL    20/12/02    21:15:00     10798          \n                                             DATE     20/12/02\n\n    -------------------------------\n\n    OBJ1 = DIFF  OBJ2 OBJ3 ;\n\n\n    Operateur DIFFERENCE SYMETRIQUE           Voir aussi : ET INTE\n    Objet :\n    _______\n\n    L'operateur DIFF construit la difference symetrique entre deux objets.\n\n\n    Commentaire :\n    _____________\n\n    OBJi : objets de type MAILLAGE, MMODEL ou RIGIDITE.\n\n\n    Remarque 1 : a DIFF b = ( a union b) - (a inter b)\n    ____________\n\n\n    Remarque 2 : pour les objets MMODEL, l'operation est faite\n    ____________ sur les sous-zones. Si l'operation est menee\n                 dans le but d'obtenir un modele portant sur les\n                 zones geometriques non communes aux deux modeles,\n                 alors il convient d'operer sur les maillages.\n           ",
  },
  {
    name: "DIFFANIS",
    url: "DIFFANIS",
    documentation:
      "$$$$ DIFFANIS NOTICE  CHAT      11/09/12    21:15:53     7124           \n                                             DATE     11/09/12\n\n  Operateur DIFFANIS                      Voir aussi :\n     ------------------  \n     newdiff = DIFFANIS MateDiff (typdi) (ANISO) ;\n\n\n\n    APPELE PAR TRANSGEN - PAS POUR UTILISATEUR\n\n    -------------------------------------------------------------\n    ---------MISE A JOUR DE LA DISPERSIVITE----------------------\n    -------------------------------------------------------------\n\n  |-----------------------------------------------------------------|\n  | Generalites : DIFFANIS remet un teneur de diffusion isotrope avec\n  |               un format general anisotrope K11 K21 etc ....     |\n  |               en remplissant avec des 0 les composantes vides   |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | ANISO      LOGIQUE VRAI SI ANISOTROPE, FAUX SINON               |\n  |                                                                 |\n  | MateDiff : Tenseur de diffusion  (type iso, ..) champoint       |\n  |             de composante 'K' en isotrope, 'K11', 'K21',        |\n  |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n  |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n  |                                                                 |\n  | typdi   si 'EFMH' calcul particulier\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | newdiff  : matrice de diffusion identique a Matediff mais ecrite|\n  |            sous la forme d'un tenseur si elle etait isotrope a  |\n  |            une composante K (cette composante est alors reportee|\n  |            a l'identique sur K11, K22 et K33)                   |\n  |                                                                 |\n  |                                                                 |\n  ******************************************************************",
  },
  {
    name: "DIME",
    url: "DIME",
    documentation:
      "$$$$ DIME     NOTICE  JC220346  12/03/13    21:15:00     7307           \n                                             DATE     12/03/13\n\n    Operateur DIMENSION                      Voir aussi : DIMN\n    -------------------  \n    ENTI1 = DIMENSION OBJET1 (MOT);\n                                   OBJET1=LISTREEL,LISTENTI,LISTMOTS\n                                          LISTCHPO,EVOLUTIO,RIGIDITE\n                                          SOLUTION,TABLE   ,CHARGEME\n                                          NUAGE\n                                          \n\n    Objet :\n    _______\n\n    L'operateur DIMENSION fournit la dimension ENTI1 (type ENTIER)\n    d'un objet OBJET1.\n\n    Commentaire :\n    _____________\n\n\n______________________________________________________________\n|  OBJET1  |  Sous-type  |         Signification             |\n|----------|-------------|-----------------------------------|\n| MOT      |             |  nombre de caract\u00e8res             |\n|__________|_____________|___________________________________|\n| LISTREEL |             |  nombre de FLOTTANTs contenus     |\n|__________|_____________|___________________________________|\n| LISTENTI |             |  nombre de ENTIERs contenus       |\n|__________|_____________|___________________________________|\n| LISTMOTS |             |  nombre de MOTs contenus          |\n|__________|_____________|___________________________________|\n| LISTCHPO |             |  nombre de CHPOINTs contenus      |\n|__________|_____________|___________________________________|\n| EVOLUTION|             |  nombre de courbes contenues      |\n|__________|_____________|___________________________________|\n|          |             |  nombre d'inconnues du            |\n| RIGIDITE |             |  probleme physique associe        |\n|__________|_____________|___________________________________|\n|          |   MODE      |  nombre de modes                  |\n|          |_____________|___________________________________|\n| SOLUTION |  SOLUSTAT   |  nombre de solutions statiques    |\n|          |_____________|___________________________________|\n|          |  DYNAMIQUE  |  nombre d'instants                |\n|__________|_____________|___________________________________|\n| TABLE    |             |  nombre d'objets contenus         |\n|__________|_____________|___________________________________|\n| CHARGEME |             |  nombre d'objets contenus         |\n|__________|_____________|___________________________________|\n|          |   'COMP'    |  nombre de variable (composante)  |\n| NUAGE    |   'UPLE'    |  nombre de uplets (elements)      |\n|__________|_____________|___________________________________|",
  },
  {
    name: "DIMN",
    url: "DIMN",
    documentation:
      "$$$$ DIMN     NOTICE  MB234859  21/12/01    21:15:01     11203          \n                                             DATE     21/12/01\n\n    Operateur DIMNOYAU                       Voir aussi : DIME\n    ------------------  \n    ENTI1 = DIMNOYAU RIG1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur DIMNOYAU donne la dimension ENTI1 (type ENTIER)\ndu noyau de la matrice RIG1 (type RIGIDITE).\n\n    Remarque :\n    __________\n\n    La matrice RIG1 doit avoir ete factorisee au prealable.",
  },
  {
    name: "DIRI",
    url: "DIRI",
    documentation:
      "$$$$ DIRI     NOTICE  AM        16/09/05    21:15:01     9062           \n                                             DATE     16/09/05\n\n    Operateur DIRI                           Voir aussi : IDENTI\n    --------------   \n   EV1 TAB1 TAB2 = DIRI  UNIT TMAX NB  ....\n  \n                | 'EUROCODE'  RM  ROH  S  FCM   ;\n          ....  |\n                | 'BPEL'      RM  ROH  FC28 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur DIRI identifie les parametres du modele de MAXWELL\n\n    Commentaire :\n    _____________\n       \n   UNIT :  unite de temps du calcul (type MOT) a choisir\n           parmi SECONDE, JOUR (option par defaut), ou ANNEE\n\n   TMAX :  duree maximale du calcul (type FLOTTANT)\n\n   NB  :   nombre de branches visqueuses du modele de Maxwell\n           (type ENTIER). La branche elastique porte le numero 0\n\nSi l'identification est faite a partir de la courbe de fluage\nl'EUROCODE 2 (option par defaut), il faut donner en plus:\n\n   RM  :   rayon moyen de la piece en metres (type FLOTTANT)\n\n   ROH :   pourcentage d'humidite (0.<roh<100.)  (type FLOTTANT)\n\n   S   :   coefficient caracteristique de la nature du ciment\n           (type FLOTTANT)\n\n   FCM :   resistance moyenne du beton en compression, exprimee\n           en MPa (type FLOTTANT)\n\n\nSi l'identification est faite a partir de la courbe de fluage\ndu BPEL, il faut donner en plus:\n\n   RM  :   rayon moyen de la piece en metres (type FLOTTANT)\n\n   ROH :   pourcentage d'humidite (0.<roh<100.)  (type FLOTTANT)\n\n   FC28 :  resistance moyenne  du beton en compression a 28 jours,\n           exprimee en MPa (type FLOTTANT)\n\n  \n   EV1  :  Module d'Young (exprime en Pa) du materiau fonction\n           du temps (exprime en unite de temps donnee dans UNIT)\n           (type EVOLUTIO)\n\n   TAB1 : table indicee par des entiers et contenant pour chaque\n          branche de la chaine, l'inverse du temps de relaxation\n          dans l'unite inverse de l'unite de temps donnee dans UNIT\n\n   TAB2 : table indicee par des entiers et contenant pour chaque\n          branche de la chaine, le module (exprime en Pa) en\n          fonction du temps (exprime dans l'unite de temps donnee\n          dans UNIT)",
  },
  {
    name: "DIVU",
    url: "DIVU",
    documentation:
      "$$$$ DIVU     NOTICE  AURI      99/06/02    21:15:50     3578           \n                                             DATE     99/06/02\n          \n  Op\u00e9rateur DIVU                            Voir aussi :\n    --------------  \n    CHP2 = DIVU MODE1  CHP1 CHEL1 ;\n\n    Objet :\n    _______\n\n    L'op\u00e9rateur DIVU calcul la divergence du champ de vitesse en\nchaque \u00e9l\u00e9ment. Ce champ est calcul\u00e9 \u00e0 partir des d\u00e9bits aux faces\ndans le cadre de la r\u00e9solution des \u00e9quations de DARCY par une m\u00e9thode\nd'\u00e9l\u00e9ments finis mixtes hybrides.\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet mod\u00e8le (type MMODEL) d\u00e9crivant la formulation\n                utilis\u00e9e. On attend une formulation DARCY (cf. MODE).\n\n       CHP1   : Objet de type CHPOINT contenant le d\u00e9bit \u00e0 travers\n                chaque face. Le support g\u00e9om\u00e9trique de ce champ est\n                le MAILLAGE des points FACE . Le nom de\n                la composante du CHPOINT est FLUX (cf. HDEB).\n\n       CHEL1  : Objet de type MCHAML contenant pour chaque \u00e9l\u00e9ment le\n                sens de la normale \u00e0 chaque face (cf. KNRF).\n\n       CHP2   : Objet r\u00e9sultat de type CHPOINT contenant la divergence\n                du champ de vitesse pour chaque \u00e9l\u00e9ment. Le support\n                g\u00e9om\u00e9trique de ce champ est le MAILLAGE des points\n                CENTRE. Le nom de la composante du CHPOINT est SCAL.",
  },
  {
    name: "DMMU",
    url: "DMMU",
    documentation:
      "$$$$ DMMU     NOTICE  CHAT      11/09/12    21:15:54     7124           \n                                             DATE     11/09/12\n\n    Operateur DMMU                           Voir aussi : MHYB BMTD\n    --------------                                        DMTD         \n   CHP3 = 'DMMU'  TAB1 RIG1  CHP1 (CHP2) ;\n\n\n    Objet:\n    ------\n   Cet operateur est utilise dans le cadre d'une formulation\n   elements finis mixtes hybrides.\n   Soit D la matrice divergence, pour un element.\n   D est une matrice ligne dont tous les termes sont 1.\n   Soit M une matrice elementaire de diffusion.\n   Soit U la matrice elementaire de convection.\n   Soit B la matrice de correspondance entre les numeros de face\n    locaux et globaux.\n   Cet operateur va calculer pour chaque element le produit:\n                    -1   t                  -1 t\n                D (M  -U) B  CHP1   ou   D M    B  CHP1\n\n   Commentaires:\n   ------------\n\n\n   TAB1  : Objet de type TABLE et de sous type DOMAINE contenant\n           les maillages et les connectivites.(cf DOMA)\n\n\n   RIG1  : Objet rigidite de sous type DARCY contenant les\n           matrices  elementaires inverses pour les elements\n           hybrides . Cet objet rigidite est le resultat de MHYB .\n\n   CHP1  : Objet de type CHPOINT, dont le support geometrique est\n           le maillage TAB1.FACE.\n\n   CHP2  : Objet de type CHPOINT contenant le flux a travers chaque\n           face de la vitesse. Le support geometrique de ce champ est\n           TAB1.FACE . Le nom de la composante de ce CHPOINT est FLUX.\n           A defaut, on ne tient pas compte de la vitesse.\n\n   CHP3  : Objet de type CHPOINT  dont le support geometrique est\n           le maillage TAB1.CENTRE, les noms des composantes\n           sont ceux de CHP2",
  },
  {
    name: "DMTD",
    url: "DMTD",
    documentation:
      "$$$$ DMTD     NOTICE  CHAT      11/09/12    21:15:55     7124           \n                                             DATE     11/09/12\n\n   Operateur DMTD                            Voir aussi : MHYB BMTD\n   ---------------                                        DMMU       \n   CHP1 = 'DMTD' MODL1 RIG1  ;\n\n\n   Objet :\n   ------\n   Cet operateur est utilise dans le cadre d'une formulation\n   elements finis mixtes hybrides.\n   Soit D la matrice divergence, pour un element.\n   D est une matrice ligne dont tous les termes sont 1.\n   Soit M une matrice elementaire de diffusion.\n   Cet operateur va calculer pour chaque element le terme:\n                                -1 t\n                             D M    D\n   Ce qui se traduit par la somme des termes de chaque matrice de\n   Darcy elementaire affectee au centre de chaque element\n\n  Commentaires :\n  -------------\n\n   MODL1 : Objet modele (type MMODEL) decrivant la formulation\n           utilisee. On attend une formulation DARCY (cf. MODE).\n\n   RIG1  : Objet rigidite de sous type DARCY contenant les\n           matrices  elementaires inverses pour les elements\n           hybrides . Cet objet rigidite est le resultat de MHYB .\n\n   CHP1  : Objet de type CHPOINT ayant une composante dont le nom est\n           SCAL. Son support geometrique est le maillage CENTRE.",
  },
  {
    name: "DOMA",
    url: "DOMA",
    documentation:
      "$$$$ DOMA     NOTICE  CHAT      11/09/12    21:15:55     7124           \n                                             DATE     11/09/12\n\n  Operateur DOMA                           Voir aussi :\n    --------------  \n    RES  = DOMA MOD1 MOT  ;\n\n\n\n\n\n    Objet : Cet operateur permet de restituer les informations\n    _____   crees dans la table de preconditionnement du modele\n            'NAVIER_STOKES' ou 'EULER'\n\n\n    Commentaires :\n    ______________\n\n    MOD1    : Objet de type MMODEL  'NAVIER_STOKES' ou 'EULER'\n    MOT     : Objet de type MOT a choisir dans la liste ci-dessous.\n\n    RES     : objet resultat\n\n\n                              Objet restitue\n      Mot cle             Type          Commentaires\n      MAILLAGE          MAILLAGE      Maillage de base pour la\n                                             discretisation\n      QUAF              MAILLAGE      Maillage de QUAF ayant servi\n                                       a construire le modele\n      MACRO             MAILLAGE      (Discretisation MACRO)\n                                       Maillage MACRO\n\n      SOMMET            MAILLAGE      Support geometrique (SPG)\n                                      des points SOMMET\n                                      (DDLs de base de l'element)\n\n      CENTRE            MAILLAGE      SPG des points CENTRE\n\n      FACE              MAILLAGE      SPG des points FACE\n\n      CENTREP1          MAILLAGE      SPG des points CENTREP1\n                                      (pression non conforme P1)\n\n      CENTREP0          MAILLAGE      SPG des points CENTREP0\n                                      (pression non conforme P0)\n\n      MSOMMET           MAILLAGE      SPG des points sommets stricts\n                                      i.e. sans les milieux des aretes\n                                      ni les faces ni la bulle.\n                                      (pression P1 ou Q1 conforme)\n\n      FACEL             MAILLAGE      connectivites (SEG3)\n                                      ELEMENT->FACE->ELEMENT\n\n      FACEL2            MAILLAGE      idem precedent partitionne\n                                      les SEG2 correspondent aux\n                                      faces frontieres\n      FACEP             MAILLAGE      connectivites FACE->SOMMET\n                                      (de la face)\n      ELTFA             MAILLAGE      connectivites ELEMENT->FACE\n\n      MMAIL             MAILLAGE      connectivites correspondantes\n                                      aux MSOMMET\n\n      ENVELOPP          MAILLAGE      connectivites QUAF orientees\n                                      de l'enveloppe (resp contour)\n\n      MAILFACE          MAILLAGE      Maillage contenant les faces\n                                      du maillage de QUAF ayant\n                                      servi a construire le modele\n\n      ARETE             MAILLAGE      Maillage contenant les aretes\n                                      du maillage de QUAF ayant\n                                      servi a construire le modele\n\n   Les mots cles ci-dessous donnent des informations geometriques\n    stockees sous forme de CHPOINT\n\n      VOLUME     CHPOINT  SCAL CENTRE contenant le volume des elements\n      DIAMAX     CHPOINT  SCAL CENTRE contenant le diametre max\n      DIAMIN     CHPOINT  SCAL CENTRE contenant le diametre min\n      NORMALEV   CHPOINT  VECT SOMMET contenant les composantes de la\n                      normale aux sommets pour l'ENVELOPPE\n      NORMALE    CHPOINT  VECT FACE   contenant les composantes de la\n                                      normale associee aux faces des\n                                      elements\n      SURFACE    CHPOINT  SCAL FACE   contenant la surface des faces\n      ORIENTAT   CHAMELEM contenant l'orientation des faces d'un\n           element par rapport aux normales definis precedemment.\n\n      XXDIAGSI   CHPOINT  SCAL SOMMET matrice masse diagonale pour les\n                 points SOMMET.\n\n      XXVOLUM    CHPOINT  SCAL CENTRE matrice masse diagonale pour les\n                 points CENTRE.\n\n      XXCTREP1   CHPOINT  SCAL CENTRE matrice masse diagonale pour les\n                 points CENTREP1.\n\n      XXCTREP0   CHPOINT  SCAL CENTRE matrice masse diagonale pour les\n                 points CENTREP0.\n\n      XXMSOMME   CHPOINT  SCAL CENTRE matrice masse diagonale pour les\n                 points MSOMMET.\n\n     Les valeurs de la matrice masse diagonale donnent le Volume d'un\n     element entourant un point. La somme de ce CHPOINT donne le volume\n     du domaine. Ce CHPOINT eleve a la puissance 1/IDIM donne l'echelle\n     de longueur moyenne des elements entourant un point.\n\n\n   l'instruction :\n   TAB = DOMA MOD1 'TABLE' ;\n   permet de recuperer le contenu de la table de\n   preconditionnement dans l'objet TAB de type TABLE.\n\n  \n   CAS MODELE 'EULER'.\n   ___________________\n\n   Dans le cas du modele 'EULER', il faux d'abord creer la table de\n   connectivites, i.e. :\n\n   TAB1 = 'DOMA' MMODE 'VF' ;\n\n   ou \n\n   TAB1 est la table des connectivites\n   MMODE est le modele EULER.\n\n   Attention: dans ce cas particulier l'operateur DOMA cree les points \n   centres des faces et les points centres des elements.",
  },
  {
    name: "DONCHI1",
    url: "DONCHI1",
    documentation:
      "$$$$ DONCHI1  NOTICE  CHAT      11/09/12    21:15:55     7124           \n                                             DATE     11/09/12\n                                             \n    Methode DON CHI1                          Voir aussi : CHI1 LINVCOMP\n    ---------------                                       OBJE  LIESPECE  \n                                                          LIRSOSO  \n     OBJ1  = OBJET DONCHI1  ;\n\n\n        Objet\n        -----\n\n     La methode DONCHI1 permet de creer un objet de type objet et de\n     CLASSE DONCHI1. Un tel objet contient toutes les donnees de CHI1.\n     Cette methode permet de tester la coherence des donnees lors de\n     l'ecriture.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a DONCHI1 sont\n\n       GIDEN       GCHXMX       GBDD       GCLIM       GNVCOMP\n       GNVESP      GNVSOSO      GECHANGE       GTEMPERA       ACCES\n\n       GIDEN  Charge le contenu de l'indice IDEN, un LISTENTI contenant\n                 les identifiants (dans la base de donnees), des\n                 composants chimiques a utiliser.\n                    appel:  OBJ1%GIDEN   LENT1 ;\n\n       GCHXMX Charge le contenu de l'indice CHXMX, un LISTENTI contenant\n                les identifiants des mineraux a retenir. A defaut on\n                conserve tous les mineraux dont les composants sont\n                utilises.\n                    appel:  OBJ1%GCHXMX  LENT1 ;\n\n       GBDD   Charge le contenu de l'indice BDD, un mot servant a\n                preciser le format de la base de donnees. 'STRASBG' ou\n                'MINEQL' . L'option par defaut est 'MINEQL'.\n             'MINEQL' correspond a la base de donnees standard de Mineql.\n             'STRASBG' correspond a la base de donnees issue de Kindis.\n              Les formats sont decrits dans le rapport DMT/94/597.\n                    appel:  OBJ1%GBDD  MOT1 ;\n\n       GCLIM    Charge le contenu de l'indice CLIM, on doit donner un\n                 mot ( TYP3 , COMP3, TYP4, TYP5, TYP6 ) et un LISTENTI.\n\n                    appel:  OBJ1%GCLIM  MOT1  LENT1 ;\n            -----------------------------------------------------------|\n            Mot  |                 LISTENTI                            |\n            -----------------------------------------------------------|\n            TYP3 | identifiants des especes dont on veut imposer l'    |\n                 | activite                                            |\n            -----------------------------------------------------------|\n            COMP3| pour chacune des especes de TYP3 l'identifiant du   |\n                 | composant immobile ou 0. Si TYP3 ne contient que des|\n                 | especes simples cette donnee est inutile.           |\n            -----------------------------------------------------------|\n            TYP4 |   identifiants des especes precipitees.             |\n            -----------------------------------------------------------|\n            TYP5 | identifiants des especes en solution, pouvant etre  |\n                 | precipites.                                         |\n            -----------------------------------------------------------|\n            TYP6 | identifiants des especes non prises en compte.      |\n            -----------------------------------------------------------|\n\n       GNVCOMP Charge le contenu de l'indice NVCOMP, un nombre et le\n                 nom d'un objet de CLASSE LINVCOMP ( cf LINVCOMP)\n                    appel:  OBJ1%GNVCOMP num1 OBJ2 ;\n\n       GNVESP  Charge le contenu de l'indice NVESP, un nombre et le\n                 nom d'un objet de CLASSE LIESPECE ( cf LIESPECE)\n                    appel:  OBJ1%GNVESP num1 OBJ2 ;\n\n       GNVSOSO Charge le contenu de l'indice NVSOSO, un nombre et le\n                 nom d'un objet de CLASSE LIRSOSO ( cf LIRSOSO)\n                    appel:  OBJ1%GNVSOSO num1 OBJ2 ;\n\n       GECHANGE Charge le contenu de l'indice ECHANGE, un LISTENTI.\n                  contenant les identifiants des sites de surface\n                  par echange ionique.\n                    appel:  OBJ1%GECHANGE  LENT1 ;\n\n       GTEMPERA Charge le contenu de l'indice TEMPERATURE, un mot 'OUI'\n                 'NON' ou entier (1 ou 2).\n              'NON' on ne tient pas compte de la temperature. C'est \n              l'option par defaut.\n            - Cas de la base STRASBG.\n              Si 'OUI' on prendra en compte les effets thermiques sur \n              le logk, par interpolation de donnees tabulees.\n            - Cas de la base MINEQL.\n               1 ou 'OUI' on utilise la premiere approximation d'Ulich\n                    K(T)=K0+f(H(T)-H(T0))\n\n               2 on utilise la deuxieme approximation d'Ulich \n                    K(T)=K0+f((H(T)-H(T0)),(Cp(T)-Cp(T0)))\n\n                    appel:  OBJ1%GTEMPERA  MOT1 ;\n\n       ACCES   permet d'acceder au contenu des indices charges par les\n               methodes precedentes.\n\n               appel:  pour GIDEN GCHXMX GBDD GECHANGE  GTEMPERA\n                          LENT1= DONCHI1%ACCESS  METH1 ;\n\n                    pour  GNVCOMP GNVESP  GNVSOSO  on peut preciser\n                    l'indice.\n                          LENT1= DONCHI1%ACCESS  METH1 num1 ;\n                      ou  TAB1 =DONCHI1%ACCESS  METH1  ;\n\n                   pour GCLIM on peut preciser les memes mots qu'en\n                   entree .\n                        LENT1= DONCHI1%ACCESS METH1 MOT1 ;\n                   ou   LENT1= DONCHI1%ACCESS  METH1 ;",
  },
  {
    name: "DONCHI2",
    url: "DONCHI2",
    documentation:
      "$$$$ DONCHI2  NOTICE  CHAT      11/09/12    21:15:55     7124           \n                                             DATE     11/09/12\n                                             \n    Methode DON CHI2                          Voir aussi : CHI2\n    ---------------                                       OBJE  \n     OBJ1  = OBJET DONCHI2  ;\n\n\n        Objet\n        -----\n\n     La methode DONCHI2 permet de creer un objet de type objet et de\n     CLASSE DONCHI2. Un tel objet contient les donnees chimiques\n     de CHI2. Cette methode permet de tester la coherence des donnees\n     lors de l'ecriture.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a DONCHI2 sont\n\n     GLOGC    GTOT    GFIONI    GNTY4    GTEMPE    GCLIM    ACCES\n\n\n      GLOGC charge le contenu de l'indice LOGC.\n             C' est un objet de type CHPOIN qui possede une composante\n             par composant chimique. Pour chaque composant chimique il \n             contiendra le log de l'estimation de l'espece simple\n             associee. Le nom de ces composantes est un mot de 4 \n             caracteres, forme par X suivi eventuellement de 0 ou 00 et\n             du numero identifiant le composant chimique.\n              Appel : OBJ1%GLOGC CHPO1 ;\n\n      GTOT charge le contenu de l'indice TOT.\n            C' est un objet de type CHPOIN qui possede une composante\n             par composant chimique. Pour chaque composant chimique il\n             contiendra la concentration totale  (ou analytique) ( en\n             solution + mineraux). Le nom de ces composantes est un mot\n             de 4 caracteres, forme par X suivi eventuellement de 0 ou \n             00 et du numero identifiant le composant chimique.\n              Appel : OBJ1%GTOT  CHPO1 ;\n\n      GFIONI charge le contenu de l'indice FIONI.\n             Objet de type CHPOIN ayant une composante scalaire, et\n             contenant une estimation de la force ionique en chaque \n             point du maillage.\n              Appel : OBJ1%GFIONI CHPO1 ;\n\n      GNTY4 charge le contenu de l'indice NTY4.\n             Objet de type CHPOIN ayant une composante pour chaque\n             espece de precipite potentiel. En chaque point du maillage\n             on indiquera si le mineral est precipite ( =1) ou non( =0).\n              Appel : OBJ1%GNTY4  CHPO1 ;\n\n      GTEMPE charge le contenu de l'indice TEMPE.\n            Objet de type CHPOIN contenant la temperature.\n              Appel : OBJ1%GTEMPE CHPO1 ;\n\n      GCLIM  charge le contenu de l'indice CLIM.\n             Valeur de l'activite imposee des especes de type 3.\n             Objet de type CHPOIN ayant une composante pour chaque\n             espece dont l'activite est imposee.Les noms des composantes\n             sont ceux figurant dans la liste TAB1.IDEN.NOMTYP3.\n             ( TAB1 etant la table issue de CHI1)\n              Appel : OBJ1%GCLIM CHPO1 ;\n\n      ACCES  permet d'acceder au contenu des indices charges par les\n            metodes precedentes.\n              Appel : CHPO1 = OBJ1%ACCES METH1 ;",
  },
  {
    name: "DREXUS",
    url: "DREXUS",
    documentation:
      "$$$$ DREXUS   NOTICE  CHAT      11/09/12    21:15:56     7124           \n                                             DATE     11/09/12\n\n  Procedure DREXUS                         Voir aussi : \n    -----------------                         \n\n\n\n  'DREXUS' ETAB ;\n \n  en entree :\n\n   ETAB . 'MODELE'                : objet modele  \n   ETAB . 'GRANDES_DEFORMATIONS'  : option : logique \n   ETAB . 'CARACTERISTIQUES'      : chamelem de caracteristiques\n   ETAB . 'LIAISONS'              : conditions aux limites en depl\n   ETAB . 'CHARGEMENT'            : objet chargement \n   ETAB . 'VITESSE_INITIALE'      : champ par point\n   ETAB . 'TEMPS_SORTIE'          : liste de reels des temps a stocker\n   ETAB . 'FREQUENCE_SORTIE'      : frequence de sortie (entier)\n   ETAB . 'NPASMAX'               : nombre maximal de pas de temps\n   ETAB . 'IMPACT' . 'MAITRE'     : ligne maitre\n   ETAB . 'IMPACT' . 'ESCLAVE'    : ligne esclave\n   ETAB . 'IMPACT' . 'NEZ'        : nez esclave poi1 (plat,cone,hemi)\n   ETAB . 'IMPACT' . 'LARGEUR'    : largeur ou rayon du nez\n   ETAB . 'IMPACT' . 'ANGLE'      : angle / vecteur (nez conique)\n   ETAB . 'IMPACT' . 'VECTEUR'    : vecteur definissant l'axe (avec nez)\n   ETAB . 'IMPACT' . 'MASSE'      : masse du poi1\n   ETAB . 'TEMPS_INITIAL'         : option : temps initial (0. par defaut) \n   ETAB . 'COEFF_STABILITE'       : option : coeff multi pdt (0.5 par def)\n   ETAB . 'PAS_TEMPS'             : option : pas de temps (reel)\n   ETAB . 'FREQ_MENAGE'           : option : frequence de menage (50 par def)\n   ETAB . 'AMORTISSEMENT'         : option : matrice d'amortissement\n\n\n\n  en sortie :\n\n   ETAB . 'NPAS' . N                      : No du pas (entier)\n   ETAB . 'TEMPS' . N                     : Instant (reel)\n   ETAB . 'DEPLACEMENTS' . N              : champoint deplacements\n   ETAB . 'VITESSES' . N                  : champoint vitesse\n   ETAB . 'ACCELERATIONS' . N             : champoint accelerations\n   ETAB . 'FORCES_EXTERIEURES' . N        : champoint forces externes\n   ETAB . 'CONTRAINTES' . N               : chamelem de contraintes\n   ETAB . 'VARIABLES_INTERNES' . N        : chamelem des variables \n                                            internes  \n   ETAB . 'DEFORMATIONS_INELASTIQUE' . N  : chamelem des deformations \n                                            inelastiques \n\n    Objet :\n    _______\n \nLa procedure DREXUS permet de realiser un calcul mecanique dynamique,\nen formulation Lagrangienne, avec un algorithme explicite dit des \n\"differences centrees\". \n\n  -Le comportement du materiau peut etre non lineaire. \n  -Il est possible  de prendre en compte les grands deplacements. \n   On utilise dans ce cas un modele hypoelastique, associe a la \n   derivee de Truesdell des contraintes de Cauchy.\n  -Il est possible de modeliser des impact (en 2D). Il faut alors \n   definir deux lignes de contact: une maitre et une esclave.  \n   (cf 'IMPO' 'IMPA' ).\n  -Pour imposer des deplacement non nuls il faut fournir dans le\n   chargement la derivee seconde du second membre de\n   la condition sur le deplacement. \n \nLe calcul est effectue avec un pas de temps constant jusqu'a atteindre\nle nombre maximal de pas specifie ou bien le temps final des temps de\nsortie. Les resultats sont stockes pour tous les temps specifies dans\nla liste des temps de sortie. \n\nL'algorithme d'integration en temps se resume comme suit\n\n 0- Deplacement  Un  | \n    Vitesse      Vn  |-   connus a l'instant n\n    Acceleration An  |\n\n 1- Calcul du deplacement au temps n+1/2\n   \n     Un+1 = Un + dt.Vn + (dt.dt/2).An\n\n 2- Calcul des forces externes et internes au temps (n+1)\n\n     Fn+1 = Fn+1(ext) - div(Sigma(n+1)) - Famortissement(Vn+1/2)\n\n 3- Calcul des accelerations au temps avec prise en compte des \n    conditions aux limites et des impacts.\n\n    M.An+1 = Fn+1\n   \n 4- Calcul des vitesses au temps n+1\n \n    Vn+1 = Vn + dt/2.(An + An+1) \n\n\n\n   Commentaire :\n   _____________\n\nLa reprise d'un calcul est automatique a partir de la table sortie\ndu precedent appel a DREXUS.\n\nen entree on utilise une table qui sert a definir les options et \nles parametres du calcul. Les indices de l'objet TAB1 sont des mots \n(a ecrire en toutes lettres, et en majuscules s'ils sont mis entre \ncotes) dont voici la liste :\n\n 'MODELE'               : objet modele qui decrit la modelisation\n                          loi de comportement et element fini.\n\n 'CARACTERISTIQUES'     : chamelem de caracteristiques associe au\n                          modele \n             \n 'LIAISONS'             : conditions aux limites en deplacement\n                          stockees dans une matrice\n\n 'CHARGEMENT'           : objet de type chargement qui donne une\n                          description temporelle du chargement\n\n \n 'VITESSE_INITIALE'     : champ par point de vitesse initiale. Le nom\n                          des composantes est identique aux\n                          deplacements.\n\n 'GRANDES_DEFORMATIONS' : logique (vrai ou faux) indiquant si l'on\n                          les grandes deformations seront modelisees\n\n 'TEMPS_SORTIE'         : liste de reels des temps a stocker dans la\n                          table de sortie\n\n 'FREQUENCE_SORTIE'     : frequence des enregistrements dans la table\n                          de sortie (entier)\n\n 'COEFF_STABILITE'      : option : coefficient multiplicatif du pas de  \n                          temps compris entre 0 et 1 dans le cas d'un \n                          pas de temps automatique (0.5 par defaut)\n\n 'TEMPS_INITIAL'        : reel ( 0. par defaut ) indiquant a quel\n                          instant le calcul commence\n\n 'PAS_TEMPS'            : option : reel donnant la taille du pas de \n                          temps. Ce pas est fixe tout au long du calcul.\n                          Par defaut le pas de temps est automatique.\n\n 'NPASMAX'              : nombre de pas maximum a calculer\n\n 'IMPACT' . 'MAITRE'    : ligne maitre de l'impact (type maillage)\n                          ne fonctionne qu'en 2D\n\n 'IMPACT' . 'ESCLAVE'   : ligne esclave de l'impact (type maillage)\n                          ne fonctionne qu'en 2D\n\nEn sortie les resultats sont stockes dans la table argument de\nla procedure. Ils sont mis dans des tables dont les indices sont \ndes entiers (0 1 2 ... N) correspondants aux numero de\nsauvegarde des resultats (0 : temps initial):\n\n\n\n 'NPAS' . N                       : numero du pas (entier)\n 'TEMPS' . N                      : instant (reel)\n 'DEPLACEMENTS' . N               : champoint des deplacements\n 'VITESSES' . N                   : champoint des vitesses\n 'ACCELERATIONS' . N              : champoint des accelerations\n 'FORCES_EXTERIEURES' . N         : champoint des forces exterieures\n 'CONTRAINTES' . N                : chamelem  de contraintes\n 'VARIABLES_INTERNES' . N         : chamelem des variables internes  \n                                    cet indice existe seulement si le \n                                    materiau est non lineaire\n 'DEFORMATIONS_INELASTIQUES' . N  : chamelem des variables internes  \n                                    cet indice existe seulement si le \n                                    materiau est non lineaire",
  },
  {
    name: "DROI",
    url: "DROI",
    documentation:
      "$$$$ DROI     NOTICE  CHAT      11/09/12    21:15:56     7124           \n                                             DATE     11/09/12\n\n    Operateur DROIT (alias D)                Voir aussi : COMP\n    -------------------------  \n    GEO1 = DROIT (N1) POIN1 POIN2  ('DINI' DENS1)  ('DFIN' DENS2) ;\n\n\n    Objet :\n    _______\n\n    L'operateur DROIT construit le segment de droite joignant les deux\npoints POIN1 et POIN2.\n\n    Commentaire :\n    _____________\n\n    POIN1, POIN2 : points delimitant le segment de droite (type POINT)\n\n    DENS1, DENS2 :densites associees aux points commen\u00e7ant et finissant\n                   le segment de droite (type FLOTTANT)\n\n    N1           : nombre d'elements generes (type ENTIER)\n\n    GEO1         : segment de droite (type MAILLAGE)\n\n\n    Remarque 1 :\n    ____________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n    Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    Si N1 est negatif, N1 elements seront engendres et leurs tailles\nseront calculees en tenant compte des densites des extremites.\n\n    Remarque 2 :\n    ____________\n\n    Si les densites associees aux points POIN1 et POIN2 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ndeuxieme point, derriere le mot-cle 'DFIN'.\n\n    Remarque 3 :\n    ____________\n\n    Si une ligne LIG1 est donnee a la place du point POIN1 (ou POIN2),\ncette ligne est prolongee jusqu'au point POIN2 (elle commence au point\nPOIN1).\n    Si le point POIN2 n'est pas donne, la premiere extremite de la ligne\nLIG1 est prise en compte; ce qui permet de fermer celle-ci.",
  },
  {
    name: "DSPR",
    url: "DSPR",
    documentation:
      "$$$$ DSPR     NOTICE  MB234859  17/10/02    21:15:08     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur DSPR                            Voir aussi :\n    --------------  \n    EVOL1 = DSPR  N1 EVOL2 ('FMIN' FLOT1) ('FMAX' FLOT2) (COUL1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur DSPR construit la courbe de densite spectrale de\npuissance d'un signal.\n\n    Commentaire :\n    _____________\n\n\n  N1    : on utilise, pour la transformee de FOURIER rapide,\n          un nombre de points egal a 2**N1 (type ENTIER).\n          ( Si le signal traite est plus long, on le tronque; s'il est\n          plus court, on le complete par des 0. )\n\n  EVOL2 : objet contenant le signal a etudier (type EVOLUTION); les\n          abscisses doivent etre a pas constant, les valeurs du signal\n          etant les ordonnees. L'objet doit contenir une seule courbe.\n\n 'FMIN' : mot-cle suivi de :\n  FLOT1 : frequence minimale visualisee (type FLOTTANT)\n          elle sera positive (0 par defaut).\n\n 'FMAX' : mot-cle suivi de :\n  FLOT2 : frequence maximale visualisee (type FLOTTANT)\n          elle sera inferieure a 1/(2*DT), DT etant le pas de temps\n          du signal d'entree.\n          (Valeur par defaut = valeur maximale calculee)\n\n  COUL1 : couleur choisie (blanc par defaut) (type MOT)\n\n  EVOL1 : objet contenant le spectre (type EVOLUTION).",
  },
  {
    name: "DUDW",
    url: "DUDW",
    documentation:
      "$$$$ DUDW     NOTICE  CHAT      11/09/12    21:15:56     7124           \n                                             DATE     11/09/12\n                                                                                \n     Operateur DUDW                          Voir aussi : NAVI KBBT\n     --------------                                       KMBT   KMAB  \n                                                          EQEX   \n     SYNTAXE - EQEX  Cf operateur EQEX                     \n     ______________                                        \n\n\n     'OPER' 'DUDW' eps      'INCO' UN :\n\n\n                                                                                \n     OBJET :\n     ______\n\n  Cet operateur discretise le terme de penalisation de l'equation de\n continuite pour l'equation de quantite de mouvement:\n                                                                                \n                                                                                \n    Commentaires :\n    ______________\n\n    eps  : est le coefficient de penalisation\n           FLOTTANT ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n    Remarque :\n    _________\n\n 1/ L'incompressibilite n'est realisee que si eps est suffisemment petit\n   mais pas trop, sinon les erreurs numeriques deviennent importantes et\n   a la limite on peut meme obtenir une division par zero.\n\n   (avec LAPN) on peut prendre  1.e-10 < (eps mu / L**2 ) < 1.e-6\n                                       =                  =\n 2/ Cet operateur n'est pas a utiliser en 3D,il conduit a des tailles de\n   systeme lineaire prohibitives.\n\n\n    Options : (EQEX)\n    _________\n\n    Formulation Implicite                OPTION IMPL\n    Pression non conforme P0             OPTION CENTRE\n    Pression non conforme P1 ou iso P1   OPTION CENTREP1\n\n ",
  },
  {
    name: "DUPONT2",
    url: "DUPONT2",
    documentation:
      "$$$$ DUPONT2  NOTICE  CHAT      11/09/12    21:15:56     7124           \n                                             DATE     11/09/12\n\n  Voir aussi : \n                             D U P O N T 2                            \n                             -------------        \n\n\n                                                                      \n     RESOLUTION D'UN PROBLEME DE THERMIQUE TRANSITOIRE NON-LINEAIRE   \n     METHODE A DEUX PAS DE TEMPS\n\n     PROCEDURE APPELE PAR PASAPAS :  STAB = DUPONT2 ETAB  \n                        \n--------------------------------------------------------------------\n                                                                      \n     ETAB, TABLE CONTENANT EN ENTREE :                                \n                                                                      \n     INDICE 'SOUSTYPE'     THERMIQUE                                  \n     INDICE 'INITIAL(0)'   CHAMP DE TEMPERATURE INITIAL AU PAS 0      \n     INDICE 'INITIAL(1)'   CHAMP DE TEMPERATURE INITIAL AU PAS 1      \n                           ( LA DONNEE DE CE CHAMP EST FACULTATIVE )  \n     INDICE 'VIEUXPAS'     PAS DE TEMPS ENTRE INITIAL(0) ET INITIAL(1)\n                           (DONNEE INDISPENSABLE SI EXISTE INITIAL(1))          \n     INDICE 'RAYONNEMENT'  LOGIQUE VALANT VRAI POUR UNE CONDITION     \n                           DE RAYONNEMENT                             \n     INDICE 'EMISSIVITE'   MCHAML DECRIVANT  LES FACTEURS D'EMISSIVITE\n                           LES FACTEURS D'EMISSIVITE                  \n     INDICE 'CELSIUS'      LOGIQUE VALANT VRAI SI L'UNITE EST LE      \n                           DEGRE CELSIUS (CAPITAL SI RAYONNEMENT)     \n     INDICE 'MOD_THE'      OBJET MODELE THERMIQUE                     \n     INDICE 'MOD_CON'      OBJET MODELE CONVECTION                    \n     INDICE 'BLOCAGES_THERMIQUES'      MATRICE DE BLOCAGE             \n     INDICE 'MAT_THE'      OBJET MATERIAU THERMIQUE.                  \n                           CE CHAMP PEUT AVOIR DES COMPOSANTES DE     \n                           TYPE FLOTTANT OU EVOLUTION                 \n     INDICE 'MAT_CON'      OBJET MATERIAU CONVECTION                  \n     INDICE 'CHARGEMENT'   CHARGEMENT DECRIVANT LES :                 \n                           VALEURS DES VARIABLES EXTERNES (EX: TE,    \n                           FLUX,TEMPERATURES IMPOSEES ,...)           \n                           VALEURS DES VARIABLES EXTERNES             \n     INDICE 'PHASE'        TABLE TAB1 POUR L'OPERATEUR CAPACITE       \n     INDICE 'TEMPS0'       TEMPS INITIAL (CORRESPOND A INITAL(0))      \n     INDICE 'PAS'          VALEUR DU PAS DE TEMPS                     \n     INDICE 'TEM_CALC'     LISTREEL : TEMPS DES RESULTATS A CALCULER  \n     INDICE 'RELAXATION_DUPONT'  VALEUR DU COEFFICIENT DE RELAXATION        \n                           (VALEUR PAR DEFAUT 0.25)                   \n     INDICE 'SOUS-RELAXATION'    VALEUR DU COEFF. DE SOUS-RELAXATION    \n                           (VALEUR PAR DEFAUT 0.5) \n     INDICE PROJECTION     LOGIQUE VALANT VRAI SI COUPLAGE ET SI LE   \n                           MAILLAGE DE LA MECANIQUE ET DE LA THERMIQUE\n                           EST DIFFERENT                              \n\n--------------------------------------------------------------------\n\n     STAB, TABLE CONTENANT EN SORTIE\n\n     INDICE INITIAL(2)     DERNIER CHAMP DE TEMPERATURE CALCULE \n     INDICE ERREUR         DRAPEAU D'ERREUR\n     INDICE RELAXATION_DUPONT VALEUR DU COEFFICIENT DE RELAXATION \n                           INITIALISE (0.25) SI BESOIN EST\n     RAYONNEMENT           INFORMATIONS SUR LE RAYONNEMENT\n                           EVENTUELLEMENT REACTUALISEES ",
  },
  {
    name: "DYNAMIC",
    url: "DYNAMIC",
    documentation:
      "$$$$ DYNAMIC  NOTICE  MB234859  17/10/02    21:15:09     9577           \n                                             DATE     17/10/02\n                                             \n    Procedure DYNAMIC                       Voir aussi : DYNE PASAPAS\n    -----------------  \n    TAB2 = DYNAMIC TAB1 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet d'effectuer un calcul dynamique pas a pas.\n    \n    Elle peut utiliser les algorithmes :\n    - Newmark centre (schema de l'acceleration moyenne) (par defaut)\n    - HHT\n    - alpha-generalise\n    \n    Les arguments d'entree et de sortie de la procedure sont des tables\n    definies ci-apres.\n    \n\n    Commentaire :\n    _____________\n\n    \n    +----------------------------------------------------------+\n    | TAB1 : Objet de type TABLE contenant les donnes d'ENTREE |\n    +----------------------------------------------------------+\n\n      DONNEES DU PROBLEME\n      ###################\n    \n      TAB1 . 'DEPL'   : deplacement initial     [CHPOINT] \n      TAB1 . 'VITE'   : vitesse initiale        [CHPOINT] \n      TAB1 . 'CHAR'   : chargement              [CHARGEME]\n      TAB1 . 'RIGI'   : raideur                 [RIGIDITE]\n      TAB1 . 'MASS'   : masse                   [RIGIDITE]\n    ( TAB1 . 'AMOR' ) : amortissement           [RIGIDITE]\n\n    \n      TEMPS DE CALCUL\n      ###############\n    \n      TAB1 . 'TEMPS_CALCULES' : [LISTREEL] strictement croissant \n                                contenant tous les instants de \n                                calcul (dont l'instant initial)\n                        \n                        \n      PARAMETRES DE SAUVEGARDE\n      ########################\n\n      SORTIE GIBIANE\n      --------------\n      \n    | TAB1 . 'PAS_SAUVES'       : [ENTIER] indiquant la cadence de la\n    |                             sauvegarde ou [MOT] valant 'TOUS' ou\n OU |                             'FINAL' (par defaut, on conserve 1 \n    |                             pas de temps sur 4)\n    | TAB1 . 'TEMPS_SAUVES'     : [LISTREEL] des instants a sauver\n    \n    ( TAB1 . 'MAILLAGE_SAUVE' ) : [MAILLAGE] pouvant etre fourni pour\n                                  limiter le support geometrique des\n                                  donnees sauvegardees\n\n    ( TAB1 . 'SAUV' ) : VRAI si l'on souhaite SAUVER a chaque pas\n                        de maniere incrementale dans le fichier\n                        a definir prealablement par la commande : \n                        \"OPTI 'SAUV' nomfic ;\"\n                        \n    ( TAB1 . 'ECON' ) : VRAI si l'on souhaite FANTomiser les resultats \n                        sauvegardes sur disque\n               \n\n      SORTIE VTK (PARAVIEW) => OPTIONNELLE\n      ---------------------\n      \n    | TAB1 . 'PAS_SAUVES_VTK'   : idem ci-dessus\n OU | TAB1 . 'TEMPS_SAUVES_VTK'   (par defaut : aucune sortie VTK) \n\n      TAB1 . 'MAILLAGE_VTK'     : objet [MAILLAGE] ou [TABLE] passe a\n                                  l'operateur SORT 'VTK' definissant la\n                                  ou les geometries a sauvegarder\n                                  (seulement si l'un des 2 indices\n                                   ci-dessus est present)\n                                  \n    ( TAB1 . 'FICHIER_VTK' )    : [MOT] indiquant l'emplacement ou\n                                  seront ecrits les fichiers VTK\n                                  Beaucoup de fichiers peuvent etre\n                                  crees => on recommande de les placer\n                                  dans un sous-repertoire (par defaut,\n                                  tout est dans le dossier courant)\n\n                                  \n      SORTIE CSV (TABLEUR) => OPTIONNELLE\n      --------------------\n                   \n    | TAB1 . 'PAS_SAUVES_CSV'   : idem ci-dessus\n OU | TAB1 . 'TEMPS_SAUVES_CSV'   (par defaut : aucune sortie CSV) \n \n      TAB1 . 'MAILLAGE_CSV'     : objet [MAILLAGE] contenant les noeuds\n                                  ou seront enregistrees les donnees\n                                  (seulement si l'un des 2 indices\n                                   ci-dessus est present)\n\n    ( TAB1 . 'COMPOSANTES_CSV' ): [LISTMOTS] des composantes a conserver\n                                  (par defaut, on conserve toutes les\n                                   composantes disponibles)\n                                  \n    ( TAB1 . 'FICHIER_CSV' )    : [MOT] indiquant l'emplacement ou\n                                  sera cree le fichier CSV (par defaut,\n                                  on n'ecrit rien sur le disque)\n \n\n      APPEL A DES PROCEDURES SPECIFIQUES\n      ##################################\n    \n    ( TAB1 . 'CHARMECA' ) : VRAI si appelle la procedure CHARMECA\n                            definie par ailleurs par l'utilisateur et\n                            qui renvoie une table TCHAR avec un ou\n                            plusieurs indices parmi :\n                            \n                              'ADDI_MATRICE' => ajout a l'operateur\n                              'ADDI_SECOND'  => ajout au second membre\n                                                (composantes FLX)\n                              'ADDI_KNL'     => ajout a la raideur\n                              'ADDI_CNL'     => ajout a l'amortissement\n                              'ADDI_FNL'     => ajout au second membre\n                                                (composantes hors FLX)\n                                              \n    ( TAB1 . 'VITEUNIL' ) : correction des vitesses lors d'un impact \n                            (VRAI par defaut, seulement possible avec\n                             le schema de Newmark acceleration moyenne)\n \n\n      SCHEMA D'INTEGRATION TEMPORELLE => OPTIONNEL\n      ###############################\n    \n    | TAB1 . 'ALPHA_F'  : active le schema HHT et donne son parametre\n    |                     \\alpha\n OU |                        \n    | TAB1 . 'RHO_INF'  : active le schema alpha-generalise et donne\n    |                     son parametre \\rho^{\\intfy} (rayon spectral\n    |                     a l'infini)\n\n    \n                       \n    +-----------------------------------------------------------------+\n    | TAB2 : Objet de type TABLE (aussi stocke dans TAB1.'RESULTATS') |\n    |        contenant les objets GIBIANE sauvegardes a chaque pas de |\n    |        temps demande                                            |\n    +-----------------------------------------------------------------+\n\n      TAB2 . I . 'TEMP' : temps        [FLOTTANT]\n      TAB2 . I . 'DEPL' : deplacement  [CHPOINT]\n      TAB2 . I . 'VITE' : vitesse      [CHPOINT]\n\n    \n                       \n    +-----------------------------------------------------------------+\n    | Un objet de type TABLE est stocke dans TAB1.'RESULTATS_CSV'     |\n    | contenant autant de LISTREEL que de grandeurs demandees dans la |\n    | sortie CSV (ainsi qu'un LISTREEL pour le temps)                 |\n    +-----------------------------------------------------------------+\n       \n    ",
  },
  {
    name: "DYNAMOD2",
    url: "DYNAMOD2",
    documentation:
      "$$$$ DYNAMOD2 NOTICE  MB234859  17/10/02    21:15:09     9577           \n                                             DATE     17/10/02\n\n    Procedure DYNAMOD2                       Voir aussi : DYNAMOD3\n    ------------------                                    DYNAMODE  \n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure DYNAMODE.",
  },
  {
    name: "DYNAMOD3",
    url: "DYNAMOD3",
    documentation:
      "$$$$ DYNAMOD3 NOTICE  MB234859  17/10/02    21:15:09     9577           \n                                             DATE     17/10/02\n\n    Procedure DYNAMOD3                       Voir aussi : DYNAMOD2\n    ------------------                                    DYNAMODE  \n\n    Objet :\n    _______\n\n    Cette procedure est utilisee par la procedure DYNAMODE.",
  },
  {
    name: "DYNAMODE",
    url: "DYNAMODE",
    documentation:
      "$$$$ DYNAMODE NOTICE  MB234859  17/10/02    21:15:09     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure DYNAMODE                       Voir aussi :\n    ------------------  \n    TAB1 = DYNAMODE MOT1 LREEL1 BAS1 (LREEL2) ('BLOC' N1) ...\n                   ...   ('DEPL' CHPO1) ('VITE' CHPO2) ('SAUV')  ...\n                   ...   ('SUIT' SOL1) ...\n\n                   ...   ( 'CHAR' TAB2 )\n                         ( 'SEIS' TAB3 )\n                         ( 'RECO' TAB4 )\n                         ( 'MAXI' TAB5 )\n                         ( 'EVOL' TAB6 ) ;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule la reponse dynamique d'une structure selon\nle schema suivant :\n\n     - projection sur la base modale.\n     - integration explicite en temps.\n     - recombinaison modale de la reponse.\n\n    Commentaire :\n    _____________\n\n    MOT1    : nom de l'operateur de resolution : \"DEVO\" ou \"PLEX\"\n              (type MOT)\n\n    LREEL1  : liste des instants de calcul (type LISTREEL)\n\n    BAS1    : base modale (type BASEMODA)\n\n    en option :\n    -----------\n\n    LREEL2  : liste des coefficients d'amortissement, en pourcentage,\n              associes aux modes de la base (type LISTREEL)\n\n    'BLOC'  : mot-cle indiquant que l'on veut faire un calcul par bloc\n              suivi de :\n    N1      : nombre de blocs (type ENTIER)\n\n    'DEPL'  : mot-cle indiquant que l'on a des deplacements initiaux\n              suivi de :\n    CHPO1   : valeurs des deplacements initiaux (type CHPOINT)\n\n    'VITE'  : mot-cle indiquant que l'on a des vitesses initiales\n              suivi de :\n    CHPO2   : valeurs des vitesses initiales (type CHPOINT)\n\n    'SAUV'  : mot-cle indiquant que l'on veut une sauvegarde de la\n              reponse modale a l'instant final.\n\n    'SUIT'  : mot-cle indiquant que l'on poursuit un calcul anterieur\n              suivi de :\n    SOL1    : condition initiale pour une reprise (type SOLUTION)\n\n\n    'CHAR'  : mot-cle indiquant que l'on veut creer un objet CHARGEME\n              suivi de :\n    TAB2    : objet (type TABLE) contenant autant de tables (N2) que de\n              chargements.\n\n              pour i variant de 1 a N2 on a :\n\n              - TAB2 i 'CHARGEMENT' : chargement spatial et temporel de\n                                      la structure (type CHARGEME)\n              - TAB2 i 'STRUCTURE'  : sous-structure o\u00ba doit s'appliquer\n                                      le chargement (facultatif)\n                                      (type STRUCTUR)\n              - TAB2 i 'NUMERO'     : numero de la sous-structure\n                                      (facultatif) (type ENTIER)\n\n    'SEIS'  : mot-cle, indiquant que l'on veut creer un objet CHARGEME\n              pour un calcul sismique, suivi de :\n    TAB3    : objet (type TABLE) contenant autant de tables que de\n              directions de seisme.\n\n              pour i variant de 1 a 3 on a :\n\n              - TAB3 i 'EVOLUTION'   : la discretisation temporelle du\n                                       seisme (type EVOLUTION)\n              - TAB3 i 'COEFFICIENT' : coefficient multiplicatif applique\n                                       au seisme (type FLOTTANT)\n              - TAB3 i 'DIRECTION'   : direction du seisme (UX, UY, UZ)\n                                       (type MOT)\n\n    'RECO'  : mot-cle indiquant que l'on veut une recombinaison\n              modale pour toute la structure a des instants donnes, suivi\n              de :\n    TAB4    : objet (type TABLE) contenant autant de tables (N2) que de\n              demandes de recombinaisons\n\n              pour i variant de 1 a N2 on a :\n\n              - TAB4 i 'TYPE'      : type demande (DEPL,ACCE,VITE,\n                                     LIAI, CONT) (type MOT)\n              - TAB4 i 'TEMPS'     : temps o\u00ba l'on veut la recombinaison\n                                     modale pour toute la structure\n                                     (type FLOTTANT)\n              - TAB4 i 'STRUCTURE' : sous-structure o\u00ba doit s'effectuer\n                                     la recombinaison (facultatif)\n                                     (type STRUCTUR)\n              - TAB4 i 'NUMERO'    : numero de la sous-structure\n                                     (facultatif) (type ENTIER)\n\n    'MAXI'  : mot-cle indiquant que l'on demande le maximum en valeur\n              absolue d'une composante au cours du temps apres une\n              recombinaison modale, suivi de :\n    TAB5    : objet (type TABLE) contenant autant de tables (N2) que de\n              demandes de maxima\n\n              pour i variant de 1 a N2 on a :\n\n              - TAB5 i 'TYPE'       : type du maximum demande (DEPL,\n                                      ACCE, VITE, LIAI, CONT) (type MOT)\n              - TAB5 i 'POINT'      : points o\u00ba doit s'effectuer la\n                                     recherche du maximum (type POINT\n              - TAB5 i 'COMPOSANTE' : nom de la composante du point\n                                      (type MOT)\n              - TAB5 i 'STRUCTURE'  : sous-structure o\u00ba doit s'effectuer\n                                      la recombinaison (facultatif)\n                                      (type STRUCTUR)\n              - TAB5 i 'NUMERO'     : numero de la sous-structure\n                                      (facultatif) (type ENTIER)\n\n    'EVOL'  : mot-cle indiquant que l'on veut une recombinaison modale\n              en quelques points en fonction du temps, suivi de :\n    TAB6    : objet (type TABLE) contenant autant de tables (N2) que de\n              demandes d'evolutions.\n\n              pour i variant de 1 a N2 on a :\n\n              - TAB6 i 'NPAS'       : sortie tous les \"NPAS\" de calcul\n                                      (facultatif), egal a 1 par defaut\n                                      (type ENTIER)\n              - TAB6 i 'TYPE'       : type de la composante traitee\n                                      (DEPL,ACCE,VITE,LIAI,CONT)\n                                      (type MOT)\n              - TAB6 i 'STRUCTURE'  : sous-structure o\u00ba doit s'effectuer\n                                      la recombinaison (facultatif)\n                                      (type STRUCTUR)\n              - TAB6 i 'NUMERO'     : numero de la sous-structure\n                                      (facultatif) (type ENTIER)\n\n              puis :\n\n              - TAB6 i 'POINT'      : points o\u00ba doit s'effectuer la\n                                      recombinaison (type POINT, MAILLAG\n                                      ou ATTACHE)\n              - TAB6 i 'COMPOSANTE' : nom de la composante du point\n                                      (type MOT)\n\n              ou\n\n              - TAB6 i 'CHPOINT'    : champ contenant les points et les\n                                      composantes o\u00ba doit s'effectuer la\n                                      recombinaison (type CHPOINT)\n\n\n    TAB1    : objet (type TABLE) contenant :\n\n              - si option 'SAUV'\n                a l'indice 'SAUV', objet de type SOLUTION\n                sauvegarde du dernier bloc de calcul en vue\n                d'une reprise.\n\n              - si option 'RECO'\n                a l'indice 'RECO',  objet de type TABLE indicee 1 a N2.\n                (TAB1 'RECO' i) est associe a l'entree (TAB4 i)\n\n                pour i variant de 1 a N2 on a :\n\n                TAB1 'RECO' i : la recombinaison modale (type CHPOINT\n                                ou MCHAML) pour la structure\n                                a l'instant demande\n\n              - si option 'MAXI'\n                a l'indice 'MAXI', objet de type TABLE indicee 1 a N2.\n                (TAB1 'MAXI' i) est associe a l'entree (TAB5 i)\n\n                pour i variant de 1 a N2 on a :\n\n                TAB1 'MAXI' i : le maximum demande de la composante en\n                                valeur absolue (type FLOTTANT)\n\n              - si option 'EVOL'\n                a l'indice 'EVOL', objet de type TABLE indicee 1 a N2.\n                (TAB1 'EVOL' i) est associe a l'entree (TAB6 i)\n\n                pour i variant de 1 a N2 on a :\n\n                TAB1 'EVOL' i : la recombinaison modale (type EVOLUTION)\n                                en quelques points sur l'intervalle de\n                                temps de calcul.",
  },
  {
    name: "DYNC",
    url: "DYNC",
    documentation:
      "$$$$ DYNC     NOTICE  BP208322  20/10/06    21:15:06     10743          \n                                             DATE     20/10/06\n\n   Operateur DYNC                      Voir aussi : DYNE VIBR\n   --------------    \n \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Objet\n2. Syntaxe\n3. Description des tables\n    3.1 TMOD :  Base Modale\n    3.2 TCHR :  Chargement\n    3.3 TLIA :  Description des Liaisons\n    3.4 TAMOR :  Amortissement\n    3.5 TINI :  Approximation initiale\n    3.6 TNUM :  Parametres numeriques\n    3.7 TAB1 :  Resultats de l'Operateur\n\n  \n1. Objet1 \n======== \n \n     Calcul des branches de reponse d'un systeme mecanique en  \n     fonction de ses parametres.\n    \n     Plus precisement, une solution periodique du systeme d'equations\n     differentielles :\n         ..     .                           .\n       M q  + C q + K q = f^ext(t) + f^nl(Q,Q,a) \n \n     avec :\n \n       M    : matrice diagonale des masses generalisees\n       C    : matrice des amortissements modaux\n       K    : matrice diagonale des raideurs generalisees\n       f^ext: vecteur des forces exterieures\n       f^nl : vecteur des forces de non-lineaires (liaisons)\n       q    : vecteur des contributions modales\n       a    : parametre de continuation \n   \n     est calculee par la methode d'equilibrage harmonique (HBM). \n     Ensuite, des branches de reponse sont construites pas a pas par \n     l'algorithme de continuation par pseudo-longueur d'arc.\n     A chaque pas, la stabilite des solutions calculees est evaluee et \n     les bifurcations eventuelles sont detectees. \n     Trois types de reponses sont prevues : reponse forcee, cycle limite\n     d'un systeme autonome et calcul des modes non-lineaire de systemes \n     non amorti.\n \n  \n2. Syntaxe \n========== \n \n \n    TAB1  =  DYNC TMOD TCHR TLIA TAMOR TINI TNUM NHBM NFFT;\n \n    avec :\n\n    TMOD   : table representant une base modale ou un ensemble de\n             bases modales (type TABLE).\n\n    TCHR   : table representant les forces libres appliquees dans le  \n             domaine frequentiel (type TABLE). \n             Uniquement utile lors du calcul d'une reponse forcee.\n \n    TLIA   : table rassemblant les descriptions des liaisons (type\n             TABLE).\n \n    TAMOR  : table representant la matrice des amortissements\n             generalises (type TABLE). Par defaut, seule la partie\n             diagonale de la matrice est consideree.\n             Non prise en compte pour les modes non-lineaires.\n\n    TINI   : table donnant une approximation initiale (type TABLE).\n\n    TNUM   : table des parametres numeriques pour la continuation \n             (type TABLE).\n\n    NHBM   : nombre d'harmoniques dans l'approximation (type ENTIER).\n \n    NFFT   : nombre de pas de temps d'evaluation pour l'AFT \n             (type ENTIER).\n\n    TAB1   : table contenant les resultats (type TABLE). \n    \n  \n  \n3. Description des tables \n========================= \n \n   Remarques :\n   __________\n\n   * Toutes les TABLES doivent etre sous-typees.\n   * Dans toute la suite la base A represente la base modale dans \n     laquelle les equations sont decouplees (composantes 'ALFA' ) ;\n     et la base B represente la base des deplacements des noeuds \n     (composantes 'UX' , 'UY' , ... ). \n  \n  \n3.1 TMOD :  Base Modale \n----------------------- \n   a/ Cas d'une base unique :\n      TMOD : table issue de l'operateur VIBR telle que :\n      TMOD.'SOUSTYPE'     = MOT  'BASE_MODALE';\n      TMOD.'MODES'        : table contenant les modes 1 a n \n\n   b/ Cas d'une base composee de plusieurs bases :\n      TAB2.'SOUSTYPE' = MOT 'ENSEMBLE_DE_BASES';\n      TAB2.I          : table de base modale definie comme au a/ \n                        avec I variant de 1 a n bases       \n  \n  \n3.2 TCHR :  Chargement \n---------------------- \n      On considere un chargement harmonique et on specifie son contenu \n      frequentiel.\n\n      TCHR . 'SOUSTYPE' = MOT  'CHARGEMENT';\n      TCHR . j   =  FextA  (CHPOINT); \n      \n      *  j  :  indice de la composante frequentielle ou s'applique le \n               chargement avec : - j = 0 : terme constant\n                                 - j > 0 : terme en cos(jwt)\n                                 - j < 0 : terme en sin(jwt)\n      *  FextA :  description spatiale (type CHPOINT) du chargement \n                 (projete sur base A)\n  \n      Exemple : chargement de 5. variant comme cos(+1*wt) \n                applique selon FY en P2 : \n         TMOD  = VIBR 'IRAM' 1. NMODE Ks Ms ;\n         Fext  = MANU CHPO P2 'FY' 5. ; \n         FextA = PJBA Fext TMOD;\n         TCHR . +1 = FextA ;\n  \n  \n3.3 TLIA :  Description des Liaisons \n------------------------------------ \n      TLIA.'SOUSTYPE'   = MOT 'LIAISON';\n      TLIA.'LIAISON_A'  : TABLE de sous-type LIAISON_A, definissant\n                          les liaisons sur base A\n      TLIA.'LIAISON_B'  : TABLE de sous-type LIAISON_B, definissant\n                          les liaisons sur base B\n \n      Exemple :\n         TLIA = TABLE 'LIAISON'   ;\n         TTLB = TABLE 'LIAISON_B' ;\n         TLIA.'LIAISON_B' = TTLB  ;\n         TTLB.1 = TL1 ;\n         TTLB.2 = TL2 ;\n\n      TL1 et TL2 sont deux tables definissant des liaisons\n      (voir paragraphe \"DEFINITION DES LIAISONS\" dans la notice de \n      l'operateur DYNE).\n      Dans la table qui regroupe les liaisons sur une base \n      (TTLB dans l'exemple), les liaison doivent etre indicees par \n      les entiers 1 a NL , ou NL est le nombre de ces liaisons.\n  \n  \n3.4 TAMOR :  Amortissement \n-------------------------- \n      TAMOR.'SOUSTYPE'       = MOT  'AMORTISSEMENT' ;\n      TAMOR.'AMORTISSEMENT'  : matrice d'amortissement (type RIGIDITE)\n\n     * Pour l'instant, on ne considere que de l'amortissement modal, \n       matrice diagonale.\n\n  \n3.5 TINI :  Approximation initiale \n---------------------------------- \n        TINI . 'SOUSTYPE' = MOT  'INITIAL' ;\n      - dans le cas d'un systeme force ou autonome :\n        TINI . 'FREQUENCE'  : valeur initiale de la frequence Wi \n                              (FLOTTANT) \n        TINI .    j         : approximation initiale Q0 (CHPOINT) \n                              (facultatif) \n      - dans le cas d'un mode non-lineaire :\n        TINI . 'ENERGIE'  : valeur initiale (petite mais non-nulle) \n                            de l'energie Wi (FLOTTANT) \n\n     * Wi definit l'une des bornes du parametre de continuation. \n       L'autre borne (Wf) est renseignee dans la table TNUM . 'VAL_FIN'       \n     * L'indice j prend des valeurs entre -NHBM et +NHBM avec : \n                 - j = 0 : terme constant\n                 - j > 0 : terme en cos(jwt)\n                 - j < 0 : terme en sin(jwt)\n     * Exemple de creation d'un chpoint Q0 :\n       ptrep1 = TMOD.'MODES' . 1 . 'POINT_REPERE';\n       Q0 = MANU 'CHPO' ptrep1 1 'ALFA' 0.5 ;\n \n  \n3.6 TNUM :  Parametres numeriques \n--------------------------------- \n        TNUM.'SOUSTYPE'  : 'PARAMETRES_NUMERIQUES' ;\n        TNUM . 'TYPE'    :  specifie le type de calcul. \n               = | 'FORC' --> systeme non-autonome, reponse forcee\n                 | 'AUTO' --> systeme autonome, calcul de cycles limites  \n                 | 'NNM'  --> systeme Hamiltonien (modes non-lineaires non amorti)\n        TNUM . 'VAL_FIN' :  valeur finale (a atteindre) du parametre de \n                            continuation Wf  (FLOTTANT)                               \n        TNUM . 'DS0'     :  longueur initial du pas (FLOTTANT)\n        TNUM . 'DSMAX'   :  longueur maximale du pas (FLOTTANT)\n        TNUM . 'DSMIN'   :  longueur minimale du pas (FLOTTANT)\n        TNUM . 'ITERMOY' :  nombre d'iterations ideal (ENTIER)\n        TNUM . 'ITERMAX' :  nombre maximal d'iterations (ENTIER)\n        TNUM . 'ANGLE_MIN': angle minimal en degre entre 2 pas succesifs \n                             (FLOTTANT) \n        TNUM . 'ANGLE_MAX': angle maximal en degre entre 2 pas succesifs\n                             (FLOTTANT) \n        TNUM . 'ISENS'   :  sens du parcours \n                 ISENS =  1.  : sens croissant\n                 ISENS = -1.  : sens decroissant\n        TNUM . 'NBPAS'   :  nombre de pas a calculer (ENTIER) \n\n     * On utilise la methode de continuation par pseudo-longueur d'arc.\n       La longueur des pas est automatiquement adaptee en fonction du \n       nombre d'iterations necessaires \u00e0 la convergence du pas precedent.\n     * L'algorithme s'arr\u00eate lorsque la valeur du parametre de \n       continuation depasse les bornes specifiees dans TINI, ou bien au\n       bout de NBPAS pas.\n\n  \n3.7 TAB1 :  Resultats de l'Operateur \n------------------------------------ \n  \n        TAB1 . 'SOUSTYPE' :  'RESULTAT_DYNC'  \n        TAB1 . 'REPONSE'  : table dont les indices sont :\n          . 'FREQUENCE'               : (LISTREEL) = { w^n } \n          . 'COEFFICIENTS' . k . pti  : (LISTREEL) = { |Q_k^n|_2 }\n          . 'NORME_DEPLACEMENT'       : (LISTREEL) = { |Q^n|_2 }\n          . 'STABILITE'               : (LISTENTI) = 0 si stable, 1 si instable\n          . 'EXPOSANT_REEL'       . i': (LISTREEL) = { \\lambda_i^n }\n          . 'EXPOSANT_IMAGINAIRE' . i': (LISTREEL) = { \\lambda_i^n }\n          \n     avec :   \n     * n   : indice du pas solution\n     * k   : harmonique (k=-NHBM...+NHBM)\n     * pti : est le point repere du mode \"i\" (i=1..nmode).\n     * i'  : indice des exposants de Floquet (i'=1..2*nmode)\n     \n        TAB1 . 'BIFURCATION' . 'TYPE'               (LISTMOTS)\n                             . 'NORME_DEPLACEMENT'  (LISTREEL)\n                             . 'FREQUENCE'          (LISTREEL)\n                             . 'KAPPA'              (LISTREEL)\n                             . 'VECTEUR_REEL'       (TABLE de LISTREEL)\n                             . 'VECTEUR_IMAGINAIRE' (TABLE de LISTREEL)\n                             . 'COEFFICIENTS'       (TABLE de LISTREEL)\n                             \n     * Les NBIF bifurcations de codim-1 eventuellement trouvees lors de \n     la continuation sont stockees dans ce TABLE. On les identifie par:\n          TYPE . I = 'LP' : point limite\n                   = 'BP' : point de branchement        \n                   = 'PD' : doublement de periode\n                   = 'NS' : Neimark-Sacker (Hopf secondaire)\n     * KAPPA contient les nouvelles frequences issues des bifurcations.\n       Dans le cas o\u00f9 I est l'indice correspondant \u00e0 une bifurcation dite \n       statique (LP ou BP), KAPPA . I = 0.  \n     * Les tableaux VECTEUR_REEL, VECTEUR_IMAGINAIRE et COEFFICIENTS \n       contiennent NBIF LISTREELs, dont le I-ieme stocke les nm*(2*NHBM+1) \n       coefficients de Fourier des vecteurs propres complexes et des \n     deplacements associes \u00e0 la I-ieme bifurcation.",
  },
  {
    name: "DYNE",
    url: "DYNE",
    documentation:
      "$$$$ DYNE     NOTICE  BP208322  20/08/17    21:15:19     10692          \n                                             DATE     20/08/17\n\n    Operateur DYNE                           Voir aussi : VIBR PJBA\n    ______________                                        PSMO   RECO  \n                                                          EVOL   TRADUIRE  \n                                                          BASE   CINIMOD  \n                                                                                \n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Objet\n2. Syntaxes\n    2.1 Syntaxe 1\n    2.2 Syntaxe 2\n3.              DESCRIPTION DES TABLES             \n    3.1 TAB2 :  Base Modale\n    3.2 TAB3 :  Raideur et Masse\n    3.3 TAB4 :  Description de l'amortissement\n    3.4 TAB5 :  Description des Liaisons\n    3.5 TAB6 :  Chargement\n    3.6 TAB7 :  Conditions initiales\n    3.7 TAB8 :  Specification des resultats a garder\n    3.8 TAB1 :  Resultats de l'Operateur\n    3.9 TAB11 :  Table de soustype 'PASAPAS'  (syntaxe 2)\n4.              DEFINITION DES LIAISONS             }  \n    4.1 La liaison POINT_PLAN\n    4.2 La liaison POINT_POINT base B\n    4.3 La liaison POINT_CERCLE base B\n    4.4 La liaison POINT_CERCLE_FROTTEMENT base B\n    4.5 La liaison POINT_PLAN_FROTTEMENT base B\n    4.6 La liaison POINT_POINT_FROTTEMENT base B\n    4.7 La liaison CERCLE_CERCLE_FROTTEMENT base B\n    4.8 La liaison CERCLE_PLAN_FROTTEMENT base B\n    4.9 La liaison PROFIL_PROFIL_INTERIEUR base B\n    4.10 La liaison PROFIL_PROFIL_EXTERIEUR base B\n    4.11 La liaison POINT_PLAN_FLUIDE\n    4.12 La liaison COUPLAGE_DEPLACEMENT base A\n    4.13 La liaison COUPLAGE_VITESSE base A\n    4.14 La liaison POLYNOMIALE base A\n    4.15 La liaison POINT_CERCLE_MOBILE base B\n    4.16 La liaison POINT_POINT_DEPLACEMENT_PLASTIQUE base B\n    4.17 La liaison POINT_POINT_ROTATION_PLASTIQUE base B\n    4.18 La liaison LIGNE_LIGNE_FROTTEMENT base B\n    4.19 La liaison LIGNE_CERCLE_FROTTEMENT base B\n    4.20 La liaison PALIER_FLUIDE base B\n\n  \n1. Objet1 \n======== \n    Calcul d'une reponse dynamique a l'aide d'algorithmes\n    explicite : Fu-DeVogelaere, differences centrees, \n    acceleration moyenne ou Fox-Goodwin.\n    \n    Il s'agit de calculer la solution du systeme d'equations :\n        ..     .\n      M Q  + C Q = F(Q,t) avec F(Q,t) = -K Q + Fl + Fe\n                   .\n      Q(0) = Q0 et Q(0) = L0\n\n    avec :\n\n      M  : matrice diagonale des masses generalisees\n      C  : matrice des amortissements modaux\n      K  : matrice diagonale des raideurs generalisees\n      Fl : vecteur des forces de liaisons\n      Fe : vecteur des forces exterieures\n      Q  : vecteur des contributions modales\n      Q0 : vecteur des contributions modales initiales\n      L0 : vecteur des vitesse modales initiales\n  \n2. Syntaxes \n=========== \n \n  \n2.1 Syntaxe 1 \n------------- \n    TAB1 = DYNE  |'DE_VOGELAERE'        | ...\n                 |'DIFFERENCES_CENTREES'|        \n                 |'ACCELERATION_MOYENNE'|        \n                 |'FOX_GOODWIN'         |        \n\n   ... | TAB2      | (TAB4) (TAB5) | TAB6      | N1 FLOT1 (N2) TAB8 ;\n       | TAB3      |               | TAB7      |\n                                   | TAB6 TAB7 |\n\n\n    TAB2   : table representant une base modale ou un ensemble de\n             bases modales (type TABLE).\n\n    TAB3   : table reunissant les matrices de raideur et de masse\n             generalisees (type TABLE). Seules les parties \n             diagonales des matrices sont considerees.\n\n    TAB4   : table representant la matrice des amortissements\n             generalises (type TABLE). Par defaut, seule la partie\n             diagonale de la matrice est consideree.\n\n    TAB5   : table rassemblant les descriptions des liaisons (type\n             TABLE).\n\n    TAB6   : table representant l'evolution des forces libres\n             appliquees (type TABLE).\n\n    TAB7   : table donnant les conditions initiales (type TABLE).\n\n    TAB8   : Table definissant les resultats que l'on veut dans la\n             table de sortie TAB1 (type TABLE).\n\n    N1     : Nombre de pas (type ENTIER).\n\n    FLOT1  : Pas de temps (type FLOTTANT).\n\n    N2     : Sortie tous les N2 pas de calcul (type ENTIER),\n             par defaut N2 = 1 .\n\n    TAB1   : Table contenant les resultats.\n    \n  \n2.2 Syntaxe 2 \n------------- \n    DYNE 'DE_VOGELAERE' TAB11 ;\n\n\n    TAB11 : Table de soustype 'PASAPAS' (syntaxe 2 seulement)\n  \n3.              DESCRIPTION DES TABLES              \n=================================================== \n \n    \n\n  Remarques :\n  ___________\n     \n  * Toutes les TABLES doivent etre sous-typees.\n\n  * Dans toute la suite la base A represente la base modale dans \n    laquelle les equations sont decouplees (composantes 'ALFA' ) ;\n    et la base B represente la base des deplacements des noeuds \n    (composantes 'UX' , 'UY' , ... ) .\n    \n\n  \n3.1 TAB2 :  Base Modale \n----------------------- \n        a/ Cas d'une base unique :\n           TAB2 : table issue de l'operateur VIBR telle que :\n           TAB2.'SOUSTYPE'     : 'BASE_MODALE'\n           TAB2.'MODES'        : table contenant les modes 1 a n \n           \n           Pour la prise en compte des pseudo-modes, on complete avec :\n           TAB2.'PSEUDO_MODES' : table des pseudo-modes definis \n                                 par l'operateur PSMO\n\n        b/ Cas d'une base composee de plusieurs bases :\n           TAB2.'SOUSTYPE' : 'ENSEMBLE_DE_BASES'\n           TAB2.I          : table de base modale definie comme au a/ \n                             avec I variant de 1 a n bases\n\n        c/ Pour la prise en compte des deplacements dus a la rotation  \n           des corps rigides il faut completer la table avec :\n           TAB2.'MODES'.Irot.'CORPS_RIGIDE'     = 'VRAI';\n           TAB2.'MODES'.Irot.'CENTRE_DE_GRAVITE'= G;\n           Irot numero du \"mode\" de rotation, G de type point.\n           Les coordonnees de l'axe de rotation sont les composantes\n          'RX','RY','RZ' du champoint de la \"deformee modale\" de\n           rotation.\n           La valeur de rotation est automatiquement normee a 1.\n           Une base modale elementaire ne peut contenir qu'un seul \n           \"mode\" de rotation de corps rigide. Par consequent il faut \n           definir une base modale pour chaque corps rigide.\n\n           \n  \n3.2 TAB3 :  Raideur et Masse \n---------------------------- \n        TAB3.'SOUSTYPE' : 'RAIDEUR_ET_MASSE'\n        TAB3.'RAIDEUR'  : matrice de raideur (type RIGIDITE)\n        TAB3.'MASSE'    : matrice de masse   (type RIGIDITE)\n        TAB3.'NATURE_RAIDEUR' : 'PLEINE' si l'on souhaite considerer les\n                                   termes extra-diagonaux de la matrice.\n                                'DIAGONALE' sinon (par defaut).                 \n        TAB3.'NATURE_MASSE'   : 'PLEINE' si l'on souhaite considerer les\n                                   termes extra-diagonaux de la matrice.\n                                'DIAGONALE' sinon (par defaut).   \n        TAB3.'BASE_MODALE' : TABLE de sous-type BASE_MODALE permettant \n                             le calcul des forces de liaisons en base B\n\n\n  \n3.3 TAB4 :  Description de l'amortissement \n------------------------------------------ \n        TAB4.'SOUSTYPE'       : 'AMORTISSEMENT'\n        TAB4.'AMORTISSEMENT'  : matrice d'amortissement (type RIGIDITE)\n      indice facultatif :\n        TAB4.'NATURE'         : 'PLEINE' si l'on souhaite considerer les\n                                 termes extra-diagonaux de la matrice.\n                                'DIAGONALE' sinon (par defaut).\n\n\n  \n3.4 TAB5 :  Description des Liaisons \n------------------------------------ \n        TAB5.'SOUSTYPE'   : 'LIAISON'\n        TAB5.'LIAISON_A'  : TABLE de sous-type LIAISON_A, definissant\n                            les liaisons sur base A\n        TAB5.'LIAISON_B'  : TABLE de sous-type LIAISON_B, definissant\n                            les liaisons sur base B\n\n        Exemple :\n                   TLIA = TABLE 'LIAISON'   ;\n                   TTLB = TABLE 'LIAISON_B' ;\n                   TLIA.'LIAISON_B' = TTLB  ;\n                   TTLB.1 = TL1 ;\n                   TTLB.2 = TL2 ;\n\n                   TL1 et TL2 sont deux tables definissant des liaisons\n                   (voir paragraphe \"DEFINITION DES LIAISONS\")\n                   Dans la table qui regroupe les liaisons sur une\n                   base ( TTLB dans l'exemple), les liaisons\n                   doivent etre indicees par les entiers\n                   1 a NL , ou NL est le nombre de ces liaisons.\n\n\n  \n3.5 TAB6 :  Chargement \n---------------------- \n        TAB6.'SOUSTYPE' : 'CHARGEMENT'\n        TAB6.'BASE_A'   : chargement exterieur en base A (type\n                          CHARGEMENT)\n        TAB6.'BASE_B'   : chargement exterieur en base B (type CHARGEMENT)\n                          Il sert a calculer (et reactualiser) les couples\n        dues a des forces exercees aux points de liaison, en cas de rotation\n        de corps rigide. Si l'on veut tenir compte de l'effet de ces forces\n        aux mouvements de translation du solide, il faut les declarer dans \n        le chargement sur BASE_A aussi. \n\n\n\n  \n3.6 TAB7 :  Conditions initiales \n-------------------------------- \n        TAB7.'SOUSTYPE'     : 'INITIAL'\n\n          cas1: valeurs initiales des inconnues\n        TAB7.'DEPLACEMENT'  : deplacements initiaux (type CHPOINT)\n        TAB7.'VITESSE'      : vitesses initiales    (type CHPOINT)\n          les CHPOINTS ci dessus sont des CHPOINTS des coordonnees\n          generalisees. Si les conditions initiales sont connues\n          en coordonnees nodales, on peut utiliser la procedure CINIMOD.  \n\n           ou\n\n          cas2: reprise  a partir d'un calcul precedant\n        TAB7.'REPRISE'      : TABLE definissant la reprise du calcul\n\n\n  \n3.7 TAB8 :  Specification des resultats a garder \n------------------------------------------------ \n        TAB8.'SOUSTYPE'   : 'SORTIE'\n        \n        TAB8.'VARIABLE'   : TABLE de sous-type VARIABLE, definissant\n                            les variables a sauvegarder. Par defaut,\n                            on sauvegarde le deplacement et la vitesse\n                            au pas de sortie.\n\n        Les variables que l'on peut sauvegarder sont les suivantes:\n        \n              - le deplacement au demi-pas precedant le pas de sortie\n              - la vitesse au demi-pas precedant le pas de sortie\n              - l'acceleration au pas de sortie\n              - l'acceleration au demi-pas precedant le pas de sortie\n              - le travail des forces exterieures du debut jusqu'\n                 au pas de sortie\n              - le travail des forces interieures (raideur et \n                amortissement et forces de liaisons) du debut \n                jusqu'au pas de sortie\n\n        La table TAB8.'VARIABLE' peut ainsi etre indicee par :\n\n             . 'DEPLACEMENT'        |\n             . 'VITESSE'            |  = VRAI si on veut cette variable\n             . 'DEPLACEMENT_1/2'    |\n             . 'VITESSE_1/2'        |\n             . 'ACCELERATION'   '   |  = FAUX si on ne la veut pas\n             . 'ACCELERATION_1/2'   |\n             . 'TRAVAIL_EXTERIEUR'  |\n             . 'TRAVAIL_INTERIEUR'  |\n\n        Pour la syntaxe 1, il est possible de sortir les resultats sous\n        la forme d'objets de type :\n        \n        - CHPOINT (par defaut et autant que de pas de temps de sortie),\n        - ou LISTREEL (autant que de variables demandes).\n        \n        Pour cela, il faut le preciser a l'indice 'TYPE_SORTIE' de la \n        table TAB8.'VARIABLE' :\n        \n            . 'TYPE_SORTIE' = | (mot 'CHPOINT')\n                              |  mot 'LISTREEL'\n              \n        Exemple :\n                   TSORT = TABLE 'SORTIE'   ;\n                   TSORV = TABLE 'VARIABLE' ;\n                   TSORT.'VARIABLE' = TSORV ;\n                   TSORV.'VITESSE'         = FAUX ;\n                   TSORV.'DEPLACEMENT_1/2' = VRAI ;\n                   TSORV.'ACCELERATION'    = VRAI ;\n                   TSORV.'TYPE_SORTIE'     = mot 'LISTREEL';\n\n        Nota : Actuellement le calcul de 'TRAVAIL_EXTERIEUR' et\n               'TRAVAIL_INTERIEUR' pour les liaisons '.._FLUIDE'\n              n'est pas complet.\n\n\n        TAB8.'LIAISON_A'  : TABLE de sous-type LIAISON_A, definissant\n                            les liaisons sur base A a sauvegarder.\n\n        TAB8.'LIAISON_B'  : TABLE de sous-type LIAISON_B, definissant\n                            les liaisons sur base B a sauvegarder.\n\n        Ces tables sont indicees par les tables definissant les liaisons\n        a sauvegarder. La valeur est VRAI si l'on souhaite avoir\n        toutes les variables internes de la liaison.\n\n        Exemple :\n                   TSORT = TABLE 'SORTIE'    ;\n                   TSORL = TABLE 'LIAISON_A' ;\n                   TSORT.'LIAISON_A' = TSORL ;\n                   TSORL.TL1 = VRAI ;\n                   TSORL.TL2 = VRAI ;\n\n                   TL1 et TL2 etant deux tables definissant des liaisons\n                   (voir paragraphe 9)\n\n        Si l'on choisit des variables internes, il faut les donner dans\n        une table. Cette table est indicee par les noms de ces variables\n        et les valeurs sont VRAI ou FAUX. Voir paragraphe 8 pour la\n        definition des variables internes pour chaque type de liaison.\n\n        Exemple :\n                   TSORT = TABLE 'SORTIE'    ;\n                   TSORL = TABLE 'LIAISON_A' ;\n                   TSORT.'LIAISON_A' = TSORL ;\n                   TVAR  = TABLE 'VARIABLE'    ;\n                   TVAR.'FORCE_DE_CHOC' = VRAI ;\n                   TVAR.'DEPLACEMENT'   = FAUX ;\n                   TSORL.TL1 = TVAR ;\n                   \n                   TL1 etant une table definissant une liaison (voir\n                   paragraphe 9)\n\n\n  \n3.8 TAB1 :  Resultats de l'Operateur \n------------------------------------ \n        TAB1.'SOUSTYPE'        : 'RESULTAT_DYNE'\n        \n        TAB1.'TEMPS_DE_SORTIE' : Liste des temps de sortie (LISTREEL)\n        \n        TAB1.'REPRISE'         : TABLE contenant les informations\n                                  pour une eventuelle reprise\n\n        En fonction des demandes de sortie :\n\n        - si des VARIABLES au format CHPOINT sont demandees :\n       \n        TAB1.I   : TABLE contenant les resultats du I-eme pas de sortie\n        TAB1.I . 'DEPLACEMENT'       | : CHPOINT resultat \n                 'VITESSE'           |\n                 'DEPLACEMENT_1/2'   |\n                 'VITESSE_1/2'       |\n                 'ACCELERATION'      |\n                 'ACCELERATION_1/2'  |\n                 'TRAVAIL_EXTERIEUR' |\n                 'TRAVAIL_INTERIEUR' |\n                                                  \n        - si des VARIABLES au format LISTREEL sont demandees :\n       \n        TAB1. 'DEPLACEMENT'       | : Liste des valeurs des variables\n              'VITESSE'           |   demandees en fonction du temps\n              'DEPLACEMENT_1/2'   |   (LISTREEL)\n              'VITESSE_1/2'       |\n              'ACCELERATION'      |\n              'ACCELERATION_1/2'  |\n              'TRAVAIL_EXTERIEUR' |\n              'TRAVAIL_INTERIEUR' |\n\n        - si la sortie de LIAISONS sont demandees :\n        \n        TAB1.TL1 : TABLE contenant les resultats de la liaison.\n                  TL1 etant une table definissant une liaison.\n                  Cette table est indicee par les mots designant\n                  les variables internes de la liaison\n                  (ceux sont les indices de la table).\n                  Le resultat est un LISTREEL.\n\n                > Pour la liaison POINT_PLAN base A, les indices sont :\n                                          'DEPLACEMENT'\n                                          'FORCE_DE_CHOC'\n                  si amortissement        'VITESSE_NORMALE'\n\n                > Pour la liaison POINT_PLAN base B, et\n                       la liaison POINT_CERCLE base B,\n                  les indices sont :\n                                          'UX', 'UY', 'UZ', ...\n                                          'FORCE_DE_CHOC'\n                  si amortissement        'VITESSE_NORMALE'\n                  si seuil plastique (POINT_PLAN base B)\n                                          'DEPLACEMENT_PLASTIQUE'\n\n                > Pour la liaison POINT_POINT base B, les indices sont :\n                                          'UX_POINT_A', 'UY_POINT_A', ..\n                                          'UX_POINT_B', 'UY_POINT_A', ..\n                                          'FORCE_DE_CHOC_POINT_A'\n                                          'FORCE_DE_CHOC_POINT_B'\n                  si amortissement        'VITESSE_NORMALE'\n\n\n                > Pour la liaison POINT_POINT_FROTTEMENT base B        :\n                                       les indices sont :\n                                          'UX_POINT_A', 'UY_POINT_A', ..\n                                          'UX_POINT_B', 'UY_POINT_A', ..\n                                          'FORCE_DE_CHOC_POINT_A'\n                                          'FORCE_DE_CHOC_POINT_B'\n                                          'FORCE_DE_CHOC_TANGENTIELLE'\n                                          'PUISSANCE_USURE_INSTANTANEE'\n                  si amortissement        'VITESSE_NORMALE'\n\n                > Pour la liaison POINT_CERCLE_FROTTEMENT base B, \n                       la liaison POINT_PLAN_FROTTEMENT base B, les\n                  indices sont :\n                                          'UX', 'UY', 'UZ', ...\n                                          'FORCE_DE_CHOC_NORMALE'\n                                          'FORCE_DE_CHOC_TANGENTIELLE'\n                                          'PUISSANCE_USURE_INSTANTANEE'\n                                          'VITESSE_TANGENTIELLE'\n                 (cette variable fournit le module de la vitesse\n                  tangentielle pendant les phases de glissement.En cas\n                  d'adherence ou en absence de contact, sa valeur est\n                  zero)\n                  si amortissement        'VITESSE_NORMALE'\n                  Les sorties ci-dessus sont disponibles pour la liaison\n                  POINT_CERCLE_MOBILE aussi. Dans ce cas les deplacements \n                  et les vitesses sont les deplacements et vitesses \n                  relatives du point par rapport au cercle.\n\n                > Pour la liaison CERCLE_CERCLE_FROTTEMENT base B, et\n                       la liaison CERCLE_PLAN_FROTTEMENT base B,\n                  les indices sont :\n                                          'UX_POINT_FIBRE_NEUTRE'\n                                          'UY_POINT_FIBRE_NEUTRE'\n                                          'UZ_POINT_FIBRE_NEUTRE' ...\n                                          'VX_POINT_CONTACT'\n                                          'VY_POINT_CONTACT'\n                                          'VZ_POINT_CONTACT' ...\n                                          'FORCE_DE_CHOC_NORMALE'\n                                          'FORCE_DE_CHOC_TANGENTIELLE'\n                                          'MX_POINT_FIBRE_NEUTRE'\n                                          'MY_POINT_FIBRE_NEUTRE'\n                                          'MZ_POINT_FIBRE_NEUTRE' ...\n                                          'RX_POINT_FIBRE_NEUTRE'\n                                          'RY_POINT_FIBRE_NEUTRE'\n                                          'RZ_POINT_FIBRE_NEUTRE' ...\n                                          'PUISSANCE_USURE_INSTANTANEE'\n                  si amortissement        'VITESSE_NORMALE'\n\n                > Pour la liaison PROFIL_PROFIL_INTERIEUR base B, et\n                       la liaison PROFIL_PROFIL_EXTERIEUR base B,\n                  les indices sont :\n                                          'UX', 'UY', 'UZ', ...\n                                          'FORCE_DE_CHOC'\n\n                > Pour la liaison POINT_PLAN_FLUIDE base A,\n                  les indices sont :\n                                          'DEPLACEMENT'\n                                          'VITESSE_NORMALE'\n                                          'MASSE_AJOUTEE'\n                                          'FORCE_CONVECTION'\n                                          'FORCE_VISCOSITE'\n                                          'FORCE_PERTE_DE_CHARGE'\n\n                > Pour la liaison POINT_PLAN_FLUIDE base B,\n                  les indices sont :\n                                          'UX', 'UY', 'UZ'\n                                          'VITESSE_NORMALE'\n                                          'ACCELERATION_NORMALE'\n                                          'FORCE_INERTIE'\n                                          'FORCE_CONVECTION'\n                                          'FORCE_VISCOSITE'\n                                          'FORCE_PERTE_DE_CHARGE'\n\n                > Pour la liaison COUPLAGE_DEPLACEMENT base A,\n                  les indices sont :\n                                          'DEPLACEMENT'\n                                          'FORCE_DE_COUPLAGE_DEPLACEMENT\n\n                > Pour la liaison COUPLAGE_VITESSE base A,\n                  les indices sont :\n                                          'DEPLACEMENT'\n                                          'VITESSE'\n                                          'FORCE_DE_COUPLAGE_VITESSE'\n\n                > Pour la liaison POLYNOMIALE base A,\n                  l'indice est :\n                                           'FORCE_POLYNOMIALE'\n\n                > Pour la liaison POINT_POINT_DEPLACEMENT_PLASTIQUE base B,\n                  les indices sont :\n                                          'UX_POINT_A', 'UY_POINT_A', ..\n                                          'UX_POINT_B', 'UY_POINT_A', ..\n                                          'FORCE_DE_CHOC_POINT_A'\n                                          'FORCE_DE_CHOC_POINT_B'\n                                          'DEPLACEMENT_PLASTIQUE'\n                                          'DEPLACEMENT_PLASTIQUE_CUMULE'\n                  si amortissement        'VITESSE_NORMALE'\n\n                  Pour la liaison POINT_POINT_ROTATION_PLASTIQUE base B,\n                  les indices sont :\n                                          'RX_POINT_A', 'RY_POINT_A', ..\n                                          'RX_POINT_B', 'RY_POINT_A', ..\n                                          'MOMENT_DE_CHOC_POINT_A'\n                                          'MOMENT_DE_CHOC_POINT_B'\n                                          'ROTATION_PLASTIQUE'\n                                          'ROTATION_PLASTIQUE_CUMULE'\n                  si amortissement        'VITESSE_ROTATION_AXIALE'\n\n\n                > Pour la liaison LIGNE_LIGNE_FROTTEMENT base B,\n                  les indices sont :\n                                          'FORCE_DE_CHOC_NORMALE'\n                                          'FORCE_DE_CHOC_TANGENTIELLE'\n                                          'CHPOINT_FORCE_DE_CHOC'\n                  tous ces resultats sauf 'CHPOINT_FORCE_DE_CHOC'\n                  sont des listreels ayant en ordonnees la somme\n                  de la grandeur concernee pour tous les noeuds esclaves\n                  Le 'CHPOINT_FORCE_DE_CHOC' a comme composantes la force \n                  normale et la force tangentielle de chaque noeud. Il \n                  faut le demander explicitement en sortie.\n\n                > Pour la liaison LIGNE_CERCLE_FROTTEMENT base B,\n                  les indices sont :\n                                          'FORCE_DE_CHOC_NORMALE'\n                                          'FORCE_DE_CHOC_TANGENTIELLE'\n                                          'CHPOINT_FORCE_DE_CHOC'\n                  tous ces resultats sauf 'CHPOINT_FORCE_DE_CHOC'\n                  sont des listreels ayant en ordonnees la somme\n                  de la grandeur concernee pour tous les noeuds esclaves\n                  Le 'CHPOINT_FORCE_DE_CHOC' a comme composantes la force \n                  normale et la force tangentielle de chaque noeud. Il \n                  faut le demander explicitement en sortie.\n\n                > Pour la liaison PALIER_FLUIDE base B,       \n                  les indices sont :                                    \n                                          'UY_ARBRE'       \n                                          'UZ_ARBRE'       \n                                          'VY_ARBRE'       \n                                          'VZ_ARBRE'       \n                                          'FY_ARBRE'       \n                                          'FZ_ARBRE'\n                                          'TRAVAIL_FLUIDE'\n                  tous ces resultats sont des listreels ayant en abscisses\n                  le temps et en ordonnees la grandeur concernee\n\n\n           Pour les liaisons avec amortissement, ainsi que pour la\n           liaison polynomiale et la liaison palier, les vitesses sont\n           calculees de la facon suivante :\n           \n                xvit = (xdep - xdepm1) / pdts2\n                     xvit   : vitesse calculee\n                     xdep   : deplacement au pas m\n                     xdepm1 : deplacement au pas m-1/2\n                     pdts2  : demi-pas de temps\n\n                     \n  \n3.9 TAB11 :  Table de soustype 'PASAPAS'  (syntaxe 2) \n----------------------------------------------------- \n            les autres entrees sont :\n\n       'MODELE', objet de type MMODEL, restreint au comportement\n            'ELASTIQUE' 'MODAL', decrivant la base modale, nom\n            d'inconnue 'ALFA', et a la formulation 'LIAISON' \n            (voir notice MODE) ;\n\n       'CARACTERISTIQUES', type MCHAML, associe au 'MODELE' ;\n\n       'CHARGEMENT', type CHARGEMENT, chargement projete sur la base\n            modale, nom d'inconnue duale 'FALF' ;\n\n       'SORTIE', type TABLE, analogue a TAB8 dans la syntaxe 1 ;\n\n       'DEPLACEMENTS', type TABLE, indice par des ENTIERS : \n          'DEPLACEMENTS' . 0 , type 'CHPOINT', est le champ des\n            deplacements initiaux, nom d'inconnue 'ALFA' ;\n\n       'VITESSES', type TABLE, indice par des ENTIERS : \n          'VITESSES' . 0 , type 'CHPOINT', est le champ des\n            vitesses initiales, nom d'inconnue 'ALFA' ;\n \n       'INIT_DYNE', type 'TABLE', permet de poursuivre un calcul \n            avec l'objet obtenu en 'REPRISE' ou 'REPRISE_DYNE' ; \n\n       'NOMBRE_PAS', type ENTIER ;\n\n       'PAS_DE_TEMPS', type ENTIER ;\n\n       'PAS_DE_SORTIE', type ENTIER ;\n\n        creees ou completees par l'operateur DYNE :\n\n       'LIAISONS', type TABLE, collecte les resultats pour les liaisons\n          demandes par la TABLE 'SORTIE', analogue a TAB1, syntaxe 1 ;\n\n       'DEPLACEMENTS', type TABLE, deplacements aux points du 'MODELE' ;\n\n       'VITESSES', type TABLE, vitesses aux points du 'MODELE' ;\n\n       'REPRISE_DYNE', type TABLE, sauvegarde en vue de poursuivre.\n\n\n       \n  \n4.              DEFINITION DES LIAISONS             }   \n======================================================= \n \n    Il existe 20 types de liaisons :\n    \n         1- liaison POINT_PLAN base A et base B\n         2- liaison POINT_POINT base B\n         3- liaison POINT_CERCLE base B\n         4- liaison POINT_CERCLE_FROTTEMENT base B\n         5- liaison POINT_PLAN_FROTTEMENT base B\n         6- liaison POINT_POINT_FROTTEMENT base B\n         7- liaison CERCLE_CERCLE_FROTTEMENT base B\n         8- liaison CERCLE_PLAN_FROTTEMENT base B\n         9- liaison PROFIL_PROFIL_INTERIEUR base B\n        10- liaison PROFIL_PROFIL_EXTERIEUR base B\n        11- liaison POINT_PLAN_FLUIDE base A et base B\n        12- liaison COUPLAGE_DEPLACEMENT base A\n        13- liaison COUPLAGE_VITESSE base A\n        14- liaison POLYNOMIALE base A\n        15- liaison POINT_CERCLE_MOBILE base B\n        16- liaison POINT_POINT_DEPLACEMENT_PLASTIQUE base B\n        17- liaison POINT_POINT_ROTATION_PLASTIQUE base B\n        18- liaison LIGNE_LIGNE_FROTTEMENT base B\n        19- liaison LIGNE_CERCLE_FROTTEMENT base B\n        20- liaison PALIER_FLUIDE base B                      \n\n        \n    Rem : base A et B : \n    -------------------\n      *  La base A est la base sur laquelle les equations sont\n         decouplees (i.e. la base modale),\n      *  la base B est la base de discretisation EF sur laquelle on peut \n         exprimer des liaisons.  \n    \n    \n    Rem : liaisons conditionnelles : \n    ------------------------------\n    \n         Toutes ces liaisons, sauf 'PROFIL_...', et 'PALIER_FLUIDE'\n         peuvent etre rendues conditionnelles, c'est a dire que \n         la force de liaison associee n'est appliquee au systeme \n         que si une condition est realisee.\n         Comme condition , on peut aujourd'hui faire un\n         assemblage logique de  conditions elementaires.\n         Ces conditions elementaires sont du type\n           |  Force d'une liaison |  > ou <  1e-20\n         (le terme |Force d'une liaison| est egal la racine carree \n         de la somme des carres des forces exercees sur tous les \n         points de la liaison. P.ex. pour la liaison POINT_PLAN \n         base B, il s'agit de la force de contact tandis que pour \n         la liaison POINT_POINT il s'agit de la force de contact\n         multipliee par 2**.5).\n\n         On met en oeuvre ces conditions pour une liaison\n         elle-meme definie dans une table TLX par une declaration\n         de la forme :         \n         TLX . .... = definition normale\n         TLX . TLY  = vrai   ;\n         TLX . TLZ  = faux  ;\n           etc ...\n         ce qui signifie que Ftlx ne sera appliquee que si\n         |Ftly|  > 1e-20  et |Ftlz| <1e-20 et  etc...\n         On notera que:\n         - ceci ne concerne que la prise en compte de Ftlx et non pas \n           son calcul. Les sorties de la liaison ne sont pas modifiees\n         - ces conditions ne sont possibles qu'entre liaisons de meme \n           base ( Base A sur Base A , ... )\n         - ces conditions ne s'exercent qu'au premier niveau ( pas de\n           conditionnement mutuel , pas de transmission des conditions)\n           \n           \n    Rem : traitement du frottement :  (liaisons ***_FROTTEMENT)\n    ------------------------------\n    \n       *  Par defaut, les liaisons avec frottement utilisent \n          l'implementation du modele de frottement sec de Coulomb \n          realise par Antunes et al. (Journal of Fluids and Structures \n          1990 , vol 4 pp. 287-304 ).\n          \n          L'equation de la force tangentielle de frottement est :\n                               .     .\n          Ft = | -mug * |Fn| * Xt / |Xt|                 (si glissement)\n               |                              .\n               | Fgl  - Kf * (X - X0)  - Cf * X          (si adherence)\n               |   avec Fgl = Ft_dernierpasdeglissement\n               |        X0  = position du debut d'adherence\n          De plus, en adherence, on verifie si |Ft| < mua*|Fn|. Si cette\n          hypothese n'est pas verifiee, alors on passe en glissement.\n         \n       *  L'utilisateur peut alternativement utiliser le modele d'Oden\n          (CMAME 1984, pp. 527-634). Il s'agit d'un modele de\n          regularisation de la force de frottement pour des vitesses\n          petites. \n          Pour l'utiliser, il suffit de  donner une valeur negative de \n          TL1 . 'RAIDEUR_TANGENTIELLE' et la vitesse de regularisation \n          epsi (positive) a l'indice TL1.'AMORTISSEMENT_TANGENTIEL'.\n          \n          L'equation de la force tangentielle de frottement est alors :\n                                .              .              .\n          Ft = | -mug*|Fn| * (2-(|Xt|/epsi)) * (Xt/epsi)  si |Xt| < epsi\n               |              .   .                           .\n               | -mug*|Fn| * (Xt/|Xt|)                    si |Xt| >=epsi\n               \n          La valeur de TL1.'COEFFICIENT_ADHERENCE' n'intervient pas \n          quand on utilise ce modele de frottement.   \n             \n\n  \n4.1 La liaison POINT_PLAN \n------------------------- \n 2.1.1 La liaison POINT_PLAN base A\n       ----------------------------\n       Choc d'un point appartenant a une structure sur un plan fixe\n       En base A, une liaison s'exprime sur une inconnue scalaire.\n       Pour exprimer un choc POINT_PLAN (base A etant la base des\n       deplacements modaux) on doit donner :\n       -le type de la liaison\n       -le point (A, de type POINT)\n       -la raideur de choc (Kchoc, de type FLOTTANT)\n       -le jeu (jeu, de type FLOTTANT)\n          optionnel :\n       -l'amortissement (Cchoc objet de type FLOTTANT)\n\n            Plan        Plan        A : point SUPPORT de la structure\n              |           |             de deplacement X\n              |           |\n              |    A      |\n              |     *     |             La direction de choc ne peut\n              |     .     |             etre donnee que par le signe\n              |     .     |             du jeu.\n              |     . jeu  positif\n              |     .---->|\n              |<----.\n                jeu negatif\n\n       Equation de la force de choc :\n                                                      .\n         F = s * | -Kchoc * (s*X - |jeu|)  -Cchoc * s*X    si |X|>|jeu| \n                 |  0                                      sinon\n         avec  s = sign(jeu)\n         De plus, dans le cas avec amortissement, F est mis a 0 \n         si X et F sont de meme signe\n       \n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'  =  MOT 'POINT_PLAN' ;\n         TL1.'SUPPORT'       =  ...              ;\n         TL1.'RAIDEUR'       =  ...              ;\n         TL1.'JEU'           =  ...              ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT' =  ...              ;\n\n\n 2.1.2 La liaison POINT_PLAN base B\n       ----------------------------\n       Choc d'un point appartenant a une structure sur un milieu\n       semi-infini, delimite par un plan fixe.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : \n       - le type de la liaison\n       - le point (A, de type POINT)\n       - la normale (N, de type POINT)\n       - la raideur de choc (Kchcoc, de type FLOTTANT)\n             ou\n       - la loi de comportement elastique (objet de type EVOLUTION)\n       - le jeu (jeu, de type FLOTTANT)\n          optionnel :\n       - l'amortissement (Cchoc, de type FLOTTANT)\n       - le seuil plastique (objet de type FLOTTANT)\n           (dans ce dernier cas on considere que le ressort de choc \n           est elastique parfaitement plastique. Si l'on veut definir un \n           deplacement plastique initial il faut l'inclure dans le jeu)\n       - la condition de liaison permanente (objet de type LOGIQUE)\n\n                      Plan           A  point SUPPORT de la structure\n                        |\n                        |   -->     -->\n                 A      |    N       N  normale perpendiculaire au plan\n                  *     |------>        et dirigee vers l'interieur\n                  .     |               du massif.\n                  .     |\n                  . jeu |               Le jeu peut-etre negatif ou nul\n                  .<--->|\n                                        \n       Equation de la force de choc :\n       \n         ->         ->\n         F  =  F *  N                             .\n         avec F = | {-Kchoc * (X - jeu)  -Cchoc * X}^-    si X>jeu \n                  |  0                                    sinon\n                    ->   ->  \n              X  =  X  * N\n              {F}^- : partie negative de F\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'        =  MOT 'POINT_PLAN' ;\n         TL1.'SUPPORT'             =  ...              ;\n         TL1.'NORMALE'             =  ...              ;\n         TL1.'RAIDEUR'             =  ...              ;\n           ou\n         TL1.'LOI_DE_COMPORTEMENT' =  ...              ;\n         TL1.'JEU'                 =  ...              ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'       =  ...              ;\n            avec plastification du ressort de choc\n         TL1.'SEUIL_PLASTIQUE'     = ...              ;\n            avec la condition de liaison permanente\n         TL1.'LIAISON_PERMANENTE'  = ...              ;\n\n\n  \n4.2 La liaison POINT_POINT base B \n--------------------------------- \n       Choc de deux points pouvant appartenir a des structures\n       differentes.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : \n       - le type de la liaison\n       - le premier point (objet de type POINT)\n       - le deuxieme point (objet de type POINT)\n       - la normale (objet de type POINT)\n       - la raideur de choc (objet de type FLOTTANT)\n              ou\n       - la loi de comportement elastique (objet de type EVOLUTION)\n       - le jeu (objet de type FLOTTANT)\n           optionnel :\n       - l'amortissement (objet de type FLOTTANT)\n       - la condition de liaison permanente (objet de type LOGIQUE)\n\n                           -->\n                 Point A    N        Point B\n                    * ----------->    *\n\n                             -->\n                 La normale  N  indiquant la direction de choc\n                  \n       Equation de la force de choc :\n       \n         ->          ->     ->     ->\n         FA  =  F *  N   et FB = - FA             .\n         avec F = | {-Kchoc * (X - jeu)  -Cchoc * X}^-    si X>jeu \n                  |  0                                    sinon\n                     ->   ->     ->\n              X  =  (XA - XB)  * N      \n              {F}^- : partie negative de F\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n         TL1.'TYPE_LIAISON'        =  MOT 'POINT_POINT' ;\n         TL1.'POINT_A'             =  ...               ;\n         TL1.'POINT_B'             =  ...               ;\n         TL1.'NORMALE'             =  ...               ;\n         TL1.'RAIDEUR'             =  ...               ;\n           ou\n         TL1.'LOI_DE_COMPORTEMENT' =  ...               ;\n         TL1.'JEU'                 =  ...               ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'       =  ...               ;\n            avec la condition de liaison permanente\n         TL1.'LIAISON_PERMANENTE'  = ...              ;\n\n\n  \n4.3 La liaison POINT_CERCLE base B \n---------------------------------- \n       Choc d'un point de la structure sur un cercle fixe\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : \n       - le type de la liaison\n       - le point (A, de type POINT)\n       - l'excentrement du cercle (AO, de type POINT)\n       - la normale perpendiculaire au plan du cercle (N, de type POINT)\n       - le rayon du cercle (R, de type FLOTTANT)\n       - la raideur de choc (Kchoc, de type FLOTTANT)\n          optionnel :\n       - l'amortissement (Cchoc, de type FLOTTANT)\n\n                           Y ^\n                             |\n                            .|.\n                         .   |   .            O   centre du cercle\n                       .     |     .\n                             |                A   point de la structure\n                      .   A  *------.-->\n                          *  O           X    -->\n                       .           .          AO  excentrement du cercle\n                         .       .\n                            . .\n                                              ->\n                                              N  normale perpendiculaire\n                          Z  ^                   au plan du cercle\n                             |  ->\n                             |  N             R   rayon du cercle\n                             |\n                      ...............----->\n                                           X\n                                R\n                             ------->\n\n       Equation de la force de choc :\n       \n         ->          ->    \n         F  =  F *  N                            .\n         avec F = | {-Kchoc * (OX - R)  -Cchoc * X}^-    si OX>R \n                  |  0                                   sinon\n                        ->  ->            ->   ->   ->  ->   ->\n              OX  =  || X'- AO ||    et   X' = X - (X * N) * N\n              {F}^- : partie negative de F\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'      ;\n         TL1.'TYPE_LIAISON'  =  MOT 'POINT_CERCLE' ;\n         TL1.'SUPPORT'       =  ...                ;\n         TL1.'EXCENTRATION'  =  ...                ;\n         TL1.'NORMALE'       =  ...                ;\n         TL1.'RAIDEUR'       =  ...                ;\n         TL1.'RAYON'         =  ...                ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT' =  ...                ;\n\n\n  \n4.4 La liaison POINT_CERCLE_FROTTEMENT base B \n--------------------------------------------- \n       Choc d'un point de la structure sur un cercle fixe, avec prise\n       en compte du frottement sec dans le plan tangent du contact.\n       Le contact peut etre interieur ou exterieur.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees obligatoires sont :\n       - le type de la liaison\n       - le point A (objet de type POINT)\n       - l'excentrement du cercle (objet de type POINT)\n       - la normale perpendiculaire au plan du\n         cercle (objet de type POINT)\n       - le rayon du cercle (FLOTTANT)\n       - la raideur de choc (FLOTTANT)\n       - le coefficient de glissement (FLOTTANT)\n       - le coefficient d'adherence (FLOTTANT)\n       - la raideur tangentielle (FLOTTANT)\n       - l'amortissement tangentiel (FLOTTANT)\n       et les donnees optionnelles sont :\n       - l'amortissement de choc(objet de type FLOTTANT\n       - le type de contact (objet de type LOGIQUE)\n       - la vitesse tangentielle d'entrainement Ve sur le cercle (FLOTTANT) \n         correspondant a une rotation (Ve=+OMEGA*R si le cercle tourne \n         dans le meme sens N et Ve=-OMEGA*R si c'est le point qui tourne)\n                          \n\n                           Y ^\n                             |\n                            .|.\n                         .   |   .            O   centre du cercle\n                       .     |     .\n                             |                A   point de la structure\n                      .   A  *------.-->\n                          *  O           X    -->\n                       .           .          AO  excentrement du cercle\n                         .       .\n                            . .\n                                              ->\n                                              N  normale perpendiculaire\n                          Z  ^                   au plan du cercle\n                             |  ->\n                             |  N             R   rayon du cercle\n                             |\n                      ...............----->\n                                           X\n                                R\n                             ------->\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n              Le contact est pris interieur par defaut.\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'      ;\n         TL1.'TYPE_LIAISON'             =  MOT 'POINT_CERCLE_FROTTEMENT'\n         TL1.'SUPPORT'                  =  ...                ;\n         TL1.'EXCENTRATION'             =  ...                ;\n         TL1.'NORMALE'                  =  ...                ;\n         TL1.'RAIDEUR'                  =  ...                ;\n         TL1.'RAYON'                    =  ...                ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n         TL1.'CONTACT_INTERIEUR'        =  ...                ;\n           si amortissement normal :\n         TL1.'AMORTISSEMENT'            =  ...                ;\n           si rotation du cercle ou du point :\n         TL1.'VITESSE_ENTRAINEMENT'     =  ...                ;\n\n         \n  \n4.5 La liaison POINT_PLAN_FROTTEMENT base B \n------------------------------------------- \n       Choc d'un point appartenant a une structure sur un milieu\n       semi-infini, delimite par un plan fixe.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees obligatoires sont : \n       - le type de la liaison\n       - le point (objet de type POINT)\n       - la normale (objet de type POINT)\n       - la raideur de choc (objet de type FLOTTANT)\n             ou\n       - la loi de comportement elastique (objet de type EVOLUTION)\n       - le jeu (objet de type FLOTTANT)\n       - le coefficient de glissement (mug objet de type FLOTTANT)\n       - le coefficient d'adherence (mua objet de type FLOTTANT)\n       - la raideur tangentielle (Kt, objet de type FLOTTANT)\n       - l'amortissement tangentiel (Ct, objet de type FLOTTANT)\n       et les donnees optionnelles sont :\n       - l'amortissement de choc (objet de type FLOTTANT)\n       - la vitesse tangentielle d'entrainement Ve du plan (POINT) \n\n\n                      Plan           A  point SUPPORT de la structure\n                        |\n                        |   -->     -->\n                 A      |    N       N  normale perpendiculaire au plan\n                  *     |------>        et dirigee vers l'interieur\n                  .     |               du massif.\n                  .     |\n                  . jeu |               Le jeu peut-etre negatif ou nul\n                  .<--->|\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'             =  MOT 'POINT_PLAN_FROTTEMENT' ;\n         TL1.'SUPPORT'                  =  ...                ;\n         TL1.'NORMALE'                  =  ...                ;\n         TL1.'RAIDEUR'                  =  ...                ;\n          ou\n         TL1.'LOI_DE_COMPORTEMENT'      =  ...                ;\n         TL1.'JEU'                      =  ...                ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n           si amortissement normal :\n         TL1.'AMORTISSEMENT'            =  ...                ;\n           si translation du plan :\n         TL1.'VITESSE_ENTRAINEMENT'     =  ...                ;\n\n\n  \n4.6 La liaison POINT_POINT_FROTTEMENT base B \n-------------------------------------------- \n       Choc de deux points pouvant appartenir a des structures\n       differentes.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le premier point (objet de type POINT)\n                          le deuxieme point (objet de type POINT)\n                          la normale (objet de type POINT)\n                          la raideur de choc (objet de type FLOTTANT)\n                               ou\n                       la loi de comportement elastique (objet de type\n                                                             EVOLUTION)\n                          le jeu (objet de type FLOTTANT)\n                          le coefficient de glissement (objet de type\n                               FLOTTANT)\n                          le coefficient d'adherence (objet de type\n                               FLOTTANT)\n                          la raideur tangentielle (objet de type\n                               FLOTTANT)\n                          l'amortissement tangentiel (objet de type\n                               FLOTTANT)\n                            optionnel :\n                          l'amortissement (objet de type FLOTTANT)\n\n\n                           -->\n                 Point A    N        Point B\n                    * ----------->    *\n\n                             -->\n                  La normale  N  indiquant la direction de choc\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n         TL1.'TYPE_LIAISON'  =  MOT 'POINT_POINT_FROTTEMENT';\n         TL1.'POINT_A'       =  ...               ;\n         TL1.'POINT_B'       =  ...               ;\n         TL1.'NORMALE'       =  ...               ;\n         TL1.'RAIDEUR'       =  ...               ;\n           ou\n         TL1.'LOI_DE_COMPORTEMENT' =  ...               ;\n         TL1.'JEU'           =  ...               ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT' =  ...               ;\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n\n\n\n  \n4.7 La liaison CERCLE_CERCLE_FROTTEMENT base B \n---------------------------------------------- \n       Choc d'un cercle represente par un point A appartenant a une\n       structure sur un cercle fixe, avec prise en compte du frottement\n       sec dans le plan tangent du contact.\n       Le contact peut etre interieur ou exterieur.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le point (objet de type POINT)\n                          le rayon du cercle interieur (support)\n                               (objet de type FLOTTANT)\n                          l'excentrement du cercle (objet de type POINT)\n                          la normale perpendiculaire au plan du\n                               cercle (objet de type POINT)\n                          le rayon du cercle exterieur (butee)\n                               (objet de type FLOTTANT)\n                          la raideur de choc (objet de type FLOTTANT)\n                          le coefficient de glissement (objet de type\n                               FLOTTANT)\n                          le coefficient d'adherence (objet de type\n                               FLOTTANT)\n                          la raideur tangentielle (objet de type\n                               FLOTTANT)\n                          l'amortissement tangentiel (objet de type\n                               FLOTTANT)\n                            optionnel :\n                          l'amortissement de choc(objet de type FLOTTANT\n                          le type de contact (objet de type LOGIQUE)\n\n                             Y ^\n                               |\n                              +|+\n                           +   |   +\n                         +     |     +\n                       +       |       +\n                      +        |        +\n                     +         |         +\n                    +    ...   |          +\n                       .     . *---------------->\n                    + .  A*   .O          +    X\n                     + *     .           +\n                      + P...            +\n                       +    . .        +\n                         +           +       ->\n                           +       +\n                              + +\n                   -->\n                   AO   excentrement du cercle\n\n                    O   centre du cercle exterieur (butee)\n\n                    A   centre du cercle interieur (support)\n\n                    P   point de contact support-butee\n\n                   AP   rayon du cercle interieur (support)\n\n\n                            Z  ^\n                               |  ->\n                               |  N\n                               |\n                    +++++++++++++++++++++++---->\n                                               X\n                                    R\n                               ----------->\n\n                   ->\n                   N  normale perpendiculaire au plan du cercle\n\n                   R  rayon du cercle exterieur (butee)\n\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n              Le contact est pris interieur par defaut.\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'      ;\n         TL1.'TYPE_LIAISON'             = MOT 'CERCLE_CERCLE_FROTTEMENT'\n         TL1.'SUPPORT'                  =  ...                ;\n         TL1.'RAYON_SUPPORT'            =  ...                ;\n         TL1.'EXCENTRATION'             =  ...                ;\n         TL1.'NORMALE'                  =  ...                ;\n         TL1.'RAIDEUR'                  =  ...                ;\n         TL1.'RAYON_BUTEE'              =  ...                ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n         TL1.'CONTACT_INTERIEUR'        =  ...                ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'            =  ...                ;\n\n\n  \n4.8 La liaison CERCLE_PLAN_FROTTEMENT base B \n-------------------------------------------- \n      \n       Choc d'un cercle represente par un point A appartenant a une\n       structure sur un milieu semi-infini, delimite par un plan fixe.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le point (objet de type POINT)\n                          le rayon du cercle (objet de type FLOTTANT)\n                          la normale (objet de type POINT)\n                          la raideur de choc (objet de type FLOTTANT)\n                          le jeu (objet de type FLOTTANT)\n                          le coefficient de glissement (objet de type\n                               FLOTTANT)\n                          le coefficient d'adherence (objet de type\n                               FLOTTANT)\n                          la raideur tangentielle (objet de type\n                               FLOTTANT)\n                          l'amortissement tangentiel (objet de type\n                               FLOTTANT)\n                            optionnel :\n                          l'amortissement de choc(objet de type FLOTTANT\n\n\n                                  Plan\n\n                                    |\n                           +        |   -->\n                         +   + P    |    N\n                        + A*  *     |------>\n                         +   +.     |\n                           +  .     |\n                              .     |\n                              . jeu |\n                              .<--->|\n\n                   A  centre du cercle SUPPORT de la structure\n\n                   P  point contact cercle-plan\n\n                   AP rayon du cercle\n\n                   ->\n                   N  normale perpendiculaire au plan et dirigee vers\n                      l'interieur du massif.\n\n                   Le jeu peut-etre negatif ou nul\n\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'             =  MOT 'CERCLE_PLAN_FROTTEMENT';\n         TL1.'SUPPORT'                  =  ...                ;\n         TL1.'RAYON_SUPPORT'            =  ...                ;\n         TL1.'NORMALE'                  =  ...                ;\n         TL1.'RAIDEUR'                  =  ...                ;\n         TL1.'JEU'                      =  ...                ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'            =  ...                ;\n\n\n  \n4.9 La liaison PROFIL_PROFIL_INTERIEUR base B \n--------------------------------------------- \n       Choc d'un profil represente par un point A appartenant a une\n       structure sur un profil fixe.\n       Le profil represente par le point A est a l'interieur du profil\n       fixe.\n       La normale donnee est perpendiculaire au plan forme par les\n       profils.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le point (objet de type POINT)\n                          le profil mobile (objet de type MAILLAGE)\n                          le profil fixe (objet de type MAILLAGE)\n                          la normale (objet de type POINT)\n                          la raideur de choc (objet de type FLOTTANT)\n                          l'exposant raideur (objet de type FLOTTANT)\n\n\n\n                    |-------------|\n                    |             |<---  profil fixe\n                    |  +++++++++  |\n                    |  +       +  |\n                    |  +  A*   +<------  profil mobile lie au point A\n                    |  +       +  |             de la structure\n                    |  +++++++++  |\n                    |             |\n                    |-------------|\n\n\n                           ^  ->\n                           |  N\n                           |\n                           |\n                    ---+++++++++---\n\n                   ->\n                   N  normale perpendiculaire au plan des profils\n\n\n       Nota : 1- Les profils doivent etre orientes suivant le sens tri-\n                 gonometrique.\n              2- Dans la position de repos, les 2 maillages des profils\n                 ne doivent pas avoir de points d'intersection.\n              3- La force de choc normale est calculee de la facon\n                 suivante :\n                                        b\n                         F = -K * (aire)\n\n                    aire : la surface du profil ayant traverse le\n                           profil fixe\n                       K : raideur de choc, donnee par l'utilisateur\n                       b : exposant raideur, donne par l'utilisateur\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'      =  MOT 'PROFIL_PROFIL_INTERIEUR' ;\n         TL1.'SUPPORT'           =   ...        ;\n         TL1.'PROFIL_MOBILE'     =   ...        ;\n         TL1.'PROFIL_FIXE'       =   ...        ;\n         TL1.'NORMALE'           =   ...        ;\n         TL1.'RAIDEUR'           =   ...        ;\n         TL1.'EXPOSANT_RAIDEUR'  =   ...        ;\n\n\n  \n4.10 La liaison PROFIL_PROFIL_EXTERIEUR base B \n---------------------------------------------- \n      \n       Choc d'un profil represente par un point A appartenant a une\n       structure sur un profil fixe.\n       Le profil represente par le point A est a l'exterieur du profil\n       fixe.\n       La normale donnee est perpendiculaire au plan forme par les\n       profils.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le point (objet de type POINT)\n                          le profil mobile (objet de type MAILLAGE)\n                          le profil fixe (objet de type MAILLAGE)\n                          la normale (objet de type POINT)\n                          la raideur de choc (objet de type FLOTTANT)\n                          l'exposant raideur (objet de type FLOTTANT)\n\n\n\n              |-------|\n              |       |<---------  profil fixe\n              |       |  +++++++\n              |       |  +     +\n              |       |  + A*  +<---  profil mobile lie au point A\n              |       |  +     +             de la structure\n              |       |  +++++++\n              |       |\n              |-------|\n\n\n                            ^  ->\n                            |  N\n                            |\n                            |\n              ---------  +++++++\n\n                   ->\n                   N  normale perpendiculaire au plan des profils\n\n\n       Nota : 1- Les profils doivent etre orientes suivant le sens tri-\n                 gonometrique.\n              2- Dans la position de repos, les 2 maillages des profils\n                 ne doivent pas avoir de points d'intersection.\n              3- La force de choc normale est calculee de la facon\n                 suivante :\n                                        b\n                         F = -K * (aire)\n\n                    aire : la surface du profil ayant traverse le\n                           profil fixe\n                       K : raideur de choc, donnee par l'utilisateur\n                       b : exposant raideur, donne par l'utilisateur\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'      =  MOT 'PROFIL_PROFIL_EXTERIEUR' ;\n         TL1.'SUPPORT'           =   ...        ;\n         TL1.'PROFIL_MOBILE'     =   ...        ;\n         TL1.'PROFIL_FIXE'       =   ...        ;\n         TL1.'NORMALE'           =   ...        ;\n         TL1.'RAIDEUR'           =   ...        ;\n         TL1.'EXPOSANT_RAIDEUR'  =   ...        ;\n\n         \n  \n4.11 La liaison POINT_PLAN_FLUIDE \n--------------------------------- \n 2.11.1 La liaison POINT_PLAN_FLUIDE base A\n        -----------------------------------\n       Choc d'un point appartenant a une structure sur un plan fixe.\n       Entre le plan et le point, il existe un film de fluide.\n       En base A, une liaison s'exprime sur une inconnue scalaire.\n       Pour exprimer un choc PLAN_FLUIDE (base A etant la base des\n       deplacements reels) on doit donner :\n               le type de la liaison\n               le support (objet de type POINT)\n               le coefficient d'inertie CI (objet de type FLOTTANT)\n               le coefficient de convection CC (objet de type FLOTTANT)\n               le coefficient de viscosite CV (objet de type FLOTTANT)\n               le coefficient de perte de charge d'eloignement CPE\n                              (objet de type FLOTTANT)\n               le coefficient de perte de charge de rapprochement CPR\n                              (objet de type FLOTTANT)\n               le jeu du fluide (objet de type FLOTTANT)\n\n\n            Plan        Plan        A  point SUPPORT de la structure\n              |           |\n              |           |\n              |    A      |\n              |     *     |             La direction de choc ne peut\n              |     .     |                etre donnee que par le signe\n              |     .     |                du jeu.\n              |     . jeu  positif\n              |     .---->|\n              |<----.\n                jeu negatif\n\n           la vitesse est calculee de la facon suivante :\n                xvit = (xdep - xdepm1) / pdts2\n                     xvit   : vitesse calculee\n                     xdep   : deplacement au pas m\n                     xdepm1 : deplacement au pas m-1/2\n                     pdts2  : demi-pas de temps\n\n          la masse ajoutee est calculee de la facon suivante et est\n             ajoutee aux termes de gauche de l'equation:\n                m =  CI / | jeu - xdep |\n          la force de convection est calculee de la facon suivante:\n                              2                 2\n                F = -CC * xvit  / ( jeu - xdep )   si jeu >0\n\n                              2                 2\n                F =  CC * xvit  / ( jeu - xdep )   si jeu <0\n          la force de viscosite est calculee de la facon suivante:\n                                               3\n                F = -CV * xvit / | jeu - xdep |\n          la force de perte de charge est calculee de la facon suivante:\n             si xvit > 0                                 2\n                F = -CPE * xvit * |xvit| / |jeu - xdep |\n             si xvit < 0                                 2\n                F = -CPR * xvit * |xvit| / | jeu - xdep|\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'     =  MOT 'POINT_PLAN_FLUIDE' ;\n         TL1.'SUPPORT'                         =    ...    ;\n         TL1.'COEFFICIENT_INERTIE'             =    ...    ;\n         TL1.'COEFFICIENT_CONVECTION'          =    ...    ;\n         TL1.'COEFFICIENT_VISCOSITE'           =    ...    ;\n         TL1.'COEFFICIENT_P_D_C_ELOIGNEMENT'   =    ...    ;\n         TL1.'COEFFICIENT_P_D_C_RAPPROCHEMENT' =    ...    ;\n         TL1.'JEU_FLUIDE'                      =    ...    ;\n\n\n 2.11.2 La liaison POINT_PLAN_FLUIDE base B\n        -----------------------------------\n       Choc d'un point appartenant a une structure sur un milieu\n       semi-infini, delimite par un plan fixe.\n       Entre le plan et le point, il existe un film de fluide.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n               le type de la liaison\n               le support (objet de type POINT)\n               la normale (objet de type POINT)\n               le coefficient d'inertie CI (objet de type FLOTTANT)\n               le coefficient de convection CC (objet de type FLOTTANT)\n               le coefficient de viscosite CV (objet de type FLOTTANT)\n               le coefficient de perte de charge d'eloignement CPE\n                              (objet de type FLOTTANT)\n               le coefficient de perte de charge de rapprochement CPR\n                              (objet de type FLOTTANT)\n               le jeu du fluide (objet de type FLOTTANT)\n\n\n                      Plan           A  point SUPPORT de la structure\n                        |\n                        |   -->     -->\n                 A      |    N       N  normale perpendiculaire au plan\n                  *     |------>        et dirigee vers l'interieur\n                  .     |               du massif.\n                  .     |\n                  . jeu |               Le jeu doit etre positif\n                  .<--->|\n\n\n           la vitesse est calculee de la facon suivante :\n                xvit = (xdep - xdepm1) / pdts2\n           l'acceleration est calculee de la facon suivante :\n                xacc = (xvit - xvitm1) / pdts2\n                     xvit   : vitesse calculee\n                     xacc   : acceleration calculee\n                     xdep   : deplacement au pas m\n                     xdepm1 : deplacement au pas m-1/2\n                     xvit   : vitesse au pas m\n                     xvitm1 : vitesse au pas m-1/2\n                     pdts2  : demi-pas de temps\n\n          la force d'inertie est calculee de la facon suivante:\n                F = -CI * xacc / ( xdep + jeu )\n          la force de convection est calculee de la facon suivante:\n                              2                 2\n                F =  CV * xvit  / ( xdep + jeu )\n          la force de viscosite est calculee de la facon suivante:\n                                               3\n                F = -CC * xvit / ( xdep + jeu )\n          la force de perte de charge est calculee de la facon suivante:\n             si xvit > 0                                 2\n                F = -CPE * xvit * |xvit| / ( xdep + jeu )\n             si xvit < 0                                 2\n                F = -CPR * xvit * |xvit| / ( xdep + jeu )\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'     =  MOT 'POINT_PLAN_FLUIDE' ;\n         TL1.'SUPPORT'                         =    ...    ;\n         TL1.'NORMALE'                         =    ...    ;\n         TL1.'COEFFICIENT_INERTIE'             =    ...    ;\n         TL1.'COEFFICIENT_CONVECTION'          =    ...    ;\n         TL1.'COEFFICIENT_VISCOSITE'           =    ...    ;\n         TL1.'COEFFICIENT_P_D_C_ELOIGNEMENT'   =    ...    ;\n         TL1.'COEFFICIENT_P_D_C_RAPPROCHEMENT' =    ...    ;\n         TL1.'JEU_FLUIDE'                      =    ...    ;\n\n\n  \n4.12 La liaison COUPLAGE_DEPLACEMENT base A \n------------------------------------------- \n         \n       Cette liaison calcule une force appliquee sur un mode i\n       fonction du deplacement issu d'un mode j.\n\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       avec pour donnees obligatoires : \n             - le TYPE de la liaison\n             - le SUPPORT (objet de type POINT) representant le mode\n               sur lequel s'applique la force\n             - l'ORIGINE  (objet de type POINT) representant le mode\n               d'ou provient la force\n             - le COEFFICIENT de proportionnalite entre la force et le\n               deplacement (objet de type FLOTTANT)\n               \n       Avec les donnees d'entree listee ci-dessus, la force est par \n       defaut proportionnelle au deplacement :\n                        Fi = coeff. * Qj\n               \n       Si l'on souhaite imposer une force fonction puissance du \n       deplacement du type :\n                        Fi = coeff. * (Qj**p)\n       il faut alors egalement fournir :\n             - l'EXPOSANT p (FLOTTANT) de la fonction\n                  \n       On peut aussi imposer une force fonction trigonometrique du \n       deplacement :\n                        Fi = coeff. * cos(Qj)\n       en fournissant :\n             - le nom de la FONCTION (mot 'COS' ou 'SIN')\n             \n       Si la relation est une fonction du temps du type :\n                   Fi(t) = coeff. * cos(Wt) * Qj(t)\n       il faut alors fournir :\n             - le nom de FONCTION (mot 'COS', 'SIN')\n             - ainsi que la FREQUENCE (W en rad/s) de cette fonction\n                   \n       Si la relation fait intervenir un produit de convolution :\n                   Fi(t) = coeff. * \\int_0^T h(\\tau)*Qj(t-\\tau) d\\tau           \n       il faut alors fournir a l'indice FONCTION_CONVOLUTION :\n             - la fonction h(t) a convoluer (objet 'LISTREEL')\n               fournie sous la forme { h(0) h(\\Delta t) ...  h(T) } \n          ou - le mot-cle 'GRANGER_PAIDOUSSIS' suivi des parametres\n               de ce modele (les coefficients alpha_i, delta_i,\n               la vitesse moyenne d'ecoulement et le diametre).\n               La force sera calculee selon :\n                     h(\\tau) = \\sum_{i=1..n} \\alpha_i \\delta_i V/D \n                             * exp(\\delta_i V/D \\tau) * Heavyside(\\tau) \n                             + D/V (1-\\sum{i=1..n}) * \\Dirac(\\tau)               \n                              \n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'          =  MOT 'COUPLAGE_DEPLACEMENT' ;\n         TL1.'SUPPORT'               =    ...    ;\n         TL1.'ORIGINE'               =    ...    ;\n         TL1.'COEFFICIENT'           =    ...    ;\n        (TL1.'EXPOSANT'              =    ...    ;)\n        (TL1.'FONCTION'              =    ...    ;)\n        (TL1.'FREQUENCE'             =    ...    ;)\n        (TL1.'FONCTION_CONVOLUTION'  =    ...    ;)\n        (TL1.'ALPHA'                 =    ...    ;)\n        (TL1.'DELTA'                 =    ...    ;)\n        (TL1.'DIAMETRE'              =    ...    ;)\n\n        \n  \n4.13 La liaison COUPLAGE_VITESSE base A \n--------------------------------------- \n         \n       Cette liaison calcule une force appliquee sur un mode i\n       proportionnelle a la vitesse issue d'un mode j.\n                                      .\n                        Fi = coeff. * Qj\n\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n               le type de la liaison\n               le support (objet de type POINT) representant le mode\n                          sur lequel s'applique la force\n               l'origine  (objet de type POINT) representant le mode\n                          d'ou provient la force\n               le coefficient de proportionnalite entre la force et\n                          la vitesse (objet de type FLOTTANT)\n\n      La vitesse est calculee de la facon suivante :\n                xvit = (xdep - xdepm1) / pdts2\n      ou:       xvit  est la vitesse calculee\n                xdep  est le deplacement au pas m\n                xdepm1 est le deplacement au pas m-1/2\n                pdts2  est le demi-pas de temps\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'    ;\n         TL1.'TYPE_LIAISON'     =  MOT 'COUPLAGE_VITESSE' ;\n         TL1.'SUPPORT'                            =    ...    ;\n         TL1.'ORIGINE'                            =    ...    ;\n         TL1.'COEFFICIENT'                        =    ...    ;\n\n         \n  \n4.14 La liaison POLYNOMIALE base A \n---------------------------------- \n          \n        Cette liaison calcule une force appliquee a un mode i, constituee par\n        un ensemble de contributions provenant d'autres modes (modes j) :\n\n                       b           .c       '        d          .e       '\n        f   =  a   [  Q  (t - T )  Q  (t - T ) ]  [ Q  (t - T ) Q  (t - T ) ] ..\n         i      i      j       j    j       j        k       k   k       k\n        \n        avec : Q  = < q - J > si J  >= 0       <.> etant la partie positive de .\n                j      j   d      d\n                  = < J - q > si J  < 0\n                       d   j      d\n               .      .\n               Q  = < q - J > si J  >= 0       <.> etant la partie positive de .\n                j      j   v      v\n                          .\n                  = < J - q > si J  < 0\n                       v   j      v\n\n        Il faut definir une table de sous-type LIAISON_ELEMENTAIRE.\n        Les donnees sont :\n                - le type de la liaison : POLYNOMIALE\n                - le support (objet de type POINT) representant le mode i sur\n                  lequel s'applique la liaison\n                - un coefficient (objet de type FLOTTANT)\n        et pour chaque contribution modale, une table de sous-type CONTRIBUTION,\n        referencee dans la precedente a l'indice du point origine du mode j cont\n                - l'exposant du deplacement (objet de type FLOTTANT)\n                - le terme de retard du deplacement (objet de type FLOTTANT)\n                - l'exposant de la vitesse (objet de type FLOTTANT)\n                - le terme de retard de la vitesse (objet de type FLOTTANT)\n                - le jeu relatif au deplacement (objet de type FLOTTANT)\n                - le jeu relatif a la vitesse (objet de type FLOTTANT)\n\n        Remarques : un des modes origine j peut etre le mode support i. Les indi\n        de la table de sous-type CONTRIBUTION sont facultatifs, les valeurs\n        correspondantes seront mises a zero par defaut.\n        Exemple d'un jeu de donnees :\n        \n        TL1 = TABLE 'LIAISON_ELEMENTAIRE' ;\n        TL1.'TYPE_LIAISON' = MOT 'POLYNOMIALE' ;\n        TL1.'SUPPORT'      = ... ;   <--- point support\n        TL1.'COEFFICIENT'  = ... ;\n        TL2 = TABLE 'CONTRIBUTION' ;\n        TL1.Pj             = TL2 ;   <--- point origine\n        TL2.'EXPOSANT_DEPLACEMENT' = ... ;\n        TL2.'RETARD_DEPLACEMENT'   = ... ;\n        TL2.'EXPOSANT VITESSE'     = ... ;\n        TL2.'RETARD_VITESSE'       = ... ;\n        TL2.'JEU_DEPLACEMENT'      = ... ;\n        TL2.'JEU_VITESSE'          = ... ;   \n\n\n  \n4.15 La liaison POINT_CERCLE_MOBILE base B \n------------------------------------------ \n       \n       Choc d'un point de la structure sur un cercle mobile, avec prise\n       en compte du frottement sec dans le plan tangent du contact. \n       Pour le calcul des deplacements et des vitesses relatifs la rotation \n       du cercle dans son plan est negligee. Le moment de la force de \n       contact par rapport a l'axe du cercle est aussi neglige.\n       Le contact peut etre interieur ou exterieur.\n\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n       Les donnees sont : le type de la liaison\n                          le point (objet de type POINT)\n                          le centre du cercle (objet de type POINT)\n                          la normale perpendiculaire au plan du\n                               cercle (objet de type POINT)\n                          le rayon du cercle (objet de type FLOTTANT)\n                          la raideur de choc (objet de type FLOTTANT)\n                          le coefficient de glissement (objet de type\n                               FLOTTANT)\n                          le coefficient d'adherence (objet de type\n                               FLOTTANT)\n                          la raideur tangentielle (objet de type\n                               FLOTTANT)\n                          l'amortissement tangentiel (objet de type\n                               FLOTTANT)\n                            optionnel :\n                          l'amortissement de choc(objet de type FLOTTANT\n                          le type de contact (objet de type LOGIQUE)\n\n                           Y ^\n                             |\n                            .|.\n                         .   |   .            O   centre du cercle\n                       .     |     .\n                             |                A   point de la structure\n                      .   A  *------.-->\n                          *  O           X    \n                       .           .          \n                         .       .\n                            . .\n                                              ->\n                                              N  normale perpendiculaire\n                          Z  ^                   au plan du cercle\n                             |  ->\n                             |  N             R   rayon du cercle\n                             |\n                      ...............----->\n                                           X\n                                R\n                             ------->\n\n       Nota : Lorsque les conditions initiales rendent la liaison\n              effective des le debut du calcul, la force tangentielle\n              est obtenue en supposant a priori une phase d'adherence\n              a cet instant.\n              Le contact est pris interieur par defaut.\n\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'      ;\n         TL1.'TYPE_LIAISON'             =  MOT 'POINT_CERCLE_MOBILE'\n         TL1.'POINT'                    =  ...                ;\n         TL1.'CERCLE'                   =  ...                ;\n         TL1.'NORMALE'                  =  ...                ;\n         TL1.'RAIDEUR'                  =  ...                ;\n         TL1.'RAYON'                    =  ...                ;\n         TL1.'COEFFICIENT_GLISSEMENT'   =  ...                ;\n         TL1.'COEFFICIENT_ADHERENCE'    =  ...                ;\n         TL1.'RAIDEUR_TANGENTIELLE'     =  ...                ;\n         TL1.'AMORTISSEMENT_TANGENTIEL' =  ...                ;\n         TL1.'CONTACT_INTERIEUR'        =  ...                ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'            =  ...                ;   \n\n\n\n  \n4.16 La liaison POINT_POINT_DEPLACEMENT_PLASTIQUE base B \n-------------------------------------------------------- \n       \n       Choc elastoplastique de deux points pouvant appartenir \n       a des structures differentes.\n       La liaison peut etre permanente, dans ce cas il faut choisir\n       le modele d'ecrouissage.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n\n       Les donnees sont : le type de la liaison\n                          le premier point (objet de type POINT)\n                          le deuxieme point (objet de type POINT)\n                          la normale (objet de type POINT)\n                          la loi de comportement elastoplastique \n                          entre les deux points (objet de type EVOLUTION)\n                          le jeu (objet de type FLOTTANT)\n                            optionnel :\n                          l'amortissement (objet de type FLOTTANT)\n                          liaison permanente (objet de type LOGIQUE)\n                          modele d'ecrouissage (objet de type MOT)\n\n                           -->\n                 Point A    N       Point B\n                    * ---------------->*\n\n                             -->\n                  La normale  N  indiquant la direction de choc\n\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n         TL1.'TYPE_LIAISON'        =  MOT 'POINT_POINT_DEPLACEMENT_PLASTIQUE' ;\n         TL1.'POINT_A'             =  ...               ;\n         TL1.'POINT_B'             =  ...               ;\n         TL1.'NORMALE'             =  ...               ;\n         TL1.'LOI_DE_COMPORTEMENT' =  ...               ;\n         TL1.'JEU'                 =  ...               ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENT'       =  ...               ;\n           avec liaison permanente\n         TL1.'LIAISON_PERMANENTE'  =  ...               ;\n         TL1.'ECROUISSAGE'         = 'ISOTROPE' ou 'CINEMATIQUE';\n\n       Nota : La loi de comportement decrit la loi force-deplacement :\n              - le premier point de l'evolution doit etre l'origine (f=0 ; X=0)\n              - le deuxieme point doit correspondre au seuil elastique :\n                (F=force limite elastique ; X=deplacement limite elastique)\n              - les autres points decrivent la partie plastique de la courbe.\n\n\n  \n4.17 La liaison POINT_POINT_ROTATION_PLASTIQUE base B \n----------------------------------------------------- \n       \n       Il s'agit d'une liaison de type rotule elastoplastique de deux points pou\n       appartenir a des structures differentes.\n       La liaison peut etre permanente, dans ce cas il faut choisir\n       le modele d'ecrouissage.\n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n\n       Les donnees sont : le type de la liaison\n                          le premier point (objet de type POINT)\n                          le deuxieme point (objet de type POINT)\n                          l'axe de rotation (objet de type POINT)\n                          la loi de comportement elastoplastique \n                            ou elastique de la rotule entre les \n                            deux points (objet de type EVOLUTION)\n                          le jeu (objet de type FLOTTANT)\n               optionnel :\n                          l'amortissement (objet de type FLOTTANT)\n                          liaison permanente (objet de type LOGIQUE)\n                          modele d'ecrouissage (objet de type MOT)\n                          comportement elastique (objet de type LOGIQUE)\n\n                                     /\n                                    /                           \n                              _____/_                            \n                             |  __/  |                       \n                   point A   * |_/|  *  Point B                         \n                             |__/_|  |                       \n                               /                           \n                              /                                                 \n                             / axe de \n                              rotation\n\n          L'axe de rotation  indiquant la rotation de choc\n\n       Exemple d'un jeu de donnees :\n\n       TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n       TL1.'TYPE_LIAISON'           =  MOT 'POINT_POINT_ROTATION_PLASTIQUE' ;\n       TL1.'POINT_A'                =  ...               ;\n       TL1.'POINT_B'                =  ...               ;\n       TL1.'AXE_ROTATION'           =  ...               ;\n       TL1.'LOI_DE_COMPORTEMENT'    =  ...               ;\n       TL1.'JEU'                    =  ...               ;\n           avec l'amortissement\n       TL1.'AMORTISSEMENT'          =  ...               ;\n           avec liaison permanente\n       TL1.'LIAISON_PERMANENTE'     =  ...               ;\n       TL1.'ECROUISSAGE'            = 'ISOTROPE' ou 'CINEMATIQUE';\n       TL1.'COMPORTEMENT_ELASTIQUE' =  ...               ;\n\n       \n    Nota : * La loi de comportement decrit la loi moment-rotation (si non elasti\n              - le premier point de l'evolution doit etre l'origine (M=0 ; R=0)\n              - le deuxieme point doit correspondre au seuil elastique :\n                (M=moment limite elastique ; R=rotation limite elastique)\n              - les autres points decrivent la partie plastique de la courbe.\n           * Si la liaison est permanente, le jeu est mis a zero\n\n\n  \n4.18 La liaison LIGNE_LIGNE_FROTTEMENT base B \n--------------------------------------------- \n       \n       Choc d'une ligne contre une autre ligne. \n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n\n       Les donnees sont : le type de la liaison\n                          la ligne maitre (objet de type MAILLAGE)\n                          la ligne esclave (objet de type MAILLAGE ou POINT)\n                          le coefficient de glissement (objet de type FLOTTANT)\n                          le coefficient d'adherence (objet de type FLOTTANT)\n                          la raideur tangentielle (objet de type FLOTTANT)\n                          l'amortissement tangentiel (objet de type FLOTTANT)\n                          les raideurs de choc (objet de type CHAMPOINT)\n                          la normale au plan de contact (obligatoire qu'en 3D) \n                                               (objet de type POINT)\n                            optionnels :\n                          les amortissements de choc (objet de type CHPOINT)\n                          l'indicateur de recherche de contact (objet de type MO\n                          l'indicateur de symetrie (objet de type MOT)\n                          \n        \n           *---*                 *------*\n               |                /        \\\n               *--*  --->      *  Ligne   *        \n           Ligne  |            |  Esclave |\n           Maitre *            *          *\n                  |       <---  \\        /\n               *--*              *------*\n               |\n           *---*\n         \n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n         TL1.'TYPE_LIAISON'        =  MOT 'LIGNE_LIGNE_FROTTEMENT' ;\n         TL1.'LIGNE_MAITRE'            =  ...               ;\n         TL1.'LIGNE_ESCLAVE'           =  ...               ;\n         TL1.'NORMALE'                 =  ...               ;           \n         TL1.'COEFFICIENT_GLISSEMENT'  =  ...               ;\n         TL1.'COEFFICIENT_ADHERENCE '  =  ...               ;\n         TL1.'RAIDEUR_TANGENTIELLE'    =  ...               ;\n         TL1.'AMORTISSEMENT_TANGENTIEL'=  ...               ;\n         TL1.'RAIDEURS'                =  ...               ;\n         TL1.'SYMETRIE'                =  ...               ;\n         TL1.'RECHERCHE'               =  ...               ;\n           avec l'amortissement\n         TL1.'AMORTISSEMENTS'          =  ...               ;\n        \n          Les maillages sont orientes pour que suivant le sens de la ligne\n       la zone interdite soit a gauche, si l'on se place suivant la normale \n       au plan de conatct . Les elements sont de type SEG2 et la ligne \n       esclave peut se reduire a un point. On teste la penetration des \n       noeuds de la ligne esclave dans la surface maitre.\n          Si l'on veut incerser les roles on indique :\n       TL1.'SYMETRIE'='GLOBALE' ou 'LOCALE'. Avec le mot 'LOCALE' on \n       n'inverese les roles que pour les noeuds maitres qui ont etes \n       sollicites lors de la premiere passe.\n          La recherche du positionnement des noeuds les uns par rapport aux \n       autres peut etre optimisee, ou peut etre effectuee en globalite en \n       indiquant TL1.'RECHERCHE'='LOCALE' ou 'GLOBALE'respectivement.\n          Les champoints de raideur et d'amortissement concernent tous les \n       points des maillages (maitre et esclave). La force appliquee sur un \n       noeud esclave est calculee a partir des valeurs de raideur et d'\n       amortissement associees a ce noeud.\n          Pour l'instant, seul le modele de frottement d'Oden, decrit a la \n      fin de la notice est disponible. Les valeurs de la raideur \n      tangentielle et de l'amortissement tangentiel doivent etre definies\n      en consequence.\n\n\n  \n4.19 La liaison LIGNE_CERCLE_FROTTEMENT base B \n---------------------------------------------- \n       \n       Choc d'une ligne contre une serie de butees  (de memes normales et\n       de memes rayons ) ou contre un guidage cylindrique droit et de \n       rayon constant. \n       Il faut definir une table de sous-type LIAISON_ELEMENTAIRE\n\n       Les donnees sont : le type de la liaison\n                          la ligne maitre (objet de type MAILLAGE)\n                          la ligne esclave (objet de type MAILLAGE ou POINT)\n                          le coefficient de glissement (objet de type FLOTTANT)\n                          le coefficient d'adherence (objet de type FLOTTANT)\n                          la raideur tangentielle (objet de type FLOTTANT)\n                          l'amortissement tangentiel (objet de type FLOTTANT)\n                          les raideurs de choc (objet de type CHAMPOINT)\n                          la normale au butees ou la direction du cylindre.\n                          (objet de type POINT)\n                          le rayon des butees ou du cylindre\n                          (objet de type FLOTTANT)\n                            optionnels :\n                          les amortissements de choc (objet de type CHPOINT)\n                          l'indicateur de recherche de contact (objet de type\n                          MOT)\n                          l'indicateur d'inversion (objet de type MOT).\n                          l'indicateur d'actualisation ou pas de la\n                          normale de contact(objet de type MOT)\n                          \n                          \n       Comme ligne maitre on definit la ligne sur laquelle vont choquer les\n       butees. La ligne esclave est la ligne contenant les centres des butees.\n       Pour modeliser une liaison ligne-butees, on va donc rentrer les champoint\n       de raideurs et d'amortissements des butees.\n       \n       Par contre dans le cas d'une liaison ligne-cylindre, ce sont les noeuds d\n       la ligne qui choquent contre les parois du cylindre.\n       La ligne sera toujours definie comme ligne maitre, et l'axe du cylindre\n       comme ligne esclave, mais l'indicateur d'inversion sera mis a VRAI.\n       On rentrera les champoints de raideurs et d'amortissements des noeuds de\n       la ligne maitre.\n\n        \n           |      |      |    |                           --------------\n           |      |      |   \\|/                          |            |\n        ---*------*------*----                      ------|------------|-----lig\n           |      |      |     ligne    ou                --------------\n           |      |      |                                   cylindre\n              butees\n         'RECHERCHE'\n       Exemple d'un jeu de donnees :\n\n         TL1  =  TABLE  'LIAISON_ELEMENTAIRE'     ;\n         TL1.'TYPE_LIAISON'        =  MOT 'LIGNE_CERCLE_FROTTEMENT' ;\n         TL1.'LIGNE_MAITRE'            =  ...               ;\n         TL1.'LIGNE_ESCLAVE'           =  ...               ;\n         TL1.'NORMALE'                 =  ...               ;\n         TL1.'RAYON'                   =  ...               ;\n         TL1.'COEFFICIENT_GLISSEMENT'  =  ...               ;\n         TL1.'COEFFICIENT_ADHERENCE '  =  ...               ;\n         TL1.'RAIDEUR_TANGENTIELLE'    =  ...               ;\n         TL1.'AMORTISSEMENT_TANGENTIEL'=  ...               ;\n         TL1.'RAIDEURS'                =  ...               ;\n         TL1.'INVERSION'               =  ...               ;\n         TL1.'RECHERCHE'               =  ...               ;\n         TL1.'ACTNOR'                  =  ...               ;        \n           avec l'amortissement\n         TL1.'AMORTISSEMENTS'          =  ...               ;\n        \n       Les elements sont de type SEG2 et la ligne esclave peut se \n       reduire a un point. \n       La recherche du positionnement des noeuds les uns par rapport aux \n       autres peut etre optimisee, ou peut etre effectuee en globalite en \n       indiquant TL1.'RECHERCHE'='LOCALE' ou 'GLOBALE'respectivement.\n       L'indicateur d'actualisation doit etre mis a VRAI ou FAUX.\n       Les champoints de raideur et d'amortissement concernent tous les \n       points du maillage qui choque. La force appliquee sur un \n       noeud impactant est calculee a partir des valeurs de raideur et d'\n       amortissement associees a ce noeud.\n       Pour l'instant, seul le modele de frottement d'Oden, decrit a la \n       fin de la notice est disponible. Les valeurs de la raideur \n       tangentielle et de l'amortissement tangentiel doivent etre definies\n       en consequence.\n\n  \n4.20 La liaison PALIER_FLUIDE base B \n------------------------------------ \n       \n       Cette liaison calcule les forces exercees par le film fluide sur\n       un arbre tournant dans un palier hydrodynamique.\n       Trois modeles de calcul des forces sont disponibles :\n       - le modele de palier court (PALIER_COURT)\n       - le modele de palier long (PALIER_LONG)\n       - le modele de Rhode et Li (RODELI)\n       Les trois peuvent modeliser des paliers cylindriques, mais seul\n       le modele de Rhode et Li permet de modeliser des palier a lobes.\n       Ce dernier est base sur l'hypothese d'un champ de pression\n       parabolique suivant l'axe du palier (hypothese identique a celle\n       du palier court). Le palier long (L/R > 8) suppose quant a lui un \n       champ de pression constant selon l'axe du palier (on neglige le\n       debit axial).\n                          \n       La geometrie du palier, les caracteristiques du film fluide ainsi\n       que la vitesse de rotation de l'arbre sont definis dans une table\n       de sous-type LIAISON_ELEMENTAIRE.\n       \n       Les donnees communes a tous les type de palier sont : \n       - le type de la liaison : 'TYPE_LIAISON'  = 'PALIER_FLUIDE' \n       - le type du modele     : 'MODELE_PALIER' = | 'RODELI'\n                                                   | 'PALIER_COURT' \n                                                   | 'PALIER_LONG'\n       - le point support : 'POINT_SUPPORT' (objet de type POINT)\n       - le point origine : 'POINT_ORIGINE' (objet de type POINT)\n         uniquement possible avec la syntaxe 1 de DYNE\n       - la viscosite dynamique du fluide : 'VISCOSITE'  (type FLOTTANT)\n       - la masse volumique du fluide     : 'RHO_FLUIDE' (type FLOTTANT)\n       - la longueur du palier : 'LONGUEUR_PALIER' (type FLOTTANT)\n       - le rayon de l'arbre   : 'RAYON_ARBRE'     (type FLOTTANT)\n       - la vitesse de rotation de l'arbre en rad/s : 'VITESSE_ROTATION' \n          (type FLOTTANT)\n          \n       Les donnees a renseigner dans le cas 'RODELI' sont :\n       - la table definissant la geometrie du palier : \n         'GEOMETRIE_PALIER' (objet de type TABLE) contenant elle meme :\n         -- le nombre de lobe : 'NOMBRE_LOBES' (type ENTIER)\n            (1 pour un palier cylindrique)\n         -- la pression d'admission au niveau des lobes :\n            'PRESSION_ADMISSION' (type FLOTTANT)\n         -- le critere d'arret : 'CRITERE_ARRET' (type FLOTTANT)\n            un critere d'arret de 0.005 correspond a une erreur admise\n            de 0.5% sur le calcul de la pression dans le palier \n            (1.E-5 par defaut).\n         -- les tables definissant la geometrie de chaque lobe : \n            entier 1, 2, ... NOMBRE_LOBES (objet de type TABLE) \n            contenant elle meme :\n            --- le jeu radial d'usinage du lobe :\n                'JEU_USINAGE' (type FLOTTANT)\n            --- la precharge du lobe : 'PRECHARGE' (type FLOTTANT)\n            --- l'angle d'asymetrie du lobe : 'ASYMETRIE' (type FLOTTANT)\n            --- l'angle de debut du lobe : 'ANGLE_DEBUT' (type FLOTTANT)\n            --- l'amplitude angulaire du lobe :\n                'AMPL_ANGLE' (type FLOTTANT)\n            --- le nombre de mailles pour le calcul du champ de pression\n                sur le lobe par differences finies : 'NB_MAILLES' \n                (type FLOTTANT) (100 par defaut)\n            --- le coefficient de surrelaxation, lie a la methode de\n                resolution numerique : 'COEF_SUR' (type FLOTTANT).\n                (1.715 par defaut)\n                \n       Nota : L'axe de l'arbre tournant correspond a l'axe Ox, l'axe de\n       reference pour la definition des angles caracterisant la geometrie\n       d'un palier a lobes est l'axe Oz. \n       Les angles sont fournis en radians.\n\n                       Z ^\n                         |                   O   : centre du coussinet\n                   C  .  .  .  .D            Oi  : centre du lobe\n                   .+    |                   OOi : PRECHARGE\n                 .   \\   |                  (Z,OC) : angle d'ASYMETRIE\n               .      \\  |                  (Z,OiD) : ANGLE_DEBUT \n              .        \\ |                  (OiD,OiF) : AMPL_ANGLE  \n             .          \\|O              Y      \n            .            +--------------->\n            F             \\                  \n                           +Oi                \n\n       Les donnees a renseigner dans le cas 'PALIER_COURT' et \n       'PALIER_LONG' sont :\n       - le jeu radial d'usinage : 'JEU_USINAGE' (type FLOTTANT)\n                          \n       Actuellement cette liaison est disponible seulement avec l'option\n       DE_VOGELAERE\n\n       Exemple d'un jeu de donnees :\n          TL1 = TABLE LIAISON_ELEMENTAIRE;\n          TL1 . 'TYPE_LIAISON'  = MOT 'PALIER_FLUIDE';\n          TL1 . 'MODELE_PALIER' = MOT 'RODELI';\n          TL1 . 'POINT_SUPPORT' = Point1 ;\n          TL1 . 'VISCOSITE_FLUIDE' = Flottant1 ; \n          TL1 . 'RHO_FLUIDE' = Flottant2 ;\n          TL1 . 'LONGUEUR_PALIER' = Flottant3 ;\n          TL1 . 'RAYON_ARBRE' = Flottant4 ;\n          TL1 . 'VITESSE_ARBRE' = Flottant5 ;\n          TL1 . 'GEOMETRIE_PALIER' = TABLE1 ;\n\n          TABLE1 . 'NOMBRE_LOBES' = Entier1 ;\n          TABLE1 . 'PRESSION_ADMISSION' = Flottant6 ;\n          TABLE1 . 'CRITERE_ARRET' = Flottant7 ;\n          TABLE1 . 1 = TABLE1_1 ;\n          TABLE1 . 2 = TABLE1_2 ;\n          TABLE1 . ...\n          TABLE1 . n = TABLE1_n ; (n = Nombre de lobes)\n\n          TABLE1_1 . 'JEU_USINAGE' = Flot11a ;\n          TABLE1_1 . 'ASYMETRIE'   = Flot11b ;\n          TABLE1_1 . 'PRECHARGE'   = Flot11c ;\n          TABLE1_1 . 'ANGLE_DEBUT' = Flot11d ;\n          TABLE1_1 . 'AMPL_ANGLE'  = Flot11e ;\n          TABLE1_1 . 'NB_MAILLES'  = Entier11 ;\n          TABLE1_1 . 'COEF_SUR'    = Flot11f ;\n\n          TABLE1 . n = TABLE1_n ; (n = Nombre de lobes)\n\n          TABLE1_1 . 'JEU_USINAGE' = Flot11a ;\n          TABLE1_1 . 'ASYMETRIE'   = Flot11b ;\n          TABLE1_1 . 'PRECHARGE'   = Flot11c ;\n          TABLE1_1 . 'ANGLE_DEBUT' = Flot11d ;\n          TABLE1_1 . 'AMPL_ANGLE'  = Flot11e ;\n          TABLE1_1 . 'NB_MAILLES'  = Entier11 ;\n          TABLE1_1 . 'COEF_SUR'    = Flot11f ;\n\n    ",
  },
  {
    name: "EC8ACSIS",
    url: "EC8ACSIS",
    documentation:
      "$$$$ EC8ACSIS NOTICE  MB234859  17/10/02    21:15:10     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure EC8ACSIS                       Voir aussi :\n    ------------------  \n    RS = EC8ACSIS TAB1;\n \n\n    objet:\n    ------\n \n  a)\n \n    Generation d'un spectre de reponse RS (objet de type EVOLUTION\n    comportant une seule courbe) selon les directive de l'EUROCODE\n    numero 8 et suivant les parametres TAB1 (objet de type TABLE).\n \n    L'EUROCODE 8 propose l'evolution en periode suivante:\n \n     0  < T  < T1       Be = 1 + T/T1 * (B0-1)\n \n     T1 < T  < T2       Be = B0\n \n     T2 < T             Be = (T2/T)**K * B0\n \n    Be(B0) etant le spectre de reponse d'acceleration normalise, pour un\n    amortissement de 5%, RS est obtenu apres introduction de l'acceleration\n    maximale Ag du sol et de l'amortissement Khi (<.7):\n \n                        RE =  Ag * Be(nu*B0)  nu=(.05/Khi) **.5\n \n    Pour des periode elevees le code doit etre complete. Pour les terrains\n    standards, on limite le deplacement :\n \n                         d < dmax = (Ag/g) * D0\n \n    ou g est l'acceleration de la pesanteur.\n \n    Dans ce cas le RE sera definie par le dmax multiplier par le facteur\n    d'amplification pour les hautes periodes AMPF (AMPF =1.4).\n \n \n    Des jeux de donnees (T1,T2,B0,K et D0) sont prevus pour les terrains\n    de type A, B ou C.\n \n    Le spectre RS est genere sur une grille de periode compris entre\n    TINI (<T1) et TFIN (>T2).\n \n b)\n \n    Generation d'un spectre de reponse RS pour utiliser dans les analyses\n    Lineaires. Dans ce cas B0 est divise par le facteur de comportement\n \n                        B0 = B0 / Q\n \n    et par T > T2 la condition de deplacement constant n'est pas imposee.\n    c.a.d.\n \n                        RE =  Ag * Be(Eta*B0/Q)\n \n    sujet a la condition\n \n                        RE >= 0.2 Ag\n \n \n    parametres obligatoires:\n    ------------------------\n \n    Les parametres sont contenues dans TAB1 (objet de type TABLE).\n \n    indice  type objet    commentaires\n             pointe\n \n     TYPE   MOT          indiquant le type de spectre a savoir:\n \n                         a) 'GSIG' (spectre de reponse pour la\n                            generation des signaux artificiels\n \n                         b) 'ALIN' (spectre de reponse pour l'analyse\n                            lineaire (linear analysis design spectra)).\n                            dans ce cas on est oblige de fournir le\n                            parametre Q coefficient de comportement\n                            (behaviour factor) dans la table\n \n     Q      FLOTTANT     indiquant la valeur du coefficient de\n                         comportement si TYPE vaut 'ALIN'.\n \n     AG     FLOTTANT     indiquant Ag (cm/s/s).\n \n     SOIL   MOT          indiquant le type de terrain\n                         'A' 'B' ou 'C'\n       ou\n \n     T1\n     T2     FLOTTANT     indiquant T1, T2 et B0.\n     B0\n \n     TINI\n     TFIN   FLOTTANT     donnant TINI et TFIN.\n \n    parametres optionnels:\n    ---------------------\n \n    Les parametres sont contenues dans TAB1 (objet de type TABLE).\n \n    indice  type objet    commentaires\n             pointe\n \n    K       FLOTTANT     representant K (defaut = 1\n                         conduisant a une vitesse constante)\n \n    D0      FLOTTANT     indiquant D0\n                         (defaut = pas de limitation).\n \n    AMOR    FLOTTANT     indiquant Khi (defaut = 0.05)\n \n    GRAN    MOT          representant la grandeur physique de\n                         reponse: 'ACCE'(leration), 'VITE'(sse) ou\n                         'DEPL'(acement relatif). Le defaut est 'ACCE'.\n \n    ABSC    MOT          representant la grandeur physique des\n                         abscisses: 'PERI'(ode) ou 'FREQ'(uence).\n                         Le defaut est 'PERI'.\n \n    N       ENTIER       indiquant le nombre de points sur\n    NP'     ENTIER       les branches du spectre au-dela de T2\n                         (defaut = 25).\n ",
  },
  {
    name: "ECFE",
    url: "ECFE",
    documentation:
      "$$$$ ECFE     NOTICE  CHAT      11/09/12    21:15:58     7124           \n                                             DATE     11/09/12\n\n  Operateur ECFE                          Voir aussi :\n     --------------                                                               \n      RI1 SIGF VARF BEFI = 'ECFE'  MODL BE0 VAR0 DEPST CARAC\n                                    (PRECIS) (NITMAX) (UPDATELAG);\n\n\n\n\n     Description :\n     -----------\n\n     Retour exponentiel avec line search au niveau local\n\n     Modeles : VMT_FEFP, RHMC_FEFP, POWDER_FEFP, POWDERCAP_FEFP.\n\n     Il rend les contraintes (SIGF), variables internes (VARF) et \n     deformations elastiques (BEFI).\n\n     Il rend egalement le module tangent consistent (RI1)\n\n     Cet operateur est appele par INCREME\n\n     Voir la notice de PASAPAS pour l'utilisation de cette possibilite",
  },
  {
    name: "ECHI",
    url: "ECHI",
    documentation:
      "$$$$ ECHI     NOTICE  CHAT      11/09/12    21:15:59     7124           \n                                             DATE     11/09/12\n$X ECHI (Operateur de discretisation)\n\n  Operateur ECHI                          Voir aussi :\n\n     Syntaxe EQEX (cf EQEX) :\n\n     ... 'EQEX' ... 'OPTI' MOT1 MOT2\n                    'ZONE' MOD2\n                    'OPER' 'ECHI' OBJ1 OBJ2\n                    'INCO' MOT3 (MOT4)\n\n\n\n\n     Objet :\n     _______\n\n     L'operateur ECHI modelise un echange d'energie ou de masse (ou\ntoute autre grandeur scalaire) entre une surface ou un volume et le\nmilieu exterieur.\n\n     Dans le cas d'une equation scalaire portant sur T, le terme\ndiscretise sera de la forme h(T-To) avec h coefficient d'echange\npar unite de temps et unite de surface ou de volume, T inconnue\nsur laquelle porte l'echange et To champ exterieur.\n\n     Dans le cas d'un systeme d'equations le terme discretise peut\nprendre une forme plus generale pouvant coupler deux equations\nscalaires. Soit V l'inconnue scalaire (ou inconnue duale) sur\nlaquelle porte l'equation consideree. Le terme discretise est de la\nforme h(T-U) avec T inconnue sur laquelle porte l'echange (inconnue\nprimale), U champ exterieur.\n\n     La convention de signe associee a ce terme est la suivante :\nlorsque le flux est positif (h>0 et T>To (resp. T>U)) la quantite T\n(resp. V) diminue.\n\n     Cet operateur est appele par les procedures transitoires EXEC\net EXIC. La syntaxe indiquee permet a l'utilisateur de construire\na l'aide de l'operateur EQEX les donnees necessaires a l'operateur.\n\n\n     Commentaires :\n     ______________\n                                                                                \n    'OPTI' : Mot cle introduisant les options numeriques de ECHI\n     MOT1  : Type de discretisation spatiale ('EF', 'VF' ou 'EFM1')\n     MOT2  : Type de discretisation temporelle ('EXPL' ou 'IMPL')\n     La formulation numerique par defaut est EFM1 EXPLICITE.\n\n    'ZONE' : Mot cle introduisant les informations geometriques\n     MOD2  : MODEL de sous-type 'NAVIER_STOKES' pour la zone ou\n             s'applique ECHI\n\n    'OPER' : Mot cle introduisant les donnees physiques associees\n             a l'operateur dont le nom suit\n    'ECHI' : Nom de l'operateur\n     OBJ1  : Coefficient d'echange h (CHPOINT SCAL CENTRE ou\n             FLOTTANT ou MOT)\n     OBJ2  : Champ exterieur To (resp. U) (CHPOINT SCAL CENTRE ou\n             CHPOINT SCAL SOMMET ou FLOTTANT ou MOT)\n\n    'INCO' : Mot cle introduisant le nom des inconnues primales et\n             duales intervenant dans l'echange.\n     MOT3  : Nom de l'inconnue sur laquelle porte l'echange T,\n              inconnue primale\n     MOT4  : Nom de l'inconnue sur laquelle porte l'equation, T\n             (resp V), inconnue duale.\n\n     Dans un algorithme explicite, on impose que les inconnues primale\n     et duale soient identique. Il est donc inutile de donner MOT4.\n     De plus l'operateur est quand meme traite implicitement (matrice\n     masse diagonalisee) ce qui fait qu'il n'introduit pas de\n     contrainte supplementaire sur la pas de temps!\n\n     Dans un algorithme implicite, lorsque les inconnues primale et\n     duale sont identiques, il est egalement inutile de donner MOT4.\n\n\n     Remarques :\n     ___________\n                                                                                \n     1) Lorsque OBJ1 et OBJ2 sont de type MOT, l'operateur utilise\n le champ contenu dans la table INCO a l'indice MOT indique.\n\n     2) Le support geometrique (spg) des CHPOINT est une des classes\n de points de la table DOMAINE. Suivant la formulation choisie les\n compatibilites suivantes sont verifiees :\n   - En formulation EF ou EFM1, le spg de l'inconnue duale est SOMMET\n   - En formulation VF le spg de l'inconnue duale est CENTRE\n   - En implicite, lorsque l'inconnue primale et l'inconnue duale sont\n     differentes, le spg de l'inconnue primale est CENTRE ou SOMMET.\n   - Le spg du coefficient d'echange est CENTRE ou SOMMET en formulation\n     EF ou EFM1 et uniquement CENTRE en formulation VF.\n\n     3) Les formulations EF, EFM1 et VF sont disponibles en explicite\net en implicite. En explicite, EF est assimilee a EFM1 ; en implicite\nEFM1 a EF.\n\n     4) Le type d'elements du maillage contenu a l'indice MAILLAGE de\n la table DOMAINE indique si l'echange est volumique ou surfacique :\n   - L'echange est surfacique (un flux est echange) si\n        en 2D, les elements sont de type SEG2 ou SEG3,\n        en 3D, les elements sont de type TRI3, QUA4, TRI6, TRI7 \n                                         ou QUA9. \n   - L'echange est volumique (une source volumique est echangee) si\n        en 2D, les elements sont de type TRI3, QUA4, TRI6, TRI7 \n                                         ou QUA9.\n        en 3D, les elements sont de type CUB8, PRI6, TET4,\n                                         CU27, PR21, TE15,\n                                               PR18 ou TE10.\n   - Des elements de type SEG2 ou SEG3 en 3D n'ont pas de sens.\n   - En 3D, les elements de type PYR5 ne sont pas disponibles.\n\n     5) Dans le cas d'un echange surfacique, les faces doivent etre\na la frontiere du domaine.\n\n     6) L'utilisateur-programmeur developpant ses propres procedures\ntransitoire appellera ECHI suivant la syntaxe :\n  B A =  ECHI TAB1 ;\navec TAB1 : Table de sous type EQEX contenant les informations\n            physiques et numeriques de l'operateur ECHI. Cette\n            table est construite par l'operateur EQEX.\n     A    : Matrice \"masse\" (diagonale si EXPL) de type MATRIK\n     B    : Second membre de type CHPO. Le nom de l'inconnue duale\n            MOT4 etant le nom de la composante du CHPO cree. ",
  },
  {
    name: "ECHIMP",
    url: "ECHIMP",
    documentation:
      "$$$$ ECHIMP   NOTICE  CHAT      11/09/12    21:15:58     7124           \n                                             DATE     11/09/12\n\n  Operateur  ECHIMP                       Voir aussi :\n     -----------------  \n\n\n\n\n     DOMAINE D'APPLICATION : Thermo-hydraulique.\n    -----------------------        \n\n      OBJET :    Imposer des echanges thermiques  a travers un objet \n     --------    maillage du domaine de calcul.\n                                                 \n\n      SYNTAXE :   'ZONE' $DOM 'OPER' ECHIMP H TETA 'INCO' TN\n     ----------\n\n \n      TABLEAUX AUTORISES :   \n     ---------------------    \n\n  H      Coefficient d'echange thermique           CHPOINT SCAL CENTRE\n          \n\n  TETA  Temperature a la paroi                     CHPOINT SCAL CENTRE\n\n\n  TN    Temperature                                CHPOINT SCAL SOMMET",
  },
  {
    name: "ECOU",
    url: "ECOU",
    documentation:
      "$$$$ ECOU     NOTICE  CHAT      11/09/12    21:15:59     7124           \n                                             DATE     11/09/12\n\n  Operateur ECOULE                         Voir aussi :\n    ----------------  \n    SIG1 VAR1 DEPS1 = ECOU MODL1 SIG2 VAR2 EPS3 CAR1  ( TAB1 ) ...\n\n                      ...   (FLOT1)  ('NOID')  (ISTEP) ;\n\n\n    Objet :\n    _______\n\n    Etant donne un etat initial materiellement et statiquement admissible\ncaracterise par un champ de contraintes, un champ de variables internes,\ndes caracteristiques materielles et geometriques d'une part et un incre\nment de deformations d'autre part, l'operateur ECOULE calcule l'etat\nfinal materiellement admissible, qui se caracterise par un nouveau champ\nde contraintes, de nouvelles variables internes et par un increment de\ndeformations inelastiques.\n\n\n    Commentaire :\n    _____________\n\n\n    MODL1 : objet modele (type MMODEL)\n\n    SIG2  : champ de contraintes initiales\n            (type MCHAML, sous-type CONTRAINTES)\n\n    VAR2  : champ de variables internes initiales\n            (type MCHAML, sous-type VARIABLES INTERNES)\n\n    EPS3  : increment de deformations\n            (type MCHAML, sous-type DEFORMATIONS)\n\n    CAR1  : description du materiau et de caracteristiques geometriques\n            (type MCHAML, sous-type CARACTERISTIQUES)\n\n    TAB1  : TABLE contenant des informations complementaires necessaires\n            pour les materiaux viscoplastiques avec ou sans endommagement\n\n            -  en indice 'DEFI', le champ de deformations inelastiques\n               au debut du pas (type MCHAML, sous-type DEFORMATIONS)\n\n            -  en indice 'TEMPS0', le temps au debut du pas\n               (type FLOTTANT)\n\n            -  en indice 'DT', le pas de temps  (type FLOTTANT)\n\n            -  en indice 'MAXISOUSPAS', le nombre maximal de sous-pas\n               utilise pour l'integration des equations (type ENTIER)\n               (par defaut 200)\n\n    FLOT1 : precision numerique utilisee pour le calcul\n            (type FLOTTANT)\n            par defaut FLOT1 est egal a 1.E-3\n\n    ISTEP : indicateur d'action pour calcul non-local (type ENTIER),\n            valant 1 pour calcul des fonctions seuil uniquement, ou 2\n            pour calcul des variables dissipatives (par defaut 0)\n\n    SIG1  : nouveau champ de contraintes\n            (type MCHAML, sous-type CONTRAINTES)\n\n    VAR1  : nouvelles variables internes\n            (type MCHAML, sous-type VARIABLES INTERNES)\n\n    DEPS1 : increment de deformations inelastiques\n            (type MCHAML, sous-type DEFORMATIONS)\n\n\n    Remarques :\n    _________\n\n    Il convient de respecter l'ordre des donnees en entree et en\nsortie.\n\n    La lecture du mot 'NOID' permet de supprimer les messages\nd'erreur en cas de non-convergence, tout en produisant un resultat.\nDans ce cas, si on a donne une table TAB1, elle contient en sortie,\nen indice 'SUCCES', un logique qui vaut VRAI si on a bien converge\net FAUX sinon.",
  },
  {
    name: "EFFMARTI",
    url: "EFFMARTI",
    documentation:
      "$$$$ EFFMARTI NOTICE  AF221230  16/11/03    21:15:02     9139           \n                                             DATE     16/11/03\n\n  procedure EFF_MARTI                       Voir aussi : \n    ----------------  \n   SIG2 =  EFF_MARTI SIG1 MOD1 MAT1 VECT1 VECT2\n                     H1 ENRE1 ENRI1 COT1\n\n\n\nObjet :\n-------\n\nCette procedure transforme les effots generalis\u00e9s sur un element \nbidimensionel(coque, voile) sur la base du modele \u00e0  trois couche de\nMarti.\nLes efforts (N11, N22 et N12) et les moments appliqu\u00e9s (M11, M22, M12)\nsont projet\u00e9s sur deux couches externe et interne d epaisseur\negale \u00e0 deux fois l enrobage. Les efforts hors-plan de cisaillment \n(V1 et V2) sont appliqu\u00e9s \u00e0 la couche intermediaire:\n\n /       ---------------------------------------------------- /\n | 2c_ext     o        o        o        o        o        o  | cou ext\n /       .................................................... |\n |                    n^ /t2                                  |\n |                     |/                                     |\n | h-2c_int-2c_ext     |---> t1                               |  h\n |                                                            |\n |                                                            |\n /       .................................................... |\n | 2c_int     o        o        o        o        o        o  | cou int\n /       ---------------------------------------------------- /\n\nLes couches externe et interne sont charg\u00e9es par une triplet des \nefforts de membrane.\n\nN11_ext = N11/2 + M11/D + V1^2/(2V0*cotg(theta))\nN22_ext = N22/2 + M22/D + V2^2/(2V0*cotg(theta))\nN12_ext = N12/2 + M12/D + V1*V2/(2V0*cotg(theta))\n\nN11_int = N11/2 - M11/D + V1^2/(2V0*cotg(theta))\nN22_int = N22/2 - M22/D + V2^2/(2V0*cotg(theta))\nN12_int = N12/2 - M12/D + V1*V2/(2V0*cotg(theta))\n\navec \n\nh = epaisseur totale\nc_ext = enrobage couche externe\nc_int = enrobage couche interne\nV0 = (V1^2 + V2^2)^(0.5)\nD = h - c_int - c_ext\n\nCommentaire :\n-------------\nLes couches externe et interne sont definies selon la direction du \nvecteur normal n=t1xt2\n\nL angle theta est compris entre 25 et 45 degr\u00e9s.\n\nEn entree :\n-----------\n\n    SIG1:          MCHAML des contraintes\n    MOD1:          MMODEL associ\u00e9 au SIG1\n    MAT1:          MCHAML associ\u00e9 au SIG1\n    VEC1:          direction 1 pour le calcul des contraintes\n    VEC2:          direction 2 pour le calcul des contraintes\n    H1:            epaisseur de l element plaque\n    ENRE1:         enrobage couche externe\n    ENRi1:         enrobage couche interne\n    COT1:          terme cotg(theta)\n\n\nEn sortie :\n-----------\n\n    SIG2:          MCHAML avec les composents des efforts proje\u00e9s \n                   sur les couches externe et interne et les efforts \n                   globaux qui agissent sur l element coque\n                   Component N11 external layer    N11E \n                   Component N22 external layer    N22E \n                   Component N12 external layer    N12E \n                   Component N11 internal layer    N11I\n                   Component N22 internal layer    N11I\n                   Component N12 internal layer    N11I\n                   Component M11 global            M11T\n                   Component M22 global            M22T\n                   Component M12 global            M12T\n                   Component V1 global             V1T\n                   Component V2 global             V2T\n                   Resultant Vr                    VR\n\nRemarques :\n-----------\n\nSeulement en 3D le caLcul est possible",
  },
  {
    name: "EGA",
    url: "EGA",
    documentation:
      "$$$$ EGA      NOTICE  GOUNAND   14/09/16    21:15:09     8152           \n                                             DATE     14/09/16\n\n    Operateur EGA                            Voir aussi : NEG\n    -------------                                         <     >  \n                                                          <EG   >EG  \n                                                          ENTI FLOT  \n    LOG1 = OBJET1  EGA  OBJET2 (FLOT1) ;\n\n                                   OBJET1=ENTIER,FLOTTANT,LOGIQUE\n                                          LISTENTI,MOT,TEXTE,POINT\n\n    Objet :\n    _______\n\n    L'operateur EGA compare les objets OBJET1 et OBJET2.\n\n    Commentaire :\n    _____________\n\n    OBJETi : objets a comparer.\n             Les types autorises pour OBJET1 et OBJET2 sont :\n\n                            ENTIER\n                            FLOTTANT\n                            POINT\n                            LISTENTI\n                            MOT\n                            TEXTE\n                            LOGIQUE\n\n    FLOT1  : tolerance (type FLOTTANT) utilisee pour la comparaison\n             d'objets de type FLOTTANT ou POINT. Dans ce dernier cas,\n             la tolerance vaut 0. par defaut.\n    LOG1   : resultat (type LOGIQUE) ayant pour valeur VRAI si les\n             deux objets sont egaux et FAUX sinon.\n\n    Remarque :\n    __________\n\n    Deux objets de type POINT sont dits \"egaux\" s'ils ont la meme\n    position dans l'espace. On peut imposer une tolerance  FLOT1 (type\n    FLOTTANT) egale par defaut au 1/10 eme des densites des points ou,\n    si celles-ci sont nulles, au 1/10 eme de la densite courante.\n\n    Pour des objets de type MOT, il faut respecter l'ordre suivant :\n    LOG1 = EGA  MOT1  MOT2  ;\n    Dans la comparaison on ne tiendra pas compte des blancs situes a\n    la fin des mots. (EGA 'AA' 'AA   ') est VRAI.\n\n    Si on compare des scalaires (type ENTIER ou FLOTTANT),\n    OBJET2 sera converti au type de OBJET1.",
  },
  {
    name: "ELAS",
    url: "ELAS",
    documentation:
      "$$$$ ELAS     NOTICE  FD218221  17/04/24    21:15:03     9417           \n                                             DATE     17/04/24\n                                             \n  Operateur ELASTICITE                     Voir aussi :\n    --------------------  \n      CHAM2 = ELAS  MOD1 CHAM1 CAR1 (VAR1);\n\n\n    Objet :\n    _______\n\n    Cet operateur calcule des contraintes a partir de deformations, ou\ndes deformations a partir de contraintes , dans l'hypothese d'un\nmateriau elastique .\n    Actuellement , seul le materiau elastique lineaire est disponible.\n\n\n    Commentaire :\n    _____________\n\n\n      MOD1   : Objet modele (type MMODEL)\n\n      CHAM1  : champ de contraintes ou deformations (type MCHAML,\n               sous-type CONTRAINTES ou DEFORMATIONS)\n\n      CAR1   : champ de proprietes materielles et/ou geometrique (type\n               MCHAML, sous type CARACTERISTIQUES)\n\n      VAR1  : champ de variables internes (type MCHAML, sous-type\n              VARIABLES INTERNES) facultatif\n\n\n      CHAM2  : champ de deformations ou contraintes (type MCHAML,\n               sous-type DEFORMATIONS ou CONTRAINTES)\n\n    REMARQUES : \n                Dans le cas des materiaux endommageables et visco-\n                endommageables (liste ci-dessous), et dans le cas ou le\n                champ de variables internes est donne, la matrice de\n                HOOKE utilisee pour les calculs tient compte de\n                l'endommagement. Ceci est valable pour les modeles :\n                'PLASTIQUE' 'ENDOMMAGEABLE'\n                'VISCOPLASTIQUE' 'VISCODOMMAGE'\n                'ENDOMMAGEMENT' 'MAZARS'\n                'ENDOMMAGEMENT' 'MVM'\n                'PLASTIQUE_ENDOM' 'ROUSSELIER'\n                'PLASTIQUE_ENDOM' 'GURSON2'\n                'FLUAGE' 'CERAMIQUE'\n\n                Dans le cas de calcul des deformations a partir de\n                contraintes avec l'element poutre, il convient de\n                creer un materiau avec les sections reduites 'SECY'\n                et 'SECZ'. Sinon on ne peut pas inverser la matrice\n                de Hooke.\n\n                Dans le cas de calcul des deformations a partir de\n                contraintes avec l'element tuyau, il convient de\n                creer un materiau avec le coefficent 'CISA'. Sinon\n                on ne peut pas inverser la matrice de Hooke.\n\n                Dans le cas de calcul des deformations a partir de\n                contraintes pour un materiau orthotrope en contraintes\n                planes, il convient de donner les composantes 'YG3',\n                'NU13' et 'NU23'. Sinon on ne peut pas inverser la\n                matrice de Hooke.\n\n                Dans le cas des elements joints 3D, l'operateur ELAS \n                ne marche qu'en isotrope.",
  },
  {
    name: "ELECNEUT",
    url: "ELECNEUT",
    documentation:
      "$$$$ ELECNEUT NOTICE  CHAT      11/09/12    21:16:00     7124           \n                                             DATE     11/09/12\n                                             \n     Procedure ELECNEUT                      Voir aussi : CHI1 DONCHI1\n     ------------------                                   CHI2  DONCHI2  \n                                                          NEUT  NOESPCHI  \n                                                          NOCOMCHI  \n     LOGI1 = ELECNEUT TAB1 OBJ1 OBJ2 LENT1 ;\n\n\n        Objet\n        -----\n        Cette procedure permet de modifier les concentrations\n        totales d'un objet de classe DONCHI2 de fa\u00e7on a realiser\n        l'equilibre electrique de la solution chimique.\n\n        Commentaires\n        -------------\n        TAB1 : table de soustype CHIMI1. Resultat de l'operateur CHI1.\n        OBJ1 : Objet de type DONCHI2 ( les valeurs de OBJ1%GTOT sont\n               modifiees en sortie)\n        OBJ2 : Objet de type PARMCHI2\n        LENT1: LISTENTI liste des conposants dont on peut modifier\n               la concentration totale\n        LOGI1: logique FAUX si la neutralite est verifie\n                       VRAI si la neutralite ne peut etre verifiee\n              (ceci permet de reprendre le calcul avec moins de test)\n\n \n ",
  },
  {
    name: "ELEM",
    url: "ELEM",
    documentation:
      "$$$$ ELEM     NOTICE  PV        21/02/28    21:15:00     10905          \n                                             DATE     21/02/28\n\n    Operateur ELEM                           Voir aussi : POIN MOTS\n    --------------                                        DROI  MAXI  \n                                                          MINI  \n\n    Cet operateur a plusieurs fonctions selon les donnees .\n\n   ------------------\n   | 1ere Fonction  |\n   ------------------\n\n    Il permet d'extraire des elements de differents types d'un MAILLAGE\ndonne GEO2. Le resultat est un objet de type MAILLAGE ou POINT .\n\n    GEO1 = GEO2 ELEM | (type d'element si plusieurs types) | | LENTI1 |;\n                     | COUL1                               | | N1     |;\n                     |\n                     | 'COUL' I1 ;\n                     |\n                     | 'CONTENANT'  POIN1 ('TOUS') ('NOVERIF') ;\n                     |\n                     | 'APPUYE'  ( |'STRICTEMENT' | ) GEO3 ('NOVERIF') ;\n                     |           ( |'LARGEMENT'   | )\n                     |\n                     | 'COMPRIS'  POIN1 POIN2 ;\n\n\n\n    Les differentes possibilites sont :\n\n\n   - on extrait de GEO2 les elements du type requis (type MOT).\n\n   - on extrait les elements du type indique et dont la liste des\n     numeros se trouve dans l'objet LENTI1 (type LISTENTI).\n\n   - on extrait le N1-ieme element du type indique.\n\n   - on extrait de GEO2 les elements de la couleur COUL1 indiquee.\n\n   - on extrait le N1-ieme element de la couleur COUL1 indiquee.\n\n   - on extrait les elements de la couleur COUL1 indiquee dont la liste\n     se trouve dans l'objet LENTI1 (type LISTENTI).\n\n   - on extrait les elements de numero de couleur I1 (voir operateur COUL\n     pour connaitre les numeros associes a chaque couleur)\n\n   - on extrait l'element de GEO2 contenant le point POIN1. En presence\n     du mot cle TOUS, tous les elements contenant ce point sont fournis.\n     Si le mot NOVERIF est utilise, il est autorise de creer\n     un resultat de type MAILLAGE vide.\n\n   - on extrait les elements de GEO2 s'appuyant strictement (par defaut)\n     ou largement sur les points de l'objet GEO3 (type POINT ou\n     MAILLAGE). Si le mot NOVERIF est utilise il est autorise de creer\n     un resultat de type MAILLAGE vide.\n\n   - on extrait pour une ligne GEO2 un segment compris entre deux points\n     avec l'option 'COMP'. La ligne resultat est decrite de POIN1\n     vers POIN2 (type POINT).\n\n\n    Exemples :\n    __________\n\n                GEO1 ELEM TRI3\n                GEO1 ELEM QUA4 3\n                GEO1 ELEM APPUYE LARGEMENT POIN8\n                GEO1 ELEM SEG2 (LECT 1 PAS 2 9)\n                GEO1 ELEM ROSE\n                GEO1 ELEM BLEU 1\n                GEO1 ELEM TURQ (LECT 2 PAS 1 3)\n                GEO1 ELEM CONT PO1\n                LIG1 ELEM COMP PO1 PO2\n\n Il y a possibilite de concatener la selection sur le type et la couleur\n\n                GEO1 ELEM QUA4 ROSE\n                GEO1 ELEM BLEU PRI6 4\n                GEO1 ELEM SEG2 ROUG (LECT 1 PAS 2 9)\n\n\n   ------------------\n   | 2eme Fonction  |\n   ------------------\n    LMOT1 = GE02 ELEM 'TYPE' ;\n    LMOT1 = GE02 ELEM 'COUL' ;\n\n    Il permet de connaitre les types des elements contenus d'un MAILLAGE\ndonne GEO2 (option 'TYPE') ou bien la couleur des elements (option\n'COUL'). Dans ce cas le resultat est un objet de type LISTMOTS.\n\n   ------------------\n   | 3eme Fonction  |\n   ------------------\n   GEO1 = CHE1 'ELEM'| MOT1          |('ABS') (MOT3) (MOT4 LMOTS1);\n                     | MOT2     X1   |\n                     |'COMPRIS' X1 X2|\n\n   Il permet d'extraire d'un champ/element l'element ou les elements\nsupports du maximum ou du minimum de l'ensemble de valeurs d'une ou\nde plusieurs composantes du champ ou contenant les valeurs verifiant\nune relation de comparaison par rapport a une valeur de reference.\n\n    Commentaire :\n    _____________\n\n    CHE1       : Objet de type  MCHAML\n\n    MOT1       :'MAXI' ou 'MINI' pour rechercher les elements pour\n                 lesquels CHE1 est maximum / minimum\n\n    X1         : Valeur de reference (type FLOTTANT)\n    X2         : Valeur de reference (type FLOTTANT)\n\n    MOT2 X1    : Recherche les elements de CHE1 dont la valeur v\u00e9rifie\n                 une des conditions suivantes :\n                'SUPERIEUR' |\n                'EGSUPE'    |\n                'EGALE'     | X1\n                'EGINFE'    |\n                'INFERIEUR' |\n                'DIFFERENT' |\n\n   'COMPRIS' X1 X2 : Recherche les elements de CHE1 dont la\n                 valeur est comprise entre X1 et X2\n\n   'ABS'       : Mot cle optionnel indiquant que la recherche des\n                 elements se fera sur la valeur absolue de CHE1\n\n    MOT3       : Mot cle optionnel pouvant prendre l'une des valeurs\n                 suivantes :\n                'LARG' (Par defaut) Un element est contenu dans GEO1 si\n                                    au moins un de ses points support\n                                    verifie la condition souhaitee\n\n                'STRI'              Un element est contenu dans GEO1 si\n                                    tous ses points support verifient\n                                    la condition souhaitee\n                                    Dans le cas de 'MAXI' ou 'MINI', un\n                                    seul element est retenu\n\n    MOT4       : Mot cle optionnel pouvant prendre l'une des valeurs\n                 suivantes :\n                'AVEC' : Considere seulement les composantes de CHE1 qui\n                         sont contenues dans LMOTS1 (Objet de type\n                         LISTMOTS)\n\n                'SANS' : Considere les composantes de CHE1 qui ne sont\n                         pas contenues dans LMOTS1 (Objet de type\n                         LISTMOTS)\n\n    GEO1     : Objet resultat de type MAILLAGE",
  },
  {
    name: "ELFE",
    url: "ELFE",
    documentation:
      "$$$$ ELFE     NOTICE  MB234859  17/10/02    21:15:10     9577           \n                                             DATE     17/10/02\n                \n  Operateur ELFE                           Voir aussi :\n    ---------------                      \n                \n     RESU1  = ELFE |'LAPLACE' ! 'PLAQUE' LT1\n                   |          |          E1 H1 NU1 RHO1 LCAM1\n                   |          |          PC1\n                   |          |          CHAM1\n                   |          |           OP1   |   OP2\n                   |          |                 |   ST1\n                   |          |          S0 LOM1\n                   |          |   \n                   |          | 'POUTRE' GEO1 (GE02) CHPO1 CHELEM LFR1\n                   |          |       S0 POIN1 COMP1 IMETH1 (IMP1) \n                   |          |   \n                   |          | 'ACOU' GEO1 CHPO1 CHELEM  (TEXP) LFR1\n                   |          |     S0 POIN1 COMP1\n                   |          |  \n                   |          |    \n                   |          |   \n                   |'TEMPS'   | 'POUTRE' STRU1 ATTA1 TEMP1\n                   |          |          DT1 CHAR1 (M1) GREE1                   \n                   |          |         ('NFOIS' NN1)                           \n                   |          |                                                 \n                   |          |                                                 \n\n\n    OPTION LAPLACE  PLAQUE\n    ----------------------                                                      \n       Cette option permet de calculer la fonction de transfert\n       d'une  plaque plane en  flexion par une formulation integrale\n     dans le domaine frequntiel ( Laplace)\n                                                                                \n                                                                                \n      L1         : Maillage du contour ( elements SEG3)\n      H1         : Epaisseur de la plaque (type FLOTTANT)                       \n      E1         : Module d'Young (type FLOTTANT)                               \n      NU1        : Coefficient de poisson (type FLOTTANT)                       \n      RHO1       : Masse volumique\n      LCAM1      : Liste des coefficients d'amortissement externe\n                   associes a chaque pulsation de la liste LOM1\n      PC1        : Noeuds formant des coins\n      CHAM1      : Champ des conditions aux limites imposees\n                    composantes possibles :\n                           WW : fleche\n                           WN : derivee normale de la fleche\n                           MN : moment flechissant\n                           KN : effort tranchant\n      OP1        : Point d'application de l'effort\n      OP2        : Point dont on calcule le deplacement\n      ST1        : Maillage surfacique strictement interne\n                   a la plaque dont on veut la deformee\n                  ( forme d'elements de type POI1)\n      S0         : partie reelle de la variable de Laplace\n      LOM1       : liste des pulsations  ( balayage en frequnce )\n                                                                                \n      RESU1      : TYPE TABLE                                                   \n       si on a donne OP1  OP2  ( fonction de transfert)\n      RESU1.1    : module du deplacement en OP2 ( LISTREEL)\n      RESU1.2    : phase  du deplacement en OP2 ( LISTREEL)\n       si on a donne ST1  ( surface deformee )\n      RESU1.i    : champ definissant le deplacement pour\n                   la ieme pulsation de la liste LOM1\n                    ( CHPOINT de composantes MODU et PHAS )\n                                                                                \n    OPTION LAPLACE POUTRE                                                       \n    ---------------------                                                       \n       Cette option permet de calculer la fonction de transfert d'un            \n    r{seau de poutres (treillis de poutres) @ l'aide de la formula-             \n    tion int{grale dans le domaine fr{quentiel de LAPLACE.                      \n                                                                                \n      GEO1       : Objet d{crivant le r{seau de poutres (type MAILLAGE          \n                   SEG2)                                                        \n     (GEO2)      : Objet d{crivant le m\u00aame maillage que GEO1 avec pour          \n                   chaque poutre du r{seau des points suppl{mentaires           \n                   o\u00ba l'on calculera le d{placement associ{.                    \n                                                                                \n      CHPO1      : Objet d{crivant les conditions aux limites aux               \n                   noeuds extr{mit{s (type CHPOINT).On fixe des                 \n                   valeurs particuli}res au vecteur d{placement ( UX,           \n                   UY, UZ ), au vecteur rotation (RX,RY,RZ), au vecteur         \n                   force (FX, FY, FZ), au vecteur moment (MX, MY, MZ)           \n                   et @ une {ventuelle masse ponctuelle (MA).                   \n                                                                                \n      CHELEM     : Objet d{crivant les caract{ristiques des poutres             \n                   de type MCHAML  :                        \n                                                                                \n                    - on d{finit les caract{ristiques suivantes :               \n                                                                                \n                        - YOUN ..  module d'YOUNG                               \n                        - NU ....  coefficient de POISSON                       \n                        - RHO ...  masse volumique                              \n                        - SECT ..  section de la poutre                         \n                        - INRY ..  moment d'inertie /Oy (rep}re local)          \n                        - INRZ ..  moment d'inertie /Oz (rep}re local)          \n                        - TORS ..  moment de torsion (rep}re local)             \n                        - SECY ..  section r{duite au cisaillement /Oy          \n                        - SECZ ..  section r{duite au cisaillement /oz          \n                        - CAM ...  coefficient d'amortissement visqueux         \n                        - ETA ...  amortissement interne (en pourcent)          \n                        - VECT ..  vecteur d{finissant l'axe Oy                 \n                                                                                \n      LFR1       : Objet d{crivant les fr{quences de calcul (type               \n                   LISTREEL) ; si on a pr{cis{ GEO2, cette LISTREEL             \n                   doit etre de longueur 1 (un seul point de calcul             \n                   de la d{form{ modale                                         \n      S0         : REEL donnant l'abcisse dans la variable de LAPLACE :         \n                             S = S0 + i W                                       \n      POIN1      : Objet d{crivant le lieu du r{sultat (type POINT)             \n      COMP1      : Objet d{crivant la composante  souhait{e :                   \n                   UX, UY, UZ, RX, RY, RZ (type MOT)                            \n      IMETH1     : ENTIER d{crivant le choix de la m{thode de r{solution        \n                   1 .. GAUSS  ;  2 .. GAUSS OPTIMISE                           \n                   On choisira toujours IMETH1 = 2 qui permet de gagner         \n                   un facteur 4 sur le temps de r{solution ; en effet,          \n                   les matrices @ r{soudre pour chaque fr{quence {tant          \n                   toujours de la m\u00aame forme, on enregistre la place du         \n                   pivot de GAUSS une premi}re fois, puis on r{p}te             \n                   l'op{ration. Ceci pourrait {ventuellement aboutir            \n                   @ un pivot de GAUSS nul avec une matrice inversible..        \n                   Il faudrait alors relancer le calcul avec IMETH1 = 1         \n                                                                                \n                                                                                \n      IMP1       : ENTIER (0 ou 1) donnant l'impression intermediaire ou        \n                   non                                                          \n      RESU1      :   - si on n'a pas pr{cis{ GEO2 :                             \n                       --------------------                                     \n             --->  Objet type EVOLUTION : courbe de la r{ponse fr{quen-         \n                   tielle de la variable choisie par \"COMP\" en module           \n                   et en phase                                                  \n                     - si on a pr{cis{ GEO2 :                                   \n                       --------------------                                     \n             --->  Objet type CHAMPOINT : champoint donnant pour chaque         \n                   point du maillage GEO2 le d{placement correspondant          \n                   Les variables pour chaque point ont pour nom :               \n                     - UXM , UYM , UZM   ....module du d{plt modal              \n                     - UXP , UYP , UZP   ....phase  du d{plt modal              \n                                                                                \n     OPTION LAPLACE ACOU                                                        \n     -------------------                                                        \n        Cette option permet de calculer la fonction de transfert d'un           \n     r{seau de tuyaux cylindriques @ l'aide de la formulation int{grale         \n     en acoustico-m{canique dans le domaine fr{quentiel de Laplace.             \n                                                                                \n                                                                                \n      GEO1       : Objet d{crivant le r{seau de tuyaux (type MAILLAGE           \n                   SEG2)                                                        \n                                                                                \n      CHPO1      : Objet type CHPOINT d{crivant :                               \n                     a) les conditions limites aux extr{mit{s :                 \n                      - vecteur d{placement       : UX,UY,UZ                    \n                      - vecteur rotation          : RX,RY,RZ                    \n                      - vecteur force             : FX,FY,FZ                    \n                      - vecteur moment            : MX,MY,MZ                    \n                      - imp{dance acoustique      : A, B et R                   \n                      ( en bout de tube )           avec Ap+Bq=R                \n                        p et q sont alors la pression et le d{bit               \n                      relatifs, d'o\u00ba : p=0 <=> tuyau ouvert                     \n                                       q=0 <=> tuyau ferm{                      \n                                                                                \n                     b) des composantes locales :                               \n                      - masse ponctuelle          : MA                          \n                      - moments d'inertie         : JOX,JOY,JOZ                 \n                      - raideurs locales                                        \n                          en traction-compression : KX,KY,KZ                    \n                          en torsion              : CX                          \n                          en flexion              : CY,CZ                       \n                      - discontinuit{ de pression : DP                          \n                      - discontinuit{ de d{bit    : DQ                          \n                      Ces composantes peuvent etre ajout{es en tout             \n                      point y compris ceux ou l'on applique une ou              \n                      plusieurs conditions limites.                             \n                                                                                \n      CHELEM     : Objet d{crivant les caract{ristiques du mat{riau             \n                   et du fluide, de type MCHAML  :          \n                                                                                \n                    - on d{finit les caract{ristiques suivantes :               \n                                                                                \n                        - RINT ..  rayon int{rieur du tuyau                     \n                        - REXT ..  rayon ext{rieur du tuyau                     \n                        - KCYZ ..  constante de TIMOSHENKO                      \n                        - YOUN ..  module d'YOUNG                               \n                        - NU ....  coefficient de POISSON                       \n                        - RHO ...  masse volumique                              \n                        - CAM ...  coefficient d'amortissement externe          \n                        - ETA ...  coefficient d'amortissement interne          \n                        - RHOF ..  masse volumique du fluide                    \n                        - CSON ..  vitesse du son                               \n                        - VECT ..  vecteur d{finissant l'axe Oy                 \n                                                                                \n                    - pour des elements  definis dans TEXP :\n                        - VECT ..  vecteur d{finissant l'axe Oy                 \n       Remarque : L'op{rateur tient compte                                      \n                        - de la masse ajout{e transversale du fluide en         \n                  flexion.                                                      \n                        - de la modification de la vitesse du son @             \n                  l'int{rieur du fluide due au gonflement du tuyau.             \n                                                                                \n                                                                                \n      TEXP       : Objet d{crivant  des caracteririques  (type\n                   TABLE   ) ayant la structure suivante\n                      TEXP.SOUSTYPE = 'TAB_EXPERIMENTALE';\n                      TEXP.  M1     = TABLE ;\n                      TEXP.  M1 . i  = TABLE;\n                      TEXP.  M1 . i  . MOT = xx ;\n                   avec\n                     M1 objet de type maillage\n                     i  entier variant de 1 a 14 (14 relations\n                           entre les inconnues\n                           sont necessaires pour definir le comporte\n                           ment acoustomecanique)\n                     MOT mot-cle definissant l'inconnue a laquelle\n                     on affecte  le coefficient xx\n                         valeurs possibles de MOT :\n                                 &AA$\n                             avec\n                                  & etant R ou I (partie reelle ou\n                                     imaginaire )\n                                  $ etant A ou B (les 2 extremites\n                                      de l'element )\n                                  AA valant  UX UY UZ RX RY RZ\n                                             FX FY FZ MX MY MZ\n\n\n      LFR1       : Objet d{crivant les fr{quences de calcul (type               \n                   LISTREEL) ;                                                  \n                                                                                \n      S0         : REEL donnant l'abcisse dans la variable de LAPLACE :         \n                             S = S0 + i W                                       \n                                                                                \n      POIN1      : Objet d{crivant le lieu du r{sultat (type POINT)             \n                                                                                \n      COMP1      : Objet d{crivant la composante  souhait{e :                   \n                   UX, UY, UZ, RX, RY, RZ, P ou Q (type MOT)                    \n                                                                                \n      RESU1      : Objet type EVOLUTION : courbe de la r{ponse fr{quen-         \n                   tielle de la variable choisie par \"COMP\" en module           \n                   et en phase                                                  \n                                                                                \n                                                                                \n    OPTION TEMPS POUTRE                                                         \n    -------------------                                                         \n       Cette option permet de calculer un r{seau de poutres                     \n     en dynamique par {quations int{grales dans le domaine temporel             \n                                                                                \n                                                                                \n                                                                                \n      STRU1      : Objet d{crivant la poutre (type STRUCTUR)                    \n      ATTA1      : Objet d{crivant les liaisons entre {l{ments                  \n                   (type ATTACHE)                                               \n      TEMP1      : Valeur du temps de calcul demand{ (type FLOTTANT)            \n      DT1        : Pas de temps du calcul (type FLOTTANT)                       \n      CHAR1      : Description temporelle du chargement (type CHARGEME)         \n      GREE1      : Fonctions de Green (type EVOLUTIO)(op}rateur GREEN)          \n      M1         : Indice de troncature du produit de convolution               \n                   (type ENTIER)                                                \n     'NFOI'      : Mot-cl{ suivi de :                                           \n      NNP1       : Fr{quence d'occurence des CHPOINTs dans SOLUT1               \n                   (type ENTIER)                                                \n      SOLUT1     : Objet r{sultat de type SOLUTION DYNAMIQUE                    \n                                                                                ",
  },
  {
    name: "ELIM",
    url: "ELIM",
    documentation:
      "$$$$ ELIM     NOTICE  FANDEUR   12/12/21    21:15:01     7634           \n                                             DATE     12/12/21\n                                             \n  Directive ELIMINATION                    Voir aussi :\n    ---------------------  \n    ELIM  GEO1 (GEO2) (FLOT1) ;\n\n\n    Objet :\n    _______\n\n    La directive ELIM remplace dans GEO1 (type MAILLAGE) tous les noeuds\n    distants de moins de FLOT1 (type FLOTTANT) par un seul point. Si\n    FLOT1 n'est pas fourni, le programme prend le dixieme de la densite\n    courante.\n\n    Si GEO2 (type MAILLAGE) est egalement fourni, l'elimination ne se\n    se fait qu'entre noeuds appartenant respectivement a GEO1 et GEO2\n    et non a l'interieur d'un meme objet. Autrement dit, les eventuels\n    doublons a l'interieur de GEO1 ou de GEO2 ne sont pas fusionnes.\n\n\n    Remarques\n    ---------\n\n    - L'elimination agit aussi sur les objets qui font reference a des\n      noeuds elimines (types MAILLAGE, CHPOINT, TABLE...) en changeant\n      ces references.\n\n    - L'elimination peut poser des problemes lorsque les noeuds\n      elimines sont references par des champs par points: il faut\n      pouvoir definir une seule valeur des composantes aux noeuds\n      elimines a partir de plusieurs valeurs initiales. L'attribut\n      \"NATURE\" des champs par points est prise en compte dans ce cas\n      (pour les champs \"DISCRET\" on somme, pour les champs \"DIFFUS\"\n      les valeurs doivent etre egales, pour les champs \"INDETERMINE\"\n      on declenche une erreur).",
  },
  {
    name: "ELNO",
    url: "ELNO",
    documentation:
      "$$$$ ELNO     NOTICE  CHAT      11/09/12    21:16:01     7124           \n                                             DATE     11/09/12\n\n    Operateur ELNO                           Voir aussi : MODE DOMA\n    --------------                                        KCHT   PENT  \n\n    CHP2 = ELNO MODE1 CHP1 | ('CENTRE')                ;\n                           | ('CENTREP1')\n                           | ('MSOMMET')\n                           | ('VOLUMF' GRCHP1 LIMCHP1)                      \n\n\n\n\n\n    Objet :\n    _______\n\n L'operateur ELNO transforme un CHPOINT definit sur les points CENTRE\nou CENTREP1 en un CHPOINT definit sur les points SOMMET.\nCet operateur concerne uniquement les CHPOINTs s'appuyant sur une\nformulation 'NAVIER_STOKES'.\n\n\n    Commentaires :\n    ______________\n\n    MODE1   : Objet modele (type MMODEL). On attend une formulation\n              'NAVIER_STOKES'\n\n    CHP1    : Objet de type CHPOINT (points CENTRE)\n              L'objet ne doit pas etre partitionne et ne doit avoir\n              qu'une composante\n\n    CHP2    : Objet de type CHPOINT (points SOMMET)\n\n    'CENTRE'           (option par defaut).\n      ou\n    'CENTREP1' : Mot-cle du type de CHPOINT de CHP1.\n      ou\n    'MSOMMET'\n\n    'VOLUMF'   : Mot-cle pour une reconstruction de type Volumes finis\n     Dans ce cas il faut donner les informations suivantes :\n\n     GRCHP1 : Objet de type CHPOINT (points CENTRE) contenant les \n              valeurs  du gradient de CHP1.\n\n     LIMCHP1 : Objet de type CHPOINT (points CENTRE) contenant les \n               valeurs du limiteur du gradient : Methode MUSCL\n               (voir operateur PENT).\n               \n    Complements d'information :\n    ___________________________\n\n      On cherche CHP2 minimisant au sens des distributions l'ecart\n    (CHP2 - CHP1) avec la contrainte supplementaire que l'integrale\n    du champ sur le domaine soit conservee.\n      On ne peut appliquer cette transformation qu'aux grandeurs\n    physiques intensives (temperature vitesse pression etc).\n    Cette derniere propriete n'est pas controlee par l'operateur.\n      Les matrices masses sont condensees sur la diagonale.\n\n    Exemple :\n      KPRES = 'CENTREP1' ;\n      pe=exco rv.inco.'PRESSION' 'PRES' ;\n      pe= kcht $bell scal KPRES pe ;\n      pn= elno $bell pe KPRES ;\n\n    Cas CHP1 MSOMMET :\n    ------------------\n\n    Dans ce cas CHP1, connu aux sommets de l'element, est interpole\n    sur les autres noeuds selon l'element lineaire correspondant.\n\n\n     Remarques pour les volumes finis\n     ________________________________\n\n       La valeur en un point sommet est calcule en effectuant la \n     moyenne des valeurs reconstruites a partir des Centres des \n     elements auquel il appartient.\n\n       Si on utilise le MOTCLE 'VOLUMF', la donnee du gradient et \n     du limiteur est obligatoire.\n\n     Si le gradient est calcule avec l'operateur PENT et le limiteur\n    impose a 1, la reconstruction au sommet d'un CHPOINT CENTRE \n    lineaire est exact a l'interieur du domaine. \n\n     Si la valeur du limiteur en tout point est 0, la reconstruction \n    consiste simplement a effectuer la moyenne des valeurs\n    de CHP1 au centre voisins d'un sommet.",
  },
  {
    name: "ELST",
    url: "ELST",
    documentation:
      "$$$$ ELST     NOTICE  MB234859  17/10/02    21:15:10     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur ELST                           Voir aussi :\n    --------------  \n    ELSTR1 = ELST  STRU1 GEO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur ELST cree un objet de type ELEMSTRU que l'on utilise\npour ecrire des liaisons entre sous-structures.\n\n    Commentaire :\n    _____________\n\n\n    STRU1  : objet de type STRUCTUR\n\n    GEO1   : objet inclus dans la geometrie de la structure\n             (objet geometrique constitue d'un seul type d'element)\n             (type POINT ou MAILLAGE).\n\n    ELSTR1 : objet de type ELEMSTRU",
  },
  {
    name: "ENCEINTE",
    url: "ENCEINTE",
    documentation:
      "$$$$ ENCEINTE NOTICE  SERRE     21/07/15    21:15:00     11059          \n                                             DATE     21/07/15\n\n  Procedure ENCEINTE                        Voir aussi :\n    ------------------  \n      ENCEINTE NDT RXT ;\n\n\n\n    Commentaires\n    ____________\n\n    NDT ENTI1 : nombre de pas de temps \n    RXT TAB1  : table contenant les informations permettant de calculer\n                l'evolution de la composition d'un melange gazeux dans\n                une enceinte fermee\n\n\n    OBJET :\n    -----\n\n  La procedure ENCEINTE calcule, a partir d'un etat initial, l'evolution\n au cours du temps d'un melange gazeux dans une enceinte fermee.\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Generalites\n2. Objets geometriques\n3. Modelisation Physique\n    3.1 Loi d'etat pour la vapeur\n    3.2 Thermique parois\n    3.3 Temperature de paroi imposee\n    3.4 Conditions initiales\n    3.5 Conditions aux limites\n    3.6 Turbulence\n    3.7 Aspersion\n    3.8 Condensation en masse (en test)\n    3.9 PAR (recombineur catalytique passif)\n    3.10 Condensation en parois\n4. Parametres de fonctionnement\n    4.1 Table RXT\n    4.2 Limitations du modele actuel\n    4.3 Quelques recettes\n5. Resultats du calcul\n    5.1 Table rxt.'TIC'\n    5.2 Table rxt.'GEO'\n\n  \n1. Generalites1 \n============== \n  L'etat initial est uniforme en espace lorsqu'il est donne par\n l'utilisateur, issu d'un calcul precedent sinon.\n\n  L'air est toujours present dans le melange gazeux. Il peut aussi contenir un\n ou plusieurs des constituants suivants: vapeur d'eau, H2, N2, He, O2, CO et\n CO2. Les gaz incondensables sont modelises par la loi des gaz parfaits. C'est\n aussi le choix par defaut de la vapeur (version V0), un modele gaz reel etant\n en test (version V1).\n\n  En presence de vapeur la condensation en paroi peut apparaitre si les\n conditions locales sont reunies (Pvap > Psat). Le modele de condensation est\n de type Chilton-Colburn et associe a une correlation d'echange de type\n convection naturelle le long d'une plaque plane verticale.\n\n  On distingue 4 types de conditions aux limites suivant la nature de la\n frontiere du domaine fluide : zones d'injection (breches), ventilation forcee\n et clapet de decharge (sorties), parois thermiques et parois inertes :\n\n  - sur les zones d'injection ou breches, on impose des conditions aux limites\n de type valeur imposee pour la vitesse, la temperature du melange, la densite\n du melange et de ses constituants. Il faut donc y preciser le debit massique\n de chaque constituant du melange (kg/s) et la temperature d'entree (oC) (voir\n entree 'scenario' des Breches) ;\n\n  - sur les sorties, on impose un debit (ventilation) et on precise les\n parametres de la perte de charge (clapet de decharge) (voir entree 'scenario'\n des Sorties) ;\n  \n  - sur les parois thermiques, la vitesse est nulle (suf si fonction de paroi\n (entree FPAROI)) et la temperature evolue au cours du temps (entree TIMP), est\n a priori constante (entree ECHANP), le resultat d'un calcul de thermique paroi\n (entree THERMP). Pour ce dernier cas, il est possible de coupler la resolution\n des equations de l'enrergie paroi et fluide de fa\u00e7on implicite (entree\n THERCO). En presence de vapeur les parois thermiques sont susceptibles de\n condenser. Elles sont par contre impermeables pour tous les incondensables.\n\n  - sur les parois inertes, la vitesse est nulle, et elles sont impermeables\n pour toutes les autres inconnues (temperature, vapeur et gaz incondensables).\n Les parois inertes correspondent au maillage obtenu par difference entre\n l'enveloppe du volume fluide et les parois, breches et sorties.\n\n Par suite, les conditions aux limites sont correctement definies.\n\n  La turbulence des mouvements de gaz est modelisee soit par une viscosite\n tourbillonnaire constante, soit par un modele de longueur de melange soit par\n un modele K-epsilon (entree MODTURB). En absence de l'entree MODTURB,\n l'ecoulement est laminaire.\n\n  Un modele d'aspersion est disponible.\n\n  Un modele de condensation en masse est en test.\n\n  Au moyen du fichier d'extension dgibi, l'utilisateur transmet a CAST3M les\n donnees du scenario etudie. Regroupees dans la table notee RXT a differents\n indices qui sont precises dans cette notice, le transitoire est alors calcule\n par la procedure ENCEINTE avec la table RXT et le nombre de pas de temps ndt\n en donnees d'entree :\n\n   ENCEINTE ndt rxt ;\n\n  La table RXT est completee au moment de l'execution par trois tables :\n  - la sous table rxt.'GEO' contient les modeles et objets geometriques crees a \n partir des donnees fournies.\n  - la sous table rxt.'TBT' est la table de travail proprement dite et contient\n les autres objets crees necessaires au calcul hormis les inconnues.\n  - la sous table rxt.'TIC' contient les inconnues au dernier temps connu\n (temps calcule ou condition initiale) ainsi que les champs variables en temps.\n\n Les entrees de RXT fournis par l'utilisateur ne sont donc pas modifiees.\n\n Les indices de RXT sont les presentes ci-dessous.\n  \n2. Objets geometriques \n====================== \n \n rxt . 'vtf'    = GEO1   ; maillage fluide (OBLIGATOIRE)\n rxt . 'pi'     = POI1   ; point interieur du domaine fluide ou sera imposee\n                           la pression (OBLIGATOIRE).\n rxt . 'axe'    = GEO2   ; axe de revolution si 2D AXI\n\n  On peut definir un nombre quelconque de Breches en indiquant le nom de la\n breche, son maillage et la direction du champ de vitesse a la breche autant\n de fois que necessaire :\n\n rxt . 'Breches' = 'TABLE'                     ; data des Breches\n rxt . 'Breches' . MOT1              = 'TABLE' ; data de la breche MOT1\n rxt . 'Breches' . MOT1 . 'Maillage' = GEO1    ; maillage surfacique de MOT1\n rxt . 'Breches' . MOT1 . 'diru'     = POI1    ; direction de la vitesse\n\n avec MOT1 le nom de la breche choisie par l'utilisateur.\n\n  On peut definir un nombre quelconque de Sorties en indiquant le nom de la\n sortie, son maillage et la direction du champ de vitesse a la sortie autant\n de fois que necessaire :\n\n rxt . 'Sorties' = 'TABLE'                     ; data des Sorties\n rxt . 'Sorties' . MOT1              = 'TABLE' ; data de la sortie MOT1\n rxt . 'Sorties' . MOT1 . 'Maillage' = GEO1    ; maillage surfacique de MOT1\n rxt . 'Sorties' . MOT1 . 'diru'     = POI1    ; direction de la vitesse\n\n avec MOT1 le nom de la sortie choisi par l'utilisateur.\n\n  On peut definir un nombre quelconque de PAROIS en indiquant le nom MOT1 de\n la paroi et son maillage autant de fois que necessaire :\n\n rxt . 'PAROIS' = 'TABLE'                     ; data des PAROIS\n rxt . 'PAROIS' . MOT1              = 'TABLE' ; data de la paroi MOT1\n rxt . 'PAROIS' . MOT1 . 'vtp'      = GEO1    ; maillage volumique de MOT1\n\n avec MOT1 le nom de la paroi choisi par l'utilisateur.\n\n  On peut definir un nombre quelconque de surface a temperature imposee en\n indiquant le nom MOT1 de la surface et son maillage autant de fois que\n necessaire :\n\n rxt . 'TIMP' = 'TABLE'                      ; data des surfaces a TIMP\n rxt . 'TIMP' . MOT1              = 'TABLE'  ; data de la surface MOT1\n rxt . 'TIMP' . MOT1 . 'MAILLAGE' = GEO1     ; maillage surfacique de MOT1\n\n avec MOT1 le nom de la paroi a temperature imposee choisi par l'utilisateur.\n \n  Exemple : On definit les breches A et B de la facon suivante :\n\n rxt . 'Breches' = 'TABL' ;\n rxt . 'Breches' . 'A'              = 'TABL'      ;\n rxt . 'Breches' . 'A' . 'Maillage' = surfacea    ;\n rxt . 'Breches' . 'A' . 'diru'     = (0. 0. 1.)  ;\n rxt . 'Breches' . 'B'              = 'TABL'      ;\n rxt . 'Breches' . 'B' . 'Maillage' = surfaceb    ;\n rxt . 'Breches' . 'B' . 'diru'     = (0. -1. 0.) ;\n  \n3. Modelisation Physique \n======================== \n \n  \n3.1 Loi d'etat pour la vapeur \n----------------------------- \n rxt . 'VERSION' = (MOT1) ;\n avec MOT1=('V0') si gaz parfait (par defaut), 'V1' si gaz reel (en test) \n\n\n  \n3.2 Thermique parois \n-------------------- \n  A. Activation\n  -------------\n\n  Certaines parois sont maillees en volume et on y calcule l'evolution de la\n temperature due aux echanges avec le fluide et le milieu ambiant. Les\n informations globales associees a la thermique paroi sont les suivantes :\n\n rxt . 'THERMP' = (LOG1) ; VRAI si thermique paroi (FAUX par defaut)\n rxt . 'THERCO' = (LOG2) ; VRAI si couplage paroi/fluide implicite (FAUX)\n rxt . 'ECHAN'  = FLOT1  ; coefficient d'echange fluide / paroi (W/m2/oC)\n\n En cas de condensation, la valeur du coefficient d'echange convectif FLOT1\n est ecrasee par HTC, celle issue de la correlation associee au modele de \n condensation, sauf si FLOT1 lui est superieure : HT = max(FLOT1,HTC). La \n valeur fournie est donc un seuil.\n\n\n  B. Proprietes des PAROIS\n  ------------------------\n\n  Pour chaque paroi MOT1, on precise les proprietes de la paroi par :\n\n rxt . 'PAROIS' . MOT1 . 'vtp'    = GEO1  ; maillage de MOT1\n rxt . 'PAROIS' . MOT1 . 'LAMBDA' = FLOT1 ; condu. thermique de MOT1 (W/m/oC)\n rxt . 'PAROIS' . MOT1 . 'ROCP'   = FLOT2 ; rho*Cp de MOT1 (J/m3/oC)\n rxt . 'PAROIS' . MOT1 . 'Tp0'    = FLOT3 ; temperature initiale de MOT1 (oC)\n\n Par exemple, on definit ainsi les parois 'Peinture' et 'Acier' :  \n\n rxt . 'PAROIS' = 'TABL' ;\n rxt . 'PAROIS' . 'Peinture' = 'TABL'              ;\n rxt . 'PAROIS' . 'Peinture' .'vtp'    = mpeinture ;\n rxt . 'PAROIS' . 'Peinture' .'LAMBDA' = 0.2       ;\n rxt . 'PAROIS' . 'Peinture' .'ROCP'   = 1.E6      ;\n rxt . 'PAROIS' . 'Peinture' .'Tp0'    = 60.       ;\n rxt . 'PAROIS' . 'Acier' = 'TABL'            ;\n rxt . 'PAROIS' . 'Acier' . 'vtp'    = macier ;\n rxt . 'PAROIS' . 'Acier' . 'LAMBDA' = 15.    ;\n rxt . 'PAROIS' . 'Acier' . 'ROCP'   = 3.9E6  ;\n rxt . 'PAROIS' . 'Acier' . 'Tp0'    = 60.    ;\n\n\n  \n3.3 Temperature de paroi imposee \n-------------------------------- \n  A. Surfaces internes\n  --------------------\n\n  Les parois internes de l'enceinte peuvent echanger via un coefficient\n d'echange avec le fluide, l'evolution de la temperature de la paroi etant\n connue en fonction du temps.\n\n rxt . 'TIMP'                     = 'TABL' ; data des surfaces a T imposee\n rxt . 'TIMP' . MOT1              = 'TABL' ; data de la surface MOT1\n rxt . 'TIMP' . MOT1 . 'MAILLAGE' = GEO1   ; maillage de la surface MOT1              \n rxt . 'TIMP' . MOT1 . 'ECHAN'    = FLOT1  ; coef. d'echange (W/m2/oC)\n rxt . 'TIMP' . MOT1 . 't'        = LREE1  ; temps (s)\n rxt . 'TIMP' . MOT1 . 'TIMP'     = LREE2  ; temperature imposee (oC)\n\n avec MOT1 le nom de la paroi a temperature imposee choisi par l'utilisateur.\n Cela permet en particulier de modeliser des condenseurs. \n\n En cas de condensation, la valeur du coefficient d'echange convectif FLOT1\n est ecrasee par HTC, celle issue de la correlation associee au modele de \n condensation, sauf si FLOT1 lui est superieure : HT = max(FLOT1,HTC). La \n valeur fournie est donc un seuil.\n\n  L'ancienne structure de donnee ECHANP permettant d'imposer une surface a\n temperature constante au cours du temps sera supprimee a la prochaine version\n de CAST3M.\n\n rxt . 'ECHANP'              = 'TABL' ;\n rxt . 'ECHANP' . 'MAILLAGE' = GEO1   ;\n rxt . 'ECHANP' . 'ECHAN'    = FLOT1  ;\n rxt . 'ECHANP' . 'TMUR'     = FLOT2  ; \n\n\n  B. Surface externe\n  ------------------\n\n  Les parois externes de l'enceinte peuvent echanger via un coefficient\n d'echange avec le milieu ambiant (exterieur) a condition d'activer ECHEXT.\n\n rxt . 'ECHEXT' = (LOG1) ; VRAI si echange externe paroi/milieu ambiant (FAUX)\n \n rxt . 'parext' = GEO1   ; maillage de la surface externe\n rxt . 'HEXT'   = FLOT1  ; coefficient d'echange avec l'exterieur (W/m2/oC)\n rxt . 'TPEXT'  = FLOT2  ; temperature exterieure (oC)\n\n Exemple : Si l'enceinte est semi immergee on peut definir deux zones (une\n pour la partie immergee et une pour la partie emmergee) en utilisant la\n procedure PROCHEXT. Les deux zones sont identifiees par la hauteur d'eau qui\n est une donnee du modele. Cette procedure est a appeler a partir d'une\n procedure PERSO (voir entree PRCPERSO). On renvoie a la notice de la procedure\n PROCHEXT pour renseigner correctement l'appel dans la procedure PERSO. Les\n donnees fournies peuvent dependre du temps (voir les jeux de donnees pressuhx1\n et pressuhx2.dgibi).\n\n\n  \n3.4 Conditions initiales \n------------------------ \n  A. Constituants du melange\n  --------------------------\n\n  L'air est toujours present dans le melange.\n\n rxt . 'VAPEUR' = (LOG1) ; presence de vapeur (FAUX)\n rxt . 'H2'     = (LOG2) ; presence d'hydrogene (FAUX)\n rxt . 'HE'     = (LOG3) ; presence d'helium (FAUX)\n rxt . 'N2'     = (LOG4) ; presence d'azote (FAUX)\n rxt . 'O2'     = (LOG5) ; presence d'oxygene (FAUX)\n rxt . 'CO'     = (LOG6) ; presence d'oxyde de carbone (FAUX)\n rxt . 'CO2'    = (LOG7) ; presence de gaz carbonique (FAUX)\n\n\n  B. Composition du melange\n  -------------------------\n\n  Le m\u00e9lange initial est constant dans le domaine fluide.\n\n rxt . 'TF0' = FLOT1 ; temperature initiale du melange (oC)\n rxt . 'PT0' = FLOT2 ; pression totale initiale (Pa)\n rxt . MOT1  = FLOT3 ; fraction massique d'un constituant present\n avec MOT1='Yvap0','Yhe0','Yh20','Yo20','Yn20','Yco0','Yco20'.\n\n Remarque : L'air assure le complement a 1 des fractions massiques fournies.\n\n\n  C. Proprietes du melange\n  ------------------------\n\n * Proprietes physiques du melange gazeux prises par defaut\n * Constantes des gaz (J/kg/K)\n Rgh2  = 4156.5\n Rghe  = 2078.25\n Rgo2  = 259.8\n Rgn2  = 296.9\n Rgco2 = 188.9\n Rgco  = 296.9\n Rgvap = 461.513\n Rgair = 287.1\n\n muair =  1.800e-5 : viscosite dynamique (air)  (kg/m/s)\n alf   =  1.800e-5 : diffusivite thermique      (m2/s)\n lamair=  2.580e-2 : conductivite thermique     (W/m/oC)\n db    =  1.000e-5 : diffusion Browniene        (m2/s)\n Cpvap =  1700.0   : chaleur specifique a pression constante\n                     pour la vapeur d'eau       (J/oC/kg)\n Lv    =  2.3E6    : chaleur latente            (J/kg)\n\n Les chaleurs specifiques des autres gaz sont donnees par la\n procedure CALCP.\n\n\n  \n3.5 Conditions aux limites \n-------------------------- \n  Les frontieres entre fluide et paroi etant traites en B/ et C/, nous\n indiquons les conditions aux entrees (breches) et aux sorties fluide.\n\n  A. Breches\n  ----------\n\n  Pour chaque breche MOT1, le debit et la temperature associes a differents\n temps sont regroupes dans la sous table scenario de la breche concernee :\n\n rxt.'Breches'.MOT1.'scenario'        = 'TABL' ; scenario de la breche MOT1\n rxt.'Breches'.MOT1.'scenario'.'t'    = LREE1  : temps du scenario (s) \n rxt.'Breches'.MOT1.'scenario'.'qair' = LREE2  : debit d'air (kg/s)\n rxt.'Breches'.MOT1.'scenario'. MOT2  = LREE3  : debit d'une espece (kg/s)\n rxt.'Breches'.MOT1.'scenario'.'tinj' = LREE4  : temperature d'injection (oC)\n\n avec MOT2='qeau','qhe','qh2','qo2','qn2','qco' ou 'qco2' suivant la\n composition du melange. Comme l'air est present par defaut, la donnee 'qair'\n est toujours indiquee.\n\n Par exemple, on definit une breche A de vapeur d'eau a 150oC et 50 g/s par :\n\n rxt.'Breches'.'A'.'scenario'        = 'TABL' ;\n rxt.'Breches'.'A'.'scenario'.'t'    = 'PROG' 0.0    1000.0 ;\n rxt.'Breches'.'A'.'scenario'.'qair' = 'PROG' 0.000  0.000  ;\n rxt.'Breches'.'A'.'scenario'.'qeau' = 'PROG' 0.050  0.050  ;\n rxt.'Breches'.'A'.'scenario'.'tinj' = 'PROG' 150.0  150.0  ;\n\n  Pour la vapeur, la separation vapeur/liquide a la breche est realisee a la\n temperature d'ebullition. Par suite, la qualite de la vapeur a la breche est :\n xsi = (h_{vap,inj}-h_{liq,ebu}) / (h_{vap,sat}-h_{liq,ebu}),\n avec h_{vap,inj} = h(P_{vap,inj},T_{inj}),\n      h_{vap,ebu} = hvap(P,Tsat(P)),\n      h_{liq,ebu} = hliq(P,Tsat(P)),\n      P, la pression totale dans l'enceinte.\n\n  La partie liquide va directement dans le puisard dont la masse est\n initialisee avec rxt . 'Mliq0' (en kg, 0. par defaut).\n\n\n  B. Sorties\n  ----------\n\n  Pour chaque sortie MOT1, deux modeles sont disponibles : on modelise une\n ventilation forcee (entree 'Qext') ou un clapet de decharge (entree 'Pext').\n Dans le premier cas, le debit de ventilation forcee est donne en fonction du\n temps ; dans le deuxieme cas, il est calcule en fonction de la difference\n entre la pression de l'enceinte et l'exterieur. Il faut alors renseigner les\n donnees exterieures relatives a la perte de charge :\n     P - Pext = Kext (U ** Bext). \n Si les conditions sont reunies, le col est sonique (debit critique atteint).\n\n rxt . 'Sorties' . MOT1 . 'scenario'             = 'TABL' ; scenario de MOT1\n rxt . 'Sorties' . MOT1 . 'scenario' . 't'       = LREE1  ; temps (s)\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Section' = FLOT1  ; section (m2)\n\n  Cas a : 'Qext' : ventilation forcee\n\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Qext'    = LREE2 ; debit (kg/s)\n\n  Cas b : 'Pext' : clapet de decharge\n\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Pext'    = LREE2 ; P exterieur (Pa)\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Kext'    = LREE3 ; Perte de charge\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Bext'    = LREE4 ; Perte de charge\n\n  Remarque : Si la condition de sortie n'est pas active pendant tout le\n scenario, il suffit d'annuler par une procedure PERSO sa section (<1.e-10).\n\n  Exemple d'une sortie appelee S :\n\n rxt . 'Sorties' = 'TABL' ;\n\n rxt . 'Sorties' . 'S' = 'TABL' ;\n rxt . 'Sorties' . 'S' . 'Maillage' = ms         ;\n rxt . 'Sorties' . 'S' . 'diru'     = (0. 0. 1.) ;\n rxt . 'Sorties' . 'S' . 'scenario' = 'TABL'     ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Section' = 4.68e-4           ;\n rxt . 'Sorties' . 'S' . 'scenario' . 't'       = 'PROG' 0.0 1000.0 ;\n\n  Cas a : 'Qext'\n rxt . 'Sorties' . 'S' . 'scenario' . 'Qext'    = 'PROG' 1.     1.    ;\n\n  Cas b : 'Pext'\n rxt . 'Sorties' . 'S' . 'scenario' . 'Pext'    = 'PROG' 1.e5   1.e5  ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Kext'    = 'PROG' 1.000  1.000 ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Bext'    = 'PROG' 0.75   0.75  ;\n\n\n  C. Flux de masse diffuse impose\n  -------------------------------\n\n  On peut imposer les debits de masse issus d'une surface MOT1 sous forme de\n flux diffusif lorsque le debit est tres faible.\n\n rxt . 'XFIMP' = 'TABL'                    ; data des flux diffusifs\n rxt . 'XFIMP' . MOT1 = 'TABL'             ; data de la surface MOT1\n rxt . 'XFIMP' . MOT1 . 'MAILLAGE' = GEO1  ; maillage\n rxt . 'XFIMP' . MOT1 . 't'        = LREE1 ; temps (s)\n rxt . 'XFIMP' . MOT1 . MOT2       = LREE2 ; debit (kg/s)\n\n avec MOT1 le nom de la paroi a flux diffusif imposee choisi par l'utilisateur,\n MOT2='qeau','qair','qhe','qh2','qo2','qn2','qco','qco2' suivant l'espece\n concernee.\n\n\n  \n3.6 Turbulence \n-------------- \n  L'absence de cette entree signifie que l'on est en laminaire.\n\n < rxt . 'MODTURB' =  MOT1 ; > modele de turbulence choisi\n avec MOT1='NUTURB','LMEL' ou 'KEPSILON'.\n\n a/  rxt . 'MODTURB'  =  'NUTURB'  ; Nu turbulent constant\n     rxt . 'NUT'      =  FLOT1     ; valeur de Nut (m2/s) \n\n b/  rxt . 'MODTURB'  =  'LMEL'    ; longueur de melange\n     rxt . 'LMEL'     =  FLOT1     ; valeur de lm (m)\n\n c/  rxt . 'MODTURB'  = 'KEPSILON' ; k-epsilon\n     < rxt . 'FPAROI' = LOGIQUE    ; > fonction de paroi (FAUX) \n     < rxt . 'YP'     = FLOT1      ; > valeur de y+ \n\n Le modele KEPSILON n'est disponible qu'avec l'algorithme semi-explicite EFM1\n (voir entree ALGO).\n\n\n  \n3.7 Aspersion \n------------- \n  rxt . 'ASPER' = (LOG1) ; VRAI si presence d'aspersion (FAUX)\n\n En cas d'aspersion le logique rxt.'VAPEUR' doit etre = VRAI\n\n rxt.'aspinj' = GEO1 ; Maillage de la surface d'injection\n                           de la phase dispersee\n rxt.'toitf'  = GEO2 ; Maillage de la surface superieure (par\n                           rapport a la verticale) du volume\n                           fluide\n rxt.'rod'    = GEO3 ; Densite de la phase dispersee\n rxt.'Cpd'    = GEO4 ; Chaleur specifique de la phase dispersee\n rxt.'scenario'.'vzinj'  = LREE1 ; Liste des vitesses (verticales)\n                                   d'injection de la phase disp.\n rxt.'scenario'.'xdinj'  = LREE2 ; Liste de la fraction volumique\n                                   de la phase disp. a l'inject.\n rxt.'scenario'.'tdinj'  = LREE3 ; Liste de la temperature de la\n                                   phase disp. a l'injection.\n rxt.'scenario'.'ddinj'  = LREE4 ; Liste du diametre de la phase\n                                   disp. a l'injection.\n\n\n  \n3.8 Condensation en masse (en test) \n----------------------------------- \n rxt . 'CONDMAS' = (LOG1) ; Activation de la condensation en masse (FAUX).\n\n\n\n  \n3.9 PAR (recombineur catalytique passif) \n---------------------------------------- \n  Les recombineurs ne peuvent etre defini qu'en presence a minima des\n constituants suivants : H2, N2, O2, VAPEUR.\n\n  On definit autant de PAR que necessaire (rang=1,n). \n\n rxt . 'RECOMB' = 'TABLE'                     ; data des PARs\n rxt . 'RECOMB' . rang = 'TABL'               ; data du rangieme PAR\n rxt . 'RECOMB' . rang . 'PAREXT'   = MAIL1   ; paroi du PAR\n rxt . 'RECOMB' . rang . 'ENTREE'   = MAIL2   ; entree du PAR\n rxt . 'RECOMB' . rang . 'SORTIE'   = MAIL3   ; sortie du PAR\n rxt . 'RECOMB' . rang . 'direntr'  = POI1    ; normale a l'entree\n rxt . 'RECOMB' . rang . 'dirsort'  = POI2    ; normale a la sortie\n rxt . 'RECOMB' . rang . 'NSECTION' = (ENTI1) ; nombre de PAR\n rxt . 'RECOMB' . rang . 'A'        = (FLOT1) ; coef. taux de combustion\n rxt . 'RECOMB' . rang . 'B'        = (FLOT2) ; coef. taux de combustion\n rxt . 'RECOMB' . rang . 'XH2ON'    = (FLOT3) ; condition allumage\n rxt . 'RECOMB' . rang . 'XH2OFF'   = (FLOT4) ; condition extinction\n rxt . 'RECOMB' . rang . 'BETA'     = (FLOT5) ; parametrage\n\n  Par defaut, le nombre d'unite NSECTION dans le bati est 1.\n\n  Le taux de consommation d'H2 est calcule par la loi constructeur SIEMENS.\n Les valeurs par defaut correspondent au modele SIEMENS FR90/1-150 :\n  - A et B : Coefficient de la loi lineaire en pression\n    (0.48D-8 kg/s/Pa et 0.58D-3 kg/s par defaut)\n  - XH2ON  : Fraction molaire d'H2 au dela de laquelle le\n    recombineur entre en fonctionnement (0.005 par defaut)\n  - XH2OFF : Fraction molaire d'H2 en de\u00e7a de laquelle le\n    recombineur passe en arret (0.005 par defaut)\n  - BETA   : Zone de transition affectee par la correction\n    pour les faibles concentrations en H2 (0.2 par defaut)\n\n\n  \n3.10 Condensation en parois \n--------------------------- \n rxt . 'MODCOND' = (MOT1) ; Modele de condensation en paroi\n avec MOT1=('CHIL0') ou 'CHIL1'.\n\n a/ rxt . 'MODCOND' = 'CHIL0' : Jv = Jstand = kc rho (Yv - Yvsat)\n Modele de type Chilton-Colburn valable pour les tres faibles concentration de\n vapeur. La correlation utilisee est une correlation de convection naturelle.\n\n b/ rxt . 'MODCOND' = 'CHIL1' : Jv = Jstand / (1-Yvsat)\n Modele deduit de la loi de Fick en masse volumique avec diffusivite de la\n vapeur dans le melange calcul\u00e9 comme dans RALOC.\n  \n4. Parametres de fonctionnement \n=============================== \n \n  \n4.1 Table RXT \n------------- \n  Il y a la possibilite d'executer une procedure personnelle en tete de la\n boucle en temps de l'algorithme.\n\n rxt . 'PERSO'    = (LOG1)  ; activation d'une procedure PERSO (FAUX)\n rxt . 'PRCPERSO' = MOT1    ; nom de la procedure\n rxt . 'TABPERSO' = TAB1    ; data associees\n\n rxt . 'DT0'      =  FLOT1  ; valeur du pas de temps (s)\n rxt . 'IMPR'     = (ENTI1) ; (0) ou 1 si impressions supplementaires\n rxt . 'epsi'     = (FLOT1) ; critere de precision des maillages (1.E-4)\n\n rxt . 'FRPREC'   = (ENTI1) ; frequence de calcul du preconditionnement (1)\n rxt . 'FCPRECT'  = (ENTI2) ; frequence de recalcul du preconditionneur base\n                              sur le rang des pas de temps (1)\n rxt . 'FCPRECI'  = (ENTI3) ; frequence de recalcul du preconditionneur base\n                              sur le rang des iterations internes (1)\n\n Attention : si FPREC est donne, les valeurs par defaut pour FCPRECT et\n FCPRECI sont egales a 5 au lieu de 1.\n\n rxt . 'ALGO'     = (MOT1)  ; Type d'algorithme ('IMPL')\n avec MOT1='IMPL' si semi-implicite et 'EFM1' si semi explicite.\n\n rxt . 'DISCR'    = (MOT1)  ; discretisation de la vitesse et des champs \n                              scalaires (sauf la pression) ('MACRO').\n rxt . 'KPRE'     = (MOT2)  ; discretisation de la pression ('CENTRE')\n\n Attention : tous les couples MOT1/MOT2 ne sont pas licites (voir les\n notices de NAVI et de MODEL).\n\n rxt . 'STAB'     = (FLOT1) ; facteur de stabilisation des elements MACRO\n                              d'ancienne generation (1.).\n\n rxt . 'MAXELPRE' = (ENTI1) ; nombre maximum d'elements pour lequel on utilise\n                              une methode directe (Cholesky) pour inverser la\n                              matrice de pression (150000).\n rxt . 'TYPINV'   = (ENTI2) ; methode de resolution iterative (voir KRES) (3)\n rxt . 'RESIDU'   = (FLOT1) ; residu des methodes iteratives (1.E-20).\n rxt . 'NTIT'     = (ENTI3) ; Nombre max d'iterations pour les methodes\n                              iteratives (800)\n\n rxt . 'GRAPH'    = (LOG1)  ; trace de controle (FAUX)\n rxt . 'DETMAT'   = (LOG1)  ; Destruction des matrices en fin du calcul (VRAI)\n rxt . 'REINIT'   = (LOG1)  ; Re-initialisation du scenario (FAUX)\n rxt . 'CORTEMP'  = (LOG1)  ; Controle du bilan d'energie (VRAI)\n\n\n  \n4.2 Limitations du modele actuel \n-------------------------------- \n Pas de modelisation gaz reel de la vapeur d'eau\n Pas de modelisation de la turbulence en implicite\n Pas de modelisation de la condensation en masse\n Pas de plan de symetrie possible\n Modele numerique adapte aux grands pas de temps\n Parallelisme embryonnaire\n\n\n  \n4.3 Quelques recettes \n--------------------- \n  A. Modification des conditions aux limites\n  -------------------------------------------\n\n  Lorsque par exemple une breche cesse d'emettre, la nature des conditions aux\n limites change a la breche. Pour prendre en compte cela, le plus simple est\n de sauvegarder le premier calcul, de decrire le 'nouveau' probleme sans la\n breche et de surcharger la table des inconnues par celle de l'ancien calcul.\n\n  1/ On recupere la table rxt.'TIC' du premier calcul\n     'OPTI' 'REST' 'MONFIC.sauv' ; 'REST' ;\n     tic = rxt . 'TIC' ;\n  2/ On recupere eventuellemnt le maillage\n     opti rest 'MONMAIL.sauv';\n     rest ;\n  3/ On decrit entierement le nouveau probleme\n     rxt = 'TABL' ;\n     rxt . 'vtf' =  mon maillage ;\n     rxt . ... etc\n  4/ On initialise avec la table tic precedente\n     rxt . 'TIC' = tic ;\n\n\n  B. Taille du fichier de sauvegarde\n  ----------------------------------\n\n  Il est possible de reduire la taille du fichier de sauvegarde obtenu\n par l'op\u00e9rateur 'SAUV' en detruisant les matrices (voir rxt . 'DETMAT').\n  \n5. Resultats du calcul \n====================== \n \n  \n5.1 Table rxt.'TIC' \n------------------- \n  La table TIC contient en particulier :\n  - des listes temporelles (LT) 0D (champs moyens) qui permettent de tracer des\n evolutions lorsqu'elles sont associees a la liste des temps de calcul stockee\n a l'indice 'LTPS' de TIC.  \n  - des champs multi-D (CHPO) calcules au dernier temps calcule.\n\n Pour chaque indice de la table, nous indiquons le type de l'indice, son nom\n ainsi que le type du contenu de l'indice.\n\n\n  A. Suivi temporel 0D\n  --------------------\n\n Indice          Objet\n Type & Valeur   Type       Commentaires\n\n MOT    Tps      FLOTTANT : temps physique\n MOT    NUPADT   ENTIER   : rang du pas de temps Tps\n MOT    DT       FLOTTANT : pas de temps courant\n\n MOT    LTPS     LISTREEL : LT, liste des temps calcules\n\n MOT    LMAXU    LISTREEL : LT, module max de la vitesse (m/s)\n MOT    Rhomn    LISTREEL : LT, densite du melange (kg/m3)\n MOT    Rhomv    LISTREEL : LT, densite de vapeur dans le melange (kg/m3)\n MOT    Rhom?    LISTREEL : LT, densite de ? dans le melange (kg/m3)\n avec '?'='air','he','h2','o2','n2','co','co2'\n\n MOT    PT       LISTREEL : LT, pression thermodynamique\n MOT    Tfm      LISTREEL : LT, temperature moyenne du melange (oC)\n MOT    Remn     LISTREEL : LT, energie interne specifique melange (J/m3)\n\n MOT    Econv    LISTREEL : LT, energie extraite par convection (J/m3)\n MOT    Econd    LISTREEL : LT, energie extraite par condensation (J/m3)\n MOT    Hcond    LISTREEL : LT, enthalpie extraite par condensation (J/m3)\n\n MOT    Easpe    LISTREEL : LT, energie extraite par l'aspersion (J/m3)\n MOT    Haspe    LISTREEL : LT, enthalpie extraite par l'aspersion (J/m3)\n MOT    Qaspe    LISTREEL : LT, debit aspersion  (kg/s)\n\n MOT    Rgpm     LISTREEL : LT, constante gaz parfaits melange (J/kg/K)\n MOT    Cvm      LISTREEL : LT, capacite calorifique a volume cst (J/kg/K)\n MOT    Cpm      LISTREEL : LT, capacite calorifique a p cst (J/kg/K)\n MOT    Gamm     LISTREEL : LT, rapport Cpm/Cvm\n\n MOT    Minj     LISTREEL : LT masse injectee  (kg)\n MOT    Mrest    LISTREEL : LT masse restante  (kg)\n\n MOT    Mcond    LISTREEL : LT masse de vapeur condensee (total) (kg)\n MOT    Mcondw   LISTREEL : LT masse de vapeur condensee (THERMP) (kg)\n MOT    Mcond0   LISTREEL : LT masse de vapeur condensee (ECHANP) (kg)\n MOT    Mcond1i  LISTREEL : LT masse de vapeur condensee (TIMP) (kg)\n\n MOT    Qc       LISTREEL : LT, Debit de vapeur condensee (total) (kg/s)\n MOT    Qcw      LISTREEL : LT, Debit de vapeur condensee (THERMP) (kg/s)\n MOT    Qc0      LISTREEL : LT, Debit de vapeur condensee (ECHANP) (kg/s)\n MOT    Qc1i     LISTREEL : LT, Debit de vapeur condensee (TIMP) (kg/s)\n\n MOT    mdTf     LISTREEL : LT, Correction locale sur TF (min) (oC)\n MOT    MdTf     LISTREEL : LT, Correction locale sur TF (max) (oC)\n MOT    Mdr?     LISTREEL : LT, Correction de masse pour l'espece ? (kg)\n avec '?'='vap','air','he','h2','o2','n2','co','co2'\n\n\n *--- Parois a temperature imposee (TIMP) ---*\n\n MOT    TIMP     TABLE : informations relatives a TIMP\n\n TIMP . nomi     TABLE, data de la paroi nomi\n MOT    Ltbpi    LISTREEL : LT, temperature de la paroi nomi (oC)\n\n *--- Breches (Breches) ---*\n\n MOT    Breches   TABLE : informations relatives aux breches\n\n Breches . nomi  TABLE, data de la breche nomi\n MOT    guj      LISTREEL : LT, vitesse a l'injection (m/s)\n MOT    Qj       LISTREEL : LT, debit d'injection (kg/s)\n MOT    Tinj     LISTREEL : LT, temperature d'injection (kg/s)\n MOT    Hj       LISTREEL : LT, enthalpie a l'injection (J/kg)\n MOT    Ej       LISTREEL : LT, energie a l'injection (J/kg)\n MOT    Ksi      LISTREEL : LT, partition liquide/vapeur (kg/s)\n MOT    Qlj      LISTREEL : LT, debit liquide a l'injection (kg/s)\n MOT    Hlj      LISTREEL : LT, enthalpie liquide a l'injection (J/kg)\n\n Usage : rxt . 'Breches' . nomi . 'Tinj' contient la LT de la\n temperature imposee a la breche nomi. Les temps  associes sont\n ceux de rxt . 'TIC' . 'LTPS'\n\n *--- RECOMBINEUR ---*\n\n MOT    RECOMB   TABLE    : informations issues des PARs\n\n RECOMB . i      TABLE, data du ieme PAR\n MOT    DEB      LISTREEL : LT, debit (kg/s)\n MOT    Uin      LISTREEL : LT, vitesse a l'entree (m/s)\n MOT    Uout     LISTREEL : LT, vitesse a la sortie (m/s)\n MOT    Tin      LISTREEL : LT, temperature a l'entree (oC)\n MOT    Tout     LISTREEL : LT, temperature a la sortie (oC)\n MOT    Tpla     LISTREEL : LT, temperature des plaques (oC)\n MOT    EFF      LISTREEL : LT, efficacite du recombineur \n MOT    Hin      LISTREEL : LT, enthalpie a l'entree (J/kg)\n MOT    Hout     LISTREEL : LT, enthalpie a la sortie (J/kg)\n MOT    R?E      LISTREEL : LT, densite de l'espece ? a l'entree (kg/m3)\n MOT    R?S      LISTREEL : LT, densite de l'espece ? a la sortie (kg/m3)\n MOT    Y?E      LISTREEL : LT, fraction massique de l'espece ? a l'entree\n MOT    Y?S      LISTREEL : LT, fraction massique de l'espece ? a la sortie\n avec '?'='H2O','HE','H2','O2','N2','CO','CO2'.\n\n Usage : rxt . 'RECOMB' . 2 . 'DEB' contient la LT des debits traversant le\n deuxieme recombineur. Les temps associes sont ceux de rxt . 'TIC' . 'LTPS'\n\n\n  B. Grandeurs multi-D\n  --------------------\n\n Indice         Objet\n Type & Valeur  Type       Commentaires\n\n MOT    UN      CHPOINT  : vitesse au pas de temps courant (m/s)\n MOT    UNM     CHPOINT  : vitesse au pas de temps precedent (m/s)\n MOT    PRES    CHPOINT  : pression (Pa)\n MOT    TF      CHPOINT  : temperature au pas courant (oC)\n MOT    TFNM    CHPOINT  : temperature au pas precedent (oC)\n MOT    TP      CHPOINT  : temperature paroi au pas courant (oC)\n MOT    TPNM    CHPOINT  : temperature paroi au pas precedent (oC)\n MOT    RHO     CHPOINT  : densite au pas courant (kg/m3)\n MOT    RHONM   CHPOINT  : densite au pas precedent (kg/m3)\n MOT    RVP     CHPOINT  : densite de vapeur (kg)\n MOT    YVAP    CHPOINT  : Fraction massique de vapeur\n\n MOT    R?      CHPOINT  : densite de ? (kg)\n MOT    Y?      CHPOINT  : FLOTTANT si l'espece est absente\n avec ?='AIR','HE','H2','O2','N2','CO','CO2'\n\n MOT    Mu      CHPOINT  : viscosite dynamique du melange (kg/m/s)\n MOT    NU      CHPOINT  : viscosite cinematique du melange (m2/s)\n MOT    NUEFF   CHPOINT  : viscosite cinematique effective (m2/s)\n\n MOT    KHW     CHPOINT  : coefficient d'echange (convectif) (THERMP)\n MOT    KH0     CHPOINT  : coefficient d'echange (convectif) (ECHANP)\n MOT    KH1i    CHPOINT  : coefficient d'echange (convectif) (TIMP)\n\n\n *--- Aspersion ---*\n\n MOT    VN      CHPOINT  : vitesse de la phase dispersee (m/s)\n MOT    TD      CHPOINT  : temperature de la phase dispersee (oC)\n MOT    XD      CHPOINT  : Fraction volumique de la phase dispersee \n MOT    DD      CHPOINT  : Diametre de la phase dispersee (m)\n\n\n  \n5.2 Table rxt.'GEO' \n------------------- \n  La table GEO contient les MMODEL NAVIER-STOKES des modelisations\n choisies ainsi que les maillages associes.\n\n Indice          Objet\n Type & Valeur   Type       Commentaires\n\n MOT    epsi     FLOTTANT : tolerance sur les maillages\n MOT    $vtf     MMODEL   : modele du domaine fluide\n MOT    $menvf   MMODEL   : modele pour la frontiere fluide \n MOT    $axe     MMODEL   : axe ou plan de symetrie\n MOT    $vtp     MMODEL   : paroi thermique\n MOT    $mtp1i   MMODEL   : paroi temperature imposee (TIMP)\n MOT    $mtp0    MMODEL   : paroi temperature constante (ECHANP)\n MOT    Pimp     MAILLAGE : POI1 ou la pression est imposee.",
  },
  {
    name: "ENER",
    url: "ENER",
    documentation:
      "$$$$ ENER     NOTICE  CHAT      11/09/12    21:16:02     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ENER                           Voir aussi :\n    --------------  \n      CHAM3  =  ENER  MOD1 CHAM1  CHAM2  ;\n\n\n    Objet :\n    _______\n\n    L'operateur ENER calcule le produit tensoriel contracte d'un champ\nde contraintes avec un champ de deformations .\n    Le resultat est un champ scalaire qui represente une densite\nd'energie.\n\n\n      Commentaire :\n      _____________\n\n\n       MOD1  :  objet modele (type MMODEL)\n\n       CHAM1 :  objet de type MCHAML de sous-type CONTRAINTES ou\n                DEFORMATIONS\n\n       CHAM2 :  objet de type MCHAML de sous-type DEFORMATIONS ou\n                CONTRAINTES\n\n       CHAM3 :  objet de type MCHAML de sous-type SCALAIRE",
  },
  {
    name: "ENERMODE",
    url: "ENERMODE",
    documentation:
      "$$$$ ENERMODE NOTICE  CHAT      11/09/12    21:16:02     7124           \n                                             DATE     11/09/12\n\n\n  Procedure ENERMODE                       Voir aussi :\n    -------------------  \n    ENERMODE TBAS TRESD (TINIT) (LOG1);\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de tracer les evolutions temporelles du travail \ndes forces exterieures, des forces interieures et des forces d'inertie,\nainsi que l'evolution temporelle du bilan energetique pour un calcul \nexplicite effectue sur base modale avec l'operateur DYNE. Il est \nnecessaire d'avoir demande la sortie du 'TRAVAIL_EXTERIEUR' et du\n'TRAVAIL_INTERIEUR' dans DYNE.\n\n\n    Commentaire :\n    _____________\n\n    TBAS  : table de soustype 'BASE_MODALE' ou 'ENSEMBLE_DE_BASES'\n    TRESD : table resultat de l'operateur DYNE ou table indicee de 1 a N\n            contenant N tables resultats de l'operateur DYNE\n    TINIT : table de conditions initiales de l'operateur DYNE (facultatif)\n    LOG1  : logique (facultatif). Si il est vrai les evolutions sont\n            tracees pour chaque mode. Dans le cas contraire seulement \n            les evolutions correspondantes a la somme de la contribution \n            de tous les modes sont tracees.",
  },
  {
    name: "ENLE",
    url: "ENLE",
    documentation:
      "$$$$ ENLE     NOTICE  FANDEUR   17/09/13    21:15:02     9538           \n                                             DATE     17/09/13\n\n    Operateur ENLEVER                        Voir aussi : INSE REMP\n    -----------------                                     OTER  OUBL  \n              OBJET2 = ENLEVER OBJET1 (MOT_CLE) INDIC1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur ENLEVER cree OBJET2 en enlevant le ou les elements\n    d'indice(s) INDIC1 dans l'objet OBJET1.\n\n\n    Operations possibles :\n    ______________________\n\n    ___________________________________________________________________ \n   +----------------+----------------+----------------+----------------+\n   |    OBJET1      |    MOT_CLE     |    INDIC1      |    OBJET2      |\n   |________________|________________|________________|________________|\n   +----------------+----------------+----------------+----------------+\n   |    LISTREEL    |     AUCUN      |    ENTIER      |    LISTREEL    |\n   |    LISTREEL    |     AUCUN      |    LISTENTI    |    LISTREEL    |\n   +----------------+----------------+----------------+----------------+\n   |    LISTENTI    |     AUCUN      |    ENTIER      |    LISTENTI    |\n   |    LISTENTI    |     AUCUN      |    LISTENTI    |    LISTENTI    |\n   +----------------+----------------+----------------+----------------+\n   |    LISTMOTS    |     AUCUN      |    ENTIER      |    LISTMOTS    |\n   |    LISTMOTS    |     AUCUN      |    LISTENTI    |    LISTMOTS    |\n   +----------------+----------------+----------------+----------------+\n   |    LISTCHPO    |     AUCUN      |    ENTIER      |    LISTCHPO    |\n   |    LISTCHPO    |     AUCUN      |    LISTENTI    |    LISTCHPO    |\n   +----------------+----------------+----------------+----------------+\n   |    CHPOINT     |     AUCUN      |    MOT         |    CHPOINT     |\n   |    CHPOINT     |     AUCUN      |    LISTMOTS    |    CHPOINT     |\n   +----------------+----------------+----------------+----------------+\n   |    TABLE       |     AUCUN      |  (quelconque)  |    TABLE       |\n   +----------------+----------------+----------------+----------------+\n   |    CHARGEME    |     AUCUN      |    MOT         |    CHARGEMENT  |\n   +----------------+----------------+----------------+----------------+\n   |    MMODEL      |     'FORM'     |    MOT         |    MMODEL      |\n   |    MMODEL      |     'COMP'     |    MOT         |    MMODEL      |\n   +----------------+----------------+----------------+----------------+\n\n\n    Remarques :\n    ___________\n\n    Dans le cas ou OBJET1 est une liste (LISTENTI, LISTREEL, LISTMOTS,\n    LISTCHPO), les indices contenus dans INDIC1 correspondent aux\n    positions des elements de OBJET2 avant toute suppression. Si un\n    nombre est present plusieurs fois dans la liste INDIC1, l'element\n    correspondant de OBJET1 ne sera donc elimine qu'une seule fois.\n    Attention a bien respecter l'ordre des operandes si deux LISTENTI\n    sont fournis.\n\n    Dans le cas ou OBJET1 est un objet de type CHPOINT, INDIC1 (types\n    MOT ou LISTMOTS) contient des noms de composantes.\n\n    Dans le cas d'une TABLE, il faut veiller a respecter l'ordre des\n    operandes (OBJET1 puis INDIC1).\n\n    Dans le cas d'un CHARGEMENT, INDIC1 (type MOT) correspond au type\n    du chargement a enlever.\n\n    Dans le cas ou OBJET1 est un MMODEL, un mot cle est attendu.\n    MOT_CLE doit etre\n      FORM : on enleve du MMODEL les regions pour lesquelles la\n             formulation est celle indiquee par INDIC1.\n    OR\n      COMP -> on enleve du MMODEL les regions pour lesquelles le\n              comportement est celui indique par INDIC1.\n    Si INDIC1 ne correspond a aucune formulation ou comportement ou\n    dans le cas d'un MMODEL vide, OBJET2 = OBJET1.\n\n$$$$\n\n ",
  },
  {
    name: "ENRICHIS",
    url: "ENRICHIS",
    documentation:
      "$$$$ ENRICHIS NOTICE  MB234859  17/10/02    21:15:10     9577           \n                                             DATE     17/10/02\n\n    Procedure ENRICHIS                       Voir aussi : RECOMPOS\n    ------------------  \n    EVOL1 = ENRICHIS EVOL2 ENTI1;\n\n\n    objet :\n    _______\n\n    Permet la generation d'un signal EVOL1 (comportant N courbes) a\n    partir d'un signal EVOL2 (comportant N courbes) sur une grille\n    2**ENTI1 fois plus riche, sans modifier son contenu en frequence\n    (au sens d'une transformee en ondelette). On utilise la procedure\n    RECOMPOS.",
  },
  {
    name: "ENSE",
    url: "ENSE",
    documentation:
      "$$$$ ENSE     NOTICE  CHAT      11/09/12    21:16:03     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ENSEMBLE                        Voir aussi :\n   ------------------  \n   SOL1 =  ENSEMBLE  RIG1 ;\n\n\n   Objet :\n   _______\n\n   L'operateur ENSEMBLE cree un objet SOL1 de type SOLUTION, contenant\nles modes d'ensembles associes a la matrice de rigidite RIG1 (type\nRIGIDITE)\n\n   Exemple :\n   _________\n\n   Soit RRR la RIGIDITE d'une structure avec ses blocages, et MAILLA\nle maillage; supposons que la structure ait deux modes rigides,\nil est possible de les visualiser par la sequence suivante :\n\n\n             MMM   = ENSE  RRR;\n             DE1   = TIRER MMM DEPL  RANG  1;\n             DE2   = TIRER MMM DEPL  RANG 2;\n             DEFO1 = DEFORME   DE1 MAILLA  2.5  ROUGE;\n             DEFO2 = DEFORME   DE2 MAILLA  4.5  VERT ;\n             TRAC ( DEFO1 ET DEFO2 )  ;",
  },
  {
    name: "ENTI",
    url: "ENTI",
    documentation:
      "$$$$ ENTI     NOTICE  JC220346  14/12/19    21:15:04     8332           \n                                             DATE     14/12/19\n\n    Operateur ENTIER                         Voir aussi : FLOT\n    ----------------  \n                 OBJ2 = ENTI (|'TRONCATURE'|) OBJ1 ;\n                              |'INFERIEUR' |\n                              |'SUPERIEUR' |\n                              |'PROCHE'    |\n\n\n    Objet :\n    _______\n\n    L'operateur ENTIER convertit un objet OBJ1 a valeurs reelles vers\n    un objet OBJ2 a valeurs entieres.\n    \n    Les conversions possibles sont :    FLOTTANT  =>  ENTIER\n                                        LISTREEL  =>  LISTENTI\n                                        CHPOINT   =>  CHPOINT\n                                        MOT       =>  ENTIER\n                                        LISTMOTS  =>  LISTENTI\n                                        \n    Un mot-cle peut preciser la maniere dont on desire effectuer la \n    conversion :\n    \n    a) TRONCATURE (par defaut) : fonction troncature (\"fix\")\n       => ENTI1 correspond a la troncature de FLOT1, c'est-a-dire les\n          chiffres places avant le separateur decimal\n    \n    b) INFERIEUR : fonction plancher (\"floor\")\n       => ENTI1 est le plus grand entier inferieur ou egal a FLOT1\n    \n    c) SUPERIEUR : fonction plafond (\"ceiling\")\n       => ENTI1 est le plus petit entier superieur ou egal a FLOT1\n    \n    d) PROCHE : fonction arrondi (\"round\")\n       => ENTI1 est l'entier le plus proche de FLOT1\n       \n       \n    Remarques :\n    ___________\n\n    1) La fonction \"partie entiere\", d'un point de vue mathematique,\n       correspond a l'option 'INFERIEUR'. La \"partie fractionnaire\"\n       d'un nombre FLOT1, toujours d'un point de vue mathematique, est\n       par consequent egale a FLOT1 - (ENTI 'INFERIEUR' FLOT1)\n    \n    2) Les operations de troncature ci-dessous sont equivalentes :\n         ENTI1 = ENTI 'TRONCATURE' FLOT1 ;\n         ENTI1 = (SIGN FLOT1)*(ENTI 'INFERIEUR' (ABS FLOT1)) ;\n    \n    3) Les operations d'arrondi ci-dessous sont equivalentes :\n         ENTI2 = ENTI 'PROCHE' FLOT1 ;\n         ENTI2 = (SIGN FLOT1)*(ENTI 'INFERIEUR' ((ABS FLOT1) + 0.5)) ;\n    \n    4) Pour l'option 'PROCHE', le cas ou la partie fractionnaire de\n       ENTI1 vaut 0.5 est indetermine. Le resultat est alors l'entier\n       de meme signe et de valeur absolue directement superieure a\n       FLOT1, autrement dit :\n       - le plus petit entier superieur a FLOT1 si FLOT1 > 0\n       - le plus grand entier inferieur a FLOT1 si FLOT1 < 0\n    \n    5) Lors de la conversion d'un objet CHPOINT, toutes les composantes\n       sont prises en compte. Apres l'operation, ses valeurs sont des\n       reels (REAL, au sens informatique) dont la partie fractionnaire\n       est nulle.\n    \n    6) Pour que la conversion depuis un objet de type MOT ou LISTMOTS\n       soit possible, les mots doivent contenir des nombres (entiers\n       ou reels) sous un format standard. La conversion suit alors les\n       regles enoncees ci-dessus.\n        \n       \n    Exemples :\n    __________\n    \n               | TRONCATURE   INFERIEUR    SUPERIEUR      PROCHE   |\n       --------+------------+------------+------------+------------+\n            8  |      8            8            8            8     |\n       --------+------------+------------+------------+------------+\n          0.5  |      0            0            1            1     |\n       --------+------------+------------+------------+------------+\n         -3.5  |     -3           -4           -3           -4     |\n       --------+------------+------------+------------+------------+\n         5.21  |      5            5            6            5     |\n       --------+------------+------------+------------+------------+\n         -4.9  |     -4           -5           -4           -5     |\n       --------+------------+------------+------------+------------+\n        -2.05  |     -2           -3           -2           -2     |\n       --------+------------+------------+------------+------------+\n       \n    => voir le cas-test 'conversion_enti.dgibi'\n       (il contient notamment une representation graphique des quatre\n        fonctions disponibles)\n       ",
  },
  {
    name: "ENVE",
    url: "ENVE",
    documentation:
      "$$$$ ENVE     NOTICE  GOUNAND   17/12/05    21:16:05     9645           \n                                             DATE     17/12/05\n                                             \n    Operateur ENVELOPPE                      Voir aussi : ORIE, INVE\n    -------------------  \n    Objet :\n    _______\n\n    L'operateur ENVELOPPE a deux fonctions differentes :\n\n    -----------------\n    | 1ere fonction |\n    -----------------\n\n    SURF1 = ENVELOPPE  VOLU1 ('ORIE') ('NOID') ;\n\n    Objet :\n    _______\n\n    L'operateur ENVELOPPE fabrique l'enveloppe SURF1 (type MAILLAGE)\n    du volume VOLU1 (type MAILLAGE), c'est-a-dire conventionnellement\n    l'ensemble des faces de ce volume qui n'appartiennent qu'a un\n    seul element.\n\n    En pr\u00e9sence du mot-cl\u00e9 'ORIE', les faces des elements sont orient\u00e9es\n    vers l'int\u00e9rieur du volume. Toutefois, pour obtenir le meme effet,\n    on conseille d'orienter prealablement le volume avec l'operateur\n    ORIE puis d'utiliser ENVE sans le mot-cle ORIE.\n\n    Remarque :\n    __________\n\n    En presence du mot cle NOID, si l'enveloppe est vide, \n    un maillage vide est cr\u00e9\u00e9. Sinon, il y a une erreur.\n\n\n    -----------------\n    | 2eme fonction |\n    -----------------\n\n    TAB1  =  ENVELOPPE  TAB2 ;\n\n    Objet :\n    _______\n\n    L'operateur ENVELOPPE fabrique le spectre enveloppe d'une serie\n    de spectres d'oscillateurs.\n\n    Commentaire :\n    ____________\n\n    TAB2  : objet de type TABLE contenant autant de tables que\n            de spectres d'oscillateurs. Ces tables sont indicees\n            par un numero de 1 a N.\n\n    La k-ieme table contient :\n\n    en indice 'SPECTRE'       : k-ieme spectre (type EVOLUTION).\n\n    en indice 'AMORTISSEMENT' : les amortissements pour chaque\n                                courbe du k-ieme spectre (type\n                                LISTREEL).\n\n\n    TAB1  : objet de type table contenant le spectre ENVELOPPE,\n            indicee comme suit :\n\n    TAB1.'SPECTRE'       : le spectre enveloppe (type EVOLUTION).\n\n    TAB1.'AMORTISSEMENT' : les amortissements pour chaque courbe\n                           du spectre (type LISTREEL).",
  },
  {
    name: "EPAIFUT",
    url: "EPAIFUT",
    documentation:
      "$$$$ EPAIFUT  NOTICE  CHAT      11/09/12    21:16:03     7124           \n                                             DATE     11/09/12\n\n    Procedure EPAIFUT                        Voir aussi : PREC    \n    -----------------                                     PHASAGE  \n                                                          TENSION  \n                                                          PFLUAGE  \n                                                          RETRAIT   \n      CHAM2 = EPAIFUT  MAIL1 MAIL2 MAIL3;\n\n\n\n    Objet :\n    _______\n\n      Cette procedure permet de calculer le rayon de sechage du beton\n      a prendre en compte dans le BPEL ou l'Eurocode 2 pour les \n      calculs de retrait ou de fluage differes.  La structure en beton\n      doit etre maillee en element volumiques et on doit fournir les \n      surfaces internes et externes.\n    \n\n         MAIL1  : maillage volumique du beton.\n\n         MAIL2  : maillage de la surface interne \n\n         MAIL3  : maillage de la surface externe  \n       ",
  },
  {
    name: "EPSI",
    url: "EPSI",
    documentation:
      "$$$$ EPSI     NOTICE  FD218221  20/12/17    21:15:17     10820          \n                                             DATE     20/12/17\n\n    Operateur EPSI                           Voir aussi : RTEN CALP\n    --------------                                        ELAS    HOOK  \n                                                          GRAD    POLA  \n    1)   EPS1 = EPSI  | ('LINE') |  MODL1 DEP1 ( CAR1 ) (HOO1) ('NOER');\n                      |  'QUAD'  |\n                      |  'TRUE'  |\n                      |  'JAUM'  |\n                      |  'UTIL'  |\n                                                           \n    2)   EPS1 = EPSI  MODL1  GRAD1  | ('GEOM') | ;\n                                    |  'DEPL'  |\n\n\n    Objet :\n    _______\n    \n    Pour la syntaxe 1), le calcul des deformations se fait, \nsuivant la methode precisee par le mot cle.\n    Par defaut, seuls les termes lineaires sont pris en compte.\n \n    La syntaxe 2) permet de calculer un champ de deformations\nen prenant le logarithme naturel d'un champ de gradient symetrique\n( EPS = 1/2.ln(Ftrans.F) ).\n    La seconde syntaxe ne fonctionne actuellement que pour la\nformulation massive. Le champ de gradient F est :\n- soit donne directement : F = GRAD1 (option 'GEOM', prise par defaut),\n- soit determine a partir du gradient du champ de deplacement :\nF = I + GRAD1 (option 'DEPL').\n\n    Pour certains elements (poutres, tuyaux, coques minces avec\nou sans cisaillement transverse) il s'agit de deformations\ngeneralisees, c'est-a-dire de deformations membranaires et de\nvariations de courbure. Pour les elements joints, il s'agit de\ndeplacements relatifs. Les deformations sont calculees dans le\nrepere general pour les elements massifs et dans le repere local\npour les elements coques, plaques et poutres.\n\n\n    Commentaire :\n    _____________\n\n      'LINE', 'QUAD', 'TRUE', 'JAUM' ou 'UTIL' :  \n               mot-cle specifiant l'hypothese de calcul des deformations \n               (lineaire par defaut).\n\n      MODL1  : objet modele (type MMODEL).\n\n      DEP1   : champ de deplacements (type CHPOINT).\n\n      CAR1   : champ de caracteristiques geometriques (type MCHAML,\n               sous-type CARACTERISTIQUES) necessaire pour certains\n               elements (poutres ,coques ...).\n               Il contient egalement les caracteristiques materielles\n               pour l'element coque DST dans l'absence du champ de\n               matrices de Hooke.\n\n      HOO1   : champ de matrices de Hooke (type MCHAML, sous-type\n               MATRICE DE HOOKE) necessaire pour l'element coque DST \n               si CAR1 ne contient pas les caracteristiques\n               materielles\n\n      'NOER' : mot-cle indiquant de ne pas faire d'erreur en cas de\n               changement de signe du jacobien. Dans ce cas, en \n               sortie EPS1 contient un entier non nul.\n\n      GRAD1  : champ de gradient, symetrique (type MCHAML, sous-type\n               GRADIENT).\n\n      'GEOM' : mot-cle indiquant que le champ de gradient GRAD1 est\n               associe a une transformation geometrique.\n      'DEPL' : mot-cle indiquant que le champ de gradient GRAD1 est\n               associe a un champ de deplacement.\n\n      EPS1   : champ de deformations resultat (type MCHAML, sous-type\n               DEFORMATIONS).\n\n    Remarques :\n    ___________\n\n1.  Dans le cas des coques excentrees, les deformations sont calculees\n    au niveau de la surface moyenne excentree\n\n2.  Dans le cas 2D contraintes planes, la deformation selon la direction\n    perpendiculaire au plan n'est pas calculable. On la met egale a 0.\n\n3. Le calcul des deformations du second ordre est implemente pour les\n   elements suivants :\n      - massifs : tous\n      - lineiques : BARR POUT TUYA TIMO\n      - plaques et coques : COQ2 DKT\n\n\n --------------------------------------------------------------------\n |                    Deformations calculees                        |\n |            \u00c9lements finis en formulation MECANIQUE               |\n --------------------------------------------------------------------\n | Element |   Option   |   Noms des      | Repere de |   Points    |\n |  fini   |  de calcul |  deformations   |   calcul  |   Supports  |\n --------------------------------------------------------------------\n |  POI1   | PLAN GENE  |  EPSS           |  local    |  noeud      |\n --------------------------------------------------------------------\n |  CERC   |   AXIS     |  EPSS           |  local    |  noeud      |\n |         |   FOUR     |                 |           |             |\n --------------------------------------------------------------------\n |  BARR   | PLAN CONT  |  EPSS           |  local    |  centre de  |\n |         | PLAN DEFO  |                 |           |  gravite    |\n |         | TRID       |                 |           |             |\n --------------------------------------------------------------------\n |  COQ2   | PLAN CONT  | EPSS,EPZZ,RTSS, |  local    |  Points de  |\n |         | PLAN DEFO  | RTZZ            |           |    Gauss    |\n |         | AXIS       | EPSS,EPTT,RTSS, |           |             |\n |         |            | RTTT            |           |             |\n |         | FOUR       | EPSS,EPTT,GAST, |           |             |\n |         |            | RTSS,RTTT,RTST  |           |             |\n --------------------------------------------------------------------\n |  POUT   | TRID       | EPS ,GXY ,GXZ , |  local    |  noeuds     |\n |  TUYA   |            | CX  ,CY  ,CZ    |           |             |\n --------------------------------------------------------------------\n |  TIMO   | TRID       | EPS ,GXY ,GXZ , |  local    |  centre de  |\n |         |            | CX  ,CY  ,CZ    |           |  gravite    |\n --------------------------------------------------------------------\n |  TUFI   | TRID       | EPS ,GXY ,GXZ , |  local    |  centre de  |\n |         |            | CX  ,CY  ,CZ    |           |  gravite    |\n |         |            | EPS7,EPS8       |           |             |\n --------------------------------------------------------------------\n |  TRI3   | PLAN CONT  | EPXX,EPYY,EPZZ, |  global   |  Points de  |\n |  QUA4   | PLAN DEFO  | GAXY            |           |    Gauss    |\n |  TRI6   | AXIS       | EPRR,EPZZ,EPTT, |           |             |\n |  QUA8   |            | GARZ            |           |             |\n |         | FOUR       | EPRR,EPZZ,EPTT, |           |             |\n |         |            | GARZ,GART,GAZT  |           |             |\n --------------------------------------------------------------------\n |  M1D2   | UNID PLAN  | EPXX,EPYY,EPZZ  |  global   |  Points de  |\n |  M1D3   | UNID AXIS  | EPRR,EPZZ,EPTT  |           |    Gauss    |\n |         | UNID SPHE  | EPRR,EPZZ,EPTT  |           |             |\n --------------------------------------------------------------------\n |  JOI2   | PLAN CONT  | DRSN,DRN        |  local    |  Points de  |\n |  JOI3   | PLAN DEFO  |                 |           |    Gauss    |\n |         | AXIS       |                 |           |             |\n --------------------------------------------------------------------\n |  JOI4   | TRID       | DRS1,DRS2,DRN   |  local    |  Points de  |\n |         |            |                 |           |    Gauss    |\n --------------------------------------------------------------------\n |  COQ3   | TRID       | EPSS,EPTT,GAST, |  local    |  centre de  |\n |         |            | RTSS,RTTT,RTST  |           |  gravite    |\n --------------------------------------------------------------------\n |  DKT    | TRID       | EPSS,EPTT,GAST, |  local    |  Points de  |\n |         |            | RTSS,RTTT,RTST  |           |   Hammer    |\n --------------------------------------------------------------------\n |  DST    | TRID       | EPSS,EPTT,GAST, |  local    |  Points de  |\n |         |            | RTSS,RTTT,RTST, |           |   Hammer    |\n |         |            | GASN,GATN       |           |             |\n --------------------------------------------------------------------\n |  COQ4   | TRID       | EPSS,EPTT,GAST, |  local    |  Points de  |\n |         |            | RTSS,RTTT,RTST, |           |  Gauss et   |\n |         |            | GASN,GATN       |           |  centre de  |\n |         |            |                 |           |  gravite    |\n --------------------------------------------------------------------\n |  COQ6   | TRID       | EPSS,EPTT,GAST, |  local    |  Points de  |\n |  COQ8   |            | GASN,GATN       |           |    Gauss    |\n --------------------------------------------------------------------\n |  CUB8   | TRID       | EPXX,EPYY,EPZZ, |  global   |  Points de  |\n |  TET4   |            | GAXY,GAXZ,GAYZ  |           |    Gauss    |\n |  PRI6   |            |                 |           |             |\n |  PYR6   |            |                 |           |             |\n |  CU20   |            |                 |           |             |\n |  TE10   |            |                 |           |             |\n |  PR15   |            |                 |           |             |\n --------------------------------------------------------------------\n |  LISP   | TRID       | EPZZ,GAXZ,GAYZ, |  local    |  Points de  |\n |  LISM   |            | RTXX,RTZZ,DJP   |           |    Gauss    |\n --------------------------------------------------------------------",
  },
  {
    name: "EPTH",
    url: "EPTH",
    documentation:
      "$$$$ EPTH     NOTICE  JB251061  20/11/12    21:15:07     10777          \n                                             DATE     20/11/12\n                                             \n    Operateur EPTH                           Voir aussi : THET\n    ---------------  \n      EPS1 = EPTH  MODL1 MAT1 CH1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur EPTH calcule les deformations d'origine thermique, \n    a savoir :\n\n                   EPSTHER = ALPHA * (T - TALP)\n\n    ou ALPHA est le coefficient de dilatation thermique secant entre\n        la temperature de reference TALP et la temperature actuelle T\n\n      Commentaire :\n      _____________\n\n      MODL1 : Objet modele (type MMODEL)\n\n      MAT1  : Champ de caracteristiques materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES )\n\n      CH1   : champ de temperature (type MCHAML, sous-type TEMPERATURES\n              ou type CHPOINT). Pour les elements joints, seuls sont\n              autorises les champs de temperature de type MCHAML. Le\n              type CHPOINT est interdit pour les joints.\n\n      EPS1  : champ de deformations (type MCHAML, sous-type CONTRAINTES)\n\n\n    Remarque :\n    __________\n\n\n    EPS1 est le champ de deformations entre les temperatures TALP et T.\nPour obtenir le champ de deformations total entre TREF et T, il faut donc\nretrancher le champ de deformations entre TALP et TREF, obtenu en appelant\nEPTH avec le champ de temperature TREF et le champ de caracteristiques\nmaterielles a TREF.\n\n    Remarque :\n    __________\n\n\n    Pour les elements    coques ,le champ de temperature doit avoir\ntrois composantes de noms : TINF ,T, et TSUP, designant respectivement\nla temperature en peau inferieure ,en surface moyenne et en peau\nsuperieure.\n\n    Pour les autres elements, le champ de temperature doit avoir une\ncomposante de nom : T.\n\n    Remarque :\n    ___________\n\n  Dans le cas des coques excentrees, les deformations thermiques sont\n calculees au niveau de la surface moyenne excentree",
  },
  {
    name: "EQEX",
    url: "EQEX",
    documentation:
      "$$$$ EQEX     NOTICE  GOUNAND   18/08/24    21:15:01     9892           \n                                             DATE     18/08/24\n\n     Operateur EQEX                          Voir aussi : NAVI EXEC\n     --------------  \n\n\n\n     Objet :\n     _______\n     \n     Cree une TABLE contenant les informations necessaires a la solution\n     solution explicite ou implicite d'une ou plusieurs E.D.P. effectuee\n     par la procedure EXEC.\n     \n     Cette table est a completer par une table 'INCO' contenant les\n     inconnues.\n     \n     On peut aussi ajouter des tables 'HIST' et 'INCO'.'HIST' pour\n     sauvegarder des historiques.\n\n     \n     \n     Syntaxe :\n     _________\n\n\n     RV = EQEX (RV)  -->--+\n                          |\n     +------<------<------+------<------<------<------<------+\n     |                                                       |\n     v   (OPTIONS APPLIQUEES AUX OPERATEURS PLACES APRES)    |\n     |                                                       ^\n     +---> ('OPTI' opt1 opt2 opt3 ...)  -->--+               |\n                                             |               |\n          +------<------<------<------<------+               |\n          |                                                  ^\n          v    (OPERATEUR QUI SERA APPELE A CHAQUE P.D.T)    |\n          |                                                  |\n          +---> 'ZONE' nomz 'OPER' nomo (arg1 arg2 ...) -->--+ \n          |                ('INCO' nom1 nom2 ...)            |\n          ^                                                  v\n          |                                                  |\n          +-------<------<------<------<------<------<-------+\n                                                             |\n                                                             |\n     +------<------<------<------<------<------<------<------+\n     |\n     v      (DEFINITION DES CONDITIONS AUX LIMITES)\n     |\n     +---> 'CLIM' inc1 comp1 mail1 val1 ...\n                        ... inc2 comp2 mail2 val2 ...   -->--+\n                                                             |\n                                                             |\n     +------<------<------<------<------<------<------<------+\n     |\n     +---> ('ITMA' itma) ('NITER' nite) --->---+   \n                                               |    (PARAMETRES\n     +------<------<------<------<------<------+     TEMPORELS DE\n     |                                               LA SIMULATION)\n     +---> ('ALFA' alfa) ('OMEGA' omeg) --->---+\n                                               |\n                                               |\n                                               v\n                                              \n                                   (autres directives parmi :\n                                       DUMP  FIDT NISTO\n                                       NOMVI TPSI TFINAL )\n\n\n     Directive DUMP\n     Cette directive est utile pour la mise au point du jeu de donnees\n     => on imprime le deroulement du decodage de EQEX\n     \n     \n     Directive ITMA\n     itma (ENTIER) : nombre maximum de pas de temps (defaut 1)\n     \n     \n     Directive ALFA\n     alfa (FLOTTANT) : tolerance (0. < alfa < 1.) sur le pas de temps\n                       (defaut 1.)\n     \n     \n     Directive FIDT\n     fidt (ENTIER) : frequence d'impression des pas de temps (defaut 20)\n     \n     \n     Directive NISTO\n     nisto (ENTIER) : frequence de sauvegarde de l'historique d'une\n     grandeur en un point dans la table RV.'HIST' (defaut 20)\n     \n     \n     Directive NOMVI\n     nomvi (MOT) : nom du champ de vitesse servant au calcul de la\n     pression pour l'algorithme semi-explicite (par defaut 'UN')\n     \n     \n     Directive TPSI\n     tpsi (flottant) : temps initial\n     \n     \n     Directive TFINAL\n     tfinal (flottant) : temps final (defaut 1.e30)\n     \n     \n     Directive NITER\n     niter (entier) : nombre d'iterations internes a un pas de temps\n     pour resoudre une non linearite (defaut 1)\n     \n     \n     Directive OMEGA\n     omega (flottant) : facteur de relaxation (0 < omega < 1) pour\n     resoudre une non linearite (defaut 1.)\n     \n     \n     Directive IMPR\n     impr (entier) : niveau global d'impression ecran (0 par defaut)\n     \n     \n     Directive OPTI\n     Elle sert a preciser les options de tous les operateurs places\n     dans les directives OPER situees apres\n     \n     LISTE DES OPTIONS\n     -------------+------+---------------------------------------------\n     Formulations | EFM1 | Elements finis sous integre + correction \n                  |      | (a la Gresho) disponible uniquement dans\n                  |      | l'algorithme semi explicite\n                  | EF   | Elements finis Galerkin ou Petrov-Galerkin\n                  | VF   | Volumes finis\n     -------------+------+--+------------------------------------------\n     Decentrement | CENTREE | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D  \n                  | SUPGDC  | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D  \n                  | SUPG    | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D  \n                  | SUPGH   | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D  \n                  | CNG     | uniquement EF      SEMI           2D/3D  \n                  | PSI     | uniquement operateur TSCA EFM1 EXPL 2D   \n                  | JOHNSON | uniquement operateur TSCA EFM1 EXPL 2D   \n                  | UPWIND  | uniquement VF EXPL 2D                    \n                  | GODUNOV | uniquement VF EXPL 2D                    \n                  | VANLEER | uniquement VF EXPL 2D                    \n                  | VLH     | uniquement VF EXPL 2D                    \n                  | HUSVL   | uniquement VF EXPL 2D                    \n                  | HUSVLH  | uniquement VF EXPL 2D                    \n                  | AUSM    | uniquement VF EXPL 2D                    \n                  |         |\n                  | CMD     | Coef. multiplicateur du decentrement     \n                  |         | uniquement pour SUPG,SUPGDC,SUPGH en EF  \n                  |         | Par defaut, la valeur est 0.2             \n     -------------+---------+----+-------------------------------------\n     Formulation  | IMPL         | implicite\n     temporelle   | EXPL         | explicite\n                  | SEMI beta    | semi implicite  (0. < beta < 1.)\n     (ne concerne | SEMI 0.5     | schema de Crank-Nicolson\n      que DFDT)   | SEMI 0.5 CNG | Crank-Nicolson generalise (Donea)\n                  | BDF2         | schema arriere en temps a 3 points\n                  |              | ordre 2 (inconditionellement stable)\n     -------------+---------+----+-------------------------------------\n     Formulation  | CONS    | formulation conservative\n     des termes   | NOCONS  | formulation non conservative\n     de transport | NODIV   | le terme de stabilisation 1/2 T Div U est\n                  |         | omis (non conservatif NOCONS seulement)\n     (ne concerne |         | \n      que KONV NS |         |\n      NSKE TSCA)  |         |  \n     -------------+---------+------------------------------------------\n     Formul. des  | MUVARI  | formulation en Laplacien Vecteur\n     contraintes  | FTAU    | formulation en contrainte visqueuse\n     visqueuses   | MUCONS  | les gradients de Viscosite sont negliges\n                  |         | sur l'element (defaut)\n     -------------+---------+-+----------------------------------------\n     Support des  | INCOP spg | spg est a choisir dans la liste :\n     inconnues    | INCOD spg |    SOMMET   FACE     CENTRE\n     primales ou  |           |    CENTREP1 CENTREP0 MSOMMET\n     duales       |           |\n     -------------+-----------+----------------------------------------    \n     Type Matrice | MMPLEINE  | matrice masse consistante\n     masse        | MMDIAGO   | matrice masse diagonale\n                  | MMPG      | matrice masse Petrov-Galerkin\n     -------------+-----------+----------------------------------------         \n     Modele de turbulence particulier RNG K-epsilon\n                  | RNG       | uniquement pour NSKE EFM1 EXPLICITE\n     -------------+-----------+----------------------------------------    \n     Formulation ALE pour l'operateur NS EFM1 EXPLICITE\n                  | ALE       |\n     -------------+-----------+----------------------------------------  \n     Formulation  | EULER     | mono-espece\n     IDEUL (VF    | EULERMS   | multi-especes\n     uniquement)  | EULERMST  | multi-especes \"thermally perfect\"\n     -------------+-----------+----------------------------------------  \n\n     \n     Directives ZONE et OPER\n     \n     nomz : Objet MMODEL (type 'NAVIER_STOKES') ou table DOMAINE \n            sur lequel va porter l'operateur\n            \n     nomo : Objet de type MOT donnant le nom de l'operateur de\n            discretisation (ou de la PROCEDURe) a executer.\n            A choisir dans la liste (nono exhaustive) ci-dessous :\n            FIMP FPU FROT LAPN TSCA NS NSKE ECHI DFDT KONV MDIA ...\n     \n     arg1 arg2 ... : arguments de l'operateur (voir la notice de\n                     l'operateur concerne)\n            Les arguments lus sont places dans la table associee a\n            l'operateur aux indices 'ARG1', 'ARG2', etc...\n            \n     nom1 nom2 ... : noms des indices dans la table des inconnues ou\n                     se trouveront les inconnues sur lesquelles\n                     l'operateur s'appuiera\n            Cette table est a creer independemment et a placer dans la\n            a l'indice 'INCO' de la table RV creee par EQEX\n            Exemple :\n     \n            RV.'INCO'=TABLE 'INCO' ;\n            RV.'INCO'.'UN'=KCHT $MA 'VECT' 'SOMMET' (0. 0.) (U1 ET U2) ;\n            RV.'INCO'.'TN'=KCHT $MA 'SCAL' 'SOMMET' 1. T2 ;\n     \n     \n     Directive CLIM\n     \n     Cette directive permet de preciser ou de surcharger les conditions\n     limites de type valeur imposee (Dirichlet) qui seront appliquees a\n     chacune des inconnues.\n     \n     inc1 inc2 ... : MOT designant une inconnue qui doit deja figurer \n                     dans une des listes nom1 nom2 ... et donc dans la\n                     table 'INCO'\n     \n     comp1 comp2 ... : MOT precisant sur quelle composante appliquer\n                       la condition limite, a choisir parmi :\n\n                       UIMP=inconnue vectorielle, composante suivant Ox\n                       VIMP=inconnue vectorielle, composante suivant Oy\n                       WIMP=inconnue vectorielle, composante suivant Oz\n                       TIMP=inconnue scalaire\n\n     mail1 mail2 ... : MAILLAGE d'application de la condition \u00e0 la\n                       limite\n\n     val1 val2 ... : valeurs attribuees, de type FLOTTANT ou CHPOINT\n     \n     \n                       \n     Commentaires :\n     ______________\n       \n     a) Si une table RV est specifiee derriere EQEX, elle sera completee\n        ou modifiee par les instuctions suivantes (ceci permet de \n        contourner la limitation GIBIANE sur la longueur d'une\n        instruction).\n     \n        \n     b) Pour chaque operateur (directive OPER) est creee une TABLE dont\n        le nom est celui de l'operateur prefixe par le numero d'ordre de\n        l'operateur. Cette table contient le nom de l'operateur, l'objet\n        MAILLAGE sur lequel il porte, les arguments qu'on lui associe\n        (indices 'ARG1', 'ARG2', etc...) et la liste des noms des \n        inconnues sur lequel il porte.\n        \n        C'est cette TABLE qui est passee en argument a l'operateur ou a\n        la procedure lors de son appel par EXEC. La TABLE RV y est\n        situee a l'indice 'EQEX'.\n     \n        \n     c) Un certain nombre de parametres generaux sont initialises\n        par EQEX :\n        \n           ITMA=1\n           FIDT=20  frequence d'impression des pas de temps\n           ALFA=1.  coefficient de tolerance sur le pas de temps \n                    (usuellement on peut prendre de 0.5 a 0.8)\n     \n                    \n     d) L'indice 'LISTOPER' de la table RV contient la liste des\n        operateurs appeles, dans l'ordre ou ils sont appeles.\n     \n        \n     e) POUR CREER DES HISTORIQUES :\n     \n        + EVOLUTION temporelle en un point d'une grandeur de RV.'INCO'\n          \n          Il faut rajouter dans RV une entree RV.'HIST' contenant une\n          TABLE construite par l'operateur KHIS (voir la notice de cet\n          operateur). La frequence de sauvegarde est definie grace a\n          la directive NISTO.\n          \n        + Stockage des objets CHPOINT contenus dans RV.'INCO' pour\n          differents pas de temps\n          \n          If faut creer une entree RV.'INCO'.'HIST' de type TABLE,\n          contenant pour chaque grandeur a sauvegarder un objet LISTCHPO\n          vide (operateurs SUIT ou VIDE) dont le nom est le meme que\n          celui qui a ete defini dans la table 'INCO'.\n          \n          Il est aussi possible de sauvegarder le temps en creant un\n          LISTREEL vide (operateurs PROG ou VIDE) a l'indice 'TPS' de\n          RV.'INCO'.'HIST'\n          \n          Le premier pas de sauvegarde est indique a l'indice 'IDEB' de\n          RV.'INCO'.'HIST' ; le dernier pas de temps est indique a\n          l'indice 'IFIN' ; enfin, la frequence de sauvegarde est donnee\n          par l'indice 'IPAS'.\n     \n          \n     f) Une entree RV.'METHINV' (type TABLE) est automatiquement creee\n        pour definir la methode de resolution de systeme qui sera\n        utilisee. Par defaut, une resolution directe (robuste mais\n        couteuse en memoire) de type Crout est utilisee. Il est possible\n        de specifier une methode iterative de type gradient conjugue, a\n        condition de bien SAVOIR ce que l'on fait.\n        \n        La syntaxe des entrees de la table RV.'METHINV' est explicitee\n        dans la notice de l'operateur KRES.\n        \n        En sortie, RV.'METHINV'.'CONVINV' contient l'historique (type \n        LISTREEL) de la norme du residu en fonction du nombre\n        d'iterations.  \n        \n        \n     g) A tout instant, le CHPOINT contenant les conditions limites\n        de type Dirichlet est stocke a l'indice RV.'CLIM'\n     ",
  },
  {
    name: "EQPR",
    url: "EQPR",
    documentation:
      "$$$$ EQPR     NOTICE  CHAT      11/09/12    21:16:04     7124           \n                                             DATE     11/09/12\n\n  Operateur EQPR                          Voir aussi :\n     --------------  \n\n\n\n    Objet : Cree une table contenant les informations necessaires a la\n            solution implicite de la pression dans l'algorithme\n            semi implicite.\n    La table cree par EQPR est a rajouter dans la table cree par EQEX\n    a l'indice 'PRESSION'.\n\n\n    Syntaxe :\n\n\n    RVP = EQPR NOMD\n\n         <'KTYPI' i> ---|\n                        |\n      |---------<-------|\n      |\n      |-> 'ZONE' nomz 'OPER' nomo  ---|\n      |                                      |\n      |----------------<---------------------|\n      |\n      |\n      V\n      ;\n\n\n\n NOMD  Table DOMAINE  domaine total sur lequel sont defini les\n       inconnues\n\n Directive ZONE\n --------------\n\n nomz : Table DOMAINE sur lequel va porter l'operateur. Cet objet\n        doit etre inclus dans nomd (Ceci n'est pas encore verifie).\n\n mot cle OPER\n nomo : objet de type mot, nom de l'operateur de discretisation a\n        executer. A choisir dans la liste ci-dessous.\n\n       PRESSION      (Div(U)=0.)\n       VNIMP         Vitesse normale imposee\n       VTIMP         Vitesse tangentielle imposee\n arg1 arg2 ...etc : arguments de l'operateur (Cf operateur concerne)\n        l'operateur (Cf operateur concerne)\n        Les arguments lus sont places dans la table associee a l'operateur\n        dans l'ordre de la lecture aux indices ARG1 ARG2 ... etc\n\n\n Directive KTYPI\n ---------------\n\n ktypi (entier) type de la methode d'inversion\n       1 Choleski (valeur par defaut)\n       2 GC      (voir Chapitre Gradient-Conjugue)\n       3 DCG                \"\n       4 ICG                \"",
  },
  {
    name: "EQUI",
    url: "EQUI",
    documentation:
      "$$$$ EQUI     NOTICE  CHAT      11/09/12    21:16:04     7124           \n                                             DATE     11/09/12\n\n\n    Operateur EQUI                           Voir aussi : KABL PREC\n    --------------                                        PROI  \n\n      RIG1    =  EQUI 'RIGI' MODBET MODCAB MAT1   ;\n\n      CHPO1   =  EQUI 'FORCES' MODBET MODCAB SIG1 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur EQUI calcule la rigidite des cables ou les forces\n    equivalentes a des precontraintes exprimees aux noeuds du beton.\n\n\n      Commentaire :\n      _____________\n\n      'RIGI'   : mot pour indiquer que l'on veut calculer la contribution\n                 a la rigidite\n\n      'FORCES' : mot pour indiquer que l'on veut calculer des forces\n                 equivalentes.\n\n      MODBET   : objet modele associe au beton (type MMODEL)\n\n      MODCAB   : objet modele associe aux cables (type MMODEL)\n\n      MAT1     : champ de proprietes materielles du beton et des cables\n                 (type MCHAML, sous-type CARACTERISTIQUES)\n\n      RIG1     : matrices de rigidite\n                 (type RIGIDITE, sous-type RIGIDITE)\n\n      SIG1     : champ de contraintes (type MCHAML,\n                 sous-type CONTRAINTES)\n\n      CHPO1    : champ de forces (type CHPOINT)",
  },
  {
    name: "ERF",
    url: "ERF",
    documentation:
      "$$$$ ERF      NOTICE  KK2000    14/07/28    21:15:09     8127           \n                                             DATE     14/07/28\n\n      RESU1 =  'ERF'  OBJET1 ;\n\n\n    Operateur ERF                            Voir aussi : ERFC\n    -------------  \n    Objet :\n    _______\n\n    L'operateur ERF calcule la fonction d'erreur de Gauss de l'objet\n    OBJET1.\n\n\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ERFC",
    url: "ERFC",
    documentation:
      "$$$$ ERFC     NOTICE  KK2000    14/07/28    21:15:10     8127           \n                                             DATE     14/07/28\n\n      RESU1 = 'ERFC'  OBJET1 ;\n\n\n    Operateur ERFC                           Voir aussi : ERF\n    --------------  \n    Objet :\n    _______\n\n    L'operateur ERFC calcule la fonction d'erreur complementaire \n    de Gauss de l'objet OBJET1. \n    \n      ERFC(X) = 1 - ERF(X)\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "ERRE",
    url: "ERRE",
    documentation:
      "$$$$ ERRE     NOTICE  JC220346  19/12/29    21:15:04     10439          \n                                             DATE     19/12/29\n                                             \n  Foncteur ERREUR                          Voir aussi :\n    ---------------  \n\n    Le foncteur ERREUR a deux fonctions differentes :\n\n    -----------------\n    | 1ere fonction |\n    -----------------\n\n    ERREUR | MOT1 ;\n           |\n           | N1 ( 'AVEC' OBJ1 OBJ2 ...)\n\n    Objet :\n    _______\n\n    Utilise en directive, ERREUR signale dans les procedures une erreur\n    detectee lors de l'execution.\n    \n    Elle provoque l'appel du sous-programme ERREUR.\n\n    On peut l'utiliser de deux manieres :\n    \n    - Soit avec un objet MOT1 (type MOT), auquel cas le message \n      personnalise est affiche et l'erreur generique 308 est declenchee\n      \n    - Soit avec un numero N1 (type ENTIER) qui correspond a un numero de\n      message pre-redige dans le fichier GIBI.ERREUR. Certains messages\n      comportent des motifs commencant par le caractere \"%\". Ces motifs\n      peuvent etre remplaces par des valeurs transmises apres le mot-cle\n      \"AVEC\". Ainsi, chaque OBJi remplacera le i-eme motif de type\n      correspondant.\n      \n      +-------+-----------+---------------------------------------+\n      | MOTIF | OBJi      | Remarques                             |\n      +-------+-----------+---------------------------------------+\n      | %m,%M | MOT       | jusqu'a 120 caracteres au total       |\n      |       | LISTMOTS  | %M tronque les espaces de fin, %m pas |\n      +-------+-----------+---------------------------------------+\n      | %i    | ENTIER    | 9 items maximum                       |\n      |       | LISTENTI  |                                       |\n      +-------+-----------+---------------------------------------+\n      | %r    | FLOTTANT  | 9 items maximum                       |\n      |       | LISTREEL  |                                       |\n      +-------+-----------+---------------------------------------+\n      | %b    | LOGIQUE   | 9 items maximum                       |\n      |       |           |                                       |\n      +-------+-----------+---------------------------------------+\n\n      \n      \n    -----------------\n    | 2eme fonction |\n    -----------------\n       FLOT1 CHAM2  =  ERREUR  MODL1 SIG1 MAT1 ;\n\n      Objet :\n      _______\n\n    Utilise en operateur ERREUR permet de calculer une erreur globale\nFLOT1 (type FLOTTANT) et un champ d'erreur CHAM2 (type MCHAML) lies\n@ un calcul de contraintes SIG1 (type MCHAML). MAT1 correspond au\nchamp de proprietes materielles (type MCHAML), MODL1 correspond a\nl'objet modele (type MMODEL)\n\n\n    Remarque :\n    __________\n\nL'utilisation de l'operateur ERRE est liee aux elements massifs.",
  },
  {
    name: "ET",
    url: "ET",
    documentation:
      "$$$$ ET       NOTICE  CB215821  19/11/25    21:15:01     10397          \n                                             DATE     19/11/25\n\n\n    Operateur ET                             Voir aussi : OU DIFF INTE\n    ------------                                             +  \n    ----------------------\n    |  1ere possibilite  |\n    ----------------------\n\n    OBJET3 = 'ET' ('TELQUEL') OBJET1  OBJET2 ('NOER');\n\n   Objet :\n    _______\n\n    L'operateur ET construit l'objet OBJET3 representant le resultat\n    de la fusion des objets OBJET1 et OBJET2.\n\n    Cette operation n'a actuellement de sens qu'entre objets de meme\n    type. Le resultat a le meme type que les objets OBJET1 et OBJET2.\n\n    Font exceptions a cette regle les concatenations respectives de\n    POINT           et MAILLAGE  ->  MAILLAGE\n    POINT           et POINT     ->  MAILLAGE  (elements de type POI1)\n    MOT             et LISTMOTS  ->  LISTMOTS\n    ENTIER          et LISTENTI  ->  LISTENTI\n    FLOTTANT/ENTIER et LISTREEL  ->  LISTREEL\n    ENTIER          et ENTIER    ->  LISTENTI\n    FLOTTANT        et FLOTTANT  ->  LISTREEL\n    ENTIER          et FLOTTANT  ->  LISTREEL\n    FLOTTANT        et ENTIER    ->  LISTREEL\n\n    Commentaire :\n    _____________\n\n    Les types d'objet acceptes par l'operateur ET sont :\n    POINT    MAILLAGE  LOGIQUE   CHPOINT  RIGIDITE  MMODEL   MCHAML\n    ATTACHE  BLOQSTRU  ELEMSTRU  SOLUTION DEFORME   BASMOD   VECTEUR\n    LISTREEL LISTENTI  EVOLUTIO  CHARGEME STRUCTUR  MCHAML   TABLE\n    LISTMOTS MOT       NUAGE     LISTCHPO MATRIK    FLOTTANT ENTIER\n\n    Remarques :\n    ___________\n\n   * Si les objets OBJET1 et OBJET2 sont de type LOGIQUE,\n     le resultat est la conjonction logique des 2 objets.\n\n\n   * Si les objets OBJET1 et OBJET2 sont de type CHPOINT, l'operation\n     n'est possible que si ils ont la meme nature (DISCRET ou DIFFUS).\n     Le resultat est la concatenation des deux objets pour leurs parties\n     disjointes et pour leurs parties communes constituees par les memes\n     composantes aux memes noeuds le resultat depend de leur nature :\n     - s'ils sont de nature diffuse la valeur doit etre la meme pour\n         les deux champs, sauf si le motcle NOER est indique.\n     - s'ils sont de nature discrete on somme les deux valeurs.\n\n\n   * Si les objets OBJET1 et OBJET2 sont de type MOT, ils doivent\n     etre places derriere ET. Le resultat est la concatenation des deux\n     mots. Si le mot 'TELQUEL' est utilise les blancs aux extremites de\n     OBJET1 et OBJET2 sont conserves. Voir aussi operateur 'CHAINE'.\n\n   * Si les objets OBJET1 et OBJET2 sont de type TABLE, ils\n     doivent etre tous les deux de sous-type \"LIAISONS_STATIQUES\",\n     ou bien \"BASE_MODALE\".\n\n   * Si les objets OBJET1 et OBJET2 sont de type MAILLAGE, les\n     partitions de type SEG2 sont concatenees en veillant a preserver une\n     continuite de parcours de la partition resultat, sauf en presence du\n     mot-clef 'TELQUEL' qui force un respect de l'ordre des maillages\n     fournis en entree.\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n    OBJET2 = 'ET'  TAB1 ;\n\n    Objet :\n    _______\n\n    L'operateur ET construit la fusion de l'ensemble des objets\n    contenus dans la table de sous-type ESCLAVE TAB1. Ces objets\n    doivent etre de type POINT, MAILLAGE, CHPOINT, MCHAML, RIGIDITE, \n    MATRIK, MMODEL, LISTREEL, LISTENTI, FLOTTANT ou ENTIER.\n\n    Le resultat est du meme type que les objets places en chaque indice \n    entier de TAB1 a l'exception des objets repertories dans le \n    tableau qui suit :\n\n    +----------------------+-------------------+\n    | Type de de l'indice  |  Type du r\u00e9sultat |\n    +----------------------+-------------------+\n    | POINT                |  MAILLAGE         |\n    | FLOTTANT             |  LISTREEL         |\n    | ENTIER               |  LISTENTI         |\n    +----------------------+-------------------+",
  },
  {
    name: "ETG",
    url: "ETG",
    documentation:
      "$$$$ ETG      NOTICE  CB215821  21/11/25    21:15:08     11201          \n                                             DATE     21/11/25\n\n\n    Operateur ETG                           Voir aussi : ET TABL PART\n\n\n    OBJET2 = 'ETG'  TAB1  ;\n\n   Objet :\n    _______\n\n    L'operateur ETG construit l'objet OBJET2 representant le resultat\nde la fusion (operateur 'ET') de la collection d'objets contenus dans\nla table TAB1 de 'SOUSTYPE' 'ESCLAVE'.\n\n    Cette operation ne fonctionne que pour des TABLE de 'SOUSTYPE'\n'ESCLAVE' contenant des objets de type :\n  'CHPOINT', 'RIGIDITE', 'LOGIQUE' , 'MCHAML', 'MMODEL', 'MAILLAGE',\n  'MATRIK' , 'FLOTTANT', 'EVOLUTIO', 'ENTIER', 'MOT'   , 'CHARGEME'",
  },
  {
    name: "EVOL",
    url: "EVOL",
    documentation:
      "$$$$ EVOL     NOTICE  BP208322  20/02/20    21:15:01     10528          \n                                             DATE     20/02/20\n \n     Operateur EVOL                          Voir aussi : PROG\n     --------------  \n\n L'operateur EVOL definit l'evolution d'une (ou plusieurs) grandeur(s)\n en fonction d'un parametre. Le resultat est un objet de type EVOLUTION.\n\n \n Plusieurs options sont disponibles :\n\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Sur une LIGNE a partir d'un objet CHPOINT\n2. En un (ou plusieurs) POINT(s) et plusieurs instants\n3. FONCTION complexe a partir de trois objets LISTREEL\n4. FONCTION a partir de deux objets LISTREEL\n5. En plusieurs POINTS a partir d'une ANALYSE MODALE (DYNE)\n6. En plusieurs POINTS a partir d'une RECOMBINAISON MODALE (DYNE,POD)\n7. Evolution temporelle des coordonnees sur base modale\n\n  \n1. Sur une LIGNE a partir d'un objet CHPOINT1 \n============================================ \n     +---------------+\n     |  Option CHPO  |\n     +---------------+\n\n     EVOL1  =  EVOL (COUL) 'CHPO'  CHP1  COMP  GEO1 ;\n\n     Objet :\n     _______\n\n     Cette option permet de definir l'evolution d'une composante d'un\n     CHPOINT le long d'une ligne de noeuds.\n\n     \n     Commentaire :\n     _____________\n\n     COUL    : couleur de la (ou des) courbe(s). Si elle est omise\n               on utilise la couleur par defaut definie dans OPTION.\n\n     CHP1    : le champ de type CHPOINT.\n\n     COMP    : nom de la composante (type MOT). Elle peut etre omise\n               si le champ CHP1 n'a qu'une seule composante.\n\n     GEO1    : la ligne de noeuds (type MAILLAGE).\n\n     \n     En abscisse figurera l'abscisse curviligne le long de la ligne\n     et en ordonnee la valeur de la composante correspondante. La ligne\n     devra etre continue et ne pas etre branchee.\n  \n2. En un (ou plusieurs) POINT(s) et plusieurs instants \n====================================================== \n \n     +---------------+\n     |  Option TEMP  |\n     +---------------+\n\n     EVOL1 = EVOL (|COUL |) 'TEMP' |LCHP1 LREE1| (LIPDT1)  ...\n                   |LCOUL|         |TAB1 (MOT1)|  \n\n                    ...  |COMP  | |POIN1   | ;\n                         |LCOMP | |MAIL1   |\n                                  |N1 N2 N3|\n \n     Objet :\n     _______\n\n     Cette option permet de tracer l'evolution temporelle de resultats\n     de calcul (PASAPAS, DYNAMIC, EXEC...) en certains points.\n     \n     \n     Commentaire :\n     _____________\n     \n     Les resultats sont contenus soit :\n     \n       1) dans un objet TAB1 de type TABLE (et de sous-type PASAPAS,\n          DYNAMIC ou EXEC), auquel cas on peut fournir dans MOT1\n          l'indice de la grandeur a tracer :\n          - pour PASAPAS : DEPLACEMENTS (par defaut), TEMPERATURES...\n          - pour DYNAMIC : DEPL (par defaut), VITE...\n          - pour EXEC    : UN (par defaut), PN, TN...\n          \n       2) dans un objet LCHP1 de type LISTCHPO (ordonnees) et un objet\n           LREE1 de type LISTREEL (abscisses)\n     \n     On peut restreindre la liste des pas de temps traces en donnant\n     l'objet LIPDT1 de type LISTENTI.\n     \n     Si la grandeur est vectorielle, les noms des composantes doivent\n     etre precises par la donnee de COMP (type MOT) ou LCOMP (type\n     LISTMOTS).\n     \n     Le (ou les) point(s) ou tracer les courbes sont specifies dans\n     POIN1 (type POINT) ou MAIL1 (type MAILLAGE).\n     \n     COUL (type MOT) ou LCOUL (type LISTMOTS) definissent les couleurs\n     attribuees a chaque courbe.\n     \n     \n     Cas particulier, pour une grandeur PASAPAS de type MCHAML :\n       + tous les instants disponibles sont traces (pas de LIPDT1)\n       + on ne peut choisir qu'une seule composante (pas de LCOMP)\n       + on ne donne pas POIN1 ou MAIL1 mais 3 objets N1, N2 et N3 de\n         type ENTIER (indiquant le N3-eme point de Gauss du N2-eme\n         element de la N1-ieme zone du modele)\n  \n3. FONCTION complexe a partir de trois objets LISTREEL \n====================================================== \n \n     +---------------+\n     |  Option COMP  |\n     +---------------+\n\n     EVOL1 = EVOL (COUL) 'COMP'  | ('REIM') |   ... \n                                 | ('MOPH') |\n\n             ... ('LEGE' TITOR1 TITOR2) ...\n\n             ... NOMABS LISTABS (NOMOR1) LISTOR1  (NOMOR2) LISTOR2 ;\n\n     Objet :\n     _______\n\n     Cette option permet de definir une fonction complexe a partir de\n     trois listes de reels (cf PROG).\n\n     \n     Commentaire :\n     _____________\n\n     COUL    : couleur de la (ou des) courbe(s). Si elle est omise\n               on utilise la couleur par defaut definie dans OPTION.\n\n    'REIM'   : mot-cle indiquant que la fonction complexe est definie\n               sous la forme partie reelle - partie imaginaire (option \n               prise par defaut).\n\n    'MOPH'   : mot-cle indiquant que la fonction complexe est\n               definie sous la forme module - phase.\n\n    'LEGE'   : mot-cle permettant de donner des titres aux courbes\n \n     TITOR1  : titre de la partie reelle ou amplitude (Re ou Amp par \n               defaut). \n   \n     TITOR2  : titre de la partie imaginaire ou phase (Im ou \\j par \n               defaut). \n\n     NOMABS  : nom des abscisses (MOT de 12 caracteres au maximum)\n\n     LISTABS : liste de reels en abscisse (type LISTREEL)\n\n     NOMOR1  : nom des parties reelles ou modules en ordonnee\n               (MOT de 12 caracteres au maximum)\n\n     LISTOR1 : parties reelles ou modules en ordonnee (type LISTREEL)\n\n     NOMOR2  : nom de la partie imaginaire ou phase en ordonnee\n               (MOT de 12 caracteres au maximum)\n\n     LISTOR2 : parties imaginaires ou phases en ordonnee (type LISTREEL)\n \n  \n4. FONCTION a partir de deux objets LISTREEL \n============================================ \n \n     +---------------+\n     |  Option MANU  |\n     +---------------+\n\n     EVOL1 = EVOL (COUL) 'MANU' ('TYPE' MTYP1) ...\n             ... ('LEGE' TIT1) ...\n             ... (NOMABS) LISTABS (NOMORD) LISTORD ;\n\n     Objet :\n     _______\n\n     Cette option permet de definir une fonction a partir de deux\n     listes de reels (cf operateur PROG).\n\n     \n     Commentaire :\n     _____________\n\n     COUL    : couleur de la (ou des) courbe(s). Si elle est omise\n               on utilise la couleur par defaut definie dans OPTION.\n\n    'TYPE'   : mot-cle permettant de typer la courbe\n\n     MTYP1   : type de la courbe (REEL, MODU, PHAS, HIST, ENTI, ...)\n                 REEL par defaut si ordonnee de type LISTREEL\n                 MOTS par defaut si ordonnee de type LISTMOTS\n                 ENTI par defaut si ordonnee de type LISTENTI\n \n    'LEGE'   : mot-cle permettant de donner un titre a la courbe\n\n     TIT1    : titre de la courbe elementaire\n\n     NOMABS  : nom des abscisses (MOT de 12 caracteres au maximum)\n\n     LISTABS : liste en abscisse (type LISTREEL, LISTMOTS ou LISTENTI)\n\n     NOMORD  : nom des ordonnees (MOT de 12 caracteres au maximum)\n\n     LISTORD : liste en ordonnee (type LISTREEL, LISTMOTS ou LISTENTI)\n  \n5. En plusieurs POINTS a partir d'une ANALYSE MODALE (DYNE) \n=========================================================== \n \n     +---------------+\n     |  Option SOLU  |\n     +---------------+\n\n      EVOL1 = EVOL (COUL) 'SOLU' ('LEGE' TIT1) ...\n   \n                 ... | MSOLUT TYPE | | GEO1 | COMP (INSTANTS) \n                     |             | | ATT1 |\n                     |             |\n                     |             |  CHPO1        (INSTANTS)\n                     |             |\n                     |             |  MOD1 'ALFA'  (INSTANTS)\n                     |\n                     | TRESU  TYPE |  GEO1   COMP  (INSTANTS)\n                                   |\n                                   |  CHPO1        (INSTANTS)\n                                   |\n                                   |  TBAS 'ALFA'  (INSTANTS)\n\n     Objet :\n     _______\n\n     Cette option definit l'evolution d'une ou plusieurs grandeurs\n     contenues dans un objet SOLUTION MSOLUT, ou dans un objet TABLE \n     TRESU issu de l'operateur DYNE, en un ou plusieurs points.\n\n     \n     Commentaire :\n     _____________\n\n     COUL  : couleur de la (ou des) courbe(s). Si elle est omise\n             on utilise la couleur par defaut definie dans OPTION.\n \n     'LEGE': mot-cle permettant de donner un titre a la courbe\n\n     TIT1  : titre de la courbe elementaire\n\n     TYPE  : type de la variable (type MOT) choisi parmi:\n             'DEPL','VITE','ACCE','LIAI','USUR','TRAVAIL_INTERIEUR',\n             'TRAVAIL_EXTERIEUR' (les deux derniers types, uniquement\n              en cas de TABLE TRESU issu de l'operateur DYNE).\n\n     COMP  : nom de la composante choisie (type MOT)\n             (@ ne pas mettre si le type de variable est 'USUR')\n\n     GEO1 : objet geometrique (type POINT ou MAILLAGE) definissant\n            le ou les points.\n\n     CHP1 : objet de type CHPOINT definissant le(s) point(s) et\n            la(les) composante(s).\n\n     INSTANTS : objet facultatif pour choisir les cas de sortie,\n                pouvant etre :\n                - la liste des temps a sortir (type LISTREEL)\n                - la liste des cas a sortir (type LISTENTI)\n                Si rien n'est precise, l'objet resultat porte\n                sur tous les instants disponibles.\n\n     MOD1 : objet de type SOLUTION de sous-type MODE ou SOLUSTAT\n            contenant les modes ou solutions statiques aux contri-\n            butions desquels on s'interesse.\n\n     TBAS : objet TABLE definissant les modes, les pseudo-modes, ...\n                - de sous-type BASE_MODALE, ou\n                - de sous-type ENSEMBLE_DE_BASES\n\n     ATT1 : objet de type ATTACHE definissant l'inconnue ou la\n            variable de liaison.\n  \n6. En plusieurs POINTS a partir d'une RECOMBINAISON MODALE (DYNE,POD) \n===================================================================== \n \n     +---------------+\n     |  Option RECO  |\n     +---------------+\n\n     EVOL1 = EVOL (COUL) 'RECO' ('LEGE' TITR1) ...\n \n      a)   ... | MSOLUT BASE1    | (CHG1) TYPE | GEO1 COMP (LTEMP) | ;\n               | TDYNE TBAS1     |             | CHPO1 (LTEMP)     |\n               | TPASA MOD1 CAR1 |\n\n      b)   ... LCHPO LTEMP TBAS1 (NMOD1) | COMP  | GEO1 ;\n                                         | LCOMP |             \n            \n     Objet :\n     _______\n\n     Cette option permet d'obtenir l'evolution temporelle sur base\n     physique d'une grandeur connue sur base modale X.\n     Autrement dit, il calcule :\n         u(x,t) = [ X(x) ] * q(t) \n     \n     Plus precisement, quatre operations sont possibles :\n\n      1) EVOLUTION d'une ou plusieurs grandeurs d'un objet MSOLUT\n         (type SOLUTION) apres recombinaison des modes et/ou solutions\n         statiques contenus dans la base modale BASE1 (type BASEMODA)\n\n      2) EVOLUTION d'une ou plusieurs grandeurs d'un objet TDYNE\n         (type TABLE de sous-type RESULTAT_DYNE) apres recombinaison\n         des modes contenus dans TBAS1 (type TABLE de sous-type\n         BASE_MODALE ou ENSEMBLE_DE_BASES)\n         \n      3) EVOLUTION d'une ou plusieurs grandeurs d'un objet TPASA\n         (type TABLE de sous-type PASAPAS) apres recombinaison\n         des modes contenus dans MOD1 (type MMODEL).\n         \n      4) EVOLUTION d'une grandeur connue par l'evolution temporelle\n         LCHPO (type LISTCHPO) de ses coordonnees sur la base modale\n         contenue dans TBAS1 (type TABLE de sous-type BASE_MODALE).\n         \n         \n     Commentaire :\n     _____________\n\n     COUL   : Couleur de la (ou des) courbe(s) (type MOT). Si elle est\n              omise, on utilise la couleur par defaut definie dans\n              OPTION. Pour la syntaxe 4 (avec LCHPO), on peut fournir\n              un objet de type LISTMOTS.\n             \n     TITR1  : Titre de l'ensemble des courbes\n\n     MSOLUT : Objet SOLUTION contenant les resultats du calcul sur\n              base modale\n     \n     TDYNE  : Table issue de l'operateur DYNE (sous-type RESULTAT_DYNE)\n     \n     TPASA  : Table issue de la procedure PASAPAS (sous-type PASAPAS)\n              \n     TYPE   : Type du champ (type MOT) choisi parmi :\n              'DEPL', 'VITE', 'ACCE', 'CONT', 'REAC'\n              (l'option 'REAC' ne fonctionne que si l'on a donne la\n               base modale sous forme d'une TABLE)\n     \n     BASE1  : Base modale de type BASEMODA (voir operateur BASE)\n\n     TBAS1  : Objet TABLE definissant les modes, les pseudo-modes...\n              Peut etre de sous-type BASE_MODALE ou ENSEMBLE_DE_BASES\n              selon la syntaxe utilisee\n              \n     NMOD1  : ENTIER indiquant le nombre de modes retenus pour effectuer\n              la recombinaison modale (par defaut : tous les modes)\n\n     MOD1   : Objet MMODEL decrivant la base modale\n\n     CAR1   : Objet MCHAML decrivant les proprietes de la base\n                 \n     CHG1   : Objet de type CHARGEME definissant le chargement de la\n              structure si l'on veut tenir compte des pseudo-modes.\n              Ceux-ci doivent etre dans la base.\n     \n     LCHPO  : Coefficients de projection sur TBAS1 en fonction du temps\n              (type LISTCHPO)\n\n     COMP   : Nom de la composante du champ (type MOT)\n     \n     LCOMP  : Nom des composantes du champ (type LISTMOTS)\n\n     GEO1   : Objet geometrique (type POINT ou MAILLAGE) definissant\n              le(s) point(s).\n\n     CHP1   : Objet de type CHPOINT definissant le(s) point(s) et\n              la(les) composante(s).\n\n     LTEMP  : Objet facultatif pour choisir les instants de sortie,\n              pouvant etre :\n               - syntaxes 1 \u00e0 3 => la liste des instants (type LISTREEL)\n               - syntaxe 4 => la liste des pas de temps (type LISTENTI)\n              Si rien n'est precise, l'objet resultat porte sur tous les\n              instants disponibles.\n              \n              \n              \n  \n7. Evolution temporelle des coordonnees sur base modale \n======================================================= \n \n     +---------------+\n     |  Option PJBA  |\n     +---------------+\n\n     EVOL1 = EVOL |COUL | 'PJBA' |LCHP1 LREE1| (LIPDT1) ...\n                  |LCOUL|        |TAB1 (MOT1)|  \n            \n                              ... TBAS1 (LIMOD1) (RIGI1) ;\n            \n     Objet :\n     _______\n\n     Cette option permet d'obtenir l'evolution temporelle des\n     coefficients de projection d'un signal instationnaire (par exemple\n     un resultat PASAPAS, DYNAMIC ou EXEC) sur les vecteurs d'une\n     base modale donnee.\n         \n         \n     Commentaire :\n     _____________\n              \n     Le signal instationnaire est contenu soit :\n     \n       1) dans un objet TAB1 de type TABLE (et de sous-type PASAPAS,\n          DYNAMIC ou EXEC), auquel cas on peut fournir dans MOT1\n          l'indice de la grandeur a tracer :\n          - pour PASAPAS : DEPLACEMENTS (par defaut), TEMPERATURES...\n          - pour DYNAMIC : DEPL (par defaut), VITE...\n          - pour EXEC    : UN (par defaut), PN, TN...\n          \n       2) dans un objet LCHP1 de type LISTCHPO (ordonnees) et un objet\n           LREE1 de type LISTREEL (abscisses)\n     \n     On peut restreindre la liste des pas de temps traces en donnant\n     l'objet LIPDT1 de type LISTENTI.\n     \n     La base de modes est donnee dans TBAS1 (objet TABLE de sous-type\n     BASE_MODALE).\n     \n     Il est possible de specifier quels modes doivent etre traces dans\n     l'objet LIMOD1 (type ENTIER ou LISTENTI).\n     \n     RIGI1 (type RIGIDITE) est une matrice symetrique definie positive\n     utilisee pour realiser le produit scalaire (si RIGI1 est absente,\n     on fait classiquement la somme des produits des composantes).\n              \n     COUL (type MOT) ou LCOUL (type LISTMOTS) definissent les couleurs\n     attribuees a chaque courbe.",
  },
  {
    name: "EXAC",
    url: "EXAC",
    documentation:
      "$$$$ EXAC     NOTICE  CHAT      11/09/12    21:16:06     7124           \n                                             DATE     11/09/12\n\n  Procedure EXAC                           Voir aussi :\n    --------------  \n    EXAC  TAB1  ;\n\n\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de resoudre des problemes de mecanique des\n   fluides .\n\n\n  1/ Si l'entree 'PRESSION' n'existe pas :\n    RESOUD des EDP en explicite  suivant les informations donnees\n    dans une table de type EQEX (creee par EQEX).\n\n  2/ Si l'entree 'PRESSION' existe :\n    RESOUD les equations de NAVIER-STOKES suivant un algorithme\n    semi-implicite suivant les informations donnees dans une table\n    de type EQEX (creee par EQEX).\n\n    Cette table doit avoir une entree 'PRESSION' contenant la table\n    de type EQPR ou sont rassemblees les informations liees a\n    l'equation de pression et a sa resolution. Table creee par EQPR.\n\n    Enfin la table doit contenir une entree 'INCO' , table creee\n    par l'utilisateur et de sous type 'INCO' contenant les CHAMPOINTs\n    d'initialisation.\n    Si la table possede une entree HIST contenant une table (cree par\n    KHIS ) la table des historiques est completee",
  },
  {
    name: "EXCE",
    url: "EXCE",
    documentation:
      "$$$$ EXCE     NOTICE  KK2000    15/02/03    21:15:06     8353           \n                                             DATE     15/02/03\n\n  Operateur EXCELLENCE                     Voir aussi :\n    --------------------  \n    TAB1 = EXCE  TAB1 ;\n                                    TAB1.'VX0'   .'VF'    .'VXMIN'\n                                        .'VXMAX' .'MC'    .'VCMAX'\n                                        .'METHODE'        .'DELTA0'\n                                        .'MAXITERATION'   .'XSMAX'\n                                        .'VDIS'   .'T0'   .'S0'\n                                        \n\n\n    Objet :\n    -------\n L'operateur EXCELL cherche le minimum d'une fonction F(Xi), la methode \nutilisee est connue sous le nom de MMA (Method of Moving Asymptotes) \nproposee par K.Svanberg. Il s'agit donc de trouver le minimum d'une \nfonction  F(Xi) avec i=1,N et sachant que :\n\n\n   - il existe des relations   Cj(Xi) < Cjmax       j > 0   j=1,M\n\n   - Il existe des relations sur chaque inconnue  Ximin <  Xi < Ximax\n\n La donnee des fonctions F et Cj se fait a l'aide des valeurs des\nfonctions et de leurs derivees au point de depart X0.\n\n\n\n\n\n\n    Donnees :\n    ---------\n TAB1.'VX0'        : table (sous-type VECTEUR) contenant les valeurs\n                     initiales des variables X0i.\n                     La table est indicee par les ENTIERs i. (i=1,N)\n\n TAB1.'VF'         : table (sous-type VECTEUR) contenant :\n                   - dans TAB1.'VF'.0 : la valeur de F(X0i)\n                   - dans TAB1.'VF'.I : la valeur de la derivee de F\n                     par rapport a Xi en X0 (i=1,N).\n\n TAB1.'MC'         : table indicee par des ENTIERs j (j=1,M) et\n                     contenant autant de tables que de relations Cj.\n\n      TAB1.'MC'.J    est une table representant la fonction Cj\n                    - dans TAB1.'MC'.J.0 : la valeur initiale de\n                      Cj(X0) (j=1,M)\n                    - dans TAB1.'MC'.J.I : la valeur de la derivee de\n                      Cj par rapport a Xi en X0 (i=1,N).\n\n TAB1.'VXMIN'      : table indicee par des ENTIERs (i=1,N) et\n                     contenant :\n                    - dans TAB1.'VXMIN'.I : la valeur de Ximin\n\n TAB1.'VXMAX'      : table indicee par des ENTIERs (i=1,N) et\n                     contenant :\n                    - dans TAB1.'VXMAX'.I : la valeur de Ximax\n\n TAB1.'VCMAX'      : table indicee par des ENTIERs (i=1,M) et\n                     contenant :\n                    - dans TAB1.'VCMAX'.I : la valeur de Cjmax\n\n TAB1.'METHODE'    : (facultatif) est un MOT precisant la methode de\n                     linearisation a utiliser.\n\n                    - 'STA'  pour l'emploi de la methode standard.\n                    - 'MOV'  si les fonctions sont tres fortement\n                      non-lineaires.\n                    - 'LIN'  si les fonctions sont peu non-lineaires\n                      et qu'il y a des variables a variations non\n                      continues.\n\n TAB1.'T0'         : (facultatif) change la valeur du reel compris\n                      entre 0. et 1. qui gouverne la convexite des\n                      fonctions. Plus t0 est grand plus les fonctions\n                      sont convexes. Par defaut, pour la methode\n                      standard, t0 est pris egal a 0.3333.\n\n TAB1.'S0'         : (facultatif) change la valeur du reel compris\n                      entre 0. et 1. qui gouverne la convexite des\n                      fonctions. Plus s0 est grand plus les fonctions\n                      sont convexes. Par defaut, pour la methode\n                      MOV, s0 est pris egal a 0.7.\n\n TAB1.'MAXITERATION' : (facultatif) change la valeur maximum\n                       autorisee pour le nombre d'iterations.\n                       (Par defaut 100)\n\n TAB1.'VDIS'       : table indicee par des ENTIERs k (k=1,KK) et\n                     contenant autant de tables que de variables\n                     n'ayant que des valeurs discretes autorisees.\n                     Cette option n'est pas encore disponible.\n\n    Remarque :\n    ----------    -  Au depart les variables X0i doivent satisfaire\n                     aux conditions   Ximin < X0i < Ximax\n\n                  -  Le point de depart ne satisfait pas forcement les\n                     relations     Cj  < Cjmax\n                     Dans ce cas une variables supplementaire de\n                     relaxation est introduite et la solution trouvee\n                     par EXCELL ne satisfera peut-etre pas non plus\n                     les relations. L'influence de cette variable\n                     de relaxation peut etre modifiee par deux reels\n                     TAB1.'DELTA0'  et TAB1.'XSMAX'. Par defaut\n                     DELTA0=50. et XSMAX=500. ( il faut DELTA0 >1. et\n                     XSMAX > DELTA0)\n    Exemple :\n    ---------\n\n    La fonction que l'on desire minimiser n'est pas celle\nqui est minimisee par l'operateur EXCE. La demarche a suivre est de\nresoudre une succession de probleme. Partant d'un etat connu des\nvariables on demande a EXCE de calculer le minimum d'un probleme\napproche, la fonction F a minimiser est remplacee par la fonction\nlinearisee decrite ci-dessus ainsi que les fonctions C. Puis on repart\nde la solution trouvee par EXCE. L'algorithme se presente ainsi :\n\n       - creation des objets TABLES\n       - initialisations de TAB1.'VX0' ( valeurs de Xi0)\n       - initialisation de TAB1.'VF'.\n       - initialisation de TAB1.'MC'.  J .\n       - initialisation de TAB1.'VXMIN' et TAB1.'VXMAX'\n       - initialisation de TAB1.'VCMAX'\n       - repeter 5 fois la suite :\n          - calcul de DF et mise dans TAB1.'VF' , ainsi que F(XI0)\n          - calcul des Cj  et mise dans TAB1.'MC'.j.\n            ainsi que Cj(Xi0)\n          - appel a EXCE avec la table TAB1 en entree.\n          - imprimer TAB1.'VX0'\n       - fin de boucle",
  },
  {
    name: "EXCF",
    url: "EXCF",
    documentation:
      "$$$$ EXCF     NOTICE  PASCAL    13/11/08    21:15:35     7862           \n                                             DATE     13/11/08\n\n    Operateur EXCF                           Voir aussi : IMPF FRIG\n    --------------                                        IMPO  \n     CHPOI1 = EXCF RIG1 DEPL1 MODE1 CHAM1 (CHPOI2);\n\n\n    Objet :\n    _______\n\n    EXCF permet de calculer un champ de force limite de frottement\n    (type CHPOINT) a partir de la raideur de frottement RIG1, du champ\n    de deplacement DEPL1 (type CHPOINT), du modele de contact-frottant\n    MODE1 et du champ de proprietes de frottement CHAM1 (type MCHAML).\n\n    On peut fournir un champ minimum de forces de frottement : CHPOI2.\n\n    Remarque :\n    __________\n     \n    EXCF est employe dans UNPAS. Il y a peu de raisons de l'employer\n    directement.\n ",
  },
  {
    name: "EXCI",
    url: "EXCI",
    documentation:
      "$$$$ EXCI     NOTICE  CHAT      11/09/12    21:16:07     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur EXCITER                        Voir aussi :\n    -----------------  \n RIG2 LOG LENT1 = EXCITER  (| RAPIDE |) RIG1 MAIL_CONTR DEP1 DEP2 (FO1);\n                            | MOYEN  |\n                            | LENT   |\n\n\n    Objet :\n    _______\n\n\n    L'operateur EXCITER est utilise dans le cadre de la resolution des\nconditions unilaterales.\n\n    A partir des blocages MINI et MAXI, d'un champ de deplacements impo-\nses et d'un champ de deplacements, et en cas de frottement d'un champ de\nforces limite de frottement indiquant la direction du frottement, cet\noperateur donne les blocages actifs. Les noeuds contenus dans le \nmaillage MAIL_CONTR sont elimines dans les blocages actifs.\n\n    Commentaire :\n    _____________\n\n    RIG1   : matrice de rigidite contenant les blocages MINI et MAXI\n             (type RIGIDITE)\n\n    RAPIDE : methode utilisee. RAPIDE par defaut.\n    MOYEN\n    LENT\n\n    MAIL_CONTR : maillage des noeuds a ne pas mettre dans RIG2\n\n    DEP1   : champ de deplacements imposes (type CHPOINT)\n\n    DEP2   : champ de deplacements (type CHPOINT)\n\n    FO1    : champ de forces (type CHPOINT)\n\n    RIG2   : matrice de rigidite contenant les blocages actifs\n             (type RIGIDITE)\n\n    LOG    : logique disant si il  blocages actifs sont restes les memes\n\n    LENTI1 : liste d'entiers (type LISTENTI) valant 1 ou 0 suivant que\n             les blocages successifs sont actifs ou non-actifs.",
  },
  {
    name: "EXCO",
    url: "EXCO",
    documentation:
      "$$$$ EXCO     NOTICE  BP208322  17/04/19    21:15:01     9398           \n                                             DATE     17/04/19\n\n    Operateur EXCO                           Voir aussi : EXTR MOTS\n    --------------  \n     CH2 =  EXCO  | MOT1  (n1) ('NOID') CH1 (MOT2)  (n2) |  ...\n                  | LISM1 (n1) ('NOID') CH1 (LISM2) (n2) |\n\n            ... ('NATURE'|'INDETER')             \n                         |'DIFFUS' )             \n                         |'DISCRET') ;             \n                  \n\n    Objet :\n    _______\n\n    Cet operateur cree a partir d'un champ, un champ de meme type en\nextrayant une ou plusieurs composantes donnees.\n\n\n    Commentaire :\n    _____________\n\n    CH2   : objet resultat de meme type que CH1 (type CHPOINT ou MCHAML)\n            \n    CH1   : champ a traiter (type CHPOINT ou MCHAML)\n\n    MOT1  : nom de la composante a extraire du champ CH1 (type MOT)\n\n    MOT2  : nouveau nom donne a la composante extraite (type MOT)\n\n    LISM1 : liste des composantes a extraire du champ CH1 \n            (type LISTMOTS)\n\n    LISM2 : liste des nouveaux noms donnes aux composantes extraites \n            (type LISTMOTS)\n    \n    Dans le cas 2D Fourier,\n    n1    : harmonique de Fourier a extraire (type ENTIER)                \n    n2    : nouvelle harmonique de Fourier a donner (type ENTIER)            \n\n    'NOID' : mot cle indiquant de ne pas faire d'erreur si une \n             composante est absente du champ CH1. Il doit absolument \n             etre positionne avant MOT2.\n\n    Remarques :\n    ___________\n\n 1. Dans le cas de l'extraction d'une seule composante d'un champ, le \n    nom de la composante extraite est MOT2 (type MOT) si ce MOT est \n    fourni, sinon le nom de la composante extraite est MOT1 dans le cas  \n    des champs de type MCHAML et 'SCAL' dans le cas des champs de type \n    CHPOINT.\n\n    Si la composante de nom MOT1 n'existe pas dans le champ CH1,\n    l'operateur signale une erreur sauf si on emploie le mot 'NOID'.\n    Dans ce cas, l'operateur cree un champ CH2 vide.\n\n 2. Dans le cas de l'extraction de plusieurs composantes d'un champ,\n    les composantes extraites gardent leur nom, sauf si LISM2 est donne.\n    Dans ce cas, LISM1 et LISM2 doivent avoir le meme nombre de \n    composantes.\n\n    Si une composante definie dans LISM1 n'existe pas dans le champ CH1,\n    l'operateur signale une erreur sauf si on emploie le mot 'NOID'.\n\n 3. Dans le cas 2D Fourier, si n1 ou n2 n'est pas fourni, l'harmonique \n    de Fourier par defaut (cf. OPTI) est utilisee.\n  \n 4. Preciser la nature n'est possible que si l'on travaille avec des \n    champs de points (CHPOINT). Si elle n'est pas specifiee, on garde \n    celle du champ par point argument.\n    ",
  },
  {
    name: "EXCP",
    url: "EXCP",
    documentation:
      "$$$$ EXCP     NOTICE  CB215821  19/02/25    21:16:08     10119          \n                                             DATE     19/02/25\n\n    Operateur EXCP                           Voir aussi : PMAT PHAJ\n    --------------                                        PROP RESO  \n      CHP3 = 'EXCP' MOD1 MAT1 QLINT PROP0 CHP1 CHP2 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur 'EXCP'  calcule  la   chaleur  latente   qu'il  faudrait\n    consommer  pour finir  de  changer de  phase.  Ce resultat  est  mis\n    sous  forme directement exploitable  par  l'operateur 'RESO'.\n    \n    Cet operateur est automatiquement appele dans la procedure TRANSNON.\n\n\n      Commentaire :\n      _____________\n\n      MOD1  : objet de type MMODEL contenant une formulation de type\n             'CHANGEMENT_PHASE'.\n\n      MAT1 :  objet MCHAML des caracteristiques. La composante  'PRIM'\n              est  attendue constante par SOUS-ZONE.\n\n      PROP0 : objet de type MCHAML contenant les proportions de phases\n              initiales.\n\n      QLINT : objet de type MCHAML contenant la quantite latente\n              integree sur l'element (aux NOEUDS) avec l'operateur 'SOUR'.\n\n      CHP1  : objet CHPOINT contenant les inconnues initiales.\n\n      CHP2  : objet CHPOINT contenant l'increment des inconnues et les\n              reactions 'LX' sur les blocages (si sortie de 'RESO').\n\n      CHP3  : objet CHPOINT des chaleurs latentes exprimees sur les\n              multiplicateurs de lagrange ('LX') a injecter comme argument\n              de l'operateur 'RESO'.",
  },
  {
    name: "EXEC",
    url: "EXEC",
    documentation:
      "$$$$ EXEC     NOTICE  GOUNAND   14/06/04    21:15:03     8050           \n                                             DATE     14/06/04\n\n    Procedure EXEC                           Voir aussi : EQEX MODE\n    --------------                                        DOMA  KCHT  \n                                                          KRES  \n    EXEC  TAB1  ;                                       \n\n\n\n\n\n    Objet :\n    _______\n\n   I/ TRANSPORT/DIFFUSION D'UN SCALAIRE\n\n    Cette procedure permet d'effectuer un calcul du transport\n   (convection/diffusion), d'un scalaire passif, en transitoire ou en\n   regime permanent, en presence de conditions aux limites variees, valeur\n   imposee, flux, echange avec le milieu exterieur, source etc. Le\n   calcul peut etre lineaire ou non. Les non linearites sont resolues\n   par une methode de point fixe. La description de l'equation a\n   resoudre se fait a l'aide de l'operateur EQEX qui cree la table TAB1.\n   Le scalaire peut aussi bien etre la temperature qu'une concentration\n   ou toute grandeur physique intensive.\n   Les parametres de l'algorithme sont definis dans la table TAB1 a l'aide\n   de EQEX.\n\n\n   I.1/ Calcul transitoire explicite.\n\n   Le pas de temps est soumis a une contrainte de stabilite. Il peut etre\n   impose ou calcule automatiquement.\n   Les non linearites, notamment sur les proprietes physiques,peuvent\n   etre resolues en les actualisant dans une procedure de calcul appelee\n   a chaque pas de temps. Le regime permanent peut etre obtenu comme\n   limite asymptotique du transitoire.\n\n*.Exemple I.1 :.........................................................\n* Procedure calculant une propriete physique dependant de la temperature\n\n      'DEBP' CALCUL ;\n      'ARGU' RX*TABLE ;\n      iarg = rx . 'IARG' ;\n      rv   = rx . 'EQEX' ;\n*Lecture des arguments de l'operateur calcul\n      'SI' ( 'NON' ( 'EGA' iarg 1)) ;\n        'MESS' 'Procedure CALCUL : nombre d arguments incorrect ' iarg ;\n        'QUIT' CALCUL ;\n      'FINSI' ;\n\n      'SI' ( 'EGA' ('TYPE' rx . 'ARG1') 'MOT     ') ;\n        TN = rv . 'INCO' . (rx . 'ARG1') ;\n      'SINON' ;\n        'MESS' 'Procedure CALCUL : type argument invalide ' ;\n        'QUIT' CALCUL ;\n      'FINSI' ;\n\n* La temperature est exprimee en Kelvin\n      T = TN + 273. ;\n*Viscosite dynamique : loi de Sutherland : Kg/m/s\n      MU = 1.648*(T**1.5) * ('INVE' (T + 0.648))\n*conductivite : loi de Sutherland : W/m/oC\n      LB = 1.368*(T**1.5) * ('INVE' (T + 0.368))\n*J/kg/oC\n      CP = 1015 ;\n* Nombre de Prandtl\n      Pr = MU * CP * ('INVE' LB)\n* le Reynolds est donne\n      Re = 400. ;\n      Pe = Re * Pr ;\n      rv . 'INCO' . 'IPE' = 'INVE' Pe ;\n* La derniere instruction cree des objet vides\n* pour satisfaire la procedure EXEC\n      as2 ama1  = 'KOPS' 'MATRIK' ;\n      'FINPROC' as2 ama1 ;\n\n* On cree la table RV decrivant le probleme physique\n* On choisit un algorithme explicite (OPTI 'EFM1')\n* Le pas de temps est calcule automatiquement\n* (mot cle 'DELTAT' sur DFDT)\n* On fera 200 pas de temps\n* Le Peclet est calcule dans la procedure CALCUL\n\n      RV = 'EQEX' 'OMEGA' 1. 'NITER' 1 'ITMA' 200\n      'ZONE' $mt  'OPER' CALCUL 'TN'\n      'OPTI' 'EFM1' 'SUPG'\n      'ZONE' $mt  'OPER' 'TSCA' 'IPE' 'UN' 0. 'INCO' 'TN'\n      'OPTI' 'EFM1' 'CENTREE'\n      'ZONE' $mt  'OPER' 'DFDT' 1. 'TN' 'DELTAT' 'INCO' 'TN'\n      'CLIM' 'TN' 'TIMP' entree 0. 'TN' 'TIMP' paroi  1.\n      ;\n      rv . 'INCO' = 'TABLE' 'INCO' ;\n      rv . 'INCO' .'UN'= 'KCHT' $mt 'VECT' 'SOMMET' (1. 0.) ;\n      rv . 'INCO' .'TN'= 'KCHT' $mt 'SCAL' 'SOMMET' 0. ;\n\n      EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple I.1 ......................................................\n\n   I.2/ Calcul direct d'un regime permanent.\n\n   - On peut faire une recherche directe d'un regime permanent avec\n   des iterations internes pour resoudre les non-linearites.\n\n*.Exemple I.2 :.........................................................\n\n* On cree la table RV decrivant le probleme physique\n* On choisit un algorithme IMPLICITE (OPTI 'EF' 'IMPL')\n* On fera 10 iterations avec un facteur de relaxation de OMEGA=0.5\n* Le Peclet est calcule dans la procedure CALCUL decrite dans\n* l'exemple 1.\n\n      RV = 'EQEX' 'OMEGA' 0.5 'NITER' 10 'ITMA' 0\n      'ZONE'  $mt 'OPER' CALCUL 'TN'\n      'OPTI' 'EF' 'SUPG' 'IMPL'\n      'ZONE'  $mt 'OPER' 'TSCA' 'IPE' 'UN' 0. 'INCO' 'TN'\n      'CLIM' 'TN' 'TIMP' entree 0. 'TN' 'TIMP' paroi  1.\n      ;\n      rv . 'INCO' = 'TABLE' 'INCO' ;\n      rv . 'INCO' . 'UN' = 'KCHT' $mt 'VECT' 'SOMMET' (1. 0.) ;\n      rv . 'INCO' . 'TN' = 'KCHT' $mt 'SCAL' 'SOMMET' 0. ;\n\n      EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple I.2 ......................................................\n\n   I.3/ Calcul transitoire implicite.\n\n   - On peut faire un calcul transitoire implicite avec ou sans\n   iterations internes a chaque pas de temps.\n\n*.Exemple I.3 :.........................................................\n\n* On cree la table RV decrivant le probleme physique\n* On choisit un algorithme IMPLICITE (OPTI 'EF' 'IMPL') ordre 1 en\n* temps ou mieux un schema en temps d'ordre 2 (Crank Nicolson)\n* ('OPTI' 'EF' 'SUPG' 'SEMI' 0.5)\n* On fera 10 pas de temps sans iteration interne\n* Le Peclet est calcule dans la procedure CALCUL decrite dans\n* l'exemple 1.\n\n      dt = 1. ;\n\n      RV = 'EQEX' 'OMEGA' 1. 'NITER' 1 'ITMA' 10\n      'ZONE'  $mt 'OPER' CALCUL 'TN'\n      'OPTI' 'EF' 'SUPG' 'SEMI' 0.5\n      'ZONE'  $mt 'OPER' 'TSCA' 'IPE' 'UN' 0. 'INCO' 'TN'\n      'CLIM' 'TN' 'TIMP' entree 0. 'TN' 'TIMP' paroi  1.\n      'OPTI' 'EF' 'CENTREE'\n      'ZONE'  $mt 'OPER' 'DFDT' 1. 'TN' dt 'INCO' 'TN'\n      ;\n      rv . 'INCO' = 'TABLE' 'INCO' ;\n      rv . 'INCO' . 'UN'= 'KCHT' $mt 'VECT' 'SOMMET' (1. 0.) ;\n      rv . 'INCO' . 'TN'= 'KCHT' $mt 'SCAL' 'SOMMET' 0. ;\n\n      EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple I.3 ......................................................\n\n\n   II/ NAVIER STOKES INCOMPRESSIBLE\n\n    La procedure permet de resoudre les equations de Navier_Stokes par\n   une methode d'elements finis (EF) en variables primitives (vitesse et\n   pression), pour un ecoulement incompressible, ou faiblement compre-\n   ssible, en regime permanent ou en transitoire. Les conditions limites\n   peuvent etre variees, vitesse imposee, pression imposee, source de\n   quantite de mouvement, perte de charge ... etc. Le calcul peut etre\n   lineaire ou non. Les non linearites sont resolues par une methode de\n   point fixe. La description de l'equation a resoudre se fait a\n   l'aide de l'operateur EQEX qui cree la table TAB1.\n   Trois algorithmes sont proposes pour resoudre le systeme vitesse-\n   pression.\n   - Un algorithme semi-explicite : implicite pour la pression, explicite\n   pour la vitesse et eventuellement toutes les autres quantites\n   scalaires transportees (a la Gresho).\n   - Un algorithme implicite : resolution directe du systeme en vitesse-\n   pression (a la Taylor-Hood). Cet algorithme permet aussi de faire une\n   recherche directe d'un regime permanent.\n   - Une methode de projection : cet algorithme consiste en deux etapes :\n   une premiere etape de transport diffusion et une seconde de projection\n   sur un espace a divergence nulle (a la Chorin Temam) .\n\n    Les parametres de l'algorithme sont definis dans la table TAB1\n   Les non linearites, notamment sur les proprietes physiques,peuvent\n   etre resolues, comme precedemment, par l'intermediaire d'une methode de\n   point fixe, en actualisant dans une procedure les non linearites.\n   de calcul appelee a chaque pas de temps ou chaque iteration.\n    Le regime permanent peut etre obtenu comme limite asymptotique du\n   transitoire\n\n\n   II.1/ Calcul semi-explicite\n\n   - On peut faire un calcul transitoire semi explicite. La pression est\n   implicite, la vitesse explicite. De ce fait le pas de temps est soumis\n   a une contrainte de stabilite de type CFL liee a la convection ou a la\n   diffusion. Le pas de temps peut etre impose ou calcule automatiquement\n   (mot cle 'DELTAT' en 3eme argument de DFDT).\n   L'algorithme necessite en general un grand nombre de pas de temps.\n   La construction de la table se fait en deux etapes.\n   - Une premiere etape consiste a creer une table decrivant la partie\n   explicite.\n   - Dans la deuxieme etape on construit la table decrivant les operateurs\n   lies a la pression.\n   Les conditions de vitesse normale ou vitesse tangente en font partie.\n   Elles sont traitees a l'aide de multiplicateurs de Lagrange. Par contre\n   dans nos formulations elements finis (formulation faible) la condition\n   de pression imposee n'en fait pas partie. La pression est imposee comme\n   les contraintes visqueuses sur l'equation de quantite de mouvement.\n   - Enfin on place la deuxieme table a l'indice 'POISSON' de la premiere.\n\n    L'indice rv.'CALPRE' = VRAI de la premiere table indique que l'on\n   recalcule a chaque pas de temps la matrice de pression. Ceci est\n   necessaire en formulation A.L.E.\n    rv.'CALPRE' = FAUX ou l'absence de cet indice fait que la matrice de\n   pression sera calculee une fois pour toute.\n\n   Le positionnement de la variable rv.'DETMAT' a VRAI indique que les\n    objets MATRIK seront detruits a la fin de la procedure.\n\n*.Exemple II.1  :...........................................................\n* Cas de la cavite carree a paroi defilante\n* !!!! ATTENTION : La cavite etant fermee (V.n impose sur toute la frontiere)\n* il est necessaire d'imposer la pression en un point.\n\n\n   ro = 400. ;\n   mu = 1. ;\n\n   RV = 'EQEX' 'OMEGA' 1. 'NITER' 1 'ITMA' 500 'ALFA' 0.5\n   'OPTI' 'EFM1' 'SUPG'\n   'ZONE'  $mt   'OPER' 'NS' (mu/ro) 'INCO' 'UN'\n   'OPTI' 'EFM1' 'CENTREE'\n   'ZONE'  $mt   'OPER' 'DFDT' 1. 'UN' 'DELTAT' 'INCO' 'UN'\n   ;\n   RV = 'EQEX' RV\n   'CLIM'  'UN' 'UIMP' CD  1. 'UN' 'VIMP' CD 0.\n           'UN' 'UIMP' DA  0. 'UN' 'VIMP' DA 0.\n           'UN' 'UIMP' AB  0. 'UN' 'VIMP' AB 0.\n           'UN' 'UIMP' BC  0. 'UN' 'VIMP' BC 0. ;\n* Le choix d'une methode iterative (Bicg stab + preconditionement MILU0)\n* permet de passer des cas un peu plus gros. (Faire INFO KRES ; )\n   rv. 'METHINV' . 'TYPINV'  = 3 ;\n   rv. 'METHINV' . 'IMPINV'  = 0 ;\n   rv. 'METHINV' . 'NITMAX'  = 400 ;\n   rv. 'METHINV' . 'PRECOND' = 3 ;\n   rv. 'METHINV' . 'RESID'   = 1.e-8 ;\n   rv. 'METHINV' . 'FCPRECT' = 1 ;\n   rv. 'METHINV' . 'FCPRECI' = 1 ;\n\n   betastab=1.e2 ;\n\n   RVP = 'EQEX'\n   'OPTI' 'EF' 'CENTRE'\n   'ZONE' $mt 'OPER' 'KBBT' -1. betastab 'INCO' 'UN' 'PRES'\n   'CLIM' 'PRES' 'TIMP' bcp 0. ;\n\n   rvp . 'METHINV' . 'TYPINV'  = 2 ;\n   rvp . 'METHINV' . 'IMPINV'  = 0 ;\n   rvp . 'METHINV' . 'NITMAX'  = 300 ;\n   rvp . 'METHINV' . 'PRECOND' = 3 ;\n   rvp . 'METHINV' . 'RESID'   = 1.e-8 ;\n   rvp . 'METHINV' . 'FCPRECT' = 100 ;\n   rvp . 'METHINV' . 'FCPRECI' = 100 ;\n\n   rv . 'POISSON' = rvp ;\n\n   rv . 'INCO' = 'TABLE' 'INCO' ;\n   rv . 'INCO' .'UN'   = 'KCHT' $mt 'VECT' 'SOMMET' (0. 0.) ;\n   rv . 'INCO' .'PRES' = 'KCHT' $mt 'SCAL' 'CENTRE' 0. ;\n\n    EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple II.1 .....................................................\n\n\n   II.2/ Calcul implicite.\n\n   - On peut faire un calcul transitoire implicite avec ou sans\n   iterations internes a chaque pas de temps.\n\n*.Exemple II.2  :...........................................................\n* Cas de la cavite carree a paroi defilante\n* !!!! ATTENTION : La cavite etant fermee (V.n impose sur toute la frontiere)\n* il est necessaire d'imposer la pression en un point.\n\n\n   ro = 400. ;\n   mu = 1. ;\n   dt = 5. ;\n\n   RV = 'EQEX' 'OMEGA' 1. 'NITER' 1 'ITMA' 20\n   'OPTI' 'EF' 'IMPL' 'SUPG'\n   'ZONE  $mt  'OPER' 'LAPN' mu 'INCO' 'UN'\n   'ZONE  $mt  'OPER' 'KONV' ro 'UN' mu dt 'INCO' 'UN'\n   'OPTI' 'EF' 'CENTREE'\n   'ZONE  $mt  'OPER' 'DFDT' ro 'UN' dt 'INCO' 'UN'\n   'OPTI' 'EF' 'CENTREP1'\n   'ZONE  $mt  'OPER' 'KBBT' 1. 'INCO' 'UN' 'PRES'\n   ;\n   RV = 'EQEX' RV\n   'CLIM' 'PRES' 'TIMP' bcp 0.\n          'UN' 'UIMP' CD  1. 'UN' 'VIMP' CD 0.\n          'UN' 'UIMP' DA  0. 'UN' 'VIMP' DA 0.\n          'UN' 'UIMP' AB  0. 'UN' 'VIMP' AB 0.\n          'UN' 'UIMP' BC  0. 'UN' 'VIMP' BC 0. ;\n* Le choix d'une methode iterative (Bicg stab + preconditionement MILU0)\n* permet de passer des cas un peu plus gros. (Faire INFO KRES ; )\n   rv . 'METHINV' . 'TYPINV'  = 3 ;\n   rv . 'METHINV' . 'IMPINV'  = 0 ;\n   rv . 'METHINV' . 'NITMAX'  = 400;\n   rv . 'METHINV' . 'PRECOND' = 3 ;\n   rv . 'METHINV' . 'RESID'   = 1.e-8 ;\n   rv . 'METHINV' . 'FCPRECT' = 1 ;\n   rv . 'METHINV' . 'FCPRECI' = 1 ;\n\n   rv . 'INCO' = 'TABLE' 'INCO' ;\n   rv . 'INCO' . 'UN'   = 'KCHT' $mt 'VECT' 'SOMMET' (0. 0.) ;\n   rv . 'INCO' . 'PRES' = 'KCHT' $mt 'SCAL' 'CENTREP1' 0. ;\n\n   EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple II.2 .....................................................\n\n   II.3/ Calcul direct d'un regime permanent.\n\n   - On peut faire une recherche directe d'un regime permanent avec\n   des iterations internes pour resoudre les non-linearites.\n\n*.Exemple II.3  :...........................................................\n* Cas de la cavite carree a paroi defilante\n* !!!! ATTENTION : La cavite etant fermee (V.n impose sur toute la frontiere)\n* il est necessaire d'imposer la pression en un point.\n\n   ro = 400. ;\n   mu = 1. ;\n\n   RV = 'EQEX' 'OMEGA' 0.7 'NITER' 10 'ITMA' 0\n   'OPTI' 'EF' 'IMPL' 'SUPG'\n   'ZONE'  $mt  'OPER' 'LAPN' mu 'INCO' 'UN'\n   'ZONE'  $mt  'OPER' 'KONV' ro 'UN' mu 'INCO' 'UN'\n   'OPTI' 'EF'  'CENTREP1'\n   'ZONE'  $mt  'OPER' 'KBBT' 1.         'INCO' 'UN' 'PRES'\n   ;\n   RV = 'EQEX' RV\n   'CLIM' 'PRES' 'TIMP' bcp 0.\n          'UN' 'UIMP' CD  1. 'UN' 'VIMP' CD 0.\n          'UN' 'UIMP' DA  0. 'UN' 'VIMP' DA 0.\n          'UN' 'UIMP' AB  0. 'UN' 'VIMP' AB 0.\n          'UN' 'UIMP' BC  0. 'UN' 'VIMP' BC 0. ;\n* Le choix d'une methode iterative (Bicg stab + preconditionement MILU0)\n* permet de passer des cas un peu plus gros. (Faire INFO KRES ; )\n   rv . 'METHINV' . 'TYPINV'  = 3 ;\n   rv . 'METHINV' . 'IMPINV'  = 0 ;\n   rv . 'METHINV' . 'NITMAX'  = 400;\n   rv . 'METHINV' . 'PRECOND' = 3 ;\n   rv . 'METHINV' . 'RESID'   = 1.e-8 ;\n   rv . 'METHINV' . 'FCPRECT' = 1 ;\n   rv . 'METHINV' . 'FCPRECI' = 1 ;\n   rv . 'INCO' = 'TABLE' 'INCO' ;\n   rv . 'INCO' .'UN'   = 'KCHT' $mt 'VECT' 'SOMMET' (0. 0.) ;\n   rv . 'INCO' .'PRES' = 'KCHT' $mt 'SCAL' 'CENTREP1' 0. ;\n\n   EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple II.3 .....................................................\n\n\n\n   II.4/ Methode de projection\n\n   - On peut faire un calcul transitoire implicite en decouplant la reso-\n   lution de l'equation de quantite de mouvement de la resolution de l'eq-\n   uation de continuite. Le pas de temps n'est plus soumis a une contrainte\n   de stabilite de type CFL. Cependant en pratique on ne peut pas prendre\n   un pas de temps arbitrairement grand.\n   L'algorithme necessite beaucoup moins de pas de temps que l'algorithme\n   semi explicite. A l'usage il s'avere etre le plus economique pour un\n   calcul transitoire voire meme un calcul permanent.\n\n   - La mise en oeuvre est assez similaire a la difference que les opera-\n   teurs peuvent etre implicites.\n\n   La construction de la table se fait en deux etapes.\n   - Une premiere etape consiste a creer une table decrivant l'equation\n   de quantite de mouvement.\n   - Dans la deuxieme etape on construit la table decrivant les operateurs\n   lies a la projection (div U = 0)\n   Les conditions de vitesse normale ou vitesse tangente en font partie,\n   elles sont traitees a l'aide de multiplicateurs de Lagrange.\n\n   Comme dans l'algorithme semi explicite la condition de pression imposee\n   n'en fait pas partie. La pression est imposee comme les contraintes\n   visqueuses sur l'equation de quantite de mouvement.\n\n   - Enfin on place la deuxieme table a l'indice 'PROJ' de la premiere.\n\n    L'indice rv.'CALPRE' = VRAI de la premiere table indique que l'on\n   recalcule a chaque pas de temps la matrice de pression. Ceci est\n   necessaire en formulation A.L.E.\n    rv.'CALPRE' = FAUX ou l'absence de cet indice fait que la matrice de\n   pression sera calculee une fois pour toute.\n\n*.Exemple II.4  :...........................................................\n* Cas de la cavite carree a paroi defilante\n* !!!! ATTENTION : La cavite etant fermee (V.n impose sur toute la frontiere)\n* il est necessaire d'imposer la pression en un point.\n\n\n   ro = 400. ;\n   mu = 1. ;\n   dt = 1. ;\n\n   RV = 'EQEX' 'OMEGA' 1. 'NITER' 1 'ITMA' 500 'ALFA' 0.5\n   'OPTI' 'EF' 'IMPL' 'SUPG'\n   'ZONE'  $mt 'OPER'  'NS'  (mu/ro) 'INCO' 'UN'\n   'OPTI' 'EFM1' 'CENTREE'\n   'ZONE'  $mt 'OPER' 'DFDT' 1. 'UN' dt 'INCO' 'UN'\n   'CLIM' 'UN' 'UIMP' CD  1. 'UN' 'VIMP' CD 0.\n          'UN' 'UIMP' DA  0. 'UN' 'VIMP' DA 0.\n          'UN' 'UIMP' AB  0. 'UN' 'VIMP' AB 0.\n          'UN' 'UIMP' BC  0. 'UN' 'VIMP' BC 0. ;\n* Le choix d'une methode iterative (Bicg stab + preconditionement MILU0)\n* permet de passer des cas un peu plus gros. (Faire INFO KRES ; )\n    rv . 'METHINV' . 'TYPINV'  = 3 ;\n    rv . 'METHINV' . 'IMPINV'  = 0 ;\n    rv . 'METHINV' . 'NITMAX'  = 400 ;\n    rv . 'METHINV' . 'PRECOND' = 3 ;\n    rv . 'METHINV' . 'RESID'   = 1.e-8 ;\n    rv . 'METHINV' . 'FCPRECT' = 1 ;\n    rv . 'METHINV' . 'FCPRECI' = 1 ;\n\n    betastab=1.e2 ;\n\n    RVP = 'EQEX'\n    'OPTI' 'EF' 'CENTRE'\n    'ZONE'  $mt 'OPER' 'KBBT' -1. betastab 'INCO' 'UN' 'PRES'\n    'CLIM' 'PRES' 'TIMP' bcp 0. ;\n\n    rvp . 'METHINV' . 'TYPINV'  = 2 ;\n    rvp . 'METHINV' . 'IMPINV'  = 0 ;\n    rvp . 'METHINV' . 'NITMAX'  = 300;\n    rvp . 'METHINV' . 'PRECOND' = 3 ;\n    rvp . 'METHINV' . 'RESID'   = 1.e-8 ;\n    rvp . 'METHINV' . 'FCPRECT' = 100 ;\n    rvp . 'METHINV' . 'FCPRECI' = 100 ;\n\n    rv . 'PROJ' = RVP ;\n\n    rv . 'INCO' = 'TABLE' 'INCO' ;\n    rv . 'INCO' . 'UN'   = 'KCHT' $mt 'VECT' 'SOMMET' (0. 0.) ;\n    rv . 'INCO' . 'PRES' = 'KCHT' $mt 'SCAL' 'CENTRE' 0. ;\n\n    EXEC RV ;\n\n* Les resultats se trouvent dans la table rv . 'INCO'\n\n*.Fin exemple II.4 .....................................................\n\n    Remarques :\n    ___________\n\n    1) Le positionnement de la variable rv.'DETMAT' a VRAI indique que\n       les objets MATRIK seront detruits a la fin de la procedure.\n\n    2) Deux variables de type LOGIQUE resp. rv.'STOPITER' et \n       rv.'STOPPDT' initialisees a FAUX peuvent etre mises a VRAI (par\n       exemple a l'aide d'une procedure utilisateur) afin de stopper\n       resp. la boucle de resolution de la non-linearite et la boucle\n       sur les pas de temps. \n       L'indice rv . 'NUITER' contient le numero de l'iteration non\n       lineaire courante.\n\n    3) Il est possible d'utiliser une methode de projection algebrique\n       incrementale pour resoudre le systeme NS incompressible de \n       maniere approchee en gardant la meme syntaxe qu'en calcul\n       transitoire implicite et en rajoutant une table a l'indice \n       'GPROJ' :\n        rv . 'GPROJ' = 'TABLE' ;\n        rv . 'GPROJ' . 'NOMVIT'  = 'UN' ;\n        rv . 'GPROJ' . 'NOMPRES' = 'CHAINE' 'PRES' ;\n       ou 'UN' est le nom de l'inconnue vitesse et 'PRES' le nom \n       de l'inconnue pression.\n       Il est egalement possible de donner une table a l'indice :\n        rv . 'GPROJ' . 'METHINV'\n       precisant les options pour l'inversion de la matrice de pression.\n       (cf. notice KRES)\n       On peut \u00e9galement pr\u00e9ciser si on veut une m\u00e9thode de simple ou double  \n       projection :\n       rv . 'GPROJ' . 'dblproj' = FAUX ou VRAI (VRAI par d\u00e9fault)",
  },
  {
    name: "EXECRXT",
    url: "EXECRXT",
    documentation:
      "$$$$ EXECRXT  NOTICE  SERRE     21/07/15    21:15:00     11059          \n                                             DATE     21/07/15\n\n  Procedure EXECRXT                        Voir aussi :\n    ----------------  \n      EXECRXT NDT RXT ;\n\n\n\n    Commentaires\n    ____________\n\n    NDT ENTI1 : nombre de pas de temps \n    RXT TAB1  : table contenant les informations permettant de calculer\n                l'evolution de la composition d'un melange gazeux dans\n                une enceinte fermee\n\n\n    OBJET :\n    -----\n\n  La procedure EXECRXT calcule, a partir d'un etat initial, l'evolution\n au cours du temps d'un melange gazeux dans une enceinte fermee.\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Generalites\n2. Objets geometriques\n3. Modelisation Physique\n    3.1 Loi d'etat pour la vapeur\n    3.2 Thermique parois\n    3.3 Temperature de paroi imposee\n    3.4 Conditions initiales\n    3.5 Conditions aux limites\n    3.6 Turbulence\n    3.7 Aspersion\n    3.8 Condensation en masse (en test)\n    3.9 PAR (recombineur catalytique passif)\n    3.10 Condensation en parois\n4. Parametres de fonctionnement\n    4.1 Table RXT\n    4.2 Limitations du modele actuel\n    4.3 Quelques recettes\n5. Resultats du calcul\n    5.1 Table rxt.'TIC'\n    5.2 Table rxt.'GEO'\n\n  \n1. Generalites1 \n============== \n  L'etat initial est uniforme en espace lorsqu'il est donne par\n l'utilisateur, issu d'un calcul precedent sinon.\n\n  L'air est toujours present dans le melange gazeux. Il peut aussi contenir un\n ou plusieurs des constituants suivants: vapeur d'eau, H2, N2, He, O2, CO et\n CO2. Les gaz incondensables sont modelises par la loi des gaz parfaits. C'est\n aussi le choix par defaut de la vapeur (version V0), un modele gaz reel etant\n en test (version V1).\n\n  En presence de vapeur la condensation en paroi peut apparaitre si les\n conditions locales sont reunies (Pvap > Psat). Le modele de condensation est\n de type Chilton-Colburn et associe a une correlation d'echange de type\n convection naturelle le long d'une plaque plane verticale.\n\n  On distingue 4 types de conditions aux limites suivant la nature de la\n frontiere du domaine fluide : zones d'injection (breches), ventilation forcee\n et clapet de decharge (sorties), parois thermiques et parois inertes :\n\n  - sur les zones d'injection ou breches, on impose des conditions aux limites\n de type valeur imposee pour la vitesse, la temperature du melange, la densite\n du melange et de ses constituants. Il faut donc y preciser le debit massique\n de chaque constituant du melange (kg/s) et la temperature d'entree (oC) (voir\n entree 'scenario' des Breches) ;\n\n  - sur les sorties, on impose un debit (ventilation) et on precise les\n parametres de la perte de charge (clapet de decharge) (voir entree 'scenario'\n des Sorties) ;\n  \n  - sur les parois thermiques, la vitesse est nulle (suf si fonction de paroi\n (entree FPAROI)) et la temperature evolue au cours du temps (entree TIMP), est\n a priori constante (entree ECHANP), le resultat d'un calcul de thermique paroi\n (entree THERMP). Pour ce dernier cas, il est possible de coupler la resolution\n des equations de l'enrergie paroi et fluide de fa\u00e7on implicite (entree\n THERCO). En presence de vapeur les parois thermiques sont susceptibles de\n condenser. Elles sont par contre impermeables pour tous les incondensables.\n\n  - sur les parois inertes, la vitesse est nulle, et elles sont impermeables\n pour toutes les autres inconnues (temperature, vapeur et gaz incondensables).\n Les parois inertes correspondent au maillage obtenu par difference entre\n l'enveloppe du volume fluide et les parois, breches et sorties.\n\n Par suite, les conditions aux limites sont correctement definies.\n\n  La turbulence des mouvements de gaz est modelisee soit par une viscosite\n tourbillonnaire constante, soit par un modele de longueur de melange soit par\n un modele K-epsilon (entree MODTURB). En absence de l'entree MODTURB,\n l'ecoulement est laminaire.\n\n  Un modele d'aspersion est disponible.\n\n  Un modele de condensation en masse est en test.\n\n  Au moyen du fichier d'extension dgibi, l'utilisateur transmet a CAST3M les\n donnees du scenario etudie. Regroupees dans la table notee RXT a differents\n indices qui sont precises dans cette notice, le transitoire est alors calcule\n par la procedure EXECRXT avec la table RXT et le nombre de pas de temps ndt en\n donnees d'entree :\n\n   EXECRXT ndt rxt ;\n\n  La table RXT est completee au moment de l'execution par trois tables :\n  - la sous table rxt.'GEO' contient les modeles et objets geometriques crees a \n partir des donnees fournies.\n  - la sous table rxt.'TBT' est la table de travail proprement dite et contient\n les autres objets crees necessaires au calcul hormis les inconnues.\n  - la sous table rxt.'TIC' contient les inconnues au dernier temps connu\n (temps calcule ou condition initiale) ainsi que les champs variables en temps.\n\n Les entrees de RXT fournis par l'utilisateur ne sont donc pas modifiees.\n\n Les indices de RXT sont les presentes ci-dessous.\n  \n2. Objets geometriques \n====================== \n \n rxt . 'vtf'    = GEO1   ; maillage fluide (OBLIGATOIRE)\n rxt . 'pi'     = POI1   ; point interieur du domaine fluide ou sera imposee\n                           la pression (OBLIGATOIRE).\n rxt . 'axe'    = GEO2   ; axe de revolution si 2D AXI\n\n  On peut definir un nombre quelconque de Breches en indiquant le nom de la\n breche, son maillage et la direction du champ de vitesse a la breche autant\n de fois que necessaire :\n\n rxt . 'Breches' = 'TABLE'                     ; data des Breches\n rxt . 'Breches' . MOT1              = 'TABLE' ; data de la breche MOT1\n rxt . 'Breches' . MOT1 . 'Maillage' = GEO1    ; maillage surfacique de MOT1\n rxt . 'Breches' . MOT1 . 'diru'     = POI1    ; direction de la vitesse\n\n avec MOT1 le nom de la breche choisie par l'utilisateur.\n\n  On peut definir un nombre quelconque de Sorties en indiquant le nom de la\n sortie, son maillage et la direction du champ de vitesse a la sortie autant\n de fois que necessaire :\n\n rxt . 'Sorties' = 'TABLE'                     ; data des Sorties\n rxt . 'Sorties' . MOT1              = 'TABLE' ; data de la sortie MOT1\n rxt . 'Sorties' . MOT1 . 'Maillage' = GEO1    ; maillage surfacique de MOT1\n rxt . 'Sorties' . MOT1 . 'diru'     = POI1    ; direction de la vitesse\n\n avec MOT1 le nom de la sortie choisi par l'utilisateur.\n\n  On peut definir un nombre quelconque de PAROIS en indiquant le nom MOT1 de\n la paroi et son maillage autant de fois que necessaire :\n\n rxt . 'PAROIS' = 'TABLE'                     ; data des PAROIS\n rxt . 'PAROIS' . MOT1              = 'TABLE' ; data de la paroi MOT1\n rxt . 'PAROIS' . MOT1 . 'vtp'      = GEO1    ; maillage volumique de MOT1\n\n avec MOT1 le nom de la paroi choisi par l'utilisateur.\n\n  On peut definir un nombre quelconque de surface a temperature imposee en\n indiquant le nom MOT1 de la surface et son maillage autant de fois que\n necessaire :\n\n rxt . 'TIMP' = 'TABLE'                      ; data des surfaces a TIMP\n rxt . 'TIMP' . MOT1              = 'TABLE'  ; data de la surface MOT1\n rxt . 'TIMP' . MOT1 . 'MAILLAGE' = GEO1     ; maillage surfacique de MOT1\n\n avec MOT1 le nom de la paroi a temperature imposee choisi par l'utilisateur.\n \n  Exemple : On definit les breches A et B de la facon suivante :\n\n rxt . 'Breches' = 'TABL' ;\n rxt . 'Breches' . 'A'              = 'TABL'      ;\n rxt . 'Breches' . 'A' . 'Maillage' = surfacea    ;\n rxt . 'Breches' . 'A' . 'diru'     = (0. 0. 1.)  ;\n rxt . 'Breches' . 'B'              = 'TABL'      ;\n rxt . 'Breches' . 'B' . 'Maillage' = surfaceb    ;\n rxt . 'Breches' . 'B' . 'diru'     = (0. -1. 0.) ;\n  \n3. Modelisation Physique \n======================== \n \n  \n3.1 Loi d'etat pour la vapeur \n----------------------------- \n rxt . 'VERSION' = (MOT1) ;\n avec MOT1=('V0') si gaz parfait (par defaut), 'V1' si gaz reel (en test) \n\n\n  \n3.2 Thermique parois \n-------------------- \n  A. Activation\n  -------------\n\n  Certaines parois sont maillees en volume et on y calcule l'evolution de la\n temperature due aux echanges avec le fluide et le milieu ambiant. Les\n informations globales associees a la thermique paroi sont les suivantes :\n\n rxt . 'THERMP' = (LOG1) ; VRAI si thermique paroi (FAUX par defaut)\n rxt . 'THERCO' = (LOG2) ; VRAI si couplage paroi/fluide implicite (FAUX)\n rxt . 'ECHAN'  = FLOT1  ; coefficient d'echange fluide / paroi (W/m2/oC)\n\n En cas de condensation, la valeur du coefficient d'echange convectif FLOT1\n est ecrasee par HTC, celle issue de la correlation associee au modele de \n condensation, sauf si FLOT1 lui est superieure : HT = max(FLOT1,HTC). La \n valeur fournie est donc un seuil.\n\n\n  B. Proprietes des PAROIS\n  ------------------------\n\n  Pour chaque paroi MOT1, on precise les proprietes de la paroi par :\n\n rxt . 'PAROIS' . MOT1 . 'vtp'    = GEO1  ; maillage de MOT1\n rxt . 'PAROIS' . MOT1 . 'LAMBDA' = FLOT1 ; condu. thermique de MOT1 (W/m/oC)\n rxt . 'PAROIS' . MOT1 . 'ROCP'   = FLOT2 ; rho*Cp de MOT1 (J/m3/oC)\n rxt . 'PAROIS' . MOT1 . 'Tp0'    = FLOT3 ; temperature initiale de MOT1 (oC)\n\n Par exemple, on definit ainsi les parois 'Peinture' et 'Acier' :  \n\n rxt . 'PAROIS' = 'TABL' ;\n rxt . 'PAROIS' . 'Peinture' = 'TABL'              ;\n rxt . 'PAROIS' . 'Peinture' .'vtp'    = mpeinture ;\n rxt . 'PAROIS' . 'Peinture' .'LAMBDA' = 0.2       ;\n rxt . 'PAROIS' . 'Peinture' .'ROCP'   = 1.E6      ;\n rxt . 'PAROIS' . 'Peinture' .'Tp0'    = 60.       ;\n rxt . 'PAROIS' . 'Acier' = 'TABL'            ;\n rxt . 'PAROIS' . 'Acier' . 'vtp'    = macier ;\n rxt . 'PAROIS' . 'Acier' . 'LAMBDA' = 15.    ;\n rxt . 'PAROIS' . 'Acier' . 'ROCP'   = 3.9E6  ;\n rxt . 'PAROIS' . 'Acier' . 'Tp0'    = 60.    ;\n\n\n  \n3.3 Temperature de paroi imposee \n-------------------------------- \n  A. Surfaces internes\n  --------------------\n\n  Les parois internes de l'enceinte peuvent echanger via un coefficient\n d'echange avec le fluide, l'evolution de la temperature de la paroi etant\n connue en fonction du temps.\n\n rxt . 'TIMP'                     = 'TABL' ; data des surfaces a T imposee\n rxt . 'TIMP' . MOT1              = 'TABL' ; data de la surface MOT1\n rxt . 'TIMP' . MOT1 . 'MAILLAGE' = GEO1   ; maillage de la surface MOT1              \n rxt . 'TIMP' . MOT1 . 'ECHAN'    = FLOT1  ; coef. d'echange (W/m2/oC)\n rxt . 'TIMP' . MOT1 . 't'        = LREE1  ; temps (s)\n rxt . 'TIMP' . MOT1 . 'TIMP'     = LREE2  ; temperature imposee (oC)\n\n avec MOT1 le nom de la paroi a temperature imposee choisi par l'utilisateur.\n Cela permet en particulier de modeliser des condenseurs. \n\n En cas de condensation, la valeur du coefficient d'echange convectif FLOT1\n est ecrasee par HTC, celle issue de la correlation associee au modele de \n condensation, sauf si FLOT1 lui est superieure : HT = max(FLOT1,HTC). La \n valeur fournie est donc un seuil.\n\n  L'ancienne structure de donnee ECHANP permettant d'imposer une surface a\n temperature constante au cours du temps sera supprimee a la prochaine version\n de CAST3M.\n\n rxt . 'ECHANP'              = 'TABL' ;\n rxt . 'ECHANP' . 'MAILLAGE' = GEO1   ;\n rxt . 'ECHANP' . 'ECHAN'    = FLOT1  ;\n rxt . 'ECHANP' . 'TMUR'     = FLOT2  ; \n\n\n  B. Surface externe\n  ------------------\n\n  Les parois externes de l'enceinte peuvent echanger via un coefficient\n d'echange avec le milieu ambiant (exterieur) a condition d'activer ECHEXT.\n\n rxt . 'ECHEXT' = (LOG1) ; VRAI si echange externe paroi/milieu ambiant (FAUX)\n \n rxt . 'parext' = GEO1   ; maillage de la surface externe\n rxt . 'HEXT'   = FLOT1  ; coefficient d'echange avec l'exterieur (W/m2/oC)\n rxt . 'TPEXT'  = FLOT2  ; temperature exterieure (oC)\n\n Exemple : Si l'enceinte est semi immergee on peut definir deux zones (une\n pour la partie immergee et une pour la partie emmergee) en utilisant la\n procedure PROCHEXT. Les deux zones sont identifiees par la hauteur d'eau qui\n est une donnee du modele. Cette procedure est a appeler a partir d'une\n procedure PERSO (voir entree PRCPERSO). On renvoie a la notice de la procedure\n PROCHEXT pour renseigner correctement l'appel dans la procedure PERSO. Les\n donnees fournies peuvent dependre du temps (voir les jeux de donnees pressuhx1\n et pressuhx2.dgibi).\n\n\n  \n3.4 Conditions initiales \n------------------------ \n  A. Constituants du melange\n  --------------------------\n\n  L'air est toujours present dans le melange.\n\n rxt . 'VAPEUR' = (LOG1) ; presence de vapeur (FAUX)\n rxt . 'H2'     = (LOG2) ; presence d'hydrogene (FAUX)\n rxt . 'HE'     = (LOG3) ; presence d'helium (FAUX)\n rxt . 'N2'     = (LOG4) ; presence d'azote (FAUX)\n rxt . 'O2'     = (LOG5) ; presence d'oxygene (FAUX)\n rxt . 'CO'     = (LOG6) ; presence d'oxyde de carbone (FAUX)\n rxt . 'CO2'    = (LOG7) ; presence de gaz carbonique (FAUX)\n\n\n  B. Composition du melange\n  -------------------------\n\n  Le m\u00e9lange initial est constant dans le domaine fluide.\n\n rxt . 'TF0' = FLOT1 ; temperature initiale du melange (oC)\n rxt . 'PT0' = FLOT2 ; pression totale initiale (Pa)\n rxt . MOT1  = FLOT3 ; fraction massique d'un constituant present\n avec MOT1='Yvap0','Yhe0','Yh20','Yo20','Yn20','Yco0','Yco20'.\n\n Remarque : L'air assure le complement a 1 des fractions massiques fournies.\n\n\n  C. Proprietes du melange\n  ------------------------\n\n * Proprietes physiques du melange gazeux prises par defaut\n * Constantes des gaz (J/kg/K)\n Rgh2  = 4156.5\n Rghe  = 2078.25\n Rgo2  = 259.8\n Rgn2  = 296.9\n Rgco2 = 188.9\n Rgco  = 296.9\n Rgvap = 461.513\n Rgair = 287.1\n\n muair =  1.800e-5 : viscosite dynamique (air)  (kg/m/s)\n alf   =  1.800e-5 : diffusivite thermique      (m2/s)\n lamair=  2.580e-2 : conductivite thermique     (W/m/oC)\n db    =  1.000e-5 : diffusion Browniene        (m2/s)\n Cpvap =  1700.0   : chaleur specifique a pression constante\n                     pour la vapeur d'eau       (J/oC/kg)\n Lv    =  2.3E6    : chaleur latente            (J/kg)\n\n Les chaleurs specifiques des autres gaz sont donnees par la\n procedure CALCP.\n\n\n  \n3.5 Conditions aux limites \n-------------------------- \n  Les frontieres entre fluide et paroi etant traites en B/ et C/, nous\n indiquons les conditions aux entrees (breches) et aux sorties fluide.\n\n  A. Breches\n  ----------\n\n  Pour chaque breche MOT1, le debit et la temperature associes a differents\n temps sont regroupes dans la sous table scenario de la breche concernee :\n\n rxt.'Breches'.MOT1.'scenario'        = 'TABL' ; scenario de la breche MOT1\n rxt.'Breches'.MOT1.'scenario'.'t'    = LREE1  : temps du scenario (s) \n rxt.'Breches'.MOT1.'scenario'.'qair' = LREE2  : debit d'air (kg/s)\n rxt.'Breches'.MOT1.'scenario'. MOT2  = LREE3  : debit d'une espece (kg/s)\n rxt.'Breches'.MOT1.'scenario'.'tinj' = LREE4  : temperature d'injection (oC)\n\n avec MOT2='qeau','qhe','qh2','qo2','qn2','qco' ou 'qco2' suivant la\n composition du melange. Comme l'air est present par defaut, la donnee 'qair'\n est toujours indiquee.\n\n Par exemple, on definit une breche A de vapeur d'eau a 150oC et 50 g/s par :\n\n rxt.'Breches'.'A'.'scenario'        = 'TABL' ;\n rxt.'Breches'.'A'.'scenario'.'t'    = 'PROG' 0.0    1000.0 ;\n rxt.'Breches'.'A'.'scenario'.'qair' = 'PROG' 0.000  0.000  ;\n rxt.'Breches'.'A'.'scenario'.'qeau' = 'PROG' 0.050  0.050  ;\n rxt.'Breches'.'A'.'scenario'.'tinj' = 'PROG' 150.0  150.0  ;\n\n  Pour la vapeur, la separation vapeur/liquide a la breche est realisee a la\n temperature d'ebullition. Par suite, la qualite de la vapeur a la breche est :\n xsi = (h_{vap,inj}-h_{liq,ebu}) / (h_{vap,sat}-h_{liq,ebu}),\n avec h_{vap,inj} = h(P_{vap,inj},T_{inj}),\n      h_{vap,ebu} = hvap(P,Tsat(P)),\n      h_{liq,ebu} = hliq(P,Tsat(P)),\n      P, la pression totale dans l'enceinte.\n\n  La partie liquide va directement dans le puisard dont la masse est\n initialisee avec rxt . 'Mliq0' (en kg, 0. par defaut).\n\n\n  B. Sorties\n  ----------\n\n  Pour chaque sortie MOT1, deux modeles sont disponibles : on modelise une\n ventilation forcee (entree 'Qext') ou un clapet de decharge (entree 'Pext').\n Dans le premier cas, le debit de ventilation forcee est donne en fonction du\n temps ; dans le deuxieme cas, il est calcule en fonction de la difference\n entre la pression de l'enceinte et l'exterieur. Il faut alors renseigner les\n donnees exterieures relatives a la perte de charge :\n     P - Pext = Kext (U ** Bext). \n Si les conditions sont reunies, le col est sonique (debit critique atteint).\n\n rxt . 'Sorties' . MOT1 . 'scenario'             = 'TABL' ; scenario de MOT1\n rxt . 'Sorties' . MOT1 . 'scenario' . 't'       = LREE1  ; temps (s)\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Section' = FLOT1  ; section (m2)\n\n  Cas a : 'Qext' : ventilation forcee\n\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Qext'    = LREE2 ; debit (kg/s)\n\n  Cas b : 'Pext' : clapet de decharge\n\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Pext'    = LREE2 ; P exterieur (Pa)\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Kext'    = LREE3 ; Perte de charge\n rxt . 'Sorties' . MOT1 . 'scenario' . 'Bext'    = LREE4 ; Perte de charge\n\n  Remarque : Si la condition de sortie n'est pas active pendant tout le\n scenario, il suffit d'annuler par une procedure PERSO sa section (<1.e-10).\n\n  Exemple d'une sortie appelee S :\n\n rxt . 'Sorties' = 'TABL' ;\n\n rxt . 'Sorties' . 'S' = 'TABL' ;\n rxt . 'Sorties' . 'S' . 'Maillage' = ms         ;\n rxt . 'Sorties' . 'S' . 'diru'     = (0. 0. 1.) ;\n rxt . 'Sorties' . 'S' . 'scenario' = 'TABL'     ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Section' = 4.68e-4           ;\n rxt . 'Sorties' . 'S' . 'scenario' . 't'       = 'PROG' 0.0 1000.0 ;\n\n  Cas a : 'Qext'\n rxt . 'Sorties' . 'S' . 'scenario' . 'Qext'    = 'PROG' 1.     1.    ;\n\n  Cas b : 'Pext'\n rxt . 'Sorties' . 'S' . 'scenario' . 'Pext'    = 'PROG' 1.e5   1.e5  ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Kext'    = 'PROG' 1.000  1.000 ;\n rxt . 'Sorties' . 'S' . 'scenario' . 'Bext'    = 'PROG' 0.75   0.75  ;\n\n\n  C. Flux de masse diffuse impose\n  -------------------------------\n\n  On peut imposer les debits de masse issus d'une surface MOT1 sous forme de\n flux diffusif lorsque le debit est tres faible.\n\n rxt . 'XFIMP' = 'TABL'                    ; data des flux diffusifs\n rxt . 'XFIMP' . MOT1 = 'TABL'             ; data de la surface MOT1\n rxt . 'XFIMP' . MOT1 . 'MAILLAGE' = GEO1  ; maillage\n rxt . 'XFIMP' . MOT1 . 't'        = LREE1 ; temps (s)\n rxt . 'XFIMP' . MOT1 . MOT2       = LREE2 ; debit (kg/s)\n\n avec MOT1 le nom de la paroi a flux diffusif imposee choisi par l'utilisateur,\n MOT2='qeau','qair','qhe','qh2','qo2','qn2','qco','qco2' suivant l'espece\n concernee.\n\n\n  \n3.6 Turbulence \n-------------- \n  L'absence de cette entree signifie que l'on est en laminaire.\n\n < rxt . 'MODTURB' =  MOT1 ; > modele de turbulence choisi\n avec MOT1='NUTURB','LMEL' ou 'KEPSILON'.\n\n a/  rxt . 'MODTURB'  =  'NUTURB'  ; Nu turbulent constant\n     rxt . 'NUT'      =  FLOT1     ; valeur de Nut (m2/s) \n\n b/  rxt . 'MODTURB'  =  'LMEL'    ; longueur de melange\n     rxt . 'LMEL'     =  FLOT1     ; valeur de lm (m)\n\n c/  rxt . 'MODTURB'  = 'KEPSILON' ; k-epsilon\n     < rxt . 'FPAROI' = LOGIQUE    ; > fonction de paroi (FAUX) \n     < rxt . 'YP'     = FLOT1      ; > valeur de y+ \n\n Le modele KEPSILON n'est disponible qu'avec l'algorithme semi-explicite EFM1\n (voir entree ALGO).\n\n\n  \n3.7 Aspersion \n------------- \n  rxt . 'ASPER' = (LOG1) ; VRAI si presence d'aspersion (FAUX)\n\n En cas d'aspersion le logique rxt.'VAPEUR' doit etre = VRAI\n\n rxt.'aspinj' = GEO1 ; Maillage de la surface d'injection\n                           de la phase dispersee\n rxt.'toitf'  = GEO2 ; Maillage de la surface superieure (par\n                           rapport a la verticale) du volume\n                           fluide\n rxt.'rod'    = GEO3 ; Densite de la phase dispersee\n rxt.'Cpd'    = GEO4 ; Chaleur specifique de la phase dispersee\n rxt.'scenario'.'vzinj'  = LREE1 ; Liste des vitesses (verticales)\n                                   d'injection de la phase disp.\n rxt.'scenario'.'xdinj'  = LREE2 ; Liste de la fraction volumique\n                                   de la phase disp. a l'inject.\n rxt.'scenario'.'tdinj'  = LREE3 ; Liste de la temperature de la\n                                   phase disp. a l'injection.\n rxt.'scenario'.'ddinj'  = LREE4 ; Liste du diametre de la phase\n                                   disp. a l'injection.\n\n\n  \n3.8 Condensation en masse (en test) \n----------------------------------- \n rxt . 'CONDMAS' = (LOG1) ; Activation de la condensation en masse (FAUX).\n\n\n\n  \n3.9 PAR (recombineur catalytique passif) \n---------------------------------------- \n  Les recombineurs ne peuvent etre defini qu'en presence a minima des\n constituants suivants : H2, N2, O2, VAPEUR.\n\n  On definit autant de PAR que necessaire (rang=1,n). \n\n rxt . 'RECOMB' = 'TABLE'                     ; data des PARs\n rxt . 'RECOMB' . rang = 'TABL'               ; data du rangieme PAR\n rxt . 'RECOMB' . rang . 'PAREXT'   = MAIL1   ; paroi du PAR\n rxt . 'RECOMB' . rang . 'ENTREE'   = MAIL2   ; entree du PAR\n rxt . 'RECOMB' . rang . 'SORTIE'   = MAIL3   ; sortie du PAR\n rxt . 'RECOMB' . rang . 'direntr'  = POI1    ; normale a l'entree\n rxt . 'RECOMB' . rang . 'dirsort'  = POI2    ; normale a la sortie\n rxt . 'RECOMB' . rang . 'NSECTION' = (ENTI1) ; nombre de PAR\n rxt . 'RECOMB' . rang . 'A'        = (FLOT1) ; coef. taux de combustion\n rxt . 'RECOMB' . rang . 'B'        = (FLOT2) ; coef. taux de combustion\n rxt . 'RECOMB' . rang . 'XH2ON'    = (FLOT3) ; condition allumage\n rxt . 'RECOMB' . rang . 'XH2OFF'   = (FLOT4) ; condition extinction\n rxt . 'RECOMB' . rang . 'BETA'     = (FLOT5) ; parametrage\n\n  Par defaut, le nombre d'unite NSECTION dans le bati est 1.\n\n  Le taux de consommation d'H2 est calcule par la loi constructeur SIEMENS.\n Les valeurs par defaut correspondent au modele SIEMENS FR90/1-150 :\n  - A et B : Coefficient de la loi lineaire en pression\n    (0.48D-8 kg/s/Pa et 0.58D-3 kg/s par defaut)\n  - XH2ON  : Fraction molaire d'H2 au dela de laquelle le\n    recombineur entre en fonctionnement (0.005 par defaut)\n  - XH2OFF : Fraction molaire d'H2 en de\u00e7a de laquelle le\n    recombineur passe en arret (0.005 par defaut)\n  - BETA   : Zone de transition affectee par la correction\n    pour les faibles concentrations en H2 (0.2 par defaut)\n\n\n  \n3.10 Condensation en parois \n--------------------------- \n rxt . 'MODCOND' = (MOT1) ; Modele de condensation en paroi\n avec MOT1=('CHIL0') ou 'CHIL1'.\n\n a/ rxt . 'MODCOND' = 'CHIL0' : Jv = Jstand = kc rho (Yv - Yvsat)\n Modele de type Chilton-Colburn valable pour les tres faibles concentration de\n vapeur. La correlation utilisee est une correlation de convection naturelle.\n\n b/ rxt . 'MODCOND' = 'CHIL1' : Jv = Jstand / (1-Yvsat)\n Modele deduit de la loi de Fick en masse volumique avec diffusivite de la\n vapeur dans le melange calcul\u00e9 comme dans RALOC.\n  \n4. Parametres de fonctionnement \n=============================== \n \n  \n4.1 Table RXT \n------------- \n  Il y a la possibilite d'executer une procedure personnelle en tete de la\n boucle en temps de l'algorithme.\n\n rxt . 'PERSO'    = (LOG1)  ; activation d'une procedure PERSO (FAUX)\n rxt . 'PRCPERSO' = MOT1    ; nom de la procedure\n rxt . 'TABPERSO' = TAB1    ; data associees\n\n rxt . 'DT0'      =  FLOT1  ; valeur du pas de temps (s)\n rxt . 'IMPR'     = (ENTI1) ; (0) ou 1 si impressions supplementaires\n rxt . 'epsi'     = (FLOT1) ; critere de precision des maillages (1.E-4)\n\n rxt . 'FRPREC'   = (ENTI1) ; frequence de calcul du preconditionnement (1)\n rxt . 'FCPRECT'  = (ENTI2) ; frequence de recalcul du preconditionneur base\n                              sur le rang des pas de temps (1)\n rxt . 'FCPRECI'  = (ENTI3) ; frequence de recalcul du preconditionneur base\n                              sur le rang des iterations internes (1)\n\n Attention : si FPREC est donne, les valeurs par defaut pour FCPRECT et\n FCPRECI sont egales a 5 au lieu de 1.\n\n rxt . 'ALGO'     = (MOT1)  ; Type d'algorithme ('IMPL')\n avec MOT1='IMPL' si semi-implicite et 'EFM1' si semi explicite.\n\n rxt . 'DISCR'    = (MOT1)  ; discretisation de la vitesse et des champs \n                              scalaires (sauf la pression) ('MACRO').\n rxt . 'KPRE'     = (MOT2)  ; discretisation de la pression ('CENTRE')\n\n Attention : tous les couples MOT1/MOT2 ne sont pas licites (voir les\n notices de NAVI et de MODEL).\n\n rxt . 'STAB'     = (FLOT1) ; facteur de stabilisation des elements MACRO\n                              d'ancienne generation (1.).\n\n rxt . 'MAXELPRE' = (ENTI1) ; nombre maximum d'elements pour lequel on utilise\n                              une methode directe (Cholesky) pour inverser la\n                              matrice de pression (150000).\n rxt . 'TYPINV'   = (ENTI2) ; methode de resolution iterative (voir KRES) (3)\n rxt . 'RESIDU'   = (FLOT1) ; residu des methodes iteratives (1.E-20).\n rxt . 'NTIT'     = (ENTI3) ; Nombre max d'iterations pour les methodes\n                              iteratives (800)\n\n rxt . 'GRAPH'    = (LOG1)  ; trace de controle (FAUX)\n rxt . 'DETMAT'   = (LOG1)  ; Destruction des matrices en fin du calcul (VRAI)\n rxt . 'REINIT'   = (LOG1)  ; Re-initialisation du scenario (FAUX)\n rxt . 'CORTEMP'  = (LOG1)  ; Controle du bilan d'energie (VRAI)\n\n\n  \n4.2 Limitations du modele actuel \n-------------------------------- \n Pas de modelisation gaz reel de la vapeur d'eau\n Pas de modelisation de la turbulence en implicite\n Pas de modelisation de la condensation en masse\n Pas de plan de symetrie possible\n Modele numerique adapte aux grands pas de temps\n Parallelisme embryonnaire\n\n\n  \n4.3 Quelques recettes \n--------------------- \n  A. Modification des conditions aux limites\n  -------------------------------------------\n\n  Lorsque par exemple une breche cesse d'emettre, la nature des conditions aux\n limites change a la breche. Pour prendre en compte cela, le plus simple est\n de sauvegarder le premier calcul, de decrire le 'nouveau' probleme sans la\n breche et de surcharger la table des inconnues par celle de l'ancien calcul.\n\n  1/ On recupere la table rxt.'TIC' du premier calcul\n     'OPTI' 'REST' 'MONFIC.sauv' ; 'REST' ;\n     tic = rxt . 'TIC' ;\n  2/ On recupere eventuellemnt le maillage\n     opti rest 'MONMAIL.sauv';\n     rest ;\n  3/ On decrit entierement le nouveau probleme\n     rxt = 'TABL' ;\n     rxt . 'vtf' =  mon maillage ;\n     rxt . ... etc\n  4/ On initialise avec la table tic precedente\n     rxt . 'TIC' = tic ;\n\n\n  B. Taille du fichier de sauvegarde\n  ----------------------------------\n\n  Il est possible de reduire la taille du fichier de sauvegarde obtenu\n par l'op\u00e9rateur 'SAUV' en detruisant les matrices (voir rxt . 'DETMAT').\n  \n5. Resultats du calcul \n====================== \n \n  \n5.1 Table rxt.'TIC' \n------------------- \n  La table TIC contient en particulier :\n  - des listes temporelles (LT) 0D (champs moyens) qui permettent de tracer des\n evolutions lorsqu'elles sont associees a la liste des temps de calcul stockee\n a l'indice 'LTPS' de TIC.  \n  - des champs multi-D (CHPO) calcules au dernier temps calcule.\n\n Pour chaque indice de la table, nous indiquons le type de l'indice, son nom\n ainsi que le type du contenu de l'indice.\n\n\n  A. Suivi temporel 0D\n  --------------------\n\n Indice          Objet\n Type & Valeur   Type       Commentaires\n\n MOT    Tps      FLOTTANT : temps physique\n MOT    NUPADT   ENTIER   : rang du pas de temps Tps\n MOT    DT       FLOTTANT : pas de temps courant\n\n MOT    LTPS     LISTREEL : LT, liste des temps calcules\n\n MOT    LMAXU    LISTREEL : LT, module max de la vitesse (m/s)\n MOT    Rhomn    LISTREEL : LT, densite du melange (kg/m3)\n MOT    Rhomv    LISTREEL : LT, densite de vapeur dans le melange (kg/m3)\n MOT    Rhom?    LISTREEL : LT, densite de ? dans le melange (kg/m3)\n avec '?'='air','he','h2','o2','n2','co','co2'\n\n MOT    PT       LISTREEL : LT, pression thermodynamique\n MOT    Tfm      LISTREEL : LT, temperature moyenne du melange (oC)\n MOT    Remn     LISTREEL : LT, energie interne specifique melange (J/m3)\n\n MOT    Econv    LISTREEL : LT, energie extraite par convection (J/m3)\n MOT    Econd    LISTREEL : LT, energie extraite par condensation (J/m3)\n MOT    Hcond    LISTREEL : LT, enthalpie extraite par condensation (J/m3)\n\n MOT    Easpe    LISTREEL : LT, energie extraite par l'aspersion (J/m3)\n MOT    Haspe    LISTREEL : LT, enthalpie extraite par l'aspersion (J/m3)\n MOT    Qaspe    LISTREEL : LT, debit aspersion  (kg/s)\n\n MOT    Rgpm     LISTREEL : LT, constante gaz parfaits melange (J/kg/K)\n MOT    Cvm      LISTREEL : LT, capacite calorifique a volume cst (J/kg/K)\n MOT    Cpm      LISTREEL : LT, capacite calorifique a p cst (J/kg/K)\n MOT    Gamm     LISTREEL : LT, rapport Cpm/Cvm\n\n MOT    Minj     LISTREEL : LT masse injectee  (kg)\n MOT    Mrest    LISTREEL : LT masse restante  (kg)\n\n MOT    Mcond    LISTREEL : LT masse de vapeur condensee (total) (kg)\n MOT    Mcondw   LISTREEL : LT masse de vapeur condensee (THERMP) (kg)\n MOT    Mcond0   LISTREEL : LT masse de vapeur condensee (ECHANP) (kg)\n MOT    Mcond1i  LISTREEL : LT masse de vapeur condensee (TIMP) (kg)\n\n MOT    Qc       LISTREEL : LT, Debit de vapeur condensee (total) (kg/s)\n MOT    Qcw      LISTREEL : LT, Debit de vapeur condensee (THERMP) (kg/s)\n MOT    Qc0      LISTREEL : LT, Debit de vapeur condensee (ECHANP) (kg/s)\n MOT    Qc1i     LISTREEL : LT, Debit de vapeur condensee (TIMP) (kg/s)\n\n MOT    mdTf     LISTREEL : LT, Correction locale sur TF (min) (oC)\n MOT    MdTf     LISTREEL : LT, Correction locale sur TF (max) (oC)\n MOT    Mdr?     LISTREEL : LT, Correction de masse pour l'espece ? (kg)\n avec '?'='vap','air','he','h2','o2','n2','co','co2'\n\n\n *--- Parois a temperature imposee (TIMP) ---*\n\n MOT    TIMP     TABLE : informations relatives a TIMP\n\n TIMP . nomi     TABLE, data de la paroi nomi\n MOT    Ltbpi    LISTREEL : LT, temperature de la paroi nomi (oC)\n\n *--- Breches (Breches) ---*\n\n MOT    Breches   TABLE : informations relatives aux breches\n\n Breches . nomi  TABLE, data de la breche nomi\n MOT    guj      LISTREEL : LT, vitesse a l'injection (m/s)\n MOT    Qj       LISTREEL : LT, debit d'injection (kg/s)\n MOT    Tinj     LISTREEL : LT, temperature d'injection (kg/s)\n MOT    Hj       LISTREEL : LT, enthalpie a l'injection (J/kg)\n MOT    Ej       LISTREEL : LT, energie a l'injection (J/kg)\n MOT    Ksi      LISTREEL : LT, partition liquide/vapeur (kg/s)\n MOT    Qlj      LISTREEL : LT, debit liquide a l'injection (kg/s)\n MOT    Hlj      LISTREEL : LT, enthalpie liquide a l'injection (J/kg)\n\n Usage : rxt . 'Breches' . nomi . 'Tinj' contient la LT de la\n temperature imposee a la breche nomi. Les temps  associes sont\n ceux de rxt . 'TIC' . 'LTPS'\n\n *--- RECOMBINEUR ---*\n\n MOT    RECOMB   TABLE    : informations issues des PARs\n\n RECOMB . i      TABLE, data du ieme PAR\n MOT    DEB      LISTREEL : LT, debit (kg/s)\n MOT    Uin      LISTREEL : LT, vitesse a l'entree (m/s)\n MOT    Uout     LISTREEL : LT, vitesse a la sortie (m/s)\n MOT    Tin      LISTREEL : LT, temperature a l'entree (oC)\n MOT    Tout     LISTREEL : LT, temperature a la sortie (oC)\n MOT    Tpla     LISTREEL : LT, temperature des plaques (oC)\n MOT    EFF      LISTREEL : LT, efficacite du recombineur \n MOT    Hin      LISTREEL : LT, enthalpie a l'entree (J/kg)\n MOT    Hout     LISTREEL : LT, enthalpie a la sortie (J/kg)\n MOT    R?E      LISTREEL : LT, densite de l'espece ? a l'entree (kg/m3)\n MOT    R?S      LISTREEL : LT, densite de l'espece ? a la sortie (kg/m3)\n MOT    Y?E      LISTREEL : LT, fraction massique de l'espece ? a l'entree\n MOT    Y?S      LISTREEL : LT, fraction massique de l'espece ? a la sortie\n avec '?'='H2O','HE','H2','O2','N2','CO','CO2'.\n\n Usage : rxt . 'RECOMB' . 2 . 'DEB' contient la LT des debits traversant le\n deuxieme recombineur. Les temps associes sont ceux de rxt . 'TIC' . 'LTPS'\n\n\n  B. Grandeurs multi-D\n  --------------------\n\n Indice         Objet\n Type & Valeur  Type       Commentaires\n\n MOT    UN      CHPOINT  : vitesse au pas de temps courant (m/s)\n MOT    UNM     CHPOINT  : vitesse au pas de temps precedent (m/s)\n MOT    PRES    CHPOINT  : pression (Pa)\n MOT    TF      CHPOINT  : temperature au pas courant (oC)\n MOT    TFNM    CHPOINT  : temperature au pas precedent (oC)\n MOT    TP      CHPOINT  : temperature paroi au pas courant (oC)\n MOT    TPNM    CHPOINT  : temperature paroi au pas precedent (oC)\n MOT    RHO     CHPOINT  : densite au pas courant (kg/m3)\n MOT    RHONM   CHPOINT  : densite au pas precedent (kg/m3)\n MOT    RVP     CHPOINT  : densite de vapeur (kg)\n MOT    YVAP    CHPOINT  : Fraction massique de vapeur\n\n MOT    R?      CHPOINT  : densite de ? (kg)\n MOT    Y?      CHPOINT  : FLOTTANT si l'espece est absente\n avec ?='AIR','HE','H2','O2','N2','CO','CO2'\n\n MOT    Mu      CHPOINT  : viscosite dynamique du melange (kg/m/s)\n MOT    NU      CHPOINT  : viscosite cinematique du melange (m2/s)\n MOT    NUEFF   CHPOINT  : viscosite cinematique effective (m2/s)\n\n MOT    KHW     CHPOINT  : coefficient d'echange (convectif) (THERMP)\n MOT    KH0     CHPOINT  : coefficient d'echange (convectif) (ECHANP)\n MOT    KH1i    CHPOINT  : coefficient d'echange (convectif) (TIMP)\n\n\n *--- Aspersion ---*\n\n MOT    VN      CHPOINT  : vitesse de la phase dispersee (m/s)\n MOT    TD      CHPOINT  : temperature de la phase dispersee (oC)\n MOT    XD      CHPOINT  : Fraction volumique de la phase dispersee \n MOT    DD      CHPOINT  : Diametre de la phase dispersee (m)\n\n\n  \n5.2 Table rxt.'GEO' \n------------------- \n  La table GEO contient les MMODEL NAVIER-STOKES des modelisations\n choisies ainsi que les maillages associes.\n\n Indice          Objet\n Type & Valeur   Type       Commentaires\n\n MOT    epsi     FLOTTANT : tolerance sur les maillages\n MOT    $vtf     MMODEL   : modele du domaine fluide\n MOT    $menvf   MMODEL   : modele pour la frontiere fluide \n MOT    $axe     MMODEL   : axe ou plan de symetrie\n MOT    $vtp     MMODEL   : paroi thermique\n MOT    $mtp1i   MMODEL   : paroi temperature imposee (TIMP)\n MOT    $mtp0    MMODEL   : paroi temperature constante (ECHANP)\n MOT    Pimp     MAILLAGE : POI1 ou la pression est imposee.",
  },
  {
    name: "EXIC",
    url: "EXIC",
    documentation:
      "$$$$ EXIC     NOTICE  CHAT      11/09/12    21:16:08     7124           \n                                             DATE     11/09/12\n\n  Procedure EXIC                           Voir aussi :\n    --------------  \n    EXIC  TAB1  ;\n\n\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de resoudre des problemes de mecanique des\n   fluides par un algorithme implicite suivant les informations donnees\n   dans une table TAB1 de type EQEX (creee par EQEX).\n    TAB1 doit contenir une entree 'INCO' , table creee\n    par l'utilisateur et de sous type 'INCO' contenant les CHAMPOINTs\n    d'initialisation.",
  },
  {
    name: "EXIS",
    url: "EXIS",
    documentation:
      "$$$$ EXIS     NOTICE  AM        17/09/25    21:15:05     9566           \n                                             DATE     17/09/25\n\n    Operateur EXISTE                         Voir aussi : TABL DANS\n    ----------------  \n    LOG1(,LOG2,...) =  EXISTE  |  NOM1                            |  ;\n                               |  TAB1     OBJ1                   |\n                               |  OBJ1     OBJ2                   |\n                               |  %        OBJ2                   |\n                               |  CH1      MOT1                   |\n                               |  CH1      OBJ1                   |\n                               |  LMOTS1 | MOT1                |  |\n                               |         | LMOTS2  ('ET'/'OU') |  |\n                               |  LENTI1   ENTI1                  |\n                               |  LREEL1   FLOT1   (FLOT2)        |\n                               |  SOL1     'CONT'                 |\n                               |  NUAG1    MOT1                   |\n                               |  CHAR1  | MOT1          |        |\n                               |         | 'LIBR'/'LIE ' |        |\n                               |  MODL1    MOT1     MOT2          |\n\n\n\n    Objet :\n    _______\n\n    L'operateur EXISTE permet de verifier l'existence d'objets.\n\n\n    Commentaires :\n    ______________\n\n    Dans tous les cas qui suivent, LOG1(,LOG2,...) sont des  objets de\n    type LOGIQUE valant VRAI si l'existence est averee, FAUX sinon.\n\n\n    1)  Lorsqu'un unique argument NOM1 est present, l'operateur permet\n        de savoir si un objet portant un tel nom existe.\n\n        ATTENTION : on estime qu'un objet n'EXISte pas seulement s'il\n                    est de type 'ANNULE'. En effet, tout nom NOM1 non\n                    attribue est vu comme un objet existant de type MOT.\n\n\n    2)  Dans le cas d'une table TAB1 (type TABLE), il permet de savoir\n        si l'indice OBJ1 de la table existe (type ENTIER, FLOTTANT, MOT,\n        LOGIQUE, PROCEDUR...).\n\n\n    3)  Dans le cas d'un OBJET OBJ1, il permet se savoir si l'indice\n        OBJ2 existe. A l'interieur d'une methode s'appliquant sur\n        l'objet, % remplace le nom de l'objet.\n\n\n    4)  Dans le cas d'un champ CH1 (type CHPOINT ou MCHAML), il permet\n        de savoir si la composante de nom MOT1 (type MOT) existe.\n        Dans le cas d'un champ CH1 (type MCHAML), il permet de savoir\n        si une zone s'appuie sur l'objet OBJ1 (type MAILLAGE ou\n        MMODEL). La verification porte aussi sur le constituant et \n        la phase pour le type MMODEL.\n\n\n    5)  Dans le cas d'une liste de mots LMOTS1 (type LISTMOTS), il\n        permet de savoir si le mot MOT1 (type MOT) existe. On peut\n        aussi fournir une seconde liste de mots a rechercher LMOTS2\n        (type LISTMOTS). Dans ce cas, LOG1 est VRAI si TOUS les mots de\n        LMOTS2 sont dans LMOTS1 (mot-cle 'ET') ou bien si AU MOINS UN\n        des mots de LMOTS2 est trouve dans LMOTS1 (mot-cle 'OU'). En\n        l'absence de mot-cle, on sort autant d'objets LOG1, LOG2, ...\n        qu'il y a de mots a tester dans LMOTS2.\n\n\n    6)  Dans le cas d'une liste d'entiers LENTI1 (type LISTENTI), il\n        permet de savoir si l entier ENTI1 (type ENTIER) existe.\n\n\n    7)  Dans le cas d'une liste de reels LREEL1 (type LISTREEL), il\n        permet de savoir si le reel FLOT1 (type FLOTTANT) existe. Il\n        est possible de fournir la tolerance FLOT2 (type FLOTTANT)\n        utilisee pour tester les egalites entre nombres reels.\n\n\n    8)  Dans le cas d'un objet SOL1 (type SOLUTION), il permet de savoir\n        si les contraintes (mot-cle 'CONT') sont incluses.\n\n\n    9)  Dans le cas d'un objet NUAG1 (type NUAGE), il permet de savoir\n        si le mot MOT1 (type MOT) est un nom de composante du NUAGE.\n\n\n    10) Dans le cas de CHAR1 (type CHARGEMENT), il permet de savoir si\n        le mot MOT1 (type MOT) est le nom d'un chargement elementaire,\n        ou bien s'il existe des sous-objets CHARGEMENT de nature libre\n        (mot-cle 'LIBRE') ou liee (mot-cle 'LIE') dans CHAR1.\n\n\n    11) Dans le cas d'un objet MODL1 (type MMODEL), les deux arguments\n        MOT1 et MOT2 (type MOT) permettent de savoir :\n\n        a) S'il existe des zones du MMODEL correspondant a une\n           formulation donnee. Dans ce cas MOT1 est alors 'FORM' et\n           MOT2 est un ou plusieurs mots definissant la formulation.\n\n        b) S'il existe des zones du MMODEL correspondant a un ou\n           plusieurs constituants donnes. Dans ce cas MOT1 est alors\n           'CONS' et MOT2 est un ou plusieurs mots definissant les\n           constituants.\n\n        c) S'il existe des zones du MMODEL correspondant a un ou\n           plusieurs elements finis donnes. Dans ce cas MOT1 est alors\n           'ELEM' et MOT2 est un ou plusieurs mots definissant les\n           elements finis.\n\n        d) S'il existe des zones elementaires du MMODEL dont la liste\n           de mots qui definit le comportement du materiau contient\n           le(s) mot(s) MOT2. Pour cela, on specifiera 'MATE' pour MOT1.\n\n        e) S'il existe des zones du MMODEL correspondant a une\n           mise en oeuvre non locale donnee. Dans ce cas MOT1\n           est alors 'NON_LOCAL' et MOT2 est un mot d\u00e9finissant\n           la mise en oeuvre non locale. ",
  },
  {
    name: "EXP",
    url: "EXP",
    documentation:
      "$$$$ EXP      NOTICE  KK2000    14/07/28    21:15:14     8127           \n                                             DATE     14/07/28\n\n      RESU1 =  'EXP'  OBJET1 ;\n\n\n    Operateur EXP                            Voir aussi : LOG\n    -------------  \n    Objet :\n    _______\n\n    L'operateur EXP calcule l'exponentielle de l'objet OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "EXPLORER",
    url: "EXPLORER",
    documentation:
      "$$$$ EXPLORER NOTICE  BP208322  21/05/10    21:15:04     11005          \n                                             DATE     21/05/10\n                                             \n    Procedure EXPLORER                       Voir aussi : PECHE\n    ------------------  \n    EXPLORER  TAB1 | (LMOC1) (TOPT1) ;\n                   | 'CHAR'  (TOPT2) ;\n\n\n    Objet :\n    _______\n\n    La procedure EXPLORER permet de depouiller graphiquement les \n    resultats d'une table PASAPAS, BASE_MODALE ou LIAISONS_STATIQUES.\n\n    \n    Cas d'une table PASAPAS :\n    -------------------------\n    \n  > TAB1  : TABLE issue de PASAPAS\n     \n     \n  > LMOC1 : LISTMOTS des mots-cles definissant les resultats a produire:\n            - 'DEPL' : Deformee\n            - 'CONT' : Isovaleur des Contraintes \n                       (eventuellement suivi du nom de la composante)\n            - 'VAR'  : Isovaleur des Variables Internes\n            - 'TEMP' : Isovaleur du champ de Temperature\n            - 'REAC' : Vecteur des Reactions\n            - 'EVOL' : Trace d'Evolutions definies dans TOPT1 . 'EVOL'\n            Rem : un seul trace d'isovaleur est possible par appel\n            \n    Rem : en l'absence de LMOC1, \n          - si la sortie graphique est 'X', un menu permettant de \n            choisir les resultats et le pas de temps est propos\ufffd; \n          - si la sortie graphique est differente, l'isovaleur du champ \n            de contraintes sur le maillage deforme est trace par defaut\n            pour tous les pas de temps.\n          \n  > TOPT1 : TABLE facultative d'options contenant :\n    \n  - dans le cas d'une evolution :\n    TOPT1 . 'EVOL' : TABLE obligatoire dans le cas d'une Evolution\n    TOPT1 . 'EVOL' . 'TYPE' = MOT |'ESPA'  pour une evolution spatiale \n                                  |'TEMP'  pour une evolution temporelle \n    \n    TOPT1 . 'EVOL' . 'COMP' = MOT : nom de la composante a tracer\n    TOPT1 . 'EVOL' . 'TITR' = MOT : titre du trace\n    \n  - dans le cas d'une evolution temporelle (TEMP) d'un chpoint :\n    TOPT1 . 'EVOL' . 'POIN' = POINT dont on souhaite l'evolution \n    \n  - dans le cas d'une evolution temporelle (TEMP) d'un mchaml :\n    TOPT1 . 'EVOL' . 'ZONE' = ENTIER numero de la zone,\n    TOPT1 . 'EVOL' . 'ELEM' = ENTIER numero de l element,  \n    TOPT1 . 'EVOL' . 'PTG'  = ENTIER numero du point de Gauss\n                              dont on souhaite l'evolution \n                              \n  - dans le cas d'une evolution spatiale (ESPA) :\n    TOPT1 . 'EVOL' . 'LIGN' = MAILLAGE de SEG2 sur lequel on souhaite \n                              l'evolution \n                              \n  - dans le cas d'une deformee :\n    TOPT1 . 'AMPL' = FLOTTANT indiquant le facteur d'amplification de la\n                     deformee le cas echeant\n    \n    \n  >'CHAR' : MOT-cle indiquant que l'on souhaite visualiser le chargement\n  \n  > TOPT2 : TABLE facultative d'options contenant :\n    TOPT2 . 'TYPE' = MOT | 'MECA'  : type de chargement a tracer\n                         | 'T' \n                         | 'DEFI'\n                         |  ...\n    TOPT2 . 'COMP' = MOT : composante eventuelle (FX ou FY par ex.)\n    \n    \n    Exemples : plas1.dgibi, explochar.dgibi\n    \n    \n   \n    Cas d'une table BASE_MODALE ou LIAISONS_STATIQUES :\n    ---------------------------------------------------\n\n  > TAB1  : TABLE issue de VIBR ou d'un calcul par sous-structuration\n            dynamique (IDLI, BLOQ, RESO, REAC)\n             \n             \n  > LMOC1 : LISTMOTS des mots-cles definissant les actions a produire\n            parmi :\n            - 'TABL' : pour imprimer sur le terminal les resultats \n                       (mode, frequence, masse generalisee, ...)\n                       sous le forme d'un tableau de synthese.\n            - 'DEFO' : pour tracer sur le sortie graphique les deformees\n                       modales.\n            - 'DEF0' : (le dernier caractere etant le chiffre zero)\n                       pour tracer en superposition des deformees\n                       le maillage non deformee en gris\n            - 'VTK'  : pour sortir au format VTK (cf. Paraview) les \n                       deformees modales.\n            - 'LIST' : pour generer aux indices LISTE_DEFORMEES,\n                       LISTE_FREQUENCES et LISTE_MASSES de la table \n                       d'entree les LISTCHPO, LISTREEL et LISTREEL \n                       correspondants.\n            - 'MAIL' : pour generer a l'indice MAILLAGE_REPERE le \n                       maillage de POI1 contenant l'ensemble des points\n                       reperes des modes.\n                       \n            Rem : si LMOC1 n'est pas fourni, on realise par defaut les \n                  actions : 'TABL' 'DEFO' 'DEF0' et 'MAIL'.\n                 \n                 \n  > TOPT1 : TABLE facultative d'options contenant :\n    TOPT1 . 'LISTE_MODES' : liste des modes a traiter\n    TOPT1 . 'MAILLAGE'    : maillage sur lequel tracer les deformees\n                            (si different de celui de la base modale)\n    TOPT1 . 'TITRE'       : debut de titre lors du trace des deformees\n    TOPT1 . 'LEGENDES'    : legendes a ajouter a la fin du titre \n                            lors du trace des deformees\n    TOPT1 . 'FICHIER_VTK' : nom du fichier pour les sorties VTK\n    TOPT1 . 'MAILLAGE_2'  : maillage supplementaire a tracer\n    TOPT1 . 'MAILLAGE_VECTEUR' : points support pour lesquels on \n                                 souhaite tracer le vecteur deplacement\n    TOPT1 . 'AMPLIFICATION_RELATIVE': valeur de l'amplification relative \n                                      de la deformee (5% par defaut)\n    TOPT1 . 'OPTIONS_TRAC': liste des options a passer a TRAC (CHAINE)\n          \n    Rem : si TOPT1 n'est pas fournie, tous les modes sont traites et le\n          maillage utilise est celui contenu dans TAB1 . 'MAILLAGE'\n   \n    Exemples : vibr4.dgibi, rotor6.dgibi\n\n   ",
  },
  {
    name: "EXTC",
    url: "EXTC",
    documentation:
      "$$$$ EXTC     NOTICE  CHAT      11/09/12    21:16:09     7124           \n                                             DATE     11/09/12\n\n  Operateur EXTC                          Voir aussi :\n     --------------  \n       OBJ2 = EXTC OBJET1 I ;\n\n\n\n     Objet : extraire les points centre ou face d'un objet maillage\n\n             type FACEL\n\n\n      OBJET1 objet maillage type FACEL de type SEG3 obligatoirement\n                                       (ptc1 ptface ptc2)\n\n      I : indice valant 1,2 ou 3 indiquant la rangee que l'on extrait\n\n\n      OBJET2 : objet maillage resultat de type POI1",
  },
  {
    name: "EXTE",
    url: "EXTE",
    documentation:
      "$$$$ EXTE     NOTICE  CHAT      11/09/12    21:16:09     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur EXTE                           Voir aussi :\n    --------------  \n    TABS = EXTE COMMANDE (! ENTIn     ) .....            ;\n                          ! FLOTn\n                          ! MOTn\n                          ! LISTREELn\n                          ! LISTENTIn\n                          ! TABLEn\n                          ! 'RC'\n\n\n    Objet :\n    _______\n\n    L'operateur EXTE appele une commande exterieur a Castem, lui \ntransmet des valeurs et range dans une table ses resultats.\n\n    La commande lit les valeurs sur son entree standard et ecrit les \nresultats sur sa sortie standard.\n\n    Les valeurs peuvent etre des entiers, des flottants, des mots, des\nlistentiers, des listreels.\n\n    Si une table est fournie, c'est son contenu (indice par des \nentiers positifs) qui est transmis.\n\n    Le mot cle RC indique que l'on veut inserer un retour chariot.\n\n    Les resultats sont ranges dans la table TABS, indices par des \nentiers.\n\n    Exemple :\n\n TABS = EXTE 'bc' 1 + 2 'RC' 3 * 6 'RC';\n\n    EXTE appele la commande unix bc (basic calculator) et lui passe en \nentree 1 + 2 puis sur une autre ligne 3 * 6.\n\n    En sortie, sur un systeme UNIX possedant bc, TABS contient avec \ncomme indice 1 l'entier 3 et comme indice 2 l'entier 18. Sinon TABS\nest vide.",
  },
  {
    name: "EXTR",
    url: "EXTR",
    documentation:
      "$$$$ EXTR     NOTICE  PV        21/08/02    21:15:00     11083          \n                                             DATE     21/08/02\n\n\n    Operateur EXTRAIRE                       Voir aussi : EXCO ENLE\n    ------------------  \n\n                OBJET1 = EXTRAIRE OBJET2 OBJET3 ;\n\n\n    Objet :\n    _______\n\n    L'operateur EXTRAIRE permet d'extraire de l'objet OBJET2\nle composant d'indice OBJET3.\n\n\n    Operations possibles :\n    ______________________\n\n------------------------------------------------------------------\n|    OBJET2     |   OBJET3                      |    OBJET1      |\n------------------------------------------------------------------\n|   MOT         |                               |    TABLE       |\n|   MOT         |  ENTI1 (ENTI2)  OU  LISTENTI  |    MOT         |\n------------------------------------------------------------------\n|   LISTREEL    |  ENTIER                       |    FLOTTANT    |\n|   LISTREEL    |  LISTENTI                     |    LISTREEL    |\n|   LISTENTI    |  ENTIER                       |    ENTIER      |\n|   LISTENTI    |  LISTENTI                     |    LISTENTI    |\n------------------------------------------------------------------\n|   LISTMOTS    |  ENTIER                       |    MOT         |\n|   LISTMOTS    |  LISTENTI                     |    LISTMOTS    |\n------------------------------------------------------------------\n|   LISTCHPO    |  ENTIER                       |    CHPOINT     |\n|   LISTCHPO    |  LISTENTI                     |    LISTCHPO    |\n|   LISTCHPO    |  'VALE' (MOT1|LMOT1) (POIN1)  |    LISTREEL    |\n------------------------------------------------------------------\n|   MCHAML      |  MOT ENTIER ENTIER ENTIER     |    FLOTTANT    |\n|   MCHAML      |  MOT ENTIER ENTIER ENTIER     |    OBJET       |\n|   MCHAML      |  'TITR' OU 'TYPE'             |    LISTMOTS    |\n|   MCHAML      |  'MAIL'                       |    MAILLAGE    |\n|   MCHAML      |  'COMP' ( MODL1 )             |    LISTMOTS    |\n|   MCHAML      |  'CONS' ( MODL1 )             |    LISTMOTS    |\n|   MCHAML      |  'DEVA'                       |    LISTMOTS    |\n|   MCHAML      |  'COVA'                       |    LISTMOTS    |\n|   MCHAML      |  'NBZO'                       |    ENTIER      |\n------------------------------------------------------------------\n|   MMODEL      |  'MAIL'                       |    MAILLAGE    |\n|   MMODEL      |  'MAIL' 'FROT'                |    MAILLAGE    |\n|   MMODEL      |  'ZONE'                       |    TABLE       |\n|   MMODEL      |   MOT1   MOT2                 |    MMODEL      |\n|   MMODEL      |   MOT1                        |    LISTMOTS    |\n|   MMODEL      |  'PARA'                       |    LISTMOTS    |\n|   MMODEL      |  'NLOC'                       |    LISTMOTS    |\n|   MMODEL      |  'PHAS'                       |    LISTMOTS    |\n------------------------------------------------------------------\n|   EVOLUTION   |  MOT ou 'ORDO' 'ABSC' N       |    LISTREEL    |\n|   EVOLUTION   |  'COUR' | N        |          |    EVOLUTION   |\n|               |         | MOT1     |          |    EVOLUTION   |\n|               |         | LISTENT1 |          |    EVOLUTION   |\n|   EVOLUTION   |  'PAS'  ENTI1                 |    EVOLUTION   |\n|   EVOLUTION   |  MOT1  'INDI' ENTI1 ('ZERO')  |    EVOLUTION   |\n|   EVOLUTION   |  MOT1         FLOT2 ('ZERO')  |    EVOLUTION   |\n|   EVOLUTION   |  'COUL' |                     |    LISTMOTS    |\n|               |         | N                   |    MOT         |\n------------------------------------------------------------------\n|   SUPERELE    |  MOT                          |    RIGIDITE    |\n------------------------------------------------------------------\n|   RIGIDITE    |  MOT1   ( MOT2 )  (MOT3)      |    MAILLAGE    |\n|   RIGIDITE    |  MOT1   ( MOT2 )              |    RIGIDITE    |\n|   RIGIDITE    |  'CONT'                       |    TABLE       |\n|   RIGIDITE    |  'COMP' ('DUAL')              |    LISTMOTS    |\n|   RIGIDITE    |  'DIAG'                       |    CHPOINT     |\n|   RIGIDITE    |   | LISTMOT1 LISTMOT2 |       |    RIGIDITE    |\n|               |   |   MOT1    MOT2    |       |    RIGIDITE    |\n------------------------------------------------------------------\n|   MATRIK      |  'COMP' ('DUAL')              |    LISTMOTS    |\n|   MATRIK      |  'DIAG'                       |    CHPOINT     |\n|   MATRIK      |   | LISTMOT1 LISTMOT2 |       |    MATRIK      |\n|               |   |   MOT1    MOT2    |       |    MATRIK      |\n------------------------------------------------------------------\n|   CHPOINT     | 'MAIL' ('NOMU')               |    MAILLAGE    |\n|   CHPOINT     |  MOT1  POIN1 (NHARM)          |    FLOTTANT    |\n|   CHPOINT     | 'VALE' (COMP1) (GEO1) ('NOID')|    LISTREEL    |\n|   CHPOINT     | 'TITR'                        |    MOT         |\n|   CHPOINT     | 'COMP'                        |    LISTMOTS    |\n|   CHPOINT     | 'TYPE'                        |    MOT         |\n|   CHPOINT     | 'NATU'                        |    MOT         |\n------------------------------------------------------------------\n|   BASEMODA    |  MOT                          |    SOLUTION    |\n|   BASEMODA    |  MOT                          |    RIGIDITE    |\n------------------------------------------------------------------\n|   DEFORME     |  MOT                          |    FLOTTANT    |\n------------------------------------------------------------------\n|   CHARGEME    |  'CHAR' (ENTIER)              |    CHARGEME    |\n|   CHARGEME    |  'CHAM' (ENTIER)              | CHPOINT,MCHAML |\n|   CHARGEME    |  'TRAJ' (ENTIER)              |    CHPOINT     |\n|   CHARGEME    |  'EVOL' (ENTIER)              |    EVOLUTIO    |\n|   CHARGEME    |  'VITE' (ENTIER)              |    EVOLUTIO    |\n|   CHARGEME    |  'COMP'                       |    LISTMOTS    |\n|   CHARGEME    |  'LIE '                       |    CHARGEME    |\n|   CHARGEME    |  'LIBR'                       |    CHARGEME    |\n|   CHARGEME    |   MOT                         |    CHARGEME    |\n|   CHARGEME    |   LISTMOTS                    |    CHARGEME    |\n|   CHARGEME    |   MOT  'TABL'                 |    TABLES      |\n------------------------------------------------------------------\n|   NUAGE       |  'COMP'                       |    LISTMOTS    |\n|   NUAGE       |  'MAXI' MOT                   |    NUAGE1      |\n|   NUAGE       |  'MINI' MOT                   |    NUAGE1      |\n|   NUAGE       |  'INFE' MOT FLOTTANT          |    NUAGE1      |\n|   NUAGE       |  'SUPE' MOT FLOTTANT          |    NUAGE1      |\n|   NUAGE       |  'ENTR' MOT FLOT1 FLOT2       |    NUAGE       |\n|   NUAGE1      |   MOT                         |    OBJET TYPE  |\n|   NUAGE1 = NUAGE ne comportant qu'un seul n-uplet              |\n------------------------------------------------------------------\n\n\n    Remarque pr\u00e9liminaire :\n    _______________________\n\n    Si l'op\u00e9rateur est appliqu\u00e9 \u00e0 un v\u00e9ritable objet (ex. : LISTREEL)\n    il cr\u00e9e un nouvel objet (dans cet ex. : un FLOTTANT).\n    Par contre, s'il est appliqu\u00e9 \u00e0 une suite d'objets (ex. : LISTCHPO\n    ou TABLE), alors il ne fait qu'affecter un nom \u00e0 un objet d\u00e9j\u00e0\n    existant (ex. : un CHPOINT dans le cas d'un LISTCHPO).\n\n\n\n >> CAS D'UN OBJET DE TYPE 'MOT'\n    ____________________________\n\n    1) Il s'agit de fabriquer une TABLE contenant tous les objets nomm\u00e9s\n       qui ont pour type le mot lu. La TABLE est indic\u00e9e par des entiers\n       1, 2, 3, etc...\n\n\n    2) Extraction d'une sous-cha\u00eene de caract\u00e8res :\n\n        - soit de la position ENTI1 incluse jusqu'\u00e0 la fin de la cha\u00eene\n        - soit de la position ENTI1 jusqu'\u00e0 la position ENTI2 (incluses)\n        - soit les caract\u00e8res indiqu\u00e9s dans un LISTENTI\n\n       Dans tous les cas, la position du premier caract\u00e8re vaut 1, et\n       celle du dernier est donn\u00e9e par l'op\u00e9rateur DIME.\n\n\n\n >> CAS DES OBJETS DE TYPE 'MCHAML'\n    _______________________________\n\n    1) Extraction de la valeur d'une composante en un lieu donn\u00e9 :\n\n       Il faut alors un mot specifiant la composante, un premier entier\n       specifiant le numero de la sous-zone, un deuxieme specifiant le\n       numero d'un element et un troisieme specifiant le numero du point\n       de Gauss. La composante peut etre reelle ou entiere, auquel cas\n       il s'agira en general d'un objet pointe, qui sera donc extrait.\n\n\n    2) Extraction du titre ( ou du type ) d'un MCHAML\n\n\n    3) Extraction du MAILLAGE support\n\n\n    4) Extraction des noms de composantes d'un MCHAML :\n\n       On peut alors donner un objet MMODEL (MODL1) a une sous-zone.\n       Dans le cas ou le MMODEL comporte plusieurs sous-zones, tous les\n       noms de composantes des differents sous-paquets seront mis les un\n       a la suite des autres dans le meme objet LISTMOTS, ainsi qu'en\n       l'absence du modele.\n\n\n    5) Extraction des noms de constituant d'un MCHAML :\n\n       On peut alors donner un objet MMODEL (MODL1) a une sous-zone.\n       Dans le cas ou le MMODEL comporte plusieurs sous-zones, tous les\n       noms des constituants des differents sous-paquets seront mis les\n       uns \u00e0 la suite des autres dans le meme objet LISTMOTS, ainsi\n       qu'en l'absence du modele. L'objet LISTMOTS etant compose de mots\n       de 4 lettres, a un constituant nombre ou blanc correspond le mot\n       '    '.\n\n\n    6) Extraction des noms des variables dont dependent les composantes\n       du MCHAML. Les types de ces composantes peuvent etre FLOTTANT,\n       EVOLUTIO, NUAGE ou LISTMOTS (mot-cle  DEVA).\n\n\n    7) Extraction des noms de composantes variables, c'est-a-dire\n       dependantes d'une autre variable (mot-cle COVA)\n       \n\n    8) Extraction du nombre de zones (mot-cle NBZO)\n\n\n\n >> CAS DES OBJETS DE TYPE 'EVOLUTION'\n    __________________________________\n\n    1) Extraction d'une liste de reels :\n\n      a/ On donne le titre du LISTREEL a l'aide d'un mot de 12\n         caracteres au maximum. C'est la premiere progression\n         rencontree possedant ce titre qui sera fournie.\n         (On peut lire les titres sur le dessin de l'evolution par exemple)\n\n      b/ On precise l'abscisse ou l'ordonnee et le numero N de la courbe\n         dans l'objet EVOLUTION (1 par defaut).\n\n      exemples: EVOL1  = EVOL MANU 'TEMPS (S) ' LDT FORCE LFX ;\n                LISTDT = EXTR EVOL1 'TEMPS (S)'  ;\n                LISTDT = EXTR EVOL1 'ABSC'       ;\n                LISTFX = EXTR EVOL1 'ORDO' 1     ;\n                LISTFX = EXTR EVOL1 'FORCE'      ;\n\n\n    2) Extraction de courbes de l'objet EVOLUTION\n\n      a/ Extraction de la N^ieme courbe de l'EVOLUTION\n         exemple : EVOL3  = EXTR EVOL2 'COUR' 3 ;\n\n      b/ Extraction des courbes de nom d'abscisses ou d'ordonnees donne\n         exemple : EVOL3  = EXTR EVOL2 'COUR' 'FX' ;\n         \n      c/ Extraction des {N1, N2 ...}^ieme courbe de l'EVOLUTION\n         exemple : LISTENT1 = LECT N1 N2 ... ;\n                   EVOL3    = EXTR EVOL2 'COUR' LISTENT1 ;\n\n\n    3) Extraction de certains couples de l'objet EVOLUTION,\n       selon OBJET3 defini comme suit :\n\n         |  'PAS '     ENTI1         \n         |  'AVAN'  | 'INDI' ENTI2  | \n         |          |        FLOT2  |\n         |  'APRE'  | 'INDI' ENTI3  | ('ZERO')\n                    |        FLOT3  |\n         |  'COMP'  | 'INDI' ENTI2  ENTI3 | ('ZERO')\n                    |        FLOT2  FLOT3 |\n\n       ENTI1 : ENTIER definissant le pas des couples extraits \n               (on extrait 1 couple sur ENTI1).\n\n       ENTI2 : indice (ENTIER) jusqu'auquel on extrait les couples.\n       ENTI3 : indice (ENTIER) a partir duquel on extrait les couples.\n               \n       FLOT2 : valeur de l'abscisse (FLOTTANT) jusqu'auquel\n               on extrait les couples.\n       FLOT3 : valeur de l'abscisse (FLOTTANT) a partir duquel \n               on extrait les couples.\n               \n       'ZERO' : mot-cle pour redefinir l'origine des abscisses a 0\n               (seulement avec les options 'APRE' et 'COMP').\n\n               \n       exemples:  ev1 = EVOL MANU (prog 0 5 20 30 40) (prog 5 8 7 6 1);\n       \n                  ev2 = EXTR ev1 'PAS' 2;\n                    --> abscisse d'ev2 : 0 20 40 \n                        ordonnee d'ev2 : 5  7  1\n                        \n                  ev3 = EXTR ev1 'COMP' 'INDI' 2 4;\n                    --> abscisse d'ev3 : 5 20 30  \n                        ordonnee d'ev3 : 8  7  6 \n                        \n                  ev4 = EXTR ev1 'APRE' 'INDI' 2 'ZERO';\n                    --> abscisse d'ev4 : 0 15 25 35 \n                        ordonnee d'ev4 : 8  7  6  1\n       \n\n    4) Extraction de la legende de la N ieme courbe\n       exemples: EVOL1  = EVOL MANU 'TEMPS (S) ' LDT 'Debit' LFX ;\n                 LEGT   = EXTR EVOL1 'LEGX' 1     ;\n                 LEGD   = EXTR EVOL1 'LEGY' 1     ;\n         => LEGT contient la chaine 'TEMPS (S) '\n            LEGD contient la chaine 'Debit'\n\n            \n    5) Extraction de la couleur d'une evolution\n       si l'indice N de la N ieme courbe est fourni, le resultat sera un\n       MOT, sinon, le resultat sera un LISTMOT.\n       exemple : EVOL1 = (EVOL 'BLEU' 'MANU' (prog 1 2) (prog 3. 3.14))\n                      et (EVOL 'ROUG' 'MANU' (prog 1 2) (prog 3. 3.14));\n                 COUL1 = EXTR EVOL1 'COUL' ;\n                 COUL2 = EXTR EVOL1 'COUL' 2;\n                 --> COUL1 contient le LISTMOTS 'BLEU' 'ROUG'\n                 --> COUL2 contient le mot 'ROUG'\n\n\n                 \n >> CAS DES OBJETS DE TYPE 'SUPERELE'\n    _________________________________\n\n    Dans ce cas , MOT indique ce qu'il faut extraire, a savoir\n       'RIGT' pour la rigidite totale\n       'RIGI' pour la rigidite\n       'MASS' pour la masse\n       'BLOQ' pour les bloquages\n       'ELEM' pour le maillage\n\n     exemple: SUP  = SUPER  RI  GEO ;\n              RIEQU = EXTRAI  SUP 'RIGI' ;\n              RITOT = EXTRAI  SUP 'RIGT' ;\n\n\n\n >> CAS DES OBJETS DE TYPE 'RIGIDITE'\n    _________________________________\n\n    1) Dans le cas ou MOT1 est le mot 'MAIL' :\n       MOT2 est optionnel, et si il n'est pas precise, le maillage\n       contient tous les noeuds, y compris ceux associes aux\n       multiplicateurs de Lagrange, sinon si MOT2 vaut :\n\n       - 'NOMU'  indique que l'on veut le maillage qui contient\n                 tous les noeuds sauf ceux associes aux\n                 multiplicateurs de Lagrange.\n       - 'MULT'  indique que l'on veut le maillage qui contient\n                 uniquement les noeuds associes aux multiplicateurs\n                 de Lagrange.\n       - 'UNIL'  indique que l'on s'interesse aux relations uni-\n                 laterales. Par defaut l'operateur renvoie les points\n                 supports des multiplicateurs de Lagrange correspondant\n                 a des relations unilaterales.\n                 Si le mot 'TRI3' (MOT3)  est precise\n                 en plus, l'operateur renvoie un maillage forme\n                 d'elements TRI3 dont les noeuds sont des\n                 points geometriques qui interviennet dans les\n                 relations unilaterales avec 3 noeuds exactement\n                 contenues dans RIG1.\n                 (contacts en 2D generes par IMPO).\n\n       OBJET2 est le maillage sous-tendant la rigidite.\n\n\n    2) Dans le cas ou MOT1 est le mot 'RIGI' :\n       MOT2 est obligatoire et vaut :\n       - 'NOMU'  si on desire extraire la rigidite sans les blocages.\n       - 'MULT'  si on desire extraire la rigidite associee\n                 aux blocages.\n\n       OBJET2 est dans ce cas un objet de type RIGIDITE.\n\n\n    3) Dans le cas ou MOT1 vaut :\n       - 'SYME'  on desire extraire les matrices elementaires\n                 symetriques de la rigidite totale\n       - 'ANTI'  on desire extraire les matrices elementaires\n                 antisymetriques de la rigidite totale\n\n       OBJET2 est dans ce cas un objet de type RIGIDITE.\n\n\n    4) Dans le cas ou MOT1 vaut 'CONT' on extrait de la rigidite la\n       TABLE ayant servi aux appuis unilateraux.\n\n\n    5) Dans le cas ou MOT1 vaut 'COMP' on extrait de la rigidite la\n       liste des noms des composantes. Si on ajoute le mot 'DUAL', on\n       extrait la liste des noms des duaux.\n\n\n    6) Dans le cas ou MOT1 vaut 'DIAG' on extrait la diagonale\n       de la rigidite sous la forme d'un CHPOINT.\n\n\n    7) Dans le cas ou on donne deux LISTMOTS (resp. deux MOT), on\n       extrait de la rigidite la sous-rigidite de composantes\n       primales LISTMOT1 (resp. MOT1) et de composantes duales\n       LISTMOT2 (resp. MOT2).\n\n\n\n >> CAS DES OBJETS DE TYPE 'MATRIK'\n    _______________________________\n\n    1) Dans le cas ou MOT1 vaut 'COMP' on extrait de la matrice la\n       liste des noms des composantes. Si on ajoute le mot 'DUAL', on\n       extrait la liste des noms des duaux.\n\n\n    2) Dans le cas ou MOT1 vaut 'DIAG' on extrait la diagonale\n       de la matrice sous la forme d'un CHPOINT.\n\n\n    3) Dans le cas ou on donne deux LISTMOTS (resp. deux MOT), on\n       extrait de la matrice la sous-matrice de composantes\n       primales LISTMOT1 (resp. MOT1) et de composantes duales\n       LISTMOT2 (resp. MOT2).\n\n\n\n >> CAS DES OBJETS DE TYPE 'CHPOINT'\n    ________________________________\n\n    1) Extraction du MAILLAGE sous-tendant le CHPOINT.\n\n       On peut exclure les points associes aux multiplicateurs de\n       Lagrange en indiquant 'NOMU' comme MOT2.\n\n\n    2) Extraction de la valeur d'une composante en un point.\n\n       MOT1 est alors le nom de la composante que l'on veut extraire au\n       point POIN1.\n       Dans le cas 2D Fourier, on peut demander un numero d'harmonique\n       specifique via l'entier NHARM. Par defaut, l'harmonique courante\n       est utilisee.\n\n\n    3) Extraction des valeurs d'un CHPOINT.\n\n       Les valeurs sont rangees dans un objet de type LISTREEL.\n       \n       L'ordre d'extraction peut etre impose en donnant une suite de\n       noeuds dans GEOM1 (objet POINT ou MAILLAGE de POI1). Les noeuds\n       de GEOM1 n'appartenant pas au support du CHPOINT se verront\n       attribuer une valeur nulle dans le LISTREEL. Si GEOM1 n'est pas\n       fourni, il n'y aura pas necessairement le meme nombre de valeurs\n       pour toutes les composantes.\n       \n       Quand le CHPOINT possede plusieurs composantes, on doit choisir\n       celles qui apparaitront dans le LISTREEL grace a COMP1 (de type\n       MOT ou LISTMOTS). Si une composante de COMP1 n'appartient pas au\n       CHPOINT :\n        a) en l'absence du mot-cle 'NOID', une erreur sera declenchee \n        b) si le mot-cle 'NOID' est present :\n         - des valeurs nulles seront attribuees aux noeuds de GEOM1 si\n           fourni\n         - aucune valeur n'est ajoutee au LISTREEL si GEOM1 est absent\n       \n       Au final, l'ordre du LISTREEL est le suivant :\n\n          (Comp1,Pt1);(Comp1,Pt2);...;(Comp2,Pt1);(Comp2,Pt2);...\n\n\n    4) Extraction du titre d'un CHPOINT\n\n\n    5) Extraction des noms des composantes. Le resultat est un objet\n       de type LISTMOTS contenant les noms des composantes sur 4 lettres.\n\n\n    6) Extraction du type d'un CHPOINT. Le resultat est un mot de 8\n       lettres.\n\n\n    7) Extraction de la nature d'un CHPOINT. Le resultat est un mot de\n       11 lettres.\n\n\n\n >> CAS DES OBJETS DE TYPE 'BASEMODA'\n    _________________________________\n\n    1) Extraction d'un objet SOLUTION\n\n       MOT est alors soit 'MODE' pour extraire un objet SOLUTION de\n       sous-type MODE, soit 'STAT' pour extraire un objet SOLUTION de\n       sous-type SOLUSTAT, soit 'PSMO' pour extraire un objet SOLUTION\n       de sous-type PSEUMODE.\n\n\n    2) Extraction d'un objet RIGIDITE\n\n       MOT est alors soit 'RIGI' pour extraire un objet RIGIDITE de\n       sous-type RIGIDITE, soit 'MASS' pour extraire un objet RIGIDITE\n       de sous-type MASSE.\n\n\n\n >> CAS DES OBJETS DE TYPE 'DEFORME'\n    ________________________________\n\n    MOT est alors 'AMPL'. Le coefficient d'amplification de la deformee\n    est extrait.\n\n\n\n >> CAS DES OBJETS DE TYPE 'MMODEL'\n    _______________________________\n\n    1) Extraction du MAILLAGE sous-tendant le MMODEL.\n       Le mot-cle supplementaire 'FROT' extrait d'un MMODEL 'CONTACT' \n       'COULOMB', le MAILLAGE cr\u00e9\u00e9 par l'op\u00e9rateur IMPF.\n\n\n    2) extraction de toutes les zones du modele et des maillages\n       en les mettant dans une table indicee par des entiers.\n       Indice 1  objet MMODEL de la premiere zone, indice 2 objet\n       MAILLAGE de la premiere zone, indice 3 objet MMODEL de la\n       deuxieme zone, etc...\n\n\n    3) Extraction des zones du MMODEL correspondant a une formulation\n       donnee, ou a une mise en oeuvre non locale.\n       Dans le premier cas, MOT1 est alors 'FORM' et MOT2 est un ou\n       plusieurs mots definissant la formulation.\n       Dans le second cas, MOT1 est alors 'NON_LOCALE' et MOT2 est un\n       mot d\u00e9finissant la mise en oeuvre non locale.\n\n    4) Extraction des zones du MMODEL correspondant a un ou plusieurs\n       constituants donnes. Dans ce cas MOT1 est alors 'CONS' et MOT2\n       est un ou plusieurs mots definissant les constituants. Dans le\n       cas d'un constituant exprime par un nombre, on entre le nombre\n       entre quotes (ex: '123456').\n\n\n    5) Extraction des zones du MMODEL correspondant a un ou plusieurs\n       elements finis donnes. Dans ce cas MOT1 est alors 'ELEM' et MOT2\n       est un ou plusieurs mots definissant les elements finis.\n\n\n    6) Extraction des noms des composantes correspondant a un type de\n       variable donne en les mettant dans un objet de type LISTMOTS.\n       Dans ce cas MOT1 peut prendre 11 valeurs differentes:\n         'GEOM' : Nom des composantes des caracteristiques geometriques\n         'CONT' : Nom des composantes de contrainte\n         'DEFO' : Nom des composantes de deformation\n         'DEPL' : Nom des composantes de deplacement\n         'FORC' : Nom des composantes de force\n         'GRAD' : Nom des composantes de gradient\n         'GRAF' : Nom des composantes de gradient en flexion\n         'MATE' : Nom des composantes de materiau\n         'CONP' : Nom des composantes des contraintes principales\n         'TEMP' : Nom des composantes de temperature\n         'VARI' : Nom des composantes de variable interne\n\n\n    7) Extraction des zones du MMODEL correspondant a une ou plusieurs\n       phases donnees. Dans ce cas MOT1 est alors 'PHAS' et MOT2\n       est un ou plusieurs mots definissant les phases.    \n\n    8) Extraction des noms des parametres externes du MMODEL.\n       L'extraction est faite sur toutes les sous-zones du MMODEL, avec\n       elimination des redondances. Le resultat est un objet LISTMOTS\n       contenant les noms des parametres (4 caracteres).\n       S'il n'existe pas de parametres externes, le resultat est un\n       objet LISTMOTS vide.\n\n\n    9) Extraction des zones du MMODEL ayant dans le comportement le mot MOT2.\n       Dans ce cas MOt1 a la valeur 'COMP'.\n\n\n    10) Extraction des noms des variables internes du MMODEL qui\n       sont moyennees dans la mise en oeuvre non locale.\n       L'extraction est faite sur toutes les sous-zones du MMODEL, avec\n       elimination des redondances. Le resultat est un objet LISTMOTS\n       contenant les noms des parametres (4 caracteres).\n\n\n    11) Extraction des noms des phases du MMODEL.\n       L'extraction est faite sur toutes les sous-zones du MMODEL, avec\n       elimination des redondances. Le resultat est un objet LISTMOTS\n       contenant les noms des phases (8 caracteres).\n            S'il n'existe pas de phases, le resultat est un\n       objet LISTMOTS vide.\n\n           \n\n >> CAS DES OBJETS DE TYPE 'CHARGEME'\n    _________________________________\n\n    1) 'CHAR' extrait de OBJET2 l'objet CHARGEME du numero indique dans\n       OBJET3 ou sinon le premier.\n\n\n    2) 'CHAM' extrait de OBJET2 l'objet CHPOINT ou MCHAML du numero\n       indique dans OBJET3 ou sinon le premier.\n\n\n    3) 'TRAJ' extrait de OBJET2 l'objet CHPOINT associe a la modulation\n       dans l'espace du CHPOINT ou MCHAML du CHARGEME (de nature mobile)\n       du numero indique dans OBJET3 ou sinon le premier.\n\n\n    4) 'EVOL' extrait de OBJET2 l'objet EVOLUTIO associe a la modulation\n       dans le temps du CHPOINT ou MCHAML du CHARGEME de numero indique\n       dans OBJET3 ou sinon le premier.\n\n\n    5) 'VITE' extrait de OBJET2 l'objet EVOLUTIO associe a la modulation\n       dans l'espace du CHPOINT ou MCHAML du CHARGEME (de nature mobile)\n       de numero indique dans OBJET3 ou sinon le premier.\n\n\n    6) 'COMP' extrait de OBJET2 les noms des chargements elementaires.\n\n\n    7) 'LIE ' (resp. 'LIBR') extrait de OBJET2 l'objet chargement\n       rassemblant tous les chargements de cette nature.\n\n\n    8) MOT extrait de OBJET2 le chargement elementaire de nom MOT.\n       LISTMOTS extrait de OBJET2 tous les chargements elementaires\n       dont le nom est contenu dans la liste LISTMOTS\n\n\n    9) MOT suivi de 'TABL' retourne les deux tables donnant, l'une, la\n       liste des temps et l'autre les cartes de la quantite scalaire MOT\n       correspondantes (souvent utilise pour la temperature 'T   ').\n\n\n\n >> CAS DES OBJETS DE TYPE 'NUAGE'\n    ______________________________\n\n    1) Extraction des noms des composantes. Le resultat est un objet\n       de type LISTMOTS contenant les noms des composantes sur 8 lettres.\n\n\n    2) Extraction du n-uplet correspondant a la valeur reelle\n       Inferieure au FLOTTANT entre, pour le nom de composante donne.\n       Le resultat est un objet de type NUAGE ne contenant qu'un\n       seul n-uplet.\n\n\n    3) Extraction du n-uplet correspondant a la valeur reelle\n       Superieure au FLOTTANT entre, pour le nom de composante donne.\n       Le resultat est un objet de type NUAGE ne contenant qu'un\n       seul n-uplet.\n\n\n    4) Extraction du n-uplet correspondant a la valeur minimale de la\n       variable reelle caracterisee par un nom de composante donnee.\n       Le resultat est un objet de type NUAGE.\n\n\n    5) Extraction du n-uplet correspondant a la valeur maximale de la\n       variable reelle caracterisee par un nom de composante donnee.\n       Le resultat est un objet de type NUAGE.\n\n\n    6) Extraction du sous-NUAGE caracterise par deux valeurs reelles et\n       un nom specifique de composante. Le NUAGE ainsi cree a toutes ses\n       valeurs reelles correspondant a la composante sus-cite comprises\n       entre les deux valeurs reelles donnees.\n\n\n    7) Extraction de l'objet correspondant a un nom de composante donne\n       a partir d'un NUAGE \"colonne\".\n       \n       \n >> CAS DES OBJETS DE TYPE 'LISTCHPO'\n    _________________________________\n\n\n    1) Extraction d'un ou plusieurs CHPOINT\n\n       Il suffit de fournir les indices correspondants sous forme\n       d'un ENTIER ou d'un LISTENTI\n    \n    \n    2) Extraction des valeurs en un point\n\n       Les valeurs sont rangees dans un objet de type LISTREEL dans\n       le meme ordre que celui du LISTCHPO. Les objets CHPOINT dont le\n       support geometrique ne contient pas le noeud POIN1 donneront\n       par convention une valeur nulle. Si tous les objets CHPOINT\n       ne possedent pas les memes composantes, il faut choisir celles\n       qui apparaitront dans le LISTREEL grace a un mot MOT1 ou une\n       liste de mots LMOT1. Au final, l'ordre est le suivant :\n\n       (Comp1,Chpo1);(Comp1,Chpo2);...;(Comp2,Chpo1);(Comp2,Chpo2);...\n\n       ",
  },
  {
    name: "FACE",
    url: "FACE",
    documentation:
      "$$$$ FACE     NOTICE  CHAT      11/09/12    21:16:10     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur FACE                           Voir aussi :\n    --------------  \n    GEO1 = FACE (N1)  GEO2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur FACE sert a retrouver la N1-ieme face d'un objet\nmassif GEO2 (type MAILLAGE) maille avec des cubes.\n\n    Commentaire :\n    _____________\n\n    N1   : numero de la face (type ENTIER)\n\n    GEO2 : element massif (type MAILLAGE)\n\n    GEO1 : face de l'element (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    La premiere face est conventionnellement la face du bas (face\ninitiale d'un objet engendre par translation) et la deuxieme, la face\ndu haut (opposee a la premiere).\n\n    Si N1 n'est pas indique, FACE rend toutes les faces de l'objet.\n\n    Exemple:      F1 F2 F3 = FACE MONVOLUM ;",
  },
  {
    name: "FACTORIE",
    url: "FACTORIE",
    documentation:
      "$$$$ FACTORIE NOTICE  CHAT      11/09/12    21:16:10     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure FACTORIE                       Voir aussi :\n    ------------------  \n    ENTI1 = FACTORIE ENTI2 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule la factorielle d'un entier.\n\n    Commentaire :\n    _____________\n\n    ENTI2 : nombre dont on veut la factorielle (type ENTIER)\n\n    ENTI1 : factorielle du nombre ENTI2 (type ENTIER)",
  },
  {
    name: "FANT",
    url: "FANT",
    documentation:
      "$$$$ FANT     NOTICE  CHAT      11/09/12    21:16:10     7124           \n                                             DATE     11/09/12\n\n  Directive FANTOME                        Voir aussi :   \n    -----------------                                       \n          FANTOME TAB1  INDICE1 ;\n\n\n    Objet :\n    _______\n\n    La directive FANTOME permet d'attribuer a un objet contenu dans une table\nle type FANTOME. Pour cela il faut que l'objet ait ete pealablement sauvegarde\npar la directive SAUVER. \n\n    L'interet de cette operation est de pouvoir recuperer la place memoire des \nobjets prenant le type FANTOME.\n\n\n     Commentaires :\n     --------------\n       TAB1    est l'objetc de type TABLE \n \n       INDICE1 est l'indice permettant d'atteindre l'objet a faire disparaitre\n\n     ",
  },
  {
    name: "FATI",
    url: "FATI",
    documentation:
      "$$$$ FATI     NOTICE  KICH      19/10/07    21:15:00     10318          \n                                             DATE     19/10/07\n    Operateur FATI                            Voir aussi : PASAPAS\n    --------------                                             \n    TAB1 = 'TABLE' 'PASAPAS' ;\n    TAB1.'MODELE' = MO1 ;\n    ...\n    'PASAPAS' TAB1 ;\n    CHAR1 = 'CHAR' TAB1.'TEMPS' TAB1.'CONTRAINTES' ; \n    \n    CHE2 = 'MANU' 'CHML' MO1 'AA' -0.33 'BB' 8.e7\n         'TYPE' 'CARACTERISTIQUES' 'STRESSES' ;\n\n    CHE3 = 'FATI' MO1 CHAR1 CHE2 MOT4 ;\n\n    (MOT4 : 'TOUS','DVKP','PAPA','SINE','CROS','DC','VMIS')\n \n    EV5 = 'EXTR' CHE3 'TRAJ' IZO IEL IGA ;\n    'DESS' EV5 ;\n    'OPTI' 'SORT' 'test.csv' ;\n    'SORT' 'EXCE' EV5 ; \n\n\n    Objet :\n    -------\n\n    En utilisant le mot cle 'TOUS', l'operateur FATI produit \n    CHE3 dont les composantes correspondent \u00e0 \n    l'\u00e9valuation de diff\u00e9rents crit\u00e8res de fatigue :\n    DANG VAN, PAPADOPOULOS, SINES, CROSSLAND, DC et VON MISES\n    a partir des resultats d'un calcul de cycle de chargement\n    avec PASAPAS.\n\n    Si l'on pr\u00e9cise 'DVKP' ou 'PAPA' la 1ere composante de\n    CHE3 est l'\u00e9valuation du critere (DANG VAN ou \n    PAPADOPOULOS), la 2nde d'\u00e9tiquette 'TRAJ' est, lorsque \n    le critere est sup\u00e9rieur \u00e0 -0.2, une paire de courbes \n    dont la 1ere est le trajet du deviateur et la 2nde \n    la droite de DANG VAN dans le plan (P, TAU), dont les\n    coefficients sont 'AA' et 'BB' donn\u00e9s par CHE2.\n    Ces courbes peuvent \u00eatre exportees vers EXCEL.\n\n    Commentaire :\n    _____________\n\n    MOD1 : type MODELE\n    CHAR1 : type CHARGEMENT\n    CHE2 : type MCHAML, titre/type CARACTERISTIQUES\n    MOT4 : type MOT\n    CHE3 : type MCHAML\n    EV5 :  type EVOLUTION",
  },
  {
    name: "FCOURANT",
    url: "FCOURANT",
    documentation:
      "$$$$ FCOURANT NOTICE  GOUNAND   18/10/25    21:15:01     9973           \n                                             DATE     18/10/25\n\n    Procedure FCOURANT\n    ------------------\n\n    CHPO1 = FCOURANT MAIL1 CHPO2 (RIG1 (CHPO3)) (TAB1)   ;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule la fonction de courant scalaire, en 2D et 2D\n    axisymetrique, correspondant au champ de vitesse a divergence nul\n    donne.\n\n    Commentaire :\n    _____________\n\n      MAIL1 : Domaine de definition de la vitesse (type MAILLAGE)\n\n      CHPO2 : Champ de vitesse (type CHPOINT)\n\n      RIG1  : Conditions sur la fonction de courant\n      CHPO3   (Par defaut, on bloque le premier noeud de MAIL1)\n\n      TAB1  : table optionnelle precisant les options pour le solveur\n              de systeme lineaire KRES (cf. notice KRES)\n\n      CHPO1 : Fonction de courant (type CHPOINT, nom de composante\n              'PSI')\n\n    Remarques :\n    ___________\n\n      1) Faute de modele, les conditions sur la fonction de courant\n         (RIG1) doivent porter sur une inconnue de nom 'T'.\n\n      2) Si TAB1 n'est pas presente, on utilise RESO pour resoudre le\n         systeme lineaire.\n\n    Notes :\n    _______\n    \n    On utilise les definitions suivantes pour la fonction de courant psi\n    en fonction du champ de vitesse u :\n\n      1) En 2D plan : dpsi/dx =   u_y\n                      dpsi/dy = - u_x\n\n      2) En 2D axisymetrique : dpsi/dr = ( 2pi r) u_z\n                               dpsi/dz = (-2pi r) u_r\n\n    Ces definitions sont compatibles avec l'interpretation suivante :\n    psi(B) - psi(A) = debit volumique (m^2.s-1 en 2D plan, m^3.s-1 en 2D \n    axi) traversant le segment [AB]. Le sens positif est celui du\n    vecteur faisant un angle de +90 degres avec le vecteur AB.\n\n    En 2D axi, psi est appelee fonction de courant de Stokes.\n    Elle est egale a la composante hors plan du potentiel vecteur\n    associe a u dans la decomposition de Helmholtz, divisee par la\n    coordonnee radiale r.\n\n    Si le champ de vitesse u n'est pas approximativement a divergence\n    nulle, les isovaleurs de la fonction de courant psi ne seront pas\n    necessairement tangentes aux vecteurs vitesse.",
  },
  {
    name: "FDENS",
    url: "FDENS",
    documentation:
      "$$$$ FDENS    NOTICE  CHAT      11/09/12    21:16:11     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure FDENS                          Voir aussi : NATAF FINVREPA\n    ----------------                                      REPART  \n  FLO2 = FDENS TAB1 FLO1;\n\n           TAB1 .  typva\n                . A\n                . B\n                . LAMBDA\n                . MU\n                . MOYENNE\n                . ECART_TYPE\n                . TAU\n                . K\n                . W\n                . MIN\n                . MAX\n                . U\n\n       FLO1 flottant.\n\n\n\n    Objet :\n    _______\n La procedure FDENS calcule la densite au point FLO1 d'une variable aleatoire\n dont les caracteristiques sont donnees dans TAB1.\n\n    Donnees :\n    ---------\n\n  TAB1 . 'TYPVA' : chaine de caractere contenant le type de\n      la  variable aleatoire.\n     Les types disponibles sont :\n                                 'LOI_UNIFORME'\n                                 'LOI_DE_LAPLACE'\n                                 'LOI_NORMALE_STANDARD' (i.e. centree,reduite)\n                                 'LOI_EXPONENTIELLE'\n                                 'LOI_LOGNORMALE'\n                                 'LOI_NORMALE'\n                                 'LOI_WEIBULL_MIN'\n                                 'LOI_NORMALE_TRONQUEE'\n                                 'LOI_EXPONENTIELLE_TRONQUEE'\n                                 'LOI_GUMBEL_MAX'\n                                 'LOI_NORMALE_TRONQUEE_INF'\n                                 'LOI_DE_FRECHET'\n\n   Dans le cas de la loi uniforme :\n  TAB1 . 'A'\n  TAB1 . 'B' : sont les bornes de l'intervalle sur lequel\n        la variable est definie (A<B)\n\n   Dans le cas de la loi de Laplace :\n pas de parametre. La densite vaut : 0.5*exp( - |x|).\n\n   Dans le cas de la loi normale centree reduite (LOI_NORMALE_STANDARD) :\n pas de parametre. La densite vaut : exp(-0.5*x^2)/((2*pi)**0.5)\n\n   Dans le cas de la loi exponentielle :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut : lambda*exp(lambda*(mu - x)) si x >= mu \n                     0                          sinon\n\n   Dans le cas de la loi lognormale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi normale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi Weibull min :\n  TAB1 . 'TAU'\n  TAB1 . 'K'\n  TAB1 . 'W'\n  la densite vaut :\n   ((X-TAU)/(W-TAU))**(K-1) * K / (W - TAU) * (exp (- ((X-TAU)/(W-TAU))**K))\n\n   Dans le cas de la loi normale tronquee :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n  TAB1 . 'MIN'\n  TAB1 . 'MAX'\n Les deux premiers parametres \n sont la moyenne et l'ecart-type de la variable aleatoire.\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi exponentielle tronquee :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n     TAB1 . 'MIN'\n     TAB1 . 'MAX'\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi Gumbel max :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut :\n lambda*exp(-lambda*(x-mu)-exp(-lambda*(x-mu)))\n\n   Dans le cas de la loi Normale tronquee inf :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n  TAB1 . 'MIN'\n  est la borne inferieure des valeurs que peut prendre la variable\n   aleatoire.\n\n   Dans le cas de la loi de Frechet :\n  TAB1 . 'U'\n  TAB1 . 'K'\n  TAB1 . 'B'\n  la densite vaut :\n   ((u - b)/(x - b))**k * exp(- ((u - b)/(x - b))**k) * k / (x - b) ",
  },
  {
    name: "FDT",
    url: "FDT",
    documentation:
      "$$$$ FDT      NOTICE  CHAT      11/09/12    21:16:11     7124           \n                                             DATE     11/09/12\n\n  Operateur  FDT                           Voir aussi :\n    --------------  \n\n    EVOL1 =  FDT  MOT1 |'CONS'    FLOT1   LREEL1   | ;\n                       |                           |\n                       |'NOCO'  | 'COUP'  LREEL2 | | ;\n                       |        |                | |\n                       |        | LREEL3         | | ;\n                       |                           |\n                       | LREEL4   LREEL5           | ;\n\n\n    Objet :\n    _______\n\n    L'operateur FDT permet de creer une fonction (type EVOLUTION)\n@ partir d'une liste d'ordonnees et d'un pas de temps.\n\n    Commentaire :\n    _____________\n\n    MOT1    : type de la fonction (type MOT) : 'ACCE', 'DEPL', etc...\n\n    'CONS'  : mot-cle indiquant que le signal est a pas constant\n\n     FLOT1  : pas de temps (type FLOTTANT)\n\n     LREEL1 : valeurs du signal (type LISTREEL)\n\n    'NOCO'  : mot-cle indiquant que le signal est a pas variable\n\n    'COUP'  : mot-cle  indiquant que le signal est donne sous la\n              forme de couples\n\n     LREEL2 : objet contenant les couples Ti,F(Ti) (type LISTREEL)\n\n     LREEL3 : objet contenant Ti,i=1,N  puis F(Ti),i=1,N\n              (type LISTREEL)\n\n     LREEL4 : objet de type LISTREEL contenant  un seul reel\n              (0. ou la valeur du pas de temps).\n\n     LREEL5 : objet de type LISTREEL contenant le signal\n              (bande CASTEM2000 engendree par TIROIR)",
  },
  {
    name: "FFOR",
    url: "FFOR",
    documentation:
      "$$$$ FFOR     NOTICE  PV        13/12/03    21:15:01     7875           \n                                             DATE     13/12/03\n\n     Operateur FFOR                          Voir aussi : MODE RAYE\n     --------------                                       RAYN  \n      CH2 = FFOR  MODL1 CHE1 ;\n\n  \n\n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n\n     Cet operateur calcule la matrice des facteurs de forme associee a\n une geometrie qui discretise une cavite.\n\n\n     Commentaire :                                                       \n     _____________                                                       \n                                                                         \n     MODL1 : structure modelisee (type MMODEL)\n\n     CHE1 :  champ par element de caracteristiques qui contient ou non\n             la valeur du coefficient d'absorption\n             \n\n     CH2   : champ contenant la matrice des facteurs de forme\n              (type MCHAML)\n                                                                         \n     Remarques :                                                         \n     ___________                                                         \n                                                                         \n  1. L'orientation trigonometrique des elements (associee a\n     l'ordre de description des noeuds dans chaque element)\n     definit une direction normale qui doit correspondre au\n     cote qui rayonne.\n     Cette condition est indispensable.\n\n  2. L'axe de revolution en axisymetrique ne doit pas etre maille.\n     Un axe (ou un plan) de symetrie ne doit pas etre maille.\n\n  3. L'option 'SYME' n'est pas disponible en axisymetrique (pour\n     definir un axe autre que l'axe de revolution).\n\n  4. L'option IMPI de l'operateur OPTI fournit les erreurs commises\n     sur les bilans et les conditions de reciprocite.\n\n  5. Dans le cas d'un milieu absorbant le coefficient d'absorption\n     doit etre negatif. Le milieu contenu dans la cavite est a\n     temperature uniforme et ne diffuse pas.\n     Cette option n'est pas compatible avec les options 'SYME'\n     ou 'CVXE'.\n\n  6. L'unite de la temperature est le degre Kelvin\n     (cf. operateur RAYN).",
  },
  {
    name: "FIABILI",
    url: "FIABILI",
    documentation:
      "$$$$ FIABILI  NOTICE  CHAT      11/09/12    21:16:11     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure FIABILI                        Voir aussi : EXCE NATAF\n    -----------------                                     FDENS   REPART  \n                                                          FINVREPA  \n    FIAB  TAB1 ;\n\n          TAB1 . param_optimisation . methode\n               . param_optimisation . t0\n               . param_optimisation . s0\n               . param_optimisation . vxmin\n               . param_optimisation . vxmax\n               . param_optimisation . vcmax\n               . param_optimisation . maxiteration\n               . noms_des_variables\n               . max_iteration\n               . fct_limite\n               . grad_fct_limite\n               . param_va . k . typva\n               . param_va . k . A\n               . param_va . k . B\n               . param_va . k . LAMBDA\n               . param_va . k . MU\n               . param_va . k . MOYENNE\n               . param_va . k . ECART_TYPE\n               . param_va . k . TAU\n               . param_va . k . K\n               . param_va . k . W\n               . param_va . k . MIN\n               . param_va . k . MAX\n               . param_va . k . U\n               . matcov\n               . points_initiaux\n               . critere\n               . resu . i . indfiab\n               . resu . i . <<nom_d_une_va>>\n               . resu . i . proba_defaillance\n               . resu . i . facteurs_de_sensibilite\n               . resu . i . vecteurs_des_sensibilites\n\n\n\n    Objet :\n    _______\n La procedure FIABILI cherche la probabilite de defaillance d'une\nstructure. Cette probabilite est evaluee par la methode FORM. \nLa procedure sort l'indice de fiabilite de Hasofer-Lind.\nLa procedure sort les sensibilites de chacune des variables aleatoires.\n\n\n    Donnees :\n    ---------\n  TAB1 . 'PARAM_OPTIMISATION'   : est une table qui contient les parametres\npour la methode d'optimisation. On utilise l'operateur EXCE de castem 2000 et\non se reportera a la notice de cet operateur pour plus de detail. Attention,\nles valeurs sont passees ici dans des listreels.\n\n  TAB1 . 'PARAM_OPTIMISATION' . 'METHODE' : (facultatif) est un mot. Le choix\n                                             est entre 'STA', 'MOV', 'LIN'.\n\n  TAB1 . 'PARAM_OPTIMISATION' . 'T0' : (facultatif) Reel compris entre 0 et 1.\n  TAB1 . 'PARAM_OPTIMISATION' . 'S0' : (facultatif) Reel compris entre 0 et 1.\n  TAB1 . 'PARAM_OPTIMISATION' . 'VXMIN' : listreel contenant les valeurs\n                                         minimales que peuvent prendre les\n                                          variables aleatoires.\n  TAB1 . 'PARAM_OPTIMISATION' . 'VXMAX' : listreel contenant les valeurs\n                                         maximales que peuvent prendre les\n                                         variables aleatoires.\n  TAB1 . 'PARAM_OPTIMISATION' . 'VCMAX' : listreel contenant les constantes\n                                            Cjmax.\n  TAB1 . 'PARAM_OPTIMISATION' . 'MAXITERATION' :(facultatif) change la valeur\n                                            maximale autorisee pour le nombre \n                                               d'iterations dans EXCE.\n                                              (Par defaut 100)\n  TAB1 . 'NOMS_DES_VARIABLES'  : listmots contenant le nom de chaque variable.\n  TAB1 . 'MAX_ITERATION' : (facultatif) change la valeur maximale autorisee\n                           pour le nombre de fois ou on lance EXCE.\n  TAB1 . 'FCT_LIMITE' : table indicee de 1 au nombre de fonctions limites\n                        qui contient les chaines de caractere qui sont les\n                        noms des procedures calculant les fonctions limites.\n        Ces procedures re\u00e7oivent en entree un listreel de valeurs prises\n        par les variables aleatoires. elles sortent un reel qui est la valeur\n        de la fonction limite en ce point.\n  TAB1 . 'GRAD_FCT_LIMITE' :(facultatif)  table indicee de 1 au nombre de\n                         fonctions limites\n                        qui contient les chaines de caractere qui sont les\n                        noms des procedures calculant les gradients des\n                        fonctions limites.\n        Ces procedures re\u00e7oivent en entree un listreel de valeurs prises\n        par les variables aleatoires. elles sortent un listreel qui contient\n        le gradient de la fonction limite en ce point.\n        Cet indice de la table est optionnels. il faut eviter de le donner\n        pour limiter le nombre d'appels a la fonction limite.\n\n  TAB1 . 'PARAM_VA'  : est une table indicee de 1 au nombre de variables \n                    aleatoires.\n\n  TAB1 . 'PARAM_VA' . k : est une table qui contient les differents parametres\n                           necessaire a la connaissance de la kieme variable \n                            aleatoire.\n  TAB1 . 'PARAM_VA' . k . 'TYPVA' : chaine de caractere contenant le type de\n      la kieme variable aleatoire.\n     Les types disponibles sont :\n                                 'LOI_UNIFORME'\n                                 'LOI_DE_LAPLACE'\n                                 'LOI_NORMALE_STANDARD' (i.e. centree,reduite)\n                                 'LOI_EXPONENTIELLE'\n                                 'LOI_LOGNORMALE'\n                                 'LOI_NORMALE'\n                                 'LOI_WEIBULL_MIN'\n                                 'LOI_NORMALE_TRONQUEE'\n                                 'LOI_EXPONENTIELLE_TRONQUEE'\n                                 'LOI_GUMBEL_MAX'\n                                 'LOI_NORMALE_TRONQUEE_INF'\n                                 'LOI_DE_FRECHET'\n\n   Dans le cas de la loi uniforme :\n  TAB1 . 'PARAM_VA' . k . 'A'\n  TAB1 . 'PARAM_VA' . k . 'B' : sont les bornes de l'intervalle sur lequel\n        la variable est definie (A<B)\n\n   Dans le cas de la loi de Laplace :\n pas de parametre. La densite vaut : 0.5*exp( - |x|).\n\n   Dans le cas de la loi normale centree reduite (LOI_NORMALE_STANDARD) :\n pas de parametre. La densite vaut : exp(-0.5*x^2)/((2*pi)**0.5)\n\n   Dans le cas de la loi exponentielle :\n     TAB1 . 'PARAM_VA' . k . 'LAMBDA'\n     TAB1 . 'PARAM_VA' . k . 'MU'\n  la densite vaut : lambda*exp(lambda*(mu - x)) si x >= mu \n                     0                          sinon\n\n   Dans le cas de la loi lognormale :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi normale :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi Weibull min :\n  TAB1 . 'PARAM_VA' . k . 'TAU'\n  TAB1 . 'PARAM_VA' . k . 'K'\n  TAB1 . 'PARAM_VA' . k . 'W'\n  la densite vaut :\n   ((X-TAU)/(W-TAU))**(K-1) * K / (W - TAU) * (exp (- ((X-TAU)/(W-TAU))**K))\n\n   Dans le cas de la loi normale tronquee :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n  TAB1 . 'PARAM_VA' . k . 'MIN'\n  TAB1 . 'PARAM_VA' . k . 'MAX'\n Les deux premiers parametres \n sont la moyenne et l'ecart-type de la variable aleatoire.\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi exponentielle tronquee :\n     TAB1 . 'PARAM_VA' . k . 'LAMBDA'\n     TAB1 . 'PARAM_VA' . k . 'MU'\n     TAB1 . 'PARAM_VA' . k . 'MIN'\n     TAB1 . 'PARAM_VA' . k . 'MAX'\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi Gumbel max :\n     TAB1 . 'PARAM_VA' . k . 'LAMBDA'\n     TAB1 . 'PARAM_VA' . k . 'MU'\n  la densite vaut :\n lambda*exp(-lambda*(x-mu)-exp(-lambda*(x-mu)))\n\n   Dans le cas de la loi Normale tronquee inf :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n  TAB1 . 'PARAM_VA' . k . 'MIN'\n  est la borne inferieure des valeurs que peut prendre la variable\n   aleatoire.\n\n   Dans le cas de la loi de Frechet :\n  TAB1 . 'PARAM_VA' . k . 'U'\n  TAB1 . 'PARAM_VA' . k . 'K'\n  TAB1 . 'PARAM_VA' . k . 'B'\n  la densite vaut :\n   ((u - b)/(x - b))**k * exp(- ((u - b)/(x - b))**k) * k / (x - b) \n\n  TAB1 . 'MATCOV'  : listreel qui contient la matrice de correlation \n    dans le cas ou les variables ne sont pas independantes. C'est la \n    transformation de nataf qui est utilisee.\n    pour une matrice | a b c |\n                     | b d e |\n                     | c e f |\n    il faut rentrer (prog a b d c e f).\n    Les lois autorisees sont : \n   Uniforme, Normale centree reduite, Normale, Lognormale, Exponentielle.\n\n  TAB1 . 'POINTS_INITIAUX' : table numerotee de 1 a nombre de points \n     initiaux composee de listreels contenant les coordonnees dans l'espace \n     physiques des points initiaux.\n\n  TAB1 . 'CRITERE' : (facultatif) flottant. critere de convergence\n  portant sur l'indice de fiabilite (par defaut 1e-4)\n\n  TAB1 . 'RESU' : est une table indicee de 1 a nombre de points \n     initiaux qui contient les resultats du calcul.\n\n  TAB1 . 'RESU' . i . 'INDFIAB' : contient un listreel des indices de\n    fiabilite de Hasofer-Lind aux differentes iterations pour le point \n    initial i.\n\n  TAB1 . 'RESU' . i . '<<nom_d_une_va>>' : ou <<nom_d_une_va>> est une chaine\n   de 4 caracteres correspondant au nom d'une va entree\n   dans le listmot   TAB1 . 'NOMS_DES_VARIABLES', contient un listreels des\n   differentes valeurs de la va aux differentes iterations.\n\n  TAB1 . 'RESU' . i . 'FACTEURS_DE_SENSIBILITES' : contient un listreels\n  des sensibilites des differentes variables a la derniere iteration.\n\n  TAB1 . 'RESU' . i . 'VECTEURS_DES_SENSIBILITES' : dans le cas ou\n   les variables ne sont pas independantes contient un listreels\n   des sensibilites des differentes variables a la derniere iteration.\n\n   On peut faire une reprise du calcul en fournissant TAB1.\n TAB1 . RESU . REPRISE . DERNIER : entier.  contient le numero de l'iteration\n   a partir  de laquelle on va reprendre. L'utilisateur peut le \n   modifier\n\n TAB1 . EXPLORATION : logique. En cas de reprise, si vrai on va chercher\n   a determiner vxmin et vxmax a partir des valeurs deja obtenues.\n\n TAB1 . RESU . i . INDICE_FIABILITE : FLOTTANT. Contient un majorant de \n  l'indice de fiabilite. le meilleur obtenu au cours des calculs.\n\n TAB1 . RESU . i . ATTEINT_EN : ENTIER. Contient l'indice de ce resultat\n    dans TAB1 . RESU . i . indfiab.",
  },
  {
    name: "FILC",
    url: "FILC",
    documentation:
      "$$$$ FILC     NOTICE  MB234859  17/10/02    21:15:11     9577           \n                                             DATE     17/10/02\n\n                                             \n    Procedure FILC                           Voir aussi : FILT\n    --------------  \n    EV2 = FILC EV1 FO DF1\n\n\n\n    Objet :\n    _______\n\n    La proc\u00e9dure FILC permet de calculer pour un signal donn\u00e9 \n    une evolution filtree par un passe-bas\n\n    Commentaire :\n    _____________\n\n    EV1   : objet de type EVOLUTION\n    FO    : frequence de coupure de type FLOTTANT\n    DF1   : intervalle pour ajuster la coupure du contenu \n            frequenciel de type FLOTTANT\n    EV2   : objet de type EVOLUTION\n\n    \n     | Modu               Fonction de filtrage                              \n     |                    \n     |                          DF1                          \n     |                    |------------|                         \n     |                                              \n     |____________________1\n     |                     *  *                        \n     |                          *                     \n     |                            *              \n     |                              *                   \n     |                                *  * __________0            \n     -------------------------------------------------\n     |---------------------------|                Freq\n                 F0\n \n    Contacts :\n    __________\n    Alberto FRAU     (CEA/DEN/DANS/DM2S/SEMT/EMSI)\n    Benjamin RICHARD (CEA/DEN/DANS/DM2S/SEMT/EMSI)\n                                 \n                                 ",
  },
  {
    name: "FILT",
    url: "FILT",
    documentation:
      "$$$$ FILT     NOTICE  MB234859  17/10/02    21:15:11     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur FILT                           Voir aussi :\n    --------------  \n   EVOL1 = FILT N1 'TYPE' | 'PHAU' FLOT1 |('SORT'|'REIM'|) 'DFRQ' FLOT2\n                          | 'PBAS' FLOT1 |(      |'MOPH'|)\n                          | 'OMEG' ENTI1\n\n\n    Objet :\n    _______\n\n    L'operateur FILT permet de calculer les filtres PASSE-HAUT,\nPASSE-BAS ...\n\n    Commentaire :\n    _____________\n\n    N1    : on utilise un nombre de points egal a 2**N1 (type ENTIER)\n\n   'TYPE' : mot-cle suivi de :\n\n   'PHAU' : pour un filtre PASSE-HAUT de frequence de coupure FLOT1\n            (type FLOTTANT).\n\n   'PBAS' : pour un filtre PASSE-BAS  de frequence de coupure FLOT1\n            (type FLOTTANT).\n\n   'OMEG' : pour un filtre en OMEGA de puissance ENTI1 (type ENTIER).\n\n   'SORT' : mot-cle suivi de :\n   'REIM' : filtre defini sous forme parties reelles et imaginaires\n   'MOPH' : filtre defini sous forme module et phase (par defaut)\n\n   'DFRQ' : mot-cle suivi de :\n    FLOT2 : valeur du pas en frequence en Hz (type FLOTTANT).\n\n    EVOL1 : resultat de type EVOLUTION.",
  },
  {
    name: "FILTREKE",
    url: "FILTREKE",
    documentation:
      "$$$$ FILTREKE NOTICE  CHAT      11/09/12    21:16:12     7124           \n                                             DATE     11/09/12\n\n  Procedure FILTREKE                       Voir aussi :\n    ------------------   \n    SYNTAXE ( EQEX ) : Cf operateur EQEX\n    _________________\n\n    'OPER' 'FILTREKE' U0 L0 NU UN 'INCO' 'KN' 'EN'\n     \n       \n\n     \n    OBJET :\n    -----\n   \n Cette procedure filtre les valeurs de k et de epsilon du modele de\n turbulence K - epsilon . Les contraintes suivantes sont imposees :\n 0 < k < Max(UN,U0)**2\n epsilon > Cnu * k**1.5 / L0  > 0\n ou Cnu = 0.09 est une constante du modele K-epsilon\n ou U0 est une vitesse de reference limitant l'intensite turbulente.\n ou L0 est une echelle de longueur limite.\n => Nut < U0*L0\n                                                                                \n                                                                                \n    Commentaires\n    ____________\n                                                                                \n                                                                                \n                                                                                \n    U0     Vitesse de reference\n           FLOTTANT ou MOT\n                                                                                \n    L0     Echelle de longueur\n           FLOTTANT ou MOT\n\n    NU     Viscosite cinematique\n           FLOTTANT ou MOT\n                                                                                \n    UN     Champ de vitesse\n           CHPOINT VECT SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice donne.",
  },
  {
    name: "FIMP",
    url: "FIMP",
    documentation:
      "$$$$ FIMP     NOTICE  CHAT      11/09/12    21:16:12     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur FIMP                           Voir aussi : NAVI\n    --------------  \n    I)                                                                          \n\n    SYNTAXE (EQEX) : Cf operateur EQEX\n    _______________\n\n  'ZONE' $paroi 'OPER' FIMP  COEF 'INCO' 'TN'\n\n                                                                                \n\n                                                                                \n    OBJET :\n    ______\n\n    Discretise une densite de flux ou une source et calcule l'increment\n\n        EN 2D\n        elements lignes (SEG2 ou SEG3)    -> Flux (en K/ms)\n        elements massifs (TRI3 TRI7 etc)  -> Source volumique (en K/m2s)\n        EN 3D\n        elements lignes (SEG2 ou SEG3)    -> Pas de sens !!\n        elements coques (TRI3 TRI7 etc)   -> Flux (en K/m2s)\n        elements massifs (CUB8 CU27 etc)  -> Source volumique (en K/m3s)\n\n     Commentaires :\n     ______________\n                                                                                \n\n     $paroi   Objet MMODEL de type 'NAVIER_STOKES' associe a la\n              surface sur laquelle porte le flux\n\n     COEF     densite de flux                CHPOINT SCAL CENTRE\n                                          ou CHPOINT SCAL SOMMET\n                                          ou FLOTTANT ou MOT\n              (par convention un flux entrant est compte positivement)\n\n     TN       Champ de temperature (en K)      CHPOINT SCAL SOMMET\n\n L'operateur permet de calculer un terme source soit surfacique soit\n volumique suivant la nature du support geometrique, pour l'inconnue\n TN. Cette inconnue doit etre un CHPOINT SCAL SOMMET. Cependant une\n extension est possible si on veut rajouter une source volumique\n a l'equation Div U = 0\n  pour cela on fait porter l'inconnue sur la pression (INCO PRES)\n et on precise le support de la pression avec l'option INCOD.\n Dans ce cas seul les supports geometriques volumiques sont autorises.\n ex :\n 'OPTI' 'INCOD' KPRES\n 'ZONE' $MT 'OPER' 'FIMP' COEF 'INCO' 'PRES'\n ou\n  KPRES = 'CENTRE'\n  ou      'CENTREP1'\n  ou      'MSOMMET'\n\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    OPTION : (EQEX)\n    ________\n\n    Formulation element finis EF et EFM1 (par defaut)\n    Inconnue duale INCOD SOMMET  (option par defaut)\n\n   \n II Discretisation des Equations d'Euler \n _________________________________________\n\n\n IIa : gaz parfait mono-constituent polytropique\n ________________________________________________\n\n\n Discretisation en VF \"cell-centered\" des equations d'Euler pour un gaz \n parfait mono-constituent polytropique\n\n Inconnues:\n\n densite, quantite de mouvement (qdm), energie totale par unite de volume \n (variables conservatives)\n\n On peut calculer:\n\n IIa.1 Calcul de la contribution de la force de gravite au residu\n\n IIa.2 Calcul de la contribution de la force de gravite a la matrice \n       jacobienne\n\n\n IIa.1 Le residu\n ________________\n\n\n RCHRES = 'FIMP' 'VF' 'GRAVMONO' 'RESI' LISTINCO CHPRN CHPGN CHPGRAV ;\n\n\n LISTINCO : objet de type LISTMOTS\n            Noms de composantes du resultat (RCHRES)\n            Il contient dans l'ordre suivant: le noms de la densite,\n            de la qdm, de l'energie totale par unite de volume\n\n CHPRN    : CHPOINT  contenant la masse volumique (une \n            composante, 'SCAL').\n\n CHPGN    : CHPOINT  contenant le qdm (deux composantes en 2D, 'UX  ',\n            'UY  ', meme SPG que CHPRN).\n\n CHPGRAV  : CHPOINT  contenant la gravite (deux composantes en 2D, \n            'UX  ', 'UY  ', meme SPG que CHPRN).\n\n RCHRES   : objet de type CHPOINT (composantes =  LISTINCO, meme SPG \n            que CHPRN)\n\n\n IIa.2 La matrice jacobienne\n ___________________________\n\n\n RJAC  = 'FIMP' 'VF' 'GRAVMONO' 'JACOCONS' LISTINCO CHPRN CHPGN CHPGRAV ;\n\n\n LISTINCO : objet de type LISTMOTS\n            Il contient dans l'ordre suivant: le noms de la densite,\n            de la qdm, de l'energie totale par unite de volume\n\n CHPRN    : CHPOINT  contenant la masse volumique (une \n            composante, 'SCAL').\n\n CHPGN    : CHPOINT  contenant le qdm (deux composantes en 2D, 'UX  ',\n            'UY  ', meme SPG que CHPRN).\n\n CHPGRAV  : CHPOINT  contenant la gravite (deux composantes en 2D, \n            'UX  ', 'UY  ', meme SPG que CHPRN).\n\n RJAC     : objet de type MATRIK\n           (meme SPG que CHPRN)\n           (inconnues primales = inconnues duales = LMOT1)\n           Il contient le jacobien du residu par rapport aux variables \n           conservatives.\n       \n\n\n III Discretisation des Equations de Navier-Stokes avec le\n      modele turbulent k-epsilon          \n __________________________________________________________\n\n\n IIIa : gaz thermiquement parfait multi-constituent \n ___________________________________________________\n\n\n Discretisation des Equations de Navier-Stokes multi-constituent\n  avec le modele turbulent k-epsilon  \n\n Inconnues:\n\n densite, quantite de mouvement (qdm), energie totale par unite de volume,\n densites des especes qui sont dans (TABGAS.'ESPEULE'),\n energie cinetique de la turbulence par unite de volume,\n taux de dissipation de l'energie turbulente par unite de volume\n (variables conservatives)\n\n On peut calculer:\n\n IIIa.1 la contribution de la force de la gravite,\n        de les termes sources des equations de conservation\n        des especes et des termes sources des equations \n        d'energie cinetique de la turbulence et de taux de \n        dissipation de l'energie turbulente au residu\n\n Le Residu\n ____________\n\n\n RCHRES = 'FIMP' 'VF' 'GRAVKEPS' 'RESI' TABGAS LISTINCO\n          CHPRN CHPGN CHPGRAV CHPRKA CHPREPS GRADR GRADV ;\n\n TABGAS  :  la table vec des proprietes de gas;\n            ici on a besoin de:\n                        a) le nombre \\sigma_t (vois les\n                           terms de la gravite dans\n                           les equations k-\\eps)\n                           nom: TABGAS . 'SIGT'\n                        b) le nombre C_{\\eps 1} (vois \n                           l'equation  de \\eps)\n                           nom: TABGAS . 'CEPS1'\n                        c) le nombre C_{\\eps 2} (vois\n                           l'equation de  \\eps)\n                           nom: TABGAS . 'CEPS2'\n                        d) les taux des  productions des especes\n                           ( le term source); type 'CHPOINT'\n                           (SPG = 'CENTRE', le nombre de composants\n                            egal a nombre des especes dans\n                            TABGAS . 'ESPEULE')\n                        e) TABGAS . 'ESPEULE' - les noms des\n                           especes qui sont explicitement\n                           dans les equations\n                        f) TABGAS . 'MUTURB' -  la viscosite turbulente\n                           (SPG = 'CENTRE'; number de compos. = 1)\n                        g) les enthalpies des formations\n                           des especes a la temperature T=0K\n                        \n\n LISTINCO : objet de type LISTMOTS\n            Noms de composantes du resultat (RCHRES)\n            Il contient dans l'ordre suivant: le noms de la densite,\n            de la qdm, de l'energie totale par unite de volume,\n            des especes qui sont dans (TABGAS.'ESPEULE'),\n            d'energie cinetique de la turbulence par unite de volume,\n            de taux de dissipation de l'energie turbulente par unite de\n            volume\n\n CHPRN    : CHPOINT  contenant la masse volumique (une \n            composante, 'SCAL').\n\n CHPGN    : CHPOINT  contenant le qdm (deux composantes en 2D, 'UX  ',\n            'UY  ', meme SPG que CHPRN).\n\n CHPGRAV  : CHPOINT  contenant la gravite (deux composantes en 2D, \n            'UX  ', 'UY  ', meme SPG que CHPRN).\n\n CHPRKA   : CHPOINT contenant l'energie cinetique turbulente \n            par unite de volume (une composante, meme SPG que\n            CHPRN).\n\n CHPREPS  : CHPOINT contenant le taux de dissipation\n            d'energie de la turbulence par unite de volume\n            (une composante, meme SPG que CHPRN). \n \n GRADR    : gradient de la densite\n            (SPG = 'CENTRE', composantes: 'P1DX','P1DY',('P1DZ'))\n\n GRADV    : gradient de la vitesse\n            (SPG = 'CENTRE', composantes: 'P1DX','P1DY', ('P1DZ')\n                                          'P2DX','P2DY', ('P2DZ')\n                                         ('P3DX','P3DY', ('P3DZ')))   \n           \n RCHRES   : objet de type CHPOINT (composantes =  LISTINCO, meme SPG \n            que CHPRN)",
  },
  {
    name: "FIN",
    url: "FIN",
    documentation:
      "$$$$ FIN      NOTICE  CHAT      11/09/12    21:16:13     7124           \n                                             DATE     11/09/12\n                                             \n    Directive FIN                            Voir aussi : REPE  \n    -------------                                           \n\n    Objet :\n    _______\n\n    La directive FIN s'utilise dans deux cas :\n\n    -----------\n    | 1er cas |\n    -----------\n    FIN ;\n\n    Objet :\n    _______\n\n    La directive FIN provoque l'arret de l'execution de CASTEM2000,\nsi elle est executee.\n\n    ------------\n    | 2eme cas |\n    ------------\n    FIN BLOC1 ;\n\n    Objet :\n    _______\n\n    La directive FIN sert a terminer la definition d'un bloc BLOC1,\ncommencee par la directive REPETER.",
  },
  {
    name: "FINM",
    url: "FINM",
    documentation:
      "$$$$ FINM     NOTICE  CHAT      11/09/12    21:16:12     7124           \n                                             DATE     11/09/12\n\n    Operateur FINMETH                        Voir aussi : DEBM\n    -----------------                                     RESP  \n    FINMETH  ( OBJ1 OBJ2  ..... ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur FINMETH termine la definition d'une procedure-methode\nqui a ete commencee par DEBMETH.\n\n    Commentaire :\n    _____________\n\n    Le mot FINMETH est suivi des noms locaux OBJ1 OBJ2 ...  des objets\n resultats s'il y en a .\n\n    Voir l'operateur FINPROC.",
  },
  {
    name: "FINP",
    url: "FINP",
    documentation:
      "$$$$ FINP     NOTICE  CHAT      11/09/12    21:16:13     7124           \n                                             DATE     11/09/12\n\n    Operateur FINPROC                        Voir aussi : DEBP\n    -----------------                                     RESP  \n    FINPROC  ( OBJ1 OBJ2  ..... ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur FINPROC termine la definition d'une procedure.\n\n    Commentaire :\n    _____________\n\n    Le mot FINPROC est suivi des noms locaux OBJ1 OBJ2 ...  des objets\n resultats s'il y en a .\n\n    Voir l'exemple de l'operateur DEBPROC.",
  },
  {
    name: "FINS",
    url: "FINS",
    documentation:
      "$$$$ FINS     NOTICE  CHAT      11/09/12    21:16:13     7124           \n                                             DATE     11/09/12\n\n    Directive FIN SI                          Voir aussi : SI\n    ---------------                                       SINO  \n    FINSI ;\n\n\n    Objet :\n    _______\n\n    Les directives SI, SINON et FINSI permettent l'execution\nconditionnelle de donnees suivant la valeur de la variable logique BOOL1\n\n    Exemple :\n    _________\n\n     BOOL1 = I > 10 ;\n\n     SI   BOOL1 ;\n\n       J= 2 * I ;  COMM execute si I est plus grand que 10  ;\n       LIST J ;\n\n     SINON ;\n\n       J= I     ;  COMM execute si I est plus petit que 10  ;\n\n     FINSI ;\n\n    Remarque : SINON est optionnel.\n    __________",
  },
  {
    name: "FINVREPA",
    url: "FINVREPA",
    documentation:
      "$$$$ FINVREPA NOTICE  CHAT      11/09/12    21:16:13     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure FINVREPA                       Voir aussi : NATAF FDENS\n    -------------------                                   REPART  \n    FLO2 = FINVREPA TAB1 FLO1;\n\n           TAB1 .  typva\n                . A\n                . B\n                . LAMBDA\n                . MU\n                . MOYENNE\n                . ECART_TYPE\n                . TAU\n                . K\n                . W\n                . MIN\n                . MAX\n                . U\n\n       FLO1 flottant.\n\n\n\n    Objet :\n    _______\n La procedure FINVREPA calcule au point FLO1 la valeur de l'inverse de\n  la fonction de repartition de la variable aleatoire dont les\n caracteristique se trouvent  dans TAB1.\n    Donnees :\n    ---------\n\n  TAB1 . 'TYPVA' : chaine de caractere contenant le type de\n      la  variable aleatoire.\n     Les types disponibles sont :\n                                 'LOI_UNIFORME'\n                                 'LOI_DE_LAPLACE'\n                                 'LOI_NORMALE_STANDARD' (i.e. centree,reduite)\n                                 'LOI_EXPONENTIELLE'\n                                 'LOI_LOGNORMALE'\n                                 'LOI_NORMALE'\n                                 'LOI_WEIBULL_MIN'\n                                 'LOI_NORMALE_TRONQUEE'\n                                 'LOI_EXPONENTIELLE_TRONQUEE'\n                                 'LOI_GUMBEL_MAX'\n                                 'LOI_NORMALE_TRONQUEE_INF'\n                                 'LOI_DE_FRECHET'\n\n   Dans le cas de la loi uniforme :\n  TAB1 . 'A'\n  TAB1 . 'B' : sont les bornes de l'intervalle sur lequel\n        la variable est definie (A<B)\n\n   Dans le cas de la loi de Laplace :\n pas de parametre. La densite vaut : 0.5*exp( - |x|).\n\n   Dans le cas de la loi normale centree reduite (LOI_NORMALE_STANDARD) :\n pas de parametre. La densite vaut : exp(-0.5*x^2)/((2*pi)**0.5)\n\n   Dans le cas de la loi exponentielle :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut : lambda*exp(lambda*(mu - x)) si x >= mu \n                     0                          sinon\n\n   Dans le cas de la loi lognormale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi normale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi Weibull min :\n  TAB1 . 'TAU'\n  TAB1 . 'K'\n  TAB1 . 'W'\n  la densite vaut :\n   ((X-TAU)/(W-TAU))**(K-1) * K / (W - TAU) * (exp (- ((X-TAU)/(W-TAU))**K))\n\n   Dans le cas de la loi normale tronquee :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n  TAB1 . 'MIN'\n  TAB1 . 'MAX'\n Les deux premiers parametres \n sont la moyenne et l'ecart-type de la variable aleatoire.\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi exponentielle tronquee :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n     TAB1 . 'MIN'\n     TAB1 . 'MAX'\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi Gumbel max :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut :\n lambda*exp(-lambda*(x-mu)-exp(-lambda*(x-mu)))\n\n   Dans le cas de la loi Normale tronquee inf :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n  TAB1 . 'MIN'\n  est la borne inferieure des valeurs que peut prendre la variable\n   aleatoire.\n\n   Dans le cas de la loi de Frechet :\n  TAB1 . 'U'\n  TAB1 . 'K'\n  TAB1 . 'B'\n  la densite vaut :\n   ((u - b)/(x - b))**k * exp(- ((u - b)/(x - b))**k) * k / (x - b) ",
  },
  {
    name: "FION",
    url: "FION",
    documentation:
      "$$$$ FION     NOTICE  CHAT      11/09/12    21:16:13     7124           \n                                             DATE     11/09/12\n  \n  Operateur FION                            Voir aussi :\n   --------------  \n       CHPO2 = FION  TAB1  CHPO1  ;\n\n\n        Objet\n       -------\n       Calcul de la force ionique d'une solution chimique en tout point\n       d'un domaine.\n\n\n       Commentaires\n       ------------\n       TAB1 est un objet de type TABLE et de sous type chimi1 \n            (cf operateur CHI1)\n\n       CHPO1 nom d'un objet de type CHPOIN ayant une composante pour\n             chaque espece en solution, et contenant la concentration\n             de chaque espece en solution.\n\n       CHPO2 objet de type CHPOIN ayant une composante scalaire et\n            contenant la force ionique en chaque point.\n\n \n ",
  },
  {
    name: "FISS",
    url: "FISS",
    documentation:
      "$$$$ FISS     NOTICE  CHAT      11/09/12    21:16:15     7124           \n                                             DATE     11/09/12\n\n  Operateur FISS                          Voir aussi : \n     --------------  \n      RES = FISS MODL1 MAT1 TAB_CL\n\n\n     Objet :                                                             \n     _______                                                             \n\n     Cet operateur calcule le debit de fuite d'un melange air-vapeur\n   circulant dans une macrofissure traversante (ouverture superieure \n   a 25 microns), en regime permanent pour une temperature de paroi \n   donnee et des pressions amont et aval imposees.\n\n   L'operateur utilise une discretisation fluide monodimensionnelle : \n   l'ouverture (petite dimension de la fissure) et l'etendue (grande \n   dimension) ne sont pas maillees.\n\n   Le modele diphasique est homogene (les 2 phases ont les\n   memes vitesse et temperature).\n\n\n     Commentaires:\n     _____________                                                       \n                    \n     MODL1  : objet modele (type MMODEL)\n              (le maillage contenu dans MODL1 est constitue d'elements\n              SEG2 definissant le parcours de la fissure dans le sens \n              amont aval)\n     MAT1   : champ des caracteristiques materielles (type MCHAML,\n              sous-type CARACTERISTIQUES)\n     TAB_CL : table des conditions aux limites (type TABLE) :\n\n        TAB_CL.'PRESSION_TOTALE_AMONT' : pression totale en amont de la\n                                         fissure (Pa) (type flottant)\n        TAB_CL.'PRESSION_VAPEUR_AMONT' : pression partielle de vapeur en\n                                         amont de la fissure (Pa) \n                                         (type flottant) \n        TAB_CL.'TEMPERATURE_AMONT'     : temperature du gaz en amont de \n                                         la fissure (\u00b0C) (type flottant)\n        TAB_CL.'PRESSION_TOTALE_AVAL'  : pression totale en aval de la \n                                         fissure (Pa) (type flottant)\n        TAB_CL.'TEMPERATURE_PAROI'     : temperature de paroi (\u00b0C) \n                                         (type CHPOINT)\n        TAB_CL.'OUVERTURE'             : ouverture de la fissure (m) \n                                         (type CHPOINT)\n        (TAB_CL.'ETENDUE')             : etendue de la fissure (m) \n                                         (type CHPOINT)\n        (TAB_CL.'DEBIT_INITIAL')       : debit d'initialisation \n                                         (kg/m2/s) (type flottant)\n\n     RES   : champoint multicomposante de meme support que les deux \n             champoints precedents, representant les grandeurs \n             caracteristiques de l'ecoulement le long de la fissure.\n\n        nom de   |\n      composante | signification\n\n          'P'    :  pression        (Pa)\n          'PV'   :  pression vapeur (Pa)\n          'TF'   :  temperature     (\u00b0C)\n          'X     :  titre\n          'U'    :  vitesse         (m/s)\n          'H'    :  coefficient d'echange (W/m2/K)\n          'Q'    :  debit total     (kg/s)\n          'QA'   :  debit air       (kg/s)\n          'QE'   :  debit eau (liquide+vapeur) (kg/s)\n          'RE'   :  nombre de Reynolds\n          'F'    :  densite de puissance echangee entre le fluide et\n                    la paroi (W/m2)\n\n     Remarque:\n     _________                                                       \n\n     Il faut remplir TAB_CL avant chaque appel a FISS.",
  },
  {
    name: "FIXHC",
    url: "FIXHC",
    documentation:
      "$$$$ FIXHC    NOTICE  BR232186  16/12/05    21:39:28     9238           \n                                             DATE     16/12/05\n\n\n    Procedure FIXHC   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle cree un champ \n    par element permettant d assurer la continuite du trajet de \n    fissuration dans le cas d un probleme resolu par la methode\n    E-FEM. La continuite est assuree en resolvant un probleme \n    de conduction a la fin de chaque pas de temps.\n        \n    ",
  },
  {
    name: "FLAM",
    url: "FLAM",
    documentation:
      "$$$$ FLAM     NOTICE  CHAT      11/09/12    21:16:15     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur FLAM                           Voir aussi :\n    --------------  \n\n 1a) ZH2 ZO2 ZN2 ZH2O Q = FLAM | 'EBU'      | RHO CV MOT1 R YH2 YO2 YN2 \n                              | 'LAMINAIR' | \n\n\n                YH2O T Dt | K E YH2u C_EBU (C0)    | ;\n                          |                        |\n\n\n 1b) RCHPO1 RCHPO2 RCHPO3 RCHPO4  = 'FLAM' 'HEAVYSID' CHPO1 FLOT1 FLOT2 \n                                    FLOT3 CHPO2 CHPO3 CHPO4 CHPO5 ;\n                  \n 1c) RCHPO1 RCHPO2 RCHPO3 RCHPO4  = 'FLAM' 'ARRHENIU' CHPO1 FLOT1 FLOT2\n                                    FLOT3 FLOT4 FLOT5 FLOT6 FLOT7 FLOT8\n                                    CHPO2 CHPO3 CHPO4 CHPO5 ;\n\n \n 2a) RCHPO1 = 'FLAM' 'CREBCOM' MOD1 FLOT1 FLOT2 CHPO1 ;\n\n 2b) RCHPO1 RCHPO2 = 'FLAM' 'CREBCOM2' MOD1 TAB2 LMOT1 LREE1 CHPO1 \n     CHPO2 CHPO3 CHPO4 CHPO5 FLOT1 FLOT2 FLOT3 ;\n \n\n\n    OBJET :\n    _______\n\n 1) Cet operateur integre du temps tn au temps tn+1=tn+Dt des equations\n differentielles ordinaires qui modelisent l'evolution temporelle des\n fractions massiques d'hydrogene, d'oxygene, d'azote et de vapeur d'eau\n selon la reaction globale,\n\n        2 H_2 + O_2 ---> 2 H_2O\n\n Ainsi, on resoud entre tn et tn+1,\n\n        dYH2/dt  = C_H2  omega(...)\n        dYO2/dt  = C_O2  omega(...)\n        dYH2O/dt = C_H2O omega(...)\n\n ou Yi est la fraction massique associee a l'espece i et les C_i \n sont des constantes dependantes de la stoechiometrie, et des masses \n molaires des differents constituants, et omega la vitesse de reaction. \n L'azote intervient uniquement comme espece neutre.\n Suivant l'option, la vitesse de reaction est donnee par une cinetique\n adaptee a la combustion en regime laminaire, a la combustion en regime\n turbulent de type Eddy Break-Up (EBU), ou une loi d'Arrhenius adaptee\n a la detonation (ARRHENIU), ou un modele de combustion infiniment\n rapide si la temperature est plus grande qu'une temperature seuil\n (HEAVYSID).\n\n\n 2) Suivi du front de flamme selon le critere \"CREBCOM\"\n\n   Commentaires :\n   ______________\n\n1a) Cas 'LAMINAR', 'EBU'\n\n   ZH2   : fraction massique de H2 au temps tn+1 (CHPOINT)\n   ZO2   : fraction massique de O2 au temps tn+1 (CHPOINT)\n   ZN2   : fraction massique de N2 au temps tn+1 (CHPOINT)\n   ZH2O  : fraction massique de H2O au temps tn+1 (CHPOINT)\n   Q     : energie liberee par la reaction (CHPOINT)\n   RHO   : densite du melange (CHPOINT)\n   CV    : capacite calorifique a volume constant (CHPOINT)\n   MOT1  : dependance en T des CV ('LINEAIRE' ou 'QUADRATI')\n   R     : constante des gaz du melange (CHPOINT)\n   YH2   : fraction massique de H2 au temps tn (CHPOINT)\n   YO2   : fraction massique de O2 au temps tn (CHPOINT)\n   YN2   : fraction massique de N2 au temps tn (CHPOINT)\n   YH2O  : fraction massique de H2O au temps tn (CHPOINT)\n   T     : temperature du melange (CHPOINT)\n   Dt    : pas de temps (REEL)\n   K     : energie cinetique turbulente (CHPOINT)\n   E     : taux de dissipation de K (CHPOINT)\n   YH2u  : fraction massique de H2 initiale (CHPOINT)\n   C_EBU : constante du modele Eddy Break-Up (REEL)\n   C0    : valeur seuil (defaut 1.d-4) (REEL) :\n           Yh2/Yh2u > 1-C0 -> Q=0 ; Yh2/Yh2u < C0 -> Yh2=0\n\n   N.B.: Tous les CHPOINTs ont une seule composante et le meme support\n         geometrique : CENTRE ou SOMMET.\n\n1b) Cas 'HEAVYSID'\n\n   CHPO1   : CHPOINT contenant la temperature de seuil (en K; \n             une composante, 'SCAL').\n\n   FLOT1   : FLOTTANT contenant l'enthalpie de H2 a 0K (en J/kg)\n\n   FLOT2   : FLOTTANT contenant l'enthalpie de O2 a 0K (en J/kg)\n\n   FLOT3   : FLOTTANT contenant l'enthalpie de H2O a 0K (en J/kg)\n      \n       \n   CHPO2   : CHPOINT  contenant la masse volumique de\n             l'hydrogene (en Kg/m^3; une composante, 'H2  ').\n\n   CHPO3   : CHPOINT  contenant la masse volumique de\n             l'oxygene (en Kg/m^3; une composante, 'O2  ').\n\n   CHPO4   : CHPOINT  contenant la masse volumique de\n             l'eau (en Kg/m^3; une composante, 'H2O ').\n\n   CHPO5   : CHPOINT contenant la temperature (en K; une \n             composante, 'SCAL').\n\n      \n   RCHPO1  : CHPOINT  contenant la masse volumique de \n            l'hydrogene apres la reaction (en Kg/m^3; \n            une composante, 'H2  ').\n\n   RCHPO2  : CHPOINT  contenant la masse volumique de\n             l'oxygene  apres la reaction (en Kg/m^3;\n              une composante, 'O2  ').\n\n   RCHPO3  : CHPOINT  contenant la masse volumique de\n             l'eau  apres la reaction (en Kg/m^3;  \n             une composante, 'H2O ').\n\n   RCHPO4  : CHPOINT contenant la chaleur libere' (en J/m^3; \n             une composante, 'SCAL').\n\n   N.B.: Tous les CHPOINTs ont une seule composante et le meme support\n         geometrique. \n\n1c) CAS 'ARRHENIU'\n\n   CHPO1   : CHPOINT contenant la temperature de seuil (en K; \n             une composante, 'SCAL').\n\n   FLOT1   : FLOTTANT contenant la constant A (en unites S.I.)\n\n   FLOT2   : FLOTTANT contenant la constant b \n\n   FLOT3   : FLOTTANT contenant la constant c \n\n   FLOT4   : FLOTTANT contenant la \"temperature\" d'activation\n             Ta (en K)\n\n   FLOT5   : FLOTTANT contenant l'enthalpie de H2 a 0K (en J/kg)\n\n   FLOT6   : FLOTTANT contenant l'enthalpie de O2 a 0K (en J/kg)\n\n   FLOT7   : FLOTTANT contenant l'enthalpie de H2O a 0K (en J/kg)\n      \n   FLOT8   : FLOTTANT contenant le pas de temps (en s)\n\n   CHPO2   : CHPOINT  contenant la masse volumique de\n             l'hydrogene (en Kg/m^3; une composante, 'H2  ').\n\n   CHPO3   : CHPOINT  contenant la masse volumique de\n             l'oxygene (en Kg/m^3; une composante, 'O2  ').\n\n   CHPO4   : CHPOINT  contenant la masse volumique de\n            l'eau (en Kg/m^3; une composante, 'H2O ').\n\n   CHPO5   : CHPOINT contenant la temperature (en K; une \n             composante, 'SCAL').\n     \n   RCHPO1  : CHPOINT  contenant la masse volumique de \n             l'hydrogene apres la reaction (en Kg/m^3; \n             une composante, 'H2  ').\n\n   RCHPO2  : CHPOINT  contenant la masse volumique de\n            l'oxygene apres la reaction (en Kg/m^3; \n            une composante, 'O2  ').\n\n   RCHPO3  : CHPOINT  contenant la masse volumique de\n             l'eau  apres la reaction (en Kg/m^3; \n             une composante, 'H2O ').\n\n   RCHPO4  : CHPOINT contenant la chaleur libere Q (en J/m^3; \n             une composante, 'SCAL').\n\n   N.B.:-tous les CHPOINTs ont une seule composante et le meme support \n         geometrique. \n\n\n2a) Cas 'CREBCOM'\n\n    MOD1   : Objet MODELE.\n\n    FLOT1  : parametre \"epsilon\" du critere CREBCOM \n\n    FLOT2  : valeur maximum de la variable de progres de la reaction\n \n    CHPO1  : variable de progres de la reaction (objet de type \n             CHAMPOINT)\n    \n    RCHPO1 : objet de type CHAMPOINT qui vaut 1 dans la region de \n             combustion, 0 ailleurs (une composante, 'SCAL')\n\n\n2b) Cas 'CREBCOM2'\n    \n    MOD1   : objet MODELE.\n   \n    TAB2   : table des proprietes du gaz (voir operateur 'PRIM')\n\n    LMOT1  : LISTMOTS qui contient les noms des composantes qui\n             interviennent dans la reaction chimique consideree\n\n    LREE1  : LISTREEL qui contient le coefficients stoechiometriques de \n             la reaction chimique consideree (positifs pour les \n             reactifs, negatifs pour les produits; meme ordre que LMOT1)\n\n    CHPO1  : CHPOINT  contenant la masse volumique (une composante,\n             'SCAL', support geometrique SPG = 'DOMA' MOD1 'CENTRE')\n\n    CHPO2  : CHPOINT contenant les fractions massiques des especes en \n             LMOT1 (SPG = 'DOMA' MOD1 'CENTRE')\n\n    CHPO3  : CHPOINT contenant la fraction massique initiale de la \n             premiere espece en LMOT1 (meme nom que la premiere espece \n             en LMOT1, SPG = 'DOMA' MOD1 'CENTRE')\n\n    CHPO4  : CHPOINT contenant la fraction massique finale de la premiere \n             espece en LMOT1 (meme nom que la premiere espece en LMOT1, \n             SPG = 'DOMA' MOD1 'CENTRE')\n\n    CHPO5  : CHPOINT contenant la vitesse caracteristique (une composante, \n             'SCAL', SPG = 'DOMA' MOD1 'CENTRE')\n\n    CHPO6  : CHPOINT contenant la dimension de la maille (une composante, \n             'SCAL', SPG = 'DOMA' MOD1 'CENTRE')\n\n    FLOT1  : FLOTTANT, parametre \"epsilon\" du critere CREBCOM\n\n    FLOT2  : FLOTTANT, pas de temps\n\n    FLOT3  : FLOTTANT, parametre pour controler la variable de progres. \n             Si la variable de progres est plus petite que (-FLOT3) ou \n             plus grande que (1+FLOT3), un message d'erreur est donne\n\n    RCHPO1 : CHPOINT, increment de l'energie totale par unite de volume\n             suite a la reaction chimique (une composante, 'SCAL',\n             SPG = 'DOMA' MOD1 'CENTRE')\n \n    RCHPO2 : CHPOINT, increment des densite massiques des especes suite \n             a la reaction chimique (noms de composantes en LMOT1, \n             SPG = 'DOMA' MOD1 'CENTRE')\n\n    \n    Remarques :\n    ___________\n\n    'LAMINAIR' \n        Combustion hydrogene en regime laminaire, avec la vitesse\n        de reaction donnee par une cinetique globale,\n\n        omega = C1 RHO^2 YH2 YO2 exp(-C2/T)\n\n        ou C1 et C2 sont des constantes predefinies.\n\n    'EBU'\n        Combustion hydrogene en regime turbulent, avec la vitesse\n        de reaction donnee par un modele Eddy Break-Up (EBU),\n        \n        omega = C_EBU (E/K) YH2 ( 1 - YH2/YH2u )/(2MH2)\n\n        ou MH2 est la masse molaire de l'hydrogene.\n\n     'HEAVYSID'\n        Combustion hydrogene avec la vitesse de reaction donnee par\n        une loi de la forme:\n       \n        omega = +oo         si (T>Ts)\n        omega = 0           sinon\n\n        i.e. si T>Ts on a une combustion infiniment rapide.\n\n    'ARRHENIU'\n        Combustion hydrogene avec la vitesse de reaction donnee par\n        une loi d'Arrhenius generale, de la forme:\n\n        omega = A T^-b (RHO_H2)^c (RHO_O2)  exp (-Ta/T)  si (T>Ts)\n        omega = 0                                        sinon\n\n    'CREBCOM2'\n        Dans le cas 'CREBCOM2' on controle la positivite de la densite,\n        des fractions massiques, de la vitesse caracteristique, que la \n        variable de progres est comprise entre 0 et 1.",
  },
  {
    name: "FLAMBAGE",
    url: "FLAMBAGE",
    documentation:
      "$$$$ FLAMBAGE NOTICE  CHAT      11/09/12    21:16:15     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure FLAMBAGE                       Voir aussi :\n    ------------------  \n    TAB1 = FLAMBAGE  TAB2 ;\n                                 TAB2.'OBJM' .'LAM1' .'LAM2' .'CLIM'\n                                     .'NMOD' .'SIG0' .'SIG1' .'MATE'\n                                     .'CARA' .'RIGI' .'KSIG' .'MODE'\n                                     .'PLAS' .'MOTA'\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de faire des calculs de flambage elastique\net plastique.\n\n    Commentaire :\n    _____________\n\n    TAB2 : Objet (type TABLE) dont le contenu doit etre :\n\n   1)Dans le cas de l'utilisation des nouveaux objets MMODEL et MCHAML\n\n      Indice    Type objet           Commentaire\n                  pointe\n\n      'OBJM'     MMODEL           objet modele\n      'LAM1'     FLOTTANT         coefficient multiplicateur minimal\n      'LAM2'     FLOTTANT         coefficient multiplicateur maximal\n      'NMOD'     ENTIER           nombre de modes propres desires\n      'CLIM'     RIGIDITE         matrices associees aux blocages\n\n    Puis au choix :\n\n      'SIG1'     MCHAML           Champ de contraintes variant avec le\n                                  multiplicateur du chargement\n     ('SIG0')    MCHAML           Champ de contraintes ne variant pas\n                                  avec le multiplicateur du chargement\n      'MATE'     MCHAML           Proprietes materielles\n\n     ('CARA')    MCHAML           Caracteristiques geometriques\n\n\n    ou bien :\n\n      'RIGI'     RIGIDITE         Matrice de rigidite\n      'KSIG'     RIGIDITE         Matrice de rigidite geometrique\n\n\n\n    TAB1 :  Objet (type TABLE) contenant autant de tables que de modes\n            calcules, et indicee par le numero du mode.\n            Chacune des tables associee a un mode contient :\n\n      Indice    Type objet           Commentaire\n                 pointe\n\n      'LAMB'    FLOTTANT      Coefficient multiplicateur du chargement\n      'DEPL'    CHPOINT       Mode propre norme\n      'MODN'    ENTIER        Numero de l'harmonique de Fourier\n      'MODM'    ENTIER        Numero du mode azimutal\n\n\n    Remarque :\n    __________\n\n    Dans le cas d'une analyse en serie de Fourier, on peut chercher\n le flambage sur une famille d'harmoniques en donnant dans TAB2 :\n\n      'MODE'    LISTENTI      Liste des harmoniques de Fourier\n\n    Il faudra alors, pour definir les conditions aux limites, les\n construire avec l'option :\n\n                     OPTION FOURIER NOHARM ;\n\n\n    On peut faire une analyse de flambage plastique en donnant :\n\n      'PLAS'    MOT           Mot demandant le flambage plastique\n      'MATP'    MCHAML        Materiau plastique tangent (cf MOTA)\n\n\n    La methode utilisee est la methode du module tangent. On peut aussi\n donner comme matrice de rigidite (indice 'RIGI') la matrice tangente\n que l'on veut si l'on ne souhaite pas utiliser cette methode.",
  },
  {
    name: "FLOQUET",
    url: "FLOQUET",
    documentation:
      "$$$$ FLOQUET  NOTICE  MB234859  17/10/02    21:15:11     9577           \n                                             DATE     17/10/02\n                                           \n\n    Procedure FLOQUET                       Voir aussi : CONTINU\n\n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure CONTINU. \n   Elle calcule les coefficients de Floquet en determinant les valeurs\n   propres du determinant de Hill.\n   ",
  },
  {
    name: "FLOT",
    url: "FLOT",
    documentation:
      "$$$$ FLOT     NOTICE  JC220346  12/06/18    21:15:03     7404           \n                                             DATE     12/06/18\n\n    Operateur FLOTTANT                       Voir aussi : ENTI\n    ------------------  \n    FLOT1  = FLOTTANT ENTI1  ;\n    LREEL1 = FLOTTANT LENTI1 ;\n\n    FLOT1  = FLOTTANT MOT1   ;\n    LREEL1 = FLOTTANT LMOT1  ;\n\n\n    Objet :\n    _______\n\n    L'operateur FLOTTANT convertit un entier ENTI1 (resp. une liste \n    d'entiers LENTI1) en un reel FLOT1 (resp. une liste de reels \n    LREEL1).\n\n\n    On peut fournir \u00e0 l'operateur FLOTTANT un mot MOT1 (resp. une liste\n    de mots LMOT1) pour convertir une ou des chaines de caracteres en\n    un nombre reel FLOT1 (resp. une liste de reels LREEL1). Le symbole\n    separateur decimal depend du systeme utilise.\n\n\n    Exemples :\n    __________\n\n    FLOT  25    => 25.00\n    FLOT '-1.5' => -1.50\n    ENTI '.2e3' => 200.00",
  },
  {
    name: "FLUX",
    url: "FLUX",
    documentation:
      "$$$$ FLUX     NOTICE  BP208322  13/07/30    21:15:10     7809           \n                                             DATE     13/07/30\n                                             \n  Operateur FLUX                           Voir aussi :\n    --------------  \n    CHPO1 = FLUX MMODE1 | FLOT1 GEO1   | ( 'DIRECTION' VEC1 ) (MOT1) ;\n                        |              |\n                        | CH2          |\n                        | CH3  LMOTS1  | \n                        \n\n    Objet :\n    ______\n\n    L'operateur FLUX permet d'imposer un flux sur une partie du contour\n    (resp. de l'enveloppe) d'une structure 2D (resp. 3D).\n\n    Commentaire :\n    ____________\n\n    CHPO1      : flux nodaux equivalents (type CHPOINT a 1 composante)\n                 \n    MMODE1     : structure modelisee (type MMODEL).\n\n    FLOT1      : valeur algebrique du flux (type FLOTTANT).\n\n    GEO1       : cote de la structure soumis au flux (type MAILLAGE)\n\n   'DIRECTION' : mot-cle indiquant qu'on va donner la direction du flux\n                 (par defaut, le flux est dirige selon la normale a\n                 l'element).\n\n    VEC1       : vecteur indiquant la direction du flux (type POINT) .\n\n    CH2        : champ a 1 composante donnant la valeur algebrique des \n                 flux. CH2 peut etre de type CHAMELEM (flux exprime aux\n                 points de Gauss) ou de type CHPOINT (flux aux noeuds).\n                   \n    CH3        : champ a 2 composantes pour les modeles massifs 2D \n                 et a 3 composantes pour les modeles 3D massifs.\n                 CH3 peut etre de type CHAMELEM ou CHPOINT. \n                 \n    LMOTS1     : liste des composantes (type LISTMOTS) du champ CH3\n                 a prendre en compte (voir remarque 2). \n\n    MOT1       : mot-cle qui indique pour les coques sur quelle peau se\n                 fait la convection :\n                'SUPE'  : en peau superieure\n                'INFE'  : en peau inferieure\n                 \n    Remarque 1 :\n    ___________\n\n    Un flux est compte positivement s'il est dirige vers l'interieur\n    d'un element massif.\n    \n    Remarque 2 (pour la syntaxe avec LMOTS1) :\n    _________________________________________\n    \n    Les composantes sont associees dans leur ordre de declaration dans  \n    LMOTS1 avec les directions 1 2 (3). Le produit scalaire est fait\n    localement avec les normales. Le flux resultant est positif si le \n    vecteur est dirige vers l'interieur d'un element massif.\n    \n    Remarque 3 (pour les coques) :\n    ________________________________________\n\n    La designation des peaux de la coque se fait par rapport a la\n    normale exterieure de l'element : la peau superieure est placee\n    dans le sens de la normale exterieure vis-a-vis du plan median.\n    Dans le cas ou les elements ne sont pas orientes d'une fa\u00e7on\n    coherente, il faut les reorienter en utilisant l'operateur ORIENT.\n   \n    Remarque 4 (pour l'option DIRE) :\n    ___________________________________________\n\n    L'option DIRE exige que les produits scalaires DIRE*(normales\n    elementaires) soient tous du meme signe (pas de replis de la surface)\n     \n    Remarque 5 :  \n    ___________\n    \n    Si vous utilisez un MODELE plus grand que la zone ou le flux est \n    defini par le CHPOINT CH2 ou les  noeuds du maillage GEO1,\n    alors les elements exterieurs touchant la frontiere voient un flux \n    non nul, et seront eux aussi charges. Il est donc fortement \n    conseille de fournir une reduction du MODELE sur les elements \n    strictement concernes.\n     \n     ",
  },
  {
    name: "FOFI",
    url: "FOFI",
    documentation:
      "$$$$ FOFI     NOTICE  CHAT      11/09/12    21:16:16     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur FOFI\n    --------------                           Voir aussi : GRAD SIGM\n                                                          CARA   BSIG  \n   FORC1 = FOFISS  MODL1 SIG1 GRDEP1 ( CAR1 ) ;\n\n\n   Objet :\n   -------\n\n   L'operateur FOFI calcule le champ de forces nodales resultant de\n   l'integration du produit d'un champ de contraintes par un champ de\n   gradients de deplacements.\n\n\n   Commentaire :\n   -------------\n\n   MODL1  : Objet modele (type MMODEL)\n\n   SIG1   : Champ de contraintes (type MCHAML)\n\n   GRDEP1 : Champ de gradients de deplacement DEP1 (type MCHAML)\n\n   CAR1   : champ de caracteristiques necessaire pour certains\n            elements (voir remarque ci-dessous) (type MCHAML,\n            sous-type CARACTERISTIQUES)\n\n   FORC1  : champ de forces nodales (type CHPOINT)\n\n\n\n\n   Remarques :\n   -----------\n\n   1 ) Etant donne un champ de contraintes S et un champ de deplacements\n       U, l'operateur FOFI calcule le champ de forces nodales dont le\n       travail dans un champ de deplacements V soit egal a :\n\n                            /          k     k\n                           |    ij   dU    dV\n                           |   S   * --i * --j   dM\n                           /M        dx    dx\n\n\n       Il est l'analogue de l'operateur BSIGMA pour les termes\n       quadratiques du tenseur de deformations.\n\n   2 ) En analyse de Fourier, le numero de l'harmonique utilise est\n       celui defini par la directive OPTION.\n\n   3 ) Il faut specifier des caracteristiques, si la description\n       geometrique de l'element ne peut se faire par le maillage,\n       par exemple l'epaisseur d'elements de plaques ou les inerties\n       d'elements de poutres.",
  },
  {
    name: "FONC",
    url: "FONC",
    documentation:
      "$$$$ FONC     NOTICE  CHAT      11/09/12    21:16:16     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur FONC                           Voir aussi :\n    ---------------  \n      LREEL1 = FONC | 'BESSEL'    |  'J0'  |  |  LREEL2 ;\n                    |             |  'J1'  |  |\n                    |             |  'Y0'  |  |\n                    |             |  'Y1'  |  |\n                    |                         |\n                    | 'FRESNEL'   |  'CX'  |  |\n                    |             |  'SX'  |  |\n                    | 'GAMMA'                 |\n\n\n    Objet :\n    _______\n\n    L'operateur FONC permet le calcul de certaines fonctions.\n\n\n    -------------------\n    | Option 'BESSEL' |\n    -------------------\n\n    Calcul de differentes fonctions de Bessel par approximation\npolynomiale (Abramowitz, Handbook of math. fonc.).\n\n    Commentaire :\n    -----------\n\n   'J0'    : fonction de BESSEL de premiere espece d'ordre 0 (x>-3).\n\n   'J1'    : fonction de BESSEL de premiere espece d'ordre 1 (x>-3).\n\n   'Y0'    : fonction de BESSEL de deuxieme espece d'ordre 0 (x>0).\n\n   'Y1'    : fonction de BESSEL de deuxieme espece d'ordre 1 (x>0).\n\n    LREEL2 : les valeurs de la variable (type LISTREEL).\n\n    LREEL1 : les valeurs de la fonction (type LISTREEL).\n\n\n    --------------------\n    | Option 'FRESNEL' |\n    --------------------\n\n    Calcul des integrales de Fresnel par la methode de Lanczos\n    separation de l'espace d'integration en deux domaines (x<4 et x>4)\n\n    Commentaire :\n    -----------\n\n   'CX'    : integrale en cosinus\n                               / x\n             F = 1/sqrt(2.PI) /    cos(t)/sqrt(t) dt\n                             / 0\n\n   'SX'    : integrale en sinus\n                               / x\n             F = 1/sqrt(2.PI) /    sin(t)/sqrt(t) dt\n                             / 0\n\n    LREEL2 : les valeurs de la variable (type LISTREEL).\n\n    LREEL1 : les valeurs de la fonction (type LISTREEL).\n\n\n    ------------------\n    | Option 'GAMMA' |\n    ------------------\n\n    Calcul de la fonction Gamma.",
  },
  {
    name: "FORBLOC",
    url: "FORBLOC",
    documentation:
      "$$$$ FORBLOC  NOTICE  CHAT      11/09/12    21:16:17     7124           \n                                             DATE     11/09/12\n\n  Procedure FORBLOC                    Voir aussi :\n        -----------------  \n        CHP2 CHP3 = FORBLOC GEO1 CHP1 FLOT1 ( LOG1 )\n        \n\n\n\n        Objet :\n        -------\n        En  magnetostatique 2d potentiel vecteur permet de calculer des\n        forces sur un inducteur par une integrale de surface  J * B \n\n\n        Commentaire :\n        ------------- \n\n        GEO1     maillage    \n        CHP1     potentiel  defini au moins sur GEO1\n        FLOT1    densite de courant sur GEO1 \n        LOG1     optionnel Logique valant VRAI si pb axisymetrique\n                 (pb plan par defaut )\n\n        En sortie :\n\n        CHP2 = champoint de forces aux noeuds ( FX FY ) ( en\n               axisymetrique  on les appelle quand meme FX et FY )\n        resultats par unite de longueur pour pb plans et par radian\n        pour pb axisymetrique\n        CHP3   champoint de la resultante au barycentre de GEO1 ",
  },
  {
    name: "FORC",
    url: "FORC",
    documentation:
      "$$$$ FORC     NOTICE  CHAT      11/09/12    21:16:17     7124           \n                                             DATE     11/09/12\n\n    Operateur FORCE                          Voir aussi : CHAR\n    ---------------                                       OPTI  \n    FORC1 = FORCE  |  VEC1          |  GEO1 ;\n                   |  MOTi VALi ... |\n\n\n    Objet :\n    _______\n\n    L'operateur FORCE construit un champ de forces resultant de l'appli-\ncation d'une force ponctuelle.\n\n    Commentaire :\n    _____________\n\n    La force peut etre definie :\n\n    - soit par un vecteur\n    - soit par les valeurs de composantes\n\n\n     VEC1  : vecteur (type POINT) dont les composantes sont les valeurs\n             de la force selon les axes de coordonnees.\n\n     MOTi  : nom des composantes (type MOT)\n\n     VALi  : valeurs des composantes (type FLOTTANT) de nom MOTi\n\n     GEO1  : lieu geometrique sur lequel la force est appliquee\n             (type POINT ou MAILLAGE)\n\n    Remarque :\n    __________\n\n    On doit specifier VEC1 avant GEO1.\n\n    Les noms de forces possibles sont :\n\n      pour un calcul en mode PLAN CONT :  FX   FY\n      pour un calcul en mode PLAN DEFO :  FX   FY\n      pour un calcul en mode PLAN GENE :  FX   FY  FZ(*)\n      pour un calcul en mode AXIS      :  FR   FZ\n      pour un calcul en mode FOUR      :  FR   FZ  FT\n      pour un calcul en mode TRID      :  FX   FY  FZ\n\n    (*)  uniquement au point support des inconnues supplementaires\n\n    La force VEC1 est repartie sur les differents points de GEO1.\n\n    Exemple :\n    _______\n\n    Si GEO1 contient 50 points, la force appliquee sur chaque\npoint est 1/50 de VEC1 (ou 1/50 de VALi).",
  },
  {
    name: "FORM",
    url: "FORM",
    documentation:
      "$$$$ FORM     NOTICE  FD218221  14/11/19    21:15:01     8272           \n                                             DATE     14/11/19\n                                             \n  Foncteur FORME                           Voir aussi :\n    --------------  \n    (CONF2) (CAR2)  = FORME  (CONF1) (CHPO1) (MOD1 CAR1) ;\n\n\n    Objet :\n    _______\n\n    Le foncteur FORME manipule les objets de type CONFIGURATION (champs\nde discretisation). Il a un double role de directive et d'operateur.\n\n\n    Commentaire :\n    _____________\n\n    En tant que directive, FORME actualise le champs de coordonnees\nd'apres la CONFIGURATION CONF1 (ou par defaut les coordonnees courantes)\neventuellement mise a jour a l'aide du champ de deplacements CHPO1\n(type CHPOINT).\n\n    En tant qu'operateur, FORME cree la CONFIGURATION CONF2 contenant\nle champ de coordonnees actualise par le foncteur et actualise le champ de\ncoordonnees d'apres la nouvelle CONFIGURATION CONF2.\n\n    On peut de plus reactualiser certaines caracteristiques, a savoir les\nvecteurs definissant les reperes locaux pour les elements POUTRE, TUYAU,\nJOI1 avec repere LIE (option de MODE), TUYAU FISSURE, LINESPRING.\nPour ces deux derniers, on se limite a l'hypothese des petites rotations.\n\n    Dans ce cas, il faut donner le champ de caracteristiques CAR1\n(type MCHAML, sous-type CARACTERISTIQUES) ainsi que la modele de calcul\nMOD1 (type MMODEL)qui sera reactualise en CAR2.\nLa donnee du CHPOINT CHPO1 est alors obligatoire.\n\n\n    Exemple :\n    _________\n\n    DEP = RESOU RITOT FORCE ; -->  calcul du champ de deplacements\n    FORME DEP               ; --> actualisation du champ de coordonnees\n    TRAC  GEO1              ; --> trace de la structure deformee\n\n    Si GEO1 est la structure non deformee du probleme en cours,\nl'operateur TRAC donnera le trace de la structure deformee sans\namplification.\n\n    Une alternatice est:\n\n    CONF1 = FORM ;   --> stocke dans CONF1 la configuration initiale\n    CONF2 = FORM DEP1 ; --> cree CONF2 qui est desormais active \n    TRAC GEO1 ;      --> trace de la structure deformee     \n    FORM CONF1 ;     --> retour a la configuration initiale       \n    ",
  },
  {
    name: "FORNOD",
    url: "FORNOD",
    documentation:
      "$$$$ FORNOD   NOTICE  MB234859  17/10/02    21:15:11     9577           \n                                             DATE     17/10/02\n                                             \n  procedure FORNOD                         Voir aussi :\n    ----------------  \n\n\nLa procedure FORNOD est appelee par la procedure DECONV.",
  },
  {
    name: "FOR_CONT",
    url: "FOR_CONT",
    documentation:
      "$$$$ FOR_CONT NOTICE  CHAT      11/09/12    21:16:17     7124           \n                                             DATE     11/09/12\n \n  Procedure FOR_CONT                   Voir aussi :\n        ------------------  \n          CHPO2 CHPO3  = FOR_CONT GEO1 CHPO1 FLOT1  ;\n          \n\n\n        Objet :\n        -------\n \n        En magnetostatique 2d potentiel vecteur calcul  de forces\n        sur un inducteur par une integrale de contour\n      \n        Commentaire :\n        ------------- \n\n        GEO1  maillage \n        CHPO1 potentiel vecteur sur au moins GEO1 \n        FLOT1 densite de courant sur GEO1 \n\n        en sortie :\n\n        CHPO2  resultante des forces sur le bloc\n              par unite de longueur en plan\n              par radian en axisymetrique (attention a la \n     signification pour les forces radiales)\n        CHPO3  moment par rapport a l'origine ",
  },
  {
    name: "FOUR2TRI",
    url: "FOUR2TRI",
    documentation:
      "$$$$ FOUR2TRI NOTICE  BP208322  21/01/28    21:15:07     10868          \n                                             DATE     21/01/28\n\nProcedure FOUR2TRI:            Voir aussi : POUT2MAS, CREER3D\n      FOUR2TRI TAB1 (NUMFOUR);\n\n\n\nObjet :\n------\n\n     FOUR2TRI genere un maillage 3D a partir d'un modele ou d'un \n     maillage 2D Fourier.\n     Si des champs (deplacements, forces ou scalaire) 2D Fourier sont \n     fournis, alors les champs 3D correspondant sont crees sur le \n     maillage 3D.\n     La table TAB1 peut etre reutilisees pour des appels successifs\n     a FOUR2TRI. Les infos utiles (maillages, etc.) sont conservees. \n     Ceci permet par exemple de recombiner les champs definis sur \n     plusieurs harmoniques de Fourier.\n     \n\nEntree :\n-------\n\n     NUMFOUR : (ENTIER) Numero d'harmonique de Fourier sur lequel\n               sont definis les champs 2D a recombiner en 3D.\n               \n     TAB1    : (TABLE) avec les indices suivants :\n     \n       . 'MODELE' : (MMODEL) modele 2D Fourier \n     ou\n       . 'MAILLAGE' : (MAILLAGE) maillage 2D \n       \n       . 'ANGLES'   : (LISTREEL facultatif) discretisation angulaire du \n                       maillage 3D (= prog 0. 15. 360. par defaut)\n       \n       . 'REDRESSE' : (LOGIQUE facultatif) changement de repere pour \n                      aligner z et Z (FAUX par defaut) tel que :\n                       = | FAUX --> (r,\\theta,z)_{2D} = (X,-Z,Y)_{3D}\n                         | VRAI --> (r,\\theta,z)_{2D} = (X,Y,Z)_{3D}\n                        \n       . 'ELIM' : (FLOTTANT facultatif) tolerance pour l'appel aux\n                   operateurs ELIM, MASQ et IPOL (=1.E-12 par defaut)\n       \n       . |'DEPLACEMENTS' | : (TABLE facultative) indicee par i=1..n\n         |'EFFORTS'      |\n         |'CHPO_SYME'    |\n         |'CHPO_ANTI'    |\n                     . i : (CHPOINT) champ 2D Fourier a reconstruire\n             \n\nSortie:\n-------\n     Les indices ajoutes a TAB1 sont :\n\n       . 'MAILLAGE_3D' : (MAILLAGE) maillage 3D obtenu par rotation \n                         (via ROTA ou VOLU 'ROTA')\n                         \n       . 'ANGLE_3D'    : (CHPOINT) angle \\theta sur le maillage 3D\n       \n       . 'COORDONNEES_2D' : (CHPOINT) coordonnees (r,z) du maillage 2D\n       \n       . 'COORDONNEES_3D' : (CHPOINT) coordonnees (r,z) du maillage 3D\n       \n       . |'DEPLACEMENTS_3D' | : (TABLE) indicee par i=1..n\n         |'EFFORTS_3D'      |\n         |'CHPO_SYME_3D'    |\n         |'CHPO_ANTI_3D'    |\n                     . i : (CHPOINT) champ 3D reconstruit\n     \n ",
  },
  {
    name: "FPA",
    url: "FPA",
    documentation:
      "$$$$ FPA      NOTICE  CHAT      11/09/12    21:16:18     7124           \n                                             DATE     11/09/12\n\n    Operateur FPA                            Voir aussi : KFPA FPAL\n    -------------  \n   SYNTAXE (EQEX) :  (voir l'operateur EQEX)\n   ________________\n     \n                                                        \n 'ZONE' $PAROI  'OPER' 'FPA'  NU YP UET NORM AK ROG RAP  'INCO' 'CN'\n \n\n   OBJET :\n   _______\n\nCalcule le depot d'aerosols en regime turbulent, transitoire simultane\nsur l'ecoulement et les particules.\n\n\n   COMMENTAIRES :\n   ______________\n\n\n$PAROI  ligne (2D) ou surface (3D) de depot    TABLE sous type DOMAINE\n\nNU      viscosite du gaz (m2/s)                FLOTTANT\n\nYP      epaisseur de la couche limite gaz (m)  FLOTTANT\n\nUET     vitesse de frottement du gaz (m/s)     CHPOINT SCAL CENTRE PAROI\n\nNORM    normale sortante a la paroi (m)        CHPOINT VECT CENTRE PAROI\n\nAK      vitesse de depot des particules (m/s)  CHPOINT SCAL CENTRE PAROI\n\nROG     masse volum. part. x gravite (kg/m2s2) POINT\n\nRAP     rayon des particules (m)               FLOTTANT\n\nCN      concentration des particules (-)       CHPOINT SCAL SOMMET DOMTO\n\n\nRemarques :\n___________\n\n- Ne pas oublier d'initialiser le champoint AK, qui est ici une sortie\n- UET est calcule par FPU (fonctions de paroi pour la vitesse)\n- NORM est calcule par DOMA sur tout le domaine, puis reduit sur la\n  paroi par KCHT\n- YP est a priori le meme que pour FPU, meme si on peut le choisir\n  different.\n- l'operateur FPA realise la condition aux limites pour une equation de\n  concentration (oper. TSCA).\n ",
  },
  {
    name: "FPAL",
    url: "FPAL",
    documentation:
      "$$$$ FPAL     NOTICE  CHAT      11/09/12    21:16:18     7124           \n                                             DATE     11/09/12\n\n     Operateur FPAL                          Voir aussi : FPA KUET\n     --------------                                       ECHI  \n     AK = FPAL  NU ROF UET NOR ROG RAP $PAROI ;\n                                                                                \n\n\n     OBJET :\n     _______\n\n    Fonctions de Paroi Aerosols : Calcule la vitesse de depot d'aerosols\n    en regime laminaire\n \n\n     COMMENTAIRES :\n     ______________\n\n\nAK      vitesse de depot des particules (m/s)  CHPOINT SCAL CENTRE PAROI\n\nNU      viscosite du gaz (m2/s)                FLOTTANT\n\nROF     masse volumique du gaz (kg/m3)         FLOTTANT\n\nUET     vitesse de frottement du gaz (m/s)     CHPOINT SCAL CENTRE PAROI\n\nNOR     champ des normales aux faces (m)       CHPOINT VECT FACE  DOMTOT\n\nROG     masse volum. part. x gravite (kg/m2s2) POINT\n\nRAP     rayon des particules (m)               FLOTTANT\n\n$PAROI  objet modele associe a la ligne de     MMODEL TYPE 'NAVIER_STOKES'\n        depot (en 2D)\n\n\n\n     Remarques :\n     ___________\n\n- UET est calcule par KUET (en regime laminaire)\n- NOR est calcule par DOMA sur tout le domaine (option 'NORMALE')\n- AK est un coefficient d'echange pour la masse, il est ensuite\n  donne a l'operateur ECHI qui realisera la condition limite de depot\n  pour l'equation de concentration (oper. TSCA).\n- operateur non teste en 3D.\n ",
  },
  {
    name: "FPT",
    url: "FPT",
    documentation:
      "$$$$ FPT      NOTICE  CHAT      11/09/12    21:16:19     7124           \n                                             DATE     11/09/12\n       \n     Operateur FPT                           Voir aussi : FPU ou FPT\n     -------------  \n     Syntaxe (EQEX) : Cf Operateur EQEX\n     ----------------------------------\n\n        'ZONE' $DOM  'OPER' FPT RO MU CP LB UET YP H TETA  'INCO' TN\n\n\n       (    FPT utilise les operateurs :                        )\n       (                KFPT   : calcul de H                    )\n       (                ECHIMP : calcul des fonctions de paroi  )\n       (                         sur la temperature             )\n \n\n      \n\n     DOMAINE D'APPLICATION : Thermo-hydraulique turbulente.\n    -----------------------        \n     \n           \n      OBJET :                                                                   \n     --------               \n        \n     Fonction de paroi standard associee au modele K-epsilon pour\n     la temperature (TN)\n                                                                                \n                                                                                \n                                                                                \n      UTILISATION :                                                             \n     --------------                                                             \n                                                                                \n\n\n     La vitesse de frottement UET , le coefficient d'echange H , ainsi que\n     la temperature de paroi TETA doivent etre initialisees avant execution .\n     Ces trois chpoint reposent sur le meme support geometrique .\n     Choisir de preference une valeur d'epaisseur de couche limite YP\n     telle que sa valeur adimentionnee Y+ soit comprise entre 30 et 300 lors\n     des calculs.\n                                                                                \n                                                                                \n\n                    \n      TABLEAUX AUTORISES :                                                      \n     ---------------------                                                      \n                                                                                \n                                                                                \n  $DOM   Modele NAVIER_STOKES\n\n  RO     Densite                         FLOTTANT ou CHPOINT SCAL SPG\n\n  MU     Viscosite dynamique moleculaire FLOTTANT ou CHPOINT SCAL SPG\n                                                                                \n  CP     Chaleur specifique              FLOTTANT ou CHPOINT SCAL SPG\n\n  LB     Conductivite thermique          FLOTTANT ou CHPOINT SCAL SPG\n                                                                                \n  UET    Vitesse de frottement           CHPOINT SCAL SPG\n\n  YP     Distance la paroi               FLOTTANT\n                                                                                \n  H      Coefficient d'echange thermique CHPOINT SCAL SPG\n\n  TETA  Temperature a la paroi           FLOTTANT ou CHPOINT SCAL SPG\n\n  TN    Champ de Temperature             CHPOINT SCAL SOMMET\n                    \n IMPORTANT:\n\n Suivant la formulation EF ou EFM1 SPG doit etre SOMMET ou CENTRE",
  },
  {
    name: "FPU",
    url: "FPU",
    documentation:
      "$$$$ FPU      NOTICE  CHAT      11/09/12    21:16:19     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur FPU                           Voir aussi :\n     -------------  \n     Syntaxe (EQEX) : Cf Operateur EQEX\n     ________________\n\n\n 1ere syntaxe\n \n     Formulation EFM1 :\n     \n        'OPER' 'FPU' NU UET YP           'INCO' 'UN' 'KN' 'EN'\n \n 2eme syntaxe\n\n     Formulation EF :\n     \n        'OPER' 'FPU' RO UN MU UET YP     'INCO' 'UN' <'KN' 'EN'>\n\n 3eme syntaxe\n\n     Formulation EF :\n     \n        'OPER' 'FPU' RO UN MU UET $mt NUEFF 'INCO' 'UN'\n\n\n\n                                                                                \n                                                                                \n     Objet :\n     _______\n                                                                                \n I/ 1ere syntaxe - Formulation EFM1\n\n     Discretise une condition de tension a la paroi suivant un modele de\n     fonction de paroi (modele de longueur de melange de Van Driest [1])\n     La solution U+ de l'equation est tabulee pour Y+ = 1 a 100. Loi Log\n     standard au dela.\n     Pour l'equation de QDM la condition est une condition de Neumann\n     sur la frontiere maillee du domaine. La fonction de paroi modelise\n     une partie de l'ecoulement du fluide (zone d'epaisseur Yp) qui se\n     fait en dehors du domaine maille. Il convient d'en tenir compte\n     lorsqu'on fait des bilans.\n\n     Les conditions limites correspondantes sur K et Epsilon sont\n     calculees si presence des inconnues 'KN' et 'EN'.\n\n     les valeurs de K et Epsilon sont imposees comme des conditions de\n     Dirichlet.\n     Dans le cas EFM1 les inconnues K et Epsilon sont obligatoires.\n\n II/ 2eme syntaxe - Formulation EF\n\n     Les fonctionnalites de cette option different sur deux points de la\n     precedente. La fonction de paroi est implicitee (methode iterative)\n     et la loi U+ = F(Y+) est donnee par la loi Reichardt valable jusqu'a\n     Y+ = 0. Pour le reste cette option est identique a la precedente.\n     Les conditions limites correspondantes sur K et Epsilon sont\n     calculees si presence des inconnues 'KN' et 'EN'. La loi de paroi est\n     exterieure au domaine maille.\n\n III/ 3eme syntaxe - Formulation EF\n\n     Les fonctionnalites de cette option different sur deux points de la\n     precedente. La fonction de paroi est integree a la premiere rangee\n     d'element du maillage. La valeur de Yp (distance a la frontiere) est\n     calculee automatiquement. La condition limite sur la QDM est une\n     condition d'adherence (u=v=w=0). C'est FPU qui l'impose. La viscosite\n     effective est modifiee sur la premiere rangee d'elements pour assurer\n     la continuite de la contrainte avec le reste de l'ecoulement.\n     Pour l'instant les valeurs de K et Epsilon ne sont pas calculees.\n     Pour le reste cette option est identique a la precedente.\n\n\n [1] On Turbulent Flow Near a Wall. R.H. Van Driest.\n     Journal of the Aeronautical Sciences (Nov 1956)\n\n     Commentaires :\n     ______________\n\n I/ 1ere syntaxe - Formulation EFM1 - \n\n  NU     Viscosite cinematique moleculaire (m**2/s) FLOTTANT\n  YP     distance a la paroi   (m)                  FLOTTANT\n         Cette distance doit etre telle que le premier point du maillage\n         se situe dans la couche limite. Un Y+ compris entre 30 et 300\n         est l'ideal. (Verification a posteriori par l'utilisateur)\n  UET    Vitesse de frottement (m/s):\n         en formulation EFM1                       CHPOINT SCAL CENTRE\n                                                   MOT\n  UN     Champ de vitesse   (m/s)                  CHPOINT VECT SOMMET\n <KN>    Energie turbulente                        CHPOINT SCAL SOMMET\n <EN>    Taux de dissipation de K                  CHPOINT SCAL SOMMET\n\n     La vitesse de frottement UET, doit etre initialisee en formulation\n     EFM1 a une valeur physiquement admissible sous peine de divergence\n     de la solution. On peut s'aider de la formule ci-dessous.\n     Choisir de preference une valeur d'epaisseur de couche limite YP\n     telle que sa valeur adimentionnee Y+ soit comprise entre 30 et 300\n     lors des calculs. (Y+=YP*UET/NU)\n\n II/ 2eme syntaxe - Formulation EF\n\n  RO     Densite (Kg/m**3)                         FLOTTANT\n                                                   CHPOINT SCAL SOMMET\n                                                   MOT\n  UN     Champ de vitesse   (m/s)                  CHPOINT VECT SOMMET\n                                                   MOT\n  MU     Viscosite dynamique moleculaire (Kg/m/s)  FLOTTANT\n                                                   CHPOINT SCAL SOMMET\n                                                   MOT\n  UET    Vitesse de frottement (m/s):\n         en formulation EF                         CHPOINT SCAL SOMMET\n                                                   MOT\n  YP     distance a la paroi   (m)                 FLOTTANT\n\n <KN>    Energie turbulente                        CHPOINT SCAL SOMMET\n <EN>    Taux de dissipation de K                  CHPOINT SCAL SOMMET\n\n III/ 3eme syntaxe - Formulation EF (Fonction de paroi integree au maillage)\n\n  RO     Densite (Kg/m**3)                         FLOTTANT\n                                                   CHPOINT SCAL SOMMET\n                                                   MOT\n  UN     Champ de vitesse   (m/s)                  CHPOINT VECT SOMMET\n                                                   MOT\n  MU     Viscosite dynamique moleculaire (Kg/m/s)  FLOTTANT\n                                                   CHPOINT SCAL SOMMET\n                                                   MOT\n  UET    Vitesse de frottement (m/s):\n         en formulation EF                         CHPOINT SCAL SOMMET\n                                                   MOT\n  $MD    Modele Navier-Stokes de la frontiere      MMODEL\n  NUEFF  Viscosite effective qui sera modifiee     CHPOINT SCAL SOMMET\n         par l'operateur.                          MOT\n\n\n\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n     OPTION\n     ______\n\n     Formulation Element Fini                   OPTION EFM1 (default)\n                                                OPTION EF",
  },
  {
    name: "FRCTRACE",
    url: "FRCTRACE",
    documentation:
      "$$$$ FRCTRACE NOTICE  AF221230  18/04/20    21:15:01     9814           \n                                             DATE     18/04/20\n\n    procedure FRCTRACE                       Voir aussi : MRCFRAME\n    ----------------   \n   VAL1 = FRCTRACE TAB1;\n\n\n\nObjet :\n-------\n\n    Procedure pour tracer les surfaces limites et les enveloppes des \n    elements de type portique (frame) en beton arm\u00e9 (POUT et TIMO)\n\nCommentaire :\n-------------\n    Cette procedure est appell\u00e9e par la procedure de calcul des marges \n    pour les elements frame (TIMO et POUT) - voir MRCFRAME\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  { name: "FREN", url: "FREN", documentation: "Fichier introuvable." },
  {
    name: "FREPART",
    url: "FREPART",
    documentation:
      "$$$$ FREPART  NOTICE  CHAT      11/09/12    21:16:19     7124           \n                                             DATE     11/09/12\n\n  Procedure FREPART                        Voir aussi :\n    -----------------  \n    CH1 = FREPART FO1 LI1 ;\n\n\n      Objet:\n    ------\n\n    Cette procedure permet d'imposer une force repartie sur\n    une ligne ouverte\n\n    En entree:\n\n    FO1  Force a repartir (POINT)\n    LI1  Ligne sur laquelle se reparti la force (MAILLAGE)\n\n    En sortie:\n\n    CH1  Champ des forces calculees (CHPOINT)",
  },
  {
    name: "FREQPERI",
    url: "FREQPERI",
    documentation:
      "$$$$ FREQPERI NOTICE  MB234859  17/10/02    21:15:12     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure FREQPERI                        Voir aussi :\n   ------------------  \n   EVOL1_P=FREQPERI EVOL2_F;\n\n\n   objet:\n   -----\n\n   effectue la transformation d'un signal en frequence EVOL2_F\n   (comportant N courbes) en un signal en periode EVOL1_P\n   (comportant N courbes), et vice-versa.",
  },
  {
    name: "FRIG",
    url: "FRIG",
    documentation:
      "$$$$ FRIG     NOTICE  PASCAL    13/11/08    21:15:39     7862           \n                                             DATE     13/11/08\n\n  Operateur FRIG                           Voir aussi : \n    --------------  \n  RIG1 = FRIG RIG2 MODEL1 CHD1 ;\n\n\n    Objet :\n    _______\n\n    Cet operateur n'est plus utilise.\n ",
  },
  {
    name: "FRON",
    url: "FRON",
    documentation:
      "$$$$ FRON     NOTICE  CHAT      11/09/12    21:16:20     7124           \n                                             DATE     11/09/12\n\n  Operateur FRON                           Voir aussi : \n    --------------    \n   CHT2 = FRON CHT1 CHCARA T1 DT ;\n\n\n\n    Objet :\n    _______\n\n  L'operateur FRON permet de suivre l'avancee d'un front sur une\nstructure lorsque ce dernier se propage dans toutes les direction a\nune vitesse connue (composante 'VIT' de CHCARA). La combustion est \ncaracterisee par un temps de combustion (composante 'TCMB' de CHPCARA).\n  Il faut specifier un champ par point donnant les instants de passage \ndu front en chaque point (composante 'TPS' ) estime au temps T1.\nL'operateur calcule alors le temps de passage du front au temps T1+DT\nlorsque le point n'a pas enocre brule au temps T1, il garde la valeur\nde CHT1 dans le cas contraire. \n\n  CHT2: champ par point de composante 'TPS'\n  CHT1: champ par point de composante 'TPS' au temps t1  \n  CHCARA: champ par point de composantes \n                           'VIT'pour la vitesse de combustion\n                           'TCMB' pour le temps de combustion.\n  T1  : instant ou ont ete estimees les valeurs de CHT1\n  DT  : taille du pas de temps. CHT2 est estime au temps T2=T1+DT.",
  },
  {
    name: "FRONABS",
    url: "FRONABS",
    documentation:
      "$$$$ FRONABS  NOTICE  MB234859  17/10/02    21:15:12     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure FRONABS                         Voir aussi :\n   -----------------  \n   RIG1  =  FRONABS  TAB1  ( TYP_FRON ) NHARM   \n\n\n\n\nObjet :\n-------\n\nLa procedure FRONABS permet de fabriquer des frontieres absorbantes \nde type  LYSMER ou de type  WHITE  utilisees  dans les calculs de \nl'interaction sol-structure. Ces frontieres composees d'amortisseurs\nvisqueux ont pour but d'eviter au  maximum la reflexion  des ondes \nsur la bordure du maillage de sol :\n\n    - La frontiere de type LYSMER absorbe  totalement l'energie des \n      ondes  planes a incidence normale. Elle est utilisee dans la \n      deconvolution du mouvement sismique du sol ;\n\n    - La frontiere de type WHITE donne une efficacite optimale \n      d'absorption d'energie lorsqu'au meme instant plusieurs ondes \n      arrivent avec des angles d'incidence differents.\n\n                                                                               \nCommentaire :                                                                   \n-------------\n\nEn entree :\n-----------                                                                    \n                                                                              \n TAB1 :   TABLE  contenant les indices suivants en toute lettre\n\n'FRONTIERE' : support geometrique de la frontiere, compose d'elements\n              de type SEG3 horizontal ou vertical en 2D : \n              PLANDEFO, AXIS, FOUR 0,1  \n                     \n'MASSE_VOLUMIQUE' : masse volumique du sol.         \n'POISSON'         : coefficient de Poisson du sol.                 \n'YOUNG'           : module d'Young du sol.                    \n\n\n TYP_FRON  : MOT indiquant le type de frontiere utilisee :  \n            'LYSMER' (par defaut) ou 'WHITE'.                                \n              \n NHARM : ENTIER  numero du mode FOURIER   \n\n\nEn sortie :\n-----------\n\nRIG1 : Objet de type 'RIGIDITE' et de sous-type 'AMORTISSEMNT'\n       contenant la matrice d'amortissement de la frontiere absorbante\n\n\nRemarque :\n---------\n                \n         La procedure ne traite pas les frontieres obliques ni les \n         modeles tridimensionels.  ",
  },
  {
    name: "FROT",
    url: "FROT",
    documentation:
      "$$$$ FROT     NOTICE  CHAT      11/09/12    21:16:20     7124           \n                                             DATE     11/09/12\n\n  Operateur FROT                           Voir aussi :\n    --------------  \n    SYNTAXE ( EQEX ) : Cf operateur EQEX\n    _________________\n\n     'OPER' 'FROT' CK CB <V0> 'INCO' 'UN'\n                  \n\n                                     \n    OBJET :\n    -----\n              \n   Discretise l'operateur de perte de charge sur l'equation de quantite\n de mouvement en 2D et 3D                                                       \n                       \n            \n         \n    Commentaires\n    ____________\n                    \n    Le tenseur de perte de charge doit etre diagonal et donne dans le\n repere global.\n                                 bx\n         | Kx  0   0  || (u - u0)   |\n         |            ||         by |\n         | 0   Ky  0  || (v - v0)   |\n         |            ||         bz |\n         | 0   0   Kz || (w - w0)   |\n                                                                                \n                                                                                \n    CK     coefficients de perte de charge\n           VECTEUR ou CHPOINT VECT CENTRE ou MOT\n                                                                                \n    CB     exposant\n           VECTEUR ou CHPOINT VECT CENTRE ou MOT\n                                                                                \n    V0     vitesse relative (par defaut V0=0. 0. 0.)\n           VECTEUR ou CHPOINT VECT CENTRE ou MOT\n                                                                                \n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    Options : (EQEX)\n    _________\n\n Formulation EFM1                     OPTION EFM1     Option par defaut\n Option explicite                     OPTION EXPL     Option par defaut\n Option implicite                     OPTION IMPL\n Dans ce dernier cas il peut etre necessaire de remettre le champ de\n vitesse a divergence nulle.",
  },
  {
    name: "FSUR",
    url: "FSUR",
    documentation:
      "$$$$ FSUR     NOTICE  FANDEUR   12/07/18    21:15:45     7434           \n                                             DATE     12/07/18\n                                             \n  Operateur FSUR                           Voir aussi :\n    --------------  \n  CHPO1 = FSUR | 'MASS' MODL1  |  VEC1  GEO1  |  (CAR1) ;\n               |               |  CHPO2       |\n               |\n               | 'COQU' MODL1  |  VEC1   |  (CAR1) ;\n               |               |  CHPO2  |\n               |\n               | 'POUT' MODL1  |  VEC1   |  ('PROJ' VEC2) ;\n                               |  CHPO2  |\n\n    Objet :\n    _______\n\n    L'operateur FSUR calcule les forces nodales equivalentes a une\ndensite de force surfacique appliquee sur un objet.\n\n\n      Commentaire :\n      _____________\n\n      MASS | : mot-cle obligatoire designant le type d'element sur \n      COQU |   lequel la force est appliquee (elements massifs, \n      POUT |   coques, poutres)\n\n      MODL1  : objet sur lequel la force est appliquee (type MMODEL)\n\n      VEC1   : vecteur representant la densite surfacique de forces \n               dans le cas ou elle est constante (type POINT)\n\n      GEO1   : pour les elements massifs, maillage sur lequel la force\n               est appliquee (type MAILLAGE)\n\n      CHPO2  : champ contenant la densite surfacique de forces aux\n               noeuds. Dans le cas des poutres il peut contenir \n               egalement une densite de moments (type CHPOINT).\n\n      CAR1   : caracteristiques des coques et des massifs :\n               (type MCHAML, sous-type CARACTERISTIQUES)\n               - pour les coques epaisses, contient les valeurs des\n                 epaisseurs aux points d'integration\n               - pour les massifs en contraintes planes, contient les \n                 valeurs des epaisseurs aux points d'integration\n\n      PROJ   : mot-cle facultatif suivi de :\n\n      VEC2   : qui indique que la densite de forces est definie\n               par unite de longueur de la projection de l'element sur\n               le plan normal au vecteur VEC2 (type POINT).\n\n      CHPO1  : forces nodales equivalentes resultantes (type CHPOINT)\n\n\n    Remarque :  1. Dans le cas des coques excentrees, l'excentrement \n    __________     n'est pas pris en compte",
  },
  {
    name: "FTRAN",
    url: "FTRAN",
    documentation:
      "$$$$ FTRAN    NOTICE  MB234859  17/10/02    21:15:12     9577           \n                                             DATE     17/10/02\n\n\n    Operateur FTRAN                       Voir aussi : FILC\n    --------------  \n   EV3 = FTRAN EV1 EV2 F0 VAL1;\n\n\n    Objet :\n    _______\n\n    La procedure FTRAN calcule la fonction de transfert entre les\n    evolutions EV1 et EV2\n\n    Commentaire :\n    _____________\n\n    EV1   : premiere evolution (type EVOLUTION)\n    EV2   : deuxieme evolution (type EVOLUTION)\n    F0    : frequence de coupure (type FLOTTANT)\n    VAL1  : nombre de points \u00e0 effacer aux extremit\u00e9s du\n            domaine frequenciel (type ENTIER)\n    EV3   : fonction de transfert (module et phase) \n                                   (type EVOLUTION)        \n            EV3 = TFR(EV1)/TFR(EV2)",
  },
  {
    name: "FUIT",
    url: "FUIT",
    documentation:
      "$$$$ FUIT     NOTICE  CHAT      11/09/12    21:16:21     7124           \n                                             DATE     11/09/12\n\n    Operateur FUIT                           Voir aussi : SENS                  \n    --------------                                        \n     MAIL4 MAIL5 MAIL6 = 'FUIT'  MAIL1 MAIL2 MAIL3 ;\n\n\n\n    Objet :\n    _______\n  \n    L'operateur FUIT permet de scinder un contour oriente ferme en deux autres \ncontours orientes fermes et de creer le segment de fuite (type SEG2) qui les\nrelie. L'element de fuite est le plus petit segment parmi les segments ayant \nune extremite dans MAIL2 et l'autre extremite dans MAIL3.\n\n\n\n        entrees:\n\n    MAIL1:   (objet de type MAILLAGE) contour oriente ferme forme d'elements \n             de type SEG2 uniquement.\n\n    MAIL2:   (objet de type MAILLAGE) dont un des points sera le support d'une \n             des extremite de l'element de fuite. \n\n    MAIL3:   (objet de type MAILLAGE) dont un des points sera le support de\n             l'autre extremite de l'element de fuite. \n\n\n       sorties:\n\n    MAIL4:   (objet de type MAILLAGE) contenant un element de type SEG2 et qui\n             est l'element de fuite. (MAIL4 est aussi contenu dans MAIL5 et son\n             inverse dans MAIL6).\n\n    MAIL5:   (objet de type MAILLAGE) contenant un des deux contours fermes\n             orientes issu de MAIL1.\n\n    MAIL6:   (objet de type MAILLAGE) contenant le second contour ferme\n             oriente issu de MAIL1.   \n\n\n    Remarque :\n    _________\n\n\n     Seuls les points de MAIL2 et MAIL3 qui appartiennent a MAIL1 sont pris\nen compte. Sous l'option de calcul AXIS les contours ne sont pas\nnecessairement fermes. Ils peuvent implicitement etre fermes par symetrie \nsuivant l'axe (Oz).",
  },
  {
    name: "FZERO",
    url: "FZERO",
    documentation:
      "$$$$ FZERO    NOTICE  BP208322  19/02/22    21:15:01     10118          \n                                             DATE     19/02/22\n                                             \n    Procedure FZERO                     Voir aussi : ZLEG RACP \n    ---------------  \n    XSOL = FZERO FONCTION XA XB (XTOL);\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule le zero d'une fonction x->f(x) elle-meme\n    definie par une procedure.\n    La methode de Brent est utilisee.\n\n    Commentaire :\n    _____________\n\n    FONCTION : PROCEDURE definisant la fonction x -> y=f(x) telle que :\n               y = FONCTION x;\n               \n    [XA XB]  : intervalle de recherche (FLOTTANTs)\n    \n    XTOL (facultatif) : precision sur la solution (FLOTTANT)\n    \n    Exemple :\n    _________\n    debp f6 x;\n      y  = (exp  x) - 2. - (1. / ((10.*x)**2)) + (2./((100.*x)**3));\n    finp y;\n    \n    x6 = FZERO f6 -4. 2.;\n    y6 = f6 x6;\n    * the result is : x6=0.70320 et f6=-2.7E-16 which is correct !\n    \n    * graphical verification :\n    x6_p = prog -4. PAS 0.01 2.;\n    f6_p = f6 x6_p;\n    ev6 = evol bleu manu 'x' x6_p 'f(x)' f6_p;\n    dess ev6 'YBOR' -5 5 'YGRA' 1 'AXES';\n\n    \n ",
  },
  {
    name: "F_S2PI",
    url: "F_S2PI",
    documentation:
      "$$$$ F_S2PI   NOTICE  CHAT      11/09/12    21:16:21     7124           \n                                             DATE     11/09/12\n\n  Procedure F_S2PI                     Voir aussi :\n        ----------------  \n         appelee  par la procedure  DDFOUR  \n\n\n \n        Objet :\n        -------\n       En magnetostatique potentiel vecteur 2d  reconstitue par les\n       symetries  appropriees la solution  sur 2PI  ",
  },
  {
    name: "GAM1",
    url: "GAM1",
    documentation:
      "$$$$ GAM1     NOTICE  CHAT      11/09/12    21:16:21     7124           \n                                             DATE     11/09/12\n                                          \n \n\n  Procedure GAM1                                Voir aussi :\n    --------------  \n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CAST3M \n       PAR  F. DUPRAT (LMDC - INSA Toulouse)\n\n\n      Cette procedure est appelee par la procedure NATAF",
  },
  {
    name: "GANE",
    url: "GANE",
    documentation:
      "$$$$ GANE     NOTICE  CHAT      11/09/12    21:16:22     7124           \n                                             DATE     11/09/12\n\n    Operateur GA(us-)NE(wton)               Voir aussi : MOCA, LEVM\n    -------------------------                            AJUSTE  EXCE  \n    TAB2=GANE TAB1 ('AMOR' FLOT1);\n    \n    CHPO1 RIGI1=GANE TAB1 'MATR' ('AMOR' FLOT1);\n\n    Objet :\n    _______\n\n    L'operateur GANE construit la matrice et le second membre de la\n    methode de Gauss-Newton ou de Levenberg-Marquardt.\n\n    - En donnant le mot clef 'MATR', ces objets sont retournes dans\n      CHPO1 (type 'CHPOINT') and RIGI1 (type 'RIGIDITE').\n\n    - Sans ce mot clef, le syteme lineaire est resolu et le resultat\n      (direction de descente) stocke dans TAB2 (type 'TABLE').\n\n    - Le mot clef 'AMOR' permet d'introduire le parametre de viscosite\n      nu=FLOT1 (type 'FLOTTANT') de la methode L-M . Par defaut\n      nu=0 (methode G-N).\n\n    La fonction a minimiser est: 2F(X)={f(X)}.{f(X)}, and [J(X)]=df/dX\n    \n    La direction de descente est H solution de:\n      [[transpose([J])[J]]+[nu*I]]{H}  = -{transpose([J]){f}}\n\n    Un exemple d'utilisation est donne dans gane.dgibi.\n\n    Commentaire :\n    _____________\n\n    TAB1   :  Table de type 'VECTEUR' contenant\n              TAB1 . 0 = f(X)\n              TAB1 . 1 = df/dX1\n                   .\n              TAB1 . n = df/dXn\n              \n    FLOT1  :  'FLOTTANT'=nu\n              \n    CHPO1  :  -{transpose([J]){f}}\n    RIGI1  :  [transpose([J])[J]]\n    \n    TAB2   :  TABLE of type 'VECTEUR' contenant\n              TAB2 . 1 = H1\n                   .           \n              TAB2 . n = Hn",
  },
  {
    name: "GDFLIM1",
    url: "GDFLIM1",
    documentation:
      "$$$$ GDFLIM1  NOTICE  CHAT      11/09/12    21:16:22     7124           \n                                             DATE     11/09/12\n                                          \n \n\n  Procedure GDFLIM1                             Voir aussi :\n    -----------------  \n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CAST3M \n       PAR  F. DUPRAT (LMDC - INSA Toulouse)\n\n\n      Cette procedure est appelee par la procedure HASOFER",
  },
  {
    name: "GENE",
    url: "GENE",
    documentation:
      "$$$$ GENE     NOTICE  CB215821  15/12/04    21:15:14     8724           \n                                             DATE     15/12/04\n\n    Operateur GENERATRICE                    Voir aussi : TRAN DALL REGL\n    ---------------------                                 ROTA SURF  \n    SURF1 = LIG1 GENERATRICE  LIG2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur GENERATRICE construit la surface SURF1 (type MAILLAGE)\nengendree par la translation de la ligne LIG1 (type MAILLAGE) parallele-\nment a la ligne LIG2 (type MAILLAGE)",
  },
  {
    name: "GENJ",
    url: "GENJ",
    documentation:
      "$$$$ GENJ     NOTICE  CHAT      11/09/12    21:16:23     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur GENJ                           Voir aussi :\n    --------------  \n    GEO2 = GENJ GEO1 FLOT1;\n \n\n    Objet :\n    _______\n \n    L'operateur GENJ genere le maillage GEO2 (type MAILLAGE) d'elements\nde joint succeptible de lier les contours interieurs du maillage GEO1\n(type MAILLAGE). FLOT1 (type FLOTTANT) indique la tolerance utilisee pour\ndeterminer la proximite de deux points.\n \n    Remarque :\n    __________\n \n    En 2D, GENJ genere des elements de type JOI2 a partir de maillage de\nTRI3 et/ou QUA4. En 3D, les elements de joints sont des JOI3 et/ou JOI4\ngeneres a partir d'elements de type CUB8, PRI6, PYR5 et/ou TET4\n ",
  },
  {
    name: "GIBI",
    url: "GIBI",
    documentation:
      "$$$$ GIBI     NOTICE  CHAT      11/09/12    21:16:23     7124           \n                                             DATE     11/09/12\n\n\n             Systeme CASTEM2000  -   Programme GIBI\n             --------------------------------------\n\n Le programme GIBI est fonde sur le concept d'OBJET. Un objet represente\nune structure abstraite de donnees utilisee par les methodes de calcul\nscientifique, notamment par element fini.\n\n La creation d'un objet est effectuee par l'appel a un OPERATEUR tel que\n \"DROIT\" ou \"TRAN\".\n\n Il existe egalement des DIRECTIVES permettant de preciser les options\ngenerales de calcul ou d'effectuer des actions variees. Par exemple la\ndirective \"OPTION\" sert a preciser la dimension de l'espace et le type\nd'element que l'utilisateur desire fabriquer et la directive \"DENSITE\"\nsert a definir la taille de la maille  qui aura pour extremite un point\ncree avec cette densite.\n\n Les objets sont connus par leur nom (comme d'ailleurs les operateurs),\net par leur type.\n\n Les types d'objet utiles a la creation de maillage sont, outre les mots\net les nombres :\n          le POINT ou noeud d'un maillage.\n          le MAILLAGE qui represente un maillage ou un sous-maillage\n          et qui, sous sa forme la plus generale peut etre defini comme\n          un element de P(P(E)).\n\n Un objet se nomme a l'aide du signe d'affectation :   \" = \".\n\n Pour creer l'objet entier de nom \"UN\" et de valeur 1, on ecrira :\n\n          UN    =    1    ;\n\n L'instruction de base de GIBI est de la forme suivante :\n\n           resultat = operation (liste d'objets)\n\nexemple:  ARC    =   POIN1      CERCLE        CENTRE       POIN2       ;\n\n        nom de      nom du      operateur     nom du    nom de la  finit\n       l'objet      point qui   de fabri-     point     deuxieme   toute\n       resultat     sera la     cation d'     centre    extremite  inst-\n                    premiere    un arc de     de l'arc           ruction\n                    extremite   cercle                             GIBI\n\n Une exception a cette regle, l'operation de creation d'un point se\npasse d'operateur :\n               POINT=10. 0. 0. ;\n\n Les donnees de GIBI se font en format libre. Chaque instruction, qui\npeut tenir au plus sur sept cartes se termine par un point-virgule.\n\n Les cartes contenant * en premiere colonne sont ignorees et peuvent\ndonc permettre d'introduire des commentaires dans les donnees.\n\n Les noms des operateurs et des directives sont caracterises par\nleurs quatre premiers caracteres. Les noms des objets et des mots-cles\nsont caracterises par leurs huit premiers caracteres.\n\n Trois types de facilites permettent d'alleger les donnees de GIBI :\n\n - Le chainage des operations : le resultat d'une operation est pris\n                   comme premier operande de l'operation suivante.\n     exemple:\n                     RESU = A ET B ET C ET D ;\n\n - Les parentheses :  l'ensemble des parentheses et de leur contenu\n                   est considere comme l'objet en resultant.\n     exemple:\n                     SURFACE = LIGNE TRANSLATION ( P1 MOINS P2 );\n\n  - La place des objets de types differents intervenant dans une\n                   instruction est en principe indifferente.\n     exemple:\n                     TRAC OEIL GEOM; GEOM TRAC OEIL; OEIL TRAC GEOM;\n     sont la meme operation.",
  },
  {
    name: "GMV",
    url: "GMV",
    documentation:
      "$$$$ GMV      NOTICE  CHAT      11/09/12    21:16:24     7124           \n                                             DATE     11/09/12\n\n  Operateur GMV (Groupe Moto Ventilateur) Voir aussi :\n     -------------  \n\n\n\n     Objet : Discretise un terme source de quantite de mouvement.\n             On impose soit la valeur de ce terme source\n             ou alors on calcule ce terme source en fonction des\n             caracteristiques du GMV (Courbe debit-pression)\n             fourni par l'utilisateur.\n\n\n     Syntaxe (EQEX) :\n\n              GMV TABGMV  INCO 'UN'\n\n     TABGMV : Table contenant les entrees suivantes\n\n    'DIR'       POINT         direction de l'impulsion\n    'PENTREE'   LISTENTI      numero des elements (zone GMV)\n                              pour le calcul de la pression d'entree\n    'PSORTIE'   LISTENTI      numero des elements (zone GMV)\n                              pour le calcul de la pression de sortie\n    'LDEBIT'    MAILLAGE      ligne (2D) pour le calcul  du debit\n\n    <'KIMP'>    FLOTTANT      impulsion imposee (sa valeur)\n    <'IMPR'>    ENTIER        frequence d'impression des informations\n                              sur le point de fonctionnement du GMV\n\n    Si entree 'KIMP' absente\n\n     'GMV'      EVOLUTION     Courbe pression-debit du GMV\n    <'OMEGA'>   FLOTTANT      facteur de relaxation (defaut 0.5)\n    <'K0'>      FLOTTANT      Valeur d'initialisation de K\n                              (cette valeur est reactualisee a chaque\n                               pas )\n\n    Exemple : Voir le jeux de donnees HY2.dtc",
  },
  {
    name: "GNFL",
    url: "GNFL",
    documentation:
      "$$$$ GNFL     NOTICE  CHAT      11/09/14    21:15:06     7129           \n                                             DATE     11/09/14\n                                             \nOp\u00e9rateur  GNFL                               Voir aussi :\n\n\n\n    Cet op\u00e9rateur est appel\u00e9 par PASAPAS .",
  },
  {
    name: "GRAD",
    url: "GRAD",
    documentation:
      "$$$$ GRAD     NOTICE  CB215821  17/07/18    21:15:12     9504           \n                                             DATE     17/07/18\n                                             \n    Operateur GRAD                           Voir aussi : SORE\n    --------------  \n      GRAD1 = GRAD MODL1 CHPO1 (CAR1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur GRAD calcule les gradients d'un champ de type CHPOINT.\n\n\n      Commentaire :\n      _____________\n\n      MODL1  : Objet de type MMODEL contenant une des formulations\n               compatibles suivantes : \n                 - MECANIQUE\n                 - THERMIQUE\n                 - DIFFUSION\n                 - THERMOHYDRIQUE\n\n      CHPO1  : Champ de | deplacement   | (type CHPOINT).\n                        | temperature   |\n                        | concentration |\n\n      CAR1   : Champ de caracteristiques geometriques (type MCHAML).\n\n      GRAD1  : champ de gradients (type MCHAML).",
  },
  {
    name: "GRAF",
    url: "GRAF",
    documentation:
      "$$$$ GRAF     NOTICE  CHAT      11/09/12    21:16:24     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur GRAF                           Voir aussi :\n    --------------  \n      GRAF1 = GRAF MODL1 DEP1   ;\n\n\n    Objet :\n    _______\n\n    L'operateur GRAF calcule les gradients de flexion dans les elements\n    de coque mince .\n\n      Commentaire :\n      _____________\n\n      MODL1  : Objet de type MMODEL.\n\n      DEP1   : Champ de deplacements  (type CHPOINT).\n\n      GRAF1  : champ de gradients (type MCHAML).\n\n\n      Remarque : Les coques ne peuvent pas etre excentrees.\n      __________",
  },
  {
    name: "GREE",
    url: "GREE",
    documentation:
      "$$$$ GREE     NOTICE  MB234859  17/10/02    21:15:13     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur GREEN                          Voir aussi :\n    ----------------  \n    EVOL1  =  GREEN   STRU1 FLOT1 FLOT2....\n\n       |'BERNOUILLI_EULER'| 'NON_FILTRE' ;\n   ... |                  | 'FILTRE' FLOT3 FLOT4 ('AMORTISSEMENT' FLOT5)\n       |\n       | 'TIMOSHENKO' FLOT6 'FILTRE' FLOT3 FLOT4 ('AMORTISSEMENT' FLOT5)\n\n\n\n    Objet :\n    _______\n\n    L'operateur GREEN  calcule des fonctions de GREEN associees a des\npoutres pour des resolutions de problemes dynamiques par equation\nintegrale.\n\n    Commentaire :\n    -------------\n\n    STRU1     : objet decrivant la poutre (type STRUCTUR)\n\n    FLOT1     : valeur du temps de calcul demande (type FLOTTANT)\n\n    FLOT2     : pas de temps de calcul (type FLOTTANT)\n\n    FLOT3     : frequence basse de filtrage (type FLOTTANT)\n\n    FLOT4     : frequence haute de filtrage (type FLOTTANT)\n\n    FLOT5     : valeur de l'amortissement (type FLOTTANT)\n\n    FLOT6     : coefficient de forme adimensionnel (type FLOTTANT)\n\n    EVOL1     : objet de type EVOLUTIO, contenant les fonctions de\n                Green de traction-compression, torsion, flexion aux\n                extremites de la poutre.",
  },
  {
    name: "GRESP",
    url: "GRESP",
    documentation:
      "$$$$ GRESP    NOTICE  CHAT      11/09/12    21:16:24     7124           \n                                             DATE     11/09/12\n\n\n\n    Procedure GRESP                           Voir aussi : EXEC KRES\n    ---------------  \n    CHP1 = GRESP MTK1 CHP2 CHP3 TAB1 ;\n                                                        \n\n\n    Objet :\n    _______\n\n    La procedure GRESP resout de maniere approchee un systeme de type\n    point-selle par une methode de projection algebrique incrementale.\n\n    Elle est appelee par la procedure EXEC dans le cadre de la resolution\n    des equations de Navier-Stokes incompressible en transitoire a la \n    place de KRES lorsque la methode de projection algebrique incrementale\n    est demandee (cf. notice EXEC indice 'GPROJ' de la table rv).\n\n    Commentaire :\n    _____________\n\n    MTK1 : matrice du systeme a resoudre (type MATRIK)\n\n    CHP2 : champ des conditions aux limites de Dirichlet (type CHPOINT)\n\n    CHP3 : second membre du systeme a resoudre (type CHPOINT)\n\n    TAB1 : table argument de EXEC (\"rv\")\n\n    CHP1 : solution approchee du systeme (type CHPOINT)",
  },
  {
    name: "GYRO",
    url: "GYRO",
    documentation:
      "$$$$ GYRO     NOTICE  MB234859  17/10/02    21:15:13     9577           \n                                             DATE     17/10/02\n\n    Operateur GYROSCOPIQUE              Voir aussi : CARA KENT CORI\n    ----------------------                                         \n\n\n    Objet :\n    _______\n\n    L'operateur GYROSCOPIQUE calcule la matrice de couplage gyroscopique\n    utilisee pour l'etude des machines tournantes a l'aide d'elements \n    finis de poutre\n\n    RIG1 = GYRO MODL1  MAT1 ;                                    \n\n\n    Commentaire :\n    _____________\n\n    RIG1 : matrice de couplage construite (TYPE rigidite) \n\n    MODL1: Modele   (objet MMODEL)  \n\n    MAT1 : Caracteristiques materiau (objet MCHAML)  \n\n    Les matrices de couplage gyroscopique sont calculees pour les elements\n    POUTRE, TUYAU et TIMO (modele SECTION inclu) en rotation autour de leur \n    axe local Ox (repere fixe).\n    Ce calcul necessite de connaitre la vitesse de rotation de l'arbre \n    (caracteristique OMEG en rad/s de l'element de poutre).      ",
  },
  {
    name: "G_AUX",
    url: "G_AUX",
    documentation:
      "$$$$ G_AUX    NOTICE  PV        20/11/05    09:56:37     10770          \n                                             DATE     20/11/05\n\n    Procedure G_AUX                          Voir aussi : G_THETA\n    ---------------  \n    CH_AUX = G_AUX SUPTAB BOOL OBJUTI ;\n\n\n    Objet :\n    _______\n\n  Cette procedure calcule les champs auxiliaires n\u00e9cessaires \u00e0 G_THETA\n  afin de d\u00e9terminer les facteurs d'intensit\u00e9s des contraintes via l'option\n  'DECOUPLAGE' (voir proc\u00e9dure G_THETA).\n\n    En entree\n    ---------\n\n    SUPTAB = Objet de type TABLE dont les indices sont des              \n             objets de type MOT (a ecrire en toutes lettres).\n             Pour voir quels sont les indices obligatoires, voir\n                         la notice de la proc\u00e9dure G_THETA.\n                         \n        BOOL = Objet de type TABLE contenant les bool\u00e9ens utiles aux divers\n               tests effectu\u00e9s au cours du d\u00e9roulement de G_THETA.\n                   \n        OBJUTI = Objet de type TABLE contenant divers objets utiles au cours\n                 du calcul. Cette table permet de conserver en m\u00e9moire des\n                         objets cr\u00e9\u00e9s dans les divers proc\u00e9dures appel\u00e9es par G_THETA.\n\n\n    En sortie :\n    -----------\n\n    CH_AUX = Objet de type TABLE contenant les champs auxiliaires n\u00e9cessaires\n                 pour calculer les facteurs d'intensit\u00e9 des contraintes.\n                         \n ",
  },
  {
    name: "G_CALCUL",
    url: "G_CALCUL",
    documentation:
      "$$$$ G_CALCUL NOTICE  CHAT      11/09/12    21:16:22     7124           \n                                             DATE     11/09/12\n\n  Procedure G_CALCUL                       Voir aussi :\n    ------------------  \n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure G_THETA. Elle \npermet de determiner les differents termes d'une integrale de\ncontours.",
  },
  {
    name: "G_CAS",
    url: "G_CAS",
    documentation:
      "$$$$ G_CAS    NOTICE  JB251061  20/11/05    09:24:30     10771          \n                                             DATE     20/11/05\n\n    Procedure G_CAS                          Voir aussi : G_THETA\n    ---------------  \n    OBJUTI = G_CAS SUPTAB BOOL ;\n\n\n    Objet :\n    _______\n\n  Cette procedure analyse la table fournie a la procedure G_THETA, puis\n  determine et resume le cas que l'utilisateur souhaite traite. Si les\n  donnees sont incompatibles, ou si le cas n'est pas encore traitable par\n  la procedure G_THETA, une erreur est renvoyee.\n  L'information sur le cas de figure est enregistree dans la table BOOL\n  qui est constituee exclusivement de booleens. Cela facilite les tests\n  ulterieurs dans G_THETA.\n\n    En entree\n    ---------\n\n    SUPTAB = Objet de type TABLE dont les indices sont des              \n             objets de type MOT (a ecrire en toutes lettres).\n             Pour voir quels sont les indices obligatoires, voir\n                         la notice de la procedure G_THETA.\n                         \n        BOOL = Objet de type TABLE contenant les booleens utiles aux divers\n               tests effectues au cours du deroulement de G_THETA.\n\n\n    En sortie :\n    -----------\n\n    OBJUTI = Objet de type TABLE contenant des objets utiles a la procedure\n                 G_THETA crees pendant l'analyse de SUPTAB.\n                          ",
  },
  {
    name: "G_THETA",
    url: "G_THETA",
    documentation:
      "$$$$ G_THETA  NOTICE  JB251061  21/10/19    21:15:05     11130          \n                                             DATE     21/10/19\n                                             \n    Procedure G_THETA                        Voir aussi : G_CALCUL\n    -----------------                                     CH_THETA  \n                                                          CH_THETX  \n                                                          G_CAS  \n                                                          G_AUX  \n    G_THETA SUPTAB ;\n\n                       SUPTAB.'BLOCAGES_MECANIQUES'    'LEVRE_INFERIEURE'\n                              'CALCUL_CRITERE'         'METH_AUX'\n                              'CARACTERISTIQUES'       'MODELE'\n                              'CHAMP_THETA'            'MODELES_COMPOSITES'\n                              'CHARGEMENTS_MECANIQUES' 'NOEUDS_AVANCES'\n                              'CHPOINT_TRANSFORMATION' 'OBJECTIF'\n                              'CHPO_RESULTATS'         'OPERATEUR'\n                              'COUCHE'                 'PHI'\n                              'CRIT_DECHA_GLOBAL1'     'POINT_CENTRE'\n                              'CRIT_DECHA_GLOBAL2'     'POINT_1'\n                              'CRIT_DECHA_LOCAL1'      'POINT_2'\n                              'CRIT_DECHA_LOCAL2'      'POINT_3'\n                              'DEFORMATIONS_IMPOSEES'  'PRESSION'\n                              'ELEMENT_MULTICOUCHE'    'PSI'\n                              'EPAISSEUR_RESULTATS'    'RESULTATS'\n                              'EVOLUTION_RESULTATS'    'ROTATION_RIGIDIFIANTE'\n                              'FISSURE_2'              'SOLUTION_PASAPAS'\n                              'FRONT_FISSURE'          'SOLUTION_RESO'\n                              'FRONT_FISSURE_2'        'TEMPERATURES'\n                              'LEVRE_SUPERIEURE'\n                              \n\n    Objet :\n    -------\n\n    Cette procedure a deux objectifs principaux : \n\n    1 ) calculer les integrales suivantes de la mecanique de la rupture :\n        1.1) l'integrale J (ou G) d'un materiau isotrope, caracteristique \n             en elasto-plastique. Les discontinuites de proprietes ne sont\n             pas encore acceptables dans le cas des elements 3D massifs.\n        1.2) l'integrale J dynamique d'un materiau isotrope,  \n             caracteristique en elasto-dynamique. Les discontinuites de \n             proprietes ne sont pas encore acceptables dans le cas des\n             elements 3D massifs.\n        1.3) l'integrale C* d'un materiau isotrope, caracteristique \n             dans le cas de fluage secondaire stationnaire. Le chargement\n             doit etre mecanique et les dicsontinuites de proprietes ne sont\n             pas encore acceptables, ni en 2D ni en 3D.\n        1.4) l'integrale C*(h) d'un materiau isotrope, caracteristique \n             dans le cas de fluage primaire ou tertiaire sous un chargement \n             radial. Le chargement doit etre mecanique et les dicsontinuites\n             de proprietes ne sont pas encore acceptables, ni en 2D ni en 3D.\n        1.5) l'integrale de derivation dJ/da (a : longueur de la fissure)\n             d'un materiau homogene et isotrope, utile pour etudier la \n             stabilite de propagation d'une fissure ou des fissures\n             interagissantes. Ne sont pas encore acceptables les discontinuites\n                         de proprietes en 2D ou en 3D et les elements de coque (mince\n             ou epaisse).  \n\n    2 ) decoupler les modes mixtes d'un materiau homogene et isotrope, \n        c'est a dire la separation des facteurs K1, K2 (et K3 en 3D). \n        Les discontinuites de proprietes et les elements de coque ne sont pas \n        encore acceptables.\n            \n\n    ENTREE :\n    --------\n\n    En entree, SUPTAB (objet de type TABLE) sert a definir les options  \n    et les parametres du calcul. Ses indices sont des objets de type  \n    MOT (a ecrire en toutes lettres) dont voici la liste :\n\n    Arguments obligatoires dans tous les cas                         \n    ----------------------------------------                         \n                                                                     \n    SUPTAB.'OBJECTIF' \n    = MOT pour preciser le but du calcul, valant :        \n      1) 'J'      pour calculer l'integrale J (ou G), caracteristique \n                  en elasto-plastique.        \n      2) 'J_DYNA' pour calculer l'integrale J (ou G), caracteristique\n                  en elasto-dynamique.        \n      3) 'C*'     pour calculer l'integrale C*, caracteristique         \n                  en fluage secondaire stationnaire.                            \n      4) 'C*H'    pour calculer l'integrale C*(h), caracteristique      \n                  en fluage primaire ou tertiaire.                              \n      5) 'DJ/DA'  pour calculer l'integrale de la derivation dJ/da,     \n                  caracteristique pour analyser la stabilite de\n                  propagation d'une fissure ou des fissures \n                  interagissantes.    \n      6) 'DECOUPLAGE' pour decouper les modes mixtes, c'est a dire la \n                  separation des facteurs K1, K2 (et K3 et 3D).                 \n         \n    SUPTAB.'COUCHE' \n    = ENTIER representant le nombre de couches d'elements autour du \n             front de la fissure qui se deplacent pour simuler la \n             propagation de la fissure. Il vaut 0 si seul la pointe de     \n             la fissure se deplace, 1 si c'est la premiere couche \n             d'elements entourant la fissure qui se deplace, 2 si c'est\n             l'ensemble des premiere et deuxieme couches d'elements qui \n             se deplace, etc. \n             Il convient veiller a ce que l'ensemble des elements a deplacer\n             n'atteint pas le bord de la structure fissuree.  \n             Si COUCHE et CHAMP_THETA sont tous deux donn\u00e9s, CHAMP_THETA \n             est \u00e9cras\u00e9 (cf.8.).\n                      \n    SUPTAB.'FRONT_FISSURE' \n    = type POINT en 2D massif ou 3D coque  \n      representant la pointe de la fissure;\n    = type MAILLAGE en 3D massif (elements SEG2 ou SEG3) \n      representant le front de la fissure.        \n                                                                     \n    Arguments obligatoires avec des elements standards             \n    --------------------------------------------------  \n\n    SUPTAB.'LEVRE_SUPERIEURE' \n    = Selon la convention habituelle de definition, cet objet (type \n      MAILLAGE) represente la levre superieure de la fissure. \n                                                                     \n    SUPTAB.'LEVRE_INFERIEURE' \n    = Selon la convention habituelle de definition, cet objet (type \n      MAILLAGE) represente la levre inferieure de la fissure. \n    \n    Si une seule levre est modelisee, un des deux mots (LEVRE_SUPERIEURE\n    ou LEVRE_INFERIEURE) sera suffisant pour decrire la fissure entiere.   \n    Dans le cas de l'objectif DECOUPLAGE, les deux levres sont obligatoires.\n                                                                     \n    Arguments obligatoires avec des elements enrichis (XFEM)         \n    --------------------------------------------------------         \n                                                                        \n    SUPTAB.'PSI' =   1ere level set (CHPOINT) decrivant la fissure dans \n                     le cas ou l'on utilise des elements XFEM . \n                     \n    SUPTAB.'PHI' =   2eme level set.                                    \n                                                                        \n                                                                     \n    Arguments obligatoires avec une solution issue de la procedure PASAPAS\n    ----------------------------------------------------------------------\n                                                                     \n    SUPTAB.'SOLUTION_PASAPAS' = TABLE sortant de la procedure PASAPAS.  \n                                                                     \n                                                                     \n    Arguments obligatoires avec une solution issue de l'operateur RESO\n    ------------------------------------------------------------------\n                                                                     \n    SUPTAB.'SOLUTION_RESO' \n    = CHPOINT de deplacement issus de RESO. \n     \n    SUPTAB.'CARACTERISTIQUES' \n    = Champ de caractristiques materielles et eventuellement \n      geometriques si necessaire. \n                         \n    SUPTAB.'MODELE' \n    = Objet modele (type MMODEL) englobant toute la structure.\n    \n    Arguments optionnels avec une solution issue de l'operateur RESO\n    ----------------------------------------------------------------\n    \n    SUPTAB.'TEMPERATURES' \n    = CHPOINT ou MCHAML de temperature creant une contrainte thermique \n      non nulle si elle existe.\n         \n    SUPTAB.'CHARGEMENTS_MECANIQUES' \n    = CHPOINT representant l'ensemble des forces exterieures\n      (surfaciques, volumiques ou ponctuelles ....) appliquees \n      sur le systeme si elles existent, SAUF la pression sur les\n      levres de la fissure qui doit obligatoirement etre donnee\n      dans l'indice PRESSION et le modele correspondant dans\n      l'indice MODELE.\n          \n    SUPTAB.'BLOCAGES_MECANIQUES' \n    = RIGIDITE representant les blocages mecaniques du probleme, a fournir  \n      uniquement pour le calcul de l'integrale de derivation dJ/da.\n                                                                     \n    SUPTAB.'PRESSION'            \n    = MCHAML de pression, obligatoire si l'on fournit un modele de\n      chargement pression a l'indice MODELE.\n      \n    SUPTAB.'DEFORMATIONS_IMPOSEES'\n    = MCHAML de deformations imposees s'il y en a\n\n    Autres arguments optionnels\n    ---------------------------                                      \n                                                                     \n    1 : Discontinuites de proprietes (2D massif ou 3D coque seulement)       \n                                                                     \n    SUPTAB.'MODELES_COMPOSITES' \n    = TABLE indicee par des entiers (1 2... M, M = nombre de modeles)\n      pour donner les modeles permettant d'identifier les discontinuites\n      de proprietes materielles ou geometriques. Les proprietes sont donc\n      continues sur chaque modele, et les lieux de discontinuites sont\n      les interfaces entre les modeles.\n                                                                     \n    2 : Pour un front de fissure tridimensionnel massif              \n                                                                     \n    SUPTAB.'NOEUDS_AVANCES' \n    = MAILLAGE de type POI1 pour donner les points du front pour \n      lesquels le calcul sera effectue. Si cet argument est obsent, le\n      calcul sera fait pour tous les noeuds sur le front de la fissure.    \n                                                                     \n    3 : Calcul des termes croises de la matrice de derivation dJi/daj\n        (i n'est pas egal a j) dans le cas des fisures interagissantes.    \n                                                                     \n    SUPTAB.'FISSURE_2' \n    = Objet de type MAILLAGE representant une autre fissure (levres \n      superieure + inferieure si toutes les deux levres sont presentes).  \n      \n    SUPTAB.'FRONT_FISSURE_2' \n    = POINT ou MAILLAGE reprsentant le front de la fissure 2 telle que \n      decrite ci-dessus.        \n\n    4 : Cas d'une fissure circulaire dans une geometrie plane          \n                                                                     \n    SUPTAB.'POINT_CENTRE' = centre de la fissure circulaire            \n                                                                     \n    5 : Cas ou l'extension de la fissure correspond a une simple       \n        translation dans un tuyauterie droite (3D). Dans ce cas        \n        on effectue dans la procedure CH_THETA une transformation      \n        de tuyau en plaque en passant au systeme de coordonnees        \n        cylindriques. Il est alors necessaire de fournir :             \n                                                                     \n    SUPTAB.'POINT_1' = centre du systeme de coordonnees \n                \n    SUPTAB.'POINT_2' = POINT tel que l'axe defini par POINT_1           \n                       vers POINT_2 soit l'axe Z poisitif \n              \n    SUPTAB.'POINT_3' = POINT tel que le plan defini par les 3 points    \n                       POINT_1 POINT_2 POINT_3 donne l'angle theta nul  \n                                                                     \n    6 : Cas ou l'extension de la fissure ne correspond                 \n        pas a une simple translation (3D)                              \n                                                                     \n        6.1 : Fissure dans un tuyauterie droite (3D, Rotation)           \n                                                                     \n        SUPTAB.'POINT_1' = Objet de type POINT sur l'axe du tuyau\n     \n        SUPTAB.'POINT_2' = Objet de type POINT qui, avec le point      \n                           SUPTAB.'POINT_1', defini l'axe du tuyau                      \n                                                                     \n        6.2 : Fissure dans un coude (3D, rotation + transformation)      \n              Outre les deux points SUPTAB.'POINT_1' et SUPTAB.'POINT_2' \n              definis en haut on donne encore :                          \n                                                                     \n        SUPTAB.'CHPOINT_TRANSFORMATION' \n        = Objet de type CHPOINT utilise pour transformer un coude en un\n          tuyauterie droite.                      \n        SUPTAB.'OPERATEUR' \n        = Objet de type MOT valant 'PLUS' ou 'MOIN' pour indiquer \n          l'operateur PLUS ou MOIN a utiliser si l'on veut transformer \n          le coude en un tuyauterie droite.  \n\n    7 : Rotation rigidifiante imposee dans le calcul par PASAPAS\n\n    SUPTAB.'ROTATION_RIGIDIFIANTE' \n    = table indicee par entiers 0,1,2...donnant les champs de \n      deplacements due a une rotation rigidifiante de la piece autour \n      d'un point. Cette rotation rigidifiante est imposee dans le calcul\n      par PASAPAS en tant d'un calcul en grand deplacement.       \n                                                                     \n    8 : Cas ou on souhaite donner soi-meme un champ de type Theta      \n                                                                     \n      SUPTAB.'CHAMP_THETA' \n      = Objet de type CHPOINT caracterisant l'avancee virtuelle de la\n        fissure. Attention : dans le cas d'une demi-eprouvette \n        (condition de symetrie dans le plan de fissure), la norme du \n        champ theta doit logiquement varier de 2. \u00e0 0.\n       (au lieu de 1. \u00e0 0. dans le cas d'une \u00e9prouvette compl\u00e8te).\n                                                    \n    9 : Cas ou on souhaite calculer une integrale dans l epaisseur   \n        d une structure en coque (rapport DMT/96-317)                \n                                                                     \n        On utilise pour cela la technique de multicouche, qui         \n        consiste, avant d'appeler la proceduer G_THETA, a :            \n        1) Etablir un modele multicouches (cf MODE CONS) sur un ou   \n           des element(s) proche(s) de la fissure sachant qu'il faut  \n           au moins une couche en peau inferieure, une couche en     \n           peau superieure, une couche en ligne moyenne {ces couches \n           doivent avoir une epaisseur inferieure a 1e-4*(epaisseur  \n           totale de la coque) et donc 2 couches intermediaires.     \n        2) Penser a donner un excentrement et un nom constituant     \n           different a ces couches.                                  \n        3) Assembler le modele multicouches avec le modele du reste  \n           de la structure.                                          \n        4) Effectuer le calcul des contraintes et des deplacements   \n           avec le modele total et le materiau qui en decoule.       \n        Le calcul de l'integrale avec la procedure G_THETA sera       \n        realise sur UN SEUL element en multicouche et pour toutes les\n        couches dans cet element qui ont une epaisseur inferieure a  \n        1e-4*(epaisseur totale de la coque). Un tel element doit     \n        etre designe par l'argument suivant :                        \n                                                                     \n        SUPTAB.'ELEMENT_MULTICOUCHE' \n        = Objet MAILLAGE comportant UN SEUL element modelise en \n          multicouche. Il doit etre a l'interieur de la zone THETA, \n          c'est a dire dans la zone definie par le nombre SUPTAB.'COUCHE'.\n          Il ne doit pas etre trop loin, ni trop proche de la pointe de\n          la fissure. Theoriquement, l'integrale a calculer est \n          independante du choix de l'element pres de la fissure, ce qui\n          est numeriquement verifiable en la determinant sur des elements \n          en multicouche differents. NOTA : Cette technique necessite un\n          maillage tres fin dans la zone de la pointe de la fissure. \n                                                                   \n    10 : Si on souhaite le calcul de criteres de decharge des contraintes\n    \n       SUPTAB.'CALCUL_CRITERE' \n       = LOGIQUE = VRAI si on veut le calcul,\n                 = FAUX si on ne veut pas le calcul.\n         (Valeur par defaut = VRAI)\n         \n    11 : Calcul des facteurs d'intensit\u00e9 des contraintes (DECOUPLAGE)\n    \n        SUPTAB.'METH_AUX'\n        = MOT pour preciser la methode de calcul des champs auxiliaires :\n          1) 'GANA'      pour utiliser les expressions analytiques du\n                         gradient du deplacement et du champ de contraintes\n                         en deformations planes (champs de Westergaard).\n                         Cette methode n'est pas encore disponible dans \n                         le cas ou la fissure est dans une discontinuite\n                         materielle.\n          2) 'UANA'      pour utiliser l'expression analytique du champ de\n                         deplacement en deformations planes ou contraintes\n                         planes. Le gradient du deplacement et le champ de\n                         contraintes sont ensuite deduits en appelant\n                         GRAD et SIGM respectivement.\n                         Cette methode n'est pas encore disponible en 3D.\n          3) 'MECANIQUE' pour resoudre des problemes elementaires en appelant\n                         RESO.\n                         Cette methode n'est actuellement disponible qu'en 3D\n                         avec des elements standards. De plus, celle-ci est\n                         assez couteuse.\n          Lorsque l'indice n'est pas rempli, on utilise pas defaut la methode\n          G-analytique dans tous les cas ou la fissure n'est pas dans une \n          discontinuite materielle, et la methode U-analytique sinon.\n                                                         \n\n    SORTIE :                                                         \n    --------                                                         \n                                                                     \n    Les resultats du calcul correspondant a un champ THETA specifie  \n    par l'objet SUPTAB.'COUCHE' (ou SUPTAB.'CHAMP_THETA' dans le cas   \n    ou on souhaite donner soi-meme un champ de type Theta) sont sauves  \n    de la maniere suivante : \n                                                                     \n                                                                     \n    Dans tous les cas de calcul                                      \n    ---------------------------                                      \n                      \n    SUPTAB.'CHPO_RESULTATS' = Objet decrivant l'evolution du la grandeur\n                              calculee le long du front de fissure.\n                              Son type est variable selon la solution du\n                              probleme traite :\n                              \n                              1) solution provenant de l'operateur RESO \n                                  => CHPOINT\n                              \n                              2) solution provenant de la procedure PASAPAS\n                                  => TABLE de CHPOINT indicee par\n                                     .(numero du pas de calcul)\n\n                              La ou les composantes du ou des CHPOINT sont\n                              d\u00e9termin\u00e9es par l'objectif :\n                              'J' ou 'J_DYNA' => J\n                              'DJ/DA'         => DJDA\n                              'C*' ou 'C*H'   => C*\n                              'DECOUPLAGE'    => KI, KII (et KIII en 3D)\n                              \n    SUPTAB.'RESULTATS' = Objet contenant la valeur numerique du calcul. \n                         Son type est variable selon qu'on est en 2D ou \n                         3D et selon la solution du probleme traite :   \n                                                                     \n                         1) valeur de l'integrale de contour dans le cas\n                            d'une solution provenant de l'operateur RESO\n                            2D        => FLOTTANT                       \n                            3D massif => TABLE indicee par\n                               .(fonction d'interpolation) et           \n                               .'GLOBAL' pour une estimation globale    \n                            3D coque  => TABLE indicee par\n                               .'SUPERI' en peau superieure             \n                               .'INFERI' en peau inferieure             \n                               .'MEDIAN' au plan median et              \n                               .'GLOBAL' pour une estimation globale    \n                                                                     \n                         2) valeur de l'integrale de contour a un       \n                            certain numero du pas de calcul dans le      \n                            cas d'une solution provenant de la \n                            procedure PASAPAS  \n                            2D        => TABLE indicee par\n                               .(numero du pas de calcul)                       \n                            3D massif => TABLE indicees par\n                               .(numero du pas de calcul).(fonction      \n                                d'interpolation) et\n                               .(numero du pas de calcul).'GLOBAL'            \n                            3D coque  => TABLE indicees                 \n                               .(numero du pas de calcul).'SUPERI'              \n                               .(numero du pas de calcul).'INFERI'              \n                               .(numero du pas de calcul).'MEDIAN' et           \n                               .(numero du pas de calcul).'GLOBAL'              \n                                                                     \n                         3) valeur des F.I.C. (facteurs d'intensite des \n                            contraintes) dans le cas de decouplage des  \n                            modes avec une solution provenant de        \n                            l'operateur RESO                            \n                            2D        => TABLE indicee par\n                               .'I'  pour KI et                            \n                               .'II' pour KII                           \n                            3D massif => TABLE indicee par\n                               .'I'  .(fonction d'interpolation) et      \n                               .'I'  .'GLOBAL' pour KI                          \n                               .'II' .(fonction d'interpolation) et     \n                               .'II' .'GLOBAL' pour KII                         \n                               .'III'.(fonction d'interpolation) et    \n                               .'III'.'GLOBAL' pour KIII\n                                                                     \n                         4) valeur des F.I.C. (facteurs d'intensite des \n                            contraintes) a un certain numero du pas de      \n                            calcul dans le cas de decouplage des modes     \n                            avec une solution provenant de la procedure      \n                            PASAPAS                                     \n                            2D        => TABLE indicee par\n                               .'I' .(numero du pas de calcul) pour KI et       \n                               .'II'.(numero du pas de calcul) pour KII         \n                            3D massif => TABLE indicee par\n                               .'I'  .(numero du pas de calcul).(fonction  \n                                 d'interpolation) et \n                               .'I'  .(numero du pas de calcul).'GLOBAL' \n                                 pour KI                    \n                               .'II' .(numero du pas de calcul).(fonction  \n                                 d'interpolation) et \n                               .'II' .(numero du pas de calcul).'GLOBAL' \n                                 pour KII                   \n                               .'III'.(numero du pas de calcul).(fonction  \n                                 d'interpolation\n                                 de fissure) et \n                               .'III'.(numero du pas de calcul).'GLOBAL' \n                                 pour KIII                  \n                                 \n                         Les fonctions d'interpolation utilisees pour indicer\n                         les TABLE dans le cas 3D massif sont celles qui sont\n                         utilisees pour reconstituer l'int\u00e9grale de contour le\n                         long du front de fissure (pour l'instant il s'agit\n                         necessairement des fonctions de forme des segments du\n                         front).\n                                                                     \n    Dans le cas de calcul effectue pas a pas                         \n    ----------------------------------------                         \n                     \n    SUPTAB.'EVOLUTION_RESULTATS' = Objet contenant l'evolution des      \n                                   resultats en fonction du temps.      \n                                   Son type est variable selon la       \n                                   configuration du probleme traite :   \n                                                                     \n                                   1) Evolution de l'integrale de contour  \n                                      2D ou 3D coque => EVOLUTION\n                                              (dans le cas des coques il y a 4 \n                                               SOUS-EVOLUTION : \n                                               SUPE, MEDI, INFE et GLOB)     \n                                      3D massif      => TABLE indicee par       \n                                         .(points au front de fissure)     \n                                         .'GLOBAL' evolution pour une      \n                                           estimation globale              \n                                                                     \n                                   2) Evolution des F.I.C. (facteurs       \n                                      d'intensite de contrainte)           \n                                      2D        => EVOLUTION a 2 SOUS-EVOLUTION\n                                                   KI et KII\n                                      3D massif => TABLE indicee par       \n                                              .(points au front de fissure) et\n                                              .'GLOBAL'\n                                              La table contient des evolutions\n                                              a 3 SOUS-EVOLUTION KI, KII et KIII\n                                                                     \n                                                                     \n    Dans le cas des elements de coque                                \n    ---------------------------------                                \n    \n    SUPTAB.'EPAISSEUR_RESULTATS' = representant l'evolution de la valeur\n                                   des integrales dans l'epaisseur de la\n                                   coque. Son type est variable selon la\n                                   solution du probleme traite : \n        \n                                  1) EVOLUTION dans le cas d'une solution \n                                     provenant de l'operateur RESO        \n                                  2) TABLE indicee par \n                                     .(numero du pas de calcul)   \n                                     dans le cas d'une solution provenant \n                                     de la procedure PASAPAS               \n                                                                     \n                                                                     \n    Dans le cas de calcul elasto-plastique                           \n    -------------------------------------- \n                          \n     En cas de calcul elasto-plastique isotrope ou cinematique, \n     eventuellement thermique :\n                                                                     \n    SUPTAB.'CRIT_DECHA_GLOBAL1' \n    = On calcul un critere de decharge des contraintes defini par \n      (si F = courbe de traction ) :   crit = F(EPSeq)/ SIGeq. \n      - crit = 1. si non-decharge,\n      - et crit > 1. si decharge. \n      SUPTAB.'CRIT_DECHA_GLOBAL1' est une table indicee par les numeros \n      du pas de calcul contenant des reels.                  \n    SUPTAB.'CRIT_DECHA_GLOBAL2' \n    = On calcul un critere de decharge et de changement de direction des\n      contraintes defini par : crit = 2 - SIG:EPSpl/SIGeq_max.EPSE. \n      - crit = 1. si non-decharge et non-changement de direction,\n      - crit > 1. dans le cas contraire. \n      SUPTAB.'CRIT_DECHA_GLOBAL2' est une table indicee par les numeros \n      du pas de calcul contenant des reels.                            \n    SUPTAB.'CRIT_DECHA_LOCAL1' \n    = On calcul un critere de decharge defini par: crit = (delta SIG)/SIG \n      - crit = 0. si non-decharge, \n      - crit > 0. si decharge.\n      SUPTAB.'CRIT_DECHA_LOCAL1' est une table indicee par les numeros \n      du pas de calcul contenant des CHPOINTs.\n    SUPTAB.'CRIT_DECHA_LOCAL2' \n    = On calcul un critere de changement de direction des contraintes\n      defini par: crit = SIG:(delta SIG)/norme(SIG).norme(delta SIG)\n      - crit = 1. si la contrainte evolue proportionnellement et de facon\n        monotone,\n      - crit = -1. si la contrainte evolue proportionnellement mais dans la\n        direction opposee\n      SUPTAB.'CRIT_DECHA_LOCAL2' est une table indicee par les numeros \n      du pas de calcul contenant des CHPOINTs.\n    \n                  \n     Remarque\n     --------\n       \n     La table SUPTAB contient aussi d'autres objets servant aux\n     reprises. C'est cette table qu'il convient de sauver en vue \n     d'une reprise ulterieure du calcul.",
  },
  {
    name: "G_ULTI2D",
    url: "G_ULTI2D",
    documentation:
      "$$$$ G_ULTI2D NOTICE  AF221230  16/11/03    21:15:03     9139           \n                                             DATE     16/11/03\n\n    procedure G_ULTI2D                       Voir aussi : MRCSHELL\n    ----------------  \n   VAL1 = G_ULTI2D TAB1;\n\n\n\nObjet :\n-------\n\n    Fonction pour la determination de la position de l'etat de contrainte S\n    actuel par rapport \u00e0 la surface limite pour les trois couches \n    (externe, interne et intermediaire) selon le modele de MARTI \n    (voir EFFMERTI). La procedure donne en sortie la\n    valeur de controle VAL1. Si VAL1<0. S est en dehors du domaine ultime\n                                VAL1>0. S est \u00e0 l'int\u00e9rieur du domaine ultime\n\nCommentaire :\n-------------\nCette procedure est appell\u00c3\u00a9e par la procedure de calcul des marges pour\nles elements 2D (voiles et plaques) - voir MRCSHELL\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "G_ULTIFR",
    url: "G_ULTIFR",
    documentation:
      "$$$$ G_ULTIFR NOTICE  AF221230  18/04/20    21:15:02     9814           \n                                             DATE     18/04/20\n\n    procedure G_ULTIFR                       Voir aussi : MRCFRAME\n    ----------------  \n   VAL1 = G_ULTIFR TAB1;\n\n\n\nObjet :\n-------\n\n    Fonction pour la determination de la position de l'etat de contrainte S\n    actuel par rapport \u00e0 la surface limite pour les elements frame (TIMO et POUT)\n    \n    Valeur de controle VAL1. Si VAL1<0. S est en dehors du domaine ultime\n                                VAL1>0. S est \u00e0 l'int\u00e9rieur du domaine ultime\n\nCommentaire :\n-------------\nCette procedure est appell\u00c3\u00a9e par la procedure de calcul des marges pour\nles elements 2D (voiles et plaques) - voir MRCSHELL\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "HANN",
    url: "HANN",
    documentation:
      "$$$$ HANN     NOTICE  MB234859  17/10/02    21:15:13     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur HANN                           Voir aussi :\n    --------------  \n    EVOL1 = HANN EVOL2 N1 (COUL1);\n\n\n    objet :\n    _______\n\n    Operateur HANN effectue la moyenne de Hanning du spectre EVOL2\n    suivant le nombre N1 d'iteration de Hanning (application des\n    coefficients de Tuckey 1/4,1/2,1/4).  Le spectre EVOL1 resultant\n    a le meme titre que EVOL2 prefixe par 'HANNING(valeur de N1)', et\n    la meme couleur sauf si celle-ci est indiquee optionellement par\n    COUL1.\n\n    attention:\n    __________\n\n    EVOL1 et (implicitement) EVOL2 ne comportent qu'une seule courbe.\n\n    EVOL2 peut etre detruit sans modifier EVOL1.",
  },
  {
    name: "HASOFER",
    url: "HASOFER",
    documentation:
      "$$$$ HASOFER  NOTICE  CHAT      11/09/12    21:16:26     7124           \n                                             DATE     11/09/12\n                                          \n \n\n  Procedure HASOFER                             Voir aussi :\n    -----------------  \n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CAST3M \n       PAR  F. DUPRAT (LMDC - INSA Toulouse)\n\n\n    ERR1 = HASOFER TAB1   ;\n\n\n\n\n     \n    Objet :\n    _______\n\n    Cette procedure calcule l'indice de fiabilite d'Hasofer-Lind.\n\n\n    Commentaire :\n    _____________\n\n    TAB1  : objet de type TABLE \n\n    ERR1  : indice d'erreur (type FLOTTANT) \n\n    Entree :\n        - nombre de variables                : tab1.nbre_variables\n        - parametres des variables NATAF     : tab1.param_va\n        - matrice de covariance              : tab1.matcov;\n        - coefficient de majoration 1        : tab1.major1\n        - coefficient de majoration 2        : tab1.major2\n        - precision relative du BETA         : tab1.prec\n        - nombre max d'iterations            : tab1.itmax\n        - point de depart P0                 : tab1.depart\n        - parametres du modele mecanique     : tab1.parametres\n\n    Sortie :\n        - point d'arrivee P*                 : tab1.arrivee\n        - indices de fiabilite               : tab1.beta\n        - nombres d'appels a la FEL          : tab1.appels\n        - points P*(iter)                    : tab1.beta_point\n        - valeurs de G(iter)                 : tab1.glim\n        - ecarts |UP*i(iter+1)-UP*i(iter)|   : tab1.ecu\n        - increments DELTA_X(iter)           : tab1.delx\n        - indice d'erreur                    : err1",
  },
  {
    name: "HAUBAN",
    url: "HAUBAN",
    documentation:
      "$$$$ HAUBAN   NOTICE  CHAT      11/09/12    21:16:26     7124           \n                                             DATE     11/09/12\n\n  Procedure HAUBAN                         Voir aussi :\n    ----------------  \n    GEO1 MODL1 CHEL1 =  HAUBAN  P1 P2 ES PL L0 N1 ;\n\n\n    Objet :\n    _______\n\n   Cette procedure fournit le maillage d'un cable accroche a ses\nextremites et soumis a son poids propre. Il fournit egalement le\nmodele associe et le champ de tensions dans le cable.\n\n   Commentaire :\n   _____________\n\n   P1, P2 : les points extremites du cable (type POINT)\n\n   ES     : rigidite membranaire du cable ( type FLOTTANT)\n\n   PL     : poids lineique du cable (type FLOTTANT)\n\n   L0     : longueur a vide du cable (type FLOTTANT)\n\n   N1     : nombre d'elements desire (type ENTIER)\n\n   GEO1   : maillage (type MAILLAGE)\n\n   MODL1  : objet modele (type MMODEL)\n\n   CHEL1  : champ de tensions (type MCHAML)\n\n    Remarque : Le poids du cable est pris selon la direction z\n    ________   dans le sens negatif.",
  },
  {
    name: "HBM",
    url: "HBM",
    documentation:
      "$$$$ HBM      NOTICE  MB234859  17/10/02    21:15:14     9577           \n                                             DATE     17/10/02\n\n\n    Procedure HBM                           Voir aussi : CONTINU\n    ______________                                       HBM_POST  \n                                                                                \n\n    Objet :\n    ______\n\n    HBM (Harmonic Balance Method ou equilibrage harmonique) transforme \n    le probleme dynamique non-lineaire etabli dans le domaine temporel \n    sous la forme du systeme d'equations differentielles (1) de taille N\n    en un systeme d'equations algebriques (2) de taille N*(2H+1)\n    via la decomposition en serie de Fourier (3) des inconnues du \n    probleme en vue d'une resolution par la methode de CONTINUation.\n    \n        ..        .                       .\n      M u(t)  + C u(t) + K u(t)  =  fnl(u,u) + fext(wt)             (1)\n    \n    avec :\n    \n      M    : matrice de masse\n      C    : matrice d'amortissement\n      K    : matrice de raideur\n      fnl  : forces non-lineaires dans le domaine temporel\n      fext : vecteur des forces exterieures dans le domaine temporel\n             de frequence w\n      u    : vecteur inconnue dans le domaine temporel\n\n    \n      Z(w) U  - Fnl(U) - Fext = 0                                   (2) \n    \n    avec :\n    \n      Z(w) = diag(K, Z_1, Z_2, ... Z_H ) \n               \n      Z_k  = [ K - k\u00b2w\u00b2 M      w C    ]\n             [   -wC       K - k\u00b2w\u00b2 M ]\n             \n      U = ( U_0 U_1 V_1 ... U_H _VH ) \n\n    tel que :\n   \n      u(t)  =  U_0  +  \\sum_{k=1..H} cos kwt U_k + sin kwt V_k      (3) \n      \n      \n    Entree :\n    _______\n    \n    TABHBM  =  TABLE\n\n       . 'RIGIDITE_CONSTANTE'         = K\n       . 'AMORTISSEMENT_CONSTANT'     = C\n       . 'MASSE_CONSTANTE'            = M\n       . 'BLOCAGES_MECANIQUES'        = Kblocages\n       . 'RIGIDITE_CENTRIFUGE'\n       . 'CORIOLIS_CONSTANT'\n       . 'N_HARMONIQUE'               = nombre d'harmoniques H\n       . 'RESULTATS'                  = table des resultats attendus\n            . i . 'POINT_MESURE'        exprimes sur ddl temporel\n                . 'COMPOSANTES'     \n                . 'COULEUR'\n                . 'TITRE'\n\n\n    Sortie :\n    _______\n\n    TABHBM \n       . 'RIGIDITE_HBM'         = partie de Z relative a K\n       . 'AMORTISSEMENT_HBM'    = partie de Z relative a C (pour w=1) \n       . 'MASSE_HBM'            = partie de Z relative a M (pour w=1) \n       . 'BLOCAGES_HBM'         = partie de Z relative a Kblocages\n       . 'CENTRIFUGE_HBM'         ...\n       . 'CORIOLIS_HBM'\n\n       . 'RESULTATS_HBM'        = table des resultats attendus\n            . j . 'POINT_MESURE'  exprimes sur ddl frequentiels \n                . 'COMPOSANTES'   \n                . 'COULEUR'\n                . 'TITRE'\n       . 'RESULTATS' \n            . i . 'INDICES_HBM' = liste des indices j associe \n                                  au i^eme resultat\n   \n       . 'COMPOSANTES'\n          . 'DEPLACEMENT'         = composantes temporelles de u (max.6)\n          . 'FORCE'               = composantes temporelles de f (max.6)\n          . 'DEPLACEMENT_HBM'     = composantes frequentielles de U\n          . 'FORCE_HBM'           = composantes frequentielles de F\n          . 'HARM_DEPLACEMENT'    = table des composantes de U \n                                    (par harmonique)\n          . 'HARM_FORCE'          = table des composantes de F \n                                    (par harmonique)\n          \n\n    Correspondance entre inconnues temporelles et frequentielles :\n      +-----------+--------------------------------------+\n      | domaine   |    domaine frequentiel               |\n      | temporel  |   k=0     k=1(cos) k=1(sin)    ...   |\n      +-----------+--------------------------------------+\n      |    UX     |   U1        U4       V4        ...   |   \n      |    UY     |   U2        U5       V5        ...   |   \n      |    UZ     |   U3        U6       V6        ...   |   \n      +-----------+--------------------------------------+\n    ",
  },
  {
    name: "HBM_POST",
    url: "HBM_POST",
    documentation:
      "$$$$ HBM_POST NOTICE  MB234859  17/10/02    21:15:14     9577           \n                                             DATE     17/10/02\n\n\n    Procedure HBM                           Voir aussi : CONTINU\n    ______________                                       HBM  \n                                                                                \n\n    Objet :\n    ______\n\n    Etant donne une table TAB1 decrivant un probleme de vibrations\n    non-lineaires dans le domaine frequentiel par la methode HBM \n    (\"Harmonic Balance Method\" ou equilibrage harmonique) ayant ete \n    resolu par CONTINUation, cette procedure permet le post-traitement\n    (notamment dans le domaine temporel) des resultats contenus dans \n    cette table.\n    \n    LMOT1 (type LISTMOTS) est une liste de mots-cles decrivant la liste\n    des actions de post-traitement a realiser parmi : \n    \n    - MAXI : pour le calcul des EVOLUTIONS max|u(t)| en fonction du \n             parametre de continuation (pseudo-temps)\n             \n    - TEMP : pour le calcul de u(t). Stockage a raison de 1 courbe tous \n             les N pas (ou N = TAB1 . 'PAS_SAUVES')\n                                .\n    - VITE : pour le calcul de u(t). (Analogue a l'option 'TEMP')\n    \n\n          \n      \n    Entree :\n    _______\n    \n    TABHBM  =  TABLE\n    \n    >>> indices presents en sortie de HBM suivi de CONTINU :\n    \n       . 'N_HARMONIQUE'               = nombre d'harmoniques H\n       . 'TEMPS_PROG'                 = liste des pseudo-temps calcules\n       . 'RESULTATS'                  = table des resultats attendus\n            . i . 'COULEUR'\n                . 'TITRE'\n                . 'INDICES_HBM'       = liste des indices j associe \n                                        au i^eme resultat\n                \n       . 'RESULTATS_HBM'        = table des resultats attendus\n            . j . 'RESULTATS'     exprimes sur ddl frequentiels \n            \n                \n    >>> indices a ajouter eventuellement (propre a HBM_POST) :\n                \n       . 'N_PT_POST'            = nombre de points a utiliser pour la \n                                  discretisation temporelle\n                                  (= 2**7 * H  par defaut)\n\n    Sortie :\n    _______\n\n    TABHBM \n       . 'RESULTATS_EVOL'       =  EVOLUTIONs max|u(t)| en fonction du \n                                   parametre de continuation\n       \n       . 'RESULTATS' . i        =  TABLE du i^eme resultat contenant :\n       \n          . 'RESULTATS_TEMPORELS' .  l =  EVOLUTION u(t/T) obtenue pour \n                                          le l^ieme pseudo-temps de la \n                                          liste TEMPS_PROG\n                                                    .\n          . 'RESULTATS_TEMPORELS' . -l =  EVOLUTION u(t/T) obtenue pour \n                                          le l^ieme pseudo-temps de la \n                                          liste TEMPS_PROG\n\n    ",
  },
  {
    name: "HDEB",
    url: "HDEB",
    documentation:
      "$$$$ HDEB     NOTICE  CHAT      11/09/12    21:16:26     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur HDEB                           Voir aussi :\n    --------------  \n   CHP5 = HDEB MODE1 RIG1 CHP1 CHP2  (RIG2 CHP3) (CHP4); \n   \n\n\n    Objet :\n    _______\n\n    L'operateur HDEB cree le champ de debit (flux) a travers chaque\n    face, dans le cas d'une formulation elements finis mixte hybride.\n\n    A partir des charges et des traces de charge, dans le cadre de\n    la resolution des equations  de DARCY.\n\n    A partir de concentrations au centre des elements et des traces\n    de concentrations, dans le cadre d'un calcul couple\n    transport/geochimie.\n\n\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet modele (type MMODEL) decrivant la formulation\n                utilisee. On attend une formulation DARCY (cf. MODE).\n\n       RIG1   : Objet rigidite de sous type DARCY contenant les\n                matrices elementaires de darcy inverses pour les \n                elements hybrides (cf. MHYB).\n\n       CHP1   : Objet de type CHPOINT contenant les concentrations\n               (ou les charges) au centre des elements.  Le support\n               geometrique de ce champ est le MAILLAGE CENTRE de la \n               table domaine. Ce champ peut avoir plusieur composantes.\n               (A la suite d'un calcul Transport Geochimie on \n               considerera les concentrations des aqueux)\n               Dans le cas ou CHP2 a une composante TH, CHP1 doit avoir\n               une composante de nom H. Dans les autres cas le nombre\n               et les noms des composantes doivent etre identiques a\n               ceux de CHP2.\n\n       CHP2   : Objet de type CHPOINT contenant les traces de\n               concentrations ou les traces de charges. Le support\n               geometrique de ce champ est le MAILLAGE FACE de la\n               table domaine. Ce champ doit avoir des composantes dont\n               le nombre  et les noms sont identiques a celles de CHP1\n               ou au moins une composante de nom TH.\n               (A la suite d'un calcul Transport Geochimie on \n               considerera les concentrations des aqueux au centre \n               des faces.)\n\n       RIG2   : Objet rigidite de sous type MASSE contenant les\n                matrices masses elementaires pour les elements\n                hybrides (cf MHYB).\n\n       CHP3   : Objet de type CHPOINT de composantes FX FY (FZ) contenant\n                le vecteur de la force volumique moyenne par element.\n                Le support geometrique de ce champ est le MAILLAGE CENTRE\n                de la table domaine TAB1. Cet argument est optionnel. \n                Il est generalement utile lorsque l'on pose le probleme \n                de DARCY en terme de pression et non plus de charge.\n                Son utilisation necessite la donnee de l'objet RIG2.\n\n\n       CHP4   : Objet de type CHPOINT de support geometrique\n                le MAILLAGE FACE de la table domaine. Flux de\n                la vitesse convective. En presence de cette donnee\n                on prendra en compte le flux convectif.\n\n       CHP5   : Objet resultat de type CHPOINT contenant le debit a\n                travers chaque face. Le support geometrique de ce\n                champ est le MAILLAGE FACE de la table domaine TAB1.\n                Dans le cas ou CHP2 a une composante TH, Le nom de la\n                composante du CHPOIN est FLUX, dans les autres cas\n                les noms des composantes sont ceux de CHP1.\n                Si CHP4 est donne, CHP5 est la somme du flux diffusif\n                et du flux convectif.\n\n     Remarque : Il n'est pas possible d'intervertir l'ordre de lecture\n                des differents CHPOIN.",
  },
  {
    name: "HERI",
    url: "HERI",
    documentation:
      "$$$$ HERI     NOTICE  CHAT      11/09/12    21:16:27     7124           \n                                             DATE     11/09/12\n                                      \n  Operateur HERITE                         Voir aussi :\n    ----------------                             \n      OBJET1%HERITE    OBJET2;\n                                \n\n\n    Objet :\n    _______\n\n    La procedure HERITE agit sur OBJET1, objet de type OBJET. Elle\nlui fait heriter des methodes de l'objet OBJET2 en s'attribuant les  \nmethodes de cet objet.",
  },
  {
    name: "HIST",
    url: "HIST",
    documentation:
      "$$$$ HIST     NOTICE  BP208322  16/06/02    21:15:03     8937           \n                                             DATE     16/06/02\n\n\n\n    Operateur HIST                              voir aussi : @PASHIST\n    --------------\n    \n    +-----------------+\n    |    Syntaxe 1    | \n    +-----------------+\n    \n     LENT1 LENT2  = HIST  LVAL1 LCLAS1 (LVAL2 LCLAS2 ( ... )) ...\n                          ... ('CLAS' 'OCCU') ; \n                          \n    Objet :\n    _______\n                                                                     \n     Etant donne :\n     - les N evenements definis par les m-uplets {X1 X2 ... Xm}    \n       fournis sous la forme de m LISTREELS : LVAL1, ... LVALm \n     - les classes correspondantes LCLAS1 (de dime N1+1), ...\n       LCLASm (de dime Nm+1) de type LISTREEL egalement,\n     L'operateur 'HIST' renvoie le LISTENTI correspondant :    \n     - a la classe de chaque evenement (option 'CLAS') --> LENT1\n     - au nombre d'occurences des evenements dans chacune des\n       classes (option 'OCCU')  --> LENT2                                       \n     Par defaut (aucune option), on renvoie les 2 LISTENTI.                     \n                                                                     \n    Commentaires :\n    ______________\n                                                                     \n     On numerote de maniere globale les classes de telle sorte que \n     la k^eme classe (numero global) renvoie aux classes k1, k2 ...\n     avec : k = k1 + N1*(k2-1) + N1*N2*(k3-1) + ...\n     La classe 0 est retournee si l'evenement est hors des limites des \n     classes.\n     Les valeurs des classes doivent etre fournies dans un ordre  \n     strictement croissant.\n                                                                     \n    Exemple :                                                                   \n    _________\n                                                                     \n     Soit la suite de 4 evenements : \n       {0.2 4} {0.1 14} {0.5 10} {0.4 1} \n     definie par :\n       x1 = prog  0.2   0.1  1.1   0.5  0.4 ;\n       x2 = prog  4.0  14.0  9.0  10.0  1.0 ;\n     et les classes associees :\n       y1 = prog  0.  0.5  1. ;\n       y2 = prog  0.  5.  10.  15.  20.; \n                                                                     \n     la numerotation globale des classes est :\n           0      0.5     1.0\n         0 +-------+-------+----->y1\n           |   1   |   2   |\n         5 +-------+-------+\n           |   3   |   4   |\n        10 +-------+-------+\n           |   5   |   6   |\n        15 +-------+-------+\n           |   7   |   8   |\n        20 +-------+-------+\n           |\n        y2 v\n\n     lclass loccu = HIST x1 y1 x2 y2 'CLAS' 'OCCU';  \n     -->  lclass contient la suite de 5 entiers : \n            1  5  6  1\n     -->  loccu contient la suite de 8 entiers : \n            2  0  0  0  1  1  0  0\n\n    +-----------------+\n    |    Syntaxe 2    | \n    +-----------------+\n\n    EV1      = 'HIST' (COUL) MOD1 CHAM1 ('ABS') LRE1 | (MOT1)  | ;\n                                                     | (LMOT1) |\n\n    Objet :\n    _______\n\n    L'operateur HIST determine la densite de distribution des valeurs\nd'un champ par elements sur son maillage. Le resultat est un objet de\ntype EVOLUTION, dont les courbes sont de type HISTogramme, ce qui\npermet leur trace sous forme d'histogrammes.\n\n    Commentaire :\n    _____________\n\n    COUL   : couleur de(s) la courbe(s) en sortie (de type MOT) ;\n\n    MOD1   : modele (de type MMODEL) ;\n\n    CHAM1  : champ par elements (de type MCHAML) ;\n\n    'ABS'  : mot-cle indiquant que l'on prend la valeur absolue des\n             valeurs de CHAM1 ;\n\n    LRE1   : intervalles d'echantillonnage des valeurs de CHAM1 (de\n             type LISTREEL) ;\n\n    MOT1   : nom de la composante de CHAM1 a traiter (de type MOT) ;\n\n    LMOT1  : nom de(s) la composante(s) de CHAM1 a traiter (de type\n             LISTMOTS).",
  },
  {
    name: "HOMO",
    url: "HOMO",
    documentation:
      "$$$$ HOMO     NOTICE  GOUNAND   13/01/17    21:15:01     7668           \n                                             DATE     13/01/17\n\n    Operateur HOMOTHETIE                     Voir aussi : AFFI\n    --------------------  \n    GEO1 = GEO2  HOMO  RAPP1 POIN1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur HOMOTHETIE construit un objet par homothetie\n\n\n    Commentaire :\n    _____________\n\n    GEO2    : objet initial (type MAILLAGE ou POINT)\n\n    RAPP1   : rapport de l'homothetie (type FLOTTANT)\n\n    POIN1   : centre de l'homothetie (type POINT)\n\n    GEO1    : objet resultat (type MAILLAGE ou POINT)\n\n    Remarque :\n    __________\n\n    GEO1 GEO2 ... GEOn   HOMO  RAPP1 POIN1;\n\n    L'operation est effectuee sur les n objets simultanement et a n\n    resultats. Les n objets doivent \u00eatre, soit tous de type MAILLAGE,\n    soit tous de type POINT.\n\n    Exemple :\n    ---------\n        NC1 NC2 NC3 NC4 NS  =  C1 C2 C3 C4 S HOMO 0.3 (10 0) ;",
  },
  {
    name: "HOOK",
    url: "HOOK",
    documentation:
      "$$$$ HOOK     NOTICE  FD218221  17/04/24    21:15:09     9417           \n                                             DATE     17/04/24\n                                             \n    Operateur HOOKE                          Voir aussi : HOTA MATR\n    ---------------                            \n      HOO1  =  HOOKE  MODL1  CAR1  (VAR1) ('REFE')  ;\n\n\n    Objet :\n    _______\n\n    L'operateur HOOKE construit, a partir du champ de proprietes\n    materielles (  et  eventuellement,  de  caracteristiques  geome-\n    triques ), le champ de matrice de HOOKE.\n\n\n      Commentaire:\n      ____________\n\n\n      MODL1  :  Objet modele (type MMODEL)\n\n      CAR1  :  Champ par element de caracteristiques geometriques et\n               materielles (type MCHAML, sous-type CARACTERISTIQUES)\n\n      VAR1  : champ de variables internes (type MCHAML, sous-type\n              VARIABLES INTERNES) facultatif\n\n      HOO1  :  Champ par element de matrices de Hooke (type MCHAML,\n               sous-type MATRICE DE HOOKE)\n\n\n\n  Remarques :\n  ___________\n \n  Dans le cas des materiaux endommageables et visco-endommageables,\n  et dans le cas ou le champ de variables internes est donne, la \n  matrice de HOOKE calculee tient compte de l'endommagement. Ceci est\n  valable pour les modeles suivants :\n  'PLASTIQUE' 'ENDOMMAGEABLE'\n  'VISCOPLASTIQUE' 'VISCODOMMAGE'\n  'ENDOMMAGEMENT' 'MAZARS'\n  'ENDOMMAGEMENT' 'MVM'\n  'PLASTIQUE_ENDOM' 'ROUSSELIER'\n  'PLASTIQUE_ENDOM' 'GURSON2'\n  'FLUAGE' 'CERAMIQUE'\n\n  CAR1 n'est necessaire que pour des types  d'element dont la geometrie\n  complete ne peut pas etre deduite du maillage, comme par exemple, les\n  elements poutres, tuyaux, coques.\n\n  Pour les elements de type coque mince excentres, on peut indiquer\n  le mot 'REFE' pour obtenir les matrices de Hooke associees a des\n  grandeurs (efforts et deformations) definies au niveau de la surface\n  de reference. Sinon, les matrices correspondent a des grandeurs\n  definies au niveau de la surface excentree.\n\n  Dans le cas de l'element DST orthotrope HOO1 contient egalement les\n  cosinus-directeurs des axes d'orthotropie par rapport au repere\n  local de l'element.",
  },
  {
    name: "HOTA",
    url: "HOTA",
    documentation:
      "$$$$ HOTA     NOTICE  CHAT      11/09/12    21:16:28     7124           \n                                             DATE     11/09/12\n\n    Operateur HOTANGE                        Voir aussi : HOOK\n    -----------------  \n      CHEL1 = HOTANGE  MODL1 SIG1 VAR1 MAT1 ( 'PREC' FLOT1 ) \n                                            ( 'DT'   FLOT2 )  ;\n\n\n    Objet :\n    _______\n\n    L'operateur HOTANGE calcule la matrice de Hooke tangente, pour\ndes etats de contraintes et de variables internes donnes.\n\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele (type MMODEL)\n\n      SIG1  : champ de contraintes (type MCHAML, sous-type CONTRAINTES)\n\n      VAR1  : champ de variables internes (type MCHAML, sous-type\n              VARIABLES INTERNES)\n\n      MAT1  : champ de proprietes materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n      'PREC': mot cle indiquant que l'on donne la precision\n     \n      FLOT1 : precision avec laquelle on cherche si un etat de\n              contraintes est plastique ou non (1.E-3 par defaut).\n\n      'DT  ': mot cle indiquant que l'on donne le pas de temps\n\n      FLOT2 : pas de temps servant a calculer la matrice tangente. \n              Cette donnee n'est necessaire que pour les modeles\n              visqueux\n\n      CHEL1 : champ de matrices de HOOKE (type MCHAML, sous-type\n              MATRICE DE HOOKE)\n     \n      Il est necessaire de respecter l'ordre ci dessus pour les\n      CHAML arguments.",
  },
  {
    name: "HP_PRO",
    url: "HP_PRO",
    documentation:
      "$$$$ HP_PRO   NOTICE  CHAT      11/09/12    21:16:28     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure HP_PRO                         Voir aussi : DARCYSAT\n    ----------------                   \n    CHPO1  = HP_PRO  CHPO2 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure effectue le calcul de la pression     (chpo1)\n  a partir de la charge e (chpo2)",
  },
  {
    name: "HRAYO",
    url: "HRAYO",
    documentation:
      "$$$$ HRAYO    NOTICE  AM        14/04/17    21:15:02     8000           \n                                             DATE     14/04/17\n\n  Procedure HRAYO                         Voir aussi :\n     ---------------  \n  CHAM1 = HRAYO MCV MODL1 MATE1 T1 (MODL2)(MATE2) T2 (GEO1) (FLOT1);\n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n\n     Calcule un coefficient d'echange linearise pour le traitement\n des echanges par rayonnement avec un milieu infini ou face a face\n entre deux frontieres.\n\n\n     Commentaire :                                                       \n     _____________                                                       \n                                                                         \n     MCV   : modele de convection (type MMODEL)\n\n     MODL1 : modele de rayonnement defini sur la frontiere 1.\n             (type MMODEL)\n\n     MATE1 : champ d'emissivite defini sur la frontiere 1\n             (type MCHAML)\n\n     T1    : temperature definie sur la frontiere 1\n             (type CHPOINT)\n\n     MODL2 : modele de rayonnement defini sur la frontiere 2.\n\n     MATE2 : champ d'emissivite defini sur la frontiere 2\n             (type MCHAML)\n\n     T2    : temperature definie sur la frontiere 2\n             (type CHPOINT)\n\n     GEO1  : geometrie definissant les relations entre les supports\n             des champs T1 et T2\n             (type MAILLAGE)\n\n     FLOT1 : constante de Stefan-Boltzmann (par defaut 5.67e-8 Wm-2K-4)\n             (type FLOTTANT)\n                                                                         \n     CHAM1 : coefficient d'echange linearise\n             (type MCHAML)\n\n\n     Remarques :                                                         \n     ___________                                                         \n                                                                         \n  Dans le cas du rayonnement face a face, le modele MCV est defini\n  sur un objet maillage cree a partir des deux frontieres supposees\n  homologues au moyen des operateurs RACC ou LIAI. La frontiere 1\n  correspond au premier argument de ces operateurs et la frontiere\n  2 au second.\n\n  Dans le cas du rayonnement avec un milieu infini, les objets\n  MODL2 MATE2 ne sont pas utilises. L'objet T2 est defini sur la\n  frontiere 1 et correspond aux caract\u00e9ristiques du milieu infini.",
  },
  {
    name: "HRCAV",
    url: "HRCAV",
    documentation:
      "$$$$ HRCAV    NOTICE  CHAT      11/09/12    21:16:28     7124           \n                                             DATE     11/09/12\n\n     Procedure HRCAV                         Voir aussi : RAYE FFOR HRAYO\n     ---------------  \n  CHAM1 = HRCAV MRT EMIS TE TRAD (FLOT1) ;\n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n\n     Calcule un coefficient d'echange linearise pour le traitement\n du rayonnement en milieu transparent dans une cavite.\n\n\n     Commentaire :                                                       \n     _____________                                                       \n                                                                         \n     MRT   : modele de rayonnement (type MMODEL)\n\n     EMIS  : champ d'emissivite defini le modele de rayonnement\n             (type MCHAML)\n\n     TE    : temperature definie sur la cavite\n             (type MCHAML)\n\n     TRAD  : temperature resultat de l'operateur RAYE, fonction\n             des facteurs de forme, du champ d'emissivite, et\n             du champ de temperature TE correspondant a une\n             iteration donnee (champ precedent)\n             (type MCHAML)\n\n     FLOT1 : constante de Stefan-Boltzmann (par defaut 5.67e-8 Wm-2K-4)\n             (type FLOTTANT)\n\n     CHAM1 : coefficient d'echange (type MCHAML)",
  },
  {
    name: "HTCTRAN",
    url: "HTCTRAN",
    documentation:
      "$$$$ HTCTRAN  NOTICE  AM        11/09/13    21:15:03     7126           \n                                             DATE     11/09/13\n                                                                         \n  Procedure HTCTRAN                        Voir aussi :\n    -----------------       \n\n    HTCTRAN  NPAS NSAUV NITER DT MOD1 TAB1 ;                            \n                                                                         \n                                                                         \n    Objet :                                                             \n    _______                                                             \n                                                                        \n                                                                        \n  Cette procedure permet d'effectuer un calcul de transferts            \n  thermiques et hydriques dans un bloc de beton bidimensionnel ou\n  axisymetrique ou tridimensionnel, soumis a des gradients de\n  temperature.\n                                                                        \n                                                                        \n   Commentaire :                                                        \n   _____________                                                        \n                                                                        \n                                                                        \n NPAS  :    nombre de pas a calculer (type ENTIER)                      \n                                                                        \n NSAUV :    nombre definissant la frequence de sauvegarde des resultats \n            dans la table TAB1 (type ENTIER)                            \n                                                                        \n NITER :    nombre d'iterations a chaque pas (type ENTIER)              \n                                                                        \n DT    :    valeur du pas de temps en secondes (type FLOTTANT)          \n                                                                        \n MOD1  :    modele thermique (type MMODEL)                              \n                                                                        \n TAB1  :    table utilisee en entree et en sortie (type TABLE)          \n                                                                        \n                                                                        \nEn entree, TAB1 sert a definir les options et les parametres du calcul. \nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres)  \ndont voici la liste :\n                                                  \n TEMPERATURE_INITIALE   : temperature initiale en degres Celsius        \n                          (type FLOTTANT)                               \n                                                                        \n PRESSION_INITIALE      : pression initiale en MPa. Elle est aussi \n                          utilisee pour determiner la teneur en eau\n                          initiale (type FLOTTANT)                      \n                                                                        \n (LAMBDA)               : constante utilisee dans la methode            \n                          d'integration temporelle (0.55 par defaut)\n \n (GAMMA)                : constante utilisee pour l'estimation de la \n                          temperature et de la pression au debut \n                          du pas (1. par defaut)\n\n (EPSILON)              : constante pour le calcul de derivees\n                          (1.E-8 par defaut)\n \n (ERPM)                 : valeur de la precision pour la pression\n                          (1.E-4 par defaut) \n \n (ERTM)                 : valeur de la precision pour la temperature\n                          (1.E-4 par defaut)\n \n (C)                    : teneur en ciment initiale en Kg/m3            \n                          (300. par defaut) (type FLOTTANT)             \n\n (F_STE)                : coefficient stochiometrique\n                          (0.24 par defaut) (type FLOTTANT)\n\n (F_INV)                : coefficient d'avancement de l'hydratation\n                          (0.95 par defaut) (type FLOTTANT)\n \n (W1)                   : teneur en eau a saturation du beton a 25\u00b0C \n                          en Kg/m3 (100. par defaut) (type FLOTTANT) \n\n (A0)                   : coefficient de permeabilite initiale en m/s           \n                          (1.E-13 par defaut ) (type FLOTTANT)          \n\n (DEN_SEC)              : densite du beton sec en Kg/m3\n                          (2400. par defaut) (type FLOTTANT)\n\n (CCP_SEC)              : chaleur massique du beton sec en J/kg/C\n                          (880. par defaut) (type FLOTTANT)\n \n (K0_SEC)               : premier coefficient intervenant dans le calcul de\n                          la conductivite thermique du beton sec en W/(m\u00b0C)\n                          (1.92 par defaut ) (type FLOTTANT)\n \n (K1_SEC)               : second coefficient intervenant dans le calcul de\n                          la conductivite thermique du beton sec en W/(m\u00b0CxC)\n                          (-0.00125 par defaut ) (type FLOTTANT)\n\n (EWD)                  : evolution de l'eau chimiquement liee \n                          relachee avec la temperature en Kg/m3 \n                          (McGill par defaut) (type EVOLUTION)     \n\n (CAD)                  : chaleur de dessication du beton en J/Kg\n                          (0.2328E6 par defaut) (type FLOTTANT) \n\n (ALFA)                 : coefficient de dilatation thermique lineique  \n                          du beton en /\u00b0C (9.E-6 par defaut)            \n\n (E0)                   : module de Young du beton a 25\u00b0C en MPa                \n                          (35000. par defaut) (type FLOTTANT)         \n\n (EE0T)                 : evolution de E(T)/E0 avec la temperature\n                          (module de Young normalise du beton) \n                          (DTU P 92 701 par defaut) (type EVOLUTION)         \n\n (NU)                   : coefficient de Poisson du beton (0.18 par defaut)    \n                          (type FLOTTANT)                             \n\n (FLG)                  : indice de niveau d'impressions de controle, de 0 a 5\n                          (0 par defaut) (type ENTIER)\n\n FRONTIERES_PRESSION    : table contenant les informations relatives    \n                          aux frontieres echangeant de la vapeur        \n                          (type TABLE)                                  \n                          Elle contient des tables (indicees par les    \n                          nombres entiers consecutifs : 1, 2, ...)      \n                          correspondant chacune a une frontiere         \n                          echangeant de la vapeur.                      \n                          Chacune de ces tables contient les objets     \n                          suivants :                                    \n                                                                        \n                         'MAILLAGE'   : maillage de la frontiere        \n                          (type MAILLAGE)                               \n                                                                        \n                         'CODIRXR'    : cosinus directeur de la normale \n                          exterieure a la frontiere, par rapport a      \n                          l'axe x ou r (type FLOTTANT ou CHPOINT)               \n                                                                        \n                         'CODIRYZ'    : cosinus directeur de la normale \n                          exterieure a la frontiere, par rapport a      \n                          l'axe y ou z (type FLOTTANT ou CHPOINT)\n                                                                        \n                         'CODIRZZ'    : dans le cas tridimensionnel,\n                          cosinus directeur de la normale\n                          exterieure a la frontiere, par rapport a      \n                          l'axe z (type FLOTTANT ou CHPOINT)\n\n CONDUCTIVITE_THERMIQUE : matrice de conductivite liee a la convection \n                          thermique et aux blocages thermiques (type RIGIDITE).\n\n CONVECTION_THERMIQUE   : definition du chargement en fonction du \n                          parametre d'evolution dans le cas de   \n                          convection thermique (type CHARGEMENT).\n\n FLUX_THERMIQUE         : definition du chargement en fonction du \n                          parametre d'evolution dans le cas de flux\n                          thermique impose (type CHARGEMENT).\n                   \n CONDUCTIVITE_HYDRAULIQUE: matrice de conductivite liee a la convection \n                           hydraulique et les blocages en pression \n                           (type RIGIDITE).\n \n CONVECTION_HYDRAULIQUE : definition du chargement en fonction du \n                          parametre d'evolution dans le cas de  \n                          convection hydraulique (type CHARGEMENT).\n\n FLUX_HYDRAULIQUE       : definition du chargement en fonction du \n                          parametre d'evolution dans le cas de flux\n                          hydraulique impose (type CHARGEMENT).                 \n                                                                         \nEn sortie, TAB1 permet de retrouver les resultats. Ceux-ci sont mis     \ndans une table a l'indice RESULTATS de TAB1. Cette table est indicee    \npar des entiers (1 2 ... N) correspondant aux numeros de sauvegarde     \ndes resultats. A chaque indice est associe une table contenant les      \ninformations suivantes :                                                \n                                                                         \n                                                                         \n   indice             type objet      commentaires                     \n                        pointe                                          \n                                                                         \n   INSTANT             FLOTTANT       instant sauvegarde                \n                                                                         \n   TEMPERATURE         CHPOINT        champ de temperature              \n                                                                         \n   PRESSION            CHPOINT        champ de presion                  \n                                                                         \n   HUMIDITE_RELATIVE   CHPOINT        champ d'humidite relative         \n                                                                         \n   EAU_LIBRE           CHPOINT        champ de teneur en eau libre\n   \n   EAU_LIEE            CHPOINT        champ d'eau liee relachee\n\n   MASSE_FLUX          CHPOINT        champ de flux de masse \n                                                                         \n   MASSE_PERDUE        FLOTTANT       masse d'eau perdue par le beton  \n\n   MASSE_RELACHE       FLOTTANT       masse d'eau liee relachee   \n                                                                         \n                                                                         \n       Exemple : pour lister le CHPOINT de pression du 5-eme pas        \n                 sauvegarde, il faudra indiquer :                       \n                                                                         \n                IPAS=5 ;                                                \n                LIST ( TAB1.'RESULTATS'. IPAS .'PRESSION' ) ;           \n                                                                         \n                                                                         \nRemarque :                                                              \n--------                                                                \n                                                                         \nA l'issue d'un calcul effectue avec HTCTRAN, il est possible de         \nle continuer en utilisant la meme table TAB1. Le calcul reprendra       \na partir du dernier instant sauvegarde.                                 \nTemperature de demarrage a 25\u00b0C.\n\n$$$$\n \n \n ",
  },
  {
    name: "HTC_CHBW",
    url: "HTC_CHBW",
    documentation:
      "$$$$ HTC_CHBW NOTICE  CHAT      11/09/12    21:16:29     7124           \n                                             DATE     11/09/12\n\n  procedure HTC_CHBW                       Voir aussi :\n    ------------------  \n      Cette procedure est appelee par les procedures HTCTRAN\n      pour le calcul de l'eau liee.  ",
  },
  {
    name: "HTC_PER",
    url: "HTC_PER",
    documentation:
      "$$$$ HTC_PER  NOTICE  CHAT      11/09/12    21:16:29     7124           \n                                             DATE     11/09/12\n\n  procedure HTC_PER                        Voir aussi :\n    -----------------  \n\n      Cette procedure est appelee par la procedure HTCTRAN\n      pour le calcul de le cefficient de permeabilite.  ",
  },
  {
    name: "HTC_WTR",
    url: "HTC_WTR",
    documentation:
      "$$$$ HTC_WTR  NOTICE  CHAT      11/09/12    21:16:29     7124           \n                                             DATE     11/09/12\n\n  procedure HTC_WTR                        Voir aussi :\n    -----------------  \n\n      Cette procedure est appelee par les procedures HTCTRAN\n      et HTC_WWW  pour le calcul de les proprietees de l'eau.  ",
  },
  {
    name: "HTC_WWW",
    url: "HTC_WWW",
    documentation:
      "$$$$ HTC_WWW  NOTICE  CHAT      11/09/12    21:16:30     7124           \n                                             DATE     11/09/12\n\n  procedure HTC_WWW                        Voir aussi :\n    -----------------  \n\n      Cette procedure est appelee par la procedure HTCTRAN\n      pour le calcul de la teneur en eau du beton.  ",
  },
  {
    name: "HT_PRO",
    url: "HT_PRO",
    documentation:
      "$$$$ HT_PRO   NOTICE  FANDEUR   13/03/15    21:15:00     7712           \n                                             DATE     13/03/15\n\n                                         Voir aussi : DARCYSAT\n                                                      KR_PRO  \n    ----------------\n\n    CHPO2 CHPO3 CHPO4 = HT_PRO  TAB1 (CHPO1) ;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule la saturation, la teneur en eau et la \n    capacite en fonction de la pression d'eau P.\n    Cette procedure est utilisee a partir de la procedure DARCYSAT\n    Elle correspond a une loi definie par le soustype de TAB1 :\n    - VAN_GENUCHTEN\n       Saturation reduite dans [0,1] : S = [1 + (-beta.Pw)**n]**(-m)\n    - EXPONENTIELLE\n       S = C / ([exp(-beta.Pw)]**N + C - 1)\n    - LOGARITHMIQUE\n       (-beta.Pw) tronque a 1 quand inferieur a 1.\n       S = C / ([ln(-beta.Pw)]**N + C)\n\n    avec S = (TH2O - teta_r) / (poros - teta_r)\n\n\n    Commentaires :\n    --------------\n\n    TAB1  : table contenant les caracteristiques physiques, ayant\n            pour indices\n            BHETA, NEXP, MEXP : coefficients de la loi VAN_GENUCHTEN   \n                                (attention a l'unite de beta)\n            BHETA, COEF_N, COEF_C : coef pour la loi log ou exp.\n            PORO              : porosite (s. d.), poros\n                                (FLOTTANT ou CHAMP-POINT centre,\n                                 comp 'SCAL')\n            TERESIDU          : teneur en eau residuelle (s. d.), teta_r\n                                (FLOTTANT ou CHAMP-POINT centre,\n                                 comp 'SCAL')\n\n    CHPO1 : Pression d'eau (negative en non sature)\n            seulement pour les lois exponentielle et logarithme.\n\n    CHPO2 : saturation reduite, S\n            (CHAMP-POINT support de Pw)\n\n    CHPO3 : teneur en eau, TH2O\n            (CHAMP-POINT support de Pw)\n\n    CHPO4 : capacite calculee analytiquement\n            (CHAMP-POINT support de Pw)\n\n\n    Remarque :\n    ----------\n     Si le champ CHPO1 est absent, on teste les arguments de la procedure \n     et on ne fait pas de calculs.",
  },
  {
    name: "HVIT",
    url: "HVIT",
    documentation:
      "$$$$ HVIT     NOTICE  CHAT      11/09/12    21:16:30     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur HVIT                           Voir aussi :\n    --------------  \n    CHP2 = HVIT MODE1  CHP1  ;\n\n\n    Objet :\n    _______\n\n    L'operateur HVIT cree le champ de vitesse au centre de chaque\nelements. Ce champ est calcule a partir des debits aux faces dans\nle cadre de la resolution des equations de DARCY par une methode\nd'elements finis mixtes hybrides.\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet modele (type MMODEL) decrivant la formulation\n                utilisee. On attend une formulation DARCY (cf. MODE).\n\n       CHP1   : Objet de type CHPOINT contenant le debit a travers\n                chaque face. Le support geometrique de ce champ est\n                le maillage centre des FACEs . Le nom de\n                la composante du CHPOINT est FLUX (cf. HDEB).\n\n       CHP2   : Objet resultat de type CHPOINT contenant la vitesse au\n                centre de chaque element. Le support geometrique de ce\n                champ est le MAILLAGE CENTRE des elements.\n                Les noms des composantes du CHPOINT sont VX et VY.",
  },
  {
    name: "HYBP",
    url: "HYBP",
    documentation:
      "$$$$ HYBP     NOTICE  CHAT      11/09/12    21:16:30     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur HYBP                           Voir aussi :\n    --------------  \n    CHP4 = HYBP MODE1 RIG1 CHP1 (TAB2) (CHP2) (RIG2 CHP3) ;\n\n\n    Objet :\n    _______\n\n    L'operateur HYBP cree le champ de charge a partir des traces\nde charge dans le cadre de la resolution des equations de DARCY\npar une methode d'elements finis mixtes hybrides.\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet modele (type MMODEL) decrivant la formulation\n                utilisee. On attend une formulation DARCY (cf MODE).\n\n       RIG1   : Objet rigidite de sous type DARCY contenant les\n                matrices de darcy elementaires inverses pour les elements\n                hybrides (cf MHYB).\n\n       CHP1   : Objet CHPOINT solution du systeme matriciel en trace\n                de charge. Le support geometrique de ce champ est\n                le MAILLAGE FACE de la table domaine TAB1. Le CHPOINT\n                doit avoir au moins une composante de nom TH.\n\n       TAB2   : Objet table de sous type DARCY_TRANSITOIRE contenant\n                les conditions initiales et les coefficients pour le\n                schema d'integration en temps dans le cas transitoire\n                (cf procedure DARCYTRA).\n                !! En cas de resolution transitoire les forces volumiques\n               (arguments  RIG2 et CHP3) ne sont pas encore disponibles !!\n\n       CHP2   : Objet de type CHPOINT contenant l'integrale du terme\n                source en chaque element. Le support geometrique de\n                ce champ est le MAILLAGE CENTRE de la table domaine\n                TAB1. Le nom de la composante du CHPOINT est SOUR.\n                Cet argument est optionnel. Il n'a pas de raison\n                d'etre si la source est nulle.\n\n       RIG2   : Objet rigidite de sous type MASSE contenant les\n                matrices masses elementaires pour les elements\n                hybrides (cf MHYB).\n\n       CHP3   : Objet de type CHPOINT de composantes FX FY (FZ) contenant\n                le vecteur de la force volumique moyenne par element.\n                Le support geometrique de ce champ est le MAILLAGE CENTRE\n                de la table domaine TAB1. Cet argument est optionnel. \n                Il est generalement utile lorsque l'on pose le probleme \n                de DARCY en terme de pression et non plus de charge.\n                Son utilisation necessite la donnee de l'objet RIG2.\n\n       CHP4   : Objet resultat de type CHPOINT contenant la charge\n                moyenne par element. Le support geometrique de ce\n                champ est le MAILLAGE CENTRE la table domaine TAB1.\n                Le nom de la composante du CHPOINT est H.",
  },
  {
    name: "H_B",
    url: "H_B",
    documentation:
      "$$$$ H_B      NOTICE  CHAT      11/09/12    21:16:26     7124           \n                                             DATE     11/09/12\n\n  Procedure H_B                        Voir aussi :\n        -------------  \n            EV1 = H_B   FLOT1 (EVO1)  (FLOT2) ;\n            \n\n\n\n        Objet  : \n        --------\n\n       En magnetostatique  2D potentiel vecteur ou 3D  potentiel scalaire \n       rend la courbe mu(h) ou 1/(mu(b)  suivant  que l'on est en \n       potentiel scalaire (3D) ou en potentiel vecteur (2D)\n\n\n       Commentaire :\n       -------------\n\n       FLOT1   permeabilite du vide dans unite coherente \n       EVO1    evolution courbe b(h) du materiau H en abscisse et\n               B en ordonee\n               si absent une courbe standard est fournie.\n       FLOT2   facteur de compacite      1. par defaut. \n\n       En sortie :\n\n       EV1   evolution ,dependance de mu par rapport a H ou B \n    \n  ",
  },
  {
    name: "IDBHT",
    url: "IDBHT",
    documentation:
      "$$$$ IDBHT    NOTICE  CHAT      11/09/12    21:16:31     7124           \n                                             DATE     11/09/12\n\n  Procedure  IDBHT                          Voir aussi :\n    ------------------                                   \n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure NONLIN\n   pour le beton a haute temperature.",
  },
  {
    name: "IDENTI",
    url: "IDENTI",
    documentation:
      "$$$$ IDENTI   NOTICE  BR232186  12/07/31    21:15:00     7455           \n                                             DATE     12/07/31\n\n  Procedure  IDENTI                         Voir aussi :\n    ----------------  \n           Y1 Y2 ... Yn = IDENTI NOMMOD X1 X2 ... Xm ;\n           \n\n   Objet :\n   _______\n\n   La procedure IDENTI permet une aide a l'identification de certains modeles\n   de comportement.\n\n\n\n   Commentaire :\n   _____________\n\n   NOMMOD : Nom du modele ( type MOT )  |  MAZARS\n                                        |  ...\n                                        |\n\n   X1 .. Xm  : valeurs permettant l'identification des parametres\n\n   Y1 .. Yn  : parametres identifies\n\n\n\n    a)   Cas du modele MAZARS :\n    ___________________________\n\nm= 7\n   X1  :    MODULE D\"ELASTICITE INITIAL\n   X2  :    COEFFICIANT DE POISSON\n   X3  :    CONTRAINTE LIMITE EN TRACTION\n   X4  :    CONTRAINTE RESIDUELLE EN TRACTION\n   X5  :    INDICE DE FRAGILITE COMPRIS ENTRE 0 ET 1\n   X6  :    CONTRAINTE LIMITE EN COMPRESSION\n   X7  :    LA DEFORMATION CORRESPONDANT A CETTE LIMITE\n\nn=5\n   Y1  :    PARAMETRE KTR0\n   Y2  :              ATRA\n   Y3  :              BTRA\n   Y4  :              ACOM\n   Y5  :              BCOM\n\n   b)  Cas du modele de MAXWELL\n   ___________________________\n\nsi identification de la courbe de fluage de l'EUROCODE 2 ( courbe par defaut)\nm = 8\n X1   UNITE =  unite de calcul (seconde, jour, annee)\n X2   TMAX = duree maximale du calcul\n X3   NB = nombre de branches visqueuses du modele de Maxwell\n          (la branche elastique porte le numero 0)\n X4   EUROCODE\n X5   RM = rayon moyen de la piece en metres\n X6   ROH = pourcentage d'humidite (0. < roh < 100.)\n X7   S = coefficient relatif a la nature du ciment\n X8   FCM = resistance moyenne en compression [MPa]\n\n\nsi identification de la courbe de fluage du BPEL\nm = 7\n X1   UNITE =  unite de calcul (seconde, jour, annee)\n X2   TMAX = duree maximale du calcul\n X3   NB = nombre de branches visqueuses du modele de Maxwell\n          (la branche elastique porte le numero 0)\n X4   BPEL\n X5   RM = rayon moyen de la piece en metres\n X6   ROH = pourcentage d'humidite (0. < roh < 100.)\n X7   FC28 = resistance moyenne en compression  a 28 jours [MPa]\n\nn=3 \n   Y1 : evolution contenant le module d'Young du materiau en Pa\n        en fonction du temps en jours\n   Y2 : table contenant les modules de chaque branche du modele\n        en Pa en fonction du temps en jours\n   Y3 : table contenant les temps de relaxation de chaque\n        branche du modele, en jours\nremarques : verifier en sortie que les courbes d'evolutions \ndonnees dans Y2 ne varient pas trop. Sinon risque de problemes\nnumeriques\n\nsi identification de la courbe de fluage LCPC\nm = 7\n X1   UNITE =  unite de calcul (seconde, jour, annee)\n X2   TMAX = duree maximale du calcul\n X3   NB = nombre de branches visqueuses du modele de Maxwell\n          (la branche elastique porte le numero 0)\n X4   LCPC\n X5   RM = rayon moyen de la piece en metres\n X6   RHOS= taux d'armatures passives dans une section de beton arme\n            (0. < RHOS < 1.)\n X7   E1AN = Module d'Young mesure en laboratoire a 1 an d'age [MPa]\n  \n\nn=3 \n   Y1 : evolution contenant le module d'Young du materiau en Pa\n        en fonction du temps en jours\n   Y2 : table contenant les modules de chaque branche du modele\n        en Pa en fonction du temps en jours\n   Y3 : table contenant les temps de relaxation de chaque\n        branche du modele, en jours\n\n   c)  Cas du modele de GLRC_DM\n   ____________________________\n \nm = 12\n   X1  : module d'\u00e9lasticit\u00e9 du b\u00e9ton\n   X2  : coefficient de Poisson du b\u00e9ton\n   X3  : module d'\u00e9lasticit\u00e9 de l'acier\n   X4  : coefficient de Poisson de l'acier\n   X5  : l'\u00e9paisseur de la coque\n   X6  : la section totale d'acier par m\u00e8tre lin\u00e9aire\n   X7  : la position relative d'une nappe dans l'\u00e9paisseur\n   X8  : la r\u00e9sistance en traction du b\u00e9ton\n   X9  : l'effort limite de compression du b\u00e9ton par m\u00e8tre lin\u00e9aire\n   X10 : le param\u00e8tre GAMMA_T tel que 0 < GAMMA_T < 1\n   X11 : le param\u00e8tre GAMMA_F tel que 0 < GAMMA_F < 1\n   X12 : favorise t-on le cisaillement ? 1 si oui, 0 sinon\n\nn = 7\n   Y1  : module d'Young \u00e9quivalent en partie membrane\n   Y2  : coefficient de Poisson \u00e9quivalent en partie membrane\n   Y3  : module d'Young \u00e9quivalent en partie flexion\n   Y4  : coefficient de Poisson \u00e9quivalent en partie flexion\n   Y5  : seuil initial dans la surface seuil d'endommagement\n   Y6  : param\u00e8tre d'\u00e9volution de l'endommagement GAMMA_C\n   Y7  : param\u00e8tre de couplage membrane/flexion ALPHA\n\n      * References :\n     [1] B. Richard, N. Ile. (2012). Influence de la fissuration du b\u00e9ton \n             sur les mouvements transf\u00e9r\u00e9s - phase 2 : implantation dans Cast3M \n                 d'un mod\u00e8le simplifi\u00e9 de b\u00e9ton arm\u00e9 et validation sur les \u00e9l\u00e9me\n                 de structures. Rapport technique CEA RT12-011/A. ",
  },
  {
    name: "IDLI",
    url: "IDLI",
    documentation:
      "$$$$ IDLI     NOTICE  BP208322  14/09/15    21:16:39     8150           \n                                             DATE     14/09/15\n \n    Operateur IDLI                           Voir aussi : BLOQ DEPI RESO\n    --------------  \n      TAB1 = IDLI  RIG1 GEO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur IDLI etablit la table TAB1 (type TABLE) de \n    sous-type LIAISONS_STATIQUES.\n    Les entrees de cette table sont des tables (type TABLE)\n    donnant chacune \n    - un POINT_LIAISON (type POINT) appartenant\n    a l'intersection du maillage support de RIG1 \n    (type RIGIDITE) et de GEO1 (type MAILLAGE)\n    - un DDL_LIAISON (type MOT) indiquant le degre de liberte\n    associe dans RIG1  \n\n      Commentaire :\n      _____________\n\n      A partir de relations donnees, IDLI facilite la mise en\n      place d'une analyse par sous-structuration \n      (voir  BLOQ, RESOU, DEPI, dyna14.dgibi)",
  },
  {
    name: "IFRE",
    url: "IFRE",
    documentation:
      "$$$$ IFRE     NOTICE  MB234859  17/10/02    21:15:14     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur IFRE                           Voir aussi :\n    --------------  \n    FLOT1 FLOT2 = IFRE  FLOT3 ;\n\n\n    Objet :\n    _______\n\n    L'operateur IFRE calcule les integrales de FRESNEL :\n\n                                  / FLOT3\n            FLOT1 = 1/sqrt(2.PI) /       cos(T)/sqrt(T) dT\n                                / 0\n\n                                  / FLOT3\n            FLOT2 = 1/sqrt(2.PI) /       sin(T)/sqrt(T) dT\n                                / 0\n\n    Commentaire :\n    _____________\n\n    FLOTi : objets de type FLOTTANT.\n            FLOT3 est exprime en RADIAN.",
  },
  {
    name: "IJET",
    url: "IJET",
    documentation:
      "$$$$ IJET     NOTICE  CHAT      11/09/12    21:16:31     7124           \n                                             DATE     11/09/12\n \n  Operateur IJET                           Voir aussi :\n    --------------   \n     \n       CHDIST MINTER CHFN CHDEP = IJET CHOLD CHNEW TOL TAB1 ; \n \n    Objet : \n    _______ \n \n    L'operateur IJET calcule, par une methode analytique exacte,  \n    l'intersection entre des segments et les facettes triangulaires d'un \n    maillage. \n \n    Il fournit les distances de connection ainsi que le maillage forme \n    des points d'intersection. \n    Il calcule egalement le flux normalise et les champs de deplacement. \n    Cet operateur remplace la procedure @INTSEC. \n \n \n    Commentaire : \n    _____________ \n \n  \n     en entree : \n     ----------- \n \n     CHOLD  : coordonnees des points extremites initiales des segments \n              (type CHPOINT a 3 composantes) \n \n     CHNEW  : coordonnees des points extremites finales des segments \n              (type CHPOINT a 3 composantes appuye sur le meme support \n              que CHOLD) \n \n     TOL    : tolerance (type FLOTTANT) \n \n     TAB1   : table qui doit contenir les parametres suivants en entree \n \n                tab1.<chamx1 | \n                tab1.<chamy1 | \n                tab1.<chamz1 |      \n                             | \n                tab1.<chamx2 | \n                tab1.<chamy2 |---> Cf @rmcoor \n                tab1.<chamz2 |     \n                             | \n                tab1.<chamx3 | \n                tab1.<chamy3 | \n                tab1.<chamz3 |  \n                             | \n                tab1.<chamf1 | \n                tab1.<chamf2 |---> Cf @rmflun \n                tab1.<chamf3 |     \n                             | \n                tab1.<cosx   | \n                tab1.<cosy   |---> Cf @rmnorm \n                tab1.<cosz   |     \n \n     en sortie : \n     ----------- \n  \n     CHDIST : distance de connexion (distance entre point initial du \n              segment et le point d'intersection a la facette) ou valeur du \n              pas si au cas ou il n'y a pas d'intersection (type CHPOINT).  \n              Il s'appuie sur le maillage support de CHOLD. \n \n     MINTER : maillage forme des noeuds du maillage support de  \n              CHOLD intersectes (type MAILLAGE). \n               \n     CHFN   : flux normalise si intersection, sinon 0 (type CHPOINT). \n              Il s'appuie sur le maillage support de CHOLD. \n               \n     CHDEP  : champ de deplacement des points interceptes (type CHPOINT). \n \n     Remarques : \n     --------- \n \n     CHOLD, CHNEW, CHDIST et CHFN sont des chpoints definis sur un  \n     maillage reduit qui est forme des noeuds de OMBRE qui n'ont pas encore \n     ete interceptes. \n \n     Le maillage cree MINTER est compose d'elements de type POI1. \n \n     Cet operateur remplace la procedure @INTSEC. \n \n\n \n ",
  },
  {
    name: "IMAGES",
    url: "IMAGES",
    documentation:
      "$$$$ IMAGES   NOTICE  CHAT      11/09/12    21:16:32     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure IMAGES                         Voir aussi :\n    -----------------  \n    IMAGES TAB1;\n\n           TAB1.'TABLECAST'.'MAILLAGE'.'TYPE'.'LISTEMP'\n               .'SIGCOMP'.'DEFO_SUPP'.'TITRE'\n               .'OEIL'.'COULEUR'.'AMPLD'\n                                  \n\n   \n    Objet :\n    _______\n\n\n     D'apres une idee originale de l'ISPRA, cette procedure permet\nd'obtenir lors d'un calcul pas a pas :\n      - les deformees a differents instants de calculs \n        supperposees ou non avec la structure non deformee\n      - le champ de contraintes sur la deformee a differents \n        instants de calculs \n      - le champ de temperatures sur la structure non deformee\n        dans le cas d'un calcul thermique pur et a differents \n        instants de calculs.\n      - le champ de temperatures sur la structure deformee dans\n        le cas d'un calcul couple thermique/mecanique a differents\n        instants de calculs .\n\n   Commentaire :\n   _____________\n\n  En entree, TAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres)\ndont voici la liste :\n\n  TABLECAST : table sortie de PASAPAS\n\n  MAILLAGE : une partie du maillage total (maillage total par defaut) \n\n  TYPE : type de trace que l'on desire obtenir\n            = DDEFORMEE pour obtenir le trace des deformees\n            = DCONTRAINTES pour obtenir le trace du champ de contraintes\n              sur la deformee\n            = DTEMPERATURES pour obtenir le trace du champ de temperatures\n              sur la deformee dans le cas d'un calcul couple thermique/\n              mecanique, sur la structure non deformee dans le cas d'un \n              calcul thermique pur\n\n  LISTEMP : numeros des temps de calculs que l'on desire visualiser \n            (type LISTREEL) (cree par l'operateur PROG) \n \n  SIGCOMP : pour le trace du champ de contraintes, type de contraintes \n            que l'on desire visualiser sur la deformee\n              = SIGVMIS pour visualiser les contraintes de VON MISES\n              = nom de la composante du champ de contraintes\n\n  DEFO_SUPP : pour le trace des deformees \n         = VRAI si l'on desire supperposer la deformee avec la structure\n           non deformee\n         = FAUX si l'on desire uniquement la deformee\n\n  TITRE : titre du dessin \n\n  OEIL : oeil pour un trace 3D\n\n  COULEUR : couleur de la deformee (rouge par defaut)\n \n  AMPLD : amplitude de la deformee (donnee facultative) \n\n             \n\nEn sortie on obtient un postscript.\n\n\n    Remarques :\n    ___________\n\n  Pour une presentation plus claire il est preferable de se limiter\na 6 dessins par page.",
  },
  {
    name: "IMPCHI1",
    url: "IMPCHI1",
    documentation:
      "$$$$ IMPCHI1  NOTICE  CHAT      11/09/12    21:16:32     7124           \n                                             DATE     11/09/12\n  \n  Procedure IMPCHI1                         Voir aussi :\n   ------------------  \n       IMPCHI1  TAB1 NOM1 ;\n\n\n        Objet\n       -------\n       Cette procedure permet d'imprimer le contenu d'une table de\n       sous type CHIMI1. ( issue de l'operateur CHI1)\n\n       Commentaires\n       ------------\n       TAB1 est une TABLE de type CHIMI1\n\n       NOM1 est un mot, le nom de TAB1\n\n\n\n \n\n \n\n \n \n ",
  },
  {
    name: "IMPCHI2",
    url: "IMPCHI2",
    documentation:
      "$$$$ IMPCHI2  NOTICE  CHAT      11/09/12    21:16:32     7124           \n                                             DATE     11/09/12\n  \n  Procedure IMPCHI2                         Voir aussi :\n   ------------------  \n       IMPCHI2  TAB1 NOM1 ;\n\n\n        Objet\n       -------\n       Cette procedure permet d'imprimer le contenu d'une table de\n       sous type CHIMI2. ( issue de l'operateur CHI2)\n\n       Commentaires\n       ------------\n       TAB1 est une TABLE de type CHIMI2\n\n       NOM1 est un mot, le nom de TAB1.\n\n\n\n \n\n \n\n \n \n ",
  },
  {
    name: "IMPE",
    url: "IMPE",
    documentation:
      "$$$$ IMPE     NOTICE  MB234859  17/10/02    21:15:14     9577           \n                                             DATE     17/10/02\n\n     Operateur IMPE :     Voir aussi: MASS, RIGI, AMOR , CORIOLIS, GYRO\n     ---------------                                  \n\n \n      RIG1 = IMPE RIG2 (RIG3) (REEL1) (| 'MASSE'            | )  (FLAM); \n                                       | 'RAIDEUR'          |  \n                                       | 'AMORTISSEMENT'    |  \n                                       | 'QUELCONQUE'  LISREEL1  |  \n  \n\nObjet:\n------ \n  \n\n \n  L'operateur IMPEDANCE calcule les matrices d impedance \n  de sous-type MASSE, RAIDEUR, ou AMORTISSEMENT  \n                                                            \n\n  INPUT :\n  -------\n \n  RIG2: Matrice de rigidite initiale dont les inconnues primales et \n        duales sont dans le domaine temporel (UX, UY, ..., FX, FY, ...)\n      \n  REEL1: REEL donnant la pulsation (en rad/s) pour laquelle est calculee\n         l impedance (valeur par defaut: 1)\n      \n  FLAM: LOGIQUE (FAUX par defaut) specifiant si la matrice doit etre de\n        sous type MASSE (necessaire si la matrice est utilise pour \n        un calcul de flambage) \n\n  'MASSE', 'RAIDEUR', 'AMORTISSEMENT', 'QUELCONQUE': Mot cle specifiant\n  le type de matrice d impedance a creer\n\n  L'option 'QUELCONQUE' necessite une LISREEL1 comprenant 4 reels:\n  LISREEL1 = PROG REELA REELB REELC REELD; \n       \n  Il est \u00e9galement possible de fournir 2 matrices en entree afin de \n  coupler les ddls de meme nom entre ces 2 matrices. \n  C'est par exemple le cas lorsqu'on cherche \u00e0 coupler les d\u00e9placements\n  symetriques et antisym\u00e9triques lors d'un calcul en mode de Fourier\n  (cas des machines tournantes par ex.) avec :\n  - RIG2 qui est la matrice calculee avec les ddls symetriques \n    (c'est a dire apres l'instruction OPTION MODE FOUR nhar)\n  - RIG3 qui est la matrice calculee avec les ddls antisymetriques \n    (c'est a dire apres l'instruction OPTION MODE FOUR (-1*nhar))\n \n  Seule l'option RAIDEUR est permise lorsqu'une matrice comprenant \n  des relations (i.e. faisant intervenir des multiplicateurs de Lagrange\n  LX ) est fournie en entree.\n       \n\n  OUTPUT :\n  --------\n\n  RIG1: Objet RIGIDITE repr\u00e9sentant la matrice d impedance \n        (de meme sous type que la RIG2 ou de sous-type MASSE si le \n        mot-cl\u00e9 'FLAM' est pr\u00e9cis\u00e9)\n        \n  La matrice RIG1 est creee par duplication de la matrice RIG1 sur\n  les degres de liberte imaginaires (IUX, IUY, ..., IFX, IFY, ...)\n  selon les r\u00e8gles suivantes :\n\n  Cas 'RAIDEUR':     [  RIG2    0   ]\n                     [   0     RIG2 ]\n\n  Cas 'MASSE':       [ -REEL1^2*RIG2         0     ]\n                     [       0       -REEL1^2*RIG2 ]\n\n  Cas 'AMORTISSEMENT':   [      0     -REEL1*RIG2 ]\n                         [ REEL1*RIG2      0      ]\n\n  Cas 'QUELCONQUE':      [ REELA*RIG2     REELB*RIG2 ]\n                         [ REELC*RIG2     REELD*RIG2 ]\n\n\n  Dans le cas ou deux matrices sont fournies en entr\u00e9e, RIG1 vaut :\n  \n  Cas 'RAIDEUR':     [  RIG2    0   ]\n                     [   0     RIG3 ]\n\n  Cas 'MASSE':       [ -REEL1^2*RIG2         0     ]\n                     [       0       -REEL1^2*RIG3 ]\n\n  Cas 'AMORTISSEMENT':   [      0     -REEL1*RIG2bar ]\n                         [ REEL1*RIG3bar      0      ]\n                         \n  avec RIG2bar_{ij} = | - RIG2_{ij}  si j refere au ddl UT\n                      |   RIG2_{ij}  pour tous les autres ddls.\n\n                      \n                                                                ",
  },
  {
    name: "IMPF",
    url: "IMPF",
    documentation:
      "$$$$ IMPF     NOTICE  PV        20/07/31    14:32:27     10676          \n                                             DATE     20/07/31\n                                             \n  Operateur IMPF                           Voir aussi :\n    -------------                              \n      GEO1 =  IMPF   GEO2 ;\n                                \n\n\n    Objet :\n    _______\n\n    Cet operateur n'est plus utilise.\n\n\n \n \n ",
  },
  {
    name: "IMPO",
    url: "IMPO",
    documentation:
      "$$$$ IMPO     NOTICE  PASCAL    21/06/08    21:15:00     10793          \n                                             DATE     21/06/08\n\n    Operateur IMPOSE                         Voir aussi : RELA EXCI\n    ----------------                                      EXTR MODE  \nSyntaxe 1 :\n-----------\n    MAIL1     = 'IMPO' 'IMPA' 'MAIT'  LI1  'ESCL' | LI2 | ;\n                                                  | P1  |\n\n    Objet :\n    _______\n\n      LI1 , LI2 : maillages des frontieres en vis a vis qui definissent\n                  en 2D les lignes de contact.\n\n      P1        : point (POI1) representatif du projectile indeformable. \n\n      MAIL1     : objet maillage resultant contenant des elements de type 22.\n\n    L'option 'IMPA' 'MAIT' 'ESCL' donne l'ensemble des liens possibles\n    entre les points au cours d'un impact entre deux lignes ou\n    entre une ligne et un projectile rigide supporte par un point.\n    Ces liens ne seront pas  forcement realises mais ils sont representes\n    au sein d'un objet de type 'MAILLAGE' contenant les points physiques\n    lies (3 dans le cas d'un contact ligne-ligne, 2 dans le cas d'un contact \n    ligne-point) et les deux points supports des deux multiplicateurs de\n    Lagrange. On suppose que LI1 est maitre et que LI2 ou P1 sont esclaves.\n\nSyntaxe 2 :\n-----------\n    RIG1      = 'IMPO' 'IMPA' MAIL1 ...\n                  ... (|               'VECT' VECT1             |\n                       | 'HEMI' FLOT1  'VECT' VECT1             |\n                       | 'PLAT' FLOT2  'VECT' VECT1             |\n                       | 'CONE' FLOT3 'ANGL' FLOT4 'VECT' VECT1 |) ;\n\n    Objet :\n    _______\n\n      MAIL1 : objet maillage resultant contenant des elements de type 22\n\n      FLOT1 : rayon du projectile hemispherique (P1 est sur la sphere \n              sur l'axe du cone)\n\n      FLOT2 : largeur du projectile plat (P1 est sur la surface\n              au centre du carre)\n\n      FLOT3 : largeur du projectile conique (P1 est sur la pointe\n              du cone)\n\n      FLOT4 : angle du projectile conique (par raaport a l'axe de rotation)\n\n      VECT1 : objet de type vecteur definissant l'axe du projectile.\n\n      RIG1  : objet rigidite contenant les matrices des relations d'egalite.\n\n    L'option 'IMPA' seule permet de construire l'objet de type 'RIGIDITE'\n    contenant la matrice des relations de non penetration entre les noeuds\n    pour lesquels on detecte un contact sur la configuration actuelle.  \n    Dans le cas d'un projectile rigide de type POI1 on peut definir trois\n    formes : 'HEMI' (hemispherique), 'PLAT' ou 'CONE' (conique). La \n    definition d'un vecteur indiquant la direction du point materiel est\n    indispensable.\n\n    Les coefficients de la matrices sont relatifs a la configuration actuelle.\n    Ils correspondent a une linearisation des equations de non penetration.\n\n \n ",
  },
  {
    name: "INCL",
    url: "INCL",
    documentation:
      "$$$$ INCL     NOTICE  FD218221  14/08/07    21:15:04     8140           \n                                             DATE     14/08/07\n\n    Operateur INCLUSION                   Voir aussi : DEDA, DEDANS\n    -------------------  \n\n    GEO1 = 'INCLUS' GEO2 GEO3 ('VOLU') | ('STRI') | ('NOID') (FLOT1) ;\n                                       | ('LARG') |           \n                                       | ('BARY') |      \n\n\n    Objet :\n    _______\n  \n    Deux cas sont a considerer.\n  \n    1) 2D ou 3D surfaces planes :\n    \n    L'operateur INCLUS extrait de l'objet GEO2 (type MAILLAGE)\nl'ensemble des elements se trouvant entierement a l'interieur du contour\nde l'objet GEO3 en 2D ou 3D surfaces planes (type MAILLAGE). Si le mot\noption 'BARY' est utilise, un element est considere a l'interieur du\ncontour si son barycentre est a l'interieur de ce contour. SI le mot\n'STRI'ctement est utilise les points se trouvant sur la frontiere sont\nconsideres comme etant a l'exterieur. Si le mot 'LARG'ement est fourni\n(option par defaut), ils sont consideres comme etant a l'interieur.\n\n\n    2) 3D volumique (mot-clef 'VOLU' a placer en premier):\n    \n    L'operateur INCLUS extrait de l'objet GEO2 (type MAILLAGE)\nl'ensemble des elements se trouvant a l'interieur du volume forme par\nles elements volumiques de GEO3. Dans le cas du mot option 'BARY', un\nelement est considere a l'interieur du volume si son barycentre est\nlui-meme a l'interieur de ce volume.  Si le mot 'STRI' est utilise il\nfaut que tous les noeuds de l'element soient a l'interieur du volume et,\nsi le mot 'LARG' est utilise, il suffit qu'un des noeuds de l'element\nsoit a l'interieur du volume forme par GEO3. Par defaut c'est l'option\n'STRI' qui est active.\n\n\n    L'objet resultat GEO1 est de type MAILLAGE.\n\n\n    L'operateur genere une erreur si l'inclusion est vide, sauf en\npresence du mot-clef 'NOID', auquel cas GEO1 est un maillage vide. \n\n\n    FLOT1 (type FLOTTANT) n'est utilise qu'en 3D. Il permet de verifier\nl'inclusion a un critere de precision pres. Suivant le signe de FLOT1,\non peut rattraper des points legerement a l'exterieur de GEO3 (FLOT1>0)\nou ne conserver que les points strictement a l'interieur (FLOT1<0).\nPar defaut, FLOT1 est egal 1.E-2.",
  },
  {
    name: "INDE",
    url: "INDE",
    documentation:
      "$$$$ INDE     NOTICE  CB215821  15/05/04    21:15:06     8513           \n                                             DATE     15/05/04\n\n  Operateur INDEX                          Voir aussi :\n    ---------------  \n    TAB1 = INDEX TAB2 ;\n    TAB1 = INDEX MOT1 ;\n\n\n    Objet :\n    _______\n\n    La premi\u00e8re syntaxe de l'operateur INDEX permet d'obtenir l'ensemble\n    des indices d'une table. La table resultat TAB1 sera indic\u00e9e de 1 \u00e0\n    n (n \u00e9tant le nombre d'indices de la table TAB2).\n    \n    La deuxi\u00e8me syntaxe de l'operateur INDEX permet d'obtenir l'ensemble\n    des objets nomm\u00e9s d'un type particulier. La table r\u00e9sultat TAB1 sera\n    indic\u00e9e par les noms des objets nomm\u00e9s du type demand\u00e9. \n\n    Commentaire :\n    _____________\n\n    TAB2   : table dont on veut connaitre les indices (type TABLE)\n    MOT1   : objet de type MOT \u00e0 choisir dans la liste suivante : \n              *LOGIQUE  ; *ENTIER   ; *FLOTTANT ; *MOT      ; *MAILLAGE\n              *POINT    ; *LISTENTI ; *LISTREEL ; *LISTMOTS ; *LISTCHPO\n              *EVOLUTIO ; *RIGIDITE ; *TEXTE    ; *DEFORME  ; *CHARGEME\n              *VECTEUR  ; *TABLE    ; *PROCEDUR ; *CHPOINT  ; *MCHAML\n              *MMODEL   ; *NUAGE    ; *MATRIK\n    TAB1   : objet resultat (type TABLE)",
  },
  {
    name: "INDI",
    url: "INDI",
    documentation:
      "$$$$ INDI     NOTICE  GOUNAND   21/04/01    21:15:06     10933          \n                                             DATE     21/04/01\n\n    Operateur INDI                           Voir aussi : TRIA REMA \n    --------------  \n    ----------------------  \n    ----------------------\n\n    CHAM1 = INDI GEO1 NOMi ...   ;\n\n    Objet :\n    -------\n\n    L'operateur INDI fournit des indicateurs permettant d'apprecier\n    la qualite d'un maillage.\n    Les criteres testes sont specifies par des mots-cles.\n    L'operateur cree un champ par elements (type MCHAML) dont les\n    composantes sont ces criteres.\n\n    Commentaires :\n    --------------\n\n    GEO1   : objet maillage (type MELEME)\n\n    NOMi   : mot-cle (type mot). Les valeurs possibles sont :\n\n   'PLAN'  : Critere de planearite pour les elements a 4 noeuds.\n             La valeur calculee est directement proportionnelle a\n             l'angle entre les normales N1 et N2 definies par :\n\n             - N1 = produit vectoriel (S1 S2,S1 S4)\n             - N2 = produit vectoriel (S3 S4,S3 S2)\n               (S1,S2,S3,S4 sont les sommets de l'element)\n\n             Les valeurs sont comprises entre 0 et 100.\n             Un mchaml resultat de valeur constante egale a 100\n             indiquera que tous les elements sont plans.\n\n   'ASPE'  : Pour les elements TRI3 et TET4 seulement\n             Rapport d'aspect (aspect ratio), il s'agit du rapport de la\n             plus grande arete sur la plus petite hauteur, normalise\n\n             - pour les TRI3 = SQRT(3)/2 * grande arete / petite hauteur\n             - pour les TET4 = SQRT(2/3) * grande arete / petite hauteur\n\n             Les valeurs sont comprises entre 1 (element equilateral)\n             et + infini\n\n   'SKEW'  : Pour les elements TRI3 et TET4 seulement\n             Pointicite (skewness), il s'agit de l'ecart relatif entre la\n             mesure de l'element et celle de l'element \"optimal\"\n\n             SKEW = (mes_optimal - mes) / mes_optimal\n\n             La mesure est l'aire (pour les TRI3) ou le volume (pour les TET4)\n\n             L'element \"optimal\" est l'element equilateral place dans la\n             meme sphere circonscrite que l'element etudie\n\n             Les valeurs sont comprises entre 0 (element equilateral)\n             et 1 (element degenere)\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n     CHAM1 = INDI 'TOPO' MAIL1 (METR1) ('LISTREEL') ;\n\n     Objet :\n     _______\n\n     L'operateur INDI fournit un indicateur de qualite d'un maillage\n     de TRI3 ou de TET4, eventuellement dans une metrique donnee.\n     \n     Commentaire :\n     _____________\n\n     MAIL1   : maillage (type MAILLAGE) constitu\u00e9 d'un seul type\n               d'elements TRI3 ou TET4\n     METR1   : objet de type FLOTTANT ou CHPOINT               \n               Si METR1 est de type FLOTTANT, il s'agit de la taille\n               d'arete voulue (densite)\n               Si METR1 est de type CHPOINT, il s'agit de l'inverse\n               de la metrique voulue (unite : longueur^-2)\n               \n     CHAM1   : champ (type MCHAML ou LISTREEL) de qualite\n     \n     Remarques :\n     ___________\n\n     1) Si la metrique voulue est isotrope, le nom de composante est G.\n        Si la metrique voulue est anisotrope, les noms des composantes\n        sont :  G11, G21, G22, (G31, G32, G33 en 3D)\n\n     2) En presence du mot-cle LISTREEL, l'operateur renvoie un objet\n        de ce type plutot que du type MCHAML.\n\n     3) L'indicateur varie entre 0 (element degenere) et 1\n        (element equilateral, de cote 1 dans la m\u00e9trique voulue si\n        METR1 est donnee) ",
  },
  {
    name: "INDIBETA",
    url: "INDIBETA",
    documentation:
      "$$$$ INDIBETA NOTICE  CHAT      11/09/12    21:16:34     7124           \n                                             DATE     11/09/12\n\n  Procedure INDIBETA                       Voir aussi :\n    ------------------  \n    FLOT4 = INDIBETA FLOT1 FLOT2 FLOT3;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule l'indice de fiabilite associe a une\n    probabilite.\n\n    Commentaire :\n    _____________\n\n    FLOT1 = borne inferieure (type FLOTTANT)\n\n    FLOT2 = borne superieure (type FLOTTANT)\n\n    FLOT3 = probabilite (type FLOTTANT)\n\n    FLOT4 = indice de fiabilite (type FLOTTANT)",
  },
  {
    name: "INDIOBJE",
    url: "INDIOBJE",
    documentation:
      "$$$$ INDIOBJE NOTICE  CHAT      11/09/12    21:16:34     7124           \n                                             DATE     11/09/12\n                                             \n    Methode INDI OBJE                         Voir aussi : METH   OBJE\n    ---------------                                       CHANUOBJ  \n      OBJ1 = OBJET INDIOBJE ;\n\n\n        Objet\n        -----\n\n     La methode INDIOBJE definit un objet de CLASSE INDIOBJE.\n     Les elements sont des entiers definis par l'utilisateur.\n     Methode associee:  GINDIOBJ.\n             appel: OBJ1%GINDIOB  num OBJ2 ;",
  },
  {
    name: "INDUCTIO",
    url: "INDUCTIO",
    documentation:
      "$$$$ INDUCTIO NOTICE  CHAT      11/09/12    21:16:34     7124           \n                                             DATE     11/09/12\n \n  Procedure INDUCTIO                   Voir aussi :\n        ------------------  \n        OBJET1 = INDUCTIO GEO1  CHP1  LOG1  (MOT1)\n        \n\n\n        Objet :\n        -------\n        En magnetostatique 2d potentiel vecteur calcul de l'induction\n        a partir du potentiel vecteur\n\n        Commentaire :\n        -------------\n      \n        GEO1  maillage sur lequel on veut l'induction\n        CHP1  solution en potentiel definie au moins sur GEO1 \n        LOG1  variable logique valant VRAI si le probleme est \n              axisymetrique. \n        MOT1  'MCHAML'  si l on veut le champ par element aux \n                points d'integration \n\n        en sortie :\n        ----------\n        OBJET1   champ par point ( defaut )  ou par element \n  de composantes  BX BY   sur GEO1\n\n  NOTA  : en axisymetrique BX et BY correspondent a BR et BZ ",
  },
  {
    name: "INFO",
    url: "INFO",
    documentation:
      "$$$$ INFO     NOTICE  PASCAL    15/10/02    21:15:01     8655           \n                                             DATE     15/10/02\n\n    Directive INFO                           Voir aussi : AIDE NOTI\n    --------------  \n    INFO  MOT1 ;\n\n\n    Objet :\n    _______\n\n    La directive INFO affiche la notice de la fonctionnalite de nom MOT1.\nPar exemple :\n    INFO OPTION ;\naffiche la notice de la directive OPTION. L'ensemble des notices definit\nle referentiel fonctionnel de Cast3M.\n\n    A chaque page, il faut faire un retour chariot pour passer a la page\nsuivante. q, puis retour chariot permet de quitter.\n\n    Dans le cas de notices structurees en chapitres et parties,\nla directive INFO affiche un sommaire et permet de se positionner\ndans la notice aux endroits references dans le sommaire.",
  },
  {
    name: "INICHI1",
    url: "INICHI1",
    documentation:
      "$$$$ INICHI1  NOTICE  CHAT      11/09/12    21:16:35     7124           \n                                             DATE     11/09/12\n                                             \n     Procedure INI CHI1                       Voir aussi : CHI1 DONCHI1\n     ------------------                                   CHI2   DONCHI2  \n                                                          NOESPCHI  \n                                                          NOCOMCHI  \n                                                          CHITRNSP  \n                                                          INICHIMI  \n    INICHI1 OBJ1 MOT1 MOT2 ;\n\n\n        Objet\n        -----\n        Cette procedure permet de modifier de fa\u00e7on interactive,\n        un objet de type DONCHI1 utilisable par l'operateur CHI1\n        Pour toutes les questions posees :\n        La touche <Entree> fait passer a la sequence suivante dans\n        la procedure.\n        La reponse 'OUI' permet d'effectuer l'operation proposee.\n\n        Commentaires\n        -------------\n        OBJ1 : Objet de type DONCHI1\n        MOT1 : adresse du fichier de composants de la base de donnees.\n        MOT2 : adresse du fichier de LOGK de la base de donnees.\n\n \n ",
  },
  {
    name: "INICHI2",
    url: "INICHI2",
    documentation:
      "$$$$ INICHI2  NOTICE  CHAT      11/09/12    21:16:35     7124           \n                                             DATE     11/09/12\n                                             \n     Procedure INICHI2                       Voir aussi : CHI1 DONCHI1\n     -----------------                                    CHI2   DONCHI2  \n                                                          NOESPCHI  \n                                                          NOCOMCHI  \n                                                          CHITRNSP  \n                                                          INICHIMI  \n   INICHI2 TAB1 OBJ1 (MAIL1);\n\n\n        Objet\n        -----\n        Cette procedure permet de modifier, de fa\u00e7on interactive,\n        un objet de classe DONCHI2 utilisable par l'operateur CHI2.\n        Toutes les valeurs sont supposees constantes dans l'espace\n        pour le maillage considere.\n        Pour toutes les questions posees :\n        La touche <Entree> fait passer a la sequence suivante dans\n        la procedure.\n        La reponse 'OUI' permet d'effectuer l'operation proposee.\n\n        Commentaires\n        -------------\n        TAB1 : table de soustype CHIMI1. Resultat de CHI1.\n        OBJ1 : Objet de classe DONCHI2 (utilise en entree et en sortie)\n        MAIL1: Maillage support pour les CHPOIN. A defaut si OBJ1%GTOT\n              est donne on prendra son maillage support.\n              Si on ne donne ni MAIL1 ni OBJ1%GTOT le support\n              geometrique par defaut sera un point de coordonnees\n              ( 0.  0.).\n\n\n\n \n ",
  },
  {
    name: "INICHIMI",
    url: "INICHIMI",
    documentation:
      "$$$$ INICHIMI NOTICE  CHAT      11/09/12    21:16:35     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure INICHIMI                       Voir aussi : CHI1 DONCHI1\n    ------------------                                    CHI2   DONCHI2  \n                                                          NOESPCHI  \n                                                          NOCOMCHI  \n                                                          CHITRNSP  \n                                                          CCDONCHI  \n  OBJ4 TAB1 OBJ5 = INICHIMI (OBJ1) (MOT1) (MOT2) (OBJ2) (OBJ3) (MAIL1);\n\n\n        Objet\n        -----\n        Cette procedure permet d'initialiser, de fa\u00e7on interactive,\n        les donnees pour un calcul de geochimie faisant intervenir\n        les operateurs CHI1 et CHI2.\n        Elle permet de calculer les concentrations totales des \n        composants a partir des activites ou des quantites de mineraux\n        desirees.\n        Cette procedure permet egalement de determiner les \n        concentrations totales des composants pour obtenir l'equilibre\n        electrique.\n        Toutes les valeurs sont supposees constantes dans l'espace\n        pour le maillage considere.(cf CCDONCHI pour des valeurs\n        non constantes)\n        Tous les arguments d'entree sont facultatifs car en leur\n        absence la procedure demande a l'utilisateur d'entrer les\n        differentes valeurs au clavier.\n        Pour toutes les questions posees :\n        La touche <Entree> fait passer a la sequence suivante dans\n        la procedure.\n        La reponse 'OUI' permet d'effectuer l'operation proposee.\n        La reponse 'QUIT' permet de sortir de la procedure.\n\n        Commentaires\n        -------------\n        OBJ1 : Objet de type DONCHI1\n        MOT1 : adresse du fichier de composants de la base de donnees.\n        MOT2 : adresse du fichier de LOGK de la base de donnees.\n        OBJ2 : Objet de type DONCHI2\n        OBJ3 : Objet de type PARMCHI2\n        MAIL1: Maillage support pour les CHPOIN. A defaut si OBJ2%GTOT\n              est donne on prendra son maillage support.\n              Si on ne donne ni MAIL1 ni OBJ2%GTOT le support \n              geometrique par defaut sera un point de coordonnees\n              ( 0.  0.).\n        OBJ4 : Objet de type DONCHI1. Il contient les corrections\n              apportees interactivement a OBJ1.\n        TAB1 : table de soustype CHIMI1. Resultat CHI1 applique a OBJ4.\n        OBJ5 : Objet de type DONCHI2.\n\n\n\n \n ",
  },
  {
    name: "INIMUR",
    url: "INIMUR",
    documentation:
      "$$$$ INIMUR   NOTICE  CHAT      11/09/12    21:16:35     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure INIMUR                         Voir aussi :\n    ----------------  \n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure appelee uniquement par le procedure ENCEINTE.",
  },
  {
    name: "ININLIN",
    url: "ININLIN",
    documentation:
      "$$$$ ININLIN  NOTICE  CHAT      11/09/12    21:16:36     7124           \n                                             DATE     11/09/12\n$X   ININLIN\n\n\n  Voir aussi :\n                                                                   NLIN\n\n\n      Procedure ININLIN\n      _________________\n\n\n      TAB1 = ININLIN ENT1 ENT2 ENT3 ENT4 ENT5 ;\n\n\n      Objet :\n      _______\n\n      Procedure permettant d'initialiser une table argument\n      pour l'operateur NLIN.\n\n      ENT1 : objet de type ENTIER, nombre d'operateurs \n\n      ENT2 : objet de type ENTIER, nombre de variables \n\n      ENT3 : objet de type ENTIER, nombre de donnees \n\n      ENT4 : objet de type ENTIER, nombre de coefficients \n\n      ENT5 : objet de type ENTIER, nombre de dimensions de \n             l'espace d'integration",
  },
  {
    name: "INITEFMH",
    url: "INITEFMH",
    documentation:
      "$$$$ INITEFMH NOTICE  CHAT      11/09/12    21:16:36     7124           \n                                             DATE     11/09/12\n\n  Operateur INITEFMH                   Voir aussi :\n        ------------------  \n\n    ATTENTION La vitesse est optionnelle, L'ordre est important\n    et les types d'arguments qui se suivent aussi pour tester leur\n    presence\n   \n    Cette procedure est appelee par TRANGEOL.\n    Pas de notice car pas pour utilisateur lambda.\n\n  |-----------------------------------------------------------------| \n  | Phrase d'appel (en GIBIANE)                                     |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | SMTr MatrTr CoefDt TbDarTra MassEFMH nomespec                   |\n  | nbespece Difftot Tcini TABRES TABMODI= INITEFMH MoDARCY Porosite|\n  |                      MateDiff ChPSour DeltaT Cini TetaDiff      |\n  |                      TetaConv TetaLin fluimp dircli (QFACE)     |\n  |                      LMLump DECENTR CHCLIM optresol ;           |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  | Generalites : MATTEFMH construit la matrice de discretisation   |\n  |               du probleme de transport convection-diffusion pour|\n  |               le premier pas de tps d'un algorithme transitoire.|\n  |               Le second membre et les Conditions limites de flux|\n  |               sont pris en compte.                              |\n  |            RESTE TCINI, DECENTR et TERME LIN                    |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | Porosite : champoint de composante 'CK'                         | \n  |                                                                 |\n  | MateDiff : Tenseur de diffusion  (type iso, ..) champoint       |\n  |             de composante 'K' en isotrope, 'K11', 'K21',        |\n  |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n  |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n  |                                                                 |\n  | DeltaT   : Pas de temps.                                        |\n  |                                                                 |\n  | ChPSour  : Champ par points des sources volumiques par unite de |\n  |            temps (support maillage centre). Composante ??????   |\n  |                                                                 |\n  | Cini     : Concentration initiale, CHPOINT centre.              |\n  |            Composante 'H'.                                      |\n  |                                                                 |\n  | Qface    : vitesse aux faces, CHPO face de composantes Vx, Vy   |\n  |            en 2d et Vx, Vy, Vz en 3d. Il s'agit plus exatement  |\n  |            de (V.n)n, c'est a dire de la composante normale de  |\n  |            la vitesse aux faces. ???????? (je pressens que      |\n  |            castem va sortir des flux, cad integres sur surfaces)|\n  |                                                                 |\n  | TetaDiff : Valeur de theta pour theta-schema en temps, operateur|\n  |            de diffusion. Entre 0 et 1. 0 = explicite, 1 = euler |\n  |            implicite.                                           |\n  |                                                                 |\n  | TetaConv : Valeur de theta pour theta-schema en temps, operateur|\n  |            de convection. Entre 0 et 1. 0 = explicite, 1 = Euler|\n  |            implicite.                                           |\n  |                                                                 |\n  | TetaLin  : valeur de theta pour theta-schema en temps, operateur|\n  |            lineaire du type coef * C, ou C est l'inconnue.      |\n  |            Entre 0 et 1. 0 = explicite, 1 = euler implicite.    |\n  |            ??????????? A voir car peut etre identique a Tetadiff|\n  |                                                                 | \n  | LMLump   : Logique. Si vrai on effectue une condensation de     |\n  |            masse de la matrice EFMH                             |\n  |                                                                 |\n  | DECENTR  : Logique. Vrai veut dire schemas decentres et faux    |\n  |            veut dire schema convectif centre.                   |        \n  |                                                                 |          \n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n  |            L'indice 'FLUXTOT' contient les conditions limites   |\n  |            de flux total et 'FLUMIXTE' concerne une condition   |\n  |            de flux mixte : 'FLUMIXTE' . 'VAL' contient le champ |\n  |            a n composantes indiquant le flux, 'FLUMIXTE' . 'A'  |\n  |            et 'FLUMIXTE' . 'B' les coef (champoints SCAL) tels  |\n  |            que A D grad (C) + B (C) = VAL                       | \n  |                                                                 |\n  | OPTRESOL : Table dont l'entree est optionnelle definissant      |     \n  |               les options de resolution pour 'KRES'.            |        \n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | MassEFMH : matrice elementaire EFMH                             |\n  |                                                                 |\n  | MatrTr   : matrice globale sur les traces                       |\n  |                                                                 |\n  | SMTr     : second membre sur les traces                         |\n  |                                                                 |\n  | TbDarTra : table Darcy transitoire utilisee par MHYB, SMTP ...  |\n  |                                                                 |\n  | nomespec : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | nbsource : nombre de composantes du terme source qd X especes   |\n  |                                                                 |\n  | Diffdisp : Dipersivite, tenseur chpoint K11 K22 K33 K21 K31 K32 |\n  |                                                                 |\n  | TABRES   : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  | Tcini    : Trace de concentration aux faces (eventuellement a   |\n  |            plusieurs composantes (especes)                      |\n  |                                                                 |\n  | TABMODI  : table contenant des logiques indiquant la necessite  |\n  |            ou non de reclalculer certains termes.               |\n  |            'POROSITE' : VRAI si le coefficient devant D/DT      |\n  |                         (porosite) est modifie depuis le dernier|\n  |                         appel                                   |\n  |            'DELTAT'   : VRAI si le pas de tps a change          |\n  |            'CONVECTI' : VRAI si la vitesse a change             |\n  |            'COEF_LIN' : VRAI si le coef en facteur de C a change|\n  |            'DIFFUSI'  : VRAI si les diffusivites ont change     |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                  VARIABLES INTERNES                             |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | CoefDt   : coeff devant dC/dt integre sur les elements          |\n  |                                                                 |\n  | PCONV    : Logique indiquant VRAI si presence de convection     |\n  |                                                                 |\n  | toltheta : 1.D-4  seuil en dessous duquel on considere que la   |\n  |            valeur de theta du theta-schema est nulle (schema    |\n  |            explicite) ou au contraire euler-implicite si        |\n  |            theta > 0.9999                                       |\n  |                                                                 |\n  | Tccini   : Trace de concentration aux faces (une composante)    |\n  |                                                                 |\n  | SSource  : Source aux centre (une composante)                   |\n  |                                                                 |\n  | CCini    : concentration aux centres (une composante)           |\n  |                                                                 |\n  | lstcps   : liste des noms de composante des especes dans Chpsour|\n  |                                                                 |\n  | SSMTr     : second membre sur les traces pour une espece        |\n  |                                                                 |\n  | MatConv   : matrice globale sur les traces pour la convection   |\n  |                                                                 |\n  | Numdiff  : diffusivite numerique due au decentrement            |\n  |                                                                 |\n  | FLUNEU   : LOGIQUE valant VRAI si conditions de Neumann         |\n  |                                                                 |\n  | CLFLUX   : Chpoint a n composantes contenant les flux imposes   |\n  |            pour chaque espece chimique. nul si pas de flux      |\n  |            OPTIONNEL                                            |\n  |                                                                 |\n  *******************************************************************",
  },
  {
    name: "INITOU",
    url: "INITOU",
    documentation:
      "$$$$ INITOU   NOTICE  MB234859  17/10/02    21:15:15     9577           \n                                             DATE     17/10/02\n\n\n    Procedure INITOU                              Voir aussi : ZONFIS POSTOU  \n\n    Objet :\n    _______\n\nMECANIQUE :\n\n  Une procedure permet d'effectuer un calcul de l'ouverture de fissure\n  dans le cas complexe suivant le trajet de fissure. La fissure s'ouvre \n  perpendiculairement au trajet de fissure. L'ouverture de fissure \n  prend en compte les microfissures autour d'une fissure principale.\n\n  Cette proc\u00e9dure est compos\u00e9e de trois procedures qui r\u00e9alise\n  les calculs dans l'ordre suivant : \n\n  - initou: permet de positionner les points de fissure\n  - zonfis: permet de detecter visuellement une zone de fissure\n  - postou: permet de caculer l'ouverture de fissure\n \n\n  La procedure initou permet de positionner les points de fissure.\n\n   Description :\n   ____________\n\nL'entree pour initou:\nTAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres) \ndont voici la liste :\n\n    TAB1.GEO   MAILLAGE : structur\u00e9 a post-traiter (CUB8)\n    TAB1.POI   POI1     : sur un bord du maillage\n    TAB1.LH    MAILLAGE : ligne de limite haute\n    TAB1.LB    MAILLAGE : ligne de limite basse\n    TAB1.LG    MAILLAGE : ligne de limite gauche\n    TAB1.LD    MAILLAGE : ligne de limite droite\n    TAB1.PLA   MOTS     : 'XY', 'YZ', 'ZX' defini le plan de \n                          post-traitement\n\n    TAB1.HOR   LOGIQUE  : vrai si le cacule du saut horizontal\n    TAB1.PAS   ENTIER   : numero de pas\n\n    TAB1.CRITO FLOTTANT : critere du seuil pour la norme de saut de\n                          deplacement\n    TAB1.CRITP FLOTTANT : critere du seuil pour la position de fissure \n\n\nLa sortie pour initou:\n\n    TAB1.LIGV   TABLE   : ligne verticale de repere\n    TAB1.LIGH   TABLE   : ligne horizontal de repere \n    TAB1.TELZ   TABLE   : taille de grille verticale\n    TAB1.TELX   TABLE   : taille de grille horizontale\n\n    TAB1.SDH    TABLE   : saut de deplacement dans les trois directions\n    TAB1.CDH    TABLE   : coordonnee du saut de deplacement\n\n    TAB1.OUFT   TABLE   : norme de saut sur chaque ligne\n    TAB1.COTX   TABLE   : coordonnee X sur chaque ligne\n    TAB1.COTZ   TABLE   : coordonnee Z sur chaque ligne\n    TAB1.OUFTT LISTREEL : norme de saut sur la structure\n    TAB1.COTXX LISTREEL : coordonnee X sur la structure\n    TAB1.COTZZ LISTREEL : coordonnee Z sur la structure\n\n    TAB1.PFO    TABLE   : maxima locaux de la norme de saut \n                          sur chaque ligne\n    TAB1.PFX    TABLE   : coordonnee X sur chaque ligne\n    TAB1.PFZ    TABLE   : coordonnee Z sur chaque ligne\n    TAB1.LPFO  LISTREEL : maxima locaux de la norme de \n                          saut sur la structure\n    TAB1.LPFX  LISTREEL : coordonnee X sur la structure\n    TAB1.LPFZ  LISTREEL : coordonnee Z sur la structure",
  },
  {
    name: "INITVF",
    url: "INITVF",
    documentation:
      "$$$$ INITVF   NOTICE  CHAT      11/09/12    21:16:36     7124           \n                                             DATE     11/09/12\n\n  Operateur INITVF                        Voir aussi :\n     ----------------       \n\n\n ATTENTION La vitesse est optionnelle, L'ordre est important\n et les types d'arguments qui se suivent aussi pour tester leur\n presence\n\n Appele par TRANGEOL. Pas pour utilisateurs.\n\n  |-----------------------------------------------------------------|\n  | Phrase d'appel (en GIBIANE)                                     |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | RESI Matot jaco Mpor2 Mchamt mchamt1  difftot nomespec nbespece       |\n  | nbsource  TABRES TABMODI NOUVMAT = INITVF MoDARCY Porosite      |\n  |                      MateDiff ChPSour DeltaT Cini TetaDiff      |\n  |                      TetaConv TetaLin  (QFACE)  QELEM           |\n  |                       DISPL  DISPT CHCLIM optresol ;            |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  | Generalites : INITVF construit la matrice de discretisation   |\n  |               du probleme de transport convection-diffusion pour|\n  |               le premier pas de tps d'un algorithme transitoire.|\n  |               Le second membre et les Conditions limites de flux|\n  |               sont pris en compte.                              |\n  |            RESTE TCINI, DECENTR et TERME LIN                    |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | Porosite : champ par elements de composante 'CK'                |\n  |                                                                 |\n  | MateDiff : Tenseur de diffusion  (type iso, ..) champ par       |\n  |            elements de composante 'K' en isotrope, 'K11', 'K21',|\n  |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n  |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQ\n  |                                                                 |\n  | ChPSour  : Champ par points des sources volumiques par unite de |\n  |            temps (support maillage centre). Composante ??????   |\n  |                                                                 |\n  | DeltaT   : Pas de temps.                                        |\n  |                                                                 |\n  | Cini     : Concentration initiale, CHPOINT centre.              |\n  |                                                                 |\n  | TetaDiff : Valeur de theta pour theta-schema en temps, operateur|\n  |            de diffusion. Entre 0 et 1. 0 = explicite, 1 = euler |\n  |            implicite.                                           |\n  |                                                                 |\n  | TetaConv : Valeur de theta pour theta-schema en temps, operateur|\n  |            de convection. Entre 0 et 1. 0 = explicite, 1 = Euler|\n  |            implicite.                                           |\n  |                                                                 |\n  | TetaLin  : valeur de theta pour theta-schema en temps, operateur|\n  |            lineaire du type coef * C, ou C est l'inconnue.      |\n  |            Entre 0 et 1. 0 = explicite, 1 = euler implicite.    |\n  |            ??????????? A voir car peut etre identique a Tetadiff|\n  |                                                                 | \n  |                                                                 |\n  | Qface    : vitesse aux faces, CHPO face de composantes Vx, Vy   |\n  |            en 2d et Vx, Vy, Vz en 3d. Il s'agit plus exatement  |\n  |            de (V.n)n, c'est a dire de la composante normale de  |\n  |            la vitesse aux faces. ???????? (je pressens que      |\n  |            castem va sortir des flux, cad integres sur surfaces)|\n  |                                                                 |          \n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n  |                                                                 |\n  | OPTRESOL : Table dont l'entree est optionnelle definissant      |     \n  |               les options de resolution pour 'KRES'.            |        \n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | RESI     : second membre                                        |\n  |                                                                 |\n  | Matot    : matrice globale de discretisation en VF              |\n  |                                                                 |\n  | Jaco     : matrice globale de discretisation en VF pour le probleme\n  |          stationnaire                                           |\n  |                                                                 |\n  | Mpor     : matrice globale de discretisation en VF pour le probleme\n  |          stationnaire                                           |\n  |                                                                 |\n  | Mchamt   : Coef permettant de calculer le flux total            |\n  |                                                                 |\n  | Mchamt1  : Coef permettant de calculer le flux diffusif         |\n  |                                                                 |\n  | Difftot  : Coefficient de diffusion totale, integre decentrement|\n  |                                                                 |\n  | Diffdisp : Coefficient de dispersivite                          |\n  |                                                                 |\n  | nomespc  : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | nbsource : nombre de composantes du terme source qd X especes   |\n  |                                                                 |\n  | TABRES   : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  | TABMODI  : table contenant des logiques indiquant la necessite  |\n  |            ou non de reclalculer certains termes.               |\n  |            'POROSITE' : VRAI si le coefficient devant D/DT      |\n  |                         (porosite) est modifie depuis le dernier|\n  |                         appel                                   |\n  |            'DELTAT'   : VRAI si le pas de tps a change          |\n  |            'CONVECTI' : VRAI si la vitesse a change             |\n  |            'COEF_LIN' : VRAI si le coef en facteur de C a change|\n  |            'DIFFUSI'  : VRAI si les diffusivites ont change     |\n  |                                                                 |\n  | NOUVMAT   : Logique affecte a VRAI lorsque que Matot vient \n  |             d'etre calculee \n  |-----------------------------------------------------------------|",
  },
  {
    name: "INSE",
    url: "INSE",
    documentation:
      "$$$$ INSE     NOTICE  CHAT      11/09/12    21:16:37     7124           \n                                             DATE     11/09/12\n\n    Operateur INSERER                        Voir aussi : ENLE\n    -----------------  \n      OBJET3 = INSERER  OBJET1 N1 OBJET2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur INSERER insere dans OBJET1 l'objet OBJET2 a la position\nN1 (et non pas apres). L'objet OBJET3 cree est de meme type que OBJET1.\n\n    Operations possibles :\n    ______________________\n\n    ----------------------------------------------\n    |    OBJET1    |     N1       |    OBJET2    |\n    ----------------------------------------------\n    |   LISTREEL   |   ENTIER     |   FLOTTANT   |\n    |   LISTENTI   |   ENTIER     |   ENTIER     |\n    |   LISTMOTS   |   ENTIER     |   MOT        |\n    |   LISTCHPO   |   ENTIER     |   CHPOINT    |\n    ----------------------------------------------\n\n \n ",
  },
  {
    name: "INSI",
    url: "INSI",
    documentation:
      "$$$$ INSI     NOTICE  MB234859  17/10/02    21:15:15     9577           \n                                             DATE     17/10/02\n\n    Operateur INSI                           Voir aussi : COSI\n    --------------  \n    EVOL1 EVOL2 = INSI EVOL3 (MOT1);\n\n                                        MOT1='SIMP','LINE'\n                                        \n\n    objet :\n    _______\n\n    Operateur INSI effectue l'integration numerique des signaux en\n    accelerations EVOL3 (comportant N courbes) et genere ainsi les\n    signaux en vitesse EVOL2 et en deplacement EVOL1 (comportant N\n    courbes).\n\n    Si EVOL3 est un ensemble d'accelerogrammes corriges a l'aide de\n    l'operateur COSI (utilisant la meme option), la vitesse finale,\n    le deplacement final et le deplacement moyen des signaux generes\n    sont nuls.\n\n    option:\n    -------\n\n    Diverses methodes d'integration numerique peuvent etre choisies en\n    utilisant le mot-cle MOT1 :\n\n    - MOT1='SIMP'(lifie) se refere a l'utilisation d'une methode des\n      trapezes pour deduire chaque variables de la discretisation de sa\n      derivee.\n\n    - MOT1='LINE'(aire) se refere a l'utilisation d'un approximation\n      lineaire de l'acceleration et a son integration consistante.\n      Le defaut pour MOT1 est 'SIMP'.",
  },
  {
    name: "INTE",
    url: "INTE",
    documentation:
      "$$$$ INTE     NOTICE  PASCAL    21/07/15    21:15:01     11076          \n                                             DATE     21/07/15\n\n\n    Operateur INTERSECTION                   Voir aussi:  ET DIFF\n\n    Objet :\n    _______\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Elements communs a deux maillages\n2. Intersection de deux surfaces analytiques\n3. Intersection geometrique de deux maillages\n4. Intersection de deux modeles\n5. Intersection de deux rigidites\n6. Intersection de deux listes de reels\n\n  \n1. Elements communs a deux maillages1 \n==================================== \n    MELE3 = MELE1 'INTER' MELE2  ;\n\n    L'operateur INTERSECTION construit l'intersection de deux maillages,\n    c'est a dire l'ensemble des elements appartenant aux deux maillages.\n\n    Commentaire :\n    _____________\n\n    MELE1 | : maillages en entree\n    MELE2 |\n\n    MELE3   : maillage constitue des elements appartenant aux deux\n              maillages initiaux\n  \n2. Intersection de deux surfaces analytiques \n============================================ \n \n    LIG1  = POIN1 INTER (N1) ('DINI' DENS1 ) ('DFIN' DENS2 )\n\n            ('LONG' DLONG)...\n\n    ...   |'PLAN' P1               | |'PLAN' P2                 | POIN2\n          |'SPHE' CENTR1           | |'SPHE' CENTR2             |\n          |'CYLI' AXEI1  AXEJ1     | |'CYLI' AXEI2   AXEJ2      |\n          |'CONI' SOMM1  P1        | |'CONI' SOMM2   P2         |\n          |'TORI' CENTR1 P1    PC1 | |'TORI' CENTR2  P2     PC2 |\n\n    L'operateur INTERSECTION construit l'arc de courbe, intersection de\n    deux surfaces, compris entre deux points POIN1 et POIN2.\n\n    Commentaire :\n    _____________\n\n    POIN1 | : points extremite de l'arc de courbe genere (type POINT)\n    POIN2 |\n\n    N1      : nombre de segments generes (type ENTIER)\n\n    DENSi   : densites associees aux points extremite de l'arc (type\n              FLOTTANT).\n              le mot-cle 'DINI' permet de definir la densite du premier\n              point et 'DFIN' celle du dernier point.\n\n    DLONG   : longueur de l'arc.\n              le mot-cle 'LONG' permet d'imposer la longueur de l'arc.\n              dans ce cas un nouveau point extremite final est calcule\n              a partir de POIN2 et de LONG.\n\n    Les surfaces peuvent etre planes, spheriques, cylindriques,\n    coniques ou toriques suivant le mot-cle :\n\n    'PLAN'  : surface plane passant par Pi (type POINT)\n    'SPHE'  : surface spherique de centre CENTRi (type POINT)\n    'CYLI'  : surface cylindrique d'axe AXEIi AXEJi (type POINT)\n    'CONI'  : surface conique de sommet SOMMi (type POINT) passant par\n              Pi(type POINT)\n    'TORI'  : surface torique de centre CENTRi (type POINT), d'axe CENTR\n              Pi (type POINT); PCi est le centre d'un petit cercle.\n\n    Remarque :\n    __________\n\n    Si N1 n'est pas specifie, l'arc de courbe est divise en accord avec\n    les densites definies aux points POIN1 et POIN2.\n\n    Si les densites associees aux points POIN1 et POIN2 ne sont pas\n    correctes, il est possible de les surcharger. Pour le premier\n    point donner la bonne valeur derriere la mot-cle 'DINI' et pour le\n    deuxieme point, derriere le mot-cle 'DFIN'.\n\n    Si une ligne LIGi est donnee a la place du point POIN1 (ou POIN2),\n    cette ligne est prolongee jusqu'au point POIN2 (elle commence au\n    point POIN1).\n\n    Si le point POIN2 n'est pas donne, la premiere extremite de la ligne\n    LIGi est prise en compte, ce qui permet de fermer celle-ci.\n  \n3. Intersection geometrique de deux maillages \n============================================= \n \n    MELE1b MELE2b MELE3 MELE4 = 'INTER' 'GEOM' MELE1 MELE2\n\n    L'operateur INTERSECTION construit l'intersection geometrique de\n    deux maillages. Par exemple, l'intersection d'une sphere et d'un\n    plan est un cercle.\n    Cette option est aujourd'hui limitee au cas non-coplanaire de deux\n    surfaces 3D constitu\u00e9e de triangle a 3 noeuds.\n\n    Commentaire :\n    _____________\n\n    MELE1 | : maillages en entree\n    MELE2 |\n\n    MELE1b : maillage issu de MELE1 dont certains elements ont ete\n             coupes par l'intersection avec MELE2\n    MELE3  : maillage decrivant l'intersection geometrique dont les\n             noeuds appartiennent a MELE1b\n    MELE2b et MELE4 : semblables a MELE1b et MELE3 avec des noeuds\n             differents\n\n    'NOVERIF' : Mot cle indiquant de ne pas produire d'erreur si\n                l'intersction est 'VIDE'. Un maillage vide est g\u00e9n\u00e9r\u00e9.\n  \n4. Intersection de deux modeles \n=============================== \n \n    MOD3 = MOD1 INTE MOD2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur INTERSECTION construit l'intersection de deux modeles,\n    c'est a dire l'ensemble des sous-zones appartenant aux deux modeles.\n\n\n    Commentaire :\n    _____________\n\n    MOD1  | : objets de type MMODEL\n    MOD2  |\n\n    MOD3    : objet MMODEL resultat, constitue des sous-zones communes\n              aux deux modeles.\n\n    Remarque : pour les objets MMODEL, l'operation est faite\n    __________ sur les sous-zones. Si l'operation est menee\n               dans le but d'obtenir un modele portant sur\n  \n5. Intersection de deux rigidites \n================================= \n \n    RIG3 = RIG1 INTE RIG2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur INTERSECTION construit l'intersection de deux rigidites,\n    c'est a dire l'ensemble des rigidites elementaires communes.\n\n\n    Commentaire :\n    _____________\n\n    RIG1  | : objets de type RIGIDITE,\n    RIG2  |\n\n    RIG3    : objet RIGIDITE resultat.\n  \n6. Intersection de deux listes de reels \n======================================= \n \n    LRE3 = LRE1 INTE LRE2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur INTERSECTION construit la liste des elements\n    communs a deux listes de reels.\n    Si les deux listes de reels sont ordonnees de la meme facon,\n    cet ordre est respecte en sortie.\n\n\n    Commentaire :\n    _____________\n\n    LRE1  | : objets de type LISTREEL,\n    LRE2  |\n\n    LRE3    : objet LISTREEL resultat.",
  },
  {
    name: "INTG",
    url: "INTG",
    documentation:
      "$$$$ INTG     NOTICE  PASCAL    20/11/13    21:15:05     10778          \n                                             DATE     20/11/13\n                                             \n    Operateur INTG                           Voir aussi : PRIM\n    --------------  \n\n    L'operateur INTG realise l'integration :\n    - d'une composante d'un champ (objet de type CHAMELEM) (syntaxe 1) \n       . soit sur le domaine ou elle est definie, auquel cas le resultat \n         est un nombre, \n       . soit sur chacun des elements (option 'ELEM') auquel cas le \n         resultat est un champ par elements.\n    - de fonction(s) (objet de type EVOLUTION) (syntaxe 2) par la \n      methode des trapezes.\n    \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Integration d'un champ par element\n2. Integration d'une evolution\n\n  \n1. Integration d'un champ par element1 \n===================================== \n    \n      OBJET1  =  INTG  ('ELEM') MODL1 CHAM1 (MOT1) (CAR1) ;\n\n      Commentaire :\n      _____________\n\n      MODL1  : objet modele (type MMODEL).\n\n      MOT1   : nom de la composante (type MOT),\n               inutile si le champ n'a qu'une composante\n\n      CHAM1  : champ contenant la composante qu'on integre (type MCHAML)\n\n      CAR1   : champ de caracteristiques geometriques (type MCHAML,\n               sous-type CARACTERISTIQUES)\n\n      OBJET1 : objet resultat :\n\n               - nombre (type FLOTTANT) si l'integration est realisee\n                 sur le domaine de definition de la composante\n\n               - champ par elements (type MCHAML, sous-type SCALAIRE)\n                 dont les valeurs sont definies aux centres de gravite\n                 si l'integration est realisee sur chacun des elements\n                 (option avec le mot-cle 'ELEM')\n\n      \n      Attention : Pour les coques, le domaine d'integration est la\n      ----------- surface de la coque et pour les poutres, le domaine\n                  d'integration est la ligne moyenne de la poutre.\n                  Si l'on veut integrer sur le volume de ces elements,\n                  il faut donner le champs de caracteristiques\n                  geometriques CAR1 (type MCHAML, sous-type\n                  CARACTERISTIQUES)\n\n\n      Exemples d'applications possibles :\n\n      calcul de la masse, du volume, de l'energie dissipee, etc ...\n      \n  \n2. Integration d'une evolution \n============================== \n \n    \n                                            | LREE1 LREE2 |\n    RESU1  =  INTG  EVOL1 ('ABS') | ('BORN' | FLOT1 FLOT2 |) ;\n                                  |\n                                  | ('INDI' |  ENT1  ENT2 |) ;\n                                            | LENT1 LENT2 |\n \n   Commentaire :\n   _____________\n\n     EVOL1        : fonction a integrer (type EVOLUTION).\n     \n     'ABS'        : mot-cle pour integrer la valeur absolue de la fonction.\n\n     'BORN'       : mot-cle pour preciser les bornes de l'intervalle\n                    d'integration.\n\n     FLOT1, FLOT2 : bornes de l'intervalle d'integration (type FLOTTANT).\n                    Si besoin, la valeur de l'evolution est interpolee\n                    (voir IPOL).\n                    Si FLOT1 > FLOT2, alors les bornes sont inversees et\n                    l'integrale est multipliee par -1.\n\n\n     LREE1, LREE2 : definition de plusieurs intervalles d'integration\n                    en donnant deux listes de bornes (type LISTREEL).\n                    Si besoin, la valeur de l'evolution est interpolee\n                    (voir IPOL).\n                    Si certaines bornes sont donnees dans un ordre decroissant\n                    (FLOT1 > FLOT2), alors les bornes sont inversees et\n                    les integrales correspondantes sont multipliees par -1.\n\n     'INDI'       : mot-cle pour preciser les bornes de l'intervalle\n                    d'integration a l'aide des indices de la liste des\n                    abscisses.\n\n     ENT1, ENT2   : indices de la liste des abscisses definissant les\n                    bornes de l'intervalle d'integration (type ENTIER).\n                    Si ENT1 > ENT2, alors les bornes sont inversees et\n                    l'integrale est multipliee par -1.\n\n     LENT1, LENT2 : listes d'indices de la liste des abscisses definissant\n                    les intervalles d'integration (type LISTENTI).\n                    Si certains indices sont donnes dans un ordre decroissant\n                    (ENT1 > ENT2), alors les bornes sont inversees et les\n                    integrales correspondantes sont multipliees par -1.\n\n\n     RESU1        : objet resultat, dont le type est :\n\n                    - FLOTTANT, si l'on integre une evolution sur 1 intervalle\n                      d'integration.\n\n                    - LISTREEL, si l'on integre une evolution sur plusieurs\n                      intevralles d'integration ou plusieurs evolutions (EVOL1\n                      contient plusieurs courbes) sur 1 interval d'integration.\n\n                    - NUAGE, si on integre plusieurs evolutions sur plusieurs\n                      intervalles d'integration. Dans ce cas, le NUAGE resultat\n                      comporte autant de composantes que d'evolutions, les noms\n                      de composante etant le numero de chaque courbe prefixee\n                      par 'IE' : 'IE1' pour la 1ere, 'IE2' pour la 2e...\n                      Chaque composante contient alors 1 LISTREEL, resultat de\n                      l'integration de l'evolution correspondante sur les\n                      differents intervalles d'integration.\n\n   Remarque : Dans le cas de l'integration de plusieurs evolutions sur plusieurs\n   ---------- intervalles avec l'option INDI, ils faut s'assurer que les indices\n              fournis correspondent bien a ce que l'on attend pour toutes les\n              evolutions. Dans ce cas, il semble preferable que les evolutions\n              aient toutes la meme liste de reels en abscisse.",
  },
  {
    name: "INTK",
    url: "INTK",
    documentation:
      "$$$$ INTK     NOTICE  CHAT      11/09/12    21:16:38     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n INTRODUCTION : PRINCIPES ET NOTIONS DE BASE\n *******************************************\n\n Castem 2000 est un programme de nouvelle generation.\nL'utilisateur dispose de plusieurs notions lui permettant de\nconstruire lui meme l'application qu'il desire dans un langage\nqui lui est familier.\n\n  LE CONCEPT D OBJET NOMME\n  ------------------------\n L'utilisateur resout son probleme en creant des OBJETS qu'il nomme.\nCes objets sont types et ranges dans une base de donnees.\nA tout instant ces objets peuvent etre utilises et retrouves par\nleur nom. Leur type permet de les classer et de savoir comment ils\npeuvent etre manipules par les operateurs.\n\n  LE CONCEPT D'OPERATEUR\n  ----------------------\n\n Les outils utilises pour creer ces objets sont appeles OPERATEURS.\nLes OPERATEURS creent un ou plusieurs objets types a partir d'objets\nexistants fournis par l'utilisateur a l'aide du langage GIBIANE.\n\n  LE LANGAGE GIBIANE\n  -------------------\n\n Le langage GIBIANE permet d'enchainer les operateurs en leur faisant\nlire et ecrire dans la base de donnees.\n\n Le langage permet aussi d'effectuer des boucles et des tests\nlogiques. L'utilisateur peut ainsi batir une application parametree\net meme programmer des algorithmes.\n\n  LE CONCEPT DE PROCEDURE\n  -----------------------\n\n Une fois un algorithme ecrit et teste l'utilisateur peut souhaiter\narchiver cet algorithme pour l'utiliser ulterieurement lui meme ou\nbien pour permettre a d'autres d'utiliser son travail. La PROCEDURE\nlui permet de le faire.\n\n La PROCEDURE s'utilise comme un operateur, qui a partir d'objets\ntypes cree de nouveaux objets.\n\n Cependant la PROCEDURE est ecrite en GIBIANE et peut donc etre\nrealisee par l'utilisateur.\n\n  QUEL TYPE D'ANALYSE PEUT ON FAIRE AVEC CASTEM 2000\n  --------------------------------------------------\n\n Castem 2000 est un outil de calcul de structure complet qui va du\nmailleur GIBI a l'exploitation des resultats en passant par tous les\ntypes de calculs envisageables.\n\n Il s'applique aux problemes mono bi et tri-dimensionnels.\n\n Les operateurs peuvent etre regroupes en plusieurs grandes classes:\n\n---------------------------------------------------------------------\n| TYPE D OPERATEUR                         |    NOM    | DISPONIBLE |\n|-------------------------------------------------------------------|\n| Les operateurs generaux                  |    GENE   |    OUI     |\n|-------------------------------------------------------------------|\n| Les operateurs de maillage               |    GIBI   |    OUI     |\n|-------------------------------------------------------------------|\n| Les operateurs de calcul statique        |    STAT   |    OUI     |\n|-------------------------------------------------------------------|\n| Les operateurs de calcul dynamique       |    DYNA   |     ?      |\n|-------------------------------------------------------------------|\n| Les operateurs de calcul dynamique modal |    OSCAR  |    OUI     |\n|-------------------------------------------------------------------|\n| Les operateurs de calcul non lineaire    |    NONLIN |    OUI     |\n|-------------------------------------------------------------------|\n| Les operateurs de flambement             |    FLAM   |     ?      |\n|-------------------------------------------------------------------|\n| Les operateurs de visualisation          |    CINEMA |    OUI     |\n---------------------------------------------------------------------",
  },
  {
    name: "INT_COMP",
    url: "INT_COMP",
    documentation:
      "$$$$ INT_COMP NOTICE  CHAT      11/09/12    21:16:37     7124           \n                                             DATE     11/09/12\n\n  Procedure IN_COMP                    Voir aussi :\n        -----------------  \n      CHPO1 =  INT_COMP   GEO1   CHPO2  GEO2  \n      \n\n \n        Objet :\n        -------\n \n        Interpolation d'une composante  d'un champ par point sur\n        un maillage \n \n        Commentaire :\n        -------------\n\n        GEO1    maillage  supportant le champ par point initial \n        CHPO2   champ par point a une composante  defini sur GEO1\n        GEO2    maillage support du champ par point de sortie chp1\n\n        Cette procedure utilise l'operateur PROI  qui exige en entree\n        un chamelem , chpo2 est ici converti en utilisant un mmodel \n        de thermique isotrope.\n\n        En sortie :\n        -----------\n   \n         CHPO1   Champ par point resultat de l'interpolation",
  },
  {
    name: "INVA",
    url: "INVA",
    documentation:
      "$$$$ INVA     NOTICE  CHAT      11/09/12    21:16:38     7124           \n                                             DATE     11/09/12\n\n    Operateur INVA                           Voir aussi : SIGM\n    --------------                                        EPSI  \n      CHAM1 CHAM2 CHAM3  =  INVA  MOD1 CHAM4 (CAR1) (MOT1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur INVA calcule les 3 invariants d'un champ de tenseurs\n    de contraintes ou de deformations.\n\n    Le resultat est constitue de 3 champs scalaires. Le support de ces\n    champs est le meme que celui du champ tensoriel CHAM4.\n\n\n      Commentaire :\n      _____________\n\n\n      MOD1  : Objet modele (type MMODEL)\n\n      CHAM4 : champ de tenseurs de contraintes ou de deformations\n              (type MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n      CAR1  : champ de caracteristiques geometriques necessaire pour\n              les elements de coques minces\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n      CHAM1 : premier invariant ( la trace )\n              (type MCHAML, sous-type SCALAIRE)\n\n      CHAM2 : deuxieme invariant ( la somme des produits 2 a 2 )\n              (type MCHAML, sous-type SCALAIRE)\n\n      CHAM3 : troisieme invariant ( le determinant )\n              (type MCHAML, sous-type SCALAIRE)\n\n      MOT1  : mot-cle (type MOT) qui indique pour les coques ou\n              on veut calculer les contraintes ou les deformations:\n\n              'SUPE' : en peau superieure\n              'MOYE' : sur la surface moyenne ( par defaut )\n              'INFE' : en peau inferieure",
  },
  {
    name: "INVE",
    url: "INVE",
    documentation:
      "$$$$ INVE     NOTICE  GOUNAND   16/05/25    21:15:04     8924           \n                                             DATE     16/05/25\n\n    Operateur INVERSE                        Voir aussi : VERS, ORIE\n    -----------------  \n\n    1ere fonction : \n    ---------------\n\n    GEO2 = INVERSE GEO1 ;\n\n    Objet :\n    _______\n\n    L'operateur INVE permet d'inverser l'orientation des elements\n    orientables de GEO1 (type MAILLAGE).\n\n    Remarques :\n    -----------\n\n    Les elements orientables sont les suivants : \n    SEG2, SEG3, TRI3, TRI4, TRI6, TRI7, QUA4, QUA5, QUA8, QUA9, TET4,\n    TE10, TE15, PRI6, PR15, PR21, PYR5, PY13, PY19, CUB8, CU20, CU27\n\n    Dans le cas des lignes (SEG2/SEG3), l'ordre de description des\n    elements est egalement inverse. \n\n    Le maillage d'entree GEO1 peut etre complexe ; les elements ne\n    pouvant etre inverses restant inchanges.\n\n\n    2eme fonction : \n    ---------------\n\n    CHP2 = INVERSE CHP1 ;\n\n    Objet :\n    _______\n\n    L'operateur INVE calcule l'inverse d'un champ par point CHP1 au sens\n    de la multiplication '*'. On cree un champ par point CHP2 semblable\n    a CHP1 et dont les valeurs sont les inverses des valeurs de CHP1.\n    La nature de CHP2 est identique a celle de CHP1.",
  },
  {
    name: "IN_MINI",
    url: "IN_MINI",
    documentation:
      "$$$$ IN_MINI  NOTICE  CHAT      11/09/12    21:16:37     7124           \n                                             DATE     11/09/12\n\n  Procedure   IN_MINI                    Voir aussi :\n      -------------------  \n          appelee par la procedure POT_SCAL\n\n\n        Objet :\n        -------\n        En magnetostatique  calcul du saut de potentiel dans la methode\n        a deux potentiel scalaires couples sur l'interface, elle est\n        appelee par la procedure POT_SCAL.\n ",
  },
  {
    name: "IPOL",
    url: "IPOL",
    documentation:
      "$$$$ IPOL     NOTICE  PASCAL    21/03/03    21:15:27     10911          \n                                             DATE     21/03/03\n\n    Operateur IPOL                           Voir aussi : PROJGRIL VARI\n    --------------  \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Interpolation d'une fonction (EVOLUTION ou 2 LISTREEL)\n    1.1 Syntaxe\n    1.2 Objet\n2. Interpolation d'une TABLE de soustype 'RESULTAT'\n    2.1 Syntaxe\n    2.2 Objet\n    2.3 Exemple\n3. Interpolation d'un NUAGE\n    3.1 Syntaxe\n    3.2 Objet\n    3.3 Exemple\n4. Interpolation d'un CHPOINT d'abscisse curviligne\n    4.1 Syntaxe\n    4.2 Objet\n\n  \n1. Interpolation d'une fonction (EVOLUTION ou 2 LISTREEL)1 \n========================================================= \n  \n1.1 Syntaxe \n----------- \n    OBJET2 = 'IPOL'  OBJET1 | LREEL1 LREEL2 | ...\n                            | EVOL1         | \n\n                  ... | ('SPLI' ('DGAU' FLOT1) ('DDRO' FLOT2)) ;\n                      | 'TOUS';\n  \n1.2 Objet \n--------- \nL'OBJET2 obtenu par interpolation d'une fonction f definie par :\n          LREEL1  : LISTREEL des abscisses {t_i}\n          LREEL2  : LISTREEL des ordonnees correspondantes {f_i}\n        ou par\n          EVOL1   : EVOLUTION scalaire elementaire\n        en l'abscisse OBJET1 de valeur t : OBJET2=f(t)\n\n        OBJET2 a le meme type et les memes caracteristiques que OBJET1.\n        Les types possibles pour OBJET1 sont : - FLOTTANT\n                                               - LISTREEL\n                                               - CHPOINT\n                                               - MCHAML\n\n        Par defaut, l'interpolation lineaire est utilisee et les\n        abscisses doivent imperativement etre rangees par ordre\n        croissant ou decroissant.\n\n      - 'SPLI' : mot-cle permettant de specifier une interpolation par spline\n                 cubique. Dans ce cas, on peut preciser la valeur de la derivee\n                 premiere de la spline sur les bords gauche et droit de son\n                 intervalle de definition avec les mots-cles 'DGAU' et 'DDRO'.\n                 Si la derivee premi\u00e8re n'est pas specifiee, on utilise la\n                 condition naturelle : derivee seconde nulle.\n      Remarque : l'interpolation par spline cubique n'est pas locale,\n                 elle depend de l'ensemble des valeurs de la fonction donnee.\n\n      - 'TOUS' : mot-cle permettant de specifier que la fonction f peut etre\n                 multi-valuee. La suite des abscisses n'est donc pas monotone.\n                 Dans ce cas, OBJET1 est necessairement un FLOTTANT et OBJET2\n                 est un LISTREEL contenant l'ensemble des y tel que y=f(t).\n\n        \n  \n2. Interpolation d'une TABLE de soustype 'RESULTAT' \n=================================================== \n \n  \n2.1 Syntaxe \n----------- \n    OBJET2 = 'IPOL'  TABLE T  ;\n  \n2.2 Objet \n--------- \n        OBJET2 est un CHPOINT ou un MCHAML obtenu par interpolation \n        a partir d'une table de soustype 'RESULTAT' et d'un temps T.\n        Le type de l'objet cree depend du contenu de la table.\n  \n2.3 Exemple \n----------- \n*   La table de sous-type RESULTAT doit etre initialisee par :\n    matab = 'TABLE' RESULTAT ;\n\n*   Puis on doit avoir une suite ordonnee d'indices de type FLOTTANT et\n*   les valeurs pointees doivent etre de meme type (CHPOINT ou MCHAML)\n*   Par exmple :\n    matab. 1.5 = chpo1 ;\n    matab. 3.  = chpo2 ;\n\n*   Et ainsi vous pouvez faire :\n    chpo3  = 'IPOL' matab 2. ;\n\n*   chpo3 est donc ici egal a l'operation :\n    chpo3  = (CHPO1 * (2./3.)) + (CHPO2 * (1./3.))\n        \n  \n3. Interpolation d'un NUAGE \n=========================== \n \n  \n3.1 Syntaxe \n----------- \n    OBJET2 = 'IPOL'  NUA1 OBJET3 | ('GAUSS') ;\n                                 |  'RATIO'  ;\n                                 |  'PID'   (P1) ('ELIM' xtol1);\n                                 |  'GRILL'  ;\n  \n3.2 Objet \n--------- \n        OBJET2 est le resultat de l'interpolation d'une fonction \n        de plusieurs variables definie par un NUAGE.\n\n      + Pour les mots cles 'GAUSS', 'RATIO' et 'PID', il s'agit d'une\n        fonction de n variables a p valeurs scalaires a partir d'un\n        nuage de n+p uplets de scalaires (x,f(x)).\n        x est de dimension n, f(x) est de dimension p.\n        L'OBJET3 est soit un CHPOINT soit un MCHAML dont les noms\n        des composantes correspondent aux noms de n composantes du\n        nuage. Les composantes du champ et du nuage sont\n        necessairement scalaires. OBJET2 est du type de OBJET3.\n        ex: nuage de composantes            'X' 'Y' 'Z' 'T' 'F'\n            champ argument de composantes   'X' 'Z'\n            champ resultat de composantes   'Y' 'T' 'F'\n\n        Deux methodes d'interpolations sont utilisees selon l'option :\n\n        -- Avec les mots cles 'GAUSS' et 'RATIO',\n           la methode utilisee pour l'interpolation est celle des\n           elements finis diffus au premier ordre. Au point dont on\n           veut connnaitre l'image par la fonction, on calcule un\n           hyperplan qui minimise la somme ponderee des carres des\n           differences des valeurs sur tous les points du nuage.\n           La ponderation est obtenue par l'image de la distance entre\n           le point et le noeud par la fonction de ponderation\n           gaussienne (exp(-x**2)) ou rationelle (1/(1+x)).\n\n        -- Avec le mot cle 'PID',\n           il s'agit d'une interpolation par ponderation inverse aux\n           distances. La ponderation de chaque point du nuage est\n           proportionnelle a (1/x**P1) ou x est la distance euclidienne\n           au point cible (sur les composantes connue du champ argument).\n           P1  : (FLOTTANT/ENTIER) parametre de puissance pour la\n                 fonction de ponderation, positif ou nul, egal a 1 par\n                 defaut\n           xtol1 : (FLOTTANT) distance en norme 2 en deca de laquelle,\n                   on considere que le point cible peut etre confondu\n                   avec un point du nuage.\n           L'interpolation est exacte, c'est a dire qu'elle retourne\n           la valeur du nuage si le point cible est un point du nuage.\n           Pour plus d'informations consultez :\n             Shepard, Donald (1968). \"A two-dimensional interpolation\n             function for irregularly-spaced data\". Proceedings of the\n             1968 ACM National Conference: 517-524.\n             https://en.wikipedia.org/wiki/Inverse_distance_weighting\n\n      + Pour le mot cle 'GRILL', le nuage represente une fonction de n\n        variables definie sur une grille de points.\n        L'interpolation est multi-lineaire par morceaux et passe par\n        les points de la grille.\n        Le nuage NUA1 doit alors contenir 1 seul (n+1) uplet ou\n        chaque composante abrite un seul objet LISTREEL.\n        L'OBJET3 est soit un CHPOINT soit un MCHAML dont les noms des\n        composantes correspondent aux nom des n premieres composantes\n        du nuage.\n        Le nuage doit etre definit ainsi :\n        - Pour une grille de dimension n, le nuage doit posseder un\n          seul n+1 uplet\n        - Les n premieres composantes du nuage contiennent les listes,\n          a valeurs croissantes, des coordonnes des noeuds de la grille\n          dans chaque dimension. Ces listes peuvent etre de tailles\n          differentes. Par exemple, une grille de dimension 3 peut\n          contenir 4 points en X, 3 points en Y et 2 points en Z.\n        - La derniere composante du nuage contient la liste des valeurs\n          de la fonction sur tous les points de la grille, rangees\n          dans l'ordre suivant :\n          -- on note F_ijk... la valeur de la fonction pour le point de\n              la grille situe a la i-eme position sur la dimension X,\n                                  j-eme position sur la dimension Y,\n                                  k-eme position sur la dimension Z,\n                                  etc...\n          -- le premier terme est F_111\n          -- la suite est rangee dans l'ordre des i croissants, puis j\n              croissants, puis k croissants, etc ...\n          -- dans le cas de l'exemple precedent, cette liste contient\n             les 4*3*2=24 valeurs rangees ainsi :\n                PROG  F_111  F_211  F_311  F_411\n                      F_121  F_221  F_321  F_421\n                      F_131  F_231  F_331  F_431\n                      F_112  F_212  F_312  F_412\n                      F_122  F_222  F_322  F_422\n                      F_132  F_232  F_332  F_432 ;\n        Les variables associees a chaque dimension peuvent correspondre\n        a n'importe quelle grandeur physique scalaire. Un exemple de\n        mise en donnees est presente ci-apres.\n  \n3.3 Exemple \n----------- \n    option 'GRILL' :\n    On veut definir la fonction de 2 variables sur la grille suivante\n\n       Y\n       ^\n       |      7.6   8.1        -4.1  28.3      0.            84.\n   11  -     O-----O----------O-----O---------O-------------O\n       |     |     |          |     |         |             |\n       |     |     |          |     |         |             |\n       |     |     |          |     |         |             |\n       |     |1.2  |4.3       |7.   |25.      |-1.          |-78.1\n    6  -     O-----O----------O-----O---------O-------------O\n       |     |     |          |     |         |             |\n       |     |4.   |8.        |15.  |16.      |23.          |42.\n    3  -     O-----O----------O-----O---------O-------------O\n       |\n       |\n    0  ------|-----|----------|-----|---------|-------------|-----> X\n       0     1     2          4     5         7             10\n\n    Le nuage peut etre ecrit ainsi :\n    NUA1 = NUAG 'COMP' 'X'    (PROG 1. 2. 4. 5. 7. 10.)\n                'COMP' 'Y'    (PROG 3. 6. 11.)\n                'COMP' 'TOTO' (PROG 4.  8.  15.  16.  23.  42.\n                                    1.2 4.3  7.  25.  -1. -78.1\n                                    7.6 8.1 -4.1 28.3  0.  84.) ;\n  \n4. Interpolation d'un CHPOINT d'abscisse curviligne \n=================================================== \n \n  \n4.1 Syntaxe \n----------- \n    POIN1  = 'IPOL' CHPO1 FLOT1 ;\n  \n4.2 Objet \n--------- \n        D'interpoler un point le long d'une ligne orientee en donnant\n        son champ d'abscisse curviligne (voir COOR).\n\n        CHPO1   : objet CHPOINT, champ d'abscisse curviligne ;\n\n        FLOT1   : objet FLOTTANT, abscisse du point recherche ;\n\n        POIN1   : objet POINT, point interpole.",
  },
  {
    name: "ISOV",
    url: "ISOV",
    documentation:
      "$$$$ ISOV     NOTICE  GOUNAND   14/09/16    21:15:13     8152           \n                                             DATE     14/09/16\n\n\n\n    Operateur ISOVALEUR                      Voir aussi : TRAC   \n    -------------------                                   @ISOSURF  \n    MAIL1 = 'ISOV' CHAM1 | ('EGAL')    | VAL1 ;\n                         |  'EGINFE'   |\n                         |  'EGSUPE'   | \n\n    Objet :\n    _______\n\n    L'operateur ISOVALEUR permet d'obtenir un maillage MAIL1 \n    correspondant aux lieux geometriques ou un champ par element CHAM1\n    prend une valeur donnee VAL1, ou est inferieur (resp. superieur) \n    ou egal a VAL1 (mots-cl\u00e9s 'EGINFE' (resp. 'EGSUPE')).\n\n    Commentaire :\n    _____________\n\n      MAIL1 : Maillage (type MAILLAGE) representant l'isovaleur.\n\n      CHAM1 : Champ par element (type MCHAML) dont on veut calculer \n              une isovaleur.\n\n      VAL1  : Valeur (type FLOTTANT) de l'isovaleur voulue. \n\n    Note :\n    ______\n\n      Pour l'instant, l'operateur ne fonctionne que si le maillage \n      sous-jacent a CHAM1 est constitue des elements lineaires :\n      POI1, SEG2, TRI3, TET4, CUB8.\n\n      Les options EGINFE et EGSUPE ne fonctionnent pas pour les CUB8.",
  },
  {
    name: "ISSLEQ",
    url: "ISSLEQ",
    documentation:
      "$$$$ ISSLEQ   NOTICE  AF221230  15/12/04    21:15:16     8718           \n                                             DATE     15/12/04\n\n    procedure ISSLEQ                          Voir aussi : DECONV3D \n    ------------------  \n   ISSLEQ TDON1\n\n\nObjet :\n-------\n\nProcedure pour appliquer la methode lineaire equivalent aux problemes ISS et\naux problemes de propagation des ondes. Le calcul est fait dans le domaine\ntemporelle.\nOn peut definir deux types des domaines pour le sol:\n- CONSTANTE: sous-domaine non affect\u00e9 par les iterations;\n      l'option \u00e0 utiliser est 'ISS_COMP_SIMP'.\n- ITERATION: sous-domaine affect\u00e9 par les iterations;\n      l'option \u00e0 utiliser est 'ISS_COMPLET'.\n\nDe plus, on peut integrer dans le calcul la presence de la structure\npar la sous-table STRUCTURE. Ici on pourrait aussi ajouter les eventuelles \nblocages mecaniques \u00e0 integrer dans le modele sol.\n\nCommentaire :\n-------------\n\n\nEn entree :\n-----------\n\n  TDON1               :Table des donnees (type TABLE)\n       .'SOL'             :sous-table pour definir les \n                           donnees du profil \n                           du sol (type TABLE)\n          .'ITERATION'       :sous table pour la partie du\n                              sol \u00e0 iterer (type TABLE)\n                .I              : couche I (type TABLE)          \n                  .'MAILLAGE'        :maillage de la couche I\n                                      (type MAILLAGE)\n                  .'FRONTIERE'       :frontiere de la couche I \n                                      (type MAILLAGE)\n                  .'MASSE_VOLUMIQUE' :masse volumique de la couche I\n                                      (type FLONNTANT)\n                  .'POISSON'         :coefficient de poisson de la \n                                      couche I (type FLOTTANT)\n                  .'G_GAMMA'         :evolution de la courbe \n                                      caracteristique G/G0-gamma \n                                      (type EVOLUTION)\n                  .'H_GAMMA'         :evolution de la courbe \n                                      caracteristique Eps-gamma \n                                      (type EVOLUTION)\n                  .'BASE'            :frontiere inferieure de la \n                                      derniere couche qui compose\n                                      la stratigraphie (type MAILLAGE)\n                                      a introduire une seule fois pour\n                                      la dernier couche\n          .'CONSTANTE'       :sous table pour la partie du\n                              sol \u00e0 iterer (type TABLE)\n                .I              : couche I (type TABLE)    \n                  .'MAILLAGE'        :maillage de la couche I\n                                      (type MAILLAGE)\n                  .'FRONTIERE'       :frontiere de la couche I \n                                      (type MAILLAGE)\n                  .'MASSE_VOLUMIQUE' :masse volumique de la couche I\n                                      (type FLONNTANT)\n                  .'POISSON'         :coefficient de poisson de la \n                                      couche I (type FLOTTANT)\n                  .'AMORTISSEMENT'   :amortissement\n                                      couche I (type FLOTTANT)\n       .'STRUCTURE'       :sous-table pour definir les donnees\n                           de la structure (type TABLE) (facultatif)\n          .'MAILLAGE'            :maillage de la structure \n                                  (type MAILLAGE)\n          .'RIGIDITE'            :rigidit\u00e9 de la structure\n                                  (type RIGIDITE)\n          .'MASSE'               :masse de la structure\n                                  (type RIGIDITE)\n          .'AMORTISSEMENT'       :amortissement de la structure\n                                  (type RIGIDITE)\n          .'BLOCAGES_MECANIQUES' :tout type des blocages mecaniques\n                                  supplementaires (type RIGIDITE)\n       .'PARAMETRES'       :sous TABLE pour definir les parametres\n                            du calcul (type TABLE)\n          .'GAMMAO_X'      :evolution de l\u2019acceleration selon \n                            la direction x (type EVOLUTION)\n          .'GAMMAO_Y'      :evolution de l\u2019acceleration selon\n                            la direction y (type EVOLUTION)\n          .'GAMMAO_Z'      :evolution de l\u2019acceleration selon\n                            la direction z (type EVOLUTION)\n                            [seulement une des trois evolution \n                                est necessaire]\n          .'POINT'         :point de reference (type POINT)\n          .'CRITERE'       :critere de convergence pour le \n                            calcul lineaire equivalent (type FLOTTANT)\n                            (default 0.05)\n          .'CHI'           :coefficient pour la deformation moyenne \n                            gamma_m (type FLOTTANT)\n          .'F1'            :premiere frequence pour modele \n                            d amortissement de Rayleigh \n                            (type FLOTTANT)\n          .'F2'            :premiere frequence pour modele\n                            d amortissement de Rayleigh \n                            (type FLOTTANT)\n          .'FC'            :premiere de coupure du signal\n                            (type FLOTTANT)\n          .'TYPE'          :type de frontiere absorbante (LYSMER \n                            ou WHITE) (type MOT) (defaut LYSMER)\n          .'PAR_DEC'       :sous-table \u00e0 donner pour la procedure\n                            DECONV3D - voir la notice correspondante\n                            (P_GAM sous-table) (facultatif)\n          .'TYPE_CALCUL'   : type de calcul \u2018ISS_COMPLET\u2019 (type MOT)\n                                    tout le sol est \u00e0 considere comme\n                                    domaine \u00e0 iterer. La sous-table\n                                    ITERATION dans la table SOL est\n                                    obligatoire\n                             type de calcul \u2018ISS_COMP_SIMP\u2019 (type MOT)\n                                    une partie du sol est considere\n                                    comme domaine \u00e0 iterer et une \n                                    partie constante. La sous table\n                                    ITERATION dans la table SOL et la\n                                    sous table CONSTANTE dans la table\n                                    SOL sont obligatoires\n\nEn sortie :\n-----------\n  TDON1               :Table des donnees (type TABLE)\n       .'STEP \"J\"'        :sous-table des resultats \n                           pour chaque iteration (type TABLE) J=0..N\n          .'ITERATION'       :sous table pour la partie du\n                              sol \u00e0 iterer (type TABLE)\n                .'T_SOL'        :sous-table avec les maillages des \n                                 couche\n                   .I               : couche I (type MAILLAGE)\n                .'T_ESO'        :sous-table avec les mchaml pour \n                                 les module E des couches\n                   .I               : couche I (type MCHAML)\n                .'T_MOD'        :sous-table avec les modeles pour \n                                 les couches\n                   .I               : couche I (type MMODEL)\n                .'T_GGO'        :sous-table avec les mchaml pour \n                                 les rapports G/G0 des couches\n                   .I               : couche I (type MCHAML)\n                .'T_MAT'        :sous-table avec les materiaux pour \n                                 les couches\n                   .I               : couche I (type MCHAML)\n                .'T_RIG'        :sous-table avec les rigites pour \n                                 les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_MAS'        :sous-table avec les masses pour \n                                 les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_KSI'        :sous-table avec les amortissements\n                                 pour les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_AMO'        :sous-table avec les matrices \n                                 d amortissement amortissements\n                                 pour les couches\n                   .I               : couche I (type MCHAML)\n                .'T_DIS'        :sous-table avec les champs des \n                                 deformations maximales pour chaque\n                                 couche\n                   .I               : couche I (type MAILLAGE)\n                .'O_SOL'        :Assemblage des maillages pour\n                                 la partie \u00e0 iterer (type MAILLAGE)\n                .'O_MOD'        :Assemblage des MMODEL pour\n                                 la partie \u00e0 iterer (type MMODEL)\n                .'O_GGO'        :Assemblage des MCHAML G/G0 pour\n                                 la partie \u00e0 iterer (type MCHAML)\n                .'O_MAT'        :Assemblage des materiaux pour\n                                 la partie \u00e0 iterer (type MCHAML)\n                .'O_RIG'        :Assemblage des rigidit\u00e9s pour\n                                 la partie \u00e0 iterer (type RIGIDITE)\n                .'O_MAS'        :Assemblage des masses pour\n                                 la partie \u00e0 iterer (type RIGIDITE)\n                .'O_KSI'        :Assemblage des MCHAML Eps pour\n                                 la partie \u00e0 iterer (type MCHAML)\n                .'O_AMO'        :Assemblage des amortissements pour\n                                 la partie \u00e0 iterer (type RIGIDITE)\n                .'O_DIS'        :Assemblage des MCHAML Dmax pour\n                                 la partie \u00e0 iterer (type MCHAML)\n          .'CONSTANTE'       :sous table pour la partie du\n                              sol constante (type TABLE)\n                .'T_SOL'        :sous-table avec les maillages des \n                                 couche\n                   .I               : couche I (type MAILLAGE)\n                .'T_ESO'        :sous-table avec les mchaml pour \n                                 les module E des couches\n                   .I               : couche I (type MCHAML)\n                .'T_MOD'        :sous-table avec les modeles pour \n                                 les couches\n                   .I               : couche I (type MMODEL)\n                .'T_GGO'        :sous-table avec les mchaml pour \n                                 les rapports G/G0 des couches\n                   .I               : couche I (type MCHAML)\n                .'T_MAT'        :sous-table avec les materiaux pour \n                                 les couches\n                   .I               : couche I (type MCHAML)\n                .'T_RIG'        :sous-table avec les rigites pour \n                                 les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_MAS'        :sous-table avec les masses pour \n                                 les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_KSI'        :sous-table avec les amortissements\n                                 pour les couches\n                   .I               : couche I (type RIGIDITE)\n                .'T_AMO'        :sous-table avec les matrices \n                                 d amortissement amortissements\n                                 pour les couches\n                   .I               : couche I (type MCHAML)\n                .'T_DIS'        :sous-table avec les champs des \n                                 deformations maximales pour chaque\n                                 couche\n                   .I               : couche I (type MAILLAGE)\n                .'O_SOL'        :Assemblage des maillages pour\n                                 la partie constante (type MAILLAGE)\n                .'O_MOD'        :Assemblage des MMODEL pour\n                                 la partie constante (type MMODEL)\n                .'O_GGO'        :Assemblage des MCHAML G/G0 pour\n                                 la partie constante (type MCHAML)\n                .'O_MAT'        :Assemblage des materiaux pour\n                                 la partie constante (type MCHAML)\n                .'O_RIG'        :Assemblage des rigidit\u00e9s pour\n                                 la partie constante (type RIGIDITE)\n                .'O_MAS'        :Assemblage des masses pour\n                                 la partie constante (type RIGIDITE)\n                .'O_KSI'        :Assemblage des MCHAML Eps pour\n                                 la partie constante (type MCHAML)\n                .'O_AMO'        :Assemblage des amortissements pour\n                                 la partie constante (type RIGIDITE)\n                .'O_DIS'        :Assemblage des MCHAML Dmax pour\n                                 la partie constante (type MCHAML)\n          .'TOTALE'       :sous table pour l assemble des deux parties\n                           CONSTANTE + ITERER (type TABLE)\n                   .I               : couche I (type MAILLAGE)\n                .'O_SOL'        :Assemblage des maillages (type MAILLAGE)\n                .'O_MOD'        :Assemblage des MMODEL (type MMODEL)\n                .'O_GGO'        :Assemblage des MCHAML G/G0 (type MCHAML)\n                .'O_MAT'        :Assemblage des materiaux (type MCHAML)\n                .'O_RIG'        :Assemblage des rigidit\u00e9s (type RIGIDITE)\n                .'O_MAS'        :Assemblage des masses (type RIGIDITE)\n                .'O_KSI'        :Assemblage des MCHAML Eps (type MCHAML)\n                .'O_AMO'        :Assemblage des amortissements (type RIGIDITE)\n                .'O_DIS'        :Assemblage des MCHAML Dmax (type MCHAML)\n       .'STRUCTURE'       :sous-table pour definir les \n                           donnees de la structure (type TABLE)\n          .'MAILLAGE'            :maillage de la structure \n                                  (type MAILLAGE)\n          .'RIGIDITE'            :rigidit\u00e9 de la structure\n                                  (type RIGIDITE)\n          .'MASSE'               :masse de la structure\n                                  (type RIGIDITE)\n          .'AMORTISSEMENT'       :amortissement de la structure\n                                  (type RIGIDITE)\n          .'BLOCAGES_MECANIQUES' :tout type des blocages mecaniques\n                                  supplementaires (type RIGIDITE)\n       .'RES_DYN_X'              :Table des resultats du calcul DYNAMIC\n\nRemarques :\n-----------\n\n1) La procedure ne permet pas le caclul en 2D.\n\n\nReference:\n----------",
  },
  {
    name: "ITER",
    url: "ITER",
    documentation:
      "$$$$ ITER     NOTICE  CHAT      11/09/12    21:16:39     7124           \n                                             DATE     11/09/12\n\n    Operateur ITERER                         Voir aussi : REPE\n    ----------------  \n    ITERER  BLOC1;\n\n\n    Objet :\n    _______\n\n    L'operateur ITERER sert a interrompre l'execution du bloc\nREPETER BLOC1.\n\n    Le controle est rendu a l'instruction  FIN BLOC1 qui, suivant la\nvaleur du compteur associe au bloc, reiterera ou non celui-ci.\n\n    Exemple :\n    _________\n\n    Impression des premiers nombres impairs.\n\n         I=0;\n         J= 0;\n         AA = MOT ' ER';\n         BB= MOT ' NOMBRE IMPAIR EST'  ;\n         REPETER  B1 20;\n         I=I+1;\n         SI ( (I / 2 * 2 )  EGA I);\n*-------------------------\n             ITERER B1;\n*-------------------------\n         FINSI;\n         J=J+1;\n         MESSAGE  ' LE ' J AA BB I ;\n         AA = MOT 'EME';\n         FIN B1;",
  },
  {
    name: "ITRC",
    url: "ITRC",
    documentation:
      "$$$$ ITRC     NOTICE  CHAT      11/09/12    21:16:40     7124           \n                                             DATE     11/09/12\n \n  Operateur ITRC                           Voir aussi :\n    --------------   \n        CHDIST MINTER =  ITRC CHOLD CHNEW TOL TAB1  ; \n \n    Objet : \n    _______ \n \n    L'operateur ITRC calcule, par une methode analytique exacte,  \n    l'intersection entre des segments et les facettes triangulaires d'un \n    maillage. \n \n    Il fournit les distances de connection ainsi que le maillage forme \n    des points d'intersection. \n    Cet operateur remplace la procedure @INTERC. \n \n \n    Commentaire : \n    _____________ \n \n  \n     en entree : \n     ----------- \n \n     CHOLD  : coordonnees des points extremites initiales des segments \n              (type CHPOINT a 3 composantes) \n \n     CHNEW  : coordonnees des points extremites finales des segments \n              (type CHPOINT a 3 composantes appuye sur le meme support \n              que CHOLD) \n \n     TOL    : tolerance (type FLOTTANT) \n \n     TAB1   : table qui doit contenir les parametres suivants en entree \n \n                tab1.<chamx1 | \n                tab1.<chamy1 | \n                tab1.<chamz1 |      \n                             | \n                tab1.<chamx2 | \n                tab1.<chamy2 |---> Cf @rmcooro \n                tab1.<chamz2 |     \n                             | \n                tab1.<chamx3 | \n                tab1.<chamy3 | \n                tab1.<chamz3 |  \n                             | \n                tab1.<cosx   | \n                tab1.<cosy   |---> Cf @rmnorm \n                tab1.<cosz   |     \n \n     en sortie : \n     ----------- \n  \n     CHDIST : distance de connexion (distance entre point initial du \n              segment et le point d'intersection a la facette) ou valeur du \n              pas si au cas ou il n'y a pas d'intersection (type CHPOINT).  \n              Il s'appuie sur le maillage support de CHOLD. \n \n     MINTER : maillage forme des noeuds du maillage support de  \n              CHOLD intersectes (type MAILLAGE). \n               \n     Remarques : \n     --------- \n \n     CHOLD, CHNEW, CHDIST sont des chpoints definis sur un  \n     maillage reduit qui est forme des noeuds de OMBRE qui n'ont pas encore \n     ete interceptes. \n \n     Le maillage cree MINTER est compose d'elements de type POI1. \n    \n     Cet operateur remplace la procedure @INTERC. \n \n\n \n ",
  },
  {
    name: "JACO",
    url: "JACO",
    documentation:
      "$$$$ JACO     NOTICE  CHAT      11/09/12    21:16:40     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur JACOBIEN                       Voir aussi :\n    ------------------  \n    CHAM = JACOBIEN MODL1\n\n\n    Objet :\n    _______\n\n    L'operateur JACOBIEN permet de calculer la valeur absolue des\n   jacobiens aux points d'integration des elements de l'objet affecte\n    ou du modele .\n\n\n    Commentaire :\n    _____________\n\n    MODL1: objet modele (type MMODEL)\n\n    CHAM : objet resultat (type MCHAML, sous-type SCALAIRE)",
  },
  {
    name: "JEU",
    url: "JEU",
    documentation:
      "$$$$ JEU      NOTICE  CHAT      11/09/12    21:16:40     7124           \n                                             DATE     11/09/12\n\n    Procedure JEU                            Voir aussi : RELA\n    -------------                                         DEPI  \n    CHPO1 =  JEU   RIG1  ;\n\n\n    Objet :\n    _______\n\n    La procedure JEU permet de calculer le second membre correspondant\n    a un jeu entre deux solides et associe aux relations liant les\n    degres de liberte de ces solides et traduisant le contact possible.\n\n    Commentaires :\n    ______________\n\n    RIG1   : objet de type RIGIDITE, de sous-type BLOCAGE, definissant\n             les relations imposees aux degres de liberte des solides.\n\n    CHPO1  : resultat (type CHPOINT), qu'il convient d'additionner\n             au second membre (forces en mecanique) avant d'effectuer\n             la resolution.",
  },
  {
    name: "JONC",
    url: "JONC",
    documentation:
      "$$$$ JONC     NOTICE  MB234859  17/10/02    21:15:15     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur JONCT                          Voir aussi :\n    ---------------  \n    ATTA1 = JONC  STRU1 MOT1 LREEL1 ...   ( STRU2 MOT2 LREEL2 ... )\n                ( STRU3 MOT3 LREEL3 ... ) ( STRU4 MOT4 LREEL4 ... ) ...\n\n\n    Objet :\n    _______\n\n    L'operateur JONCT fabrique un objet de type ATTACHE decrivant\nla liaison entre plusieurs elements de structure.\n\n    Cette liaison est definie par un nombre quelconque de liaisons\nelementaires.\n\n    Commentaire :\n    _____________\n\n\n    STRUi  : element de structure fabrique par l'operateur ELST.\n             (type ELEMSTRU)\n\n    MOTi   : nom de l'inconnue en un point de STRUi (type MOT),\n             a choisir parmi les deplacements UX, UY, ou UZ,\n             les rotations RX, RY ou RZ, les forces FX, FY ou FZ,\n             les moments MX, MY ou MZ.\n\n    LREELi : liste des coefficients appliques aux points de\n             STRUi (autant de coefficients que de points)(type\n             LISTREEL).\n             Si STRUi comporte un seul point, on peut remplacer\n             le LREELi par un FLOTTANT.",
  },
  {
    name: "KBBT",
    url: "KBBT",
    documentation:
      "$$$$ KBBT     NOTICE  CHAT      11/09/12    21:16:41     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur KBBT                           Voir aussi : NAVI KMAB\n    --------------                                        KMBT  DUDW  \n                                                          EQEX  \n    SYNTAXE ( EQEX ) :   Cf operateur EQEX                 \n    __________________\n\n\n      'OPER'  'KBBT' coef <beta>     'INCO' 'UN' 'PRES'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n L'operateur KBBT discretise les termes Div U et Grad P par une methode\nd'elements finis, de sorte que le systeme obtenu reste symetique.\n                                                 ---------------\n\n    Commentaires\n    ____________\n\n     coef    coefficent multiplicateur\n             FLOTTANT\n             ou CHPOINT SCAL SOMMET  (porosite volumique)\n             ou CHPOINT VECT SOMMET  (porosite directionnelle)\n             ou MOT\n\n     beta    parametre de stabilisation pour les elements lineaires\n             FLOTTANT ou MOT\n\n     UN      Champ de vitesse\n             CHPOINT VECT SOMMET ou MOT\n\n     PRES    Champ de pression\n             CHPOINT SCAL CENTRE   ou MOT\n             CHPOINT SCAL CENTREP1 ou MOT\n             CHPOINT SCAL CENTREP0 ou MOT\n             le type doit etre precise dans les options mot cle INCOD\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n champ dans la table INCO a l'indice MOT.\n\n\n    Complements d'information :\n    ___________________________\n\n\n Soit le systeme d'equations de type Stokes ou Navier-Stokes regissant\nl'ecoulement d'un fluide incompressible et visqueux.\n\n A U + Grad P = F       : equation de quantite de mouvement\n\n -Div U       = 0       : equation de conservation de la masse\n\n ou U et P sont respectivement la vitesse et la pression\n A est un operateur inversible (en general l'operateur de diffusion/\n convection)\n\n\n Dans la formulation variationelle retenue le terme Grad P\nest integre par partie ce qui conduit si A est symetrique a un systeme\ndiscretise symetrique (cas Stokes) en ecrivant l'equation de continuite:\n\n   - Div U = 0  .\n\n        t\n | A  -B |(U)  (F)\n |       |( ) =( )\n |-B   0 |(P)  (0)\n\n     t                    /\n ou B est la matrice  de  | P Div W dv\n                          |v\n                                       (W fonction test pour la vitesse)\n\n                          /\n    B est la matrice  de  | q Div V dv\n                          |v\n                                      (q fonction test pour la pression)\n\nL'operateur KBBT construit donc les matrices elementaires correspondant\naux operateurs B et Bt (seule B est stokee)\n\n ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n REMARQUE : Compte tenu du changement de signe de la deuxieme equation\n        un eventuel terme source devra etre affecte d'un signe negatif.\n ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n\n\n  1/ Conditions limites induites :\n\n En integrant par partie et en utilisant le theoreme de la divergence\n on a :\n\n   /                /            /\n   | W*Grad P dv =  | W P n ds - | P Div W dv\n   |v               |s           |v\n\n L'integrale de surface est omise ce qui conduit a la condition limite\n par defaut :\n\n   /\n   | W P n ds = 0   (n normale exterieure)\n   |s\n\n Ceci est a completer des conditions limites induites par d'autres\n operateurs integres par partie.\n Voir l'operateur TOIM pour imposer une valeur non nulle.\n\n  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n  2/ Si toutes les vitesses normales sont imposees (nulles ou non) sur\n     les frontieres, il faut IMPERATIVEMENT imposer la pression en un\n     point. C'est le cas pour tout ecoulement d'un fluide incompressible\n     en cavite fermee.\n :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n\n  3/ Si le coefficient est de type CHPOINT SCAL SOMMET\n    (Porosite volumique H) On calcule :\n\n   /                  /            /                 /\n   | W*H*Grad P dv =  | WHP n ds - | P H Div W dv  - | P W Grad H  dv\n   |v                 |s           |v                |v\n\n\n  4/ Si le coefficient est de type CHPOINT VECT SOMMET\n    (Porosite surfacique ou directionnelle Hi ) On calcule :\n\n   /                   /              /                  /\n   | W*Hi*Grad P dv =  | WHi P n ds - | P Hi Div W dv  - | P W Grad Hi dv\n   |v                  |s             |v                 |v\n\n\n\n    Options : (EQEX)\n    _________\n\n    OPTI INCOD CENTRE\n               CENTREP1\n               CENTREP0",
  },
  {
    name: "KCHA",
    url: "KCHA",
    documentation:
      "$$$$ KCHA     NOTICE  MAGN      06/11/23    21:15:22     5573           \n                                             DATE     06/11/23\n\n   Op\u00e9rateur KCHA                            Voir aussi : DOMA CHAN\n   --------------  \n\n          1)  CHPO1 = 'KCHA' MODL1 CHAM1 'CHPO' ('QUAF')\n\n\n          2)  CHAM1 = 'KCHA' MODL1 CHPO1 'CHAM' ('QUAF')\n\n\n    Objet :\n    _______\n\n    Cet op\u00e9rateur permet de faire la correspondance entre un CHAMELEM\n    constant par \u00e9l\u00e9ment et un CHAMP-POINT appuy\u00e9 aux centres des\n    \u00e9l\u00e9ments.\n\n    -----------------------------------------------------------------\n    | 1\u00e8re possibilit\u00e9 : cr\u00e9ation d'un CHPO centre avec un CHAMELEM |\n    -----------------------------------------------------------------\n\n\n\n\n    Commentaire :\n    _____________\n\n    CHAM1   : Champ par \u00e9l\u00e9ment (type 'CHAMELEM')\n\n    CHPO1   : Champ par points (type 'CHPOINT')\n\n    MODL1   : Objet mod\u00e8le d\u00e9crivant la formulation utilis\u00e9e (cf MODE)\n\n    'CHPO'  : Mot-clef pr\u00e9cisant l'op\u00e9ration\n\n    'QUAF'  : Mot-clef pr\u00e9cisant que le maillage support est un QUAF\n\n\n    -----------------------------------------------------------------\n    | 2\u00e8me possibilit\u00e9 : cr\u00e9ation d'un CHAMELEM avec un CHPO centre |\n    -----------------------------------------------------------------\n\n\n\n\n    Commentaire :\n    _____________\n\n    CHAM1   : Champ par \u00e9l\u00e9ment (type 'CHAMELEM')\n\n    CHPO1   : Champ par points (type 'CHPOINT')\n\n    MODL1   : Objet mod\u00e8le d\u00e9crivant la formulation utilis\u00e9e (cf MODE)\n\n    'CHAM'  : Mot-clef pr\u00e9cisant l'op\u00e9ration\n\n    'QUAF'  : Mot-clef pr\u00e9cisant le choix du maillage support\n\n\n    Remarques :\n    ___________\n\n    1. CHAM1 doit \u00eatre constant par \u00e9l\u00e9ment et toutes ses composantes\n       doivent \u00eatre de type scalaire.\n\n    2. CHPO1 est de nature 'DIFFUSE'.\n\n    3. En pr\u00e9sence du mot-clef 'CHAM', le maillage support du CHAMELEM\n       g\u00e9n\u00e9r\u00e9 sera le maillage QUAF. En son absence, c'est le maillage\n       de base (par ex. QUA4) qui sera point\u00e9 par le CHAMELEM.\n       L'usage de cette option d\u00e9pend de l'op\u00e9rateur auquel on destine\n       le CHAMELEM \u00e0 cr\u00e9er.",
  },
  {
    name: "KCHT",
    url: "KCHT",
    documentation:
      "$$$$ KCHT     NOTICE  CHAT      11/09/12    21:16:41     7124           \n                                             DATE     11/09/12\n\n     Operateur KCHT                          Voir aussi : MODE\n     --------------                                       DOMA  \n\n     CHPO1 = KCHT | MOD1 | MOT1 MOT2 ('VERIF') ('COMP' MOTi) ...\n                  | TAB1 |\n                           ... | FLOT1 | (CHPO2 ... CHPOn);\n                               | VEC1  |\n\n\n     Objet :\n     _______\n\n     Cree un CHPOINT s'appuyant sur un des supports geometriques (SPG) \n     du modele ou d'une table DOMAINE.\n             \n\n     Commentaires :\n     ______________\n\n      MOD1 : objet MMODEL type 'NAVIER_STOKES' ou 'DARCY'\n\n      TAB1 : TABLE DOMAINE\n\n      MOT1 : | 'SCAL' |   MOT2 : | 'SOMMET'   |\n             | 'VECT' |          | 'FACE'     |\n                                 | 'CENTRE'   |\n                                 | 'CENTREP1' |\n                                 | 'MSOMMET'  |\n\n      'VERIF' : Mot cle indiquant que l'on veut un echo des composantes\n                initialisees\n\n      'COMP'  : Mot cle indiquant que l'on va nommer les composantes\n                MOTi : noms que l'on affecte aux composantes \n\n      FLOT1   : valeur initiale donnee au CHPOINT si MOT1 = 'SCAL' \n\n      VEC1    : valeur initiale (de type POINT) donnee au CHPOINT \n                si MOT1 = 'VECT'  \n\n      CHPO2   : CHPOINT d'initialisation\n       ...      Les valeurs des points de CHPOn contenus dans le support\n      CHPOn     geometrique (DOMAINE) seront prises comme valeurs \n                initiales et surchageront le cas echeant FLOT1 ou VEC1\n                et CHPOn-1\n\n      CHPO1   : CHPOINT resultat\n\n\n     Complements d'information :\n     ___________________________\n\n 1/  Le CHPOINT est une collection de valeurs associees a des points.\n     On peut associer a chaque point une ou plusieurs valeurs (SCALAIRE,\n     VECTEUR etc..). Les champs representes par un CHPOINT peuvent etre\n     continus ou discontinus ou bien encore pour les champs vectoriels\n     defini par leur flux. On a choisi dans le cadre du domaine\n     d'application lie a la mecanique des fluides de pouvoir representer\n     ces trois types de champ a l'aide de la meme structure de CHPOINT.\n     La difference n'intervient que par les points sur lesquels s'appuie\n     le CHPOINT. Il y a donc quatre classes de points distinguees\n     uniquement par leur localisation. Ce sont les points SOMMET,FACE,\n     CENTRE ou CENTREP1 (3 points definissant une pression lineaire en\n     2D pour chaque element, 4 points en 3D),\n\n     Les SPG (support geometrique des espaces discrets) des CHPOINTs\n     crees par KCHT sont pris dans cette liste\n     Une verification de la coherence consiste a comparer les SPG\n     des CHPOINTs et ceux du modele.\n\n 2/  On peut se servir de KCHT pour affecter le bon SPG a un CHPOINT.\n                                                                                ",
  },
  {
    name: "KCOT",
    url: "KCOT",
    documentation:
      "$$$$ KCOT     NOTICE  CHAT      11/09/12    21:16:41     7124           \n                                             DATE     11/09/12\n\n  Operateur KCOT                          Voir aussi :\n     --------------  \n             CHPC = KCOT OBJDOM ;\n             \n\n\n      OBJET   : Cree un CHAMPOINT CENTRE contenant les informations\n                decrites ci dessous, sur les elements du domaine.\n\n\n      OBJDOM : TABLE de SOUSTYPE DOMAINE\n\n      AVIS IMPORTANT ;\n\n      Ces informations sont destinees aux operateurs de discretisation\n      et sont rangees dans un ordre particulier.\n\n  Les dimensions du tableau sont : (DIME NBEL)  DIME=8  en 2D\n                                                DIME=13 en 3D\n  et il contient :\n\n   pour un SEG2 la longueur de l'element (XML) et la matrice P(2,2) en 2D\n                                                             P(3,3) en 3D\n   pour un TRI3 XML,XMH,AJ1/XML,AJ2/XML, et la matrice P(2,2) en 2D\n                                                       P(3,3) en 3D\n   pour un QUA4 IDEM\n   pour un CUB8 XML XMH XME et la matrice P\n   pour un PRI6 IDEM\n\n ***********************************************************************\n    MATRICE P\n        LA MATRICE DE ROTATION DU REPERE GLOBALE VERS LE REPERE LOCAL\n    DEFINI PAR DEUX OU TROIS POINTS PRIS DANS XYZ SUIVANT QU'ON EST\n    EN 2D OU EN 3D\n    ON PREND P1 P2 ET PNP\n\n      U                TEL QUE T SOIT DIRIGE SUIVANT P1P2 V TOURNE VERS\n      .     .V          P1PNP ET U = T VECTORIEL V\n      .   .\n      . .                             __       __\n  (P1). . . . .T (P2)                | tx ty tz  |\n                                     |           |\n   ON A ALORS WL= P WG          P  = | vx vy vz  |\n                                     |           |\n                                     | ux uy uz  |\n                                     |__       __|",
  },
  {
    name: "KCTR",
    url: "KCTR",
    documentation:
      "$$$$ KCTR     NOTICE  CHAT      11/09/12    21:16:41     7124           \n                                             DATE     11/09/12\n\n  Operateur KCTR                          Voir aussi :\n     --------------  \n\n\n\n   Remplace par l'option 'CENTRE' de l'operateur DOMA.",
  },
  {
    name: "KDIA",
    url: "KDIA",
    documentation:
      "$$$$ KDIA     NOTICE  CHAT      11/09/12    21:16:41     7124           \n                                             DATE     11/09/12\n\n  Directive KDIA                           Voir aussi :\n    --------------  \n              KDIA RV ;\n\n\n    OBJET :\n\n      Cet operateur construit une table de sous type KIZD contenant les\n      diagonales et la place dans la table RV a l'indice KIZD.\n     \n\n      RV table de sous-type EQEX",
  },
  {
    name: "KDME",
    url: "KDME",
    documentation:
      "$$$$ KDME     NOTICE  CHAT      11/09/12    21:16:42     7124           \n                                             DATE     11/09/12\n\n  Operateur KDME                          Voir aussi :\n     --------------  \n\n\n\n      OBJET   : Cree un CHAMPOINT CENTRE contenant le diametre max des\n                elements du domaine\n\n      SYNTAXE : CHPC = KDME OBJDOM ;\n\n                       OBJDOM : TABLE de SOUSTYPE DOMAINE",
  },
  {
    name: "KDMI",
    url: "KDMI",
    documentation:
      "$$$$ KDMI     NOTICE  CHAT      11/09/12    21:16:42     7124           \n                                             DATE     11/09/12\n\n  Operateur KDMI                          Voir aussi :\n     --------------  \n           CHPC = KDMI OBJDOM ;\n\n\n\n      OBJET   : Cree un CHAMPOINT CENTRE contenant le diametre min des\n                elements du domaine\n\n     \n        OBJDOM : TABLE de SOUSTYPE DOMAINE",
  },
  {
    name: "KDOM",
    url: "KDOM",
    documentation:
      "$$$$ KDOM     NOTICE  CHAT      11/09/12    21:16:42     7124           \n                                             DATE     11/09/12\n\n  Operateur KDOM                           Voir aussi :\n    --------------  \n\n\n\n   Remplace par l'operateur DOMA.",
  },
  {
    name: "KENT",
    url: "KENT",
    documentation:
      "$$$$ KENT     NOTICE  MB234859  17/10/02    21:15:15     9577           \n                                             DATE     17/10/02\n                                             \n    Operateur KENT                           Voir aussi : CORI GYRO\n    ---------------                                        \n\n    Objet :\n    _______\n\n    L'operateur KENT calcule les matrices de raideur necessaire a \n    l'etude des vibrations d'une structure situee dans un repere \n    non galileen caracterise par un champs de rotation\n    (elements BARR, POUT, TUYAU, COQUE, MASSIF en 3D,\n              CERC et MASSIF en 2D Fourier). \n    Cet operateur permet de realiser des calculs dans un repere tournant. \n\n     RIG1 = KENT | 'CENTRIFUGE' | MODL1 MAT1 VEC1                      \n                 | 'EULER'      | \n                  \n      Commentaire :\n      _____________\n                                                                      \n     RIG1 : Matrice de raideur (type RIGIDITE)   \n  \n                                          \n     MODL1: Modele   (objet MMODEL)  \n \n                                    \n     MAT1 : Caracteristiques materiau (objet MCHAML)     \n \n               \n     VEC1 : Vecteur vitesse de rotation (option CENTRIFUGE)\n    ou vecteur variation de vitesse de rotation (option EULER) (objet POINT)\n     Ce vecteur est optionnel en mode de Fourier. \n     Dans ce cas, si un vecteur est donne, seule la composante suivant Oz \n     est prise en compte. Si aucun vecteur n'est donne, le vecteur (0. 1.) est \n     pris par defaut. \n  \n     Option 'CENTRIFUGE': La matrice RIG1 represente la raideur centrifuge\n                          (les forces centrifuges etant suiveuses)\n\n     Option 'EULER': La matrice RIG1 represente la raideur d'Euler \n              (les forces d'Euler qui apparaissent quand le vecteur rotation\n               n'est plus constant en module et/ou direction etant des forces\n               suiveuses ). \n                                                                   ",
  },
  {
    name: "KEPSILON",
    url: "KEPSILON",
    documentation:
      "$$$$ KEPSILON NOTICE  CHAT      11/09/12    21:16:43     7124           \n                                             DATE     11/09/12\n\n  Procedure KEPSILON                       Voir aussi :\n    ------------------   \n    SYNTAXE ( EQEX ) : Cf operateur EQEX\n    _________________\n\n    'OPER' 'KEPSILON' RO UN MU DT (RGB TN) 'INCO' 'KN' 'EN'\n                                                                  \n\n         \n    OBJET :\n    -----\n         \n Cette procedure calcule la viscosite effective (tourbillonnaire +\n moleculaire) obtenue par la resolution en transitoire (un pas de temps)\n d'un modele K-Epsilon. Le resultat est place dans la table 'INCO' a\n l'indice 'MUF' pour la viscosite dynamique effective (kg/m/s).\n Pour la version standard le desequilibre (Production/Dissipation) est\n limite a 10 (Limitation proposee par Menter).\n Precautions: L'algorithme ne converge pas (sans qu'il diverge) lorsque \n l'allongement des mailles du maillage est superieur a 20!!\n         \n    Commentaires\n    ____________ \n                                                                                \n    RO     Densite\n           FLOTTANT ou MOT\n                                                                                \n    UN     Champ de vitesse\n           CHPOINT VECT SOMMET ou MOT\n\n    MU     Viscosite dynamique (Kg/m/s)\n           FLOTTANT ou MOT\n\n    DT     Pas de temps\n           FLOTTANT ou MOT\n                                                                                \n    RGB    Coefficient du terme de flottabilite\n           VECTEUR ou MOT\n                                                                                \n    TN     Champ de temperature\n           CHPOINT SCAL SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice donne.\n\n Les options (parametres) de cette procedure doivent se trouver dans un\n LISTMOTS a l'entree 'ALGO_KEPSILON' de la procedure RV.\n ex : RV.'ALGO_KEPSILON'= MOTS 'Bw' 'Cnu';\n En l'absence de cette entree les valeurs par defaut sont prises.\n\n La liste des Options/Parametres est : IMPR,RNG,Filtre,Bw,Cnu,Nut,Fi,\n M2M,CSTE,Ret,KL,KLbr,Chien,Sharma,Jones,Lam\n Les options par defaut sont : Nut et le modele k - epsilon standard.\n\n IMPR: permet d'afficher les options utilisees.\n\n RNG : modele RNG k - epsilon.\n\n Filtre : Modele K-epsilon filtre. L'echelle de longueur est\n         filtree a une valeur precisee dans RV.'INCO'.'Echl'. Ce modele\n         permet de mieux capter des instationarites ou des instabilites\n         a grande echelle (de taille superieure a celle du filtre). On\n         peut prendre comme echelle de longueur la taille des elements\n         du maillage.\n\n Bw  : declenche une condition de realisabilite sur les contraintes de\n       cisaillement maximum. On verifie que (u'v')/k < 0.3   (Bradshaw)\n       DEFAUT = FAUX.\n\n Cnu : La 'constante' Cnu est reliee au rapport Ksi=(Nut P)/epsilon :\n       Cnu = F(1/Ksi) (Voir Rodi)\n       Pour Ksi = 1 Cnu=0.09.\n       DEFAUT = FAUX.\n\n Nut : Les variables de resolution intermediaires sont Teta et Nut\n       DEFAUT = VRAI.\n\n Fi  : Les variables de resolution intermediaires sont Teta et Fi\n       DEFAUT = FAUX.\n\n M2M : Constantes de Mohammadi et Medic.\n       DEFAUT = FAUX.\n\n CSTE: Les constantes du model sont lues dans la table INCO aux entrees\n       'cnu' 'c2' 'sgk' 'sge' La constante c1 en est deduite\n       DEFAUT = FAUX.\n\n KL  : Modele K-L. L'echelle de longueur doit etre specifiee dans la\n       table 'INCO' (entree 'INCO'.'Echl'). Numeriquement ce modele est\n       obtenu en rempla\u00e7ant l'equation (EDP) sur epsilon par\n       epsilon = k**1.5 / L. Il est necessaire de renseigner le modele\n       comme si on resolvait le modele K-epsilon. La condition limite\n       sur epsilon doit verifier l'equation ci-dessus\n\n KLbr: Modele K-L bas Reynolds. C'est le modele de Wolfshtein (1967) et\n       Yap (1987). A la place de l'echelle de longueur il faut donner la\n       distance a la paroi: indice 'dparoi' (CHPOINT SCAL SOMMET) dans\n       la table INCO. Les conditions limites sont U=0,K=0 et Epsilon=0 a\n       la paroi. La premiere maille doit se trouver a un y+ < 1.\n       Voir le jeux de donnee  canalKLbr.dgibi\n\n Chien: Modele k-epsilon Bas-Reynolds de Chien. Ce modele\n       necessite la donnee de la distance a la paroi:\n       entree 'INCO'.'dparoi' (meme support que k ou epsilon) et le\n       calcul de y+ (entree 'INCO' 'yplus'). Cette derniere entree\n       doit etre recalculee a chaque pas de temps via une procedure.\n       Les conditions limites et les contraintes de maillage pres de la\n       paroi sont les memes que precedemment.\n       Voir le jeux de donnee  canal-Chien.dgibi\n\n Sharma: Modele k-epsilon Bas-Reynolds de Launder Sharma. Ce modele ne\n       necessite aucune donnee supplementaire ce qui presente un\n       avantage certain.\n       Les conditions limites et les contraintes de maillage pres de la\n       paroi sont les memes que precedemment.\n       Voir le jeux de donnee  canal-Sharma.dgibi\n\n Jones: Modele k-epsilon Bas-Reynolds de Jones-Launder Sharma. Ce modele \n       est quasiment identique au precedent aux valeurs des constantes\n       pres.\n\n  Lam:  Modele k-epsilon Lam et Bremhorst (en test)\n\n Liste des CHPOINTs (SCAL SOMMET) crees dans la table 'INCO'\n       TKTE      teta=k/epsilon\n       NUTI      valeur intermediaire de NUT\n       FI        inconnue Fi\n       PRODT     Prodution turbulente / NUT = (grad U + grad^t U)grad U\n       TKTI      teta=k/epsilon intermediaire\n       Ksi       facteur de desequilibre : nut PRODT / epsilon\n       MUF       viscosite dynamique effective (tourbillonnaire+moleculaire)",
  },
  {
    name: "KFCE",
    url: "KFCE",
    documentation:
      "$$$$ KFCE     NOTICE  CHAT      11/09/12    21:16:43     7124           \n                                             DATE     11/09/12\n\n  Operateur KFCE                          Voir aussi :\n     --------------  \n\n\n   Remplace par l'option 'FACE' de l'operateur DOMA.",
  },
  {
    name: "KFPA",
    url: "KFPA",
    documentation:
      "$$$$ KFPA     NOTICE  CHAT      11/09/12    21:16:43     7124           \n                                             DATE     11/09/12\n                                                                                \n   Operateur K FPA                            Voir aussi : FPA ECHI\n   --------------                                         FPAL   \n        AK = KFPA  NU YP UET NORM ROG RAP ; \n        \n\nOBJET :\n_______\n\nCalcule la vitesse de depot d'aerosols en regime turbulent\n\n                                                                                \n\nCOMMENTAIRES :\n______________\n\n\nAK      vitesse de depot des particules (m/s)  CHPOINT SCAL CENTRE PAROI\n\nNU      viscosite du gaz (m2/s)                FLOTTANT\n\nYP      epaisseur de la couche limite gaz (m)  FLOTTANT\n\nUET     vitesse de frottement du gaz (m/s)     CHPOINT SCAL CENTRE PAROI\n\nNORM    normale sortante a la paroi (m)        CHPOINT VECT CENTRE PAROI\n\nROG     masse volum. part. x gravite (kg/m2s2) POINT\n\nRAP     rayon des particules (m)               FLOTTANT\n\n\n\nRemarques :\n___________\n\n- UET est calcule par FPU (fonctions de paroi pour la vitesse)\n- NORM est calcule par DOMA sur tout le domaine, puis reduit sur la\n  paroi par KCHT.\n- YP est a priori le meme que pour FPU, meme si on peut le choisir\n  different.\n- AK est un coefficient d'echange pour la masse, il est ensuite\n  donne a l'operateur ECHI qui realisera la condition limite de depot\n  pour l'equation de concentration (oper. TSCA).\n  ",
  },
  {
    name: "KFPT",
    url: "KFPT",
    documentation:
      "$$$$ KFPT     NOTICE  CHAT      11/09/12    21:16:43     7124           \n                                             DATE     11/09/12\n\n      Operateur  K FPT                        Voir aussi : FPT ou FPU\n      ---------------  \n      Syntaxe :\n      ---------\n\n        H = KFPT $mod RO MU CP LB UET YP\n\n\n                                                                                \n                                                                                \n\n     DOMAINE D'APPLICATION : Thermo-hydraulique turbulente.\n    -----------------------       \n\n      OBJET :                                                                   \n     --------   \n\n     Calcul de H : Coefficient d'echange thermique d'origine convective\n                   issu des fonctions de paroi en thermique.\n     H      coefficient d'echange               CHPOINT SCAL SOMMET\n                                                                                \n      UTILISATION :                                                             \n                                                                                \n\n     La vitesse de frottement UET est en general issu de l'operateur FPU.\n     Choisir de preference une valeur de YP (distance a la paroi)\n     telle que sa valeur adimentionnee Y+ soit comprise entre 30 et\n     300 lors des calculs.\n                                                                                \n                                                                                \n\n                    \n      COEFFICIENTS AUTORISES :\n     -------------------------\n                                                                                \n                                                                                \n  $DOM   Modele NAVIER_STOKES\n\n  RO     Densite                         FLOTTANT ou CHPOINT SCAL SOMMET\n\n  MU     Viscosite dynamique moleculaire FLOTTANT ou CHPOINT SCAL SOMMET\n                                                                                \n  CP     Chaleur specifique              FLOTTANT ou CHPOINT SCAL SOMMET\n\n  LB     Conductivite thermique          FLOTTANT ou CHPOINT SCAL SOMMET\n                                                                                \n  UET    Vitesse de frottement           CHPOINT SCAL SOMMET\n\n  YP     Distance la paroi               FLOTTANT\n                                                                                ",
  },
  {
    name: "KHIS",
    url: "KHIS",
    documentation:
      "$$$$ KHIS     NOTICE  JC220346  16/04/25    21:15:09     8917           \n                                             DATE     16/04/25\n\n    Operateur KHIS                           Voir aussi : EQEX\n    --------------  \n     TAB1 = KHIS nom1 comp1 geom1\n                 nom2 comp2 geom2\n                 ...\n\n                 \n\n     Objet :\n     _______\n     \n     Cree une table (de sous-type KHIS) pour les historiques temporels\n     de EQEX (sauvegarde de la valeur de grandeurs en certains points)\n\n     \n     Commentaires :\n     ______________\n\n     nom1 nom2 ...  : nom (type MOT) de l'inconnue se trouvant dans la\n                      table 'INCO'\n     \n     comp1 comp2 ... : numero (type ENTIER) de la composante si\n                       l'inconnue est vectorielle (1 par defaut)\n                       \n     geom1 geom2 ... : objets MAILLAGE (de type POI1) contenant la liste\n                       des noeuds\n\n     Dans TAB1, une table contenant les symboles pour l'operateur\n     DESSIN est creee et placee a l'indice 'TABD'. L'ordre des symboles\n     est le suivant :\n                              *.1='MARQ PLUS'\n                              *.2='MARQ CROI'\n                              *.3='MARQ LOSA'\n                              *.4='MARQ CARR'\n                              *.5='MARQ TRIA'\n                              *.6='MARQ TRIB'\n                              *.7='MARQ ETOI'\n                              \n     La frequence de sauvegarde est geree par la directive NISTO de\n     l'operateur EQEX.\n     \n\n     Exemple :\n     _________\n     \n     lh = elem TABDOM.SOMMET POI1 (lect 1 pas 10 101) ;\n     lh1 = (poin proc (1 1) ) et (poin proc (0 1) ) ;\n\n     his= khis 'UN' 1 lh\n               'UN' 2 lh\n               'KN'   lh1\n               'EN'   lh1;\n     rv.'HIST'=his ;\n\n     ... exec rv ; ...\n\n     dessin his.'TABD' his.'1UN' ;\n     dessin his.'TABD' his.'2UN' ;\n     dessin his.'TABD' his.'KN' ;\n     dessin his.'TABD' his.'EN' ;\n     \n$$$$\n ",
  },
  {
    name: "KLNO",
    url: "KLNO",
    documentation:
      "$$$$ KLNO     NOTICE  CHAT      11/09/12    21:16:44     7124           \n                                             DATE     11/09/12\n\n  Operateur KLNO                          Voir aussi :\n     --------------       \n            CHPS = KLNO TABDOM CHPC ;\n            \n\n\n\n     Objet : transforme un CHAMPOINT CENTRE en un CHAMPOINT SOMMET\n\n\n      TABDOM  : Table DOMAINE contenant le support geometrique de CHPC\n      CHPC    : CHAMPOINT CENTRE\n      CHPS    : CHAMPOINT SOMMET\n                                                                                \n    COMPLEMENTS D'INFORMATION :                                                 \n   ----------------------------                                                 \n                                                                                \n     On calcule     A * TE      (La matrice est diagonale)                      \n             -  A  aire de l {l{ment                                            \n             -  TE valeur de l'inconnue sur l'{l{ment                           \n                                                                                \n    Pour avoir une approximation plus pr{cise, on peut utiliser un              \n    module de r{solution de type A1 A2 ou A3 suivant le cas.                    \n    On peut {ventuellement imposer des valeurs.                                 \n                                                    ",
  },
  {
    name: "KLOP",
    url: "KLOP",
    documentation:
      "$$$$ KLOP     NOTICE  CHAT      11/09/12    21:16:44     7124           \n                                             DATE     11/09/12\n\n  Operateur KLOP                           Voir aussi :\n    --------------  \n            KLOP ind RV ;\n            \n\n\n\n    Objet : execute un operateur de la liste des operateurs d'une table\n            de type EQEX et se trouvant au rang ind.\n\n\n    RV    Table de type EQEX\n    ind   rang de l'operateur dans la liste (LISTOPER)",
  },
  {
    name: "KMAB",
    url: "KMAB",
    documentation:
      "$$$$ KMAB     NOTICE  CHAT      11/09/12    21:16:44     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur KMAB                           Voir aussi : NAVI KBBT\n    --------------                                        DUDW  EQEX  \n                                                           \n    SYNTAXE ( EQEX ) :   Cf operateur EQEX                 \n    __________________\n\n\n      'OPER'  'KMAB' coef <beta>     'INCO' 'UN' 'PRES'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n L'operateur KMAB discretise le terme Div U du systeme d'equations de\nStokes (ou Navier-Stokes) par une methode d'elements finis.\n\n    Commentaires\n    ____________\n\n     coef    coefficent multiplicateur\n             FLOTTANT\n             ou CHPOINT SCAL SOMMET  (porosite volumique)\n             ou CHPOINT VECT SOMMET  (porosite directionnelle)\n             ou MOT\n\n     beta    parametre de stabilisation pour les elements lineaires\n             FLOTTANT ou MOT\n\n     UN      Champ de vitesse\n             CHPOINT VECT SOMMET ou MOT\n\n     PRES    Champ de pression\n             CHPOINT SCAL CENTRE   ou MOT\n             CHPOINT SCAL CENTREP1 ou MOT\n             CHPOINT SCAL CENTREP0 ou MOT\n             le type doit etre precise dans les options mot cle INCOD\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n champ dans la table INCO a l'indice MOT.\n\n\n    Complement d'information :\n    __________________________\n\n\n  1/ La formulation variationnelle est :\n\n   /               \n   | q*Div U dv =  \n   |v            \n\n  2/ Si toutes les vitesses normales sont imposees (nulles ou non) sur\n     les frontieres, il faut IMPERATIVEMENT imposer la pression en un\n     point. C'est le cas pour tout ecoulement d'un fluide incompressible\n     en cavite fermee.\n\n  3/ Si le coefficient est de type CHPOINT SCAL SOMMET\n    (Porosite volumique H) On calcule :\n\n   /                 /                 /\n   | q*Div(H U) dv = | q H Div U dv  + | q U Grad H  dv\n   |v                |v                |v\n\n\n  4/ Si le coefficient est de type CHPOINT VECT SOMMET\n    (Porosite surfacique ou directionnelle Hi ) On calcule :\n\n   /\n   | q*Div((HU)i) dv\n   |v\n\n\n    Options : (EQEX)\n    _________\n\n    OPTI INCOD CENTRE\n               CENTREP1\n               CENTREP0",
  },
  {
    name: "KMAC",
    url: "KMAC",
    documentation:
      "$$$$ KMAC     NOTICE  CHAT      11/09/12    21:16:45     7124           \n                                             DATE     11/09/12\n\n\n  Operateur KMAC                           Voir aussi :\n    --------------  \n\n\n     OBJET   : Cet operateur est remplace par KMAB",
  },
  {
    name: "KMBT",
    url: "KMBT",
    documentation:
      "$$$$ KMBT     NOTICE  CHAT      11/09/12    21:16:45     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur KMBT                           Voir aussi : NAVI KMAB\n    --------------                                        KBBT   DUDW  \n                                                          EQEX   \n    SYNTAXE ( EQEX ) :   Cf operateur EQEX                 \n    __________________\n\n      'OPER'  'KMBT' coef <beta>     'INCO' 'UN' 'PRES'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n L'operateur KMBT discretise le terme Grad P de l'equation de\n Navier-Stokes par une methode d'elements finis.\n\n\n    Commentaires\n    ____________\n\n     coef    coefficent multiplicateur\n             FLOTTANT\n             ou CHPOINT SCAL SOMMET  (porosite volumique)\n             ou CHPOINT VECT SOMMET  (porosite directionnelle)\n             ou MOT\n\n     beta    parametre de stabilisation pour les elements lineaires\n             FLOTTANT ou MOT\n\n     UN      Champ de vitesse\n             CHPOINT VECT SOMMET ou MOT\n\n     PRES    Champ de pression\n             CHPOINT SCAL CENTRE   ou MOT\n             CHPOINT SCAL CENTREP1 ou MOT\n             le type doit etre precise dans les options mot cle INCOD\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n champ dans la table INCO a l'indice MOT.\n\n\n\n    Complement d'information :\n    __________________________\n\n\n  1/ Conditions limites induites :\n\n Dans la formulation variationelle retenue le terme Grad P est integre\n par partie. En utilisant le theoreme de la divergence on a :\n\n   /                /            /\n   | W*Grad P dv =  | W P n ds - | P Div W dv\n   |v               |s           |v\n\n L'integrale de surface est omise ce qui conduit a la condition limite\n par defaut :\n\n   /\n   | W P n ds = 0   (n normale exterieure)\n   |s\n\n Ceci est a completer des conditions limites induites par d'autre\n operateurs integres par partie.\n Voir l'operateur TOIM pour imposer une valeur non nulle.\n\n\n  2/ Si le coefficient est de type CHPOINT SCAL SOMMET\n    (Porosite volumique H) On calcule :\n\n   /                  /            /                 /\n   | W*H*Grad P dv =  | WHP n ds - | P H Div W dv  - | P W Grad H  dv\n   |v                 |s           |v                |v\n\n\n  3/ Si le coefficient est de type CHPOINT VECT SOMMET\n    (Porosite surfacique ou directionnelle Hi ) On calcule :\n\n   /                   /              /                  /\n   | W*Hi*Grad P dv =  | WHi P n ds - | P Hi Div W dv  - | P W Grad Hi dv\n   |v                  |s             |v                 |v\n\n\n\n    Options : (EQEX)\n    _________\n\n    OPTI INCOD CENTRE\n               CENTREP1",
  },
  {
    name: "KMCT",
    url: "KMCT",
    documentation:
      "$$$$ KMCT     NOTICE  CHAT      11/09/12    21:16:45     7124           \n                                             DATE     11/09/12\n\n\n  Operateur KMCT                          Voir aussi :\n     --------------  \n\n\n     Objet   :  Cet operateur est remplace par KMBT",
  },
  {
    name: "KMF",
    url: "KMF",
    documentation:
      "$$$$ KMF      NOTICE  CHAT      11/09/12    21:16:45     7124           \n                                             DATE     11/09/12\n\n  Operateur KMF                           Voir aussi :\n     -------------  \n         OBJ3 = KMF OBJ1 OBJ2 <'TRANS'> ;\n         \n\n\n\n     Objet   :  Cet operateur calcule le produit d'un objet MATRIK\n                et d'un CHPOINT\n\n\n\n      OBJ1   : objet MATRIK\n      OBJ2   : objet CHPOINT\n      OBJ3   : objet CHPOINT resultat\n\n      La presence du mot cle 'TRANS' indique que le produit se fait\n      avec la matrice transposee.",
  },
  {
    name: "KMTP",
    url: "KMTP",
    documentation:
      '$$$$ KMTP     NOTICE  CHAT      11/09/12    21:16:46     7124           \n                                             DATE     11/09/12\n\n  Operateur KMTP                          Voir aussi :\n     --------------  \n          MCHPOI = KMTP MATRIK B ;\n          \n\n\n                       T\n    Objet : CALCUL DE C P\n\n    \n\n\n      MATRIK  MATRICES ELEMENTAIRES DE LA DIVERGENCE (ALIAS "C")\n              (objet de type MATRIK cree  par KMAC)\n      B       CHAMP DE PRESSION (SCAL CENTRE) SUR LA ZONE PRESSION\n\n      EN SORTIE :\n                                                  T\n      MCHPOI  CONTIENT LE GRADIENT DE PRESSION C P   (VECT SOMMET)',
  },
  {
    name: "KNRF",
    url: "KNRF",
    documentation:
      "$$$$ KNRF     NOTICE  CHAT      11/09/12    21:16:46     7124           \n                                             DATE     11/09/12\n         \n  Operateur KNRF                          Voir aussi :\n     --------------  \n\n\n\nCet operateur a ete remplace par l'operateur DOMA.\n(options NORMALE, SURFACE, ORIENTAT)",
  },
  {
    name: "KONV",
    url: "KONV",
    documentation:
      "$$$$ KONV     NOTICE  CHAT      11/09/12    21:16:46     7124           \n                                             DATE     11/09/12\n         \n     Operateur KONV                          Voir aussi : NAVI\n     --------------  \n\n\n     OBJET   :\n\n I Formulation Volume Finis (OPTI VF) :\n ______________________________________\n\n      Discretise l'operateur de convection par des schemas volumes finis \n    Il calcule un champ point FACE  qui represente\n    le flux de chaque arete du maillage selon 3 schemas.\n    On ecrit le flux dans l'increment KIZG.\n\n     SYNTAXE 1 :  KONV VNF VNC option;\n                  VNF = U calcule aux sommets (par ksof)\n                  VNC = U calcule aux centres (par knol)\n                  Option = 'upwind' | 'quick' | 'muscl'\n\n     SYNTAXE 2 :  en utilisant EQEX\n                  RV = EQEX TABDOM ALFA .. ITMA ..\n                       'ZONE' MOD1 'OPER' 'KONV' VNF VNC 'INCO' 'TN'\n                        CLIM 'TN' TIMP ENTREE ... ;\n\n           on met l'option dans klop : klop ind rv 'option' ;\n\n   Erreur possible dans le calcul de DT si VN est petit changer EPSILON\n\n\n      COMMENTAIRES :\n\n\nLe flux est evalue sur chaque maille par : FI = VNF TK LGR\nou TK est la temperature sur la face K calculee de facons differentes selon\nles schemas a partir des temperatures sur les mailles connexes: TIM ,TI ET TIP.\n(Voir le rapport pour le choix de ces trois temperatures)\n\n\n\n-Schema UPWIND :\n\n        TK = TI\n\n\n-Schema QUICK : \n  \n        TK = (TI+TIP)/2 + (TIM+TIP-2*TI)/8\n\n\n-Schema MUSCL : \n\n\n        TK = TI + DELTA_I/2\n\n\nou DELTA_I est la pente entre deux mailles :\n\n        GAMMA_I = SIGNE (TIP-TI)\n        DELTA_I = GAMMA_I * MAX (0,MIN(GAMMA_I*(TIP-TI),GAMMA_I*(TI-TIM)))\n\n\n\n      \n\nLe bilan des flux precedents est fait dans l'operateur AVCT\n\n\n II Formulation Element Finis (OPTI EF ou EFM1) :\n ________________________________________________\n\n      Discretise l'operateur de convection en Element Finis.\n   Suivant l'option l'operateur est traites sous forme\n  conservative ou non conservative.\n\n    SYNTAXE - EQEX  Cf operateur EQEX\n    ______________\n\n    'OPER' 'KONV' ROC UN  LAM           'INCO' 'TN' :\n\n\n     1/ Formulation non conservative\n\n         roc ( u Grad T )\n\n     2/ Formulation conservative\n\n          Div ( roc u T )\n\n\n    Commentaires :\n    ______________\n\n     roc  capacite calorique (J/M**3/\u00b0C)\n          FLOTTANT ou CHPOINT SCAL CENTRE ou CHPOINT SCAL SOMMET ou MOT\n     lam  conductivite thermique (W/M/\u00b0C)\n          cette donnee est necessaire pour l'evaluation\n          du Peclet de maille. En general c'est le coefficent\n          de l'operateur LAPN. Si c'est operateur est absent\n          mettre lam=0.\n          FLOTTANT ou CHPOINT SCAL CENTRE ou CHPOINT SCAL SOMMET ou MOT\n     un   Champ de vitesse transportant\n          CHPOINT VECT SOMMET ou MOT\n     tn   Champ de temperature\n          CHPOINT SCAL SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    Options : (EQEX)\n    _________\n\n La discretisation des termes de convection peut etre :\n\n centree                              OPTION CENTREE\n decentree                            OPTION SUPG\n decentree avec capture de choc       OPTION SUPGCC   Option par defaut\n Crank Nicholson generalise           OPTION CNG\n (ordre 4 en temps)\n\n\n Formulation non conservative         OPTION NOCONS   Option par defaut\n Formulation conservative             OPTION CONS\n\n Formulation EF                       OPTION EF\n\n\n\n III Discretisation des Equations d'Euler \n _________________________________________\n\n IIIa : gaz parfait mono-constituent polytropique\n ________________________________________________\n\n\n Discretisation en VF \"cell-centered\" des equations d'Euler pour un gaz \n parfait mono-constituent polytropique\n\n Inconnues:\n\n densite, quantite de mouvement (qdm), energie totale par unite de volume \n (variables conservatives)\n\n ou\n\n densite, vitesse, pression (variables primitives)\n\n On peut calculer:\n\n IIIa.1. Le flux numerique\n IIIa.2  Le residu\n IIIa.3  La matrice jacobienne du residu par rapport aux variables  \n         conservatives\n IIIa.4  La matrice jacobienne du residu par rapport aux variables  \n         primitives\n IIIa.5  La matrice de preconditionnent bas Mach par rapport aux \n         variables conservatives\n IIIa.6  La matrice de preconditionnent bas Mach par rapport aux\n         variables primitives\n IIIa.7  La contribution de quelque condition limite au residu et\n         a la matrice jacobienne\n\n\n IIIa.1 et IIIa.2  Le flux numerique et le residu\n ________________\n\n\n RCHPO1 RFLOT1 = 'KONV' 'VF' 'PERFMONO' MOT1 MOT2  MOD1 LMOT1 MCHAM1 \n                 MCHAM2 MCHAM3 MCHAM4 (CHPO5 CHPO6) (MAIL1) ;\n\n ENTR\u00c9ES \n\n MOT1   : objet de type MOT\n           Il vaut 'RESI' si on veut calculer le residu\n           Il vaut 'FLUX' si on veut calculer le flux\n\n MOT2   : objet de type MOT\n           Il indique la methode:\n           'GODUNOV'  = solveur exacte\n           'VANLEER'  = solveur de van Leer\n           'VLH'      = solveur de van Leer Hanel\n           'HUSVL'    = HUS (van Leer + Osher) \n           'HUSVLH'   = HUS (van Leer Hanel + Osher) \n           'AUSMPLUS' = AUSM+ \n           'ROE'      = solveur de Roe\n           'SS'       = solveur choc-choc\n           'AUSMPLM'  = AUSM+ low Mach\n           'RUSANOV'  = solveur de Rusanov \n           'RUSANOLM' = solveur de Rusanov pour le bas-Mach\n           'CENTERED' = solveur centre\n           'ROELM'    = solveur de Roe-Turkel pour le bas-Mach\n           'HLLC'     = solveur HLLC\n           'HLLCLM'   = solveur HLLC-Turkel pour le bas-Mach\n           'AUSMPUP'  = solveur AUSM+up low Mach\n\n  \n LMOT1   : objet de type LISTMOTS\n           Noms de composantes du resultat (RCHPO1)\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n MOD1    : objet MODELE.\n\n MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n           SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n           (une composante, 'SCAL')\n           (voir operateur PRET)\n\n MCHAM2  : MCHAML  contenant la vitesse  et les cosinus \n           directeurs du repere locale (n,t) dans le repere \n           global (x,y) (dans le cas 2D 6 composantes:\n           * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n           * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n           * 'NX' = n.x (SPG = 'FACE')\n           * 'NY' = n.y (SPG = 'FACE')\n           * 'TX' = t.x (SPG = 'FACE')\n           * 'TY' = t.y (SPG = 'FACE')).\n           (voir operateur PRET)\n\n MCHAM3  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression du\n           gaz (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM4  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant le \"gamma\" du \n           gaz (une seule composante, 'SCAL').\n           (voir operateur PRET)\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n(MAIL1)  : MAILLAGE de POI1 ou, si appartenant a  ('DOMA' MOD1 'FACE'),\n           on ne calcule pas la contribution au flux ou au residu.\n\n SORTIES\n\n RCHPO1  : objet de type CHPOINT (composantes =  LMOT1)\n           Residu  si MOT2 = 'RESI' (SPG = 'DOMA' MOD1 'CENTRE')\n           Flux si MOT2 = 'FLUX'    (SPG = 'DOMA' MOD1 'FACE') \n\n RFLOT1  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide (meme dans le cas bas Mach, on considere le systeme \n           non preconditionne)\n\n Remarque\n --------\n\n RCHPO1 est egal a:\n * la derive temporelle des inconnues si l'option 'RESI' est utilisee\n * la projection du flux  sur ('DOMA' MOD1 'XXNORMAF') si l'option \n   'FLUX' est utilisee\n\n\n IIIa.3   La matrice jacobienne du residu par rapport aux variables  \n _____    conservatives\n\n\n RMAT1  = 'KONV' 'VF' 'PERFMONO' 'JACOCONS' MOD1 LMOT1 (MAIL1) MOT1 \n          CHPO1 CHPO2 CHPO3 CHPO4 (CHPO5 CHPO6) ;\n \n ENTR\u00c9ES \n\n MOT1   : objet de type MOT\n          'VLH'       : jacobien du residu pour la methode VLH \n          'AUSMPLUS'  : jacobien du residu pour la methode AUSM+ \n          'AUSMPLM'   : jacobien du residu pour la methode AUSM+ low Mach\n          'RUSANOLM'  : jacobien du residu pour la methode de Rusanov low Mach\n          'CENTERED'  : jacobien du residu pour la methode centree\n\n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n MOD1    : objet MODELE.\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (SPG = 'DOMA' DOM1 'CENTRE', deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant le \"gamma\" du gaz\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n (MAIL1) : MAILLAGE de POI1 ou, si appartenant a  ('DOMA' DOM1 'FACE'),\n           on ne calcule pas la contribution au jacobien.\n\n SORTIES\n\n RMAT1   : objet de type MATRIK\n           (SPG =  'DOMA' DOM1 'CENTRE')\n           (inconnues primales = inconnues duales = LMOT1)\n           Il contient le jacobien du residu par rapport aux variables \n           conservatives.\n\n\n IIIa.4   La matrice jacobienne du residu par rapport aux variables  \n ______   primitives\n\n RMAT1  = 'KONV' 'VF' 'PERFMONO' 'JACOPRIM' MOD1 LMOT1 LMOT2 (MAIL1) MOT1 \n          CHPO1 CHPO2 CHPO3 CHPO4 (CHPO5 CHPO6) ;\n \n ENTREES \n\n MOT1   : objet de type MOT\n          'VLH'       : jacobien du residu pour la methode VLH \n          'AUSMPLUS'  : jacobien du residu pour la methode AUSM+ \n          'AUSMPLM'   : jacobien du residu pour la methode AUSM+ low Mach\n\n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n LMOT2   : objet de type LISTMOTS\n           Noms des variables primitives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la vitesse, de la pression\n\n MOD1    : objet MODELE.\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (SPG = 'DOMA' MOD1 'CENTRE', deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant le \"gamma\" du gaz\n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n (MAIL1) : MAILLAGE de POI1 ou, si appartenant a  ('DOMA' MOD1 'FACE'),\n           on ne calcule pas la contribution au jacobien.\n\n SORTIES\n\n RMAT1   : objet de type MATRIK\n           (SPG = 'DOMA' MOD1 'CENTRE')\n           (inconnues primales = variables primitives  = LMOT2)\n           (inconnues duales = variables conservatives = LMOT1)\n           Il contient le jacobien du residu par rapport aux variables \n           primitives.\n\n\n IIIa.5   La matrice de preconditionnement bas Mach par rapport aux \n ______   variables conservatives (divise par le pas de temps locale;\n          le pas de temps est calcule pour le systeme preconditionnne\n          (intervalle de temps pendant lequel le signale le plus rapide\n           traverse une cellule reguliere))\n\n RMAT1 =  'KONV' 'VF' 'PERFMONO' 'GAMMCONS' MAIL1 LMOT1\n           CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 ;\n\n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n MAIL1   : SPG des CHPOINTs\n\n CHPO0   : CHPOINT contenant le diametre des elts\n           (une seule composante, 'SCAL').\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (une seule composante, 'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant le \"gamma\" du gaz\n           (une seule composante, \n            'SCAL').\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off \n           (SPG = 'CENTRE', une seule composante, \n            'SCAL'). \n            A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'CENTRE', une seule composante, \n            'SCAL'). \n             A donner dans le cas bas Mach\n\n RMAT1   : objet de type MATRIK\n           (SPG =  MAIL1)\n           (inconnues primales = variables duales  = LMOT1)\n\n IIIa.6   La matrice de preconditionnement bas Mach par rapport aux \n ______   variables primitives (divise par le pas de temps locale;\n          le pas de temps est calcule pour le systeme preconditionnne\n          (intervalle de temps pendant lequel le signale le plus rapide\n           traverse une cellule reguliere))\n\n RMAT1 =  'KONV' 'VF' 'PERFMONO' 'GAMMPRIM' MAIL1 LMOT1 LMOT2\n           CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 ;\n\n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n LMOT2   : objet de type LISTMOTS\n           Noms des variables primitives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la vitesse, de la pression\n\n MAIL1   : SPG des CHPOINTs\n\n CHPO0   : CHPOINT contenant le diametre des elts\n           (une seule composante, 'SCAL').\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (une seule composante, 'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant le \"gamma\" du gaz\n           (une seule composante, \n            'SCAL').\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off \n           (SPG = 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n RMAT1   : objet de type MATRIK\n           (SPG = 'CENTRE')\n           (inconnues primales = variables primitives  = LMOT2)\n           (inconnues duales = variables conservatives = LMOT1)\n\n\n IIIa.7   La contribution de quelque condition limite au residu et\n ------  a la matrice jacobienne\n\n RCHPLI RCHPRE = 'KONV' 'VF' 'PERFMONO' 'CLIM'\n                 'RESI' $MOD1 $MOD2 LMOTC LMOTP CHPRN CHPVN CHPPN \n                  CHPGN  MOT1 CHPLI ;\n\n ou \n\n RJACO = 'KONV' 'VF' 'PERFMONO' 'CLIM'  'JACOCONS' \n         $MOD1 $MOD2 LMOTC LMOTP CHPRN CHPVN CHPPN \n                  CHPGN  MOT1 CHPLI ;\n\n RJACO = 'KONV' 'VF' 'PERFMONO' 'CLIM'  'JACOPRIM' \n         $MOD1 $MOD2 LMOTC LMOTP CHPRN CHPVN CHPPN \n                  CHPGN  MOT1 CHPLI ;\n\n $MOD1   : l'objet modele du domaine total\n\n $MOD2   : l'objet modele du domaine du bord \n\n LMOTC   : LISTMOTS, noms des variables conservatives\n\n LMOTP   : LISTMOTS, noms des variables primitives\n\n CHPRN   : densite  (SPG = 'DOMA' $MOD1 'CENTRE', une seule\n           composante, 'SCAL')\n\n CHPVN   : vitesse (SPG = 'DOMA' $MOD1 'CENTRE',\n           composantes: 'UX', 'UY', ('UZ'))\n\n CHPPN   : pression  (SPG = 'DOMA' $MOD1 'CENTRE', une seule \n           composante, 'SCAL')\n\n CHPGN   : gamma  (SPG = 'DOMA' $MOD1 'CENTRE', une seule \n           composante, 'SCAL')\n\n MOT1    : MOT, type de condition limite:\n           'INRI' : entree subsonique. On utilise les invariants de\n                    Riemann. On donne densite 'RN', vitesse 'UX' 'UY' \n                    ('UZ'), pression 'PN'.\n           'INSU' : entree subsonique. On donne l'enthalpie totale 'HT'\n                    par unite de masse, l'entropie 'S' (pression divisee \n                    par la densite a la puissance gamma). On impose que \n                    la vitesse tangentielle est nulle. On recupere la \n                    pression a l'interieur. La contribution au residu et \n                    a la matrice jacobienne sont calculee via la methode\n                    'AUSMPLUS'.\n           'OUTRI': sortie subsonique. On utilise les invariants de\n                    Riemann. On donne densite 'RN', vitesse 'UX' 'UY' \n                    ('UZ'), pression 'PN'.\n           'OUTP' : sortie subsonique. On donne la pression 'PN', \n                    on recupere la vitesse et la densite a l'interieur.\n                    La contribution au residu et a la matrice jacobienne \n                    sont calculee via la methode 'AUSMPLUS'.\n           'INSS' : entree supersonique. On donne densite 'RN', vitesse \n                    'UX' 'UY' ('UX'), pression 'PN'.\n           'OUTSS': sortie supersonique. On donne un CHPOINT vide.\n           'INJE' : condition limite d'injection compressible. \n                    On donne le flux de masse 'MOME' et 'RT' (temperature fois\n                    la constante de gaz); on impose que la vitesse\n                    tangentielle est nulle, on recupere la pression.\n          'INJELM': condition limite d'injection faiblement compressible. \n                    On donne le flux de masse et RT (temperature fois\n                    la constante de gaz); on impose que la vitesse\n                    tangentielle est nulle, on recupere la pression.\n\n CHPLI   : condition limite impose (SPG ='DOMA' $MOD2 'CENTRE')\n           Les composantes dependent de MOT1\n\n Resultats\n\n RCHPLI : CHPOINT qui contient les valeur de la densite, de la vitesse et \n          de pression associe a la condition limite.\n          (SPG ='DOMA' $MOD2 'CENTRE', composantes = LMOTP)\n\n RCHPRE : CHPOINT qui contient la contribution de la condition limite au \n          residu (SPG en 'DOMA' $MOD1 'CENTRE', composantes = LMOTC)\n\n RJACO  : MATRIK qui contient la contribution de la condition limite a la\n          matrice jacobienne du residu.\n \n\n IIIb :gaz thermiquement parfait\n ____\n\n Discretisation en VF \"cell-centered\" des equations d'Euler pour\n un melange de gaz parfaits.\n Inconnues: densite (totale) du melange, quantite de mouvement, \n energie totale par unite de volume, densites des constituants du gaz, \n scalaires passifs (multiplies par la densite du melange)\n \n RCHPO1 RFLOT1 = 'KONV' 'VF' 'PERFTEMP' MOT1 MOT2\n                        MOD1 TAB2 LMOT1  MCHAM1 MCHAM2 MCHAM3\n                        (MCHAM4) (MCHAM5) ;\n \n ENTREES \n \n \n MOT1   : objet de type MOT\n          Il vaut 'RESI' si on veut calculer le residu\n          Il vaut 'FLUX' si on veut calculer le flux\n \n MOT2   : objet de type MOT\n          Il indique la methode de decentrement:\n          'VLH'     = solveur de van Leer Hanel\n          'SS'      = solveur choc-choc\n \n MOD1  : objet MODELE\n\n TAB2  : table qui contient les proprietes du gaz. Plus precisement:\n         * le nom de l'espece qui n'est pas dans les Equations d'Euler \n           en TAB2 . 'ESPNEULE' (MOT);\n         * les noms des especes qui apparaissent explicitement dans les\n           equations d'Euler en  TAB2 . 'ESPEULE' (LISTMOTS); dans le \n           cas mono-espece cet indice n'existe pas.\n         * le degre des polynomes cv_i=cv_i(T), en TAB2 . 'NORD'\n           (ENTIER >= 0)\n         * les proprietes de chaque gaz 'ESPI', dans la table\n           TAB2 . 'ESPI':\n           - TAB2 . 'ESPI' . 'A' (LISTREEL)\n             qui contient les (TAB2.'NORD')+1 coefficients des polynomes\n             cv(T), (A0,A1,...); si le cv(T) sont supposes etre en \n             J/kg/K, les Ai doivent etre en unites coherentes; \n           - TAB2 . 'ESPI' . 'R' (J/kg/K dans le SI, FLOTTANT) qui \n             contient la constante du gaz parfait\n           - TAB2 . 'ESPI' . 'H0K' (J/kg, FLOTTANT) qui contient\n             l'enthalpie de formation du gaz a 0K\n         * TAB2 . 'SCALPASS' = si existante, noms des scalaires passifs \n           a transporter (LISTMOTS)\n\n LMOT1 : objet de type LISTMOTS\n         Noms de composantes du resultat (RCHPO1)\n         Il contient dans l'ordre suivant: le nom de la densite\n         totale, de la quantite de mouvement, de l'energie totale \n         par unite de volume, des densites des constituants du gaz \n         (en TAB2 . 'ESPEULE'), des scalaires passifs \n         (en TAB2 . 'SCALPASS') fois la densite\n \n MCHAM1: MCHAML contenant la masse volumique, qui a comme SPG (support \n         geometrique) 'DOMA' MOD1 'FACEL' (une composante, 'SCAL')\n         (voir operateur 'PRET')\n \n MCHAM2: MCHAML  contenant la vitesse  et les cosinus \n          directeurs du repere locale (n,t) dans le repere \n          global (x,y) (dans le cas 2D 6 composantes:\n          * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n          * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n          * 'NX' = n.x (SPG = 'FACE')\n          * 'NY' = n.y (SPG = 'FACE')\n          * 'TX' = t.x (SPG = 'FACE')\n          * 'TY' = t.y (SPG = 'FACE')).\n          (voir operateur 'PRET')\n \n  MCHAM3: MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression du\n          gaz (une  seule composante, 'SCAL').\n          (voir operateur 'PRET')\n \n (MCHAM4):MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant les fractions \n          massiques des especes qui apparaissent explicitement dans \n          les equations d'Euler (voir TAB2 . 'ESPEULE') ;\n          Dans le cas mono-espece, MCHAM4 n'est pas a donner\n          (voir operateur 'PRET')\n\n (MCHAM5):MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant les scalaires\n          transportes (noms des composantes en TAB2 . 'SCALPASS'') ;\n          (voir operateur 'PRET')\n \n  SORTIES\n \n \n  RCHPO1: objet de type CHPOINT (composantes =  LMOT1)\n          Residu  si MOT1 = 'RESI' (SPG = 'DOMA' MOD1 'CENTRE')\n          Flux si MOT1 = 'FLUX'    (SPG = 'DOMA' MOD1 'FACE') \n \n  RFLOT1: objet de type FLOTTANT\n          Il est le temps caracteristique associe a l'onde la plus\n          rapide.\n \n  Remarque\n  --------\n \n  RCHPO1 est egal a:\n  * la derive temporelle des inconnues si l'option 'RESI' est utilisee\n  * la composante normale a la face du flux convectif (les normales \n    etant donnees par 'DOMA' MOD1 'XXNORMAF') si l'option 'FLUX' \n    est utilisee\n\n\n\n IIIc : gaz  parfait, \"Free matrix method\"\n ____\n\n Discretisation en VF \"cell-centered\" des equations d'Euler pour un gaz \n parfait.\n Inconnues: U (densite, quantite de mouvement, energie totale par unite \n de volume).\n Implicitation via une methode \"sans matrice\" (a stoker), ou la \n convergence a l'etat stationnaire est effectue en utilisant la methode \n de Rusanov. Dans la cellule i-eme on doit calculer U_i^{n+1} t.q.\n\n    (U_i^{n+1} - U_i^{n})  * AN_i(U^{n}) = \n        RES_i(U^{n}) + (BN_i(U^{n}) - BN_i(U_i^{n+1}))\n\n ou \n AN_i contient les contributions liees au reciproque du pas de temps \n (local) et  aux diffusivites numeriques (Rusanov) aux interfaces;\n RES_i contient le residu calcule avec n'import quelle methode \n numerique (voir operateur KONV, cas IIIa).\n BN_i contient les contributions aux interfaces liees au flux \n numerique centres et la diffusivite numerique (Rusanov) multiplie par\n l'etat voisin.\n On remarque que a l'etat stationnaire on a\n\n    RES_i(U)=0\n\n Pour calculer le CHPOINT RES on utilise l'operateur KONV, cas IIIa.\n Pour calculer les CHPOINTs  AN et BN:\n\n AN = 'KONV' 'VF' 'PMONOFMM'  'AN'  LMOT1 MOD1  \n      CHPO1 CHPO2 CHPO3 CHPO4 FLOT1 ('CLIM' LMOT2 CHPO5) ;\n\n BN = 'KONV' 'VF' 'PMONOFMM'  'BN'  LMOT1 MOD1  \n      CHPO1 CHPO2 CHPO3 CHPO4 ('CLIM' LMOT2 CHPO5) ;\n \n ENTREES \n \n MOD1  : objet MODELE 'EULER'\n\n LMOT1 : objet de type LISTMOTS\n         Noms de composantes du resultat (RCHPO1)\n         Il contient dans l'ordre suivant: le nom de la densite\n         totale, de la quantite de mouvement, de l'energie totale \n         par unite de volume.\n \n CHPO1 : CHPOINT  contenant la masse volumique (en kg/m3; une \n         composante, 'SCAL').\n\n CHPO2 : CHPOINT  contenant les debits (en  kg/s/m2; deux \n         composantes en 2D, 'UX  ','UY  ', trois composantes\n         en 3D, 'UX  ','UY  ', 'UZ  ').\n     \n CHPO3 : CHPOINT  contenant l'energie totale par unite de volume \n         (en J/m3; une composante, 'SCAL').\n\n CHPO4 : CHPOINT  contenant le \"gamma\" du gaz (une composante, \n         'SCAL').\n\n FLOT1 : flottant, le double de la CFL\n\n LMOT2 : objet de type LISTMOTS\n         Noms de composantes de conditions aux bords  (CHPO5)\n         Il contient dans l'ordre suivant: le nom de la densite\n         totale, de la vitesse, de la pression.\n\n CHPO5 : CHPOINT contenant les conditions aux bords (densite, \n         vitesse et pression sur le bord).\n \n SORTIES\n\n AN    : objet de type CHPOINT (SPG = 'DOMA' MOD1 'CENTRE', \n         une composante, 'SCAL').\n \n BN    : objet de type CHPOINT (SPG = 'DOMA' MOD1 'CENTRE', \n          composantes =  LMOT1)\n\n IIId : gaz  parfait, \"Free matrix method\", Euler/NS bas Mach\n ____\n\n Discretisation en VF \"cell-centered\" des equations d'Euler/NS pour un gaz \n parfait.\n Inconnues: U (densite, quantite de mouvement, energie totale par unite \n de volume).\n Implicitation via une methode \"sans matrice\" (a stoker), ou la \n convergence a l'etat stationnaire est effectue en utilisant la methode \n de Rusanov (voir IIIc). Dans la cellule i-eme on doit calculer \n\n    \n    (U_i^{n+1} - U_i^{n}) = DUN \n\n Syntaxe:\n\n     DUN IPRO = 'KONV' 'VF' 'PMON1FMM' MOT1 LMOT1 MOD1\n                 CHPORE  CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 \n                 FLOT1 FLOT2 \n                 NJAC 'CLIM' LMOT2 CHPO6 CHPO7 ;\n\n ENTREES \n \n MOT1  : objet de type MOT, methode d'inversion  ('PJACO', point Jacobi, \n         'LJACOF', 'LJACOB', 'LJACOFB' Gauss-Seidel Forward, Backward et\n         Symmetric)\n\n LMOT1 : objet de type LISTMOTS\n         Noms de composantes du resultat (RCHPO1)\n         Il contient dans l'ordre suivant: le nom de la densite\n         totale, de la quantite de mouvement, de l'energie totale \n         par unite de volume.\n \n MOD1  : objet MODELE 'EULER'\n\n CHPORE: CHPOINT  contenant le residu explicite (Euler/NS)\n\n CHPO1 : CHPOINT  contenant la masse volumique (en kg/m3; une \n         composante, 'SCAL').\n\n CHPO2 : CHPOINT  contenant les debits (en  kg/s/m2; deux \n         composantes en 2D, 'UX  ','UY  ', trois composantes\n         en 3D, 'UX  ','UY  ', 'UZ  ').\n     \n CHPO3 : CHPOINT  contenant l'energie totale par unite de volume \n         (en J/m3 en SI, une composante, 'SCAL').\n\n CHPO4 : CHPOINT contenant le \"gamma\" du gaz (une composante, \n         'SCAL').\n\n CHPO5 : CHPOINT contenat la vitesse de cut-off (une composante, \n         'SCAL').\n\n FLOT1 : flottant, le pas de temps physique \n\n FLOT2 : flottant, le double de la CFL \"duale\"\n\n LMOT2 : objet de type LISTMOTS\n         Noms de composantes de conditions aux bords  (CHPO6)\n         Il contient dans l'ordre suivant: le nom de la densite\n         totale, de la vitesse, de la pression.\n\n CHPO6 : CHPOINT contenant les conditions aux bords (densite, \n         vitesse et pression sur le bord).\n \n CHPO7 : CHPOINT contenant le rayon spectral visquex (une composante, \n         'SCAL').\n \n SORTIES\n\n DUN   : objet de type CHPOINT (SPG = 'DOMA' MOD1 'CENTRE', \n         composantes = LMOT1).\n \n IPRO  : entier, 0 si tout s'est bien passe\n\n\n IIIg. Gas parfait multi-constituant\n ___________________________________\n\n IIIg.1  Le residu \n __________________\n\n\n RESIDU DELTAT = 'KONV' 'VF' 'PERFMULT' 'RESI' MOT1 LMOT1 MOD1 \n                  MCHAM1 MCHAM2 MCHAM3 MCHAM4 MCHAM5\n                  TABGAS (CHPO6) (CHPO7) (MAIL1) ;\n\n ENTR\u00c9ES \n\n\n MOT1   : objet de type MOT\n           Il indique la methode:\n           'GODUNOV'  = solveur exacte\n           'VANLEER'  = solveur de van Leer\n           'VLH'      = solveur de van Leer Hanel\n           'HUSVL'    = HUS (van Leer + Osher) \n           'HUSVLH'   = HUS (van Leer Hanel + Osher) \n           'AUSMPLUS' = AUSM+ \n           'ROE'      = solveur de Roe\n           'SS'       = solveur choc-choc\n           'AUSMPLM'  = AUSM+ low Mach\n           'RUSANOV'  = solveur de Rusanov\n           'RUSANOLM' = solveur de Rusanov pour le bas-Mach\n           'CENTERED' = schema centre\n           'ROELM'    = solveur de Roe-Turkel pour le bas-Mach\n           'HLLC'     = solveur HLLC\n           'HLLCLM'   = solveur HLLC-Turkel pour le bas-Mach\n           'AUSMPUP'  = solveur AUSM+up low Mach\n\n  \n LMOT1   : objet de type LISTMOTS\n           Noms de composantes du resultat (RCHPO1)\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de\n           volume, de l'especes qui sont dans TABGAS.'ESPEULE'.\n\n MOD1    : objet MODELE.\n\n MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n           SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n           (une composante, 'SCAL')\n           (voir operateur PRET)\n\n MCHAM2  : MCHAML contenant la vitesse  et les cosinus \n           directeurs du repere locale (n,t) dans le repere \n           global (x,y) (dans le cas 2D 6 composantes:\n           * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n           * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n           * 'NX' = n.x (SPG = 'FACE')\n           * 'NY' = n.y (SPG = 'FACE')\n           * 'TX' = t.x (SPG = 'FACE')\n           * 'TY' = t.y (SPG = 'FACE')).\n           (voir operateur PRET)\n\n MCHAM3  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression du\n           gaz (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM4  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant le \"gamma\" du \n           gaz (une seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM5 : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant les\n          fractions massiques (nombre des composants egal \n          celui dans TABGAS.'ESPEULE') \n\n TABGAS : la table contenant les properties de gas\n          (voir PRET ou PRIM)\n\n CHPO6   : CHPOINT contenant la vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO7   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'DOMA' MOD1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n(MAIL1)  : MAILLAGE de POI1 ou, si appartenant a  ('DOMA' MOD1 'FACE'),\n           on ne calcule pas la contribution au flux ou au residu.\n\n SORTIES\n\n RESIDU  : objet de type CHPOINT (composantes =  LMOT1)\n           Residu  si MOT2 = 'RESI' (SPG = 'DOMA' MOD1 'CENTRE')\n\n DELTAT  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide (meme dans le cas bas Mach, on considere le systeme \n           non preconditionne)\n\n Remarque\n --------\n\n RESIDU est egal a:\n * la derive temporelle des inconnues si l'option 'RESI' est utilisee\n\n\n\n IIIg.2   La matrice jacobienne du residu par rapport aux variables  \n _____    conservatives\n\n\n RMAT1  = 'KONV' 'VF' 'PERFMULT' 'JACOCONS' MOT1 MOD1 \n          TABGAS LMOT1 (MAIL1) \n          CHPO1 CHPO2 CHPO3 CHPO4 (CHPO5 CHPO6) ;\n \n\n ENTR\u00c9ES \n\n MOT1   : objet de type MOT\n          'VLH'       : jacobien du residu pour la methode VLH \n          'AUSMPLUS'  : jacobien du residu pour la methode AUSM+ \n          'AUSMPLM'   : jacobien du residu pour la methode AUSM+ low Mach\n\n TABGAS : la table contenant les properties de gas\n          (voir PRET ou PRIM)\n\n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume,\n           de l'especes qui sont dans TABGAS.'ESPEULE'.\n\n MOD1    : objet MODELE.\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (SPG = 'DOMA' DOM1 'CENTRE', deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant les especes \n           (SPG = 'DOMA' DOM1 'CENTRE', nombre des composantes\n            egal a celui dans TABGAS.'ESPEULE').\n\n CHPO5   : CHPOINT contenant la vitesse de cut-off\n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n CHPO6   : CHPOINT contenant la deuxieme vitesse de cut-off \n           (SPG = 'DOMA' DOM1 'CENTRE', une seule composante, \n            'SCAL'). \n           A donner dans le cas bas Mach\n\n (MAIL1) : MAILLAGE de POI1 ou, si appartenant a  ('DOMA' DOM1 'FACE'),\n           on ne calcule pas la contribution au jacobien.\n\n SORTIES\n\n RMAT1   : objet de type MATRIK\n           (SPG =  'DOMA' DOM1 'CENTRE')\n           (inconnues primales = inconnues duales = LMOT1)\n           Il contient le jacobien du residu par rapport aux variables \n           conservatives.\n\n IIIg.3   La contribution de quelque condition limite au residu et\n ------   a la matrice jacobienne\n\n\n RCHPLI RCHPRE = 'KONV' 'VF' 'PERFMULT' 'CLIM'  'RESI'\n                 $MOD1 $MOD2 TABGAS LMOTC LMOTP\n                 CHPRN CHPVN CHPPN CHPYN\n                 CHPLI MOT1 ;\n\n ou \n\n RJACO = 'KONV' 'VF' 'PERFMULT' 'CLIM'  'JACOCONS'\n                 $MOD1 $MOD2 TABGAS LMOTC LMOTP\n                 CHPRN CHPVN CHPPN CHPYN\n                 CHPLI MOT1 ;\n\n\n $MOD1   : l'objet modele du domaine total\n\n $MOD2   : l'objet modele du domaine du bord \n\n TABGAS : la table contenant les properties de gas\n          (voir PRET ou PRIM)\n\n LMOTC   : LISTMOTS, noms des variables conservatives\n\n LMOTP   : LISTMOTS, noms des variables primitives\n\n CHPRN   : densite  (SPG = 'DOMA' $MOD1 'CENTRE', une seule\n           composante, 'SCAL')\n\n CHPVN   : vitesse (SPG = 'DOMA' $MOD1 'CENTRE',\n           composantes: 'UX', 'UY', ('UZ'))\n\n CHPPN   : pression  (SPG = 'DOMA' $MOD1 'CENTRE', une seule \n           composante, 'SCAL')\n\n CHPYN   : les especes  (SPG = 'DOMA' $MOD1 'CENTRE', le nombre \n           des composantes egal a celui dans TABGAS.'ESPEULE')\n\n MOT1    : MOT, type de condition limite:\n           'INRI' : entree subsonique. On utilise les invariants de\n                    Riemann. On donne densite 'RN', vitesse 'UX' 'UY' \n                    ('UZ'), pression 'PN', les fractions massiques\n           'INSU' : entree subsonique. On donne l'enthalpie totale 'HT'\n                    par unite de masse, l'entropie 'S' (pression divisee \n                    par la densite a la puissance gamma),les fractions massiques\n                    On impose que \n                    la vitesse tangentielle est nulle. On recupere la \n                    pression a l'interieur. La contribution au residu et \n                    a la matrice jacobienne sont calculee via la methode\n                    'AUSMPLUS'.\n           'OUTP' : sortie subsonique. On donne la pression 'PN', \n                    on recupere la vitesse, la densite \n                    et les fractions massiques a l'interieur.\n                    La contribution au residu et a la matrice jacobienne \n                    sont calculee via la methode 'AUSMPLUS'.\n           'INJE' : condition limite d'injection compressible. \n                    On donne le flux de masse 'MOME', 'RT' (temperature fois\n                    la constante de gaz) et les fractions massiques; \n                    on impose que la vitesse\n                    tangentielle est nulle, on recupere la\n                     pression.\n           'INSS':  entree supersonique. On impose les\n                    conditions limites dans le flux. \n                    On donne la densite, la vitesse,\n                    la pression et les fractions massiques\n           'OUTSS': sortie supersonique. On donn le\n                    Champ par points vide.\n                    Toute l'information est recoupere de \n                    l'interieur.  \n           'RESE' : condition limite de type reservoir. \n                    On donne la pression 'PN' la densite 'RN' et les \n                    fractions massiques ; on impose que la vitesse\n                    tangentielle est nulle, on recupere la\n                    pression interieure et, selon sa valeur,\n                    on impose les conditions de col sonique ou \n                    subsonique.\n\n CHPLI   : condition limite impose (SPG ='DOMA' $MOD2 'CENTRE')\n           Les composantes dependent de MOT1\n\n Resultats\n\n RCHPLI : CHPOINT qui contient les valeur de la densite, de la vitesse, \n          de pression et des fractions massiques associe a la condition limite.\n          (SPG ='DOMA' $MOD2 'CENTRE', composantes = LMOTP)\n\n RCHPRE : CHPOINT qui contient la contribution de la condition limite au \n          residu (SPG en 'DOMA' $MOD1 'CENTRE', composantes = LMOTC)\n\n RJACO  : MATRIK qui contient la contribution de la condition limite a la\n          matrice jacobienne du residu.\n\n\n IV Transport des scalaires\n __________________________\n\n\n Discretisation en VF \"cell-centered\" du transport des scalaires\n          --> -->\nd/dt S + div . (u   S) = 0\n\n RCHPO1 RFLOT1 = 'KONV' 'VF' 'CLAUDEIS' 'FACE' MOT1 MOT2\n                        MOD1 CHPO1 MCHAM1 ; \n  \n or\n\n RMAT1 = 'KONV' 'VF' 'CLAUDEIS' 'FACE' 'JACO' MOT2\n                        MOD1 CHPO1 MCHAM1 ;\n\n ENTR\u00c9ES \n\n MOT1    : objet de type MOT\n           Il vaut 'RESI' si on veut calculer le residu,\n           (i.e. l' increment des scalaires passives par unite\n           de temps)\n           Il vaut 'FLUX' si on veut calculer le flux aux\n           interfaces\n\n MOT2    : objet de type MOT\n           Il indique la methode de calcul du flux\n           Pour l'instant\n           'UPWIND'\n           'CENTERED'\n\n MOD1    : objet MODELE.\n\n CHPO1   : CHPOINT contenant la vitesse aux FACEs\n           (SPG = 'DOMA' MOD1 'FACE')\n           2/3 composantes, 'UX', 'UY', 'UZ'\n\n MCHAM1  : MCHAML contenant les scalaires a transporter\n           SPG (support geometrique) 'DOMA' MOD1 'FACEL' \n\n SORTIES\n\n RCHPO1  : objet de type CHPOINT (memes composantes que MCHAM1)\n           Residu si MOT2 = 'RESI' (SPG = 'DOMA' MOD1 'CENTRE')\n           Flux si MOT2 = 'FLUX'  (SPG = 'DOMA' MOD1 'FACE')\n\n RFLOT1  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide.\n\n RMAT1   : objet de type MATRIK\n           (SPG =  'DOMA' MOD1 'CENTRE')\n           (inconnues primales = inconnues duales; memes composantes \n            que MCHAM1)\n\n\n V Flux bifluide\n ___________________________________________________\n\n\n Discretisation en VF \"cell-centered\" des equations bifluides pour un\n melange d'eau et air.\n\n Inconnues:\n\n mass volumique, quantite de mouvement (qdm) et energie totale par \n unite de volume (variables conservatives) de chaque fluide\n\n ou\n\n taux de vide, vitesses du gaz et du liquide, pression,\n temperature du gaz et du liquide (variables primitives)\n\n On peut calculer:\n\n RCHPO2 RCHPO1 RFLOT1 = 'KONV' 'VF' 'TWOFLUID' MOT1 MOT2  MOD1 LMOT1 \n      MCHAM1 MCHAM2 MCHAM3 MCHAM4 MCHAM5 MCHAM6 MCHAM7 MCHAM8;\n\n  ENTR\u00c9ES \n\n MOT1   : objet de type MOT\n           Il vaut 'RESI' si on veut calculer le residu\n           Il vaut 'FLUX' si on veut calculer le flux\n\n MOT2   : object de type MOT\n          Il indique la methode:\n           'AUSMP1'   = AUSM+\n           'AUSMP2'   = AUSM+ preconditione\n           'AUSMDV1'  = AUSMDV\n           'AUSMDV2'  = AUSMDV preconditione\n  \n LMOT1   : object de type LISTMOTS\n           Noms de composantes du resultat (RCHPO1)\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, \n             de la masse volumique du gaz,\n             de la masse volumique du liquide,\n             de la quantite de mouvement du gaz,\n             de la quantite de mouvement du liquide,\n             de l'energie totale du gaz par unite de volume           \n             de l'energie totale du liquide par unite de volume           \n\n MOD1    :  object MODELE\n\n MCHAM1  : MCHAML contenant la taux de vide, qui a comme \n           SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n           (une composante, 'SCAL')\n           (voir operateur PRET)\n\n MCHAM2  : MCHAML contenant la vitesse du gaz et les cosinus \n           directeurs du repere locale (n,t) dans le repere \n           global (x,y) (dans le cas 2D 6 composantes:\n           * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n           * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n           * 'NX' = n.x (SPG = 'FACE')\n           * 'NY' = n.y (SPG = 'FACE')\n           * 'TX' = t.x (SPG = 'FACE')\n           * 'TY' = t.y (SPG = 'FACE')).\n           (voir operateur PRET)\n\n MCHAM3  : MCHAML contenant la vitesse du liquide et les cosinus \n           directeurs du repere locale (n,t) dans le repere \n           global (x,y) (dans le cas 2D 6 composantes:\n           * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n           * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n           * 'NX' = n.x (SPG = 'FACE')\n           * 'NY' = n.y (SPG = 'FACE')\n           * 'TX' = t.x (SPG = 'FACE')\n           * 'TY' = t.y (SPG = 'FACE')).\n           (voir operateur PRET)\n\n MCHAM4  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression\n           (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM5  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la temperature du\n           gaz (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM6  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la temperature du\n           liquide (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM7  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n           gaz (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n MCHAM8  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n           liquide (une  seule composante, 'SCAL').\n           (voir operateur PRET)\n\n\n SORTIES\n -------\n\n RCHPO1  : objet de type CHPOINT (composantes =  LMOT1)\n           Residu si MOT2 = 'RESI' ou flux si MOT2 = 'FLUX'\n          (SPG = 'DOMA' MOD1 'CENTRE')\n\n RFLOT1  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide\n\n\n Vl  Ecoulement Reactif avec resolution  \"Discrete Equation Method\".\n ___________________________________________________________________\n\n\n \n Discretisation en VF \"cell-centered\" des equations d'Euler pour\n  un gaz parfait multi-constituent. Methode \"DEM\".\n\n\n  RCHPO1 RFLOT1 = 'KONV' 'VF' 'DEM' MOT1 MOT2 MOT3 MOD1 TABG LMOT1  \n                                    CHPA1 CHPA2 \n                                    MCHAA1  MCHAA2 \n                                    MCHAR1  MCHAR2\n                                    MCHAV1  MCHAV2\n                                    MCHAP1  MCHAP2 \n                                    GRALP1 K0 EPS  MAILLIM \n                                   (CHPV1 CHPV2) ;\n\n  ARGUMENTS :\n  ----------\n\n   MOT1   : objet de type MOT\n            Il vaut  'RESI' si on veut calculer le\n            residu\n\n   MOT2   : objet de type MOT\n           Il indique la methode de decentrement (partie non reactive)\n           'SS'     =  solveur choc-choc \n           'VLH'    = solver de Van Leer Hanel\n           'AUSMPUP'= solver AUSM+up (bas Mach)\n\n   MOT3   : objet de type MOT\n            'CONS'  = la vitesse fondamentale est constante (objet REEL)\n            'VARI'  = la vitesse fondamentale est variable  (objet CHAMPOINT)\n\n   MOD1   : objet modele, type EULER\n \n   TABG   : objet de type TABLE;\n           la table contenant les properties de gas\n           (voir PRET ou PRIM)\n     \n   LMOT1   : objet de type LISTMOTS\n            contenant les noms des composants du vecteur RCHPO1.\n            Ils sont donnes dans l'ordre suivant : noms de alpha, \n            de la  densite, de la vitesse, de\n            l'energie specifique totale.\n\n   CHPA1   : CHPOINT contenant la fraction volumique \\alpha de\n            la phase 1, qui a comme SPG (support geometric)   \n            l'index 'CENTRE' de la table MOD1 (une\n            composante, 'SCAL')\n\n   CHPA2   : CHPOINT contenant la fraction volumique \\alpha de\n            la phase 2, qui a comme SPG (support geometric)   \n            l'index 'CENTRE' de la table MOD1 (une\n            composante, 'SCAL')\n\n   MCHAA1  : MCHAML contenant la fraction volumique \\alpha de\n            la phase 1, qui a comme SPG (support geometric)   \n            l'index 'FACEL' de la table MOD1 (une\n            composante, 'SCAL')\n\n  MCHAA2  : MCHAML contenant la fraction volumique \\alpha de\n            la phase 2, le meme SPG que pour MCHAA1, (une\n            composante, 'SCAL') \n\n  MCHAR1  : MCHAML contenant la densite de la\n            phase 1, le meme SPG que pour MCHAA1, (une\n            composante, 'SCAL') \n               \n  MCHAR2  : MCHAML contenant la densite de la\n            phase 2, le meme SPG que pour MCHAA1, (une\n            composante, 'SCAL') \n\n\n  MCHAV1  : MCHAML contenant la vitesse du liquide de la\n            phase 1  et les cosinus \n            directeurs du repere locale (n,t) dans le repere \n            global (x,y) (dans le cas 2D 6 composantes:\n            * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n            * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n            * 'NX' = n.x (SPG = 'FACE')\n            * 'NY' = n.y (SPG = 'FACE')\n            * 'TX' = t.x (SPG = 'FACE')\n            * 'TY' = t.y (SPG = 'FACE')).\n            (voir operateur PRET)\n\n\n MCHAV2  : MCHAML contenant la vitesse du liquide de la\n            phase 2  et les cosinus \n            directeurs du repere locale (n,t) dans le repere \n            global (x,y) (la meme structure que pour MCHAV1)\n\n\n\n MCHAP1  : MCHAML (SPG =('DOMA' MOD1 'FACEL')) contenant la\n           la pression de la phase 1\n           (une composante, 'SCAL').\n\n MCHAP2  : MCHAML (SPG =('DOMA' MOD1 'FACEL')) contenant la\n           la pression de la phase 2\n           (une composante, 'SCAL'). \n\n K0      : FLOTTANT/CHAMPOINT (voir MOT3), vitesse fondamentale de la \n           flamme\n \n GRALP1  : CHPOINT, grad(alp1)/|grad(alp1)|\n\n EPSILON : FLOTTANT t.q. a < EPSILON => a = 0\n\n MAILLIM : MAILLAGE -- la partie du maillage ou le flux\n                       n'est pas determine ; il est\n                       calcule via les procedures pour\n                       les Conditions Limites.\n\n CHPV1   : CHPOINT, cut-off speed dans la methode AUSM+up,\n           phase 1\n \n CHPV2   : CHPOINT, cut-off speed dans la methode AUSM+up,\n           phase 2\n \n RESULTS :\n-----------\n\n RCHPO1  : objet de type CHPOINT (le noms des composantes\n           sont dans LMOT1)\n           Residu  MOT2 = 'RESI' (SPG =('DOMA' MOD1 'CENTRE'))\n\n RFLOT1  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide\n\n VII Ghost fluid method for the poor.\n ___________________________________________________\n\n\n Discretisation en VF \"cell-centered\" des equations bifluides pour le\n transport d'une interface.\n\n Inconnues: phi, densite, quantite de mouvement, energie totale par\n unite de volume, densites et fractions volumiques des constituants. \n\n\n RCHPO1 RFLOT1 = 'KONV' 'VF' 'GFMP' MOT1 MOT2 MOD1 \n                        TABG\n                        LMOT1  MCHAPH MCHAR MCHAV MCHAP (MCHAY \n                        MCHAA) MCHPPH  LOG1 MAILLIM ;\n ENTREES \n\n\n MOT1   : objet de type MOT\n          Il vaut 'RESI' si on veut calculer le residu\n\n MOT2   : objet de type MOT\n          Il indique la methode de decentrement:\n          'GODUNOV' \n\n MOD1   : objet modele de type Euler\n\n TABG   : objet de type TABLE\n          il contient les proprietes du gaz\n          (voir operateur PRIM)\n \n LMOT1   : objet de type LISTMOTS\n          Noms de composantes du resultat (RCHPO1)\n          Il contient dans l'ordre suivant les noms de\n           phi, de la densites, de la vitesse, de l'energie totale \n           par unite de volume, des densites des especes, des\n           fractions volumiques.\n\n MCHAPH  : MCHAML contenant la fonction phi, \n           qui a comme SPG (support geometrique) l'indice 'FACEL' de la\n           table associee a MOD1 (une composante, 'SCAL')\n\n MCHAR   : MCHAML contenant la masse volumique, \n           meme SPG que MCHAA1, une composante, 'SCAL'\n\n MCHAV   : MCHAML  contenant la vitesse et les cosinus\n           directeurs du repere locale (n,t) dans le repere\n           global (x,y), meme SPG que MCHAA1, \n           (dans le cas 2D 6 composantes:\n           * 'UN' = vitesse normale  (SPG =('DOMA' MOD1 'FACEL'))\n           * 'UT' = vitesse tangentielle  (SPG =('DOMA' MOD1 'FACEL'))\n           * 'NX' = n.x (SPG = 'FACE')\n           * 'NY' = n.y (SPG = 'FACE')\n           * 'TX' = t.x (SPG = 'FACE')\n           * 'TY' = t.y (SPG = 'FACE')).\n\n MCHAP   : MCHAML (SPG =('DOMA' MOD1 'FACEL')) contenant la pression \n          (une  seule composante, 'SCAL').\n\n MCHAY   : MCHAML (SPG =('DOMA' MOD1 'FACEL')) contenant les fractions\n           massiques (composantes dans TABG . 'ESPEULE').\n\n MCHAA   : MCHAML (SPG =('DOMA' MOD1 'FACEL')) contenant les fractions\n           volumiques (composantes dans TABG . 'ESPEULE').\n\n MCHPPH  : CHPO contenant phi,\n           qui a comme SPG (support geometrique) l'indice 'CENTRE' de la\n           table associee a MOD1 (une composante, 'SCAL')\n\n LOG1    : LOGIQUE, si VRAI phi et les fractions volumiques sont\n           traites avec une approche conservative\n\n MAILLIM : MAILLAGE -- points faces ou le flux n'est pas calcule.\n\n SORTIES\n\n RCHPO1  : objet de type CHPOINT (composantes =  LMOT1)\n           Residu  si MOT2 = 'RESI' (SPG =('DOMA' MOD1 'CENTRE'))\n\n RFLOT1  : objet de type FLOTTANT\n           Il est le temps caracteristique associe a l'onde la plus\n           rapide.",
  },
  {
    name: "KOPS",
    url: "KOPS",
    documentation:
      "$$$$ KOPS     NOTICE  MAGN      17/02/24    21:15:18     9323           \n                                             DATE     17/02/24\n\n  Operateur KOPS                          Voir aussi :\n     --------------  \n\n     RES = KOPS CHP1 'MOTCLE' CHP2 ;\n\n     ou\n\n     RES = KOPS CHP1 'MOTCLE' TABD ;\n\n\n\n     Objet :\n\n     Effectue des operations arithmetiques entre deux CHPOINTs\n     ou un CHPOINT et un flottant.\n     Calcule le gradient ou le rotationnel d'un CHPOINT\n     Calcule le produit matrice vecteur entre un objet MATRIK et un\n     CHPOINT\n     Calcule le produit entre un objet MATRIK et un FLOTTANT\n\n     RES , CHP1 CHP2  CHPOINT et/ou FLOTTANT\n     TABD  objet MODEL 'NAVIER_STOKES'\n     'MOTCLE' a choisir dans la liste suivante :\n\n               '*'     multiplication  de deux CHPOINT\n                       de type SCALAIRE ou VECTEUR composante par\n                       composante\n                       le resultat est un CHPOINT SCALAIRE ou\n                       VECTEUR\n\n               '/'  idem precedent pour la division\n\n               '+'  idem precedent pour l'addition\n\n               '-'  idem precedent pour la soustraction\n\n               '|<' Borne inferieurement un CHPOINT par un flottant.\n                    OBJ1 = KOPS OBJ2 '|<' OBJ3;\n                         OBJ1,OBJ2 CHPOINT  OBJ3 FLOTTANT\n\n               '>|' Borne superieurement un CHPOINT par un flottant.\n                    OBJ1 = KOPS OBJ2 '>|' OBJ3;\n                         OBJ1,OBJ2 CHPOINT  OBJ3 FLOTTANT\n\n               'GRAD'  calcule le Gradient d'un CHPOINT scal sommet.\n                       Le resultat est un CHPOINT vect centre.\n                       Ne marche que pour les discretisations LINE,MACRO\n\n               'GRADS' calcule le Gradient d'un CHPOINT scal sommet.\n                       Le resultat est un CHPOINT vect sommet.\n                       Marche pour toutes les discretisations LINE,MACRO\n                       et QUAF.\n\n               'ROT '  calcule le Rotationel d'un CHPOINT vect sommet\n                       le deuxieme argument doit etre une table domaine\n                       ex : rt2d= kops un 'ROT' $mt ;\n                       Cf exemple 1 ci-dessous\n\n               'CLIM' N (N is an INTEGER)\n                       surcharge dans CHP1 les valeurs de CHP2\n                       N=0 les noeuds correspondants sont mis a 0.\n                       N=1  \"     \"         \"         \"   a 1.e30\n                       N=2  \"     \"         \"         \"   a (CHP2*1.e30)\n                       N=3  \"     \"         \"         \"   a  CHP2\n                       Si l'entier N est precede du signe -, les composantes\n                       de CHP2 doivent etre identiques a celles de CHP1\n                       sinon CHP1 n'est pas surcharge.\n                       Si l'entier N est positif, on teste sur les composantes\n                       UX UY UZ\n\n               'MULT'  realise le produit matrice vecteur entre un objet\n                       MATRIK et un CHPOINT ou un FLOTTANT\n                       ex : p1=kops ma1 'MULT' un ;\n                       Cf exemple 2 ci-dessous : calcul de la pression\n                       par une methode de penalisation.\n\n               'RIMA'  permet le passage d'un objet matrik a un objet\n                       rigidite et vice-versa\n\n                        Example\n                        -----------\n                        rig1    = KOPS RIMA matrik1 ;\n                        matrik2 = KOPS RIMA rig2 ;\n                        rig1, rig2 objet de type rigidite\n                        matrik2, matrik1 objet de type matrik\n\n                        Si on veut forcer la cr\u00e9ation d'un objet RIGIDITE non\n                        sym\u00e9trique, on indique le mot-cl\u00e9 'NSYM'\n                        Example\n                        -----------\n                        rig1    = KOPS RIMA matrik1 'NSYM' ;\n\n               'MATIDE' permet de creer un objet RIGIDITE ou MATRIK identite\n                       mat1 = kops lmot1 geo1 ('MATRIK') ;\n                       ou\n                       lmot1 = liste de noms des inconnues (LISTMOTS)\n                       geo1 = support geometrique des inconnues\n                              (MAILLAGE)\n                       mat1 = RIGIDITE ou MATRIK identite\n\n               'MATDIAGO' permet de creer un objet RIGIDITE (ou MATRIK)\n                          diagonal\n                       mat1 = kops 'MATDIAGO' chpo1 ('MATRIK') ;\n                       ou\n                       chpo1 = valeurs des termes diagonaux (CHPOINT)\n                       mat1 = RIGIDITE (ou MATRIK) diagonal\n                       Pour les objets RIGIDITE, utilisez plutot\n                       l'operateur 'MANU' 'RIGI'.\n\n               'CHANINCO' mot clef obsolete. Voir l'operateur CHAN\n                          mot clef 'INCO'.\n\n               'NINCDUPR' change les noms d'inconnues duales d'une\n                          matrice (ou d'un chpoint dual) afin qu'ils\n                          soient identiques aux noms d'inconnues\n                          primales\n                          |mat2 | = 'KOPS' 'NINCDUPR' |mat1 | ;\n                          |chpo2|                     |chpo1|\n                          mati sont de type RIGIDITE ou MATRIK\n\n               'NINCPRDU' change les noms d'inconnues duales d'une\n                          matrice (ou d'un chpoint dual) afin qu'ils\n                          correspondent aux noms d'inconnues primales\n                          suivant la correspondance conventionnelle\n                          de Castem\n                          (ex: 'UX' <-> 'FX', 'T' <-> 'Q', etc...)\n                          |mat2 | = 'KOPS' 'NINCPRDU' |mat1 | ;\n                          |chpo2|                     |chpo1|\n                          mati sont de type RIGIDITE ou MATRIK\n\n               'TRANSPOS' transpose une matrice (type MATRIK ou RIGIDITE)\n                          mat2 = 'KOPS' 'TRANSPOS' mat1 ;\n\n               'EXTRNINC' mot clef obsolete. Voir l'operateur EXTR\n                          mot clef 'COMP' et 'COMP' 'DUAL'\n\n               'EXTRINCO' mot clef obsolete. Voir l'operateur EXTR\n\n               'EXTRDIAG' mot clef obsolete. Voir l'operateur EXTR\n                          mot clef 'DIAG'\n\n               'SPAIDIAG' Renvoie un inverse approche diagonal (SPAI-D)\n                          (type CHPOINT) d'une matrice (type MATRIK ou\n                          RIGIDITE).\n                          chp1 = 'KOPS' 'SPAIDIAG' mat1 ;\n\n               'EXTRCOUP' cree une table contenant la partition des\n                          blocs diagonaux que l'on peut faire a partir\n                          de la matrice ma1. Chaque entree de la table\n                          contient la liste des inconnues duales\n                          constituant un bloc.\n                          tab = 'KOPS' 'EXTRCOUP' ma1;\n\n               'POINTEUR' renvoie le pointeur d'un objet (type ENTIER)\n                          (voir aussi l'operateur 'MANU' 'OBJE')\n                          enti = 'KOPS' 'POINTEUR' obj1 ;\n\n               'MATRIK'   renvoie un champoint et une matrice\n                          (type MATRIK) vide\n                          chvid matvid = 'KOPS' 'MATRIK' ;\n\n               'CMCT'     calcule un produit de matrices du type\n                          complement de Schur C D Bt.\n                          D est diagonale stockee dans un chpoint.\n                          mat3 = 'KOPS' 'CMCT' mat1 mat2 (chpo) ;\n                          mat1 : matrice C (type RIGIDITE ou MATRIK)\n                          mat2 : matrice B (type RIGIDITE ou MATRIK)\n                          chpo : matrice D optionnelle (type CHPOINT)\n                          mat3 : matrice CDBt ou CBt\n                                         (type RIGIDITE ou MATRIK)\n\n               'RELA'     Transforme une matrice (type RIGIDITE) en\n                          matrice de relations (contraintes type\n                          RIGIDITE). On peut pr\u00e9ciser un second membre\n                          (type CHPOINT) afin de donner une valeur non\n                          nulle \u00e0 la relation.\n                          mat2 (chp2) = 'KOPS' 'RELA' mat1 (chp1) ;\n\n               'CONDENSE' A partir d'un systeme lineaire (A, b)\n                          (type RIGIDITE, CHPOINT), on construit un\n                          systeme reduit obtenu par elimination des\n                          contraintes.\n                          Ar br br1 = 'KOPS' 'CONDENSE' A b ;\n\n               'EVAPORE'  A partir de la solution d'un systeme reduit\n                          xr (type CHPOINT), on reconstruit la solution\n                          du systeme avant reduction\n                          x = 'KOPS' 'EVAPORE' xr A b br1 ;\n\n\n    EXEMPLE DIVERS\n    --------------\n\n\n\n    Exemple 1 :\n    -----------\n\n    Calcul et trace de la fonction de courant d'un champ de vitesse\n    (par resolution de l'equation laplacien(psi) + rot(un) = 0)\n    un  : champ de vitesse\n    $mt : table domaine\n\n\n    sw = kops un 'ROT' $mt ;\n    rk = EQEX $MT 'OPTI' 'EF' 'IMPL'\n    ZONE  $mt OPER LAPN 1.    INCO 'PSI'\n    ZONE  $mt OPER FIMP sw    INCO 'PSI'\n    'CLIM' 'PSI' 'TIMP' (parois) 0.\n    ;\n\n    rk.'INCO'.'PSI'=kcht $mt scal sommet 0. ;\n    exic rk ;\n    psi=rk.'INCO'.'PSI' ;\n    trace psi mt ;\n\n\n    Exemple 2 :\n    -----------\n\n    Calcul de la pression par une methode de penalisation.\n\n    KPRESS='CENTREP1' ;   en accord avec l'approximation de pression\n    EPSS=1.e10;           et le EPSS dans le calcul de la vitesse\n\n    r1=eqex $mt 'OPTI' EF IMPL KPRESS\n    kmac (r1.'1KMAC') ;\n    un= nomc (mots UX UY ) (mots 1UN 2UN ) un ;\n\n    p1=kops (r1.'1KMAC'.'MATELM') 'MULT' un ;\n\n    p11= kcht $mt SCAL KPRESS (nomc p1 'SCAL') ;\n    pn=elno $mt p11 KPRESS ;\n    trace pn $mt.maillage ;",
  },
  {
    name: "KP",
    url: "KP",
    documentation:
      "$$$$ KP       NOTICE  BP208322  14/02/17    21:15:07     7960           \n                                             DATE     14/02/17\n                                             \n  Operateur KP                             Voir aussi :\n    ------------  \n     Cas 1 :\n     -------\n\n      RIG1 = KP  MODL1 | CHPO1 | ( 'FLAM' ) ( 'ASYM' ) ;\n                       | CHAM1 |\n\n     Cas 2 :\n     -------\n\n      RIG1 = KP  MODL1 RG (VEC1) ( 'FLAM' ) ( 'ASYM' ) ;\n                       \n\n\n\n    Objet :\n    _______\n\n    L'operateur KP calcule la matrice de correction des forces associee a la\n    linearisation des actions de pression autour d'une position d'equilibre.\n    Une valeur de pression positive designe une force de pression ayant le \n    meme sens que la normale locale.\n\n    Cas 1 : On calcule la rigidite associee au changement de la direction de \n    ------- la normale ainsi que de l'aire de surface soumise a un champ de\n            pression donne.\n\n    Cas 2 : On calcule la rigidite associee a la variation de la valeur de \n    ------- pression \"vue\" par la structure quand elle bouge dans un champ de\n            pression a gradient lineaire \"impose\", qui ne depend pas \n            de mouvement de la structure (par exemple pression hydrostatique).\n            Actuellemnt cette option est disponible  seulement pour les \n            elements COQ3, DKT, DST et COQ4.\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : Objet modele (type MMODEL ).\n\n      CHPO1  : champ de pression (type CHPOINT).\n\n      CHAM1  : champ de pression (type MCHAML).\n\n     'FLAM'  : mot-cle necessaire si l'on veut utiliser la matrice\n               pour faire une analyse de flambage (facultatif).\n\n     'ASYM'  : mot-cle necessaire si l'on veut calculer la matrice\n               asymetrique (facultatif).\n\n      RG     : module du gradient lineaire de la pression (type FLOTTANT).\n               Par exemple en cas de pression hydrostatique |RG| = |p*g|\n               ou p est la masse volumique du fluide et g l'acceleration \n               de la pesanteur.\n\n      VEC1   : direction du gradient de la pression (type POINT, \n               facultatif). Par defaut il est defini comme la normale \n               locale a chaque element de surface du maillage sous-jacent\n               au modele MODL1. Ceci permet d'utiliser l'operateur pour \n               calculer la rigidite associee a un sol elastique de type \n               Winkler (contrainte de sol proportionelle au deplacement \n               normal). Dans ce cas RG est la constante de raideur du sol.\n\n      RIG1   : objet resultat (type RIGIDITE).\n\n\n\n    Remarques :\n    __________\n\n    Le numero d'harmonique en cas d'analyse en serie de Fourier est\n    defini par la directive OPTION.\n    L'option de calcul 'ASYM' n'est pas disponible avec les elements  \n    coq2 (mode de Fourier).",
  },
  {
    name: "KPRO",
    url: "KPRO",
    documentation:
      "$$$$ KPRO     NOTICE  CHAT      11/09/12    21:16:47     7124           \n                                             DATE     11/09/12\n\n  Operateur KPRO                           Voir aussi :\n    --------------  \n    CHP2 = KPRO  CHP1 GEO ;\n\n\n    L'operateur KPRO construit la projection du champoint CHP1 selon\nles connectivites definies par GEO:\nla valeur de CHP1 au point 1 de chaque element de GEO est projetee sur\nle point 2 du meme element de GEO.\n\n    Commentaire :\n    _____________\n\n    CHP1         : champoint a projeter\n\n    CHP2         : champoint resulat de la projection\n\n    GEO          : objet maillage definissant les connectivites",
  },
  {
    name: "KRED",
    url: "KRED",
    documentation:
      "$$$$ KRED     NOTICE  CHAT      11/09/12    21:16:47     7124           \n                                             DATE     11/09/12\n\n  Operateur KRED                           Voir aussi :\n    --------------  \n\n\nCet operateur a ete remplace par l'operateur KCHT.",
  },
  {
    name: "KRES",
    url: "KRES",
    documentation:
      "$$$$ KRES     NOTICE  GOUNAND   19/07/03    21:15:00     10248          \n                                             DATE     19/07/03\n \n  Operateur KRES                         Voir aussi :\n      --------------  \n       1)  KRES RVP CHPO1 'BETA' VAL1 VAL2 'PIMP' VAL3 VAL4 ; \n      \n      \n       2)  CHPO3 = KRES MA1 'TYPI' TAB1 ;\n\n       2bis)  CHPO3 = KRES MA1 (CHPO2) (MOTi VALi) ;\n                           \n                            \n\n      ----------------------\n      |  1ere possibilite  |\n      ----------------------\n\n      Objet :\n      _______\n\n      Le foncteur KRES resout une equation de pression dans le\n      cadre de la resolution semi-implicite des equations\n      de Navier-Stokes dans CASTEM 2000.\n\n      Commentaire :\n      _____________\n\n      RVP      : objet de type TABLE de sous-type EQPR\n\n      CHPO1    : objet de type CHPOINT contenant la variable\n                 PRESSION\n\n      VALi     : objets de type REEL non documentes\n\n      ----------------------\n      |  2eme possibilite  |\n      ----------------------\n\n      Objet :\n      _______\n    \n      L'operateur KRES resout un systeme d'equations lineaires\n      de type Ax=b par une methode directe ou iterative.\n\n      Commentaire :\n      _____________\n\n      MA1      : objet de type RIGIDITE (ou MATRIK)\n                 c'est la matrice A.\n\n      TAB1     : TABLE de sous-type METHINV contenant les \n                 informations optionnelles.\n\n      CHPO2    : objet de type CHPOINT contenant le second membre\n                 du systeme a resoudre.\n                 C'est le \"vecteur\" b.\n    \n      CHPO3    : objet de type CHPOINT contenant en retour\n                 (si la resolution a abouti) le \"vecteur\"\n                 solution du systeme : x. \n\n      Les informations sont :\n      - soit stockees dans TAB1 : TAB1 . MOTi = VALi (syntaxe 2) ;\n      - soit donnees sur ligne de commande (syntaxe 2bis).\n\n      MOTi et VALi peuvent prendre les valeurs suivantes :\n\n      - CLIM (type CHPOINT) : \n         Conditions aux limites de Dirichlet\n\n      - SMBR (type CHPOINT) : \n         Second membre CHPO2\n\n      - TYPINV (type ENTIER) :\n         Methode d'inversion du systeme\n         defaut ->  1  : resolution directe (Crout)\n                    2  : Gradient Conjugue\n                    3  : Bi-Gradient Conjugue Stabilise (BiCGSTAB)\n                    4  : BiCGSTAB(l)\n                    5  : GMRES(m) : restarted Generalized Minimal\n                                    Residual\n                    6  : CGS (Conjugate Gradient Squared)\n                    7  : Algebraic Multigrid Notay FCG \n                         (matrice symetrique)\n                    8  : Algebraic Multigrid Notay GCR(m)\n                         (matrice non symetrique)\n                    9  : BiCG\n\n      - MATASS (type MATRIK) :\n         Matrice de meme structure que MA1 (eventuellement egale)\n         servant a preconditionner l'assemblage.\n         Par defaut : MA1\n\n      - TYRENU (type MOT) :\n         Methode de renumerotation des ddl :\n         - 'RIEN' \n         - 'SLOA' : algorithme de S.W. Sloan \n         - 'GIPR' : algorithme de Gibbs-King \n         - 'GIBA' : algorithme de Gibbs-Poole-Stockmeyer\n         Par defaut : 'SLOA'\n\n      - PCMLAG (type MOT) :\n         Methode de prise en compte des multiplicateurs de Lagrange :\n         - 'RIEN'\n         - 'APR2', 'APR3', 'APR4', 'APR5'.\n         Par defaut : 'APR2'\n\n      - SCALING (type ENTIER) :\n         Scaling de la matrice :\n         - 0 : pas de scaling\n         - 1 : scaling par les normes euclidiennes des lignes \n               et des colonnes \n         - 2 : scaling par la norme L1 des lignes et des colonnes \n         Par defaut : 0\n\n      - SCALAG (type ENTIER) :\n         Mise a l'echelle des multiplicateurs de Lagrange :\n         - 0 : pas de mise a l'echelle\n         - 1 : mise a l'echelle\n         Par defaut : 1\n\n       - OUBMAT (type ENTIER) :\n          Oubli des matrices elementaires :\n          - x0 : non\n          - x1 : oui\n          - x2 : suppression\n          Destruction de la matrice assemblee (et du preconditionneur\n          eventuel) apres resolution :\n          - 0x : non\n          - 1x : oui, sauf le profil Morse\n          - 2x : oui\n          Par defaut : 00         \n\n      - IMPR (type ENTIER) : \n         Niveau d'impression\n\n      - LTIME (type LOGIQUE) :\n         Si cet indice vaut VRAI, l'operateur sort un deuxieme resultat\n         de type TABLE qui contient les temps CPU passes dans les grandes\n         etapes de l'algorithme de resolution.\n\n      - LDEPE (type LOGIQUE) :\n         Si cet indice vaut VRAI (valeur par defaut) et que la matrice\n         du systeme a resoudre est de type RIGIDITE, on effectue une \n         elimination (si possible) des contraintes avant de resoudre.\n\n      - CVGOK (type ENTIER) (syntaxe 2 uniquement) :\n           Une fois la resolution achevee, contient un entier strictement\n           positif si la m\u00e9thode de r\u00e9solution n'a pas converg\u00e9 et un \n           entier strictement n\u00e9gatif si une erreur emp\u00eachant toute\n           r\u00e9solution s'est produite.\n\n      - indices specifiques aux methodes iteratives (2..9) :\n\n        * XINIT (type CHPOINT) :\n           Estimation de depart de l'inconnue.\n           Par defaut : un chpoint nul.\n\n        * MAPREC (type MATRIK) :\n           Matrice de meme structure que MA1 (eventuellement egale)\n           dont on utilise le preconditionneur.\n           Par defaut : MA1\n\n        * NITMAX (type ENTIER) :\n           Nombre maximum de produits matrice-vecteur a effectuer.\n           Par defaut : 2000.\n        * CALRES (type ENTIER) :\n           Fa\u00e7on de calculer le critere d'arret\n           Par defaut : 0\n           0 : ||b-Ax||_2 / ||b||_2\n           1 : ||b-Ax||_2 / ||b-Ax0||_2\n           (|| ||_2 : norme euclidienne)\n\n        * RESID  (type REEL) :\n           Valeur maximum du critere d'arret\n           Par defaut : 1.D-10\n           \n        * GMRESTRT (type ENTIER) :\n           Parametre m de redemarrage pour la methode GMRES(m) \n           ou pour la methode GCR(m)\n           Par defaut : 50\n\n        * LBCG (type ENTIER) :\n           Parametre l pour BiCGSTAB(l)\n           Par defaut : 4\n\n        * IMPINV (type ENTIER) :\n           Niveau d'impression pour la partie resolution iterative\n\n        * BCGSBTOL (type REEL) :\n           'Breakdown tolerance' pour les methodes de type BiCG et CGS.\n           Par defaut : 1.D-40\n\n        * IDDOT (type ENTIER) :\n           IDDOT=0, utilisation du produit scalaire normal.\n           IDDOT=1, utilisation du produit scalaire compense.\n           Par defaut : 0\n\n        * IMVEC (type ENTIER) :\n           IMVEC=0, pas de parall\u00e9lisme pour les produits matrice-vecteur\n           IMVEC=1, parall\u00e9lisme strat\u00e9gie 1, entrelace les lignes.\n           IMVEC=2, parall\u00e9lisme strat\u00e9gie 2, groupe les lignes.\n           Par defaut : 2\n\n        * FCPRECT (type ENTIER) (syntaxe 2 uniquement) :\n           Frequence de recalcul du preconditionneur en fonction\n           de l'indice de boucle sur les pas de temps.\n           (utilise par la procedure EXEC)\n           Par defaut : 1\n\n        * FCPRECI (type ENTIER) (syntaxe 2 uniquement) :\n           Frequence de recalcul du preconditionneur en fonction\n           de l'indice de boucle sur la boucle d'iterations utilisee\n           pour resoudre les non-linearites.\n           (utilise par la procedure EXEC)\n           Par defaut : 1\n\n        * CONVINV (type LISTREEL) (syntaxe 2 uniquement) :\n           Une fois la resolution achevee, contient \n           l'historique du critere d'arret en fonction du nombre \n           d'iterations effectuees.\n\n        * NMATVEC (type LISTENTI) (syntaxe 2 uniquement) :\n           Une fois la resolution achevee, contient \n           le nombre de produits matrice-vecteur effectues en \n           fonction du nombre d'iterations.\n\n      - indices specifiques aux preconditionnements :\n\n        * PRECOND (type ENTIER) : \n           Type de preconditionnement :\n                     0 : pas de preconditionnement\n                     1 : preconditionnement par la diagonale\n                     2 : preconditionnement D-ILU\n           defaut -> 3 : preconditionnement ILU(0) (Crout)\n                     4 : preconditionnement MILU(0) (Crout modifie)\n                     5 : preconditionnement ILUT (dual truncation)\n                     6 : preconditionnement ILUT2 (une variante \n                         remplissant mieux la memoire allouee)\n                     7 : preconditionnement ILUTP (avec pivoting)\n                     8 : preconditionnement ILUTP+0 (avec pivoting)\n                         On garde les termes qui seraient dans ILU(0)\n                     9 : preconditionnement ILU(0)-PV\n                    10 : preconditionnement ILU(0)-PV filtre\n\n        * MILURELX (type REEL) :\n           Parametre de relaxation pour le preconditionnement\n           MILU(0) compris entre 0. et 1.\n           S'il est egal a 0, on se ramene a ILU(0)\n           S'il est egal a 1, MILU(0) est dit non relaxe\n           Par defaut : 1.D0 \n\n        * ILUTLFIL (type REEL) :\n           Pour un preconditionnement de type ILUT :\n           encombrement maximal du preconditionneur par rapport a la\n           matrice MA1.\n           Par defaut : 2.D0\n           \n        * ILUTDTOL (type REEL) (comprise entre 0.D0 et 1.D0) :\n           Pour un preconditionnement de type ILUT :\n           \"drop tolerance\" pour le preconditionneur, i.e. en-dessous de\n           cette valeur relative, les termes de la factorisation\n           incomplete seront oublies.\n           Par defaut : -1.D0 (on garde tous les termes).\n\n        * ILUTPPIV (type REEL) (compris entre 0.D0 et 1.D0) :\n           Pour un preconditionnement ILUTP :\n           0.D0 : on ne pivote pas\n           1.D0 : on pivote tout le temps\n           (recommandation : entre 0.1D0 et 0.01D0)\n           Par defaut : 0.1D0 \n\n        * ILUPRELX (type REEL) :\n           Parametre de filtre pour le preconditionnement\n           ILU(0)-PV filtre compris entre 0. et +inf\n           S'il est egal a 0, on se ramene a ILU(0) qd il n'y a pas de\n           pivots negatifs.\n           S'il est egal a +inf, ILU(0)-PV est dit non filtre\n           Par defaut : 0.5D0 \n\n      Attention :\n      ___________\n\n      1) La methode du gradient conjugue fonctionne generalement \n         pour les matrices A SYMETRIQUES, les autres methodes iteratives\n         fonctionnent egalement pour les matrices A NON-SYMETRIQUES.\n\n      2) Les methodes iteratives peuvent ne pas converger (en \n         particulier si la matrice est mal conditionnee).\n\n      3) Pour la methode GMRES(m), le residu b-Ax est toujours\n         decroissant, mais peut eventuellement stagner.\n         Plus m est grand, meilleure est la convergence, mais\n         l'occupation memoire et le temps de calcul moyen\n         par iteration croissent lineairement avec m.\n\n      4) Les preconditionneurs sont utilises pour ameliorer le\n         conditionnement du systeme a resoudre.\n         \n         TOUTEFOIS, les preconditionneurs (qui sont de type\n         factorisation incomplete) ne sont pas garantis d'exister\n         ni meme d'ameliorer le conditionnement (pivots nuls ou \n         petits).\n\n         Ceci, MEME SI la matrice A est factorisable.",
  },
  {
    name: "KRESP",
    url: "KRESP",
    documentation:
      "$$$$ KRESP    NOTICE  CHAT      11/09/12    21:16:48     7124           \n                                             DATE     11/09/12\n \n    Procedure KRESP                          Voir aussi : EXEC KRES\n          \n    CHPO2 = KRESP  MA1 'TYPI' TAB1 MOTi VALi ;\n      \n\n\n\n      Objet :\n      _______\n\n      La procedure KRESP est appelee par la procedure EXEC.\n      Elle prepare le calcul du preconditionneur puis fait appel \n      a l'operateur KRES.\n\n      Commentaire :\n      _____________\n\n      MA1      : objet de type MATRIK (ou RIGIDITE)\n                 c'est la matrice A.\n\n      TAB1     : TABLE de sous-type METHINV contenant les \n                 informations optionnelles (idem KRES).\n\n      CHPO1    : objet de type CHPOINT contenant le second membre\n                 du systeme a resoudre par KRES.\n                 C'est le \"vecteur\" b.\n    \n      CHPO2    : objet de type CHPOINT contenant en retour\n                 (si la resolution a abouti) le \"vecteur\"\n                 solution du systeme : x. \n\n      MOTi et VALi prennent les valeurs suivantes :\n\n      - CLIM (type CHPOINT) : \n         Conditions aux limites de Dirichlet\n\n      - SMBR (type CHPOINT) : \n         Second membre CHPO2\n\n      - IMPR (type ENTIER) : \n         Niveau d'impression",
  },
  {
    name: "KR_PRO",
    url: "KR_PRO",
    documentation:
      "$$$$ KR_PRO   NOTICE  CHAT      11/09/12    21:16:48     7124           \n                                             DATE     11/09/12\n\n                                         Voir aussi : DARCYSAT\n                                                      HT_PRO    \n    ------------------                  \n\n    CHPO2 = KR_PRO  TAB1 CHPO1  ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule la permeabilite a l'eau\n    en fonction de la saturation reduite S. \n    Cette procedure est utilisee a partir de la procedure DARCYSAT.\n    La loi est donnee par le sous type de TAB1 :\n    - PUISSANCE\n       k = ks S^B\n    - MUALEM\n       k = ks * s^0.5 * (1 - (1 - (s^(1/M)))^M)^2\n    - BURDINE\n       k = ks * s^2 * (1 - (1 - (s^(1/M)))^M)\n    - MUALEM_BURDINE\n       k = ks * s^A * (1 - (1 - (s^(1/M)))^M)^B\n    - BROOKS_COREY\n       k = ks * s^A * S^(2/lambda + B)\n    - EXPONENTIELLE\n       k = ks * C / (C - 1 + exp (- alpha Pw N))\n    - LOGARITHMIQUE\n       k = ks * C / (C + (log (- alpha Pw))^N)\n       ou -alpha Pw tronque a 1 quand devient inferieur a 1.\n\n    \n    Commentaires\n    -------------\n\n    TAB1  : table contenant les caracteristiques physiques, ayant\n            pour indices \n\n            SI loi 'PUISSANCE'\n            'ALPHA'   : coef. B (s.d.)\n\n            SI loi 'MUALEM' 'BURDINE' et 'MUALEM_BURDINE'\n            'COEF_M' : coef M\n\n            SI loi 'MUALEM_BURDINE' et 'BROOKS_COREY'\n            'COEF_A' : coef A\n            'COEF_B' : coef B        \n    \n            SI 'BROOKS_COREY'\n            'LAMBDA' : coef lambda\n\n            SI 'EXPONENTIELLE' ou 'LOGARITHMIQUE'\n            'ALPHA'  : alpha\n            'COEF_C' : C\n            'COEF_N' : N\n\n\n            'PERMSAT' : coef. Ks, permeabilite a saturation (m/s)\n                      ('FLOTTANT', ou 'CHPOINT'\n                      dont les composantes sont celles demandees par la\n                      formulation, voir 'MODE' 'DARCY')\n                      sous-formulations autorisees : ISOTROPE, \n                      ORTHOTROPE, ANISOTROPE 2D ou 3D.   \n            'MODELE'  : objet modele correspondant au domaine concerne\n\n    CHPO1 : saturation reduite ('CHPO' centre ou 'FACE') pour les \n            lois PUISSANCE, MUALEM, BURDINE, MUALEM_BURDINE, BROOKS_COREY\n            pression en eau pour les lois EXPONENTIELLE et LOGARITHMIQUE\n\n\n    CHPO2 : permeabilite totale en eau (m/s)\n\n    \n    Remarques :\n    -----------\n\n    1. Le champ en sortie ont les meme points d'appui que le champ en\n       entree.\n\n    2. Il a autant de composantes que l'indice PERMSAT.\n\n    3. Les directions d'anisotropie sont (0 0 1), (0 1 0) et (0 0 1)\n       dans l'ordre. Charge a l'utilisateur de definir le tenseur\n       PERMSAT dans ce repere-la. \n        ",
  },
  {
    name: "KSIG",
    url: "KSIG",
    documentation:
      "$$$$ KSIG     NOTICE  CHAT      11/09/12    21:16:48     7124           \n                                             DATE     11/09/12\n\n    Operateur KSIGMA                         Voir aussi : KTAN\n    ----------------  \n      RIG1 = KSIGMA  MODL1 SIG1 ( CAR1 ) ( 'FLAM' ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur KSIGMA calcule la matrice de raideur geometrique\n    associee a un champ de contraintes.\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : Objet modele ( type MMODEL ).\n\n      SIG1   : champ de contraintes (type MCHAML, sous-type\n               CONTRAINTES)\n\n      CAR1   : champ de caracteristiques geometriques (pour certains\n               elements: coques epaisses, DST, poutres, tuyaux)\n               (type MCHAML, sous-type CARACTERISTIQUES)\n\n     'FLAM'  : mot-cle necessaire si l'on veut utiliser la matrice\n               pour faire une analyse de flambage.\n\n      RIG1   : objet resultat (type RIGIDITE, sous-type RIGIDITE).\n\n\n\n    Remarque 1 :\n    __________\n\n     CAR1 doit contenir obligatoirement les cosinus-directeurs des\naxes d'orthotropie par rapport au repere local , dans le cas de\nl'element DST orthotrope ;ceci implique l'utilisation de l'operateur\nMATR pour la creation de CAR1 .\n\n\n    Remarque 2 :\n    __________\n\n    Le numero d'harmonique en cas d'analyse en serie de Fourier est\ndefini par la directive OPTION.",
  },
  {
    name: "KSOF",
    url: "KSOF",
    documentation:
      "$$$$ KSOF     NOTICE  CHAT      11/09/12    21:16:49     7124           \n                                             DATE     11/09/12\n\n  Operateur KSOF                          Voir aussi :\n     --------------  \n        A = 'KSOF' TABDOM UN ;\n\n\n\n     Objet : Transforme un CHPOINT VECT SOMMET en un CHPOINT SCAL FACE\n\n\n\n    A      : resultat Champoint SCAL FACE\n\n    TABDOM : Table Domaine contenant le support geometrique de UN\n\n    UN     : Champoint VECT SOMMET",
  },
  {
    name: "KTAN",
    url: "KTAN",
    documentation:
      "$$$$ KTAN     NOTICE  CHAT      11/09/12    21:16:49     7124           \n                                             DATE     11/09/12\n\n    Operateur KTAN                           Voir aussi : KSIG RIGI\n    --------------                                        COMP  \n\n            -----------------------------------\n\n            |   matrice de raideur tangente   |\n            -----------------------------------\n\n\n      RIG1 =  'KTAN' MODL1 SIG1 VAR1 MAT1\n                           ( 'PREC' FLOT1 ) ( 'DT  ' FLOT2 )\n                           ( 'SYME' )  ;\n\n\n    Objet :\n    _______\n\n    L'operateur KTAN calcule la matrice de raideur tangente en\nelasto-plasticite. Si cela n'est pas possible, cet operateur \ncalcule la matrice de rigidite elastique.\n\n\n      Commentaire :\n      _____________\n\n      MODL1 : objet modele (type MMODEL)\n\n      SIG1  : champ de contraintes (type MCHAML, sous-type CONTRAINTES)\n\n      VAR1  : champ de variables internes (type MCHAML, sous-type\n              VARIABLES INTERNES)\n\n      MAT1  : champ de proprietes materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n      'PREC': mot-cle indiquant que l'on donne la precision\n\n      FLOT1 : precision avec laquelle on cherche si un etat de\n              contraintes est plastique ou non (1.E-3 par defaut)\n\n      'DT  ': mot-cle indiquant que l'on donne le pas de temps\n\n      FLOT2 : pas de temps servant a calculer la matrice tangente\n              Cette donnee n'est necessaire que pour les modeles\n              visqueux.\n\n      'SYME': mot-cle indiquant que l'on ne veut garder que la partie\n              symetrique de la matrice tangente\n\n      RIG1  : objet resultat (type RIGIDITE, sous-type RIGIDITE)\n\n\n            -----------------------------------\n            |   matrice de raideur tangente   |\n            |        par perturbation         |\n            -----------------------------------\n\n\n      RIG1 = 'KTAN' 'PERT' MOD1 CHE1 CHE2\n                           ('C1' FLO1) ('C2' FLO2)\n                           ('SYME') ;\n\n\n    Objet :\n    _______\n\n    L'operateur KTAN calcule la matrice de raideur tangente par \nla methode de perturbation. A partir d'un etat initial et d'un etat \nfinal, cet operateur perturbe l'increment de deformation en le \nmultipliant par un coefficient donne, calcule les contraintes \ncorrespondant a cet etat perturbe et en deduit la matrice de \nrigidite tangente.\n\n\n      Commentaire :\n      _____________\n\n        MOD1  MMODEL   modele de calcul\n\n        CHE1  MCHAML   toutes les informations necessaires a \n                       l'operateur 'COMP' sur l'etat initial\n\n        CHE2  MCHAML   toutes les informations necessaires a \n                       l'operateur 'COMP' sur l'etat final\n                       ainsi que les contraintes de l'etat final\n        ATTENTION ! Si plusieurs zones elementaires de ce champ \n                    correspondent au meme sous-modele, il faut \n                    que les deformations soient dans la premiere.\n\n        'C1'           mot-cle suivi du reel correspondant au\n                       coefficient C1 de la methode de calcul \n                       de la matrice tangente par perturbation\n\n        FLO1  FLOTTANT strictement positif (par defaut 1.D-3)\n                       coefficient multiplicatif pour la  perturbation \n                       de l increment de deformation\n\n        'C2'           mot-cle suivi du reel correspondant au \n                       coefficient C2 de la methode de calcul \n                       de la matrice tangente par perturbation\n\n        FLO2  FLOTTANT strictement positif (par defaut FLO1/100.)\n                       deformation minimale de la perturbation\n\n        'SYME'         mot-cle indiquant que l'on ne veut garder que \n                       la partie symetrique de la matrice tangente\n\n        RIG1  RIGIDITE objet resultat : matrice de rigidite\n\n \n ",
  },
  {
    name: "KUET",
    url: "KUET",
    documentation:
      "$$$$ KUET     NOTICE  CHAT      11/09/12    21:16:49     7124           \n                                             DATE     11/09/12\n                                                                                \n   Operateur KUET                            Voir aussi : FPU\n   --------------                                         FPAL    \n     UET = KUET  NU UN NOR $DOMT $PAROI ;  \n            \n\n\nOBJET :\n_______\n\nCalcule la vitesse de frottement a la paroi pour un ecoulement laminaire\n\n      UET = SQRT (TAU/RO) = SQRT (NU*dV/dY)\n\navec ; TAU  cisaillement\n       RO   masse volumique\n       NU   viscosite cinematique\n       V    vitesse parallele a la paroi\n       Y    distance a la paroi\n                                                                                \n\nCOMMENTAIRES :\n______________\n\n\nUET    vitesse de frottement (m/s)       CHPOINT SCAL CENTRE PAROI\n\nNU     viscosite cinematique (m2/s)      FLOTTANT\n\nUN     champ de vitesse (m/s)            CHPOINT VECT SOMMET DOMT\n\nNOR    champ des normales aux faces (m)  CHPOINT VECT FACE DOMT\n\n$DOMT  domaine total                     MMODEL SOUS TYPE 'NAVIER_STOKES'\n\n$PAROI ligne representant la paroi (2D)  MMODEL SOUS TYPE 'NAVIER_STOKES'\n\n\n\nRemarques :\n___________\n\n- NOR est calcule par DOMA sur tout le domaine (option 'NORMALE')\n- L' operateur KUET ne fonctionne qu'en 2D (plan ou axisymetrique)",
  },
  {
    name: "KVOL",
    url: "KVOL",
    documentation:
      "$$$$ KVOL     NOTICE  CHAT      11/09/12    21:16:50     7124           \n                                             DATE     11/09/12\n  \n  Operateur KVOL                           Voir aussi :\n    --------------  \n         CHPC = KVOL OBJDOM ;\n\n\n\n     OBJET   : Cree un CHAMPOINT CENTRE contenant le volume des elements\n               du domaine\n\n                OBJDOM : TABLE de SOUSTYPE DOMAINE",
  },
  {
    name: "KWEIB1",
    url: "KWEIB1",
    documentation:
      "$$$$ KWEIB1   NOTICE  CHAT      11/09/12    21:16:50     7124           \n                                             DATE     11/09/12\n                                          \n \n\n  Procedure KWEIB1                              Voir aussi :\n    ----------------  \n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CAST3M \n       PAR  F. DUPRAT (LMDC - INSA Toulouse)\n\n\n      Cette procedure est appelee par la procedure NATAF",
  },
  {
    name: "K_PRO",
    url: "K_PRO",
    documentation:
      "$$$$ K_PRO    NOTICE  CHAT      11/09/12    21:16:47     7124           \n                                             DATE     11/09/12\n\n     Procedure K_PRO                         Voir aussi : DARCYSAT \n     ---------------                                      HT_PRO  \n        K1 = K_PRO TAB1 TAB2 ;                   \n\n\n     Objet :           \n     _______       \n           \n     Cette procedure permet de calculer la permeabilite a l'eau d'un \n     milieu poreux non sature\n                                       \n\n    \n\n         K1 :  CHPOINT contenant la permeabilite\n\n         TAB1 : table contenant les variables du problemes\n\n         TAB2 : table contenant  les parametres de la loi de permeabilite\n \n    Commentaires :                                                             \n     ____________                                                             \n\n   Les indices de la table TAB1 sont les suivants\n\n                .'PNS_PROV' : CHPOINT des pressions negatives  \n                .'TH2O_PROV' : CHPOINT des teneurs en eau \n                .'SATURATION_PROV' : CHPOINT des taux de saturation \n                                                \n   Dans le cadre d'un appel par DARCYSAT, ces CHPOINTs sont fournies.\n   L'utilisateur peut ainsi creer une procedure personnelle decrivant\n   une loi K(pression), K(teneur en eau) ou  K(taux de saturation).\n\n   Dans le cadre d'une utilisation hors contexte DARCYSAT, l'utilisateur \n   doit seulement fournir la saturation pour la version standard.\n\n   La loi de permeabilite standard est de la forme : \n                                       K = K_sat * (S **  alpha)         \n   avec K_sat, permeabilite a saturation et S, taux de saturation\n\n   Les indices de la table TAB2 sont les suivants :\n\n           .'ALPHA' (type FLOTTANT OR CHPOINT) exposant de la loi\n           .'PERMSAT' (type FLOTTANT OR CHPOINT) permeabilite a saturation\n \n    Remarques :       \n     ____________   \n\n  Dans le cas de l'utilisation d'une procedure K_PRO personnelle,\n  TAB2 doit etre de soustype PERSONNELLE. L'utilisateur a alors toute \n  liberte de choix sur les indices de la table TAB2.  \n\n  Les parametres sont de type FLOTTANT ou CHPOINT issu d'une operations\n  KCHT ou KOPS. Pour un CHPOINT et dans le cadre d'une utilisation\n  via la procedure DARCYSAT, le support geometrique des CHPOINT doit\n  etre choisi en fonction de l'option d'homogeneisation (indice\n  'HOMOGENEISATION' de la table transmise a DARCYSAT) : maillage\n  'FACE' pour l'option decentree et maillage 'CENTRE' pour l'option \n   centree.\n\n     Exemple :                                                             \n     _______                                                             \n\n   Procedure personnelle K_PRO rassemblant 2 lois de forme analytique \n   differentes s'appliquant sur deux zones distinctes : \n\n********************************************\n'DEBPROC' KR_PRO TAB1*'TABLE' PRECED*'TABLE' ;\n  si (EGA PRECED.'NOMZONE' 'SITE') ;  \n    K1 = 'KOPS' TAB1.'SATURATION_PROV' '**' PRECED.'ALPHA' ;\n    K1 = 'KOPS' K1 '*' PRECED.'PERMSAT' ;\n  finsi ;\n  si (EGA PRECED.'NOMZONE' 'BO') ;  \n    K1 = (kops TAB1.'PNS_PROV' '*' PRECED.'ALPHA') EXP  ; \n    K1 = kops K1 '*' PRECED.'PERMSAT' ;\n  finsi ;\n'FINPROC' K1 ;\n********************************************\n\n  Cette procedure est exploitable par DARCYSAT si les parametres\n  des deux lois sont donnes a la table SATUR  argument de la procedure \n  DARCYSAT de la maniere suivante (cf. notice DARCYSAT) :\n\n*---- definition de la loi de permeabilite\nSATUR.'LOI_PERMEABILITE' = TABLE 'MULTIZONE' ;\n*- pour la zone site\nSATUR.'LOI_PERMEABILITE'. 'SITE' = TABLE 'STANDARD' ;\nSATUR.'LOI_PERMEABILITE'. 'SITE'. 'ALPHA' = ... ;\nSATUR.'LOI_PERMEABILITE'. 'SITE'. 'PERMSAT'= ... ;\nSATUR.'LOI_PERMEABILITE'. 'SITE'. 'MODELE' = ... ;\n*- pour la zone BO\nSATUR.'LOI_PERMEABILITE'. 'BO' = TABLE 'PERSONNELLE' ;\nSATUR.'LOI_PERMEABILITE'. 'BO'. 'ALPHA' = ... ;\nSATUR.'LOI_PERMEABILITE'. 'BO'. 'PERMSAT'= ... ;\nSATUR.'LOI_PERMEABILITE'. 'BO'. 'MODELE' = ... ;\n... \n...\n*----calcul\nDARCYSAT SATUR\n ",
  },
  {
    name: "LAPL",
    url: "LAPL",
    documentation:
      "$$$$ LAPL     NOTICE  MB234859  17/10/02    21:15:16     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur LAPLACE                        Voir aussi :\n    -----------------  \n    EVOL2 = LAPL  | 'INVERSE'     LREEL1 LREEL2 LREEL3 FLOT1 ENTI1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur LAPL construit la transformee de Laplace inverse\n    d'une fonction de sk= a + i*wk, par la methode de DURBIN.\n\n    Commentaire :\n    _____________\n\n\n    LREEL1 : Objet contenant la liste des frequences wk  (partie\n             imaginaire  de l'abscisse sk) .\n             il faut que LREEL1 commence par 0. et que le pas soit cons-\n             tant. LREEL1 doit contenir 2**N1 points.\n\n    LREEL2 : Objet contenant la partie reelle de la fonction F(sk)\n             (type LISTREEL).\n\n    LREEL3 : Objet contenant la partie imaginaire de la fonction F(sk)\n             (type LISTREEL).\n\n    FLOT1  : Partie reelle a de sk (positive ).\n\n    ENTI1  : ENTIER  de regroupement de la methode de DURBIN\n             tel que N1= ENTI1 * N2, o\u00ba N1 est le nombre de points de F\n             et N2 le nombre de points de son inverse f.\n             il faut que ENTI1 = 2**q\n\n    EVOL1  : fonction obtenue f(t) (type EVOLUTION)",
  },
  {
    name: "LAPN",
    url: "LAPN",
    documentation:
      "$$$$ LAPN     NOTICE  CHAT      11/09/12    21:16:52     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur LAPN                          Voir aussi :\n\n\n\n\n I Formulation Elements Finis :\n _____________________________\n\n\n     Syntaxe EQEX (cf EQEX) :\n\n\n     ... 'EQEX' ... 'OPTI' MOT1 MOT2\n                    'ZONE' MOD1\n                    'OPER' 'LAPN' OBJ1\n                    'INCO' MOT3 (MOT4)\n\n\n     OBJET   :\n\n     L'operateur LAPN discretise le terme de diffusion d'une equation\nscalaire ou de l'equation de quantite de mouvement en supposant le\nfluide incompressible.\n\n     Dans le cas d'une equation scalaire de type equation de la chaleur\n                     dT/dt = div(alpha grad T)\ncette operateur discretise le terme div(alpha grad T) ou alpha designe\nla diffusivite ou la conductivite thermique (alpha en m2/s [SI]).\n\n     Dans le cas de l'equation de quantite de mouvement, cet operateur\ndiscretise la divergence du tenseur des contraintes visqueuses en\nincompressible ;      ->                        ->  t     ->\n                     dU/dt + ... = div(nu (grad U +  grad U))\nsoit le terme div(nu (grad U + tgrad U)) ou nu designe la viscosite\ncinematique (nu en m2/s [SI]).\n\n     Dans le cas d'un systeme d'equations cet operateur permet de\ndiscretiser le terme div(d grad T) dans une equation portant sur\nune inconnue V : dV/dt + .... = div(d grad T)\nV est appele inconnue duale et T inconnue primale.\n\n     La convention de signe associee a ce terme est la suivante :\nlorsque le coefficient de diffusion est positif, le maximum du champ\nscalaire ou vectoriel decroit.\n\n     Cet operateur est appele par la procedure EXEC.\nLa syntaxe indiquee permet a l'utilisateur de construire a l'aide\nde l'operateur EQEX les donnees necessaires a l'operateur.\n\n\n     Commentaires :\n     ______________\n                                                                                \n    'OPTI' : Mot cle introduisant les options numeriques de LAPN\n     MOT1  : Type de discretisation spatiale ('EF', 'VF' ou 'EFM1')\n     MOT2  : Type de discretisation temporelle ('EXPL' ou 'IMPL')\n     Pour l'instant, VF et EF sont uniquement IMPL ; EFM1 EXPL.\n\n    'ZONE' : Mot cle introduisant les informations geometriques\n     MOD1  : Objet MODELE definissant la zone ou s'applique LAPN\n\n    'OPER' : Mot cle introduisant les donnees physiques associees\n             a l'operateur dont le nom suit\n    'LAPN' : Nom de l'operateur\n     OBJ1  : Coeff de diffusion (CHPO SCAL CENTRE, FLOTTANT ou MOT)\n\n    'INCO' : Mot cle introduisant le nom des inconnues primale et duale\n     MOT3  : Nom de l'inconnue primale T\n     MOT4  : Nom de l'inconnue duale V\n     Lorsque primale et duale sont identiques, MOT4 est optionnel. En\nexplicite, on a obligatoirement MOT3=MOT4.\n\n\n     Resultats :\n     ___________\n\n     En explicite :\n     - Le second membre est stocke dans un CHPO et range dans la\ntable KIZG a l'indice de type MOT MOT3 (nom de l'inconnue).\n\n     En implicite :\n     - La matrice creee est stockee dans un MATRIK et rangee dans la\ntable TAB1 a l'indice de type MOT MATELM.\n     - Le second membre est stocke dans un CHPO et assemble dans la\ntable EQEX a l'indice de type MOT SMBR. Le nom de l'inconnue duale\nMOT4 etant le nom de la composante du CHPO cree.\n\n\n     Remarques :\n     ___________\n                                                                                \n     1) Lorsque OBJ1 est de type MOT, l'operateur utilise le champ\ncontenu dans la table INCO a l'indice MOT indique.\n\n     2) Le support geometrique (spg) des inconnues contient une des\nclasses de points de la table DOMAINE. Selon la formulation choisie\nles compatibilites suivantes sont verifiees :\n   - En formulation EF ou EFM1, le spg de la duale contient SOMMET\n   - En formulation VF le spg de la duale contient CENTRE\n   - lorsque les inconnues primale et duale sont differentes, elles\ndoivent avoir le meme spg.\n   - le spg du coefficient de diffusion est CENTRE\n\n     3) L'utilisateur-programmeur developpant ses propres procedures\ntransitoire appellera LAPN suivant la syntaxe :\n     LAPN TAB1 ;\navec TAB1 : Table de sous type EQEX contenant les informations\n            physiques et numeriques de l'operateur LAPN. Cette\n            table est construite par l'operateur EQEX.\n\n\n II Formulation  Volumes Finis :\n _____________________________\n\n IIa : gaz parfait mono-constituant chaleur specifique constante\n ___\n\n Discretisations des termes diffusives des equations de Navier-Stokes\n compressible pour un gas parfait avec chaleur specifique constante\n\n SYNTAXE:\n\n RMAT1 RCHP1 DELTAT = 'LAPN' 'VF' 'PROPCOST' MOT1 MOT2 MOD1\n                     FLOT1 FLOT2 FLOT3 CHPO1 CHPO2 CHPO3 CHPO4 CHPO5\n                     (CHAM1 CHAM2 si MOT2 = 'IMPL')\n                     ('VIMP' CHPO6) ('TAUI' CHPO7)\n                     ('QIMP' CHPO8) ('MIXT' CHP10) \n                     ('TIMP' CHPO9) LMOT ('CLAUDEIS');\n\n\n\n  MOT1   : objet de type MOT\n           Il vaut 'RESI' si on veut calculer le residu\n           Il vaut 'FLUX' si on veut calculer le flux\n\n  MOT2   : objet de type MOT: \n           Il vaut 'IMPL' si on veut calculer le jacobien\n           du residu RMAT1\n           Il vaut 'EXPL' si on ne veut calculer que le\n           residu\n\n  MOD1   : objet MODELE\n\n  FLOT1  : objet de type 'FLOTTANT' (viscosite dynamique)\n \n  FLOT2  : objet de type 'FLOTTANT' (conductivite thermique)\n\n  FLOT3  : objet de type 'FLOTTANT' (chaleur specifique a \n           volume constant)\n\n  CHPO1  : 'CHPOINT' 'CENTRE' (densite, 1 composante, 'SCAL')\n\n  CHPO2  : 'CHPOINT' 'CENTRE' (vitesse, 2/3 composantes 'UX','UY',\n           ('UZ'))\n\n  CHPO3  : 'CHPOINT' 'CENTRE' (temperature, 1 composante, 'SCAL')\n\n  CHPO4  : 'CHPOINT' 'FACE' (gradient de la vitesse, 4/9 composantes,\n           'P1DX', 'P1DY',('P1DZ'),'P2DX','P2DY',('P2DZ'), \n           ('P3DX','P3DY','P3DZ'))\n\n  CHPO5  : 'CHPOINT' 'FACE' (gradient de la temperature, 2/3\n            composantes, 'P1DX','P1DY',('P1DZ'))\n\n  CHAM1  : 'MCHAML' (coefficients pour le calcul du gradient de \n                     vitesse (cf. operateur 'PENT'))\n\n  CHAM2  : 'MCHAML' (coefficients pour le calcul du gradient de \n                     temperature (cf. operateur 'PENT'))\n \n  CHPO6  : 'CHPOINT' 'FACE' (vitesse impose, 2/3 composantes,\n           'UX','UY',('UZ'))\n\n  CHPO7  : 'CHPOINT' sur des points 'FACE' (tenseur des contraintes\n            imposes,  3/6 composantes 'TXX','TYY','TXY',('TXZ''TYZ',\n            'TZZ'))\n\n  CHPO8  : 'CHPOINT' sur des points 'FACE' (flux de chaleur impose,\n            2/3 composantes, 'UX','UY',('UZ'))\n\n  CHPO9  : 'CHPOINT' sur des points 'FACE' (temperature imposee,\n            1 composante, 'SCAL')\n\n  CHP10  : 'CHPOINT' sur des points 'FACE' \n           (4 composantes, lambda1,lmabda2,qlimx,qlimy ) \n           (On impose une condition mixte)\n           lambda1 (d grad T . n) + lambda2 T = (qlimx*nx) + (qlim*ny) \n\n\n  LMOT1  : objet de type LISTMOTS\n           Noms de composantes du resultat (RCHPO1)\n           Il contient dans l'ordre suivant: le nom de la densite, de \n           la quantite de mouvement, de l'energie totale par unite de \n           volume\n\n  RMAT1  : objet de type MATRIK\n           (SPG =  'DOMA' MOD1 'CENTRE')\n           (inconnues primales = inconnues duales; leur noms sont dedans\n           LMOT1).\n           Dans le cas MOT2 = 'IMPL', il contient le jacobien du residu \n           par rapport aux variables conservatives (pour un gaz \n           caloriquement parfait). \n           Au contraire, il est un objet de type MATRIK vide\n\n  RCHPO1 : objet de type CHPOINT (composantes =  LMOT1)\n           Residu  si MOT2 = 'RESI' (SPG = 'DOMA' MOD1 'CENTRE')\n           Flux si MOT1 = 'FLUX'    (SPG = 'DOMA' MOD1 'FACE')\n \n  RFLOT1 : objet de type FLOTTANT\n           Il est le pas de temps de stabilite pour le schema en temps\n           explicite d'Euler.\n\n  CLAUDEIS : option provisoire qui indique qu'on ne veut que la partie \n             thermique du jacobien du residu\n\n\n IIb : gaz parfait multi-constituants chaleurs specifiques constantes\n ___\n\n Discretisations des termes diffusifs des equations de Navier-Stokes\n compressible pour un melange de gaz parfaits a chaleurs specifiques \n constantes. \n Inconnues: densite (totale) du melange, quantite de mouvement,         \n energie totale par unite de volume, densites des constituants du gaz.\n \n\n SYNTAXE:\n\n RMAT1 RCHP1 DELTAT = 'LAPN' 'VF' 'PERFMULT' MOT1 MOT2 MOD1 TAB2\n                     CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 CHPO7 CHPO8\n                     (CHAM1 CHAM2 si MOT2 = 'IMPL')\n                     ('VIMP' CHPO9) ('TAUI' CHP10)\n                     ('QIMP' CHP11) ('TIMP' CHP12)  ('RIMP' CHP13) \n                     LMOT ;\n\n\n\n  MOT1   : objet de type MOT\n           Il vaut 'RESI' si on veut calculer le residu\n           Il vaut 'FLUX' si on veut calculer le flux\n\n  MOT2   : objet de type MOT: \n           Il vaut 'IMPL' si on veut calculer le jacobien\n           du residu RMAT1\n           Il vaut 'EXPL' si on ne veut calculer que le\n           residu\n\n  MOD1   : Objet MODELE.\n\n  TAB2  : table qui contient les proprietes du gaz. Plus precisement:    \n          * le nom de l'espece qui n'est pas dans les Equations d'Euler  \n            en TAB2 . 'ESPNEULE' (MOT) ;                                  \n          * les noms des especes qui apparaissent explicitement dans les \n            equations d'Euler en  TAB2 . 'ESPEULE' (LISTMOTS) ;\n          * le degre des polynomes cv_i=cv_i(T), en TAB2 . 'NORD'        \n            (ici, il doit valoir 0)                                             \n          * les proprietes de chaque gaz 'ESPI', dans la table           \n            TAB2 . 'ESPI':                                               \n            - TAB2 . 'ESPI' . 'A' (LISTREEL)                             \n              qui contient les (TAB2.'NORD')+1 coefficients des polynomes\n              cv(T), (A0,A1,...); si le cv(T) sont supposes etre en      \n              J/kg/K, les Ai doivent etre en unites coherentes;          \n            - TAB2 . 'ESPI' . 'R' (J/kg/K dans le SI, FLOTTANT) qui      \n              contient la constante du gaz parfait                       \n            - TAB2 . 'ESPI' . 'H0K' (J/kg, FLOTTANT) qui contient        \n              l'enthalpie de formation du gaz a 0K                       \n            - TAB2 . 'ESPI' . 'CDIFF' (FLOTTANT) : coefficient de diffusion\n              de l'espece dans le melange ; \n            - TAB2 . 'ESPI' . 'CLYK' :  'CHPOINT' 'FACE' (CL Dirichlet\n              densite de l'espece, 1 composante, 'SCAL')\n            - TAB2 . 'ESPI' . 'YK' :  'CHPOINT' 'FACE' (densite de \n              l'espece, 1 composante, 'SCAL') \n            - TAB2 . 'ESPI' . 'CGRYK' :  'MCHAML' (coefficients pour le \n              calcul du gradient de la densite de l'espece)\n            - TAB2 . 'ESPI' . 'GRADYK' :  'CHPOINT' 'FACE' (gradient de la\n              densite de l'espece, 2/3 composantes, 'P1DX','P1DY',('P1DZ'))\n\n  CHPO1  : 'CHPOINT' 'CENTRE' (viscosite dynamique du melange, \n                               1 composante, 'SCAL')\n \n  CHPO2  : 'CHPOINT' 'CENTRE' (conductivite thermique du melange,\n                               1 composante, 'SCAL')\n\n  CHPO3  : 'CHPOINT' 'CENTRE' (chaleur specifique a volume constant du melange,\n                               1 composante, 'SCAL')\n\n  CHPO4  : 'CHPOINT' 'CENTRE' (densite, 1 composante, 'SCAL')\n\n  CHPO5  : 'CHPOINT' 'CENTRE' (vitesse, 2/3 composantes 'UX','UY',\n           ('UZ'))\n\n  CHPO6  : 'CHPOINT' 'CENTRE' (temperature, 1 composante, 'SCAL')\n\n  CHPO7  : 'CHPOINT' 'FACE' (gradient de la vitesse, 4/9 composantes,\n           'P1DX', 'P1DY',('P1DZ'),'P2DX','P2DY',('P2DZ'), \n           ('P3DX','P3DY','P3DZ'))\n \n  CHPO8  : 'CHPOINT' 'FACE' (gradient de la temperature, 2/3\n            composantes, 'P1DX','P1DY',('P1DZ'))\n\n  CHAM1  : 'MCHAML' (coefficients pour le calcul du gradient de \n                     vitesse)\n\n  CHAM2  : 'MCHAML' (coefficients pour le calcul du gradient de \n                     temperature)\n\n  CHPO9  : 'CHPOINT' 'FACE' (vitesse impose, 2/3 composantes,\n           'UX','UY',('UZ'))\n\n  CHP10  : 'CHPOINT' sur des points 'FACE' (tenseur des contraintes\n            imposes,  3/6 composantes 'TXX','TYY','TXY',('TXZ''TYZ',\n            'TZZ'))\n\n  CHP11  : 'CHPOINT' sur des points 'FACE' (flux de chaleur impose,\n            2/3 composantes, 'UX','UY',('UZ'))\n\n  CHP12  : 'CHPOINT' sur des points 'FACE' (temperature imposee,\n            1 composante, 'SCAL')\n\n  CHP13  : 'CHPOINT' sur des points 'FACE' (densite imposee,\n            1 composante, 'SCAL')\n\n  LMOT1  : objet de type LISTMOTS\n           Noms de composantes du resultat (RCHPO1)\n           Il contient dans l'ordre suivant: le nom de la densite, de \n           la quantite de mouvement, de l'energie totale par unite de \n           volume, des densites des constituants du gaz \n           (idem TAB2 . 'ESPEULE').\n\n  RMAT1  : objet de type MATRIK\n           (SPG = 'DOMA' DOM1 'CENTRE')\n           (inconnues primales = inconnues duales; leur noms sont dedans\n           LMOT1).\n           Dans le cas MOT2 = 'IMPL', il contient le jacobien du residu \n           par rapport aux variables conservatives (pour un gaz \n           caloriquement parfait). \n           Au contraire, il est un objet de type MATRIK vide\n\n  RCHPO1 : objet de type CHPOINT (composantes =  LMOT1)\n           Residu  si MOT2 = 'RESI' (SPG = 'DOMA' DOM1 'CENTRE')\n           Flux si MOT1 = 'FLUX'    (SPG = 'DOMA' DOM1 'FACE')\n \n  RFLOT1 : objet de type FLOTTANT\n           Il est le pas de temps de stabilite pour le schema en temps\n           explicite d'Euler.\n\n\n IIc :  Discretisation d'un laplacien  pour les milieux poreux\n         ou pour l'equation de la chaleur.\n ___\n\n SYNTAXE:\n\n RMAT1 RCHP1 DELTAT = 'LAPN' 'VF' 'CLAUDEIS' MOT2 MOD1\n                       CHPO3 CHPO5 \n                     (CHAM1  si MOT2 = 'IMPL')\n                     ('QIMP' CHPO8) ('MIXT' CHP10) \n                     ('TIMP' CHPO9) ;\n\n  MOT2   : objet de type MOT: \n           Il vaut 'IMPL' si on veut calculer le jacobien\n           du residu RMAT1\n           Il vaut 'EXPL' si on ne veut calculer que le\n           residu\n\n  MOD1   : objet MODELE\n\n\n  CHPO3  : 'CHPOINT' 'CENTRE' (temperature, 1 composante, 'SCAL')\n\n  CHPO5  : 'CHPOINT' 'FACE' (gradient de la temperature, 2/3\n            composantes, 'P1DX','P1DY',('P1DZ'))\n\n  CHAM1  : 'MCHAML' (coefficients pour le calcul du gradient de \n                     temperature (cf. operateur 'PENT'))\n\n  CHPO8  : 'CHPOINT' sur des points 'FACE' (flux de chaleur impose,\n            1 composante, 'FLUX')\n \n  CHPO9  : 'CHPOINT' sur des points 'FACE' (temperature imposee,\n            1 composante, 'SCAL')\n \n  CHP10  : 'CHPOINT' sur des points 'FACE'\n           (3 composantes, lambda1,lambda2, qlim)\n           (On impose une condition mixte)\n           lambda1 (d grad T . n) + lambda2 T = (qlim)",
  },
  {
    name: "LCH2CLIM",
    url: "LCH2CLIM",
    documentation:
      "$$$$ LCH2CLIM NOTICE  CHAT      11/09/12    21:16:54     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2CLIM                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2CLIM CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2CLIM charge un CHPOINT  dans l'element\n     %CLIM d'un objet (DONCHI2)",
  },
  {
    name: "LCH2DELP",
    url: "LCH2DELP",
    documentation:
      "$$$$ LCH2DELP NOTICE  CHAT      11/09/12    21:16:54     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2DELP                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2DELP FLOT1\n\n\n        Objet\n        -----\n\n     La methode LCH2DELP  charge un FLOTTANT dans l'element\n     %DELPE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2EPS",
    url: "LCH2EPS",
    documentation:
      "$$$$ LCH2EPS  NOTICE  CHAT      11/09/12    21:16:54     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2EPS                          Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2EPS FLOT1\n\n\n        Objet\n        -----\n\n     La methode LCH2EPS charge un FLOTTANT  dans l'element\n     %EPS d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2FION",
    url: "LCH2FION",
    documentation:
      "$$$$ LCH2FION NOTICE  CHAT      11/09/12    21:16:54     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2FION                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2FION CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2FION charge un CHPOINT  dans l'element\n     %FIONI d'un objet (DONCHI2)",
  },
  {
    name: "LCH2IAFF",
    url: "LCH2IAFF",
    documentation:
      "$$$$ LCH2IAFF NOTICE  CHAT      11/09/12    21:16:55     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2IAFF                         Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2IAFF ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2IAFF charge un ENTIER dans l'element\n     %IAFFICHE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2IMPR",
    url: "LCH2IMPR",
    documentation:
      "$$$$ LCH2IMPR NOTICE  CHAT      11/09/12    21:16:55     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2IMPR                         Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2IMPR LENT1\n\n\n        Objet\n        -----\n\n     La methode LCH2IMPR charge un LISTENTI  dans l'element\n     %IMPRIM d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2ITMA",
    url: "LCH2ITMA",
    documentation:
      "$$$$ LCH2ITMA NOTICE  CHAT      11/09/12    21:16:55     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2ITMA                         Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2ITMA ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2ITMA charge un ENTIER  dans l'element\n     %ITMAX d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2ITSO",
    url: "LCH2ITSO",
    documentation:
      "$$$$ LCH2ITSO NOTICE  CHAT      11/09/12    21:16:55     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2ITSO                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2ITSO ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2ITSO charge un ENTIER  dans l'element\n     %ITERSOLI d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2LOGC",
    url: "LCH2LOGC",
    documentation:
      "$$$$ LCH2LOGC NOTICE  CHAT      11/09/12    21:16:56     7124           \n                                             DATE     11/09/12\n                                     \n                                                \n    Methode LCH2LOGC                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2LOGC CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2LOGC charge un CHPOINT  dans l'element\n     %LOGC d'un objet (DONCHI2)",
  },
  {
    name: "LCH2MDEL",
    url: "LCH2MDEL",
    documentation:
      "$$$$ LCH2MDEL NOTICE  CHAT      11/09/12    21:16:56     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2MDEL                         Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2MDEL ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2MDEL charge un ENTIER  dans l'element\n     %MDELPE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2NFI",
    url: "LCH2NFI",
    documentation:
      "$$$$ LCH2NFI  NOTICE  CHAT      11/09/12    21:16:56     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2NFI                          Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2NFI ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2NFI charge un ENTIER dans l'element\n     %NFI d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2NITE",
    url: "LCH2NITE",
    documentation:
      "$$$$ LCH2NITE NOTICE  CHAT      11/09/12    21:16:56     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2NIT                          Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2NITE ENTI1\n\n\n        Objet\n        -----\n\n     La methode LCH2NITE charge un ENTIER dans l'element\n     %NITERPE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2NTY4",
    url: "LCH2NTY4",
    documentation:
      "$$$$ LCH2NTY4 NOTICE  CHAT      11/09/12    21:16:59     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2NTY4                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2NTY4 CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2NTY4 charge un CHPOINT  dans l'element\n     %NTY4 d'un objet (DONCHI2)",
  },
  {
    name: "LCH2PREP",
    url: "LCH2PREP",
    documentation:
      "$$$$ LCH2PREP NOTICE  CHAT      11/09/12    21:16:59     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2PREP                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2PREP FLOT1\n\n\n        Objet\n        -----\n\n     La methode LCH2PREP charge un FLOTTANT dans l'element\n     %PRECPE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2SORT",
    url: "LCH2SORT",
    documentation:
      "$$$$ LCH2SORT NOTICE  CHAT      11/09/12    21:16:59     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2SORT                         Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2SORT LMOTS\n\n\n        Objet\n        -----\n\n     La methode LCH2SORT charge un LISTMOTS dans l'element\n     %SORTIE d'un objet (PARMCHI2)",
  },
  {
    name: "LCH2TEMP",
    url: "LCH2TEMP",
    documentation:
      "$$$$ LCH2TEMP NOTICE  CHAT      11/09/12    21:17:00     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2TEMP                         Voir aussi : METH\n    ----------------                                      OBJE  \n        LCH2TEMP CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2TEMP charge un CHPOINT  dans l'element\n     %TEMPE d'un objet (DONCHI2)",
  },
  {
    name: "LCH2TOT",
    url: "LCH2TOT",
    documentation:
      "$$$$ LCH2TOT  NOTICE  CHAT      11/09/12    21:17:00     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LCH2TOT                          Voir aussi : METH\n    ---------------                                       OBJE  \n        LCH2TOT CHPO1\n\n\n        Objet\n        -----\n\n     La methode LCH2TOT charge un CHPOINT  dans l'element\n     %TOT d'un objet (DONCHI2)",
  },
  {
    name: "LECT",
    url: "LECT",
    documentation:
      "$$$$ LECT     NOTICE  CB215821  17/07/17    21:15:03     9496           \n                                             DATE     17/07/17\n\n    Operateur LECT                           Voir aussi : PROG MOTS SUIT\n    --------------                                        EVOL  \n    LENTI1 = LECT 1 2 3 4 5 ;\n\n\n    Objet :\n    _______\n\n    L'operateur LECT fabrique un objet LENTI1 de type LISTENTI a partir\nd'un nombre arbitraire d'objets de type ENTIER.\n\n    La sous-directive PAS permet d'engendrer des nombres regulierement\nespaces, et la sous directive * permet d'engendrer plusieurs fois le\nmeme nombre.\n\n    Commentaire :\n    _____________\n\n\n    ------------------------\n    |  Sous-directive PAS  |\n    ------------------------\n\n    LENTI1 = LECT 1 PAS 2 5 ; equivaut a : LENTI1 = LECT 1 3 5 ;\n\n    Le PAS doit obligatoirement diviser exactement l'intervalle.\n\n    Autre possibilite :\n\n  LENTI1 = LECT 1 PAS 2 NPAS 2 ; equivaut a : LENTI1 = LECT 1 3 5 ;\n\n    NPAS doit etre positif ou nul.\n\n\n    -----------------------\n    |  Sous-directive  *  |\n    -----------------------\n\n    LENTI1 = LECT 4 * 3 ; equivaut a : LENTI1 = LECT 3 3 3 3 ;\n\n    On peut utiliser des pas negatifs et melanger les\nsous-directives.\n\n    LENTI1 = LECT 1 2  PAS -2 -6 2  3 * 9 PAS 2  3 * 13 ;\nou\n    LENTI1 = LECT 1 2  PAS -2 NPAS 4  2  3 * 9 PAS 2  3 * 13 ;\nequivaut a\n    LENTI1 = LECT 1 2 0 -2 -4 -6 2  9 9 9  11 13 13 13 ;",
  },
  {
    name: "LESPCOMP",
    url: "LESPCOMP",
    documentation:
      "$$$$ LESPCOMP NOTICE  CHAT      11/09/12    21:17:00     7124           \n                                             DATE     11/09/12\n                                                \n    Methode LESPCOMP                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LESPCOMP charge un LISTENTI dans l'element\n     %COMP d'un objet (LIESPECE)",
  },
  {
    name: "LESPITYP",
    url: "LESPITYP",
    documentation:
      "$$$$ LESPITYP NOTICE  CHAT      11/09/12    21:17:01     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LESPITYP                         Voir aussi : METH\n    ----------------                                      OBJE  \n    LESPITYP ENTI1 ;\n\n\n        Objet\n        -----\n\n     La methode LESPITYP charge un ENTIER dans l'element\n     %ITYP d'un objet (LIESPECE)",
  },
  {
    name: "LESPLOGK",
    url: "LESPLOGK",
    documentation:
      "$$$$ LESPLOGK NOTICE  CHAT      11/09/12    21:17:01     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LESPLOGK                         Voir aussi : METH\n    ---------------                                       OBJE  \n    LESPLOGK FLOT1 ;\n\n\n        Objet\n        -----\n\n     La methode LESPLOGK charge un FLOTTANT  dans l'element\n     %LOGK d'un objet (LIESPECE)",
  },
  {
    name: "LESPSTOE",
    url: "LESPSTOE",
    documentation:
      "$$$$ LESPSTOE NOTICE  CHAT      11/09/12    21:17:01     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LESPSTOE                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LESPSTOE charge un LISTREEL  dans l'element\n     %STOECH d'un objet (LIESPECE)",
  },
  {
    name: "LEVM",
    url: "LEVM",
    documentation:
      "$$$$ LEVM     NOTICE  CHAT      11/09/12    21:17:01     7124           \n                                             DATE     11/09/12\n\n    Operateur LEVM                            Voir aussi : EXCE MOCA\n    --------------                                         AJUSTE    \n    LREE5 CHI2  = LEVM  'ABSC' LREE1 'ORDO' LREE2 'SIGM' LREE3 \n                      'PARA' LREE4 'PROC' PRO1 ;\n\n\n\n\n    Objet :\n    -------\n \n    L'operateur LEVM etablit la meilleure proposition d'un jeu de\n    parametres d'une fonction visant a approcher une suite de points \n    (abscisse, ordonnee) specifiee. Le critere est une moyenne\n    quadratique ponderee des ecarts des ordonnees. L'algorithme\n    reprend la methode dite de Levenberg-Marquardt. L'operateur n'est\n    pas reinitialisee en cas d'interruption par l'utilisateur.\n\n    Commentaire :\n    _____________\n\n    LREE5 : type LISTREEL, liste des parametres proposes\n\n    CHI2  : type FLOTTANT, valeur finale du critere\n\n    LREE1 : type LISTREEL, liste des abscisses\n\n    LREE2 : type LISTREEL, liste des ordonnees\n\n    LREE3 : type LISTREEL, liste des poids de chacun des points\n\n    LREE4 : type LISTREEL, liste des parametres d'initialisation\n            (il convient de donner des reels non nuls dans l'ordre\n            de grandeur des valeurs attendues)\n\n    PRO1 : procedure gibiane de calcul des ordonnees et des derivees\n           partielles en chacun des points de LREE1. Il convient \n           de s'assurer d'une precision coherente pour le calcul\n           des derivees partielles. Exemple de donnees :\n\n           DEBPROC PRO2 LREEX*LISTREEL LREEA*LISTREEL ;\n\n           * calcul de la fonction parametree \n           * compute the parameters dependant function\n           * LREEX : liste des abscisses / abscissas\n           * LREEA : liste des parametres / parameters\n           * LREEY : liste des ordonnees / ordinates\n\n           FINPROC LREEY ;\n\n           DEBPROC PRO1 LREEX*LISTREEL LREEA*LISTREEL ; \n             \n           * fonction argument\n           * input procedure for LEVM\n           * LREEX : liste des abscisses / abscissas\n           * LREEA : liste des parametres / parameters\n           * LREEY : liste des ordonnees / ordinates\n           * calcul de LREEY\n           LREEY = PRO2 LREEX LREEA ;\n\n           * derivees partielles / partial derivatives\n           TLRE = TABLE ;\n           REPETER BPAR (DIME LREEA) ;\n             ai = EXTR LREEA &BPAR ;\n             LREEB = COPIE LREEA ;\n             REMP LREEB &BPAR (ai * (1. + 1.e-2)) ;\n             TLRE . &BPAR = PRO2 LREEX LREEB ;\n           FIN BPAR ;\n\n           * LREDY : derivees partielles / partial derivatives\n           LREDY = PROG ;\n           REPETER BX (DIME LREEX) ;\n             REPETER BPAR (DIME LREEA) ;\n               dyi = ((EXTR TLRE . &BPAR &BX) - (EXTR LREEY &BX) ) \n                        / 1.e-2 / (EXTR LREEA &BPAR) ;\n             FIN BPAR ;\n           FIN BX ;\n               \n           FINPROC LREEY LREDY ;\n \n ",
  },
  {
    name: "LIAI",
    url: "LIAI",
    documentation:
      "$$$$ LIAI     NOTICE  FANDEUR   11/09/26    21:16:25     7107           \n                                             DATE     11/09/26\n\n    ----------------------------------------------------------------\n    | 1ere possibilite : creation d'elements de liaison ordinaires |\n    ----------------------------------------------------------------\n\n    GEO1 = LIAISON  (FLOT1) GEO2 GEO3  ;\n\n    Objet :\n    _______\n\n    L'operateur LIAISON engendre l'ensemble des elements de liaison\nentre deux objets surfaciques.\n\n    Commentaire :\n    _____________\n\n    GEO2 | : objets surfaciques (type MAILLAGE)\n    GEO3 |\n\n    GEO1   : objet resultat (type MAILLAGE)\n\n    FLOT1  : critere de proximite entre les deux objets surfaciques\n             par defaut FLOT1 est egal au dixieme de la densite courante\n\n    Remarque :\n    __________\n\n    Un element est cree entre un element de GEO2 et un element\nde GEO3 distants de moins de CRIT point a point.\n\n    Utiliser l'operateur RACCORD pour des maillages lineiques (2D).\n\n    Pour la creation d'un element joint JOI4 (3D) :\n\n         -GEO2 et GEO3 definissent respectivement les surfaces 1 et 2\nde cet element. Ces surfaces doivent etre definies dans le meme sens.\nCe sens est celui du contour de la surface 1. La numerotation des \nnoeuds de la surface 1 doit etre telle que les axes (1,2,N) forment\nun triedre direct, avec N dirigee positivement dans le sens de\nl'ouverture de l'element joint.\n   On definit les grandeurs suivantes :\n . axe 1 = vecteur reliant le noeud 1 au noeud 2 de la surface 1\n . axe 2 = vecteur reliant le noeud 1 au noeud 4 de la surface 1\n . axe N = vecteur normal au plan defini par les vecteurs 1 et 2\n . ouverture du joint = mouvement d'eloignement de la surface 1 par \n   rapport a la surface 2 quand la surface 2 est fixe.\n\n         -Pour la prise en compte d'un jeu initial x dans un element\njoint, GEO2 et GEO3 doivent etre distants de x. De plus, x doit etre\nrentre comme deformation inelastique normale initiale lors de l'appel\na PASAPAS (cf rapport DMT/93.655).\n\n    --------------------------------------------------------------\n    | 2eme possibilite : creation d'un element de liaison poreux |\n    --------------------------------------------------------------\n\n    GEO1 = LIAISON  (FLOT1) GEO2 GEO3 GEO4  ;\n\n    Objet :\n    _______\n\n    L'operateur LIAISON engendre l'ensemble des elements de liaison\n    entre trois objets surfaciques.\n\n    Commentaire :\n    _____________\n\n    GEO2 | : objets surfaciques (type MAILLAGE)\n    GEO3 |\n    GEO4 |\n\n    GEO1   : objet resultat (type MAILLAGE)\n\n    FLOT1  : critere de proximite entre les objets surfaciques deux a deux\n             par defaut FLOT1 est egal au dixieme de la densite courante\n\n    Remarque :\n    __________\n\n    Un element est cree entre un element de GEO2, un element de GEO3 et un\n    element de GEO4 distants de moins de CRIT point a point. Les objets \n    GEO2 et GEO3 peuvent etre composes par des triangles a 6 points ou des\n    rectangles a 8 points. L'objet GEO3 est composes par des triangles a 3 \n    points ou des rectangles a 4 points.\n\n\n ",
  },
  {
    name: "LIBDD",
    url: "LIBDD",
    documentation:
      "$$$$ LIBDD    NOTICE  CHAT      11/09/12    21:17:02     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LIBDD                            Voir aussi : METH\n    -------------                                         OBJE  \n\n        Objet\n        -----\n\n     La methode LIBDD charge un MOT  dans l'element\n     %BDD d'un objet (DONCHI1)",
  },
  {
    name: "LICHXMX",
    url: "LICHXMX",
    documentation:
      "$$$$ LICHXMX  NOTICE  CHAT      11/09/12    21:17:02     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LICHXMX                          Voir aussi : METH\n    ---------------                                       OBJE  \n\n        Objet\n        -----\n\n     La methode LICHXMX charge un LISTENTI  dans l'element\n     %CHXMX d'un objet (DONCHI1)\n\n        Commentaires\n        -------------\n\n        voir DONCHI1",
  },
  {
    name: "LICOCHAR",
    url: "LICOCHAR",
    documentation:
      "$$$$ LICOCHAR NOTICE  CHAT      11/09/12    21:17:02     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LICOCHAR                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LICOCHAR charge un ENTIER  dans l'element\n     %CHARGE d'un objet (LINVCOMP)",
  },
  {
    name: "LICOMNOM",
    url: "LICOMNOM",
    documentation:
      "$$$$ LICOMNOM NOTICE  CHAT      11/09/12    21:17:03     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LICOMNOM                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LICOMNOM charge un mot  dans l'element\n     %NOM d'un objet (LINVCOMP)",
  },
  {
    name: "LIESPECE",
    url: "LIESPECE",
    documentation:
      "$$$$ LIESPECE NOTICE  CHAT      11/09/12    21:17:03     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LIESPECE                         Voir aussi : CHI1 OBJE\n    ----------------                                      DONCHI1  \n     OBJ1  = OBJET  LIESPECE ;\n\n\n        Objet\n        -----\n\n     La methode LIESPECE permet de creer un objet de type objet et de\n     CLASSE LIESPECE. Un tel objet contient toutes les donnees d'une\n     nouvelle espece pour l'operateur CHI1. Cet objet pourra etre\n     utilise par DONCHI1%GNVESP.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a LIESPECE sont\n\n       ESP_IDEN  ESP_LOGK  ESP_ITYP  ESP_COMP  ESP_STOE\n\n    ESP_IDEN  Charge le contenu de l'indice IDEN,entier identifiant de\n                 l'espece\n                 appel : OBJ1%ESP_IDEN  ENTI1 ;\n\n    ESP_LOGK  Charge le contenu de l'indice LOGK, reel logk de l'espece\n                 appel : OBJ1%ESP_LOGK  FLOT1;\n\n    ESP_ITYP  Charge le contenu de l'indice ITYP,entier type de l'espece\n                               2   complexe en solution\n                               3   activite fixee\n                               4   mineraux precipites\n                               5   mineraux dissous\n                               6   non pris en compte dans le calcul\n                 appel : OBJ1%ESP_ITYP  ENTI1 ;\n\n    ESP_COMP  Charge le contenu de l'indice COMP,  LISTENTI contenant\n               les identifiants des composants de l'espece.Le nombre de\n               ces identifiants doit etre inferieur a 4 pour une base\n               de donnee de type MINEQL  et inferieur a 8 pour une base\n               de donnee de type STRASBG.\n                 appel : OBJ1%ESP_COMP  LENTI1 ;\n\n    ESP_STOE  Charge le contenu de l'indice STOECH LISTREEL coefficient\n               stoechiometrique correspondant a chacun de ces composants.\n                 appel : OBJ1%ESP_STOE  LREEL1 ;",
  },
  {
    name: "LIGN",
    url: "LIGN",
    documentation:
      "$$$$ LIGN     NOTICE  CHAT      11/09/12    21:17:03     7124           \n                                             DATE     11/09/12\n\n    Operateur LIGN                           Voir aussi : CERC CER3   \n    --------------                                        DROI ROTA  \n                                                          VOLU   \n    GEO1 = LIGN  'ROTA' ....     voir cas 1\n                 'TRAN' ....     voir cas 2\n                \n\n\n    (C est aussi admis)\n\n ------------------------------------\n | Cas 1 : Trace d'un arc de cercle |\n ------------------------------------\n\n    GEO1 = LIGN (N1) CENTRE POINT1 (NORMAL si 3D) ANGLE\n                ('DINI' DENS1) ('DFIN' DENS2)   'ROTA'\n\n    Objet :\n    _______\n\n    L'operateur LIGN permet de construire l'arc de cercle de centre\n    CENTRE, d'extremite POINT1 et d'angle d'ouverture ANGLE.\n    En dimension 2, le sens trigonometrique impose l'orientation angulaire.\n    En dimension 3, le cercle appartient au plan de normale NORMAL et le \n    sens trigonometrique est impose par la direction de cette normale.\n\n    Commentaire :\n    _____________\n\n    CENTRE  : centre du cercle (type POINT)\n\n    POINT1   : point extremite de l'arc de cercle (type POINT)\n\n    N1      : nombre d'elements generes (type ENTIER)\n\n    DENS1 | : densites associees au point POINT et au 2eme point extremite\n    DENS2 |   de l'arc de cercle (deduit de l'angle d'ouverture)\n              (type FLOTTANT)\n\n    NORMAL  : en 3D, ce vecteur definit la normale au cercle . En appelant\n              CP le vecteur (CENTRE->POINT1), le triedre direct correspondant\n              est (CP,NORMAL vectoriel CP,NORMAL)   (type POINT)\n\n    ANGLE   : angle d'ouverture de l'arc de cercle\n\n    GEO1    : arc de cercle (type MAILLAGE)\n\n\n    Remarque 1 :\n    ____________\n\n     Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n     Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    \n     Remarque 2 :\n     ____________\n\n     Si une ligne LIG1 est donnee a la place du point POINT1 cette ligne\nest prolongee jusqu'au point deduit de la rotation de l'extremite de LIG1.\n\n\n\n --------------------------------------------------------\n | Cas 2 : Trace d'une ligne par translation d'un point |\n --------------------------------------------------------\n\n\n    GEO1 = LIGN (N1) POINT1 VECTEUR ('DINI' DENS1) ('DFIN' DENS2)  'TRAN'\n\n    Objet :\n    _______\n\n    L'operateur LIGN permet de construire le segment d'extremites POINT1\n    et POINT2 ou POINT2 = POINT1 + VECTEUR\n\n\n    Commentaire :\n    _____________\n\n    POINT1  : point extremite du segment (type POINT)\n\n    VECTEUR : vecteur de translation de POINT1 (type POINT)\n\n    N1      : nombre d'elements generes (type ENTIER)\n\n    DENS1 | : densites associees au point POINT et au 2eme point extremite\n    DENS2 |   de l'arc de cercle (deduit de l'angle d'ouverture)\n              (type FLOTTANT)\n\n    GEO1    : droite (type MAILLAGE)\n\n\n    Remarque 1 :\n    ____________\n\n     Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n     Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n    \n     Remarque 2 :\n     ____________\n\n     Si une ligne LIG1 est donnee a la place du point POINT1 cette ligne\nest prolongee jusqu'au point deduit de la translation de l'extremite de LIG1.",
  },
  {
    name: "LILIDEN",
    url: "LILIDEN",
    documentation:
      "$$$$ LILIDEN  NOTICE  CHAT      11/09/12    21:17:03     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LILIDEN                          Voir aussi : METH\n    ---------------                                       OBJE  \n\n        Objet\n        -----\n\n     La methode LILIDEN charge un LISTENTI  dans l'element\n     %IDEN d'un objet (DONCHI1)",
  },
  {
    name: "LILIECH",
    url: "LILIECH",
    documentation:
      "$$$$ LILIECH  NOTICE  CHAT      11/09/12    21:17:04     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LILIECH                          Voir aussi : METH\n    ---------------                                       OBJE  \n\n\n        Objet\n        -----\n\n     La methode LILIECH charge un LISTENTI  dans l'element\n     %ECHANGE d'un objet (DONCHI1)",
  },
  {
    name: "LIMEMECA",
    url: "LIMEMECA",
    documentation:
      "$$$$ LIMEMECA NOTICE  CHAT      11/09/12    21:17:04     7124           \n                                             DATE     11/09/12\n                                             \n   Procedure LIMEMECA                        Voir aussi : MESM\n   ------------------                                     TRACMECA  \n   LOG1 FLOT2 CHPO3 MCHML2=\n               LIMEMECA MODL1 TAB1 TAB2 MCHML1 CHPO1 (CHPO2 FLOT1);\n\n\n    Objet :\n    _______\n\n    La procedure LIMEMECA permet de determiner l'etat limite d'une\nstructure:\n\n-   definie par le modele MODL1 et les mecanismes de rupture\n    elementaires TAB1 et TAB2 obtenus a l'aide de l'operateur MESM, \n\n-   dont les caracteristiques plastiques sont contenues dans le champ \n    par element MCHML1, \n\n-   soumise au chargement variable contenu dans le champ par point \n    CHPO1,\n\n-   soumise eventuellement au chargement constant CHPO2. \n\n    FLOT1 et un coefficient (defaut 1.) qu'il faut eventuellement \naugmenter si l'optimisation est incomplete (LOG1 est alors FAUX). L'etat\nlimite est defini par le coefficient multiplicateur FLOT2 de la charge \nCHPO1, le mode d'ecoulement CHPO3 et l'etat d'ecoulement MCHML2.\n\n    Remarque :\n    __________\n\n    le champ par element MCHML1 est constant par element, donne aux\nnoeuds et contient les composantes suivantes: 'MZ1+' et 'MZ1-' (moments\nde plastification positif et negatif a l'extremite 1 de l'element),\n'MZ2+' et 'MZ2-' (moments de plastification positif et negatif a\nl'extremite 2 de l'element), et, eventuellement, 'F2+ ' et 'F2- ' \n(forces de plastification en traction et en compression le long de \nl'element.",
  },
  {
    name: "LINBIDEN",
    url: "LINBIDEN",
    documentation:
      "$$$$ LINBIDEN NOTICE  CHAT      11/09/12    21:17:04     7124           \n                                             DATE     11/09/12\n                                                \n    Methode LINBIDEN                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LINBIDEN charge un ENTIER  dans l'element\n     %IDEN d'un objet (LIESPECE)",
  },
  {
    name: "LINVCOMP",
    url: "LINVCOMP",
    documentation:
      "$$$$ LINVCOMP NOTICE  CHAT      11/09/12    21:17:04     7124           \n                                             DATE     11/09/12\n                                                                                \n    Methode LINVCOMP                         Voir aussi : CHI1 OBJE\n    ----------------                                      DONCHI1         \n     OBJ1  = OBJET  LINVCOMP ;\n\n\n        Objet\n        -----\n\n     La methode LINVCOMP permet de creer un objet de type objet et de\n     CLASSE LINVCOMP. Un tel objet contient toutes les donnees d'un\n     nouveau composant pour l'operateur CHI1. Cet objet pourra etre\n     utilise par DONCHI1%GNVCOMP.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a LINVCOMP sont\n\n       COM_IDEN  COM_NOM   COM_CHAR\n\n     COM_IDEN Charge le contenu de l'indice IDEN,entier identifiant de\n                 l'espece\n                 appel : OBJ1%COM_IDEN  ENTI1 ;\n\n     COM_NOM Charge le contenu de l'indice NOM, nom de l'espece\n                 appel : OBJ1%COM_NOM  MOT1;\n\n     COM_CHAR Charge le contenu de l'indice CHARGE,entier charge de\n                 l'espece simple associee.\n                 appel : OBJ1%COM_CHAR  ENTI1 ;",
  },
  {
    name: "LIRE",
    url: "LIRE",
    documentation:
      "$$$$ LIRE     NOTICE  CB215821  19/12/09    21:15:08     10420          \n                                             DATE     19/12/09\n\n1.  Directive LIRE                           Voir aussi : SORT\n    --------------  \n     LIRE | (GEO1)             | ;\n          | 'PROC' FIC1 (MOT1) | ;\n\n\n2.  Operateur LIRE\n    --------------\n\n     TAB1 = LIRE  | 'AVS'      | ;\n                  | 'MED' FIC1 |\n                  | 'UNV' FIC1 |\n                  | 'FEM' FIC1 |\n                  | 'NAS' FIC1 |\n                  | 'CSV' FIC1   ('DEBU' ENTI1) ('SEPA' MOT1) | ('COLO') | ;\n                                                              |  'LIGN'  |\n\n     MAIL1= LIRE    'STL' FIC1 ;\n\n\n    Objet :\n    _______\n\n\n+------------------------+\n| 1. Directive 'LIRE'    |\n+------------------------+\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. 'LIRE' utilise comme une directive\n    1.1 LIRE un MAILLAGE\n    1.2 LIRE une PROCEDUR\n2. 'LIRE' utilise comme un operateur\n    2.1 LIRE au format 'AVS'\n    2.2 LIRE au format 'MED' (Salome)\n    2.3 LIRE au format 'UNV'\n    2.4 LIRE au format 'FEM' (ALTAIR OptiStruct)\n    2.5 LIRE au format 'NAS' (Bulk Nastran)\n    2.6 LIRE au format 'CSV'\n    2.7 LIRE au format 'STL' (Stereolithographie)\n\n  \n1. 'LIRE' utilise comme une directive1 \n===================================== \n  \n1.1 LIRE un MAILLAGE \n-------------------- \n1.1. La directive LIRE lit un MAILLAGE sur le fichier d'unite logique N1\n     definie  par la directive OPTION :\n\n         OPTION LECT N1;    (N1 = 4 par defaut)\n\n    Tous les sous-objets presents dans le fichier sont egalement lus.\n    Si le nom GEO1 du maillage est fourni, on verifie qu'il existe bien\n    sur le fichier.\n\n  \n1.2 LIRE une PROCEDUR \n--------------------- \n1.2. La directive LIRE cree une ou plusieurs procedures en important\n     le contenu du fichier FIC1.\n\n     Deux alternatives sont offertes :\n\n     a) La syntaxe du fichier FIC1 est telle que celle adoptee pour\n        charger des procedures via le fichier UTILPROC (voir la notice\n        de l'operateur UTIL) :\n\n        - Chaque procedure est encapsulee dans un bloc delimite par\n          les instructions DEBP et FINP\n\n        - Chacun de ces blocs est precede d'une ligne commen\u00e7ant par\n          \"$$$$ xxxxxxxx\" o\ufffd\ufffd le mot xxxxxxxx est un nom GIBIANE valide.\n          Ce nom doit etre identique a celui que l'on trouve derriere\n          l'instruction DEBP correspondante (la casse est indifferente)\n\n        Si MOT1 est fourni, alors seule la procedure de FIC1 portant ce\n        nom sera importee (si elle existe).\n\n     b) Le fichier est un jeu de donnees (suite d'instructions GIBIANE).\n        Dans ce cas, un objet PROCEDUR de nom MOT1 est cree et le\n        contenu de FIC1 y est charge. Cela signifie en particulier que\n        la directive DEBP ne doit apparaitre nulle part dans FIC1.\n\n+------------------------+\n| 2. Operateur 'LIRE'    |\n+------------------------+\n  \n2. 'LIRE' utilise comme un operateur \n==================================== \n \n  \n2.1 LIRE au format 'AVS' \n------------------------ \n2.1 En presence du mot-cle 'AVS' LIRE devient un operateur, qui lit le\n    fichier d'unite logique N1 definie  par la directive OPTION :\n\n         OPTION LECT N1;    (N1 = 4 par defaut)\n\n    On suppose que le fichier est de format AVS UCD (Unstructured\n    Cell Data) ASCII.\n    Les objets trouves dans ce fichier sont loges dans la table TAB1.\n    La structure de cette table est la suivante (tous les indices sont\n    de type MOT) :\n\n    --------------------------------------------------------------------\n    Indice   |   Contenu\n    --------------------------------------------------------------------\n    MAILSUPP | Objet de type MAILLAGE compose de points (POI1) et\n             | contenant tous les noeuds. Cet objet consitue le support\n             | du champ nodal (objet de type CHPOINT) si celui-ci\n             | existe. Il est toujours cree. Il peut etre utilise pour\n             | visualiser differentes parties du maillage par rapport au\n             | maillage entier.\n    --------------------------------------------------------------------\n    LEMAILLA | Objet de type MAILLAGE contenant tous les elements\n             | trouves dans le fichier AVS. C'est un objet compose de\n             | sous-maillages elementaires, dont chacun est homogene du\n             | point de vue du type d'element et du numero du materiau.\n             | Il est toujours cree.\n    --------------------------------------------------------------------\n    SOUMAILA | Objet de type TABLE. Cette table contient les sous-\n             | maillages elementaires qui sont indices par des nombres\n             | entiers, allant de 1 jusqu'au nombre de ces sous-\n             | maillages. Cette table est toujours creee.\n    --------------------------------------------------------------------\n    LECHPOIN | Objet de type CHPOINT. Il n'est cree que lorsque le\n             | fichier AVS contient le champ nodal. Il s'appuie sur le\n             | maillage MAILSUPP.\n    --------------------------------------------------------------------\n    LEMCHAML | Objet de type MCHAML. Il n'est cree que lorsque le\n             | fichier AVS contient le champ par element. Il est compose\n             | de sous-champs elementaires dont chacun s'appuie sur un\n             | sous-maillage elementaire.\n    --------------------------------------------------------------------\n     tout    | Objet de type FLOTTANT (un nombre reel). Chaque\n     autre   | composante du champ global (s'il existe) apparait dans la\n     nom     | table sous son propre nom (tronque a 4 caracteres).\n    --------------------------------------------------------------------\n\n    Plusieurs structures UCD peuvent etre lues (par exemple dans un\n    fichier cree avec la directive SORT 'AVS' ... 'SUIT') si on repete\n    l'ordre de lecture plusieurs fois (voir soravs.dgibi).\n\n\n  \n2.2 LIRE au format 'MED' (Salome) \n--------------------------------- \n2.2 En  presence du mot-cle 'MED',  LIRE devient un  operateur qui place\n    les OBJETS MAILLAGE ou les champs de r\u00e9sultats, lus dans le fichier\n    MED 3.2, dans une TABLE avec son nom comme indice.\n\n    Dans le cas o\u00f9 les champs contiennent des valeurs nodales, ils\n    sont lus dans Cast3M sous forme d'un objet de type CHPOINT.\n\n    Dans le cas o\u00f9 les champs contiennent des valeurs aux \u00e9l\u00e9ments, ils\n    sont lus dans Cast3M sous forme d'un objet de type MCHAML\n    Les points support du champ actuellement lisibles sont :\n     - NOEUD\n     - GRAVITE\n\n    Si les champs sont d\u00e9finis sur plusieurs pas de temps, une sous-table\n    sera cr\u00e9e et contiendra autant de CHPOINT ou MCHAML que de pas de temps.\n\n  \n2.3 LIRE au format 'UNV' \n------------------------ \n2.3 En presence du mot-cle 'UNV', LIRE devient un operateur qui lit le\n    fichier de nom FIC1 (type MOT) au format Ascii UNV (pour UNiVersal).\n\n    Les informations lues dans les DATASET de numero 2411, 2412, 2470 et\n    2477 sont stockees sous forme d'objets de type MAILLAGE dans l'objet\n    de type TABLE nomme TAB1 dont le contenu est decrit ci-dessous.\n    Les  donnees stockees dans les DATASETs de numero 151 et 164 sont\n    lues et affichees a titre purement informatif.\n    Les autres numeros de DATASET sont ignores lors de leur lecture.\n\n    LA DIMEsion du probleme est mise a jour si necessaire suite a la\n    lecture des coordonnees des noeuds (DATASET 2411) en accord avec\n    la dimension initiale (avant lecture du fichier).\n\n    --------------------------------------------------------------------\n      Indice    |          Contenu\n    (type MOT)  |        (type MAILLAGE)\n    --------------------------------------------------------------------\n     'NOEUDS'   |  Objet de type MAILLAGE compose de points (POI1) et\n                |  contenant tous les noeuds lus (DATASET 2411)\n    --------------------------------------------------------------------\n     'MAILLAGE' |  Objet de type MAILLAGE contenant tous les elements\n                |  lus dans le fichier UNV (DATASET 2412)\n    --------------------------------------------------------------------\n     '@elti'    |  Objet de type MAILLAGE correspondant a un maillage\n                |  elementaire constitue de tous les elements du type\n                |  'elti' lus dans le fichier UNV (DATASET 2412)\n                |  (Par ex. : '@SEG2','@TRI3','@CUB8'...)\n                |  Le maillage a l'indice 'MAILLAGE' est constitue de\n                |  l'union des maillages elementaires stockes dans les\n                |  indices de type '@elti'.\n    --------------------------------------------------------------------\n     'grelti'   |  Objet de type MAILLAGE contenant le maillage lu dans\n                |  le fichier UNV (DATASET 2470) correspondant au groupe\n                |  d'elements associe a la propiete physique de nom\n                |  'grelti'\n                |  Attention : L'indice 'grelti' est une transcription\n                |  fidele du nom lu, il peut donc contenir des espaces,\n                |  ainsi que des minuscules et majuscules a prendre en\n                |  consideration !\n    --------------------------------------------------------------------\n     'permai'   |  Objet de type MAILLAGE contenant le maillage lu dans\n                |  le fichier UNV (DATASET 2477) correspondant au groupe\n                |  dit permanent de nom 'permai'\n                |  Remarque : Si le groupe permanent lu est constitue et\n                |  d'un groupe de noeuds et d'un groupe d'elements alors\n                |  l'indice 'permai' contient le maillage des elements\n                |  et l'indice 'permai_GN' le maillage (POI1) des noeuds\n                |  Attention : L'indice 'permai' est une transcription\n                |  fidele du nom lu, il peut donc contenir des espaces,\n                |  ainsi que des minuscules et majuscules a prendre en\n                |  consideration !\n    --------------------------------------------------------------------\n\n  \n2.4 LIRE au format 'FEM' (ALTAIR OptiStruct) \n-------------------------------------------- \n2.4 En presence  du mot-cle 'FEM', LIRE devient un operateur qui lit le\n    fichier  de nom FIC1 (type MOT) au  format ASCII  FEM (Format lu et\n    ecrit par le profil  OptiStruct de Hypermesh distribue  par ALTAIR\n    http://www.altair.com).\n\n    Liste des Entites OptiStruct relues :\n      - 'Components' : Objets de type MAILLAGES\n      - 'NodeSets'   : Objets de type MAILLAGES\n      - 'ElemSets'   : Objets de type MAILLAGES\n\n    Remarque : Version d'HyperMesh necessaire >= 12.0\n\n\n  \n2.5 LIRE au format 'NAS' (Bulk Nastran) \n--------------------------------------- \n2.5 En presence  du mot-cle 'NAS', LIRE devient un operateur qui lit le\n    fichier  de nom FIC1 (type MOT) au  format ASCII  NASTRAN\n    Liste des Entites OptiStruct relues :\n      - 'MAILLAGES'    : Objets de type MAILLAGE\n      - 'SYSTEMES'     : Objets de type MAILLAGE\n      - 'RBE2'         : Objets de type MAILLAGE de POI1\n                         Noeud 1 ==> Noeud Maitre\n      - 'BLOCAGES'     : Objets de type MAILLAGE de POI1\n      - 'TEMPERATURES' : Objets de type CHPOINT\n      - 'FORCES'       : Objets de type CHPOINT\n      - 'MOMENTS'      : Objets de type CHPOINT\n\n\n  \n2.6 LIRE au format 'CSV' \n------------------------ \n2.6 En presence  du mot-cle 'CSV', LIRE devient un operateur qui lit  le\n    fichier ASCII de nom FIC1 (type MOT) au  format 'CSV'.\n      'DEBU' : Le  fichier est  lu a  partir de  la ligne  specifiee par\n               l'ENTIER ENTI1.\n      'SEPA' : Possibilite de preciser le separateur dans le fichier lu.\n               MOT1 doit \u00eatre un MOT de 1 caractere.\n               Par defaut, le separateur est ';'.\n      'COLO' : Specifie que les donnees lues sont en colonnes (Par defaut)\n               La table TAB1 comporte autant de 'LISTREEL' que de colonnes\n               lues indicees de 1 a N.\n      'LIGN' : Specifie que les donnees lues sont en lignes.\n               La table TAB1 comporte autant de 'LISTREEL' que de lignes\n               lues indicees de 1 a N.\n\n    La table  TAB1 comporte autant  de LISTREEL que de colonnes dans  le\n    fichier. Ils sont indices de 1 a N dans la table.\n\n\n  \n2.7 LIRE au format 'STL' (Stereolithographie) \n--------------------------------------------- \n2.7 En presence  du mot-cle 'STL', LIRE  devient un operateur qui lit le\n    fichier  de nom FIC1  (type MOT) au  format  ASCII / binaire STL. Le\n    resultat MAIL1 est un MAILLAGE de 'TRI3'. L'utilisateur  doit penser\n    a utiliser la  directive ELIM suite  a la lecture pour fusionner les\n    noeuds en doubles.",
  },
  {
    name: "LIREFLOT",
    url: "LIREFLOT",
    documentation:
      "$$$$ LIREFLOT NOTICE  CHAT      11/09/12    21:17:05     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure LIREFLOT                       Voir aussi :\n    ------------------  \n        FLOT1 = LIREFLOT  FLOT2 FLOT3 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet, dans une utilisation interactive, d'acquerir\nde la part de l'utilisateur un nombre reel compris entre deux bornes.\n    En cas d'erreur, un message apparait a l'ecran.\n\n    Commentaire :\n    _____________\n\n    FLOT2  : borne inferieure (type FLOTTANT)\n\n    FLOT3  : borne superieure (type FLOTTANT)\n\n    FLOT1  : nombre reel obtenu  (type FLOTTANT)\n\n    Remarque :\n    __________\n\n    Les operandes doivent etre entres dans l'ordre indique dans la\nsyntaxe.",
  },
  {
    name: "LIRSOSO",
    url: "LIRSOSO",
    documentation:
      "$$$$ LIRSOSO  NOTICE  CHAT      11/09/12    21:17:06     7124           \n                                             DATE     11/09/12\n \n    Methode LIRSOSO                          Voir aussi : CHI1 OBJE\n    ---------------                                       DONCHI1  \n     OBJ1  = OBJET  LIRSOSO ;\n\n\n        Objet\n        -----\n\n     La methode LIRSOSO permet de creer un objet de type objet et de\n     CLASSE LIRSOSO. Un tel objet contient toutes les donnees d'une\n     nouvelle espece pour l'operateur CHI1. Cet objet pourra etre\n     utilise par DONCHI1%GNVSOSO.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a LIRSOSO sont\n\n       SOS_IDEN  SOS_ITYP  SOS_SOLI  SOS_FRAC\n\n     SOS_IDEN Charge le contenu de l'indice IDEN,entier identifiant de\n                 la solution solide.\n                 appel: OBJ1%SOS_IDEN  ENTI1 ;\n\n     SOS_ITYP Charge le contenu de l'indice ITYP,entier type de la\n                  solution solide\n                               3   activite fixee\n                               4   solution solide precipite\n                               5   solutions solides  dissoutes\n                               6   non pris en compte dans le calcul\n                         Pour les types 3 et 4, il faut obligatoirement\n                         donner les fractions molaires des poles des\n                         solutions solides; pour les types 5 et 6, ce \n                         n'est pas obligatoire.   \n                 appel: OBJ1%SOS_ITYP  ENTI1 ;\n\n     SOS_SOLI Charge le contenu de l'indice SOLID. LISTENTI contenant\n                 les identifiants des poles mineraux purs de la\n                 solution solide. Le nombre de ces poles doit etre\n                 inferieur a 36. Ces poles sont mis automatiquement en\n                 type 6 (ils servent au calcul,mais n'ont pas\n                 d'existance physique).\n                 appel: OBJ1%SOS_SOLI LENTI1 ;\n               \n     SOS_FRAC Charge le contenu de l'indice FRACTIO. LISTREEL contenant\n               les fractions molaires correspondant a chacun des poles.\n               (Si la solution solide est mise en type 3 ou 4,\n               l'operateur chi1 a besoin des fractions molaires pour\n               calculer les coefficients stoechiometriques ainsi que\n               le logK de la solution solide.Si la solution solide\n               est mise en type 5 ou 6, l'operateur chi2 calculera\n               lui meme les fractions molaires et le reste).\n                 appel: OBJ1%SOS_FRAC LREEL1 ;",
  },
  {
    name: "LIST",
    url: "LIST",
    documentation:
      "$$$$ LIST     NOTICE  BP208322  16/09/13    13:11:51     9083           \n                                             DATE     16/09/13\n                                             \n  Directive LISTE                          Voir aussi :\n    ---------------  \n\n    Objet :\n    _______\n\n    La directive LISTE s'utilise dans plusieurs cas :\n\n    -----------\n    | 1er cas |\n    -----------\n\n    LISTE ;\n\n    Objet :\n    _______\n\n    La directive LISTE, sans operande, donne la liste des points et des\nobjets nommes.\n\n\n    ------------\n    | 2eme cas |\n    ------------\n\n    LISTE ( 'RESUME' ) OBJET1 ( N1 ( N2 )) ;\n\n    Objet :\n    _______\n\n    La directive LISTE donne des informations sur l'objet OBJET1. \n    \n    Si le mot 'RESUME' est employe, certaines listes d'informations \nseront reduites.  \n\n    Dans le cas de la liste d'une PROCEDURE, on peut preciser soit le\nnumero N1 (type ENTIER) de la ligne desiree, soit les bornes N1 N2\n(type ENTIER) de l'intervalle des lignes desirees.\nExemple :  LIST ACIER;  ou  LIST ACIER 5;   ou  LIST ACIER 5 8; \n\n    Dans le cas d'un objet LISTENTI, LISTREEL ou RIGIDITE, on peut \npr\u00e9ciser le nombre N1 de valeurs avant d'effectuer un retour a la lignes\n(respectivement 20, 10 et 39 par defaut).\n\n    Dans le cas d'un objet TABLE, on peut pr\u00e9ciser le nombre N1 (limite\na 10) d'eventuelle sous-tables a explorer et afficher de maniere \nrecursive.\n\n\n    ------------\n    | 3eme cas |\n    ------------\n\n    LISTE *MONTYP1  ;\n\n    Objet :\n    _______\n\n    Dans ce cas, la directive LISTE donne la liste des objets du\ntype MONTYP1.",
  },
  {
    name: "LITEMPER",
    url: "LITEMPER",
    documentation:
      "$$$$ LITEMPER NOTICE  CHAT      11/09/12    21:17:07     7124           \n                                             DATE     11/09/12\n  \n    Methode LITEMPER                        Voir aussi : METH OBJE\n    ----------------                                     DONCHI1  \n      LITEMPER <MOT1> <ENT1> ;\n\n\n        Objet\n        -----\n\n     La methode LITEMPER charge un ENTIER ou un mot  dans\n     l'element %TEMPERATURE d'un objet (DONCHI1)",
  },
  {
    name: "LOG",
    url: "LOG",
    documentation:
      "$$$$ LOG      NOTICE  KK2000    14/07/28    21:15:16     8127           \n                                             DATE     14/07/28\n\n      RESU1 =  'LOG'  OBJET1 ;\n\n\n    Operateur LOG                            Voir aussi : EXP\n    -------------  \n    Objet :\n    _______\n\n    L'operateur LOG calcule le logarithme naturel de l'objet OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "LOGK",
    url: "LOGK",
    documentation:
      "$$$$ LOGK     NOTICE  CHAT      11/09/12    21:17:07     7124           \n                                             DATE     11/09/12\n  \n  Operateur LOGK                            Voir aussi :\n   --------------  \n       CHPO3 = LOGK  TAB1  LENTI1  <'FORCEION' CHPO1 >\n                                           < 'TEMPERAT' CHPO2 > ;\n\n\n        Objet\n       -------\n       Calcul de la constante (apparente) de la loi d'action de masse,\n       en tout point d'un domaine pour un systeme chimique donne.\n\n\n       Commentaires\n       ------------\n       TAB1 est un objet de type TABLE et de sous type chimi1 \n            (cf operateur CHI1)\n\n       LENTI1 est objet de type LISTENTI contenant la liste des\n             identifiants pour lesquels on veut calculer le LOGK\n\n       'FORCEION' mot cle  ( doit preceder CHPO1)\n\n       CHPO1 nom d'un objet de type CHPOIN ayant une composante scalaire\n             , et contenant la valeur de la force ionique en chaque\n             point du maillage.\n\n       'TEMPERAT' mot cle ( doit preceder CHPO2)\n\n       CHPO2 nom d'un objet de type CHPOIN contenant la temperature en\n             chaque point du maillage. Cette temperature est exprimee\n             en degres Celsius.\n\n       CHPO3 objet de type CHPOIN ayant une composante par espece\n             chimique. Les noms ont 4 caracteres dont le premier est W\n             suivi eventuellement de 0 ou 00 et du numero d'ordre dans\n             la liste  TAB1.DESCHI.IDY  de l'identifiant concerne.\n             CHPO3 contient pour chaque espece chimique la constante\n             apparente de la loi d'action de masse en chaque\n             point du maillage.\n\n\n \n\n \n\n \n \n \n ",
  },
  {
    name: "LSOSFRAC",
    url: "LSOSFRAC",
    documentation:
      "$$$$ LSOSFRAC NOTICE  CHAT      11/09/12    21:17:07     7124           \n                                             DATE     11/09/12\n  \n    Methode LSOSFRAC                         Voir aussi : METH OBJE\n    ---------------                                       LIRSOSO  \n\n        Objet\n        -----\n\n     La methode LSOSFRAC charge un LISTREEL  dans l'element\n     %FRACTIO d'un objet (LIRSOSO)",
  },
  {
    name: "LSOSSOLI",
    url: "LSOSSOLI",
    documentation:
      "$$$$ LSOSSOLI NOTICE  CHAT      11/09/12    21:17:08     7124           \n                                             DATE     11/09/12\n  \n    Methode LSOSSOLI                         Voir aussi : METH\n    ----------------                                      OBJE  \n\n        Objet\n        -----\n\n     La methode LSOSSOLI charge un LISTENTI  dans l'element\n     %SOLID d'un objet (LIRSOSO)",
  },
  {
    name: "LSQF",
    url: "LSQF",
    documentation:
      "$$$$ LSQF     NOTICE  MB234859  17/10/02    21:15:16     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur LSQF                           Voir aussi :\n    --------------  \n    EVOL1 = LSQF EVOL2 N1 (MOT1 N2) ;\n\n\n    objet :\n    -------\n\n    Operateur LSQF permet d'effectuer une modelisation de type Least-\n    Squares des signaux EVOL2 (comportant N courbes) que l'on stocke dans\n    EVOL1 (comportant N courbes).\n\n    N1 specifie le nombre minimal de points vise dans EVOL1.\n\n    Chaque signal de EVOL2 doit avoir un pas de temps constant.\n\n\n    options :\n    ---------\n\n    MOT1 (type MOT) vaut 'UNIF','OPTI' ou 'REDU':\n\n    'UNIF': chaque modelisation est effectuee sur un nombre de points\n            proche de N1 en une seule passe.\n\n    'OPTI': chaque modelisation est effectuee sur un nombre de points\n            proche de N1 de fa\u00e7on optimisee. N2 (type ENTIER) indique\n            alors de combien d'intervalle de fonction originale peuvent\n            bouger les points de modelisation.\n            (ATENTION: cette option est non disponible)\n\n    'REDU': indique que chaque modelisation est effectuee sur une\n            fraction de la grille originale. N2 (type ENTIER) indique\n            alors le facteur de reduction. Le nombre de point minimal\n            continue etre regle par N1.",
  },
  {
    name: "LTL",
    url: "LTL",
    documentation:
      "$$$$ LTL      NOTICE  CHAT      11/09/12    21:17:08     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur LTL                            Voir aussi :\n    --------------  \n    FLOT1 = LTL  LREEL1 (LREEL2 FLOT2 FLOT3)  ;\n\n\n    objet :\n    -------\n\n    Operateur LTL effectue le produit scalaire de LREEL1 par LREEL2\n    (de meme longueur que LREEL1) eventuellement pondere par FLOT2 et\n     FLOT3.\n\n    Si LREEL2 n'est pas donne, alors implicitement LREEL2=LREEL1.\n\n    FLOT2 et FLOT3 valent 1 par defaut.",
  },
  {
    name: "LUMP",
    url: "LUMP",
    documentation:
      "$$$$ LUMP     NOTICE  MB234859  17/10/02    21:15:16     9577           \n                                             DATE     17/10/02\n                                             \n    Operateur LUMP                           Voir aussi : MASS MATE \n    ---------------                                       CARA  \n\n    ----------------------\n    |  1ere possibilite  |\n    ----------------------    \n    \n\n      MASS1 =  'LUMP'  MODL1  MAT1 ;\n\n\n\n    Objet :\n    _______\n\n    l'operateur LUMP calcule les matrices masse diagonalisee (ou \"lumpee\") \n    des elements references par le modele argument. La methode de \n    diagonalisation depend de l'element considere.\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : objet modele ( type MMODEL ).\n\n      MAT1   : Champ de caracteristiques materielles et geometriques\n               (type MCHAML, sous-type CARACTERISTIQUES).\n\n\n      MASS1  : Resultat de type RIGIDITE de sous-type MASSE.\n\n \n      Remarque :\n      __________\n\n      Le support geometrique de MASS1 sera celui de MAT1.\n\n      Le numero de l'harmonique utilise dans le cas d'une analyse en\n      serie de Fourier est precise par la directive OPTION :\n\n                    OPTION MODE FOUR NN ;\n\n      Les caracteristiques gemoetrique ne sont obligatoires que si la\n      description geometrique de l'element ne peut se faire par le\n      maillage, par exemple l'epaisseur d'elements de plaques ou les\n      sections des barres, etc ..\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------    \n    \n\n      RIG2 =  'LUMP'  RIG1  (LMOTS)    ;\n\n\n     Objet :\n    ________\n    \n    \n    Fabrication de la matrice lumpee a partir d'une matrice complete\n    \n    \n    Commentaire :\n    -------------\n      \n     RIG2 : matrice diagonale resultat \n     \n     RIG1 : matrice originale a lumper \n     \n     Le terme diagonal de RIG2 est egal a :\n     \n      - au terme diagonal de RIG1 si il se rapporte a une inconnue \n      dont le nom est contenu dans LMOTS ( type listmots) \n      \n      -  a la somme des termes de la ligne sinon \n      ",
  },
  {
    name: "MAGN",
    url: "MAGN",
    documentation:
      "$$$$ MAGN     NOTICE  CHAT      11/09/12    21:17:09     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n\n         liste de operateurs ou procedures  dediees aux calculs \n                   en ELECTRO_MAGNETISME\n-----------------------------------------------------------------------\n|                                                                     |\n|       2D  PLAN OU AXISYMETRIQUE   Formulation en potentiel vecteur  |\n|       3D  VOLUMIQUE         Formulation a deux potentiels SCALAIREs |\n|                             Potentiel total /  Potentiel reduit     |\n|               materiaux  non lineaires isotropes ou orthotropes     |\n|---------------------------------------------------------------------|        \n|       Calculs 2D plans ou axisymetriques                            |\n|      POT_VECT , DESCOUR , INDUCTIO ,PROI ( option poly ) ,FOR_CONT  |\n|      FORBLOC , DDFOUR  ,   A_HOMO                                   |\n|---------------------------------------------------------------------|\n|       Calculs 3D                                                    |\n|        BIOT  , POTSCAL , COUR3D                                     |\n|---------------------------------------------------------------------|\n|        Commun  au 2D et 3D                                          |\n|        H_B  ,  MAG_NLIN                                             |\n-----------------------------------------------------------------------",
  },
  {
    name: "MAG_NLIN",
    url: "MAG_NLIN",
    documentation:
      "$$$$ MAG_NLIN NOTICE  CHAT      11/09/12    21:17:08     7124           \n                                             DATE     11/09/12\n \n  Procedure   MAG_NLIN                   Voir aussi :\n      --------------------  \n          MAG_NLIN TABB \n\n\n       Objet :\n       -------\n\n       Calcul du potentiel vecteur ou du potentiel scalaire \n       en non lineaire pour les problemes de magnetostatique \n       en 2D potentiel vecteur ou 3D potentiel scalaire\n\n       Commentaires :\n       --------------\n       \n       \n       Une partie des arguments de la table TABB sont construits par\n       un passage prealable dans les procedure POT_VECT ou POT_CSAL.  \n\n       Arguments additionnels specifiques de la procedure MAG_NLIN\n \n       TABB        objet de type table  avec les indices suivants \n                   ecrits en toutes lettres\n\n \n   Obligatoires :\n   \n        'SOUSTYPE'     THERMIQUE                                  \n        'EVOCOND'      Evolution de Mu  cree par la procedure H_B\n                       qui rend la courbe ad hoc pour POT_VECT ou\n                       POT_SCAL \n  \n \n   Optionnel    :\n                                                      \n        'CRITERE'      Ccritere de convergenve  (10E-5 par defaut)\n        'OME'          Coef amortissement oscillations  0< OME < 1.\n                        pour le 2D principalement \n        'NITER'        Reactualisation de la conductivite toutes les\n                       NITER iterations (NITER=1 par defaut)  \n        'NIVEAU'       Niveau des messages (NIVEAU=0 par defaut)  \n        'ITERMAX'      Nonmbre d'iterations maximum              \n                              (ITERMAX=10 par defaut)\n   Arguments fabriques dans les appels soit de POT_VECT soit de \n   POT_SCAL\n\n        'FLUX'         Flux equivallent                  \n        'CLIM'         Matrice de blocage (cree par BLOQUE  T )\n        'IMPOSE'       Valeurs imposees (Cree par DEPI ) \n        'RIGCON '      Raideur constante               \n        'RIGFER '      Raideur variable\n                   \n     ETAB contient en sortie : :\n                               \n        'POTENTIEL'    Potentiel resultat     \n        ",
  },
  {
    name: "MAILSTRU",
    url: "MAILSTRU",
    documentation:
      "$$$$ MAILSTRU NOTICE  CHAT      11/09/12    21:17:09     7124           \n                                             DATE     11/09/12\n\n  Procedure  MAILSTRU                      Voir aussi :\n    -------------------  \n    GEO2 = MAILSTRU GEO1  FLOT1 ;\n\n\n    Objet :\n    _______\n\n    La procedur MAILSTRU permet a partir d'un contour GEO1 de fabriquer\nun maillage structure. La densite de maillage est definie par FLOT1 et\nle type d'elements fabriques est le type courant defini dans OPTION.\n\nCette procedure ne marche que pour des elements de surface et le\nresultat est de type MAILLAGE.",
  },
  {
    name: "MAILTOPO",
    url: "MAILTOPO",
    documentation:
      "$$$$ MAILTOPO NOTICE  GOUNAND   21/04/09    21:15:04     10944          \n                                             DATE     21/04/09\n\n    Procedure MAILTOPO                      Voir aussi : TRIA REMA\n    ------------------                                   INDI  \n    MAIL1 (METR1) = MAILTOPO | 'TRIA' MAIL2         | (METR2) ...\n                             | 'REMA' MAIL3 (MAIL4) | \n\n                 ... | ('AJNO') | ('IPOL') (TAB1) ;\n                     |  'NOAJ'  |\n    Objet :\n    _______\n\n    Cette proc\u00e9dure n'est pas destinee a etre appelee par l'utilisateur\n    (voir operateurs TRIA et REMA).\n    Elle implemente un algorithme topologique de g\u00e9n\u00e9ration ('TRIA') ou\n    d'optimisation ('REMA') d'un maillage de simplex anisotrope du a T.\n    Coupez et al. (voir bibliographie ci-apres)\n\n    Commentaire :\n    _____________\n\n      MAIL1 : maillage genere (type MAILLAGE)\n\n      METR1 : si le mot-cle 'IPOL' est donne, METR1 (type CHPOINT) est\n              la metrique interpolee sur le nouveau maillage MAIL1\n\n      MAIL2 : bord du maillage a generer (type MAILLAGE)\n\n      MAIL3 : maillage a optimiser (type MAILLAGE)\n\n      MAIL4 : partie du bord de MAIL3 que le mailleur ne doit pas\n              modifier (par defaut le mailleur peut retirer ou ajouter\n              des noeuds sur les parties planes du bord de MAIL3)\n\n      METR2 : objet de type FLOTTANT ou CHPOINT               \n              Si METR2 est de type FLOTTANT, il s'agit de la taille\n              d'arete voulue (densite)\n              Si METR2 est de type CHPOINT, il s'agit de l'inverse\n              de la metrique voulue (unite : longueur^-2)\n\n      TAB1  : objet optionnel de type TABLE dont les indices sont des\n              parametres d'entree ou de sortie du mailleur\n              Entree :\n              TAB1 . 'debug' = 0..2 ; (0 par defaut)\n                   Niveau d'information\n              TAB1 . 'graph' = faux..vrai ; (faux par defaut)\n                   Sortie de graphiques\n              TAB1 . 'id_cas' = MOT1 ;\n                   Chaine de caracteres decrivant le cas\n              TAB1 . 'max_iter' = ENTI1 ; (100 par defaut)\n                   Nombre d'iterations maximum de l'algorithme\n              TAB1 . 'precrel_volume' = FLOT1 ; (1.D-11 par defaut)\n                   Precision relative en-dessous de laquelle un element\n                   est considere comme ayant un volume nul\n              TAB1 . 'precrel_qualite' = FLOT1 ; (1.D-2 par defaut)\n                   Precision relative en-dessous de laquelle deux\n                   elements sont consideres comme ayant une qualite\n                   identique\n              TAB1 . 'verif' = 0..2 ; (0 par defaut)\n                   Niveau de verification (debug) dans l'operateur\n                   appele (OPTO)\n              TAB1 . 'impr_segadj' = 0..1 ; (0 par defaut)\n                   Impressions (debug) lors des ajustements de segments\n                   dans l'operateur appele (OPTO)\n              Sortie :\n              TAB1 . 'curtopo' = MAIL1 ;\n                   Maillage courant obtenu par l'algorithme\n              TAB1 . 'dvol' = FLOT1 ;\n                   Difference entre le volume du maillage courant et le\n                   volume souhaite\n              TAB1 . 'nnul' = ENTI1 ;\n                   Nombre d'elements du maillage courant ayant un volume\n                   nul\n              TAB1 . 'miq' = FLOT1 ;\n                   Qualite minimum (cf. operateur INDI) des elements du\n                   maillage courant\n              TAB1 . 'moq' = FLOT1 ;\n                   Qualite moyenne des elements du maillage courant\n              TAB1 . 'maq' = FLOT1 ;\n                   Qualite maximal des elements du maillage courant\n                   \n\n    Remarques :\n    ___________\n\n     1) Si la metrique voulue est isotrope, le nom de composante est G.\n        Si la metrique voulue est anisotrope, les noms des composantes\n        sont :  G11, G21, G22, (G31, G32, G33 en 3D)\n        \n     2) Si le mot-clef 'AJNO' (par defaut) est donne, le mailleur peut\n        generer de nouveaux noeuds.\n        Si le mot-clef 'NOAJ' est donne, le mailleur ne genere pas de\n        nouveaux noeuds.\n\n\n    Bibliographie :\n    _______________\n\n    @article{author = {Coupez, Thierry},\n         title  = {Generation de maillage et adaptation de maillage par\n                  optimisation locale},\n         journal = {Revue Europ\u00e9enne des \u00c9l\u00e9ments Finis},\n         volume  = {9}, number = {4}, pages = {403-423}, year = {2000},\n         doi     = {10.1080/12506559.2000.10511454}}\n     \n\n    @PhdThesis{author = {Cyril Gruau},\n           title =  {Generation de m\u00e9triques pour adaptation anisotrope\n              de maillage, application \u00e0 la mise en forme des mat\u00e9riaux}, \n              school = {ENSMP}, year = {2004}}\n      \n    @article{author = \"Cyril Gruau and Thierry Coupez\",\n         title = \"3D tetrahedral, unstructured and anisotropic mesh\n           generation with adaptation to natural and multidomain metric\", \n         journal = \"Computer Methods in Applied Mechanics and Engineering\",\n         volume = \"194\", number = \"48 - 49\", pages = \"4951 - 4976\",\n         year = \"2005\",\n         doi = \"10.1016/j.cma.2004.11.020\"}\n    ",
  },
  {
    name: "MAILVORO",
    url: "MAILVORO",
    documentation:
      "$$$$ MAILVORO NOTICE  FD218221  16/07/08    21:15:02     9019           \n                                             DATE     16/07/08\n\n\n\n    Procedure MAILVORO\n    ------------------\n\n    TAB2 = MAILVORO TAB1 ENV1 (NBDIV) (COEF1) ('COUL') ;\n\n    Objet :\n    -------\n\n    La procedure MAILVORO realise le maillage volumique en 3D\n    (surfacique en 2D) d'une partition de Voronoi.\n\n    Commentaires :\n    --------------\n\n    Entree :\n    --------\n\n    TAB1  = objet TABLE, issue de l'appel de l'operateur VORO, qui\n            decrit une partition de Voronoi (voir notice VORO) ;\n\n    ENV1  = objet MAILLAGE, enveloppe ferme, oriente, connexe\n            et constitue d'elements TRI3, servant a delimiter\n            la partition de Voronoi ;\n\n    NBDIV = objet ENTIER, valeur cible du nombre d'elements par diametre\n            de cellule, fixee par defaut a 6 ;\n\n    COEF1 = objet FLOTTANT, coefficient, fixe par defaut a 1/3,\n            intervenant dans le calcul du critere d'elimination des\n            petites aretes de la partition ;\n\n    'COUL' = permet de colorier le maillage de chaque cellule.\n             La couleur de chaque cellule est choisie aleatoirement et\n             est differente de celles de ces voisines.\n\n    Sortie :\n    --------\n\n    TAB2 = objet de type TABLE decrivant le maillage de la partition\n           de Vornoi. \n    *) Descriptif de la table TAB2 :\n \n       TAB2 . 'MAIL'  = MAILLAGE global, elements de type TET4 en 3D\n                        (TRI3 en 2D) ;\n       TAB2 . 'CELL'  = TABLE decrivant le maillage des cellules ;\n       TAB2 . 'FACS'  = TABLE decrivant le maillage des faces ;\n       TAB2 . 'ARTS'  = TABLE decrivant le maillage des aretes ;\n\n    *) Descriptif de l'indice TAB2 . 'CELL' :\n\n       TAB2 . 'CELL' = TABLE contenant N indices de type POINT decrivant\n                       les centres des N cellules de la partition.\n\n       TAB2 . 'CELL' . Pk . 'MAIL' = MAILLAGE de la cellule de centre Pk\n                                     (elements de type TET4 en 3D)\n                                     (elements de type TRI3 en 2D).\n       TAB2 . 'CELL' . Pk . 'FACS' = LISTENTI, liste des numeros des\n                                     faces de la cellule de centre Pk.\n       TAB2 . 'CELL' . Pk . 'VOIS' = MAILLAGE des centres voisins de \n                                     la cellule de centre Pk (elements POI1).\n       TAB2 . 'CELL' . Pk . 'COUL' = MOT decrivant la couleur associee\n                                     a la cellule de centre Pk.\n\n    *) Descriptif de l'indice TAB2 . 'FACS' (en 3D seulement) :\n\n       TAB2 . 'FACS' = TABLE contenant M indices de type ENTIER  \n                       decrivant les numeros des M faces de la partition.\n\n       TAB2 . 'FACS' . i . 'MAIL' = MAILLAGE de la face numero i\n                                    (elements de type TRI3).\n       TAB2 . 'FACS' . i . 'ARTS' = LISTENTI, liste des numeros des\n                                    aretes du contour de la face numero i.\n\n    *) Descriptif de l'indice TAB2 . 'ARTS' :\n\n       TAB2 . 'ARTS' = TABLE contenant P indices de type ENTIER\n                       decrivant les numeros des P aretes de la partition.\n\n       TAB2 . 'ARTS' . j  = MAILLAGE de l'arete numero j\n                            (elements de type SEG2).",
  },
  {
    name: "MANU",
    url: "MANU",
    documentation:
      "$$$$ MANU     NOTICE  BP208322  20/05/05    21:15:02     10604          \n                                             DATE     20/05/05\n\n  Operateur MANUEL                         Voir aussi :\n    ----------------  \n\n    Objet :\n    _______\n\n    L'operateur MANU permet de creer simplement des objets de type :\n    MAILLAGE, CHPOINT, SOLUTION, RIGIDITE, MCHAML.\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. MAILLAGE\n2. CHPOINT\n3. SOLUTION 'MODE'\n4. RIGIDITE\n    4.1 RIGIDITE a partir d une LISTREEL\n    4.2 RIGIDITE a partir d'un CHPOINT\n    4.3 RIGIDITE a partir d'un LISTCHPO\n5. MCHAML\n    5.1 MCHAML s'appuyant sur un objet maillage\n    5.2 MCHAML s'appuyant sur un objet MMODEL\n    5.3 MCHAML nul partout sauf en un point\n    5.4 Objet de type MCHAML contenant des EVOLUTIONS\n6. Objet existant a partir du POINTEUR\n\n  \n1. MAILLAGE1 \n=========== \n    GEO1 = MANU MOT1 | (POIN1 POIN2 . . .) | (COUL1) ;\n                     | GEO2                |\n\n    Objet :\n    _______\n\n    L'operateur MANU construit, a partir d'une liste de points ou des\n    points d'un autre maillage, un maillage forme par ces points,\n    constitue d'elements dont le type est precise et de la couleur\n    requise.\n\n    Commentaire :\n    _____________\n\n    MOT1   : type des elements (type MOT)\n\n    POINTi : liste des points (type POINT)\n\n    GEO2   : maillage (type MAILLAGE)\n\n    COUL1  : couleur requise (type MOT)\n             si la couleur n'est pas precisee, la couleur par defaut est\n             utilisee\n\n    GEO1   : objet resultat (type MAILLAGE)\n\n\n    Exemple : NEWTR = MANU TRI3 ROSE ORIGIN (BASE POIN FINAL) (NOEU 12);\n\n    Remarque : l'element MULT utilise dans le support des matrices\n    de rigidite comportant des multiplicateurs de Lagrange est limite\n    a 99 noeuds\n  \n2. CHPOINT \n========== \n \n    CHPO1 = MANU  'CHPO' GEO1 | LMOT1  LREE1                 |\n                              |                              |\n                              |(ENTI1) MOT1 VAL1   MOT2 VAL2 |\n                              |        ---------   --------- |\n                              |            |___________|     |\n                              |              ENTI1 fois      |\n                         ('TITRE'  MOT3)\n                         ('NATURE' MOT4) ;\n\n    Objet :\n    _______\n\n    L'operateur MANU avec le mot-cle 'CHPO' construit un champ par point\n\n\n\n    Commentaires :\n    ______________\n\n    CHPO1   : objet resultat (type CHPOINT)\n\n    GEO1    : support geometrique (type POINT ou MAILLAGE)\n\n    'TITRE' : mot-cle (type MOT) suivi de\n    MOT3    : titre donne au champ (type MOT)\n\n    'NATURE': mot-cle (type MOT) suivi de\n    MOT4    : mot-cle attribuant le nature du champ ('INDETERMINE'\n              ou 'DIFFUS' ou 'DISCRET') ; par defaut la nature est\n              indeteterminee\n\n\n    SYNTAXE 1\n    ---------\n\n    LMOT1   : liste des noms de composantes (type LISTMOTS)\n\n    LREE1   : valeur associee a chaque composante, affectee a tous les\n              noeuds de GEO1 (type LISTREEL)\n\n\n    SYNTAXE 2\n    ---------\n\n    ENTI1   : nombre de composantes (type entier). S'il n'est pas\n              specifie, lit tous les couples MOTi VALi qui suivent\n\n    MOTi    : nom des composantes (type MOT) limite a 4 caracteres\n\n    VALi    : liste des valeurs affectee a chaque noeud de GEO1 pour la\n              composante MOTi (type LISTREEL ou FLOTTANT)\n\n\n\n    Remarques :\n    ___________\n\n    La syntaxe 1 permet de creer des champs uniformes (VALi de type\n    ENTIER ou FLOTTANT) ou variables (VALi de type LISTREEL), tandis\n    que la syntaxe 2 permet de creer uniquement des champs uniformes.\n\n    Pour la syntaxe 1, si LREE1 est plus court que LMOT1, les\n    composantes en surplus sont creees mais initialisees a zero.\n\n    Pour la syntaxe 2, si VALi est de type LISTREEL, alors GEO1 doit\n    necessairement etre de type POI1 et VALi doit comporter autant de\n    valeurs qu'il y a d'elements dans GEO1 (qu'il y ait des noeuds\n    multiples ou non).\n\n    Si le maillage GEO1 n'est pas de type POI1, ils sera automatiquement\n    converti, avec chaque noeud n'apparaissant qu'une seule fois.\n\n    Si le maillage GEO1 est deja de type POI1, les eventuels noeuds\n    multiples vont etre fusionnes pour pouvoir servir de support au\n    CHPOINT. C'est l'attribut NATUre qui regit le choix de la valeur\n    retenue pour ces noeuds-ci :\n    - DIFFUS : les doublons d'un meme noeud doivent avoir la meme valeur\n    - DISCRET : les valeurs definies pour un meme noeud sont sommees\n\n    On peut fournir la nature et le titre indifferemment apres le\n    mot-clef 'CHPO' ou en fin de ligne, mais dans ce dernier cas, il\n    est necessaire d'avoir specifie le nombre de composantes ENTI1.\n\n\n\n    Exemples :\n    __________\n\n    Creation d'un champ discret avec 2 composantes uniformes :\n\n       a) CHPO1 = MANU 'CHPO' GEO1 2 'UX' 1 'UY' 2.5 'NATURE' 'DISC' ;\n\n                = MANU 'CHPO' GEO1 ('MOTS' 'UX' 'UY')\n                                   ('PROG'  1   2.5 ) 'NATURE' 'DISC' ;\n\n\n    Specification du titre d'un champ avec 1 composante uniforme :\n\n       b) CHPO1 = MANU 'CHPO' 'TITRE' 'Densite' GEO1 'RHO' 1.5 ;\n\n                = MANU 'CHPO' GEO1  1  'RHO' 1.5 'TITRE' 'Densite' ;\n\n\n    Creation d'un champ avec 1 composante variable :\n\n       c) CHPO1 = MANU 'CHPO' GEO1 'FX' (PROG 1.1 PAS 0.1 2.9) ;\n\n\n    Creation de champs sur un maillage de 6 noeuds dont seulement 3\n    sont distincts :\n\n       d) CHPO1 = MANU 'CHPO' GEO1 'UX' 10. 'NATURE' 'DIFF' ;\n          CHPO2 = MANU 'CHPO' GEO1 'UX' 10. 'NATURE' 'DISC' ;\n\n            GEO1     =>    NOEUDS     4    7    7    1    7    4\n            CHPO1    =>    NOEUDS     1    4    7\n                           VALEURS    10.  10.  10.\n            CHPO2    =>    NOEUDS     1    4    7\n                           VALEURS    10.  20.  30.\n\n       e) CHPO1 = MANU 'CHPO' GEO1 'UX' (PROG 1. 2. 3. 4. 5. 6.)\n                                   'NATURE' 'DISC' ;\n\n            GEO1     =>    NOEUDS     4    7    7    1    7    4\n            CHPO1    =>    NOEUDS     1    4    7\n                           VALEURS    4.   7.   10.\n                           \n  \n3. SOLUTION 'MODE' \n================== \n \n    SOL1 = MANU 'MODE' ('NUME' N1) FLOT1 FLOT2 (FLOT3 FLOT4 FLOT5)\n                                                        CHPO1 (CHEL1) ;\n\n\n   'NUME'   : mot-cle permettant d'affecter un numero au mode.\n\n    N1      : le numero du mode (type ENTIER).\n\n    FLOT1   : frequence du mode (type FLOTTANT).\n\n    FLOT2   : masse generalisee du mode (type FLOTTANT).\n\n    FLOT3 |\n    FLOT4 | : les trois deplacements generalises du mode (type FLOTTANT)\n    FLOT5 |\n\n    CHPO1   : mode propre (type CHPOINT).\n\n    CHEL1   : contraintes modales (type MCHAML)\n\n    SOL1    : objet de type SOLUTION de sous-type MODE\n  \n4. RIGIDITE \n=========== \n \n  \n4.1 RIGIDITE a partir d une LISTREEL \n------------------------------------ \n    RIG1 = MANU 'RIGIDITE'  ( 'TYPE' MOT1 )  GEO1  LMOT1\n                 ( 'DUAL' LMOT2 )  ( 'ANTI' | 'QUEL' )  LREEL1 ;\n\n    Objet :\n    _______\n\n    L'option RIGIDITE de l'operateur MANUEL cree, par la definition\nexplicite de ses composants, un objet 'RIGIDITE' RIG1, dans lequel\ntoutes les matrices de rigidite elementaires sont les memes.\n\n    Commentaire :\n    _____________\n\n    Cas particulier frequent : la rigidite RIG1 s'appuie sur un seul\nelement geometrique et elle ne contiendra qu'une seule matrice\nelementaire.\n\n    MOT1      : Sous-type de la rigidite que l'on cree (type MOT).\n\n    GEO1      : Support geometrique (type POINT ou MAILLAGE).\n\n    LMOT1     : objet contenant les noms des composantes pour un noeud\n                d'un element de GEO1 (type LISTMOTS).\n                Si tous les noeuds d'un meme element de GEO1\n                n'ont pas les memes composantes, on donne plusieurs\n                objets (il en faut autant qu'il y a de noeuds par\n                element).\n\n   'DUAL'     : mot-cle facultatif indiquant que l'on va donner\n                les noms des composantes duales.\n\n    LMOT2     : objet contenant les noms des composantes duales (type\n                LISTMOTS). Il faut en donner autant que pour les noms\n                de composantes.\n\n   'ANTI'     : mot-cles facultatifs indiquant que l'on va creer une\n   'QUEL'       matrice antisymetrique ou non-symetrique respectivement.\n                En absence d'un de ces mots-cle, la matrice sera\n                consideree comme symetrique.\n\n    LREEL1    : objet contenant les termes des matrices elementaires\n                (type LISTREEL). Si un seul objet est fourni, il\n                contient tous les termes du rectangle ou du\n                triangle inferieur de la matrice elementaire,\n                ligne par ligne. Si plusieurs objets sont fournis,\n                il en faut autant que de lignes dans la matrice\n                elementaire, le ieme objet (i ou n valeurs)\n                decrivant la ieme ligne de la matrice.\n\n\n\n    Exemple d'entree de la matrice elementaire :    | A B C |\n    --------------------------------------------    | D E F |\n                                                    | G H I |\n\n    Elle peut etre donnee par:  (PROG A B C D E F G H I )\n    ou bien par :  (PROG A B C ) (PROG D E F) (PROG G H I )\n    si la matrice est symetrique ou antisymetrique on peut aussi\n    la decrire par : (PROG A D E G H I )\n    ou bien par    : (PROG A ) (PROG D E) (PROG G H I)\n\n    Actuellement, seulement des matrices carrees peuvent etre\n    creees.\n\n\n  \n4.2 RIGIDITE a partir d'un CHPOINT \n---------------------------------- \n    RIG1 = MANU 'RIGI' CHPO1 ...\n\n          ... |('DIAG')                                            | ...\n              | 'COLO' (MOT2) PT1 INC1 ('DUAL' INC2) (LMOT1 LMOT2) |\n              | 'LIGN' (MOT2) PT1 INC1 ('PRIM' INC2) (LMOT1 LMOT2) |\n\n               ... ('TYPE' MOT3) ;\n\n    Objet :\n    _______\n\n    Option 'DIAG' :\n    L'operateur MANU RIGI cree une rigidite diagonale dont les termes\n    diagonaux sont egaux aux valeurs du champ.\n\n    Option 'COLO'/LIGN' :\n    L'operateur MANU RIGI cree une rigidite colonne/ligne.\n\n\n    Commentaire :\n    _____________\n\n    CHPO1   :  valeurs des termes de RIG1.\n    MOT2    :  symetrie de la matrice (='SYME','ANTI' ou 'QUEL')\n    PT1  (POINT) :  noeud primal (/dual) localisant la colonne (/ligne)\n    INC1 (MOT)   :  nom de composante de l'inconnue primale (/duale)\n                    localisant la colonne (/ligne)\n    INC2 (MOT)   :  nom de composante de l'inconnue duale (/primale)\n    MOT3    :  type de la matrice (='RIGIDITE','AMORTISS', ou 'MASSE')\n    LMOT1   :  liste des inconnues duales (/primales) definies dans le\n               chpoint CHPO1\n    LMOT2   :  liste des inconnues primales (/duales) qui correspond au\n               chpoint CHPO1\n\n\n  \n4.3 RIGIDITE a partir d'un LISTCHPO \n----------------------------------- \n    RIG1 = MANU 'RIGI' LCHPO1 GEO1 ('TYPE' MOT3) ;\n\n    Cree une matrice dont les vecteurs colonnes sont les chpoints de la\n    liste de chpoints.\n\n    LCHPO1  : LISTCHPO contenant les CHPOINT ordonnes de composante ALFA\n              (inconnue modale) a utiliser comme \"colonnes\" de la\n              matrice a creer\n\n    GEO1    : MAILLAGE de POI1 support des modes definissant l'ordre des\n              inconnues (\"lignes\" de la matrice)\n\n    MOT3    : type de la matrice (='RIGIDITE','AMORTISS', 'MASSE' ou\n              autre; 'MONODROM' par defaut)\n  \n5. MCHAML \n========= \n \n  \n5.1 MCHAML s'appuyant sur un objet maillage \n------------------------------------------- \n   CHAM1 = MANU 'CHML' GEO1 | MOT1 VAL1 (MOT2 VAL2 ...) | \n                            | MOT1 OBJ1 (MOT2 OBJ2 ...) |\n                            \n                       ('TYPE' MOT3 )  ('CONS' MOT4 ) ;\n\n    Objet :\n    _______\n\n    L'operateur MANU CHML cree un nouveau champ par element\n(type MCHAML) s'appuyant sur l'objet GEO1 (type MAILLAGE).\n\n    Commentaire :\n    _____________\n\n    MOTi    :  nom d'une composante (type MOT) limite a 4 caracteres\n\n    VALi    :  valeur constante de la composante (type FLOTTANT)\n\n    OBJi    :  objet de type quelconque. S'il s'agit d'un ENTIER,\n               il est converti en FLOTTANT. S'il s'agit d'un LOGIQUE,\n               les valeurs stockees sont 1 pour VRAI et 2 pour FAUX.\n\n    MOT3    :  sous-type du champ (type MOT)(facultatif)\n\n    MOT4    :  nom du constituant (type MOT)  (facultatif)\n\n    Remarque :\n    ---------\n    Le champ par element resultat est systematiquement exprime aux\n    noeuds .\n\n\n  \n5.2 MCHAML s'appuyant sur un objet MMODEL \n----------------------------------------- \n   CHAM1 = MANU 'CHML' MODL1 ('REPA') | MOT1 VAL1 (MOT2 VAL2 ...) |\n                                      | MOT1 OBJ1 (MOT2 OBJ2 ...) |\n\n                       ('TYPE' MOT3 ) ( |'NOEUD   '| ) ;\n                                        |'GRAVITE '|\n                                        |'RIGIDITE'|\n                                        |'MASSE   '|\n                                        |'STRESSES'|\n\n    Objet :\n    _______\n\n    L'operateur MANU CHML cree un nouveau champ par element\n(type MCHAML) s'appuyant sur l'objet MODL1 (type MMODEL).\n\n    Commentaire :\n    _____________\n\n    MOTi    :  nom d'une composante (type MOT) limite a 4 caracteres\n\n    VALi    :  valeur constante de la composante (type FLOTTANT)\n\n    OBJi    :  objet de type quelconque. S'il s'agit d'un ENTIER,\n               il est converti en FLOTTANT. S'il s'agit d'un LOGIQUE,\n               les valeurs stockees sont 1 pour VRAI et 2 pour FAUX.\n               Dans le cas particulier ou les OBJi sont des objets\n               de type LISTREEL il est possible de demander, par\n               la presence du mot 'REPA', de repartir les valeurs de\n               l'objet a raison d'une par element. Le LISTREEL peut\n               etre trop court, il est repris au debut.\n\n    MOT3    :  sous-type du champ (type MOT)  (facultatif)\n\n    Remarque :\n    ----------\n    Les mots-cles 'NOEUD' ,'GRAVITE','RIGIDITE','MASSE','STRESSES'\n    signifient que le champ par element sera exprime respectivement\n    aux noeuds, aux centres de gravite, aux points d'integration de la\n    raideur, aux points d'integration de le masse, aux points de calcul\n    des contraintes des elements . Si aucun des mots-cles ci-dessus\n    n'est donne ,le champ par element sera exprime par defaut aux\n    noeuds .\n\n    \n  \n5.3 MCHAML nul partout sauf en un point \n--------------------------------------- \n   CHAM1 = MANU 'CHAM' MODL1 ('TYPE' MOT1) ('POSI' MOT2))\n                       MOT3 ENT1 ENT2 (ENT3) VAL1;\n\n    Objet :\n    _______\n\n    L'operateur MANU CHAM cree un nouveau CHAMELEM (type MCHAML)\ns'appuyant sur une zone de l'objet MODL1 (type MMODEL), a une\nseule composante, non nul en un seul point, et pointant sur un\nreel VAL1.\n\n    Commentaire :\n    _____________\n\n    MODL1   :  objet de type MMODEL\n\n    MOT1    :  sous-type du champ (type MOT) (facultatif).\n    MOT2    :  support du MCHAML (type MOT valant 'NOEUD' ou 'GRAVITE'\n               ou 'RIGIDITE' ou 'MASSE' ou 'STRESSES') (facultatif,\n               par defaut 'NOEUD').\n\n    MOT3    :  nom d'une composante (type MOT) limite a 4 caracteres\n\n    ENT1    :  numero de l'element (type ENTIER)\n    ENT2    :  numero du point d'integration  (type ENTIER)\n    ENT3    :  numero de la sous zone (type ENTIER) de MODL1\n               (facultatif, par defaut 1).\n\n    VAL1    :  objet de type FLOTTANT\n\n    Attention :\n    -----------\n    Cette option ne fonctionne que pour les formulations mecaniques.\n\n    \n  \n5.4 Objet de type MCHAML contenant des EVOLUTIONS \n------------------------------------------------- \n   CHAM1 = MANU 'CHML' 'EVOL'   NOCOMP |   FLOTi  MCHAMi  |\n                                       |   TAB1           |\n\n    Objet :\n    _______\n\n    L'operateur MANU CHAM EVOL cree un nouveau CHAMELEM (type MCHAML)\nqui ne contient que des EVOLUTIONS. Pour fabriquer ces evolutions on\nprend soit les couples FLOTi MCHAMi soit la table TAB1.\n    Les EVOLUTIONS auront en abscisse l'inconnue de nom NOCOMP et de\nvaleurs FLOTi et en ordonnee l'inconnue dont le nom est trouve dans\nMCHAMi et les valeurs aussi.\n    LA TABLE TAB1 est indicee par des FLOTi et pointe sur des MCHAMi.\n\n    Commentaire :\n    _____________\n\n    NOCOMP  :  nom a donner a l'abscisse de l'EVOLUTION. Le nom pris\n               pour les ordonnees est celui de la composante du\n               MCHAMi.\n\n    FLOTi   :  objet de type FLOTTANT qui donne la ieme valeurs du\n               LISTREEL en abscisse de l'EVOLUTION\n\n    MCHAMi  :  permet de trouver les valeurs a mettre en ieme position\n               du LISTREEL en ordonnee de l'EVOLUTION.\n\n    TAB1    :  est une table qui permet de grouper les valeurs des\n               FLOTi qui servent d'indices de la table et les MCHAMi\n               qui sont pointes par la table. La table doit etre\n               remplie par ordre croissant des FLOTi.\n  \n6. Objet existant a partir du POINTEUR \n====================================== \n \n    OBJ1 = MANU 'OBJE' TYP1  IP1  ;\n\n    Objet :\n    _______\n\n    L'operateur MANU OBJE permet de donner un nom a un objet dont\non connait le type et le numero du pointeur.\n\n\n    TYP1    :  type de l'objet (type MOT en 8 caracteres)\n\n    IP1     :  valeur du pointeur (type ENTIER)",
  },
  {
    name: "MAPP",
    url: "MAPP",
    documentation:
      "$$$$ MAPP     NOTICE  CHAT      11/09/12    21:17:09     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MAPP                           Voir aussi :\n    --------------  \n    EVOL1 = MAPP (COUL1) EVOL2 EVOL3 EVOL4 ;\n\n\n    Objet :\n    _______\n\n    L'operateur MAPP construit une carte de Poincare.\n\n    Commentaire :\n    _____________\n\n    Cette carte est constituee d'un ensemble de points tires d'un espace\ndes phases d'un noeud du maillage etudie; les instants correspondants\n@ ces points sont ceux o\u00ba un noeud de choc entre en contact avec la\nstructure voisine.\n\n    COUL1  : couleur choisie (blanc par defaut)(type MOT)\n\n    EVOL2  : forces de liaison sur le noeud de choc (type EVOLUTION)\n\n    EVOL3  : liste des deplacements du noeud etudie (type EVOLUTION)\n\n    EVOL4  : liste des vitesses du noeud etudie (type EVOLUTION)\n\n    EVOL1  : points de la carte de Poincare (type EVOLUTION)",
  },
  {
    name: "MASQ",
    url: "MASQ",
    documentation:
      "$$$$ MASQ     NOTICE  BP208322  17/08/08    21:15:05     9526           \n                                             DATE     17/08/08\n                                             \n    Operateur MASQUE                         Voir aussi : ABS BORN\n    ----------------                                      SIGN  \n\n    RESU1 = OBJET1  MASQ  |'SUPERIEUR' | ('SOMME')  | ENTI1  | ;\n                          |'EGSUPE'    |            | FLOT1  |\n                          |'EGALE'     |            | OBJET2 |\n                          |'EGINFE'    |\n                          |'INFERIEUR' |\n                          |'DIFFERENT' |\n                          |\n                          |'COMPRIS'     ('SOMME') | ENTI1  ENTI2  | ;\n                          |                        | FLOT1  FLOT2  |\n                          |                        | OBJET2 OBJET3 |\n                          |\n                          |'EXISTE'   (MOT1) ; \n\n\n    Objet :\n    _______\n\n    L'operateur MASQUE fabrique un objet de meme type que OBJET1 dont\n    les valeurs sont des 1. ou des 0.\n\n    Si la relation algebrique (mots-cl\u00e9s 'SUPERIEUR', 'EGSUPE', ... )\n    ou la condition d'existence (mot-cl\u00e9 'EXISTE') est verifiee,\n    alors la valeur retournee est 1., sinon elle vaut 0.\n    \n    Pour les tests algebriques, chaque valeur de OBJET1 est comparee a \n    une valeur (ENTI1 ou FLOT1) ou a la valeur correspondante dans un \n    objet (OBJET2) de meme type que OBJET1.\n\n    Si le mot 'SOMME' est employe, RESU1 est la somme des 0. et des 1.,\n    sinon RESU1 est l'objet de meme type qu'OBJET1, contenant les 0. et\n    les 1.\n    \n    Le test d'existence ne s'applique qu'aux objets de type MCHAML.\n\n    Commentaire :\n    _____________\n\n    OBJET1 : objet de type CHPOINT, LISTREEL, LISTENTI, MCHAML\n\n    OBJET2 : objet de meme type que OBJET1\n        \n    OBJET3 : borne superieure (option 'COMPRIS') de OBJET1 lorsque\n             celui-ci est de type CHPOINT ou MCHAML (meme type que\n             OBJET1)\n\n    ENTI1  : nombre avec lequel sont comparees les valeurs de OBJET1\n             lorsque celui-ci est de type LISTENTI (type ENTIER)\n             \n    ENTI2  : borne superieure (option 'COMPRIS') de OBJET1 lorsque\n             celui-ci est de type LISTENTI (type ENTIER)\n\n    FLOT1  : nombre avec lequel sont comparees les valeurs de OBJET1\n             lorsque celui-ci est de type CHPOINT, LISTREEL ou MCHAML\n             (type FLOTTANT)\n             \n    FLOT1  : borne superieure (option 'COMPRIS') de OBJET1 lorsque\n             celui-ci est de type LISTREEL (type FLOTTANT)\n             \n    MOT1   : nom de la composante dont on veut tester l'existence \n             (type MOT). En son absence toutes les composantes presentes\n             dans le MCHAML sont testees.\n\n    RESU1  : objet resultat de meme type que OBJET1 sauf si le mot-cle\n             'SOMME' est utilise auquel cas RESU1 est de type ENTIER\n\n    Remarque :\n    __________\n\n    Si OBJET1 est un CHPOINT, alors le resultat de type CHPOINT aura le\n    meme support maillage de POI1.\n    \n    Si OBJET1 et OBJET2 sont deux CHPOINTs, on rappelle que si OBJET2 \n    n'est pas explicitement defini pour certains noeuds de OBJET1, sa \n    valeur en ces noeuds est implicitement 0. par convention.",
  },
  {
    name: "MASS",
    url: "MASS",
    documentation:
      "$$$$ MASS     NOTICE  CB215821  15/02/12    21:15:07     7886           \n                                             DATE     15/02/12\n                                             \n    Operateur MASSE                          Voir aussi : MATE CARA\n    ---------------                                       LUMP  MDIA  \n\n    Objet :\n    _______\n\n\n    l'operateur MASSE calcule les matrices de masse dans differents cas.\n\n\n    -------------------\n    | \u00c9lements finis  |\n    -------------------\n\n      MASS1 =  MASSE  MODL1  MAT1 ;\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : objet modele ( type MMODEL ).\n\n      MAT1   : Champ de caracteristiques materielles et geometriques\n               (type MCHAML, sous-type CARACTERISTIQUES).\n\n      MASS1  : Resultat de type RIGIDITE de sous-type MASSE.\n\n\n      Remarque :\n      __________\n\n      Le support geometrique de MASS1 sera celui de MAT1.\n\n      Le numero de l'harmonique utilise dans le cas d'une analyse en\n      serie de Fourier est precise par la directive OPTION :\n\n                    OPTION MODE FOUR NN ;\n\n      Les caracteristiques CAR1 ne sont obligatoires que si la\n      description geometrique de l'element ne peut se faire par le\n      maillage, par exemple l'epaisseur d'elements de plaques ou les\n      sections des barres, etc ..\n      Leur support geometrique doit etre inclus dans celui de MAT1.\n      Si on met CAR1, il faut le mettre apres MAT1.\n\n\n    --------------------------\n    | MASSES ADDITIONNELLES  |\n    --------------------------\n\n      MASS1 = MASSE   |( 'DEPL' ) ( 'ROTA' )|  FLOT1  GEO1 ;\n                      |       MOTi ...      |\n\n      Commentaire :\n      _____________\n\n\n     'DEPL'  : mot-cle pour designer toutes les translations\n\n     'ROTA'  : mot-cle pour designer toutes les rotations\n\n      MOTi   : un ou plusieurs noms (type MOT) designant les degres\n                de liberte concernes (dans ce cas ne pas se servir\n                des 2 mots-cles precedents )\n\n      Les noms des degres de liberte possibles sont :\n\n      pour un calcul en MODE PLAN CONT :  UX  UY\n      pour un calcul en MODE PLAN DEFO :  UX  UY\n      pour un calcul en MODE AXIS      :  UR  UZ  RT\n      pour un calcul en MODE FOUR      :  UR  UZ  UT  RT\n      pour un calcul en MODE TRID      :  UX  UY  UZ  RX  RY  RZ\n\n\n      FLOT1 : masse additionnelle (type FLOTTANT)\n\n      GEO1  : objet geometrique o\u00ba seront ajoutees les masses\n              (type POINT ou MAILLAGE).\n\n      MASS1 : matrice masse (type RIGIDITE, sous-type MASSE).\n\n\n    -------------------\n    | ANALYSE MODALE  |\n    -------------------\n\n      MASS2 = MASSE BAS1 ;\n      MASS3 = MASSE SOL1 ;\n      MASS4 = MASSE SOL2 STRU1 ;\n      MASS5 = MASSE SOL1 SOL2 STRU1 ;\n      MASS6 = MASSE TAB1 ;\n\n      MASS7 = MASSE TAB2 (TAB3) RIG1 ;\n      Commentaire :\n      _____________\n\n      MASS2 : ensemble des matrices masse (type RIGIDITE, sous-type\n              MASSE) s'appuyant sur la base modale BAS1\n\n      BAS1  : base modale support (type BASEMODA)\n\n      MASS3 : masse due aux modes (masses generalisees)(type RIGIDITE,\n              sous-type MASSE)\n\n      MASS4 : masse due au couplage des solutions statiques sur une\n              structure (type RIGIDITE, sous-type MASSE)\n\n      MASS5 : masse due au couplage des solutions statiques et des modes\n              dans la structure (type RIGIDITE, sous-type MASSE)\n\n      SOL1  : modes de la structure (type SOLUTION, sous-type MODE)\n\n      SOL2  : solutions statiques (type SOLUTION, sous-type SOLUSTAT)\n\n      STRU1 : structure elementaire (type STRUCTUR).\n\n      MASS6 : masse due aux modes (masses generalisees)(type RIGIDITE,\n              sous-type MASSE) contenus dans l'objet TAB1 (type TABLE\n              de sous-type 'BASE_DE_MODES').\n\n      MASS7 : type RIGIDITE, sous type MASSE, inertie dans la base des \n              deformees listees dans TAB2, TABLE de sous-type \n              'BASE_MODALE' ou bien 'LIAISONS_STATIQUES'. Lorsque TAB3 \n              est specifie, de sorte que ces deux sous-types \n              apparaissent en argument, les termes de couplage sont \n              egalement calcules.\n\n      RIG1 : type RIGIDITE, sous-type MASSE, inertie exprimee dans la\n             base initiale\n\n    Remarque :\n    __________\n\n    Les supports geometriques de MASS2, MASS3, MASS4, MASS5 contiennent\n    les points associes aux modes ou aux liaisons definies entre les\n    structures. On associe la composante 'ALFA' au mode, 'BETA' a une\n    liaison sur des points libres, 'FBET' a une liaison sur des noeuds\n    bloques, de sous-type MODE.\n\n    Le support geometrique de MASS7 contient les points associes aux \n    deformees statiques ou modales. Les composantes 'BETA', duale 'FBET'\n    sont relatives aux premieres, 'ALFA', duale 'FALF' aux secondes.",
  },
  {
    name: "MATE",
    url: "MATE",
    documentation:
      "$$$$ MATE     NOTICE  CB215821  21/08/20    21:15:13     11089          \n                                             DATE     21/08/20\n\n    Operateur MATE                           Voir aussi : MODE CARA\n    --------------                                        ACIER  \n                                                          IDENTI  \n                                                          PROPAG  \n                                                          TRACTUFI  \n\n    Syntaxe :\n    _______\n\n    MAT1 =  MATE  MODL1  NOMCi VALi ... ;\n\n\n    Objet :\n    _______\n\n    L'operateur MATE (MATERIAU) cree un champ de proprietes materielles\n    et/ou geometriques. Pour les elements qui necessitent des proprietes\n    materielles et geometriques, on peut soit les introduire toutes a la\n    fois par MATE, soit introduire les proprietes materielles par MATE\n    et les proprietes geometriques par CARA, puis fusionner les deux\n    champs ainsi obtenus par ET.\n\n    Dans la partie \"Detail des proprietes\" ci-apres, on decrit :\n    - les proprietes materielles attendues pour chaque formulation\n      (sections 1 a 12),\n    - la definition des reperes d'orthotropie des formulations non\n      isotropes (section 13),\n    - et les proprietes geometriques dans une derniere section.\n\n\n    Commentaire :\n    _____________\n\n    MAT1     : objet contenant les caracteristiques du materiau (type\n               MCHAML, sous-type CARACTERISTIQUES)\n\n    MODL1    : Objet modele (type MMODEL)\n\n    NOMCi    : nom du ieme parametre (type MOT) (voir ci-dessous)\n\n    VALi     : valeur(s) du ieme parametre (types ENTIER, FLOTTANT,\n               MCHAML, EVOLUTION, LISTMOTS, POINT ...)\n\n               Remarque 1 : le type LISTMOTS concerne des composantes\n               evaluees a l'externe par l'operateur VARI, a l'aide\n               du module utilisateur COMPUT. Dans ce cas, l'objet\n               LISTMOTS donne la liste des parametres dont depend\n               la composante.\n               Remarque 2 : Si VALi est de type MCHAML celui-ci doit\n               etre en correspondance avec le modele, c'est a dire\n               avoir le meme objet maillage que le modele. Pour ce faire\n               soit on part d'un CHPOINT transforme en MCHAML (operateur\n               CHAN), soit on procede comme dans l'exemple\n               cham_vari.dgibi (voir exemple : cham_vari.dgibi)\n\n\n   Detail des proprietes :\n   _____________________\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. formulation MECANIQUE\n    1.1 MECANIQUE ELASTIQUE ISOTROPE\n    1.2 MECANIQUE ELASTIQUE ARMATURE\n    1.3 MECANIQUE ELASTIQUE MODAL\n    1.4 MECANIQUE ELASTIQUE STATIQUE\n    1.5 MECANIQUE ELASTO NON_LINEAIRE\n    1.6 MECANIQUE ELASTO-PLASTIQUE\n    1.7 MECANIQUE ENDOMMAGEABLE\n    1.8 MECANIQUE FLUAGE\n    1.9 MECANIQUE PLASTIQUE-ENDOMMAGEABLE\n    1.10 MECANIQUE VISCO-PLASTIQUE\n    1.11 MECANIQUE VISCO_EXTERNE\n    1.12 MECANIQUE NON_LOCAL\n    1.13 MECANIQUE IMPEDANCE\n    1.14 MECANIQUE CAOUTCHOUC\n    1.15 MECANIQUE ELASTIQUE ORTHOTROPE\n    1.16 MECANIQUE ELASTIQUE ANISOTROPE\n    1.17 MECANIQUE ELASTIQUE UNIDIRECTIONNEL\n    1.18 MECANIQUE ELASTIQUE SECTION\n2. formulations LIQUIDE & LIQUIDE MECANIQUE\n    2.1 LIQUIDE\n    2.2 HOMOGENEISE FLUIDE-STRUCTURE\n    2.3 RACCORD FLUIDE-TUYAU\n3. Formulation THERMIQUE\n    3.1 THERMIQUE CONDUCTION\n    3.2 THERMIQUE Changement de PHASE\n    3.3 THERMIQUE CONVECTION\n    3.4 THERMIQUE RAYONNEMENT\n    3.5 THERMIQUE ADVECTION\n    3.6 THERMIQUE SOURCE\n    3.7 THERMIQUE ORTHOTROPE\n    3.8 THERMIQUE ANISOTROPE\n4. Formulation CHANGEMENT_PHASE\n    4.1 CHANGEMENT_PHASE PARFAIT\n    4.2 CHANGEMENT_PHASE SOLUBILITE\n5. Formulation METALLURGIE\n6. Formulation DARCY\n    6.1 DARCY ISOTROPE\n    6.2 DARCY ORTHOTROPE\n    6.3 DARCY ANISOTROPE\n7. CONTACT\n    7.1 COULOMB\n    7.2 FROCABLE\n8. POREUX\n    8.1 POREUX ELASTIQUE ISOTROPE\n    8.2 POREUX ELASTIQUE ORTHOTROPE\n    8.3 POREUX ELASTIQUE ANISOTROPE\n    8.4 POREUX ELASTIQUE UNIDIRECTIONNEL\n9. MAGNETODYNAMIQUE\n    9.1 CORFOU\n    9.2 MAGNETODYNAMIQUE ORTHOTROPE\n10. MELANGE\n    10.1 Modele CEREM\n    10.2 Modele PARALLELE\n    10.3 Modele ZTMAX\n11. FISSURE\n    11.1 loi POISEU_BLASIUS\n    11.2 loi POISEU_COLEBROOK\n    11.3 loi FROTTEMENT1\n    11.4 loi FROTTEMENT2\n    11.5 loi FROTTEMENT3\n    11.6 loi FROTTEMENT4\n12. LIAISON\n    12.1 loi POINT_PLAN FLUIDE\n    12.2 loi POINT_PLAN FROTTEMENT\n    12.3 loi POINT_PLAN\n    12.4 loi POINT_POINT FROTTEMENT\n    12.5 loi POINT_POINT DEPLACEMENT_PLASTIQUE\n    12.6 loi POINT_POINT ROTATION_PLASTIQUE\n    12.7 loi POINT_POINT\n    12.8 loi POINT_CERCLE MOBILE\n    12.9 loi POINT_CERCLE FROTTEMENT\n    12.10 loi POINT_CERCLE\n    12.11 loi CERCLE_PLAN FROTTEMENT\n    12.12 loi CERCLE_CERCLE FROTTEMENT\n    12.13 loi PROFIL_PROFIL INTERNE/EXTERNE\n    12.14 loi LIGNE_LIGNE FROTTEMENT\n    12.15 loi LIGNE_CERCLE FROTTEMENT\n    12.16 loi PALIER_FLUIDE RHODE_LI\n    12.17 loi COUPLAGE DEPLACEMENT\n    12.18 loi COUPLAGE VITESSE\n    12.19 loi POLYNOMIALE\n    12.20 loi NEWMARK MODAL\n13. DIFFUSION\n    13.1 loi de FICK\n    13.2 DIFFUSION ORTHOTROPE\n    13.3 DIFFUSION ANISOTROPE\n14. Definition des reperes d'orthotropie et unidirectionnels\n    14.1 Reperes d'orthotropie pour elements coques\n    14.2 Reperes d'orthotropie pour elements massifs\n    14.3 Direction des materiaux unidirectionnels\n15. PROPRIETES GEOMETRIQUES\n    15.1 Elements Massifs\n    15.2 Elements COQ2, COQ3, COQ4, DKT, DST\n    15.3 Elements COQ6, COQ8\n    15.4 Elements ROT3\n    15.5 Elements POJS, TRIS, QUAS\n    15.6 Elements JOINT generalise\n    15.7 Elements BARRE\n    15.8 Elements CERCE\n    15.9 Elements POUTRE, TIMO\n    15.10 Elements TUYAU\n    15.11 Elements LINESPRING\n    15.12 Elements TUYAU FISSURE\n    15.13 Elements RACCORD\n    15.14 Elements LSE2\n    15.15 Elements LITU\n    15.16 Elements HOMOGENEISE\n\n  \n1. formulation MECANIQUE1 \n======================== \n  \n1.1 MECANIQUE ELASTIQUE ISOTROPE \n-------------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ISOTROPE |\n   -----------------------------------------------------------\n\n   'YOUN'  :  module d'Young\n   'NU  '  :  coefficient de poisson\n   'RHO '  :  masse volumique\n   'ALPH'  :  coefficient de dilatation thermique secant\n   'TREF'  :  temperature de reference de la structure\n             (aucune deformation d'origine thermique)\n   'TALP'  :  temperature de reference du coefficient de dilatation\n   'VISQ'  :  coefficient de viscosite\n\n   Cas des elements joints elastiques isotropes :\n\n       - dans le cas des elements joints 2D elastiques, seul le cas\n   isotrope est autorise. Les noms des parametres NOMCi a rentrer\n   pour un element joint 2D sont :\n\n   'KS  '  :  raideur de cisaillement       ( N/m3 )\n   'KN  '  :  raideur normale               ( N/m3 )\n   'RHO '  :  masse volumique               ( kg/m2 )\n   'ALPN'  :  coefficient de dilatation thermique secant dans la\n              direction normale au joint    ( m/K )\n   'TREF'  :  temperature de reference de la structure\n             (aucune deformation d'origine thermique)\n   'TALP'  :  temperature de reference du coefficient de dilatation\n\n    Remarque : meme si les valeurs de KS et KN sont identiques, il\n               faut les rentrer deux fois.\n\n       - dans le cas des elements joints 3D elastiques isotropes,\n    les deux raideurs de cisaillement sont identiques. Les noms des\n    parametres NOMCi a rentrer sont les memes que ceux du cas du 2D\n    isotrope.\n\n\n  \n1.2 MECANIQUE ELASTIQUE ARMATURE \n-------------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ARMATURE |\n   -----------------------------------------------------------\n\n   Ce modele concerne les armatures du beton arme (BARR sur SEG2).\n\n   Dans le cas d'armatures passives, les parametres sont :\n\n   'YOUN'  :  module d'Young\n   'SECT'  :  section de l'armature\n\n   Dans le cas des armatures actives (beton precontraint), il convient\n   de preciser egalement :\n\n   Pour la perte de precontrainte par frottement :\n   'FF  '  : coefficient de frottement angulaire (0.18 rd-1)\n   'PHIF'  : coefficient de frottement lineaire (0.002 m-1)\n\n   Pour la perte de precontrainte par recul a l'ancrage :\n   'GANC'  : glissement a l'ancrage (0.0)\n\n   Pour la perte de precontrainte par relaxation de l'acier :\n   'RMU0'  : coefficient de relaxation de l'armature (0.43)\n   'FPRG'  : contrainte de rupture garantie (1700.e6 Pa)\n   'RH10'  : relaxation a 1000 heures (2.5 %)\n\n\n  \n1.3 MECANIQUE ELASTIQUE MODAL \n----------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE MODAL    |\n   -----------------------------------------------------------\n\n   'FREQ'  :  frequence (type 'FLOTTANT')\n   'MASS'  :  masse generalisee (type 'FLOTTANT')\n   'DEFO'  :  deformee modale (type 'CHPOINT')\n\n   Parametres facultatifs\n   'AMOR' : amortissement generalise (type 'FLOTTANT')\n   'CGRA' : centre de gravite pour la rotation (type 'POINT')\n\n\n  \n1.4 MECANIQUE ELASTIQUE STATIQUE \n-------------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE STATIQUE |\n   -----------------------------------------------------------\n\n   'RIDE'  :  produit rigite * deformee (type 'CHPOINT')\n   'MADE'  :  produit masse * deformee (type 'CHPOINT')\n   'DEFO'  :  deformee  (type 'CHPOINT')\n\n   Parametres facultatifs\n   'AMOR' : amortissement generalise (type 'FLOTTANT')\n\n\n  \n1.5 MECANIQUE ELASTO NON_LINEAIRE \n--------------------------------- \n   ------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTO NON_LINEAIRE |\n   ------------------------------------------------------------\n\n   Modele elastique NON_LINEAIRE EQUIPLAS :\n   ---------------------------------------\n\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n\n\n   Modele NON_LINEAIRE UTILISATEUR :\n   -------------------------------\n\n   La liste de composantes de materiau est celle definie par l'objet\n   LISTMOTS donne sous le mot cle 'C_MATERIAU' dans la syntaxe de\n   l'operateur MODE.\n\n\n  \n1.6 MECANIQUE ELASTO-PLASTIQUE \n------------------------------ \n   ---------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTO-PLASTIQUE |\n   ---------------------------------------------------------\n\n   Les parametres qui suivent sont a definir EN PLUS des parametres\n   relatifs au comportement elastique. Les modeles de plasticite\n   disponibles sont les suivants :\n\n\n   Modele plastique PARFAIT :\n   --------------------------\n\n   'SIGY'    : limite elastique\n\n\n   Modele plastique a ecrouissage ISOTROPE :\n   -----------------------------------------\n\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n\n   Modele plastique a ecrouissage CINEMATIQUE LINEAIRE :\n   -----------------------------------------------------\n\n   'SIGY'    : limite elastique\n   'H   '    : module d'ecrouissage\n\n\n   Modele plastique a ecrouissage de type CHABOCHE :\n   -------------------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      Xi  variables d'ecrouissage cinematique (i=1 ou 2)\n                      EP  tenseur des deformations plastiques\n                      p   deformation plastique equivalente cumulee\n                      J2  deuxieme invariant des contraintes\n                      deviatoriques\n\n   --> Critere     :  J2 (S-X) = R(p)\n\n   --> Ecrouissages:  dXi = Ci * (2/3 * Ai * PHI(p) * dEP - Xi*dp )\n                      dR  = B * (RM - R ) dp\n              avec :  X   = X1     dans le cas d'un seul centre\n                            X1+X2  dans le cas de deux centres\n                      R(0)=R0\n                      PHI(p)= 1 + (PSI-1)* e**(-OMEG*p)\n\n   Les donnees a introduire sont les suivantes :\n\n          Cas a 1 centre sans ecrouissage isotrope :\n\n   'A   ','C   '   : parametres liees a l'evolution du centre\n   'PSI ','OMEG'   : parametres liees au terme de rappel\n   'R0  '          : limite elastique\n\n          Cas a 1 centre avec ecrouissage isotrope :\n\n   'A   ','C   '   : parametres liees a l'evolution du centre\n   'PSI ','OMEG'   : parametres liees au terme de rappel\n   'R0  '          : limite elastique initiale\n   'RM  '          : limite elastique finale\n   'B   '          : constante liee a l'evolution de la limite elastique\n\n          Cas a 2 centres sans ecrouissage isotrope :\n\n   'A1  ','C1  '   : parametres liees a l'evolution du 1-er centre\n   'A2  ','C2  '   : parametres liees a l'evolution du 2-eme centre\n   'PSI ','OMEG'   : parametres liees au terme de rappel\n   'R0  '          : limite elastique\n\n          Cas a 2 centres avec ecrouissage isotrope :\n\n   'A1  ','C1  '   : parametres liees a l'evolution du 1-er centre\n   'A2  ','C2  '   : parametres liees a l'evolution du 2-eme centre\n   'PSI ','OMEG'   : parametres liees au terme de rappel\n   'R0  '          : limite elastique initiale\n   'RM  '          : limite elastique finale\n   'B   '          : constante liee a l'evolution de la limite elastique\n\n\n   Modele plastique de type DRUCKER-PRAGER PARFAIT :\n   -------------------------------------------------\n\n   'LTR '    : limite en traction simple\n   'LCS '    : limite en compression simple\n\n   Dans ce cas, le critere utilise a pour equation :\n\n            ALFA * Tr(S) +  Seq = K\n\n   avec :   S    tenseur des contraintes\n            Seq  contrainte equivalente au sens de Von Mises\n\n            ALFA = (  |LCS| - LTR ) / ( |LCS| + LTR )\n            K = 2. * |LCS| * LTR / ( |LCS| + LTR )\n\n   L'ecoulement est associe.\n\n\n   Modele plastique de type DRUCKER-PRAGER :\n   -----------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S    tenseur des contraintes\n                      Seq  contrainte equivalente au sens de Von Mises\n                      p    deformation plastique equivalente cumulee\n\n   --> Critere initial : ALFA * Tr(S) + BETA * Seq = K\n\n   --> Critere ultime  : ETA * Tr(S) + MU * Seq = KL\n\n   --> Ecrouissage :  dK  = H * dp   ( H en valeur algebrique)\n\n   --> Potentiel d'ecoulement : GAMM * Tr(S) + DELT * Seq\n\n   Les parametres a definir sont:\n          ALFA, BETA, K, ETA, MU, KL, H, GAMM, DELT\n\n\n   Modele BETON en contraintes planes (2D ou coques minces)\n   --------------------------------------------------------\n\n  ('LTR1')   : limite en traction dans la 1-ere direction (par defaut\n               YOUN*1.2E-4)\n  ('ETR1')   : deformation a rupture en traction dans la 1-ere direction\n               (par defaut 3*LTR1/YOUN)\n  ('LTR2')   : limite en traction dans la 2-eme direction (par defaut\n               LTR1)\n  ('ETR2')   : deformation a rupture en traction dans la 2-eme direction\n               (par defaut 3*LTR2/YOUN)\n  ('BETR')   : coefficient de reduction du module de cisaillement en\n               cas de fissuration (compris entre 0. et 1., par defaut\n               0.1)\n  ('VF1X')   : deux composantes du vecteur VF1 definissant la direction\n  ('VF1Y')     assocee a LTR1 (par defaut 1. et 0. respectivement)\n\n  ('LCS ')   : limite en compression simple (par defaut YOUN*1.2E-3)\n  ('ECS ')   : deformation a rupture en compression simple (par defaut\n               10*LCS/YOUN)\n  ('LBIC')   : limite en bi-compression\n\n\n   Modele BETON en deformations planes, axisymetrique et 3D\n   --------------------------------------------------------\n\n   Dans ce modele, le comportement du beton est non-lineaire dans le\n   domaine des tractions, et lineaire par ailleurs.\n\n\n  ('LTR1')   : limite en traction dans la 1-ere direction (par defaut\n               YOUN*1.2E-4)\n  ('ETR1')   : deformation a rupture en traction dans la 1-ere direction\n               (par defaut 3*LTR1/YOUN)\n  ('LTT1')   : limite de transition en traction dans la 1-ere direction\n               (par defaut 0.)\n  ('ETT1')   : deformation correspondant a LTT1 (par defaut ETR1)\n  ('ERS1')   : deformation residuelle en traction dans la 1-ere\n               direction (par defaut 0.)\n  ('VF1X')   : trois composantes du vecteur VF1 definissant la direction\n  ('VF1Y')     assocee a LTR1\n  ('VF1Z')\n\n  ('LTR2')   : limite en traction dans la 2-eme direction (par defaut\n               LTR1)\n  ('ETR2')   : deformation a rupture en traction dans la 2-eme direction\n               (par defaut 3*LTR2/YOUN)\n  ('LTT2')   : limite de transition en traction dans la 2-eme direction\n               (par defaut 0.)\n  ('ETT2')   : deformation correspondant a LTT2 (par defaut ETR2)\n  ('ERS2')   : deformation residuelle en traction dans la 2-eme\n               direction (par defaut 0.)\n  ('VF2X')   : trois composantes du vecteur VF2 definissant la direction\n  ('VF2Y')     assocee a LTR2\n  ('VF2Z')\n\n  ('LTR3')   : limite en traction dans la 3-eme direction (par defaut\n               LTR1)\n  ('ETR3')   : deformation a rupture en traction dans la 3-eme direction\n               (par defaut 3*LTR3/YOUN)\n  ('LTT3')   : limite de transition en traction dans la 3-eme direction\n               (par defaut 0.)\n  ('ETT3')   : deformation correspondant a LTT3 (par defaut ETR3)\n  ('ERS3')   : deformation residuelle en traction dans la 3-eme\n               direction (par defaut ERS1)\n  ('VF3X')   : trois composantes du vecteur VF3 definissant la direction\n  ('VF3Y')     assocee a LTR3, necessaires uniquement en 3D si besoin.\n  ('VF3Z')\n\n  ('BETR')   : coefficient residuel de reduction du module de\n               cisaillement en cas de fissuration (compris entre 0. et\n               1., par defaut 0.1)\n\n   Attention : Les vecteurs VF1, VF2 et VF3 doivent etre orthogonaux.\n   ---------\n               Dans le cas d'un calcul avec une limite en traction\n               differente des deux autres, il est obligatoire de definir\n               le vecteur correspondant a cette limite VF1, VF2 ou VF3\n\n               Dans le cas oa\u00b9 LTR1, LTR2 et LTR3  sont donnees, les\n               deux vecteurs VF1 et VF2 sont obligatoires pour definir\n               les directions 1, 2 et 3.\n\n               On peut introduire des valeurs non nulles traduisant des\n               ouvertures initiales des fissures dans les directions\n               1, 2 et 3 a l'aide de la table TAB1 utilisee dans la\n               procedure NONLIN au moyen de : TAB1.'VARI'.'OUV1',\n               TAB1.'VARI'.'OUV2', TAB1.'VARI'.'OUV3'.\n\n\n   Modele plastique parfait pour les elements TUYAU FISSURE :\n   ----------------------------------------------------------\n\n   'SIGF'    : contrainte limite d'ecoulement\n   'J1C '    : valeur de J a l'initiation\n   'T   '    : module de dechirure\n\n\n   Modele plastique ecrouissable pour les elements TUYAU FISSURE :\n   ---------------------------------------------------------------\n\n   'JDA '    : mot-cle suivi de :\n   NOMJDA    : courbe J-Da constituee par un objet de type\n               EVOLUTIO, avec en abscisse la propagation et en\n               ordonnee J.\n\n   'TRAC'    : mot-cle suivi de :\n   NOMTRAC   : courbe de traction constituee par un objet de type\n               EVOLUTIO, avec en abscisse les rotations (en radians)\n               et en ordonnee les moments. La procedure TRACTUFI\n               permet de fabriquer une telle courbe en cas de non\n               propagation. La procedure PROPAG  permet de\n               fabriquer une telle courbe en cas de propagation.\n\n\n   Modele de materiau elastoplastique endommageable (Lemaitre-Chaboche)\n   ---------------------------------------------------------------------\n\n     L'ecrouissage et l'endommagement sont isotropes. Le critere de\n   Von Mises est couple a l'endommagement.\n\n   'TRAC'    : mot-cle suivi de :\n   NOMTRAC   : courbe de traction constituee par un objet de type\n               EVOLUTIO, avec en abscisse les deformations et en\n               les contraintes. Elle doit contenir comme premier\n               point, le point (0,0) et comme second point, le\n               point correspondant a la limite elastique.\n               On peut la dessiner par la directive DESSINE .\n   'EPSD'    : Seuil d'endommagement : il s'agit de la deformation\n               plastique a partir de laquelle le materiau s'endommage.\n   'DC  '    : Valeur critique de la variable D decrivant l'endom-\n               magement. DC caracterise la rupture du materiau .\n   'EPSR'    : Deformation plastique a rupture du materiau .\n\n\n   Modele UBIQUITOUS\n   -----------------\n\n     Il s'agit d'un modele de plasticite pour des materiaux presentant\n   une ou deux directions de faiblesse. Selon chaque direction, le\n   critere est de type Mohr-Coulomb avec ecoulement eventuellement\n   non associe. Ce modele ne fonctionne qu'en bidimensionnel.\n\n   'NCRI'    : nombre de directions de faiblesse (1 ou 2)\n   'ANG1'    : angle de la 1-ere direction avec Ox (en degres)\n   'TRA1'    : limite en traction  selon la 1-ere direction\n   'PHI1'    : angle de frottement (en degres)\n   'PSI1'    : angle de dilatance (en degres)\n  ('ANG2')  |\n  ('TRA2')  |:      idem pour la deuxieme direction\n  ('PHI2')  |\n  ('PSI2')  |\n\n\n   Modele GAUVAIN\n   --------------\n\n     Il s'agit d'un modele de plasticite globale pour les poutres en\n   beton arme soumises a des chargements de flexion dominante.\n\n   'TRAC'    : mot-cle suivi de :\n   NOMTRAC   : courbe(s) de traction constituee(s) par un objet de\n               type EVOLUTIO, avec en abscisse des deformations et en\n               ordonnee des contraintes. Chaque courbe doit decrire\n               une loi moment-courbure, depuis les valeurs negatives\n               (4 points) jusqu'aux valeurs positives (4 points),\n               en passant par l'origine, soit 9 points au total.\n               On transforme les moments en contraintes et les\n               courbures en deformations par les formules classiques\n               en prenant comme distance a la fibre moyenne, la demi\n               hauteur de la poutre.\n               Si une seule courbe est fournie, on l'utilise pour les\n               deux directions de flexion.\n               On peut dessiner ces courbes par la directive DESSINE.\n   'STOR'    : contrainte limite elastique en torsion\n   'SCOM'    : contrainte limite elastique en compression\n\n\n   Modele GLOBAL\n   -------------\n\n     Il s'agit d'un modele de plasticite globale pour les poutres en\n   beton arme qui permet la prise en compte des lois de comportement\n   non-lineaire selon les types de sollicitation (axiale, flexion et\n   cisaillement).\n\n   'COMP'    : mot-cle suivi de :\n   NOMCOMP   : courbe de comportement pour des sollicitations axiales,\n               constituee par un objet de type EVOLUTIO, avec en\n               abscisse des deplacements et en ordonnee des forces\n               axiales.\n   'FLXY'    : mot-cle suivi de :\n   NOMFLXY   : courbe de comportement pour des sollicitations en flexion\n               dans le plan xOz, constituee par un objet de type\n               EVOLUTION, avec en abscisse des produits (rotation *\n               longueur de l'element) et en ordonnee des moments de\n               flexion.\n   'FLXZ'    : mot-cle suivi de :\n   NOMFLXZ   : courbe de comportement pour des sollicitations en flexion\n               dans le plan xOy, constituee par un objet de type\n               EVOLUTION, avec en abscisse des produits (rotation *\n               longueur de l'element) et en ordonnee des moments de\n               flexion.\n   'CISY'    : mot-cle suivi de :\n   NOMCISY   : courbe de comportement pour des sollicitations en\n               cisaillement dans le plan xOy, constituee par un objet de\n               type EVOLUTIO, avec en abscisse des deplacements et en\n               ordonnee des efforts tranchants.\n   'CISZ'    : mot-cle suivi de :\n   NOMCISZ   : courbe de comportement pour des sollicitations en\n               cisaillement dans le plan xOz, constituee par un objet de\n               type EVOLUTIO, avec en abscisse des deplacements et en\n               ordonnee des efforts tranchants.\n\n   Remarques : - il faut definir au moins une loi pour un materiau;\n               - pour un materiau on ne peut definir qu'une loi en\n                 flexion (FLXY ou FLXZ) et qu'une loi en cisaillement\n                 (CISY ou CISZ);\n               - pour des lois de comportement en compression-traction\n                 et en flexion l'element fini peut etre POUT ou TIMO,\n                 pour les lois en cissailement on ne peut utiliser que\n                 l'element TIMO;\n               - les objets de type EVOLUTIO doivent decrire les lois\n                 depuis les valeurs negatives (2 ou 3 points) jusqu'aux\n                 valeurs positives (2 ou 3 points), en passant par\n                 l'origine, soit 5 ou 7 points au total.\n\n\n   Modele BILIN_MOMY\n   -----------------\n\n     Il s'agit d'un modele de plasticite de flexion pour les poutres\n   (elements POUT ou TIMO) agissant sur la composante (locale) MOMY.\n\n   'EAYI'    : module apres plasatification\n   'YMOM'    : moment de plastification\n\n\n   Modele BILIN_EFFZ\n   -----------------\n\n     Idem que le precedent mais agissant sur l'effort tranchant selon la\n   composante (locale)EFFZ.\n\n\n   Modele TAKEMO_MOMY\n   ------------------\n\n     Il s'agit d'un modele de plasticite-endommagement de flexion pour\n   les poutres (elements POUT ou TIMO) agissant sur la composante\n   (locale) MOMY.\n\n   'TRAC'    : mot-clef suivi de :\n   NOMTRAC   : courbe de base decrivant la loi moment-courbure. Si le\n               comportement est symmetrique, cette courbe trilineaire\n               comprend 4 points: origine, crackage, plastification et\n               un  point  definissant  le  comportement  apres\n               plastification. Si le comportement est non symmetrique,\n               la courbe comprend 7 points, depuis les valeurs negatives\n               (3 points) jusqu'aux valeurs positives (3 points), en\n               passant par l'origine.\n               On peut dessiner cette courbe par la directive DESSIN.\n\n   'SFDP'    : degradation de raideur pour des courbures positives ou\n   'SFDN'    : negative (SFDN est egale a SFDP dans le cas symmetrique)\n\n   'PINP'    : \"pinching\" pour des courbures positives ou  negative\n   'PINN'    : (PINN est egale a PINP dans le cas symmetrique)\n\n   'SRDP'    : adoussissement cyclique pour des courbures positives ou\n   'SRDN'    : negative (SRDP est egale a SRDN dans le cas symmetrique)\n\n\n   Modele TAKEMO_EFFZ\n   ------------------\n\n     Meme que le precedent, mais agissant sur l'effort tranchant\n   EFFZ.\n\n\n   Modele BA1D\n   ------------------\n\n     Il s'agit d'un modele formule en contraintes generalisees pour decrire\n   le comportement cyclique de poteaux en beton arme sujets a de la flexion\n\n   'UELA'    : deplacement elastique limite au dela duquel l'endommagement\n               est active (1.0E-3)\n   'FPLA'    : effort plastique (100)\n   'HCIN'    : module d ecrouissage cinematique pour la plasticite (10.0)\n   'PFIS'    : parametre de l evolution de l'endommagement (0.3)\n   'QFRA'    : parametre de l evolution de l'endommagement (0.5)\n   'APIH'    : parametre de l evolution du glissement (1.0)\n   'BPIH'    : parametre de l evolution du glissement (5.0)\n\n\n   Modele CAM_CLAY\n   ---------------\n\n   'E0  '    : indice des vides initial\n   'M   '    : coefficient de frottement\n   'COHE'    : cohesion\n   'P0  '    : pression de preconsolidation\n   'KAPA'    : pente elastique dans un diagramme e-log(p)\n   'LAMD'    : pente plastique dans un diagramme e-log(p)\n   'G1  '    : module de cisaillement\n\n\n   Modele HUJEUX\n   -------------\n\n     Il s'agit d'un modele de comportement pour les sables et\n   certaines argiles. Les equations du modele sont de la forme :\n\n   --> Notations   :  EE  tenseur des deformations elastiques\n                      EP  tenseur des deformations inelastiques\n                      S   tenseur des contraintes\n                      ep  trace(EP)\n                      eq  deuxieme invariant du deviateur de EP\n                      p   trace(S)/3\n                      q   deuxieme invariant des contraintes\n                          deviatoriques\n                      K1  module d'incompressibilite\n                      G1  module de cisaillement\n\n   --> elasticite  :  dp = K1*P1*((-p/P1)**N)*trace(dEE)\n                      dq = 3*g1*P1*((-p/P1)**N)*dev(dEE)\n\n   --> Critere     :  F = q/M*(COHE-p)\n                        + R * (B*ln((COHE-p)/(COHE+PC)*exp(-1./B)) - 1.)\n\n   --> Ecrouissages:  R=R0+eq/(eq+A)\n                      PC= (P0+COHE)*exp(-BETA*ep) - COHE\n   --> Potentiel\n       d'ecoulement:  G = q/M*(COHE-p) + ln(COHE-p)\n\n\n   'M   '    : coefficient de frottement\n   'COHE'    : cohesion\n   'P0  '    : pression de preconsolidation (> 0.)\n   'E1  '    : module d'elasticite de reference\n   'P1  '    : pression correspondant a la valeur E1 fournie\n   'BETA'    : module de compressibilite plastique\n   'A   '    : coefficient dans la loi d'ecrouissage\n   'B   '    : coefficient different de 0.\n   'R0  '    : valeur initiale de R\n   'N   '    : exposant de la loi elastique non lineaire\n               (compris entre 0. et 1., mais different de 1.)\n\n   Modele de GURSON\n   ----------------\n\n     La surface de plasticite est definie par\n   SIGeq - (SIGY+H.epse)*( 1+PORO**2-2*PORO*cosh(-1.5*P/SBAR) ) =0\n\n   'SIGY'    : limite elastique initiale\n   'H   '    : coefficient d'ecrouissage (Prandtl-Reuss)\n   'SBAR'    : limite elastique heterogene\n   'PORO'    : porosite initiale\n\n\n   Modele JOINT_DILATANT\n   ---------------------\n\n     Il s'agit d'un modele de joint avec un critere de Mohr-Coulomb\n   et ecoulement non associe.\n\n   'PHI '    : angle de frottement (utilise dans le critere)\n   'MU  '    : angle de dilatance (utilise dans le potentiel\n               d'ecoulement)\n   'FTRC'    : resistance maximale en traction\n\n\n   Modele JOINT_SOFT\n   -----------------\n\n     Il s'agit d'un modele de joint avec un critere de Mohr-Coulomb\n     et avec adoucissement en traction et cisaillement. L'ecoulement se\n     fait sans dilatance.\n\n   'PNOR'    : Position de la pointe (hypothetique) du cone\n   'SJTB'    : Relation contrainte normale - ouverture du joint en traction\n              (type EVOLUTION - Valeur positive pour la traction)\n   'SJCB'    : Relation contrainte normale - fermeture du joint en traction\n              (type EVOLUTION - Valeur positive pour la traction)\n   'SJSB'    : Relation contrainte de cisaillement - glissement en cisaillement\n               pour une contrainte normale nulle (Type EVOLUTION)\n   'BETA'    : Parametre controlant la decharge en cisaillement\n   'CPLG'    : Definition des couplages\n\n\n   Modele JOINT_COAT\n   -----------------\n\n     Il s'agit d'un modele de joint cisaillement avec critere de plasticite\n   isotrope, adoucissement et endommagement.\n\n   'SJSB'    : Relation contrainte de cisaillement - glissement en cisaillement\n              (type EVOLUTION)\n   'BETA'    : Parametre controlant la decharge\n\n\n   Modele ANCRAGE_ELIGEHAUSEN\n   --------------------------\n\n     Il s'agit d'un modele de glissement acier/beton reprenant la loi\n   d'Eligehausen (sous chargement monotone): la relation contrainte de\n   cisaillement - glissement possede un plateau puis est adoucissante\n   de facon lineaire. Le comportement du joint en traction/compression\n   est lineaire elastique.\n\n   'S1T'    : Glissement au debut du plateau\n   'S2T'    : Glissement a la fin du plateau\n   'S3T'    : Glissement a la fin de l'adoucissement\n   'T1T'    : Contrainte de cisaillement sur le plateau\n   'T3T'    : Contrainte de cisaillement residuelle apres la fin de\n              l'adoucissement\n   'ALFA'   : Parametre definissant la premiere partie de la courbe situee\n              avant le plateau\n              (Valeur conseillee: 0.4)\n   'PERI'   : Perimetre de la barre d'acier\n\n\n   Modele INTJOI\n   -------------\n\n     Il s'agit d'un modele [1,2] d'interface acier/beton sans/avec prise en\n   compte de la corrosion. Son support est un elements joint 2D/3D. Il est\n   bien adapte aux cas des chargements comlpexes (monotones, cycliques\n   alternes). Les parametres, en plus de celles elastiques, sont les suivan\n\n  * Parametres mecaniques (sans corrosion)\n   'AD'     : fragilite (1.0e-5)\n   'Y0'     : seuil en energie pour l'endommagement (50)\n   'ALPA'   : coefficient de couplage des modes I et II (6)\n   'GAIN'   : module d'ecrouissage cinematique 1 (2.0e9)\n   'AAIN'   : module d'ecrouissage cinematique 2 (5.0e-7)\n\n  * Parametres lies au phenomene de corrosion\n   'Q1CO'   : coefficient critere de Gurson 1 (3.5)\n   'Q2CO'   : coefficient critere de Gurson 2 (0.9)\n   'Q3CO'   : coefficient critere de Gurson 3 (0.1)\n   'SYCO'   : contrainte d'activation du critere de Gurson (-1.0e6 Pa)\n   'NCOE'   : coefficient d'ecrouissage 1 (2)\n   'KCOE'   : coefficient d'ecrouissage 1 (1.0e10)\n   'TC  '   : degre de corrosion macroscopique (perte de section)\n   'GONF'   : 0 si pas de gonflement et 1 sinon. Dans ce dernier cas,\n              considerer un champs thermique equivalent pour faire\n              pas informations liees a la deformations imposees\n\n     [1] B. Richard, F. Ragueneau, C. Cremona, L. Adelaie, JL Tailhan. (2010). A\n         three-dimensional steel/concrete model including corrosion effects. Eng\n         Fracture Mechanics. 77:951-973.\n\n     [2] L. Adelaide, B. Richard, F. Ragueneau, C. Cremona. (2010). Thermodynami\n         admissibility of a set of constitutive equations coupling elasticity,\n         isotropic damage and internal sliding. Comptes Rendus Mecanique. 338:1\n\n\n   Modele COULOMB\n   --------------\n\n     Il s'agit d'un modele de joint dilatant avec un critere de\n   Mohr-Coulomb et ecoulement associe.\n\n     Si utilise avec un element autre que JOI1, il faut donner :\n   'EF  '    : seconde raideur normale\n   'ECN '    : seuil de deformation en dessous duquel la raideur\n               normale passe de KN a EF (a rentrer en valeur absolue)\n   'COHE'    : cohesion (0. pour le frottement classique)\n   'FRIC'    : angle du critere de frottement de Coulomb (en degres)\n  ('FTRC')   : resistance maximale en traction (0. par defaut)\n\n     Si utilise avec un element JOI1, il faut donner :\n   'FNE '    : limite d'elasticite pour l'effort normal de compression\n   'QT  '    : raideur tangente au dela du seuil d'elasticite FNE,\n               il faut verifier QT < KN\n   'COHE'    : cohesion (0. pour le frottement classique)\n   'FRIC'    : angle du critere de frottement de Coulomb (en degres)\n   'TYPE'    : parametre pour choisir le type de glissement:\n                - = 1 : deplacement\n                - = 2 : rotation\n  Remarque: - pour l'element JOI1, possibilite de plasticite dans la\n              direction normale au plan de glissement (ecrouissage\n              isotrope lineaire en compression).\n\n\n   Modele AMADEI\n   -------------\n\n     Il s'agit d'un modele de joint a comportement incremental non\n   lineaire et comportement post-pic adoucissant en cisaillement\n\n   'FIMU'    : angle de frottement entre les asperites\n   'SGMT'    : valeur limite en compression pure\n   'I0  '    : angle initial d'inclinaison des asperites\n   'S0  '    : cohesion\n   'B0  '    : rapport entre les cisaillements residuel et pic pour\n               les faibles compressions\n   'UP  '    : valeur du deplacement tangentiel associe au pic\n   'UR  '    : valeur du deplacement tangentiel associe au debut\n               du comportement en cisaillement residuel\n   'KNI '    : raideur normale initiale du joint\n   'FI0 '    : angle de frottement residuel entre les asperites\n   'VM  '    : deplacement normal correspondant a la fermeture\n               maximale du joint et compte positivement en compression\n\n\n   Modele ACIER_UNI\n   ----------------\n\n     Il s'agit du modele uni-axial de Menegotto-Pinto modifie pour\n   prendre en compte le flambage du ferraillage.\n\n   'STSY'    :  contrainte de plasticite\n   'STSU'    :  contrainte ultime\n   'EPSH'    :  deformation de debut d'ecrouissage\n   'EPSU'    :  deformation ultime\n   'ROFA'    :  coefficient RO\n   'BFAC'    :  rapport de la rigidite d'ecrouissage cyclique avec la\n                rigidite elastique\n   'A1FA'    :  coefficient A1\n   'A2FA'    :  coefficient A2\n   'FALD'    :  rapport de la longueur entre deux renfort de\n                cisaillement avec le diametre de la barre\n   'A6FA'    :  coefficient A6\n   'CFAC'    :  coefficient C\n   'AFAC'    :  coefficient A\n\n\n   Modele ACIER_ANCRAGE\n   --------------------\n\n     Il s'agit du modele de comportement d'ancrage ou de recouvrement\n   base sur de le modele d'acier ACIER_UNI et le modele de glissement\n   acier/beton ANCRAGE_ELIGEHAUSEN. Ce modele est base sur l'equilibre\n   entre la traction dans les aciers et les contraintes de cisaillement\n   a l'interface acier-beton (supposees uniforme sur toute la longueur\n   d'ancrage). Cet equilibre est realise de facon iterative.\n\n   'LANC'   : Longueur d'ancrage\n   'SECT'   : Section d'une barre d'acier\n\n  - Donnees relatives au modele de glissement:\n\n   'G12'    : Module de cisaillement\n   'S1T'    : Glissement au debut du plateau\n   'S2T'    : Glissement a la fin du plateau\n   'S3T'    : Glissement a la fin de l'adoucissement\n   'T1T'    : Contrainte de cisaillement sur le plateau\n   'T3T'    : Contrainte de cisaillement residuelle apres la fin de\n              l'adoucissement\n   'ALFA'   : Parametre definissant la premiere partie de la courbe situee\n              avant le plateau\n              (Valeur conseillee: 0.4)\n\n  - Donnees relatives au modele d'acier:\n\n   'STSY'   : contrainte de plasticite\n   'STSU'   : contrainte ultime\n   'EPSH'   : deformation de debut d'ecrouissage\n   'EPSU'   : deformation ultime\n   'ROFA'   : coefficient RO\n   'BFAC'   : rapport de la rigidite d'ecrouissage cyclique avec la\n              rigidite elastique\n   'A1FA'   : coefficient A1\n   'A2FA'   : coefficient A2\n   'FALD'   : rapport de la longueur entre deux renfort de\n              cisaillement avec le diametre de la barre\n   'A6FA'   : coefficient A6\n   'CFAC'   : coefficient C\n   'AFAC'   : coefficient A\n\n\n   Modele BETON_UNI\n   ----------------\n\n     Il s'agit d'un modele de Hognestad, avec ou sans confinement\n\n   'STFC'    :  containte de compression au pic\n   'EZER'    :  deformation de compression au pic\n   'STFT'    :  contrainte de traction au pic\n   'ALF1'    :  parametre de confinement\n   'OME1'    :  parametre de confinement\n   'ZETA'    :  pente de la partie descendante de la courbe de\n                compression\n   'ST85'    :  plateau de la courbe de compression\n   'TRAF'    :  facteur definissant l'adoucissement de traction\n\n   'STPT'    :  contrainte residuelle en traction\n\n  Parametres definissant la courbe de fermeture et d'ouverture de la\n  fissure\n   'FAMX'    :  facteur F1 (definissant le point de refermeture)\n                FAMX doit etre positif pour avoir un sens physique.\n                Si sa valeur est negative, la loi de fermeture de fissure\n                raide est prise et les parametres STPT, FAMX, FACL, FAM1\n                et FAM2 ne sont pas pris en compte par le modele\n   'FACL'    :  facteur F2 (definissant le point d'ouverture complete)\n   'FAM1'    :  facteur F1'(definissant la pente associee a F1)\n   'FAM2'    :  facteur F2'(definissant la pente associee a F2)\n\n\n   Modele FRAGILE_UNI\n   ------------------\n\n     Il s'agit d'un modele d'endommagement uni-axial fragile\n   en traction et compression. L'adoucissement est hyperbolique\n   avec possibilite de contrainte residuelle.\n\n   'FC  '    :  resistance en compression\n   'FC_R'    :  contrainte residuelle en compression\n   'STRC'    :  Deformation controlant l'adoucissement en compression\n   'FT  '    :  resistance en traction\n   'FT_R'    :  contrainte residuelle en traction\n   'STRT'    :  Deformation controlant l'adoucissement en traction\n\n\n   Modele BETON_BAEL\n   -----------------\n\n     Cette loi uniaxiale reprend la loi donnee pour le beton par le\n   BAEL pour la compression. Le modele est plastique en compression\n   et unilateral en traction (avec resistance nulle)\n\n   'FC  '    :  resistance en compression\n\n\n   Modele MAZARS\n   -------------\n\n     Memes caracteristiques que le materiau ENDOMMAGEABLE\n\n\n   Modele INTIMP\n   -------------\n     Modele d'acier corrode avec prise en compte de la degradation de\n   l'interface acier/beton sans/avec corrosion [1]. Le modele d'acier\n   corrodee est celui developpe par [2,3], celui d'interface est celui\n   developpe par [4]. Le couplage est realise par l'approche proposee\n   par [5]. Les parametres a entrer, en plus des caracteristiques elastiq\n   sont les suivants :\n\n   * Modele d'acier :\n      'SOCT' : section d'acier (fonction de l'acier)\n      'SOGS' : limite elasticite (400 MPa)\n      'DCS ' : endommagement critique (0.2)\n      'TCS ' : degre de corrosion en terme de perte de section lie a l'acier\n      'MS  ' : exposant d'acrouissage (2.786)\n      'KS  ' : facteur d'acrouissage (500 MPa)\n\n   * Modele d'interface :\n      'GCEO' : module de Coulomb (15 GPA)\n      'AD  ' : fragilite (7.5e-5)\n      'GAMC' : coefficient d'ecrouissage cinematique 1 (7.0e9)\n      'ACOE' : coefficient d'ecrouissage cinematique 2 (5.0e-7)\n      'LCCO' : longueur d'ancrage (fonction de la longueur des elements, 1 si\n      'EPSC' : deformation seuil de l'endommagement (1.0e-4)\n      'TCI ' : degre de corrosion en terme de perte de section lie a l'acier\n      'CALA' : indicateur de calcul\n              = 0 si modele couple\n              = 1 si modele d'interface seul\n              = 2 si modele d'acier seul\n\n   * References:\n     [1] B. Richard, F. Ragueneau, C. Cremona. (2010). A multifber approach\n         to describe the ultimate behaviour of corroded reinforced concrete\n         structures. Euro-C conference, Rohmoos/Schladming, Austria.\n\n     [2] A. Ouglova. (2010). Etude du comportement mecanique des structures en\n         arme ateintes par corrosion. These de L'ENS Cachan.\n\n     [3] B. Richard, F. RAgueneau, C. Cremona, L. Adelaie, JL Tailhan. (2010). A\n         three-dimensional steel/concrete model including corrosion effects. Eng\n         Fracture Mechanics. 77:951-973.\n\n     [4] L. Adelaide, B. Richard, F. Ragueneau, C. Cremona. (2010). Thermodynami\n         admissibility of a set of constitutive equations coupling elasticity,\n         isotropic damage and internal sliding. Comptes Rendus Mecanique. 338:1\n\n     [5] D. Combescure, F. Wang. (2007). Assessments of existing RC structures u\n         dynamic loading using non linear modeling. CONSEC 2007, Tours, France.\n\n\n   Modele RICBET_UNI\n   -----------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n    'HYST' : indicateur pour choisir le type de crit\u00e8ere de refermeture\n             voulu : \u00e0 contrainte nulles (1) ou \u00e0 d\u00e9formations nulles (2)\n\n    'FT  ' : resistance equivalente en traction          (2.1e6 MPa)\n    'ALDI' : fragilite en traction uniaxiale             (4.0e-3)\n    'GAM1' : module d'ecrouissage cinematique 1          (5.0e9)\n    'A1  ' : module d'ecrouissage cinematique 2          (2.0e-6)\n    'SIGF' : contraite de refermeture des fissures       (-3.0e6)\n    'FC  ' : resistance en compession                    (10.0e6)\n    'AF  ' : module surface plasticite                   (1.0)\n    'AG  ' : module potentiel plasticite                 (1.0)\n    'AC  ' : ecrouissage plastique 1                     (4.0e10)\n    'BC  ' : ecrouissage plastique 2                     (600.0)\n    'SIGU' : contrainte asymptotique compression         (-6.0e6)\n\n   * References:\n     [1] B. Richard, F. Ragueneau (2012). 3D modelling of concrete for\n         earthquake analysis: damage mechanics and plasticity coupling.\n         WCCM 2012, Sao Paulo, Bresil.\n\n     [2] B. Richard, F. Ragueneau (2012). Continuum damage mechanics based\n         model for quasibrittle materials subjected to cyclic loadings:\n         formulation, numerical implementation and applications.\n         Engineering Fracture Mechanics. In press.\n\n\n   Modele UNILATERAL\n   -----------------\n\n      Memes caracteristiques que le materiau ENDOMMAGEABLE\n\n\n   Modele PARFAIT_UNI\n   ------------------\n\n       Il s'agit d'un modele plastique avec ecrouissage cinematique\n       utilisable pour l'acier.\n\n    'SIGY' : limite elastique\n    'H   ' : Module d'ecrouissage (H=0 pour un modele plastique parfait)\n\n\n   Modele PARFAIT_ANCRAGE\n   --------------------\n\n    Il s'agit du modele de comportement d'ancrage ou de recouvrement\n    base sur de le modele d'acier PARFAIT_UNI et le modele de glissement\n    acier/beton ANCRAGE_ELIGEHAUSEN. Ce modele est base sur l'equilibre\n    entre la traction dans les aciers et les contraintes de cisaillement\n    a l'interface acier-beton (supposees uniforme sur toute la longueur\n    d'ancrage). Cet equilibre est realise de facon iterative.\n\n   'LANC'   : Longueur d'ancrage\n   'SECT'   : Section d'une barre d'acier\n\n  - Donnees relatives au modele de glissement:\n\n   'G12'    : Module de cisaillement\n   'S1T'    : Glissement au debut du plateau\n   'S2T'    : Glissement a la fin du plateau\n   'S3T'    : Glissement a la fin de l'adoucissement\n   'T1T'    : Contrainte de cisaillement sur le plateau\n   'T3T'    : Contrainte de cisaillement residuelle apres la fin de\nl'adoucissement\n   'ALFA'   : Parametre definissant la premiere partie de la courbe situee\navant le plateau\n              (Valeur conseillee: 0.4)\n\n  - Donnees relatives au modele d'acier:\n\n   'SIGY' : limite elastique\n   'H   ' : Module d'ecrouissage (H=0 pour un modele plastique parfait)\n\n\n   Modele  STRUT_UNI\n   -----------------\n\n   Il s'agit d'un modele de diagonale et tirant pour un comportement\n   en cisaillement non-lineaire du modele a fibre\n   Il faut donner les caracteristiques du beton, de l'acier\n   ainsi que la quantite d'acier et l'inclinaison de la diagonale.\n\n     Pour le beton:\n\n   'STFC'    :  containte de compression au pic\n   'EZER'    :  deformation de compression au pic\n   'STFT'    :  contrainte de traction au pic\n   'ALF1'    :  parametre de confinement\n   'OME1'    :  parametre de confinement\n   'ZETA'    :  pente de la partie descendante de la courbe de\n                compression\n   'ST85'    :  plateau de la courbe de compression\n   'TRAF'    :  facteur definissant l'adoucissement de traction\n   'STPT'    :  contrainte residuelle en traction\n   'FAMX'    :  facteur F1 (definissant le point de refermeture)\n   'FACL'    :  facteur F2 (definissant le point d'ouverture complete)\n\n   'THET'    :  inclinaison de la diagonale (en degre)\n\n      Pour l'acier:\n\n   'YOUS'    :  module d'elasticite\n   'STSY'    :  contrainte de plasticite\n   'STSU'    :  contrainte ultime\n   'EPSH'    :  deformation de debut d'ecrouissage\n   'EPSU'    :  deformation ultime\n   'ROFA'    :  coefficient RO\n   'BFAC'    :  rapport de la rigidite d'ecrouissage cyclique avec la\n                rigidite elastique\n   'A1FA'    :  coefficient A1\n   'A2FA'    :  coefficient A2\n\n   'ROST'    :  Densite volumique de cadre\n\n   'EULT'    :  Deformation ultime utilisee pour le calcul\n                de l'indice d'endommagement\n     Si abs(EULT)>1, les indices d'endommagement des 2 bielles valent 0.\n     Si EULT<0, les indices sont fonctions de la deformation\n                maximale en compression dans le beton\n     Si EULT>0, les indices sont fonctions de la position de l'axe\n     neutre.\n\n\n   Modele CISAIL_NL\n   ---------------\n\n       Il s'agit d'un modele non-lineaire d'endommagement-plasticite\n       avec adoucissement pour l'effort tranchant.\n       Cette loi peut etre utilisee sur un element de poutre TIMO\n       comme modele global ou comme materiau d'une section de poutre\n       (modele a fibre).\n\n   'DELP'    : Deformation limite du domaine elastique (sens positif)\n   'DELM'    : Deformation limite du domaine elastique (sens negatif)\n   'DMAP'    : Endom. maximum lors de la plastification (sens positif)\n   'DMAN'    : Endom. maximum lors de la plastification (sens negatif)\n   'BETA'    : Parametre de pincement\n   'ALFA'    : Parametre reglant la vitesse de la degradation de\n               resistance sous chargement cyclique\n   'TETA'    : Fraction de la resistance residuelle apres complete\n                degradation sous chargement cyclique\n   'MONP'    : Evolution de l'effort tranchant (ou de la contrainte de\n    cisaillement) en fonction de la deformation plastique (sens positif)\n   'MONN'    : Evolution de l'effort tranchant (ou de la contrainte de\n    cisaillement) en fonction de la deformation plastique (sens negatif)\n\n   Modele INFILL_UNI\n   ---------------\n\n       Il s'agit d'un modele non-lineaire d'endommagement-plasticite\n       unilateral avec adoucissement en compression et sans resistance en\n       traction (element de barre uniquement).\n       Cette loi peut etre utilisee sur deux elements de barre\n       comme modele global pour modeliser les murs de\n       remplissage en maconnerie\n\n   'DELA'    : Deformation limite du domaine elastique\n   'DMAX'    : Endom. maximum lors de la plastification\n   'BETA'    : Parametre de pincement\n   'GAMM'    : Parametre reglant la position du point de rechargement\n   'GAMP'    : Parametre reglant la position du point de rechargement\n   'ALFA'    : Parametre reglant la vitesse de la degradation de\n               resistance sous chargement cyclique\n   'TETA'    : Fraction de la resistance residuelle apres complete\n                degradation sous chargement cyclique\n   'MONO'    : Evolution de la force axiale de compression en fonction\n              de la deformation plastique (attention, la compression\n              est prise positive ...)\n\n   Modele OTTOSEN\n   --------------\n\n  ('LTR')    : limite en traction\n               (par defaut YOUN*1.2E-4)\n  ('GFTR')   : taux de restitution d'energie\n               (nomme aussi energie de fissuration)\n               (par defaut LTR*3.9E-5, mais cette valeur correspond\n               a des unites SI)\n  ('GS')     : module traduisant la perte de resistance au cisaillement\n               d'une fissure avec son ouverture (usuellement compris\n               entre 2 et 6 Mpa et par defaut YOUN*1.8E-4)\n  ('BTR')    : fraction non recouvrable de l'ouverture d'une fissure.\n               (par defaut 0.2)\n  ('LCS')    : limite en compression simple\n               (par defaut le materiau est elastique en compression)\n  ('LCBI')   : limite en bi-compression\n               (par defaut 1.15*LCS)\n  ('EPCM')   : deformation plastique au pic, en compression simple\n               (par defaut 4.*LCS/(3.*YOUN))\n  ('EPCU')   : deformation plastique ultime, en compression simple\n               (par defaut 5.*EPCM)\n\n  Dans un deuxieme temps, il faut obligatoirement adjoindre au CHAML de\n  de sous-type CARACTERISTIQUES construit par l'operateur MATE, le CHAML\n  resultat de l'operateur TAILLE applique au modele de calcul.\n\n  Par ailleurs en deformations planes et en axisymetrique on peut\n  definir en plus :\n\n  ('EPSR')   : deformation a rupture dans la direction normale au plan\n               de representation.\n\n  En cas de grands deplacements, il faut definir l'option LAGRANGIEN de PASAPAS\n  a TOTAL pour prendre correctement en compte l'evolution du repere local.\n\n\n   Modele OTTOVARI\n   ---------------\n\n  ('LTR')    : limite en traction\n               (par defaut YOUN*1.2E-4)\n  ('GFTR')   : taux de restitution d'energie\n               (nomme aussi energie de fissuration)\n               (par defaut LTR*3.9E-5, mais cette valeur correspond\n               a des unites SI)\n  ('BTR')    : fraction non recouvrable de l'ouverture d'une fissure.\n               (par defaut 0.2)\n  ('LCS')    : limite en compression simple\n               (par defaut le materiau est elastique en compression)\n\n  Dans un deuxieme temps, il faut obligatoirement adjoindre au CHAML de\n  de sous-type CARACTERISTIQUES construit par l'operateur MATE, le CHAML\n  resultat de l'operateur TAILLE applique au modele de calcul.\n\n\n   Modele viscoplastique viscoendommageable pour le beton en dynamque\n   rapide BETON_DYNAR_LMT\n   --------------------------------------------------------------------\n   - ATTENTION la porosite initiale influence le module d'young reel\n        Km=YOUNG/(3*(1-2*NU))\n        Gm=YOUNG/(2*(1+NU))\n\n  - Coefficients de compressibilite et cisaillement de la matrice\n    avec les pores             (Mori-Tanaka)\n        Kporo=4*XKm*XGm*(1-f)/(4*XGm+3*XKm*f)\n        Gporo=XGm*(1-f)/(1+f*(6*XKm+12*XGm)/(9*XKm+8*XGm))\n\n  - Critere de plasticite FNT :\n\n      FNT =  3*J2(SIG) / SGM**2 + 2Q1f cosh(Q2 I1 / 2SGM) - (1+(Q3 f)**2)\n\n   - Evolution de la deformation plastique\n\n     EPSP = 1/(1-D)*(FNT/MVP)**NVP * dFNT/dSIG\n\n\n   - Evolution de la porosite\n\n      Df = K * f/(1-f) * (FNT/MVP)**NVP\n\n   - Fonction seuil d'endommagement en traction en compression :\n\n      FDi = (EPSE - ED0 - 1/Ai*(Di/(1-Di))**(1/Bi))\n\n - Evolution de l'endommagement en traction en compression :\n\n      Di= (FDi/MDi)**NDi\n\n\nLes donnees a introduire en plus des parametres d'elasticite sont les\nsuivantes:\n\n   'F0'  : Porosite initiale du beton (0.3)\n   'Q1'  : Parametre du critere de Gurson modifie par Needleman\n           et Tvergaard (0.5 a 2.)\n   'Q2'  : Parametre du critere de Gurson modifie par Needleman\n           et Tvergaard (0.5 a 2.)\n   'Q3'  : Parametre du critere de Gurson modifie par Needleman et\n           Tvergaard (0.5 a 2.)\n   'SGM0': Resistance de la matrice cimentaire sans les pores (70 Mpa)\n   'XN'  : Exposant du seuil de viscoplasticite (15.)\n   'NVP' : Parametre de la viscoplasticite de type Perzyna (1.5)\n   'MVP' : Parametre de la viscoplasticite de type Perzyna (1.D-2)\n   'K'   : Influence l'evolution de la porosite (15 a 60)\n   'MDT' : Parametre de viscosite de l'endommagement de traction (0.5D-4)\n   'NDT' : Parametre de viscosite de l'endommagement de traction (5.)\n   'MDC' : Parametre de viscosite de l'endommagement de compression\n           (0.5D-3)\n   'NDC' : Parametre de viscosite de l'endommagement de compression (20.)\n   'ED0' : Seuil en deformation pour la traction (1.D-04)\n   'AC'  : Parametre pour la compression (3000)\n   'BC'  : Parametre pour la compression (4.)\n   'AT'  : Parametre pour la traction (20000)\n   'BT'  : Parametre pour la traction (1.6)\n\n\n   Modele PARFAIT_INSA\n   -------------------\n\n   Modele plastique parfait pour le comportement orthotrope\n   dedouple de coques minces\n\n    'SIG1'    : limite elastique dans la premiere direction d'orthotropie\n\n    'SIG2'    : limite elastique dans la deuxieme direction d'orthotropie\n\n\n   Modele ECROUIS_INSA\n   -------------------\n\n   Modele plastique ecrouissable pour le comportement orthotrope\n   dedouple de coques minces\n\n    'TRA1'    : mot-cle suivi de :\n    NOMTRA1   : courbe de traction dans la premiere direction\n                d'orthotropie constituee par un objet de type\n                EVOLUTION avec en abscisse les deformations et en\n                ordonee les contraintes. Elle doit contenir comme\n                premier point, le point (0,0) et comme second point,\n                le point correspondant a la limite elastique.\n\n    'TRA2'    : mot-cle suivi de :\n    NOMTRA2   : courbe de traction dans la deuxieme direction\n                d'orthotropie constituee par un objet de type\n                EVOLUTION avec en abscisse les deformations et en\n                ordonee les contraintes. Elle doit contenir comme\n                premier point, le point (0,0) et comme second point,\n                le point correspondant a la limite elastique.\n\n\n   Modele BETOCYCL\n   ---------------\n     Modele comportant deux surfaces avec deux mecanismes chacunes.\n     Une partie de l'ecrouissage isotrope du mecanisme de compression\n     de la grande surface est due a l'ecrouissage cinematique de la\n     petite surface. Les surfaces sont definies par des criteres de\n     Rankyne avec ecrouissage cinematique (petite surface) ou isotrope\n     (grande surface).\n\n    'HHH1'  : Module d'ecrouissage cinematique de la petite surface.\n              (type FLOTTANT)\n    'FTPE'  : Limite originelle de traction de la petite surface\n              (type FLOTTANT)\n    'FCPE'  : Limite originelle de compression de la petite surface\n              (type FLOTTANT)\n    'FTGR'  : Limite originelle de traction de la grande surface\n              (type FLOTTANT)\n    'FCGR'  : Limite originelle de compression de la grande surface\n              (type FLOTTANT)\n    'WOR0'  : Travail cyclique de reference\n              (type FLOTTANT)\n    'TREV'  : Evolution de l'ecrouissage isotrope de traction\n              (type EVOLUTIO)\n    'COEV'  : Evolution de l'ecrouissage isotrope de compression\n              (type EVOLUTIO)\n    'LCAT'  : Longueur associee a la courbe de traction\n              (type FLOTTANT)\n    'LCAC'  : Longueur associee a la courbe de compression\n              (type FLOTTANT)\n    'EPSO'  : Parametre d'endommagement cyclique (deformation)\n              (type FLOTTANT)\n\n    Remarques:\n    1- Les huit premiers parametres sont calcules par la procedure\n       IDENTI a partir des courbes de traction, de compression simples,\n       du maillage et des autres parametres.\n    2- L'utilisation de longueurs associees aux courbes de traction et\n       compression permet de limiter la dependance vis-a-vis du maillage.\n\n\n\n   Modele STEINBERG\n   ----------------\n\n   Lois constitutives :\n\n     limite d'ecoulement Y :\n\n     Y = SIGY.(1+BETA.(P'+EPSI))**N.G/G0\n\n     et :\n\n     SIGY.(1+BETA.(P'+EPSI))**N < YMAX\n\n     avec:\n          P': deformation plastique equivalente\n              P'=sqrt(2/3.EP:EP)\n          EP: tenseur des deformations plastiques deviatoires\n          G: le module de cisaillement\n\n     module de cisaillement G :\n\n     G = G0+GP'.P/(ETA**(1/3))+GT'.(T-300)\n     G0 = YOUNG0/(2*(1+NU0))\n\n     avec : YOUNG0 module d'elasticite initial\n            NU0 coefficient de Poisson (constant)\n            G0 module de cisaillement initial\n\n     TM=TM0*EXP(2.MU0.(1.-1./ETA))/( ETA ** (2./3.) )\n     TM: temperature de fusion\n\n     et: si T > TM :\n\n     G = Y = 0\n\n     des lors la trace de la deformation plastique ets nulle\n     et le deviateur des deformations elastques est nul.\n\n     avec:\n          P: la pression hydrostatique:\n             P=-trace(SIGMA)/3\n          SIGMA: le tenseur des contraintes\n          ETA:la compression\n             ETA=RHO/RHO0\n          RHO,RHO0:densite et densite initiale du materiau\n          T: temperature exprimee ici en degre Kelvin\n\n     Le module de cisaillement G est donne secant i.e.:\n\n        SIG=HOOK.DEF et D_SIG=HOOK.D_DEF+D_HOOK.DEF\n\n   'SIGY'    : limite d'ecoulement initial\n   'BETA'    : coefficient BETA de l'ecrouissage\n   'N'       : coefficient N de l'ecrouissage\n   'EPSI'    : deformation plastique equivalente initiale\n   'GP'      : pente du module de cisaillement par rapport a la\n               pression ( sans unite ): GP'\n   'GT'      : terme corrigeant le module de cisaillement en fonction\n               de la temperature (terme homogene au module\n               de cisaillement).\n               On rentre ici directement le terme GT'.(T-300) de\n               la loi constitutive sous forme d'un objet EVOLUTION\n               (en fonction de la temperature).\n   'YMAX'    : limite d'ecoulement maximale a module de cisaillement\n               constant\n   'TMO'     : temperature de fusion du materiau pour ETA=1\n   'MU'      : coefficient MU0 intervenant dans le calcul de la\n               temperature de fusion\n\n   Modele ZERILLI\n   --------------\n\n   Lois constitutives :\n\n     -Limite d'elasticite Y pour les materiaux Cubiques\n     a Faces Centrees (C.F.C.) :\n\n      Y = DYG+C2'.sqrt(P').exp(-c3'.T+C4'.T.ln(EPT))+K.L**(-1/2)\n\n     -Limite d'elasticite Y pour les materiaux Cubiques\n     Centres (C.C.) :\n\n      Y = DYG+C1'.exp(-C3'.T+C4'.T.ln(EPT))+C5'.(P')**N+K.L**(-.5)\n\n      avec:\n           T :la temperature\n           P':la deformation plastique equivalente\n               P'=sqrt(2/3.EP:EP)\n           EP:le tenseur des deformations plastiques\n           EPT:vitesse de deformation totale equivalente\n               EPT=sqrt(2/3.ET:ET)\n           ET: tenseur des vitesses de deformation\n\n   'DYG'     : terme DYG\n   'C1'      : coefficient C1'\n   'C2'      : coefficient C2'\n   'C3'      : terme C3'.T ( produit C3' par la temperature\n               T) entre sous forme d'un objet EVOLUTION\n               ( en fonction de la temperature)\n   'C4'      : terme C4'.T ( produit C4' par la temperature\n               T) entre sous forme d'un objet EVOLUTION\n               ( en fonction de la temperature)\n   'C5'      : coefficient C5'\n   'N'       : coefficient N\n   'K'       : coefficient K\n   'L'       : diametre moyen d'un grain\n   'TYPE'    : type de structure du materiau\n               Si la structure est CFC: TYPE=0.\n               Si la structure est CC : TYPE=1.\n\n   Modele PRESTON\n   --------------\n\n   Equations constitutives :\n\n\n     -module de cisaillement G :\n\n     G = G0+GP'.P/(ETA**(1/3))+GT'.(T-300)\n     G0 = YOUNG0/(2*(1+NU0))\n\n     avec : YOUNG0 module d'elasticite initial\n            NU0 coefficient de Poisson (constant)\n            G0 module de cisaillement initial\n            ETA:la compression\n                ETA=RHO/RHO0\n\n     TM=TM0*EXP(2.MU0.(1.-1./ETA))/( ETA ** (2./3.) )\n     TM: temperature de fusion\n\n     et: si T > TM :\n\n     G = Y = 0 ( Y: limite d'elasticite)\n\n     des lors la trace de la deformation plastique ets nulle\n     et le deviateur des deformations elastques est nul.\n\n\n     -Termes adimensionnels:\n\n      Y' = Y/G\n      T' = T/TM\n      EPT'= EPT/X\n\n     avec:\n         Y la contrainte d'ecoulement\n         G le module de cisaillement\n         T la temperature\n         TM la temperature de fusion\n         X = 1/6.(4/PI)**(.5).OMEGA\n         OMEGA: pulsation de Debye\n              OMEGA = (G/RHO)**(.5)\n         RHO:densite du materiau\n         EPT: vitesse de deformation totale equivalente\n              EPT=sqrt(2/3.ET:ET)\n         ET: vitesse de deformation totale\n\n     -Terme adimensionnel de contrainte de saturation YS:\n\n      S1 = S0-(S0-SINF).erf(K'.T'.ln(g/EPT')\n      S2 = S0.(EPT'/g)**BETA\n      YS = max(S1,S2)\n\n     -Terme adimensionnel de limite d'elasticite YL:\n\n      L1 = Y0-(Y0-YINF).erf(K'.T'.ln(g/EPT')\n      L2 = Y1.(EPT'/g)**Y2\n      YL = max(L1,min(L2,S2))\n\n     -Terme adimensionnel de contrainte d'ecoulement\n     Y' dans le cas de materiaux\n     Cubiques Centres (C.C.): P=0\n\n     Y' = YS-(YS-YL).exp(-TAU.EP/(YS-YL))\n\n     -Terme adimensionnel de contrainte d'ecoulement\n     Y' dans le cas des autres\n     materiaux : P different de 0\n\n     Coeff1 = (S0-YL).(exp(P.(YS-YL)/(S0-YL))-1)\n     Coeff2 = 1-exp(-P.(YS-YL)/(S0-YL))\n     Y' = YS+(S0-YL)/P.ln(1-Coeff2.exp(-P.TAU.EP/Coeff1))\n\n     avec:\n          EP: deformation plastique equivalente\n              EP=sqrt(2/3.EPS:EPS)\n          EPS: deformations plastiques\n\n     Le module de cisaillement G est donne secant i.e.:\n\n        SIG=HOOK.DEF et D_SIG=HOOK.D_DEF+D_HOOK.DEF\n\n   'RHO'     : densite initiale du materiau\n   'TAU'     : parametre sans dimension TAU utlise dans\n               la loi d'ecrouissage du modele\n   'P'       : parametre sans dimension P\n               -si P=0, on est dans le cas des materiaux a structure\n               cubique centre (C.C.)\n               -sinon, on est dans le cas des materiaux a structure\n               cristallographique differente.\n   'S0'      : parametre sans dimension S0\n               il donne la contrainte de saturation pour T=0\u00c2\u00b0K\n   'SINF'    : parametre sans dimension SINF\n               il donne la contrainte de saturation pour T(\u00c2\u00b0K) infini\n   'K'       : parametre sans dimension K'.T utlise dans\n               le calcul de la contrainte de saturation et la\n               limite elastique. On le rentre sous forme\n               d'un objet EVOLUTION (en fonction de la temperature\n               T)\n   'G'       : parametre sans dimension g utilise dans\n               le calcul de la contrainte de saturation et la\n               limite elastique\n   'Y0'      : parametre sans dimension Y0\n               il donne la limite d'elasticite pour T=0\u00c2\u00b0K\n   'YINF'    : parametre sans dimension YINF\n               il donne la limite d'elasticite pur T(\u00c2\u00b0K) infini\n   'Y1'      : parametre sans dimension Y1 utilise dans le\n               calcul de la limite d'elasticite\n   'Y2'      : parametre sans dimension Y2 utilise dans le\n               calcul de la limite d'elasticite\n   'BETA'    : parametre sans dimension BETA utilise dans le\n               calcul de la limite d'elasticite et de la contrainte\n               de saturation\n   'GP'      : pente du module de cisaillement par rapport a la\n               pression ( sans unite ): GP'\n   'GT'      : terme corrigeant le module de cisaillement en fonction\n               de la temperature (terme homogene au module\n               de cisaillement).\n               On rentre ici directement le terme GT'.(T-300) de\n               la loi constitutive sous forme d'un objet EVOLUTION\n               (en fonction de la temperature).\n   'TMO'     : temperature de fusion du materiau pour ETA=1\n   'MU'      : coefficient MU0 intervenant dans le calcul de la\n               temperature de fusion\n\n   Modele HINTE\n   ------------\n      Il s'agit d'un modele de joint dedie au delaminage de\n      structures composites stratifies (fonctionne en 2D).\n      On suppose les deux modes d'endommagement Y1 en cisaillement\n      et Y2 en ouverture de fissure entre plis.\n\n       L'energie dissipee est :\n\n            E = Y1*(d1/dt) + Y2*(d2/dt)      d1 et d2 sont deux\n       variables internes d'endommagement\n\n       Si  :   d2 < 1 et Y < YR alors  d1 = d2 = W(Y)\n                                sinon  d1 = d2 = 1\n\n       Un endommagement isotrope est introduit sous la forme :\n\n            Y = sup(((Y2)**AL) + ( (GAM1*Y1)**AL))**(1/AL)\n\n       La fonction de delaminage est :\n\n           w(Y)=((N/(N+1))**N)*( <Y-Y0>**N)/ ((YC-Y0)**N)\n\n       La force thermodynamique a rupture associee a l'endommagement\n       ultime DR est :\n\n          YR = Y0 + ( ((N+1)/N) * (DCRI** (1/N))*(YC-Y0)\n\n       Les parametres du modele sont donc :\n\n    'Y0'    : seuil d'endommagement\n    'YC'    : energie critique d'endommageme\n    'GAM1'  : parametres de couplage entre energies de cisaillement\n              et d'ouverture\n    'AL'    : gouverne la forme et le lieu de rupture en mode mixte\n    'NN'    : caracterise la plus ou moins grande fragilite de\n              l'interface (plus N est grand, plus l'interface\n              est fragile)\n    'DCRI'  : permet de simuler une rupture fragile(par defaut DCRI=1)\n    'KS'    : rigidites d'interface en cisaillement\n    'KN'    : rigidites d'interface normale\n\n\n   Modele J2\n   ---------\n\n   * Les equations du modele sont (voir [1]):\n\n     --> Notation: J2     deuxieme invariant du tenseur deviatorique des\n                          contraintes\n                   sigy   limite d'elasticite\n                   epse   deformation plastique equivalente (variable interne)\n                   F      critere de plasticite\n                   G      potentiel d'ecoulement\n     --> critere de plasticite\n            F = sqrt(3*J2)-sigy(epse)\n     --> loi d'ecrouissage:\n            sigy(epse) = SIG0+KISO*epse +(SIGI-SIG0)*(1-exp(-VELO*epse))\n     --> Potentiel d'ecoulement :\n            G = F (plasticite associee)\n\n   * Les parametres specifiques du modele sont :\n\n     'SIG0'   :  Limite elastique\n     'SIGI'   :  Contrainte ultime\n     'KISO'   :  module d'ecrouissage lineaire\n     'VELO'   :  parametre de vitesse\n\n   * References:\n\n     [1] Simo, J.C. and Hughes, T.J.R. ``Computational Inelasticity'',\n             Springer-Verlag, New York, 1997\n\n\n\n   Modele RH_COULOMB\n   -----------------\n\n   Modele de Mohr-Coulomb approxime hyperbolique (plasticite associee et\n   parfaite)\n\n   * Les equations du modele sont (voir [1]):\n\n     --> Notation: I1     Premier invariant du tenseur des contraintes\n                   J2     deuxieme invariant du tenseur deviatorique des\n                   t      angle de Lode (de -30\u00c2\u00b0 a +30\u00c2\u00b0\n                   F      critere de plasticite\n                   G      potentiel d'ecoulement\n\n     --> critere de plasticite\n           F = I1/3.D0*sin(PHI)-COHE*cos(PHI)+sqrt(J2*ktet(t)**2+(ar*COHE)**2)\n           ar = 0.05*cos(PHI)\n           ktet(t)= aa - bb*sin(3*t)                si  abs(t) >  25\u00c2\u00ba\n                    cos(t)-sin(PHI)*sin(t)/sqrt(3)  si  abs(t) =< 25\u00c2\u00ba\n           aa = aa(PHI,25\u00c2\u00ba)  see [1]\n           bb = bb(PHI,25\u00c2\u00ba)  see [1]\n     --> Potentiel d'ecoulement :\n           G = F (plasticite associee)\n\n   * Les parametres specifiques du modele sont :\n\n     'COHE'   :  cohesion\n     'PHI '   :  angle de friction\n\n   * References:\n\n     [1] Abbo, A.J. and Sloan, S.W., ``A smooth hyperbolic approximation\n         to the Mohr-Coulomb yield criterion'', Computers and Structures,\n         54, 3, 427-441, 1995.\n\n   Modele MRS_LADE\n   ---------------\n\n   * Les equations du modele sont (voir [1,2]):\n\n     --> Notations : I1     Prelmier invariant du tenseur des contraintes\n                     J2     deuxieme invariant du tenseur deviatorique des\n                            contraintes\n                     p      = -I1/3\n                     q      = sqrt(3*J2)\n                     t      angle de (de 0\u00c2\u00ba a 60\u00c2\u00ba)\n                     kcon   variable interne du ca\u017dne\n                     kcap   variable interne de la fermeture\n                     dkcon  increment de kcon\n                     dkcap  increment de kcap\n                     dwp    increment du travail plastique\n                     Fcon   equation du ca\u017dne\n                     Fcap   equation de la fermeture\n                     Gcon   potentiel d'ecoulement du ca\u017dne\n                     Gcap   potentiel d'ecoulement de la fermeture\n     --> Equation du ca\u017dne :\n                     Fcon     = wwf(t,E)*q*(1+q/QA)**EXPM - etacon(kcon)*p\n                     wwf(t,E) = W-W function\n     --> Equation de la fermeture :\n                     Fcap = ((p-cpm*pcapf(kcap))/(cpr*pcapf(kcap)))**2 +\n                            (wwf(t,E)*q*(1+q/QA)**EXPM/\n                            (etacon(kcon)*cfr*pcapf(kcap)) )**2 - 1\n                     cpm  = cpm(PHI,ALP)\n                     cpr  = cpr(PHI,ALP)\n                     cfr  = cfr(PHI,ALP)\n     --> loi d'ecrouissage du ca\u017dne:\n                     etacon(kcon) = aaa*exp(-bbb*kcon)*(K1+kcon)**(1/EXPV) +\n                                    K2*ETAB*kcon/(EPSI+kcon)\n                     aaa  = aaa(EXPV,K1,K2,EPSI)\n                     bbb  = bbb(EXPV,K1,K2,EPSI)\n     --> loi d'ecrouissage de la fermeture:\n                     pcapf(kcap) = PCAP*(1+kcap**(1/EXPR))\n     --> evolution des variables internes:\n                     dkcon = (p/PA))**(-EXPL)/(CCON*PA)* dwp\n                     dkcap = (PCAP/PA)**(-EXPR))/(CCAP*PA)* dwp\n     --> Potentiel d'ecoulement du ca\u017dne:\n                     Gcon = wwf(t,E)*q*(1+q/QA)**EXPM - N etacon(kcon)\n                            *( p-2*ALP*pcapf(kcap)*ln(p+ALP*pcapf(kcap)) )\n     --> Potentiel d'ecoulement de la fermeture:\n                     Gcap = Fcap (plasticite associee)\n\n   * Les parametres specifiques du modele sont :\n\n     'PC  '   : Doit etre 0 (Seuls les materiaux sans cohesion sont\n               implementes)\n     'PA  '   : Parametre d'echelle (habituellement 1)\n     'QA  '   : Parametre d'echelle (habituellement 1)\n     'EXPM'   : Parametre de l'equation du ca\u017dne (doit etre >= 0)\n                = 0 entraine une relation lineaire p-q dans la region du ca\u017dn\n                    alors etacon(kcon) est identique a l'angle de friction\n     'E   '   : Forme sur le plan deviatorique\n                De = 1 (circulaire) a = 0.5 (triangulaire), habituellement =\n0.7\n     'K1  '   : Parametre d'ecrouissage du ca\u017dne (doit etre > 0)\n     'K2  '   : Parametre d'ecrouissage du ca\u017dne (doit etre > 0)\n                K2*ETAB est la valeur residuelle (atteinte pour kcon=infinity)\n                of etacon(kcon), function related with the friction angle.\n     'ETAB'   : Valeur maximale de  etacon(kcon), fonction correlee avec\nl'angle\n                de friction. (doit etre > 0). Elle est atteinte pour kcon=1\n     'EXPV'   : Parametre d'ecrouissage du ca\u017dne (doit etre > 0)\n     'EPSI'   : Parametre d'ecrouissage du ca\u017dne (doit etre > 0)\n     'N   '   : Degre de non-associativite a l'apex (p = 0).\n                De 0 (incompressibilite dans toute la region du ca\u017dne)\n                a -1 (ecoulement associe pour p = 0)\n     'CCON'   : parametre d'evolution de la variable interne du ca\u017dne (positif\n     'EXPL'   : P)rametre d'evolution de la variable interne du ca\u017dne (positif\n     'PCAP'   : Valeur initiale de la contrainte limite isotrope  pcapf(kcap),\n                (intersection del la fermeture avec l'axe p)\n     'EXPR'   : parametre d'evolution de la variable interne de la fermeture\n                (positif)\n     'CCAP'   : parametre d'evolution de la variable interne de la fermeture\n                (positif)\n     'PHI '   : doit etre = 0, l'incompressibilite est imposee a l'intersect\n                ca\u017dne fermeture.\n                (parameter related with cap slope at cone-cap intersection)\n     'ALP '   : Shape of cap function. Intersection of cone-cap is located\n                at p = ALP * pcapf(kcap) (must be > 0)\n\n     Parameters for numerical differentiation (integration of const.\n     law and computation of consistent tangent moduli, see [3,4]) are fixed\n     in time-integration operator.\n\n   * References:\n\n     [1] Sture, S., Runesson, K. and Macari-Pasqualino, E.J.\n         ``Analysis and calibration of a three-invariant plasticity\n         model for granular materials'', Ing. Archiv, 59, 253-266, 1989.\n     [2] Perez-Foguet, A. and Huerta, A. ``Plastic flow potential for the\n         cone region of the MRS-Lade model'', J. Engr. Mech, Vol. 125,\n         pp. 364-367, 1999.\n     [3] Perez-Foguet, A., Rodriguez-Ferran, A. and Huerta, A. ``Numerical\n         differentiation for local and global tangent operators in\n         computational plasticity'', Comp. Meth. App. Mech. Engrg. Vol. 189,\n         pp. 277-296, 2000.\n     [4] Perez-Foguet, A., Rodriguez-Ferran, A. and Huerta, A.\n         ``Numerical differentiation for non-trivial consistent tangent\n         matrices: an application to the MRS-Lade model'', Int. J. Num. Met.\n         Engrg., Vol. 48, pp. 159-184, 2000.\n\n\n\n   Modele VMT_FEFP\n   ---------------\n\n   * Modele hyperelastoplastique, FeFp plasticite en deformation finie, voir\n     [1].\n\n   * Les equations de plasticite sont decrites en [2]. Le modele de plastici\n     est appele Von Mises - Tresca.\n\n   * Le modele hyperelastique de Hencky est utilise.\n\n   * Les parametres specifiques au modele sont :\n\n     'SIG0'  : Limite elastique\n     'SIGI'  : Contrainte ultime\n     'KISO'  : Module d'ecrouissage lineaire\n     'VELO'  : Parametre de vitesse\n     'MSHA'  : forme de la section deviatorique (1, Von Mises a 20, Tresca)\n\n     Les parametres du line search local (integration de l'equation\n     constitutive, voir [2]) sont definis dans l'operateur d'integration\n     temporel.\n\n     References:\n\n     [1] Simo, J.C., ``Numerical analysis of classical plasticity'', in P.G.\n         Ciarlet and J.J. Lions, editors, Handbook of Numerical Analysis, vol.\n         IV, Elsevier, Amsterdam, 1998.\n     [2] Perez-Foguet, A., Armero, F., On the formulation of closest-point\n         projection algorithms. Part II: Globally convergent schemes, Int. J.\n         Num. Meth. Engrg., 53:331-374, 2002.\n\n\n   Modele RHMC_FEFP\n   ----------------\n\n   * Modele hyperelastoplastique, FeFp plasticite en deformation finie (Voir\n     le modele VMT_FEF)\n\n   * Les equations de plasticite sont les memes que le modele de RH_COULOMB\n     en petite deformation.\n\n   * Le modele hyperelastique de Hencky est utilise.\n\n   * Les parametres specifiques au modele sont :\n\n   'COHE'   : Cohesion\n   'PHI '   : Angle de friction\n\n\n   Modele POWDER_FEFP\n   ------------------\n\n   * Modele hyperelastoplastique, FeFp plasticite en deformation finie (Voir\n     le modele VMT_FEF)\n\n   * Les equations de plasticite sont decrites en [1]. Le modele de plastici\n     est elliptique dans l'espace de l'invariant des contraintes et sa taille\n     et sa forme dependent de la densite relative.\n\n   * Le modele hyperelastique de Hencky est utilise.\n\n   * Les parametres specifiques au modele sont :\n\n     'SIGY'  : Limite elastique du materiau entierement compacte\n     'NNN1'  : Parametre du critere (dependence de l'ellipse avec la densite\n     'NNN2'  : Parametre du critere (dependence de l'ellipse avec la densite\n     'ETA0'  : Densite relative initiale\n\n\n   * References:\n\n   [1] Perez-Foguet, A., Rodriguez-Ferran, A. and Huerta, A. ``Consistent\n       tangent matrices for density-dependent plasticity models'', Int. J.\n       Ana. Num. Met. Geomech., Vol. 25, pp. 1045-1075, 2001.\n\n\n   Modele POWDERCAP_FEFP\n   ---------------------\n\n  * Modele hyperelastoplastique (Voir le modele POWDER_FEFP)\n\n  * Les parametres specifiques au modele sont :\n\n    'SIGY'  : Limite elastique du materiau entierement compacte\n    'NNN1'  : Parametre du critere (dependence de l'ellipse avec la densite)\n    'NNN2'  : Parametre du critere (dependence de l'ellipse avec la densite)\n    'ETA0'  : Densite relative initiale\n    'COHE'  : Cohesion du materiau entierement compacte\n    'PHI0'  : Angle de friction initial\n    'PHI '  : Angle de friction du materiau entierement compacte\n    'NNNC'  : Parametre du critere (dependance de la cohesion avec la densit\n\n\n   Modele BETON_INSA\n   -----------------\n\n   Ce modele fonctionne en contraintes  planes (2D ou coques minces) ,\n   et deformations planes ou axisymetrique\n\n   ('ALFA')   : rapport des contraintes ultimes en traction simple et\n                en compression simple (par defaut 0.1)\n   ('LCS ')   : contrainte ultime en compression simple\n                (par defaut YOUN*1.E-3)\n   ('EMAX')   : deformation de rupture en compression simple (par defaut\n                10*LCS/YOUN)\n   ('EPUT')   : deformation de rupture en traction simple (par defaut\n                3*ALFA*LCS/YOUN)\n   ('ICOM')   : choix du type de comportement a l'interieur du domaine\n                ultime\n                 ICOM = 0   :  comportement elasto-plastique ecrouissable\n                 ICOM = 1   :  comportement elastique\n                (par defaut 0)\n   ('FTC ')   : coefficient residuel de reduction du module de\n                cisaillement en cas de fissuration (compris entre 0. et\n                1., par defaut 0.1)\n\n   ('GFTR')   : energie de fissuration (si 'EPUT' n'est pas donnee\n                la valeur par defaut de 'GFTR' est 0.15 )\n                si GFTR est donnee il n'est pas necessaire de donner\n               'EPUT'\n\n   Modele ISS_GRANGE\n   -----------------\n\n   Il s'agit d'un modele d'interaction sol-structure developpe par\n   S.GRANGE (2008). Le modele d'origine est developpe dans\n   these[1]. Une modification sur le calcul des phenomenes de\n   plasticite et de decollement a ete apportee de maniere a en\n   faciliter la programation.\n\n   Le modele implante est utilisable exclusivement avec les elements\n   joint JOI1 en comportement orthotrope 3D. Pour comprendre\n   l'influence de chacun, il est recommande de se referer a la these\n   de S.GRANGE[1] (resume du modele page 77) et aux articles [2][3].\n\n   'DIAM'    :  diametre de la fondation (si circulaire)\n   'LX  '    :  longueur de la fondation dans la direction x\n                (si fondation filante ou rectangulaire)\n   'LY  '    :  longueur de la fondation dans la direction y\n                (si fondation filante ou rectangulaire)\n\n   'XA','XB','XC','XD','XE','XF':  parametres decrivant la forme\n                                   du critere de rupture\n   'QMAX'    :  capacite portante de la fondation\n   'A6  '    :  vitesse d'agrandissement de la surface de charge\n\n   'ETA3'    :  parametre de viscosite\n   'XTIM'    :  pas de temps pour le calcul dynamique\n\n   'A8  '    :  type de calcul\n                  si = 1 : decollement desactive\n                  sinon  : decollement active\n\n   'A9  '    :  type de fondation\n                  si = 1 : filante\n                  si = 2 : rectangulaire\n                  sinon  : circulaire\n\n   Les raideurs elastiques de la fondation (Kelz,Kelh,etc...) sont a\n   entrer comme les raideurs elastiques de l'element joi1 orthotrope\n   (KN,KS1,etc...). Il faut faire attention au changement d'axes\n   (local <-> ISS)!\n\n   * References:\n     [1] S. Grange(2008). Modelisation simplifiee 3D de l'interaction\n         sol-structure: application au genie parasismique.\n         Ph. D. thesis, INP Grenoble.\n         http://tel.archives-ouvertes.fr/tel-00306842/fr.\n\n     [2] S. Grange, P. Kotronis, J. Mazars (2009). A macro-element to\n         simulate 3D soil-structure interaction considering plasticity\n         and uplift. International Journal of Solids and Structures 46\n         3651-3663.\n\n     [3] S. Grange, P. Kotronis, J. Mazars (2009). A macro-element to\n         simulate dynamic Soil-Structure Interaction. Engineering\n         Structures 31 (2009) 3034-3046.\n\n\n   Modele RUP_THER\n   ----------------\n   Le modele RUP_THER est un modele de comportement en cisaillement\n   horizontal pour les rupteurs thermiques developpe par T.T.Huyen\n   Nguyen, en cours de these au LMT Cachan. Il est utilisable avec\n   les elements joints JOI1 orthotropes en 3D. Ce modele est concu\n   pour des sollicitations sismiques. Il tient compte de la\n   plastification des armatures d'acier contenues dans les rupteurs,\n   ainsi que de l'endommagement du beton dans lequel les rupteurs\n   sont ancres. Un phenomene d'hysteresis global est aussi considere.\n\n   Parametres concernant le comportement de l'acier :\n   'KA  '    : raideur en cisaillement horizontal de la section\n               totale de l'acier dans un rupteur (en N/m)\n   'YA0 '    : limite elastique de le l'acier (en N)\n   'ALPA', 'BETA'    : parametres de l'ecrouissage cinematique de\n                       l'acier (sans unite)\n\n   Parametres concernant le comportement du be\u00a9ton :\n   'KB  '    : raideur en cisaillement horizontal de la section\n               de beton (en N/m)\n   'YB0 '    : seuil d'endommagement du beton (en N.m)\n   'C1  ', 'D1  '    : parametres de l'endommagement du beton\n                       (sans unite)\n                       l'endommagement s'ecrit:\n                                   d = 1 - 1/(1 + C1*Y**D1)\n   'ALPB', 'BETB'    : parametres de l'ecrouissage cinematique\n                       du beton (sans unite)\n\n\n   Modele DP_SOL\n   -------------\n   Modele de plasticite Drucker-Prager avec loi d'ecoullement\n   non associe et ecrouissage non lienaire.\n\n     f(sig,q) = |sig_dev| - ((2/3)**0.5)*(SIGY - q(xi)) + ALPA*(tr(sig))\n     g(sig)   = DELT*|sig_dev| + GAMA*(tr(sig))\n\n     q(xi) = -(SIGI - SIGY)*(1 - exp(BETA*xi))\n\n     'SIGY'    Contrainte limite elastique\n     'SIGI'    Contrainte limite ultime a la saturation\n     'ALPA'    Pente du cone du critere DP\n     'GAMA'    1ere parametre de la loi d'ecoullement\n     'DELT'    2eme parametre de la loi d'ecoullement\n     'BETA'    vitesse de saturation\n\n   Modele IWPR3D_SOL\n   -------------\n   Modele de plasticit\u00e9 base sur le travaux de Prevost sur un modele\n   de nested yield surface la loi est composee de 10 surface de charge\n   \u00e0 ecrouissage lineaire. La loi peut reppresenter l'anisotropie\n   dans la phase plastique\n\n     s = dev(sig)    (partie deviatoire tenseur contrainte)\n     p = tr(sig)/3   (contrainte moyenne)\n\n     SURFACES DE CHARGE\n       f_i(sig,q) = |s - (p - c)*alp_i| + ((2/3)**0.5)*m_i*(p - c)R_i(theta_i)\n\n       i=1...10\n       m_i  angle du critere i dans le plan p-q (parametre materiaux)\n       c    cohesion\n       alp_i     back-stress du critere i\n       R_i       facteru R pour le critere i (anisotropie)\n       theta_i   angle de Lode critere i\n\n       o\u00f9:\n       R_i = [2k]/[(1+k)-(1-k)*cos(3*theta_i)]\n       cos(theta_i) = -(sqrt(6))*(n_i)\u00b3\n       n_i = (s - (p - c)*alp_i)/|s - (p - c)*alp_i|\n\n       k entre 1 et 0.75    pour k=1  no anuisotropie\n\n     ELASTICITE NON LINEAIRE\n\n       Ds = 2*G*De_el   (De_el increment du tensuer de deformation deviatoire el\n       Dp = K*De_vol_el (De_vol_el increment deformation volumique elastique)\n\n       G = G0*a*[(p-c)/(pref-c)]^N\n       K = K0*a*[(p-c)/(pref-c)]^N\n\n       et\n\n       K0 = E0/(3(1-2*nu))\n       G0 = E0/(2(1+nu))\n       E0  parametre materiau\n       N   parametre materiau (N=0 elasticit\u00e9 lineaire)\n                              N<1\n\n     LOI ECOULEMENT\n       Dep_pla = P_i*gam\n\n       avec\n\n       P_i = P_i' + P_i''*Id\n       P_i' = Df_i/Ds\n       P_i'' = A_i*[((eta/eta_car_i)\u00b2 - 1)/((eta/eta_car_i)\u00b2 + 1)]\n       eta = (sqrt(3/2*s:s))/p\n       eta_car_i  = eta_i_c   cos(3*theta_i) >=0\n                    eta_i_e   cos(3*theta_i) < 0\n\n       A_i          parametre materiau (compris entre 0 et 1)\n       eta_i_c      pente surface caracteristique en compression du critere i\n       eta_i_e      pente surface caracteristique en extension du critere i\n\n     LOI D' EVOLUTION DU BACK-STRESS\n       Dalp_i = 2/3H_i(theta_i)*mu*gam\n       mu     tensor determine a partir de la regle d'ecrouissage de Mroz\n\n       H_i = [((H_i_c - H_i_e)/2)cos(3*theta_i) + ((H_i_c + H_i_e)/2)]*[(p-c)/(p\n\n       H_i_c   Module plastique du critere i en compression\n       H_i_e   Module plastique du critere i en extension\n\n     Le parametres materiaux du modele sont:\n\n     'E0'      Parametre E0\n     'ALP0'    Parametre a\n     'C'       Cohesion c\n     'N1'      Parametre N\n     'PREF'    Pression de reference pref (il peut etre egal -1.)\n     'K1'      parametre k\n\n     'M1'   pente critere 1\n     'M2'   pente critere 2\n     'M3'   pente critere 3\n     'M4'   pente critere 4\n     'M5'   pente critere 5\n     'M6'   pente critere 6\n     'M7'   pente critere 7\n     'M8'   pente critere 8\n     'M9'   pente critere 9\n     'M10'  pente critere 10\n\n     'HC1'  Module plastique en compression critere 1\n     'HC2'  Module plastique en compression critere 2\n     'HC3'  Module plastique en compression critere 3\n     'HC4'  Module plastique en compression critere 4\n     'HC5'  Module plastique en compression critere 5\n     'HC6'  Module plastique en compression critere 6\n     'HC7'  Module plastique en compression critere 7\n     'HC8'  Module plastique en compression critere 8\n     'HC9'  Module plastique en compression critere 9\n\n     'HE1'  Module plastique en extension critere 1\n     'HE2'  Module plastique en extension critere 2\n     'HE3'  Module plastique en extension critere 3\n     'HE4'  Module plastique en extension critere 4\n     'HE5'  Module plastique en extension critere 5\n     'HE6'  Module plastique en extension critere 6\n     'HE7'  Module plastique en extension critere 7\n     'HE8'  Module plastique en extension critere 8\n     'HE9'  Module plastique en extension critere 9\n\n     'DA1'  Parametre A_i  critere 1\n     'DA2'  Parametre A_i  critere 2\n     'DA3'  Parametre A_i  critere 3\n     'DA4'  Parametre A_i  critere 4\n     'DA5'  Parametre A_i  critere 5\n     'DA6'  Parametre A_i  critere 6\n     'DA7'  Parametre A_i  critere 7\n     'DA8'  Parametre A_i  critere 8\n     'DA9'  Parametre A_i  critere 9\n\n     'E_C1'  pente surface caracteristique en compression critere 1\n     'E_C2'  pente surface caracteristique en compression critere 2\n     'E_C3'  pente surface caracteristique en compression critere 3\n     'E_C4'  pente surface caracteristique en compression critere 4\n     'E_C5'  pente surface caracteristique en compression critere 5\n     'E_C6'  pente surface caracteristique en compression critere 6\n     'E_C7'  pente surface caracteristique en compression critere 7\n     'E_C8'  pente surface caracteristique en compression critere 8\n     'E_C9'  pente surface caracteristique en compression critere 9\n\n     'E_E1'  pente surface caracteristique en extension critere 1\n     'E_E2'  pente surface caracteristique en extension critere 2\n     'E_E3'  pente surface caracteristique en extension critere 3\n     'E_E4'  pente surface caracteristique en extension critere 4\n     'E_E5'  pente surface caracteristique en extension critere 5\n     'E_E6'  pente surface caracteristique en extension critere 6\n     'E_E7'  pente surface caracteristique en extension critere 7\n     'E_E8'  pente surface caracteristique en extension critere 8\n     'E_E9'  pente surface caracteristique en extension critere 9\n\n     OBS: Le dernier critere (10) reppresente la surface ultime\n\n   Modele LIAISON_ACBE\n   -------------------\n\n   'PULO'    : relation d'adherence entre le glissement tangentiel\n               (abscisse) et la contrainte tangentielle d'adherence\n               (ordonnee) (type EVOLUTION)\n   'KN'      : raideur normale de l'element d'interface (valeur\n               recommandee 1.e15 Pa.m-1)\n   'KS'      : raideur tangentielle de l'element d'interface (valeur\n               recommandee egale a la pente initiale de la relation\n               d'adherence PULO)\n   'SECT'    : section de l'element d'acier sur lequel s'appuie\n               l'element d'interface\n\n   Modele OUGLOVA\n   --------------\n   Modele elasto-plastique endommageable de Lemaitre modifie afin de\n   tenir compte de la corrosion des armatures.\n\n   'SIGY'   : Contrainte limite elastique\n   'K'          : Pente \u00e9crouissage\n   'm'          : Exposant \u00e9crouissage\n   'Tc'         : Taux de Corrosion\n   'Dc'         : Endommagement critique\n\n   Modele NORTON\n   -------------\n   Modele de fluage de Norton uniaxial (pour les elements finis de poutres a fibre).\n   Les parametres a renseigner sont identiques a ceux de la version pour les elements massifs\n   (voir dans la categorie FLUAGE) :\n   'AF1'  'AF2'  'AF3'  'SMAX'\n\n   Modele POLYNOMIAL\n   -----------------\n   Modele de fluage polynomial uniaxial (pour les elements finis de poutres a fibre).\n   Les parametres a renseigner sont identiques a ceux de la version pour les elements massifs\n   (voir dans la categorie FLUAGE) :\n   'AF0'  'AF1'  'AF2'  'AF3'  'AF4'  'AF5'  'AF6'  'SMAX'\n\n   Modeles BLACKBURN et BLACKBURN_2\n   --------------------------------\n   Modeles de fluage de Blackburn uniaxiaux (pour les elements finis de poutres a fibre).\n   Les parametres a renseigner sont identiques a ceux de la version pour les elements massifs\n   (voir dans la categorie FLUAGE) :\n   'AF1'  'AF2'  'AF3'  'AF4'  'RF1'  'RF2'  'RF3'  'RF4'  'BF1'  'BF2'  'BF3'  'BF4'  'BF5'  'SMAX'\n\n   Modele LEMAITRE\n   ---------------\n   Modele de fluage de Lemaitre uniaxial (pour les elements finis de poutres a fibre).\n   Les parametres a renseigner sont identiques a ceux de la version pour les elements massifs\n   (voir dans la categorie FLUAGE) :\n   'AF1'  'AF2'  'AF3'  'AF4'  'KXF'  'KYF' 'SMAX'\n\n   FUSION :\n   --------\n\n   Pour tous les modeles de plasticite, l'option FUSION met a zero les\n   variables internes du modele si la temperature au point d'integration\n   est superieure a la temperature de fusion, donnee par :\n\n   'TFUS'     : FLOTTANT, temperature de fusion du materiau.\n\n\n  \n1.7 MECANIQUE ENDOMMAGEABLE \n--------------------------- \n   ------------------------------------------------------\n   | Noms des parametres pour un materiau ENDOMMAGEABLE |\n   ------------------------------------------------------\n\n  Modele MAZARS\n   -------------\n\n      Il s'agit d'un modele d'endommagement scalaire isotrope pour le\n    beton. (Ce modele est utilisable en non local). Voir la preocedure\n    IDENTI pour l'aide a l'identification des parametres.\n\n   'KTR0'    : seuil en deformation pour la traction (1.D-04)\n   'ACOM'    : parametre pour la compression (1.4)\n   'BCOM'    : parametre pour la compression (1900.)\n   'ATRA'    : parametre pour la traction (0.8)\n   'BTRA'    : parametre pour la traction (17000)\n   'BETA'    : correction pour le cisaillement (1.06)\n\n\n  Deux lois d'evolution complementaires sont proposees pour le\n  comportement en traction de facon a pouvoir utiliser une\n  regularisation de type \"HILLERBORG\" :\n\n  Pour -10 < ATRA <0  evolution exponentielle :\n                      DT=UN - KTR0/EPSTILD*EXP(BTRA*(KTR0-EPSTILD))\n  Dans ce cas on peut calculer BTRA en fonction de GF :\n                      BTRA=H*YOUN*KTR0/(GF-H(KTR0**2/(2*YOUN))) avec\n                                        H: Taille de l'element fini\n (Voir egalement le cas test mazars2\n                et http://web.univ-pau.fr/~clb/HDR/hdrnew.pdf)\n\n  Pour ATRA < -10    : evolution lineaire\n                 DT=UN - KTR0*(BTRA - EPSTILD)/EPSTILD/(BTRA - KTR0)\n                 BTRA represente alors la deformation equivalente pour\n                 laquelle l'endommagement atteint 1.\n\n\n   Modele UNILATERAL\n   -----------------\n\n      Il s'agit d'un modele d'endommagement scalaire isotrope a deux\n      variables d'endommagement avec gestion des refermetures de\n      fissures.\n\n   'YS1 '   : seuil en energie pour la traction (2.5 E-4 MPa)\n   'YS2 '   : seuil en energie pour la compression (1.5 E-3 MPa)\n   'A1  '   : parametre pour la traction (5000 MPa)\n   'B1  '   : parametre pour la traction (1.5)\n   'A2  '   : parametre pour la compression (10 MPa)\n   'B2  '   : parametre pour la compression (1.5)\n   'BET1'   : gere les deformations inelastiques en traction (1MPa)\n   'BET2'   : gere les deformations inelastiques en compression (-40MPa)\n   'SIGF'   : contrainte de refermeture de fissures (-3.5MPa)\n\n   Modele ROTATING_CRACK\n   ---------------------\n\n      Il s'agit d'un modele de type \"smeared crack\" dans lequel la\n    direction de fissuration change a chaque pas. Seul l'endommagement\n    du materiau par traction est decrit.\n\n   'EPCR'    : deformation au debut de l'endommagement dans un essai\n               de traction uniaxiale\n   'MUP '    : rapport du module tangent au  module d'Young, la courbe\n               de traction uniaxiale etant modelisee de facon bilineaire\n   Modele SIC_SIC\n   --------------\n\n     Il s'agit d'un modele d'endommagement scalaire anisotrope specifique\n     pour le composite ceramique SiC/SiC. Ce modele est utilisable\n     seulement en 3D massif. L'endommagement est decrit par trois\n     variables scalaires correspondant aux trois directions d'orthtropie\n     du materiau. Les donnees materiau sont fournies a l'aide de la\n     directive ORTHOTROPE. Les parametres qui suivent servent a decrire\n     les lois d'endommagement.\n\n     G1DC,G1Y0,G1YC,G1P:   pour la premiere direction\n     G2DC,G2Y0,G2YC,G2P:   pour la deuxieme direction\n     G3DC,G3Y0,G3YC,G3P:   pour la troisieme direction\n\n     AXEP: paramatre optionel qui specifie laquelle des trois directions\n     d'orthotropie coa\u00afncide avec l'epaisseur (doit etre compris\n     entre 1 et 3, par defaut = 3)\n\n    - Equations du modele:\n\n     Notations:\n\n        S     : tenseur des contraintes\n        E     : tenseur des deformations\n        C     : tenseur de compliance\n        Ki    : tenseurs caracterisitiques du materiau\n                (obtenus a partir du tenseur de Hook)\n        h(-Ei): fonction de Heavyside,\n                h=0 si -Ei<0\n                h=1 si -Ei>0\n        Pi    : tenseurs lies aux directions d'endommagement\n        di    : variables d'endommagement\n\n\n     Relation contraintes-deformations:\n\n      S= C x E - Ceff x E\n\n      Ceff= di*Ki-di*h(-Ei)(Pi x Ki x Pi)  (Somme sur i=1,3)\n\n\n     Force thermodynamique liee a l'endommagement:\n\n      Yi= 1/2*E x Ki x E\n\n      Yeq= <y1> + <y2> + <y3>\n                                (<x> = partie positive de x)\n\n     Lois d'evolution de l'endommagement:\n\n      di=DiDC*(1-EXP-(<(Yeq**1/2-GiY0)/GiYC>**GiP)) (i=1,3)\n\n\n     Ce modele a ete developpe a l'ONERA. Pour plus de detail sur le\n     modele et son idetification, voir les rapports du Project Brite Euram\n     BE-5462.\n\n     L'identification du modele a ete conduite sur un composite 2D\n     produit par la SEP. Les parametres des lois d'endommagement pour ce\n     composite sont:\n\n     GiDC    :  0.6        (i=1,3)\n     GiY0    :  1.3\n     GiYC    :  4\n     GiP     :  1\n\n   Modele VISCOHINTE\n   -----------------\n\n    Les lois du modele sont les meme que pour le modele HINTE. Seules\n    la variation de l'endommagement est modifiee.\n\n    Si   d2 <1 et Y<YR  alors :\n               d2/dt = k <w(Y) -d2>**M  , w(Y)<1\n               d1/dt = d2/dt\n                        sinon : d2 = 1\n\n    pour des taux d'endommagement faibles le modele se comporte comme\n    le modele HINTE\n\n    Les parametres sont :\n\n\n    'Y0'    : seuil d'endommagement\n    'YC'    : energie critique d'endommageme\n    'GAM1'  : parametres de couplage entre energies de cisaillement\n              et d'ouverture\n    'AL'    : gouverne la forme et le lieu de rupture en mode mixte\n    'NN'    : caracterise la plus ou moins grande fragilite de\n              l'interface (plus N est grand, plus l'interface\n              est fragile)\n    'DCRI'  : permet de simuler une rupture fragile(par defaut DCRI=1)\n    'KS'    : rigidites d'interface en cisaillement\n    'KN'    : rigidites d'interface normale\n    'MM'    : parametre de l'effet de retard ( par defaut=1)\n    'KK'    : temps caracteristique\n\n\n   Modele MVM\n   ----------\n\n   *   C'est un modele d'endommagement nonlocal isotrope pour les materiaux\n       quasifragiles. Les equations du modele sont\n       (voir les references [1] et [2]) :\n\n     --> Notation: I1   premier invariant du tenseur des contraintes\n                   J2   deuxieme invariant du tenseur des contraintes\n                   D    endommagement\n                   Y    variable d'etat local\n                   Ytil variable d'etat nonlocal\n                   B1   parametre du materiau\n                   B2   parametre du materiau\n                   Y0   taux d'endommagement\n                   k    rapport des resistances en compression et en traction\n                   nu   coefficient de Poisson\n\n     --> Loi des variables d'etat\n\n              (k-1)*I1)      1          (k-1)*I1        12*k*J2\n         Y = ------------ + ---*sqrt( ( -------- )^2 + (--------) )\n             (2*k*(1-2*))   2*k          1-2*nu         (1+nu)^2\n\n     --> Loi d'endommagement. Deux choix :\n\n                                        Y0*(1-A)\n         1. Loi exponentielle : D = 1 - -------- - B2*exp(-B1*(Ytil-Y0))\n                                         Ytil\n                                                   1\n         2. loi polynomiale : D = 1 - -----------------------------\n                                      1+B1*(Ytil-Y0)+B2*(Ytil-Y0)^2\n\n   Les parametres sont :\n\n\n   'Y0'    : seuil d'endommagement\n   'B1'    : parametre associe a la pente au sommet de la courbe contraintes\n             deformation\n   'B2'    : parametre associe a la contrainte residuelle de la courbe\n             contrainte deformation\n   'RATI'  : rapport des resistances en compression et en traction\n   'LOI '  : 1 si la loi d'endommagement est exponentielle\n             0 si la loi d'endommagement est polynomial\n\n   * References:\n\n   [1] Peerlings, R.H.J., de Borst, R., Brekelmans, W.A.M. and Geers,\n       M.D. (1998), Gradient-enhanced damage modelling of concrete\n       fracture, Mechanics of Cohesive-Frictional Materials, 3,\n       323-342.\n\n   [2] Rodriguez-Ferran A., Huerta A. (2000), Error estimation and\n       adaptivity for nonlocal damage models. International Journal of\n       Solids and Structures, 37, 7501-7528.\n\n  Modele SICSCAL :\n ----------------\n     Modele scalaire d'endommagement pour le composite tisse SiCf/SiC\n     developpe a l'ONERA avec 3 variables d'endommagement correspondant\n     a des fissures dans les plans perpendiculaires aux directions des\n     fibres, d1 et d2, et dans le plan du pli, d3.\n     La loi de comportement ainsi que sa validation sont detailles dans\n     la reference SEMT/LM2S/05-034. Les directions d'anisotropie sont\n     definies telles que les fibres sont selon les directions 1 et 2.\n     La loi de comportement s'exprime d'apres:\n     E = Seff S + Eth + Er + Es\n     Oa\u00b9 E est la deformation, S, la contrainte, Seff, le tenseur des\n     souplesses effectives. Eth, Er et Es sont respectivement la\n     contrainte thermique, residuelle et stockees.\n     Seff = S0 + (nui di Hi0) (somme sur  i=1,3)\n     S0 : Tenseur des souplesses non endommage.\n     Hi0 : Tenseur d' ordre 4 representant l'effet du domage di sur la\n     souplesse\n     Hi0 est calcule d'apres  S0 et les coefficients  HiN, HiHP and HiP\n     Les noms des parametres a definir sont: H1N, H1HP, H1P, H2N, H2HP,\n     H2P, H3N, H3P.\n     Les valeurs par defaut sont:\n     h1n=1, h1hp =0.7,  h1p=0.45\n     h2n=1, h2hp =0.7,  h2p=0.45\n     h3n=1, h3p=0.7\n     Les indices  d'activation nui sont calcules avec les parametres\n     DTAL, TER0, SIF1, SIF2, SIF3, AIF1, AIF2, AIF3.\n     Les valeurs par defaut sont SIF1=SIF2=SIF3 =3.10-4 et\n     AIF1=AIF2=AIF3=0.\n     Le calcul des deformations residuelles necessite les parametres:\n     ETA1, ETA2 et ETA3. Les valeurs par defaut sont ETA1=ETA2= 0.1,\n     ETA3=0.\n     Les lois d'evolution de l'endommagement sont exprimees avec les\n     parametres :DCT1, DCT2, DCT3, DCN1, DCN2, DCN3, YCT1, YCT2, YCT3,\n     YCN1,YCN2, YCN3, Y01T, Y02T, Y03T, Y01N, Y02N, Y03N, PT1, PT2,\n     PT3, PN1, PN2, PN3.\n     Les valeurs par defaut sont DCT1=DCT2=DCT3=DCN1=DCN2=DCN3=4,\n     YCT1=YCT2=YCT3=YCN1=YCN2=YCN3=1870,83(Pa**0.5),\n     Y01T=Y02T=31.6(Pa**0.5), Y03T=Y01N=Y02N=Y03N=173.2(Pa**0.5),\n     PT1=PT2=1.2, PT3=PN1=PN2=PN3=1.\n     Un parametre de couplage B doit aussi etre defini.\n     Sa valeur par defaut est B=1.\n\n   Modele SICTENS:\n   --------------\n     Modele pseudo-tensoriel d'endommagement pour le composite tisse\n     SiCf/SiC developpe a l'ONERA avec 5 variables d'endommagement\n     correspondant a des fissures dans les plans perpendiculaires aux\n     deux directions des fibres, d1 et d2, dans le plan du pli, d3 et\n     dans les plans perpendiculaires aux directions a + et - 45\u00c2\u00b0 des\n     fibres, d4 et d5. La loi de comportement ainsi que sa validation\n     sont detailles dans la reference SEMT/LM2S/05-034.\n     Les directions d'anisotropie sont definies telles que les fibres\n     sont selon les directions 1 et 2.\n     La loi de comportement s'exprime d'apres:\n     E = Seff S + Eth + Er + Es\n     Oa\u00b9 E est la deformation, S, la contrainte, Seff, le tenseur des\n     souplesses effectives. Eth, Er et Es sont respectivement la\n     contrainte thermique, residuelle et stockee.\n     Seff = S0 + (nui di Hi0) (somme sur i=1,5)\n     S0 : Tenseur des souplesses non endommage.\n     Hi0 : Tenseur d'ordre 4 representant l'effet du dommage di sur la\n     souplesse\n     Hi0 est calcule d'apres S0 et les coefficients HiN, HiHP et HiP.\n     Les noms des parametres a definir sont : H1N, H1HP, H1P, H2N,\n     H2HP, H2P, H3N, H3P, H4N, H4HP, H4P, H5N, H5HP, H5P.\n     Les valeurs par defaut sont:\n     h1n=1, h1hp =0.7,  h1p=0.45\n     h2n=1, h2hp =0.7,  h2p=0.45\n     h3n=1, h3p=0.7\n     h4n=1, h4hp =0.7,  h4p=1.2\n     h5n=1, h5hp =0.7,  h5p=1.2\n     Les indices d'activation nui sont calcules avec les parametres\n     DTAL, TER0, SIF1, SIF2, SIF3, SIF4, SIF5, AIF1, AIF2, AIF3,\n     AIF4, AIF5.\n     Les valeurs par defaut sont SIF1=SIF2=SIF3=SIF4=SIF5=3.10-4,\n     AIF1=AIF2=AIF3=0.5 et AIF4=AIF5=1.\n     Le calcul des deformations residuelles necessite la connaissance\n     des parametres ETA1, ETA2, ETA3, ETA4 et ETA5. Les valeurs par\n     defaut sont: ETA1=ETA2=0.1, ETA3=0, ETA4=ETA5=0.1\n     Les lois d'evolution de l'endommagement sont exprimees avec les\n     parametres :\n     DC1, DC2, DC3, DC4, DC5, YC1, YC2, YC3, YC4, YC5, Y01, Y02, Y03,\n     Y04, Y05, PY1, PY2, PY3, PY4, PY5.\n     Les valeurs par defaut sont :\n     DC1=DC2=DC3=DC4=DC5=4, YC1= YC2=YC3=1870,83 (Pa**0.5),\n     YC4= YC5=3464.1 (Pa**0.5), Y01=Y02=Y03=173.2 (Pa**0.5),\n     Y04=Y05=173.2 (Pa**0.5), PY1= PY2=PY3=1., PY4, PY5=1.2.\n     Les parametres de couplage B1, B2 and B3 doivent aussi etre\n     definis.\n     Leur valeur par defaut est fixee a  1.\n\n   Modele DAMAGE_TC\n   ----------------\n     Les donnees a introduire en plus des parametres d'elasticite\n     sont les suivantes:\n\n     'HLEN'   : longueur caracteristique  (cf. maillage)\n     'GVAL'   : energie de fissuration    (300)\n     'FTUL'   : Limite en traction        (3.6e6)\n     'REDC'   : Coefficient d'abaissement (1.7e6)\n     'FC01'   : Limite elastique en compression (-25e6)\n     'RT45'   : Rapport en comp. bi-axiale (1.18)\n     'FCU1'   : Contrainte au pic de compression (-42e6)\n     'STRU'   : Deformation ultime en compression (-0.015)\n     'EXTP'   : Deformation de reference en compression (-0.001)\n     'STRP'   : Contrainte de reference en compression (-22e6)\n     'EXT1'   : Deformation point 1 (-0.006)\n     'STR1'   : Contrainte point 1 (-35e6)\n     'EXT2'   : Deformation point 2 (-0.008)\n     'STR2'   : Contrainte point 2 (-22e6)\n     'NCRI'   : indicateur 1 : post pic en traction exponentiel\n                           2 : post pic en traction lineaire\n\n   Modele DESMORAT\n   ---------------\n     Les donnees a introduire en plus des parametres d'elasticite\n     sont les suivantes:\n\n     'K0'   : seuil en deformation pour la traction (5.D-05)\n     'A'    : Parametre d'endommagement A (5.D03)\n     'a'    : Parametre d'endommagement de l'ordre de grandeur des\n               deformations atteintes en compression (2.93D-4)\n     'etaC' : Parametre de sensibilite hydrostatique en compression (0.)\n     'etaT' : Parametre de sensibilite hydrostatique en traction (3.)\n     'Dc'   : Valeur critique de l'endommagement pour la gestion\n              de la rupture (0.9 a 0.999)\n\n     ne pas oublier de declarer dans la table de PASAPAS :\n           tab1.'MOVA'  = 'D11';\n\n\n    Modele DRUCKER_PRAGER_2\n    -----------------------\n      Les donnes a introduire en plus des parametres d'elasticite sont\n      les suivantes :\n\n      'GF'   : enargie de fissuration\n      'LTR'  : resistance en traction\n      'LCS'  : resistance en compression uniaxiale\n      'LBI'  : resistance en compression biaxiale\n      'SIGY' : limite d'elasticite en compression uniaxiale\n      'EPM'  : deformation au pic en compression uniaxiale\n      'EPU'  : deformation ultime en compression uniaxiale\n      'LCAR' : longueur caracteristique\n\n\n   Modele FATSIN\n   --------------\n\n   *   Ce modele d'endommagement nonlocal isotrope [1,2] est dedie aux mater\n       testes sous des chargements sinusoidaux de fatigue. En tout\n       point, les champs mecaniques de deplacement, de deformation et de cont\n       sont pseudo-sinusoa\u00afdaux et peuvent s'ecrire sous la forme generique :\n                   x= x_a * sin (2*pi/T * N/T)\n       oa\u00b9 x_a est l'amplitude de la grandeur x, T la periode et N le nombre d\n       Le modele permet de calculer l'endommagement atteint apres l'applicatio\n       de N cycles de chargements. Base sur l'elasticite isotrope (module d'Y\n       et Coeff. de Poisson Nu), l'integration temporelle de l'endommagement es\n       realisee a l'echelle macroscopique des cycles. Le chargement de la str\n       est statique de valeur l'amplitude de la sollicitation appliquee (positi\n       sans decrire le cycle de sinus.\n\n\n       Les equations du modele sont (voir les references [1] et [2]) :\n\n     --> Notation: Eps_eq  : Amplitude de deformation equivalente\n                   Eps_moy : Moyenne non-locale integrale de Eps_eq\n                             depend de la longueur caracteristique lc\n                             (cf. 'NLOC')\n                   Sig_i   :  Amplitude de contrainte principale\n                   <x>     :  Partie positive de x  ( <x>=0.5*[x+abs(x)])\n                   E_0     :  Module d'Young du materiau vierge (D=0)\n                   N       :  Nombre de cycles\n                   D       :  Endommagement atteint au cycle N\n\n\n     --> Deformation equivalente Eps_eq\n                        ___\n                       (\\    (    < Sig_i>   )   )\n         Eps_eq = sqrt ( \\   ( -----------   )^2 )\n                       ( /   (   E_0 * (1-D) )   )\n                       (/___                     )\n\n\n     --> Loi d'endommagement : Expression du taux d'endommagement par cycle dD/d\n                               d'expression generale\n\n\n\n                              Eps_moy ^ (BETA+1)    -   KTR0 ^ (BETA+1)\n           dD/dN = f(D) --------------------------------------------------------\n                                                   (BETA+1)\n\n     Deux choix possibles de la fonction f(D) :\n\n\n         1. Loi classique L2R ( Reference [3])\n\n\n           f(D) = C D^ALFA\n\n\n         2. loi phenomenologique L3R (Reference [1,2]) plus specifiquement\n            les betons bitumineux\n\n                     ALFA2        (   D   )                   ( (   D   )\n          f(D) = -------------- * ( ----- ) ^ (1-ALFA3) * exp ( (-------)^(ALFA3\n                  ALFA1 * ALFA3   ( ALFA2 )                   ( ( ALFA2 )\n\n\n   Les parametres sont :\n\n\n   'KTR0'    : seuil d'endommagement lie a la limite d'endurance\n   'BETA'    : parametre associe a la pente p de la droite de fatigue\n               (log(Nf) vs log(Eps_a)) suivant la relation (beta=-(p+1)\n   'LOI '    : 2 si la loi d'endommagement est L2R\n               3 si la loi d'endommagement est L3R\n   Dans le cas de la loi L2R\n   'ALFA'    : parametre lie a la concavite de la courbe d'endommagement\n   'C   '    : parametre associe a la duree de vie\n\n   Dans le cas de la loi L3R\n   'ALFA1'   : parametre associe a la duree de vie\n   'ALFA2'   : parametre pilotant le niveau d'endommagement pour lequel le taux\n               d'endommagement diminue puis re-augmente\n   'ALFA3'   : parametre lie a la concavite de la courbe d'endommagement\n\n   Remarque : Il est conseille d'attribuer la valeur 0. aux parametres non uti\n\n   * References:\n\n          References:\n     [1] D. Bodin, (2002), Modele d'endommagement cyclique - Application aux En\n         These de Doctorat. Ecole Centrale de Nantes. p. 187.\n         (http://www.lcpc.fr/fr/recherches/th_soutenues/index1.dml)\n\n\n     [2] D. Bodin, G. Pijaudier-Cabot, C. de La Roche, J.-M Piau and A. Chabot,\n         A Continuum Damage Approach to Asphalt Concrete Fatigue Modelling, Jour\n         Engineering Mechanics, ASCE, vol. 130 (6), pp. 700-708.\n\n     [2] Paas, R. H. J. W., Scheurs, P. J. G., and Brekelmans, W. A. M. (1993).\n         continuum approach to brittle and fatigue damage: Theory and numerical\n         procedures. Int. J. Solids Struct., 30~4!, 579-599.\n\n    Modele RICRAG\n    -----------------------\n      Ce modele [1,2] est \u00e0 utiliser pour des chargements monotones et\n      cyclique niveau de charge du fait de la prise en compte partielle\n      de l'effet unilateral. Il peut etre utilise avec l'approche\n      non-local telle qu'elle implantee Cast3M. Les parametres \u00e0 rentrer,\n      en plus des caracteristiques elastiques sont les suivants :\n\n      'FT'   : resistance equivalente en traction (3.6e6 )\n      'ALDI' : fragilite en traction uniaxiale    (1.0e-2)\n      'ALIN' : fragilite en compression uniaxiale (5.0e-4)\n      'GAM1' : module d'ecrouissage cinematique 1 (7.0e7 - 7.0e9)\n      'A1'   : module d'ecrouissage cinematique 2 (7.0e-7)\n\n   * References:\n     [1] B. Richard, F. Ragueneau, C. Cremona, L. Adelaide. (2010). Isotropic\n         continuum damage mechanics for concrete under cyclic loading: stiffness\n         recovery, inelastic strains and frictional sliding. Engineering Fractur\n         Mechanics. 77:1203-1223.\n\n     [2] L. Adelaide, B. Richard, F. Ragueneau, C. Cremona. (2010). Thermodynami\n         admissibility of a set of constitutive equations coupling elasticity,\n         isotropic damage and internal sliding. Comptes Rendus Mecanique. 338:1\n\n    Modele GLRC_DM\n    -----------------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n      'YOUF' : module d'Young \u00e9quivalent en partie flexion\n      'NUF ' : coefficient de Poisson \"quivalent en partie flexion\n      'GAMT' : param\u00e8tre endommagement de traction en membrane\n      'GAMC' : param\u00e8tre endommagement de compression en membrane\n      'GAMF' : param\u00e8tre endommagement en partie flexion\n      'SEUI' : seuil initial d'activation de l'endommagement\n      'ALF ' : coefficient de couplage des endommagement membrane/flexion\n\n      Il peuvent \u00eatre identifi\u00e9s \u00e0 l'aide de la proc\u00e9dure IDENTI de Cast3M\n      [1] \u00e0 partir de donn\u00e9es ayant une signification physique.\n\n   * References :\n     [1] B. Richard, N. Ile. (2012). Influence de la fissuration du b\u00e9ton\n         sur les mouvements transf\u00e9r\u00e9s - phase 2 : implantation dans Cast3M\n         d'un mod\u00e8le simplifi\u00e9 de b\u00e9ton arm\u00e9 et validation sur les \u00e9l\u00e9ment\n         de structures. Rapport technique CEA RT12-011/A.\n\n    Modele EFEM\n    -----------------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n      'FT  ' : Limite en traction\n      'XNX ' : CHAMELEM initial des normales aux fissures (selon la premiere coo\n      'XNY ' : CHAMELEM initial des normales aux fissures (selon la seconde coor\n      'IND1' : CHAMELEM (0 ou 1) ; 0 si non fissure, 1 sinon\n\n    Modele RICBET\n    -----------------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n      'FT  ' : r\u00e9sistance en traction (3.6E6)\n      'GAM1' : module d'\u00e9crouissage cin\u00e9matique 1 (5E9)\n      'A1  ' : module d'\u00e9crouissage cin\u00e9matique 2 (8E-6)\n      'ALDI' : fragilit\u00e9 en traction (6.0E-3)\n      'SREF' : contrainte de fermeture des fissures (-3.2E6)\n      'AF  ' : parametre critere compression 1 -\n               reponse compression biaxiale  (0.7)\n      'AG  ' : parametre critere compression 1 -\n               dilatance (0.6)\n      'BF  ' : parametre critere compression 2 -\n               reponse compression biaxiale (0.3)\n      'BG  ' : parametre critere compression 2 -\n               dilatance (0.45)\n      'AC  ' : evolution plasticit\u00e9 en compression 1 (3.2E10)\n      'BC  ' : evolution plasticit\u00e9 en compression 2 (700)\n      'SIGU' : contraintes asymptotique en compression (-4E6)\n      'FC  ' : contrainte d'activation de la plasticit\u00e9\n               en compression (6E6)\n\n   * References:\n     [1] B. Richard, F. Ragueneau (2012). 3D modelling of concrete for\n         earthquake analysis: damage mechanics and plasticity coupling.\n         WCCM 2012, Sao Paulo, Brazil.\n\n     [2] B. Richard, F. Ragueneau (2012). Continuum damage mechanics based\n         model for quasibrittle materials subjected to cyclic loadings:\n         formulation, numerical implementation and applications.\n         Engineering Fracture Mechanics. In press.\n\n    Modele RICCOQ\n    -----------------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n      'FT  ' : R\u00e9sistance en traction (3.6E6)\n      'FC  ' : Seuil initial en compression (10E6)\n      'EPUT' : d\u00e9formation limite en traction (according to the mesh)\n      'EPUC' : d\u00e9formation limite en compression (according to the mesh)\n\n   * References:\n     [1] B. Richard (2012). SERIES/ENISTAT Project. Preliminary\n         numerical time history analysis. CEA Technical report\n         RT-12-013/A.\n\n    Modele CONCYC\n    -----------------------\n      Les parametres \u00e0 rentrer, en plus des caracteristiques elastiques,\n      sont les suivants :\n\n      'NEND  ' : indicateur pour choisir la maniere de gerer l\n                        endommagement\n                                        = 1 : type RICRAG [1]\n                                        = 2 : consolidation modifiee [2]\n                                        = 3 : critere modifie [2]\n      'SIGT  ' : resistance en traction (3.6 MPa)\n      'ATRA  ' : parametre lie a l energie de fissuration (0.004)\n      'BTRA  ' : parametre lie la formulation de la loi d endommagement [2]\n                                        = si NEND = 1 : 0.0\n                                        = si NEND = 2 : 4.5\n                                        = si NEND = 3 : 0.31\n      'QP  ' : \"vitesse\" de refermeture de fissure (6.5)\n      'CF  ' : coefficient de frottement des fissures (2.89)\n\n   * References:\n     [1] B. Richard, F. Ragueneau, C. Cremona, L. Adelaide. (2010). Isotropic\n         continuum damage mechanics for concrete under cyclic loading: stiffness\n         recovery, inelastic strains and frictional sliding. Engineering Fractur\n         Mechanics. 77:1203-1223.\n\n     [2] M. Vassaux. (2014) Comportement m\u00e9canique des mat\u00e9riaux\n         quasi-fragiles sous sollicitations cycliques: de l\u2019exp\u00e9rimentation\n         num\u00e9rique au calcul de structures. These de Doctorat.\n         Ecole Normale Superieure de Cachan.\n\n\n   FUSION :\n   --------\n\n   Pour tous les modeles d'endommagement, l'option FUSION met a zero\n   les variables internes du modele si la temperature au point\n   d'integration est superieure a la temperature de fusion, donnee par :\n\n   'TFUS'     : FLOTTANT, temperature de fusion du materiau.\n\n\n  \n1.8 MECANIQUE FLUAGE \n-------------------- \n  --------------------------------------------------\n   | Noms des parametres pour un materiau en FLUAGE |\n   --------------------------------------------------\n\n   Les parametres qui suivent sont a definir EN PLUS des parametres\n   relatifs au comportement elastique. Les modeles de fluage disponibles\n   sont decrits ci-dessous, par l'equation modelisant le resultat d'un\n   essai de fluage a contrainte constante, avec les notations suivantes\n\n          ef   deformation de fluage equivalente\n          s    contrainte equivalente\n          t    temps\n\n   Seul les modeles polynomial, CCPL, X11 et SODERBERG sont decrits par le\n   developpement de la vitesse de fluage vf en fonction de la contrainte\n   equivalente.\n\n   Dans les calculs, l'hypothese d'un ecrouissage par la deformation\n   est faite.\n\n   Modele de fluage de NORTON :\n   ----------------------------\n          ef = AF1 * ( s**AF2 ) * ( t**AF3 )\n\n   Les parametres a introduire sont 'AF1 ','AF2 ','AF3 ', ainsi qu'une\n   contrainte de reference 'SMAX' (egale par defaut au module d'Young\n   fois 1.E-3).\n\n\n   Modele de fluage de BLACKBURN :\n   -------------------------------\n          ef = A * ( 1 - exp(-R*t) ) + B * t\n\n   avec   A  = AF1 * exp(AF2*s)  +  AF3 * s**AF4\n          R  = RF1 * exp(RF2*s)  +  RF3 * s**RF4\n          B  = BF1 * (sinh(BF2*s))**BF3  +  BF4 * exp(BF5*s)\n\n   Les parametres a introduire sont 'AF1 ' a 'AF4 ', RF1 ' a 'RF4 ',\n   et 'BF1 ' a 'BF5 ', ainsi qu'une contrainte de reference 'SMAX'\n   (egale par defaut au module d'Young fois 1.E-3).\n\n   Modele de fluage de BLACKBURN_2:\n   ---------------------------------\n          ef = A * ( 1 - exp(-R*t) ) + B * t\n\n   avec   A  = AF1 * exp(AF2*s)  +  AF3 * s**AF4\n          R  = RF1 * exp(RF2*s)  +  RF3 * s**RF4\n          B  = BF1 * (sinh(BF2*s))**BF3  +  BF4 * s**BF5\n\n   Les parametres a introduire sont 'AF1 ' a 'AF4 ', RF1 ' a 'RF4 ',\n   et 'BF1 ' a 'BF5 ', ainsi qu'une contrainte de reference 'SMAX'\n   (egale par defaut au module d'Young fois 1.E-3).\n\n\n   Modele de fluage RCC-MR pour acier 316-SS :\n   -------------------------------------------\n          ef = AF1 * ( s**AF2 ) * ( t**AF3 )     si t < TF\n     et   ef = BF1 * ( s**BF2 )                  si t > TF\n\n   avec   TF = TF1 * ( s**TF2 )\n\n   Les parametres a introduire sont 'AF1 ' a 'AF3 ','BF1 ', 'BF2 ',\n   'TF1 ', 'TF2 ', ainsi qu'une contrainte de reference 'SMAX' (egale\n   par defaut au module d'Young fois 1.E-3).\n\n   Modele de fluage RCC-MR pour acier 304-SS :\n   -------------------------------------------\n          ef = A1 * ( 1 - e**(-R*t) ) + A2 * ( 1 - e**(-S*t) )  + B * t\n\n   avec:  B  = BF1 * (sinh(BF2*s/BF3))**BF3\n          R  = RF1 * (sinh(RF2*s/RF3))**RF3\n          A1 = AF1 * B / R\n          S  = ( SF1 / RF1 ) * R\n          A2 = AF2 + AF3*s  si s > SF2 , 0. sinon\n\n   Les parametres a introduire sont 'AF1 ' a 'AF3 ','BF1 ' a 'BF3 ',\n   'RF1 ' a 'RF3 ', 'SF1 ','SF2 ', ainsi qu'une contrainte de reference\n   'SMAX' (egale par defaut au module d'Young fois 1.E-3).\n\n   Modele de fluage de LEMAITRE :\n   ------------------------------\n          ef = AF1 * ( X**AF2 + Y )\n\n   avec:  dX/dt = ( s / KXF )**( AF3 / AF2  ) * ( AF4**(1/AF2 ) )\n          dY/dt = ( s / KYF )**AF3 * AF4\n\n   Les parametres a introduire sont 'KXF ','KYF ','AF1 ','AF2 ','AF3 ',\n   'AF4 ', ainsi qu'une contrainte de reference 'SMAX' (egale par defaut\n   au module d'Young fois 1.E-3).\n\n   Modele de fluage POLYNOMIAL :\n   -----------------------------\n          vf = AF0 + AF1*s**AF2 + AF3*s**AF4 +AF5*s**AF6\n\n   Les parametres a introduire sont 'AF0 ','AF1 ','AF2 ','AF3 ','AF4 ',\n   'AF5 ','AF6 ', ainsi qu'une contrainte de reference 'SMAX' (egale par\n    defaut au module d'Young fois 1.E-3).\n\n   Modele de fluage CERAMIQUE :\n   ----------------------------\n    Au dessus de la temperature de transition , le materiau flue\n    selon la loi de Norton:\n         ef = AF1* ( s**AF2 ) * ( t**AF3 )\n\n    Les trois premiers parametres a introduire sont 'AF1 ','AF2 ','AF3 '\n    , ainsi qu'une  contrainte de reference 'SMAX'\n    (egale par defaut au module d'Young  fois 1.E-3).\n\n   En dessous de la temperature de transition , le materiau se comporte\n   selon le modele d'Ottosen :\n\n   ('LTR')    : limite en traction\n                (par defaut YOUN*1.2E-4)\n   ('GFTR')   : taux de restitution d'energie\n                (nomme aussi energie de fissuration)\n                (par defaut LTR*3.9E-5, mais cette valeur correspond\n                a des unites SI)\n   ('GS')     : module traduisant la perte de resistance au cisaillement\n                d'une fissure avec son ouverture (usuellement compris\n                entre 2 et 6 Mpa et par defaut YOUN*1.8E-4)\n   ('BTR')    : fraction non recouvrable de l'ouverture d'une fissure.\n                (par defaut 0.2)\n\n   Dans un deuxieme temps, il faut obligatoirement adjoindre au MCHAML\n   de sous-type CARACTERISTIQUES construit par l'operateur MATE, le\n   MCHAML resultat de l'operateur TAILLE applique au modele de calcul.\n\n   Par ailleurs en deformations planes et en axisymetrique on peut\n   definir en plus :\n\n   ('EPSR')   : deformation a rupture dans la direction normale au plan\n                de representation.\n\n  Les parametres specifiques au modele sont :\n\n    'TTRA'    :  Temperature de transition\n    'ENDG'    :  Deformation totale au dela de laquelle on a perte de\n                 la rigidite des elements en fluage\n\n    Modele de fluage de COMETE :\n    ----------------------------\n\n           ef = AF1 * s ** AF2 * t ** AF3\n              + BF1 * s ** BF2 * (BF3 ** BF5) * t ** BF4\n\n    Les parametres a introduire sont 'AF1 ' a 'AF3 ', BF1 ' a 'BF5 ',\n    ainsi qu'une contrainte de reference 'SMAX' (egale par defaut au\n    module d'Young fois 1.E-3).\n\n    Modele de fluage de CCPL :\n    ----------------------------\n\n           vf = (1 + AL1 * FII) * min (max(vf1,vf2) , vf3)\n              + DF1 * s ** DF2 * FII * DF3\n\n    avec :\n    vf1 = AF1 * s ** AF2 * AF3\n    vf2 = BF1 * s ** BF2 * BF3\n    Vf3 = CF1 * s ** CF2 * CF3\n\n    Les parametres a introduire sont 'AF1 ' a 'AF3 ', 'BF1 ' a 'BF3 ',\n    'CF1 ' a 'CF3 ', 'DF1 ' a 'DF3 ', 'AL1 ', 'FII 'ainsi qu'une\n    contrainte de reference 'SMAX' (egale par defaut au module d'Young\n    fois 1.E-3).\n\n     Modele de fluage de SODERBERG :\n     ----------------------------\n\n            ef = vs * t + EF * (1-exp(-R t))\n                  et\n            vs = (1 + AL1 * FII) * min (max(vf1,vf2) , vf3) +\n                      DF1 * s ** DF2 * FII * DF3\n\n     avec :\n     vf1 = AF1 * s ** AF2 * AF3\n     vf2 = BF1 * s ** BF2 * BF3\n     Vf3 = CF1 * s ** CF2 * CF3\n\n     EF  = (EF1 * exp (EF2 * s)) + EF3\n     R   = (RF1 + RF2 * s) ** RF3\n\n     Les parametres a introduire sont 'AF1 '   'AF3 ', 'BF1 '   'BF3 ',\n     'CF1 '   'CF3 ', 'DF1 '   'DF3 ', 'AL1 ', 'FII ', 'EF1 ', 'EF2 ', 'EF3 ',\n     'RF1 ', 'RF2 ', 'RF3 ', ainsi qu'une contrainte de reference 'SMAX'\n     (egale par defaut au module d'Young fois 1.E-3).\n\n    Modele de fluage de X11 :\n    -------------------------\n\n           vf = vs + (vp - vs) * exp(-ef/E0)\n\n    avec :\n    vp = vp0 * vpf\n    vs = vs0 * vsf\n\n    E0  = EP01 * TANH (EP02 * s)\n    vp0 = VP01 * SINH (VP02 * s)\n    vs0 = VS01 * SINH (VS02 * s)\n    vpf = VPF0 * exp (-VPF1 * FII) + (1 - VPF0)*exp(-VPF2 * FII)\n    vsf = (1 - VSF0)*exp(-VSF1 * FII) + VSF0\n\n    Les parametres a introduire sont 'EP01' a 'EP02', 'VP01' a 'VP02',\n    'VS01' a 'VS02', 'VPF0' a 'VPF2', 'VSF1' a 'VSF2', 'FII '\n    ainsi qu'une contrainte de reference 'SMAX' (egale par defaut au\n    module d'Young fois 1.E-3).\n\n\n  Modele de fluage de MAXWELL :\n  -----------------------------\n\n Le modele de fluage de MAXWELL generalise possede 4 branches\n obligatoires en plus de la branche purement elastique. Il peut\n avoir au maximum huit branches.\n Les donnees des quatre premieres branches sont donc obligatoires.\n\n Pour chaque branche les parametres a fournir sont le module\n d'elasticite 'EMi' et le temps de relaxation 'TRi'\n(i variant de 1 a 4,5,6,7 ou 8).\n Pour la branche au comportement elastique, seul le module 'EM0' est\n a fournir.\n\n La procedure IDENTI permet d'identifier les parametres du modele\n pour le comportement du beton selon les reglements EUROCODE 2 ou BPEL\n ou suivant le modele de fluage du LCPC.\n\n\n  Modele de fluage de MAXOTT :\n  -----------------------------\n\n Les parametres de ce modele de comportement sont les parametres du\n modele de MAXWELL et les parametres du modele OTTOSEN.\n\n\n Modele de fluage de KELVIN :\n ----------------------------\n\n Le modele de fluage de Kelvin possede 3 systemes de kelvin-voigt\n plus un ressort isole. Il faut donc les parametres suivants :\n YFi : module d'elasticite du ieme systeme\n TFi : temps caracteristique du ieme systeme\n Pour le ressort isole, son module d'elasticite est donne dans 'YOUN'\n\n\n   FUSION :\n   --------\n\n   Pour tous les modeles de fluage, l'option FUSION met a zero\n   les variables internes du modele si la temperature au point\n   d'integration est superieure a la temperature de fusion, donnee par :\n\n   'TFUS'     : FLOTTANT, temperature de fusion du materiau.\n\n\n  \n1.9 MECANIQUE PLASTIQUE-ENDOMMAGEABLE \n------------------------------------- \n   ----------------------------------------------------------------\n   | Noms des parametres pour un materiau PLASTIQUE-ENDOMMAGEABLE |\n   ----------------------------------------------------------------\n\n   Les parametres qui suivent sont a definir EN PLUS des parametres\n   relatifs au comportement elastique. Les modeles de plasticite\n   endommageable disponibles sont les suivants:\n\n   Modele d'endommagement triaxial P/Y :\n   -------------------------------------\n\n    -Loi elastoplastique:\n\n         ecrouissage isotrope (cf modele 'PLASTIQUE' 'ISOTROPE' )\n\n    -loi d'endommagement:\n\n         Pseudo porosite A:\n           A=(RHOf-RHO)/RHOf\n         avec :\n           RHO: densite du materiau\n           RHOf: densite du materiau lorsqu'on a\n                 commence a endommager ( lorsqu'on a atteint\n                 la courbe de debut d'endommagement pour la\n                 premiere fois)\n\n         Variable d'endommagement D:\n            D=f(A) f est une fonction entree par l'utilisateur\n\n         Fonction d'endommagement g(A):\n          Si A<0:\n            g(A)=1\n          Si A>0:\n            g(A)=1-D\n\n         Formulation du modele:\n          Phases de charge (A augmente):\n            SIGMA=SIGMA_PL.g(A)\n          Phases de decharge (A diminue):\n            Si A>0 :\n              SIGMA=SIGMA_PL.g(Amax)\n            Si A<0:\n              SIGMA=SIGMA_PL\n\n        avec:\n           SIGMA: tenseur des contraintes finales\n           SIGMA_PL: tenseur des contraintes issues du\n                     calcul elastoplastique\n           Amax: valeur maximale de A\n\n   'RHO'    : la densite initiale du materiau\n   'TRAC'   : mot cle suivi de :\n   NOMTRAC  : objet de type EVOLUTION donnant la courbe\n              de traction elasto-plastique du materiau\n   'EVOL'   : mot cle suivi de :\n   NOMEVOL  : objet de type evolution donnant la courbe de debut\n              d'endommagement du materiau , c'est a dire\n              le rapport P/Y ( P est la trace des contraintes\n              divisee par 3 et Y est la contrainte equivalente au\n              sens de Von Mises ) en fonction de la deformation\n              plastique equivalente.\n              Au dessus de cette courbe, il y a endommagement\n              du materiau, en dessous on n'endommage pas.\n    'COMP'  : mot cle suivi de:\n    NOMCOMP : objet de type evolution donnant la courbe\n              d'evolution de l'endommagement en fonction de la\n              pseudo porosite\n\n\n   Modele d'endommagement ductile de ROUSSELIER\n   --------------------------------------------\n\n   - Critere de plasticite F :\n      F = J2(SIG/RHO)-R(P)+B(BETA).D.EXP(SM/(RHO*SIG1))\n\n   - Fonction d'endommagement B(BETA) :\n      B(BETA)=SIG1.F0.EXP(BETA)/(1-F0+F0*EXP(BETA))\n\n   - Rapport de densite RHO :\n      RHO=(densite actuelle)/(densite initiale)\n      RHO=1/(1-F0+F0*EXP(BETA))\n\n   - Ecoulement plastique isotrope\n\n   - Variable d'endommagement BETA :\n     d BETA = d P .D.EXP(SM/(RHO*SIG1))\n\n   - Si f ( fraction volumique de cavites) > FC: SIG=0.D0\n\n   avec:  SIG = les contraintes\n          SM = tracer(SIG)/3 la contrainte moyenne\n          P = deformation plastique cumulee\n          R(P) = la courbe de traction du materiau sain\n\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n   'SIG1'   : parametre SIG1 intervenant dans le calcul de\n              l'endommagement\n   'D'      : parametre D intervenant dans le calcul de\n              l'endommagement\n   'F'      : parametre F0, fraction volumique initiale de cavites\n              dans le materiau\n   'FC'     : fraction volumique de cavites limite, au dela de\n              laquelle les contraintes et la rigidite du materiau\n              sont nulles\n\n   Modele d'endommagement ductile de GURSON modifie NEEDLEMAN TVERGAARD\n   --------------------------------------------------------------------\n    (GURSON2)\n   -----------\n    1er cas :\n    -----------\n\n   - Critere de plasticite F :\n      F = J2(SIG)**2-R(Pmat)**2.G_end=0\n      G_end=1+(Q.F_*)**2-2.Q.F_*.COSH(3.SMT/(2.R(Pmat))\n\n   - Fonction d'endommagement F_*\n      Si F<F_C : F_*=F\n      Sinon    : F_*=F_C+(F_U-F_C)/(F_F-F_C).(F-F_C)\n\n   - Deformation plastique cumulee dans la matrice Pmat\n     (1-F).R(Pmat).dPmat=SIG:dEP\n\n   - Fraction de cavite F\n      dF=dFg+dFn\n      dFg=(1-F)*trace(dEP)\n      dFn=BB.(dR(Pmat)+dSMT)+DD.dPmat\n   avec:\n     .Si (R(Pmat)+SMT)) depasse sa valeur maximale atteinte:\n       BB=FNS/(SNS*(2.*PI)**.5)*EXP(-.5*((R(Pmat)+SMT-SIGN)/SNS)**2)\n      sinon\n       BB=0\n     .Si Pmat depasse sa valeur maximale atteinte:\n       DD=FNE/(SNE*(2.*PI)**.5)*EXP(-.5*((Pmat-EPSN)/SNE)**2)\n      sinon\n       DD=0\n   oa\u00b9:\n      EP  : deformation plastique\n      Pmat: deformation plastique cumulee dans la matrice\n      SMT=trace(SIG)/3\n      SIG : contraintes\n      R(Pmat) : courbe de traction du materiau sain\n\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n   'Q'      : Q\n   'FU'     : F_U valeur ultime de F_* ( en general vaut 1/Q )\n   'FF'     : F_F valeur ultime de F, au dela le materiau est\n              rompu ( les contraintes sont nulles)\n   'FC'     : F_C valeur de F au dessus de laquelle les cavites\n              coalescent\n   'FNS'    : FNS valeur maximale de la fraction des cavites nuclees\n              controlee par les contraintes\n   'FNE'    : FNE valeur maximale de la fraction des cavites nuclees\n              controlee par les deformations\n   'SNS'    : SNS ecart autour de SIGN pour lequel on a nucleation\n              controle par les contraintes\n   'SNE'    : SNE ecart autour de EPSN pour lequel on a nucleation\n              controle par les deformations\n   'SIGN'   : SIGN contrainte moyenne pour laquelle apparait\n              la nucleation\n   'EPSN'   : EPSN deformation plastique moyenne pour laquelle\n              apparait la nucleation\n   'F0'     : fraction de cavites initiale\n\n       (voir DMT 96-566)\n\n\n      2eme cas : modification SRMA (1999) :\n      -------------------------------------\n\n     - Deformation plastique cumulee dans la matrice Pmat\n     (1-Fg).R(Pmat).dPmat=SIG:dEP\n\n     - Fraction de cavite F\n      dF=dFg+dFn\n      dFg=(1-Fg)*trace(dEP)\n      dFn=BB.(dR(Pmat)+dSMT)+DD.dPmat\n\n     -contrainte dans le materiau\n     SMT=(1-F).K.(((1-Fg)/(1-F0)/RHO)-1)\n\n   'SRMA'     : valeur 1. pour tenir compte de la modification\n\n\n   Modele d'endommagement quasi-fragile de DRAGON\n   ----------------------------------------------\n\n   - Notations\n       S: tenseur des contraintes\n       E: tenseur des deformations\n       I: tenseur identite\n       D: tenseur d'endommagement (variable interne)\n       L,M: coefficients de Lame\n       A,Bt,G,C0,C1,B: coefficients du materiau\n       E+: tenseur des deformations positives\n       dl: pseudo-multiplicateur plastique\n\n   - Equations du modele\n\n     Relation contrainte - deformation :\n       S = L*(trE)*I + 2*M*E + A*[tr(E.D)*I + (trD)*I]\n         + 2*Bt*(E.D + D.E) + G*D\n\n     Force thermodynamique liee a l'endommagement :\n       F = -G*E - 2*Bt*(E.E) - A*(trE)*E\n\n     Critere d'endommagement :\n       f(F,D) = SQRT[1/2 (G*E+):(G*E+)] - B*(G*E+):D - (C0 + C1*trD) = 0\n\n     Loi d'evolution : dD = dl*df/dF\n\n   - Les donnees a introduire sont :\n\n   'ALFA', 'BETA','g','C0','C1','B' : coefficients du materiau.\n\n   Modele elastique plastique endommageable ENDO_PLAS\n   --------------------------------------------------------------------\n\n    Les donnees a introduire en plus des parametres d'elasticite sont les\n    suivantes:\n\n   'AC'  : Parametre de la partie endommagement pour la compression (asymptote\n           finale)\n   'AT'  : Parametre de la partie endommagement pour la traction (asymptote\n           finale)\n   'BC'  : Parametre de la partie endommagement pour la compression (courbe\n           post-pic)\n   'BT'  : Parametre de la partie endommagement pour la traction (courbe post\n           pic)\n   'EPD0': seuil d'endommagement en deformation pour la traction\n   'RC'  : Maximum des contraintes effectives en compression pour la plasticite\n   'RT'  : Maximum des contraintes effectives en traction pour la plasticite\n   'P'   : Parametre de la partie plasticite pour la compression\n   'AH'  : Parametre de la partie plasticite (valeur recommandee 7.D-05)\n   'BH'  : Parametre de la partie plasticite pour la compression\n   'CH'  : Parametre de la partie plasticite pour le confinement\n   'GAMA': Parametre de la partie plasticite (valeur recommandee 0.99)\n   'ALFA': Parametre de la partie plasticite (valeur recommandee 0.5)\n   'A'   : Parametre de la partie plasticite pour le confinement (seuil\n           d'apparition de la plasticite)\n   'K0'  : Parametre pour la partie plasticite (valeur recommandee 0.1)\n\n\n   FUSION :\n   --------\n\n   Pour tous les modeles plastiques-endommageables, l'option FUSION met\n   a zero les variables internes du modele si la temperature au point\n   d'integration est superieure a la temperature de fusion, donnee par :\n\n   'TFUS'     : FLOTTANT, temperature de fusion du materiau.\n\n\n  \n1.10 MECANIQUE VISCO-PLASTIQUE \n------------------------------ \n   --------------------------------------------------------\n   | Noms des parametres pour un materiau VISCO-PLASTIQUE |\n   --------------------------------------------------------\n\n   Les parametres qui suivent sont a definir EN PLUS des parametres\n   relatifs au comportement elastique. Les modeles de viscoplasticite\n   disponibles sont les suivants:\n\n   Modele viscoplastique de CHABOCHE :\n   -----------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations    : S   tenseur des contraintes\n                      Sy  limite d'elasticite\n                      Ai  variable d'etat d'ecrouissage cinematique\n                      Xi  ecrouissage cinematique\n                      q   variable d'etat d'ecrouissage isotrope\n                      R   ecrouissage isotrope\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      J2  deuxieme invariant du tenseur deviatorique\n                      <a> partie positive de a\n\n   --> Critere      : F = J2 (S-X) - (Sy + R)\n\n   --> Lois d'etat  : Xi = 2/3*A*C*Ai\n                      R  = b*Q*q\n\n   --> Ecoulement   : dp = <F/K>**N\n                    : dEP = 3/2 * dp * < S-X > / J2(S-X)\n\n   --> Ecrouissages : dAi = dEP - C*Ai*dp\n                      dR  = (1 - b*q)*dp\n\n\n   On donne a titre indicatif les valeurs des parametres du modele\n   pour un acier 316L a 20\u00b0C (voir aussi exemples).\n\n   Parametre :                                         Valeurs Acier 316\n   -----------                                         -----------------\n   Loi d'evolution du seuil :\n   'SIGY'    : valeur initiale de la limite elastique        82 MPa\n   'N   '    : exposant de la loi de viscosit\u00e9               24\n   'K   '    : coefficient de viscosit\u00e9                      151 MPa\n\n   Lois d'ecrouissages :\n   'A   '    : coefficient d'ecrouissage cinematique         58 MPa\n   'C   '    : terme de rappel d'ecrouissage cinematique     2800\n   'B   '    : coefficient d'ecrouissage isotrope            8\n   'Q   '    : ecrouissage isotrope a saturation             60 MPa\n\n\n   Elements d'identification des noms de composantes des variables internes\n   en mode tridimensionnel :\n\n   Variable    Nom de composante     Description\n   --------    -----------------     -----------\n   Ai          AXX, AYY... AYZ       Variable d'ecrouissage cinematique\n   EP          EIXX, EIYY... EIYZ    Deformation viscoplastique\n   p           EPSE                  Deformation plastique cumulee\n   q           QQ                    Variable d'ecrouissage isotrope\n\n\n   Reference :  J. Lemaitre, J.-L. Chaboche, \"Mecanique des materiaux solides\",\n   -----------  Dunod, 2e edition, 1996.\n\n\n\n   Modele viscoplastique de GUIONNET :\n   ------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      X   variables d'ecrouissage cinematique\n                      ai  variables internes ( i=2,4 )\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      p1  dp1 = dp mais p1=0 a chaque inversion de\n                          charge\n                      pI  valeur de p1 a l'inversion de charge\n                      J2  deuxieme invariant du tenseur deviatorique\n                      n   normale au critere F\n                      t   temps\n                      <a> partie positive de a\n                      x.y produit scalaire de x par y\n\n   --> Critere     :  F = J2 (S-X) = R - KK\n\n   --> Ecrouissages:  dX  =M* p1**(M-1) * [ 2/3 *(A*a2 + a1* EP.n)\n            et              - ( C1 -C*a2)* X.n ] *dEP\n                            - ( C0*< pI-P1M0 > + C*a4 )*X*dp\n       ecoulement           - G * J2(X)**R * X*dt\n                      R   = R0*(1-CD) + R0*CD*a2\n                      KK  = K *(1+CK*a2)\n                      dEP = 3/2 * < F/KK >**N * n\n       si p1 > pI :   da2 = da4 = NN * p1**(NN-1) * dp\n       si p1 < pI :   da2 = C2*(Q * pI**NN  -a2) * dp - G1 * a2**R1 *dt\n       si p1 < pI :   da4 = - BETA*a4*dp/p\n\n\n   Il convient de se rapporter a la note CEA -N-2612 pour de plus\n   amples renseignements. On donne a titre indicatif les valeurs des\n   parametres pour un acier 316L a 600\u00c2\u00b0C.\n\n   Les donnees a introduire sont les suivantes :\n                                                       Valeurs Acier 316\n   Loi d'evolution du seuil :                          -----------------\n   'N   '    : exposant du seuil de viscoplasticite          20\n   'K   '    : facteur initial de normalisation du seuil     10 MPa\n   'CK  '    : constante dans la loi d'evolution de K        3.87\n   'R0  '    : valeur initiale de la limite elastique        80 MPa\n   'CD  '    : constante dans la loi d'evolution de R        0.\n\n   Loi d'evolution du centre X :\n   'A   '    : coefficient de ALPHA2                         15000 MPa\n   'M   '    : exposant de la deformation plastique ( <1 )   0.8\n   'A1  '    : coefficient de la deformation plastique       200000 MPa\n   'C   '    : coefficient de ALPHA4                         40\n   'C1  '    : coefficient du terme de rappel                180\n   'C0  '    : reglage pour deformation progressive          0.\n   'P1M0'    : seuil pour terme de reglage\n   'G   '    : coefficient du terme de restauration          1.5E-10 /s\n   'R   '    : exposant du terme de restauration             4\n\n   Loi d'evolution des variables internes ALPHA2 et ALPHA4 :\n   'NN  '    : exposant de la deformation plastique          0.075\n   'C2  '    : coefficient de la deformation plastique       4\n   'Q   '    : coefficient de la deformation plastique       3.43\n   'G1  '    : coefficient du terme de restauration          1.5E-6\n   'R1  '    : exposant de ALPHA2                            4.\n   'BETA'    : coefficient de ALPHA4                         0.4\n\n\n\n   Modele viscoplastique ONERA (Chaboche unifie) :\n   -----------------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      Xi  variables d'ecrouissage cinematique (i=1 ou 2)\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      q   variable isotrope de la surface memoire en\n                          deformation\n                      Y   variable cinematique de la surface memoire en\n                          deformation\n                      I2  deuxieme invariant du tenseur\n                      J2  deuxieme invariant du tenseur deviatorique\n                      n   normale au critere F\n                      nn  normale au seuil G\n                      t   temps\n                      T   temperature\n                      <a> partie positive de a\n                      x.y produit scalaire de x par y\n                      X   = X1     dans le cas d'un seul centre\n                            X1+X2  dans le cas de deux centres\n\n\n   --> Critere     :  F  = J2(S-X) - R' - KK\n              avec :  R' = ALFR * R\n\n   --> Ecrouissages:  dXi =2/3 * Ai*Ci*dEP  - Ci*Xi*p'*dp\n                            - ( J2(Xi)/BETi )**(Ri-1) * Xi * dt (i=1-2)\n                      si BETi non nul, sinon :\n                      dXi =2/3 * Ai*Ci*dEP  - Ci*Xi*p'*dp (i=1-2)\n              avec :  p' = PHI+(1-PHI)* e** (-B*p)\n\n                      dp = < F/K' >**N * e**(ALF* < F/K' >**(N+1))\n              avec :  K' = K0 + ALFK * R\n\n                      dR  = B*(Q - R)*dp + GAMA*Sign(QR-R)*|QR-R|**M *dt\n\n   --> Ecoulement  :  dEP = 3/2 * dp * < S-X > / J2(S-X)\n\n   --> Memoire en     G   = I2 (EP-Y) - q < 0\n       deformation    dQ  = 2*MU*(QMAX-Q)* dq + dQ/dT.dT\n       inelastique :  dq  = ETA * < n.nn > * dp\n                      dY  = (3/2 ** 0.5) * (1-ETA) * < n.nn > * nn*dp\n                      QR  = Q - QSTA * ( 1 - ((QMAX-Q)/QMAX)**2)\n\n   La valeur initiale de Q doit \u00eatre fournie en entr\u00e9e de PASAPAS.\n   Par defaut, sa valeur est 0.\n\n\n   On donne a titre indicatif les valeurs des parametres du modele\n   pour un acier 316L a 600\u00b0C :\n\n   Parametre :                                         Valeurs Acier 316\n   -----------                                         -----------------\n   Loi d'evolution du seuil :\n   'KK  '    : valeur initiale de la limite elastique        10 MPa\n   'N   '    : exposant de la loi de viscosit\u00e9               24\n   'K0  '    : coefficient de viscosit\u00e9                      116 MPa\n   'ALFK'    : coefficient d'evolution isotrope de K         1.5\n   'ALFR'    : coefficient d'evolution isotrope du seuil     0.35\n   'ALF '    : coefficient de viscosite                      2.E6\n\n   Loi d'evolution des centres X1 et X2 :\n   'A1  '    : coefficient de la deformation plastique       67.5 MPa\n   'C1  '    : coefficient du terme de rappel                1300\n   'BET1'    : facteur de normalisation pour la restauration 4807 MPa\n   'R1  '    : exposant du terme de restauration             4\n   'A2  '    : coefficient de la deformation plastique       80 MPa\n   'C2  '    : coefficient du terme de rappel                45\n   'BET2'    : facteur de normalisation pour la restauration 58480 MPa\n   'R2  '    : exposant du terme de restauration             4\n   'PHI '    : coefficient multiplicatif du terme de rappel  1.\n\n   Loi d'evolution de l'ecrouissage isotrope :\n   'B   '    : coefficient d'ecrouissage isotrope            12\n   'GAMA'    : coefficient de l'effet de restauration        2.E-7\n   'M   '    : exposant du terme de restauration             2\n\n   Loi d'evolution de la memoire de la deformation plastique :\n   'QMAX'    : valeur maximale de Q                          455 MPa\n   'QSTA'    : valeur stabilisee de Q                        200 MPa\n   'MU  '    : coefficient de la loi d'evolution de Q        19\n   'ETA '    : facteur liant q a la deformation plastique    0.06\n\n   Parametre optionnel :\n   'QT'      : courbe d'evolution de Q(0) en fonction de la\n               temperature (objet de type EVOLUTION).\n\n   Initialisation de la variable interne Q :\n   Q(0)      : 30 MPa (acier 316)\n\n\n   Elements d'identification des noms de composantes des variables internes\n   en mode tridimensionnel :\n\n   Variable    Nom de composante     Description\n   --------    -----------------     -----------\n   Xi          XiXX, XiYY... XiYZ    Ecrouissage cinematique i\n   Y           GPXX, GPYY... GPYZ    Variable cinematique de la surface memoire\n   EP          VIXX, VIYY... VIYZ    Deformation viscoplastique\n   p           EPSE                  Deformation plastique cumulee\n   R'          RR                    Ecrouissage isotrope\n   Q           QQQ                   Parametre stabilisation ecrouissage isotrope\n   q           QQ                    Variable isotrope de la surface memoire\n\n\n   Remarque 1 : Pour initialiser la variable Q, il convient de creer\n   ------------ un champ par element de variables internes du modele,\n                dont la composante 'QQQ' a la valeur Q(0).\n                Ce champ doit etre passe en argument de la procedure\n                PASAPAS (voir notice PASAPAS).\n\n   Remarque 2 : La donn\u00e9e du paramatre optionnel 'QT' ne permet pas\n   ------------ de s'affranchir de l'initialisation de la variable Q.\n\n   Reference :  D. Nouailhas, \"Mod\u00e9lisation de l'\u00e9crouissage et de la\n   -----------  restauration en viscoplasticit\u00e9 cyclique\",\n                Revue de Physique Appliqu\u00e9e, 23 (1988) 339-349.\n\n\n\n   Modele viscoplastique de OHNO :\n   -------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      Xi  variables d'ecrouissage cinematique (i=1 ou 2)\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      q   variable isotrope de la surface memoire en\n                          deformation\n                      Y   variable cinematique de la surface memoire en\n                          deformation\n                      I2  deuxieme invariant du tenseur\n                      J2  deuxieme invariant du tenseur deviatorique\n                      n   normale au critere F\n                      nn  normale au seuil G\n                      t   temps\n                      <a> partie positive de a\n                      x.y produit scalaire de x par y\n                      X   = X1     dans le cas d'un seul centre\n                            X1+X2  dans le cas de deux centres\n                      RR = ALFR * R\n                      K  = K0 + ALFK * R\n                      Q(0)=Q0\n\n\n   --> Critere     :  F = J2(S-X) - RR - KK\n   --> Ecrouissages:\n      dXi =2/3 * Ai*Ci*dEP  - Ci*p'*< dEP:Ki >*(J2(Xi)/LIMi)**EXPi\n                            - ( J2(Xi)/BETi )**(Ri-1) * Xi * dt (i=1-2)\n                      si BETi non nul, sinon :\n                      dXi =2/3 * Ai*Ci*dEP  - Ci*Xi*dp' (i=1-2)\n              avec :  p' = PHI+(1-PHI)* e** (-B*p)\n\n                      LIMi = Ai/p' (i=1 ou 2)\n\n                      Ki = Xi / J2(Xi) (i=1 ou 2)\n\n                      dp = < F/K >**N * e**(ALF* < F/K >**(N+1))\n\n                      dR  = B*(Q - R)*dp + GAMA*Sign(QR-R)*|QR-R|**M *dt\n\n   --> Ecoulement  :  dEP = 3/2 * dp * < S-X > / J2(S-X)\n\n   --> Memoire en     G   = I2 (EP-Y) - q < 0\n       deformation    dQ  = 2*MU*(QMAX-Q)* dq\n       inelastique :  dq  = ETA * < n.nn > * dp\n                      dY  = (3/2 ** 0.5) * (1-ETA) * < n.nn > * nn*dp\n                      QR  = Q - QSTA * ( 1 - ((QMAX-Q)/QMAX)**2)\n\n   La valeur initiale de Q est Q0 et doit \u00eatre initialis\u00e9e (voir ci-dessous).\n\n\n   Ce modele s'inspire du modele viscoplastique ONERA de Chaboche\n   On donne a titre indicatif les\n   valeurs des parametres pour un acier 316L a 600\u00c2\u00b0C.\n\n   Les donnees a introduire sont les suivantes :\n                                                       Valeurs Acier 316\n   Loi d'evolution du seuil :                          -----------------\n   'N   '    : exposant du seuil de viscoplasticite          24\n   'KK  '    : valeur initiale de la limite elastique        10 MPa\n   'K0  '    : facteur initial de normalisation du seuil     116 MPa\n   'ALFK'    : coefficient d'evolution isotrope de K         1.5\n   'ALFR'    : coefficient d'evolution isotrope du seuil     0.35\n   'ALF '    : coefficient de viscosite                      2.E6\n\n   Loi d'evolution des centres X1 et X2 :\n   'A1  '    : coefficient de la deformation plastique       67.5 MPa\n   'C1  '    : coefficient du terme de rappel                1300\n   'BET1'    : facteur de normalisation pour la restauration 4807 MPa\n   'R1  '    : exposant du terme de restauration             4\n   'A2  '    : coefficient de la deformation plastique       80 MPa\n   'C2  '    : coefficient du terme de rappel                45\n   'BET2'    : facteur de normalisation pour la restauration 58480 MPa\n   'R2  '    : exposant du terme de restauration             4\n   'PHI '    : coefficient multiplicatif du terme de rappel  1.\n   'EXP1'    : exposant du terme de rappel                   2.\n   'EXP2'    : exposant du terme de rappel                   2.\n\n   Loi d'evolution de l'ecrouissage isotrope :\n   'B   '    : coefficient d'ecrouissage isotrope            12\n   'GAMA'    : coefficient de l'effet de restauration        2.E-7\n   'M   '    : exposant du terme de restauration             2\n\n   Loi d'evolution de la memoire de la deformation plastique :\n   'QMAX'    : valeur maximale de Q                          455 MPa\n   'QSTA'    : valeur stabilisee de Q                        200 MPa\n   'MU  '    : coefficient de la loi d'evolution de Q        19\n   'ETA '    : facteur liant q a la deformation plastique    0.06\n\n + Initialisation de la variable interne Q : Q = Q0 = 30 MPa (acier 316)\n   Pour cela, il convient de creer un champ par element de variables\n   internes a une composante de nom 'QQ' et de valeur Q0. Ce champ\n   sera passe dans la table argument de PASAPAS.\n\n\n   Modele viscoplastique endommageable de LEMAITRE :\n   -------------------------------------------------\n   Notation :\n             S : tenseur des contraintes\n        dev(S) : deviateur du tenseur des contraintes\n         tr(S) : trace du tenseur des contraintes\n         J0(S) : contrainte principale maximale\n           Seq : contrainte equivalente de VON MISES\n             p : deformation inelastique cumulee\n             D : variable d'endommagement\n          X(S) : contrainte equivalente de fluage\n\n   Les equations du modele sont :\n   dEP = (3/2) * dp * (dev(S) / Seq)\n   dq  = dp * (1 - D)\n   dq  = ( Seq/((1 - D) * KK * (q**(1/M))) ) ** N\n   dD  = (< X(S)/A > ** R) * ((1 - D)**-k) avec k fonction de <X(S)>\n   X(S)= ALP1 * J0(S) + BLP1 * (tr(S)/3) + (1 - ALP1 - BLP1) * Seq\n   <y> = 0 si y < 0 ; <y> = y si y > 0\n\n   Les donnees a introduire sont les suivantes :\n   N,M,KK : parametres definissant la loi de fluage\n   A,R    : parametres definissant la loi d'evolution du dommage D\n   ALP1,BLP1 : parametres definissant la contrainte equivalente de\n               fluage X(S)\n   EVOL      : mot-cle suivi de :\n   NOMEVOL   : courbe definissant l'evolution du parametre k avec la\n               contrainte equivalente de fluage X(S) .\n               Cette courbe est constituee par un objet de type\n               EVOLUTIO, avec en abscisse X(S) et en ordonnees k.\n               Si k est constant, definir une evolution constante\n   SMAX : contrainte de reference(egale par defaut au module d'Young\n          fois 1.E-3)\n   REMARQUE QUAND LE MATERIAU DEPEND DE LA TEMPERATURE T\n   +++++++++++++++++++++++++++++++++++++++++++++++++++++\n   si les listes de temperatures definissant l'evolution de certains\n        des parametres N,M,KK,A,R,ALP1,BLP1,EVOL sont identiques\n   alors\n                  pour T = (1 - teta)*T1 + teta*T2\n                  la vitesse des variables internes V vaut :\n                  V(T) = (1 - teta)*V(T1) + teta*V(T2)\n                  V(Ti) etant la vitesse calculee avec la valeur\n                  des parametres obtenue pour Ti    (i=1,2)\n   sinon\n                  V(T) se calcule avec la valeur des parametres\n                  obtenue pour T\n   finsi\n\n   Modele viscoplastique parfait:\n   ------------------------------\n     La variation de la deformation viscoplastique est donnee par\n       devp/dt = ( (s-sigy) / k)**N * (s'/s)\n     Les donnees materiau sont donc\n\n      SIGY : limite elastique\n      K    : constante de viscosite\n      N    : exposant de la loi\n     Le modele marche meme lorsque SIGY = 0\n\n   Modeles viscoplastiques pour poudre :\n   -----------------------------------\n\nModele d'ABOUAF pour la densification des poudres.\n\nLes equations du modele sont de la forme :\n\n --> Notations :\n        S       tenseur des contraintes\n        s       tenseur deviateur de contraintes\n        Seq     contrainte equivalente\n        d       tenseur unite\n        I1      premier invariant du tenseur contrainte\n        J2      deuxieme invariant du tenseur deviatorique\n        rho     densite relative du materiau poreux\n        f       fonction de la densite relative\n        c       fonction de la densite relative\n        evp     deformation viscoplastique\n        t       temps\n        T       temperature\n\n --> Equations du modele d'Abouaf :\n        Seq = (f*I1**2+3/2*c*J2**2)**0.5\n        devp/dt = rho*A*exp(-Q/RT)*Seq**(n-1)*(f*I1*d+3/2*c*s)\n        tr(devp/dt) = -(drho/dt)/rho\n\n --> Donnees a introduire :\n        A       coefficient de la loi de fluage en puissance\n        N       exposant de la loi de fluage en puissance\n        QSRT     energie d'activation\n        F0->F5  parametres definissant la fonction f\n        C0->C5  parametres definissant la fonction c\n        RHOR    densite relative initiale du materiau\n\n --> Pour tout renseignements, contacter :\n        DTA/CEREM/DEM/SGM               F. MORET   (33) 76.88.53.40\n        CENG - 17, rue des Martyrs      C. DELLIS  (33) 76.88.57.26\n        38054 GRENOBLE Cedex 9          P. LeGALLO (33) 76.88.54.64\n        FRANCE                          Fax :      (33) 76.88.51.17\n\n\n   Modele viscoplastique a deux deformations inelastiques (DDI) :\n   --------------------------------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      EP  tenseur des deformations plastiques\n                      p   deformation plastique equivalente cumulee\n                      EV  tenseur des deformations viscoplastiques\n                      v   deformation viscoplastique equivalente cumulee\n                Xpi, Xvi  variables d'ecrouissage cinematique (i=1 ou 2)\n                  Rp, Rv  variables d'ecrouissage isotrope\n                      J2  deuxieme invariant du tenseur deviatorique\n                      np  normale au critere Fp\n                      nv  normale au critere Fv\n                      t   temps\n                      <a> partie positive de a\n                      Xp  = Xp1\n                      Xv  = Xv1     dans le cas d'un seul centre\n                      Xp  = Xp1+Xp2\n                      Xv  = Xv1+Xv2  dans le cas de deux centres\n\n   --> Criteres    :  Fp = J2(S-Xp) - Rp\n                      Fv = J2(S-Xv) - Rv\n\n   --> Ecrouissage :  Xp1 = 2/3CP1*ALPHAp1 + 2/3CVP1*ALPHAv1\n                      Xp2 = 2/3CP2*ALPHAp2 + 2/3CVP2*ALPHAv2\n                      Xv1 = 2/3CV1*ALPHAv1 + 2/3CVP1*ALPHAp1\n                      Xv2 = 2/3CV2*ALPHAv2 + 2/3CVP2*ALPHAp2\n                      dALPHApi = dEp - 3/2*(DPi/CPi)*Xpi*dp (i=1,2)\n                      dALPHAvi = dEv - 3/2*(DVi/CVi)*Xvi*dv (i=1,2)\n                      Rp = RP0 + QP*(1-exp(-BP*p))\n                      Rv = RV0 + Qv*(1-exp(-BV*v))\n\n   --> Ecoulement  :  dp verifie dFp=0\n                      dEp = 3/2 * dp * < S-Xp > / J2(S-Xp)\n                      dV  = (< Fv > / KS) ** n\n                      dEv = 3/2 * dv * < S-Xv > / J2(S-Xv)\n\n   Donnees materiau a introduire (on donne a titre indicatif les\n   valeurs des parametres pour le Zirconium alpha a 200\u00c2\u00b0C):\n\n                                                  Valeurs Zirconium\n   Loi d'evolution des centres Xpi et Xvi :       -----------------\n   'CP1'   : Coefficient de ALPHAp1                       34000 MPa\n   'CP2'   : Coefficient de ALPHAp2                       60000 MPa\n   'CV1'   : Coefficient de ALPHAv1                       24000 MPa\n   'CV2'   : Coefficient de ALPHAv2                        9000 MPa\n   'CVP1'  : Coefficient de couplage visco-plastique          0\n   'CVP2'  : Coefficient de couplage visco-plastique          0\n\n   Loi d'evolution des variables internes ALPHApi et ALPHAvi:\n   'DP1'   : Coefficient de ALPHAp1*dp                      250\n   'DP2'   : Coefficient de ALPHAp2*dp                     3000\n   'DV1'   : Coefficient de ALPHAv1*dv                      300\n   'DV2'   : Coefficient de ALPHAv2*dv                     3000\n\n   Loi d'evolution de l'ecrouissage isotrope:\n   'BP'    : Coefficient de P                               120\n   'QP'    : Coef. de l'ecrouissage isotrope plastique      -60 MPa\n   'RP0'   : Valeur initiale du seuil plastique             135 MPa\n   'BV'    : Coefficient de V                                10\n   'QV'    : Coef. de l'ecrouissage isotrope viscoplastique -20 MPa\n   'RV0'   : Valeur initiale du seuil viscoplastique         70 MPa\n\n   Loi d'evolution de V:\n   'KS'    : Coefficient de normalisation du seuil          960 MPa\n   'N'     : Exposant du seuil de viscoplasticite           3.4\n\n\n    Modele Visco elasto visco plastique  anisotherme  de KOCKS  :\n   ------------------------------------------------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations :  S   resistance isotrope a la deformation (variable\n                        interne)\n                    SP  variation de la variable interne\n                    J2  deuxieme invariant des contraintes deviatoriques\n                    EPP taux de variation de deformation plastique\n                        equivalente\n\n   --> Loi d'ecoulement   :  EPP = A [SINH(B*J2/S) ** 1./M * EXP(-Q/RT)\n\n   --> Variation de la variable interne:\n\n              SP = H0 (ABS (Ssat - S)/(Ssat - S0))**AP *SIGN(Ssat - S0)*EPP\n\n          Saturation de S :\n\n               Ssat = SB*(Z/A)**N\n\n          Parametre de Zener Holomon  : Z = EPP*EXP(Q/RT)\n\n   Les donnees a introduire sont les suivantes :\n\n\n\n   'A   '          :facteur pre-exponentiel\n   'B   '          :facteur de normalisation de la variable S\n   'M   '          :exposant de la loi  d'ecoulement\n   'Q   '          :energie d'activation\n   'R   '          :constante des gaz parfaits\n   'H0  '          :taux d'ecrouissage athermique initial\n   'AP  '          :exposant de la loi d'ecrouissage\n   'SB  '          :coefficient de la loi de saturation de S\n   'N   '          :exposant de la loi de saturation de S\n   'S0  '          :valeur initiale de S\n\n\n   Modele viscoplastique NOUAILHAS_A :\n   --------------------------------------\n\n   La difference avec le modele viscoplastique ONERA se situe\n   dans la maniere de calculer Xi.\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      Ai  variables pour l'ecrouissage cinematique\n                          (i=1 ou 2)\n                      Xi  ecrouissage cinematique (i=1 ou 2)\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      q   variable isotrope de la surface memoire en\n                          deformation\n                      Y   variable cinematique de la surface memoire en\n                          deformation\n                      I2  deuxieme invariant du tenseur\n                      J2  deuxieme invariant du tenseur deviatorique\n                      n   normale au critere F\n                      nn  normale au seuil G\n                      t   temps\n                      <a> partie positive de a\n                      x.y produit scalaire de x par y\n                      X   = X1     dans le cas d'un seul centre\n                            X1+X2  dans le cas de deux centres\n                      RR = ALFR * R\n                      K  = K0 + ALFK * R\n                      Q(0)=Q0\n\n\n   --> Critere     :  F = J2(S-X) - RR - KK\n   --> Ecrouissages:  Xi = 2/3 * CLi * Ai\n                      dAi = dEP - DNLi * Ai * p' * dp\n                      - 3/2 * ( J2(Xi)/GDMi )**(PTMi) * (Xi/J2(Xi)) * dt\n                      (i=1 ou 2)\n                      si GDMi non nul, sinon :\n                      dAi = dEP - DNLi * Ai * p' * dp (i=1 ou 2)\n\n              avec :  p' = PHI+(1-PHI)* e** (-B*p)\n\n                      dp = < F/K >**N * e**(ALF* < F/K >**(N+1))\n\n                      dR  = B*(Q - R)*dp + GAMA*Sign(QR-R)*|QR-R|**M *dt\n\n   --> Ecoulement  :  dEP = 3/2 * dp * < S-X > / J2(S-X)\n\n   --> Memoire en     G   = I2 (EP-Y) - q < 0\n       deformation    dQ  = 2*MU*(QMAX-Q)* dq\n       inelastique :  dq  = ETA * < n.nn > * dp\n                      dY  = (3/2 ** 0.5) * (1-ETA) * < n.nn > * nn*dp\n                      QR  = Q - QSTA * ( 1 - ((QMAX-Q)/QMAX)**2)\n\n   La valeur initiale de Q est Q0 et doit etre definie (voir ci apres)\n\n   Il convient de se rapporter au rapport de D. NOUAILHAS :\n   \" A viscoplastic modelling applied to stainless steel behaviour\",\n   Second Inter. Conf. on Constitutive Laws for Engineering Materials,\n                   University of Arizona, Tucson,1987\n\n   Loi d'evolution du seuil :\n   'N   '    : exposant du seuil de viscoplasticite\n   'KK  '    : valeur initiale de la limite elastique\n   'K0  '    : facteur initial de normalisation du seuil\n   'ALFK'    : coefficient d'evolution isotrope de K\n   'ALFR'    : coefficient d'evolution isotrope du seuil\n   'ALF '    : coefficient de viscosite\n\n   Loi d'evolution des centres X1 et X2 :\n   'CL1 '    : coefficient de la deformation plastique\n   'DNL1'    : coefficient du terme de rappel\n   'GDM1'    : facteur de normalisation pour la restauration\n   'PTM1'    : exposant du terme de restauration\n   'CL2 '    : coefficient de la deformation plastique\n   'DNL2'    : coefficient du terme de rappel\n   'GDM2'    : facteur de normalisation pour la restauration\n   'PTM2'    : exposant du terme de restauration\n   'PHI '    : coefficient multiplicatif du terme de rappel\n\n   Loi d'evolution de l'ecrouissage isotrope :\n   'B   '    : coefficient d'ecrouissage isotrope\n   'GAMA'    : coefficient de l'effet de restauration\n   'M   '    : exposant du terme de restauration\n\n   Loi d'evolution de la memoire de la deformation plastique :\n   'QMAX'    : valeur maximale de Q\n   'QSTA'    : valeur stabilisee de Q\n   'MU  '    : coefficient de la loi d'evolution de Q\n   'ETA '    : facteur liant q a la deformation plastique\n\n + Initialisation de la variable interne Q : Q = Q0 = 30 MPa (acier 316)\n   Pour cela, il convient de creer un champ par element de variables\n   internes a une composante de nom 'QQ' et de valeur Q0. Ce champ\n   sera passe dans la table argument de PASAPAS.\n\n\n   Modele viscoplastique de NOUAILHAS_B :\n   --------------------------------------\n\n   La difference avec le modele de NOUAILHAS_A se situe sur l'evolution\n   de l'ecrouissage isotrope. Par ailleurs la restauration par le temps\n   n'est possible que sur le calcul de X1\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      Ai  variables pour l'ecrouissage cinematique\n                          (i=1 ou 2)\n                      Xi  ecrouissage cinematique (i=1 ou 2)\n                      EP  tenseur des deformations inelastiques\n                      p   deformation inelastique equivalente cumulee\n                      I2  deuxieme invariant du tenseur\n                      J2  deuxieme invariant du tenseur deviatorique\n                      t   temps\n                      <a> partie positive de a\n                      X   = X1     dans le cas d'un seul centre\n                            X1+X2  dans le cas de deux centres\n\n\n   --> Critere     :  F = J2(S-X) - RR\n   --> Ecrouissages:  X1 = 2/3 * CL1 * A1\n                      dA1 = dEP - DNL1 * A1 * p' * dp\n                       - 3/2 * ( J2(X1)/GDM1 )**(PTM1) * (X1/J2(X1)) * dt\n                      si GDM1 non nul, sinon :\n                      dA1 = dEP - DNL1 * A1 * p' * dp\n\n   --> Ecrouissages:  X2 = 2/3 * CL2 * A2\n                      dA2 = dEP - DNL2 * A2 * p' * dp\n\n              avec :  p' = PHI+(1-PHI)* e** (-B*p)\n\n                      dp = < F/K0 >**N * e**(ALF* < F/K0 >**(N+1))\n\n                      RR  = KK + (RMAX - KK) * (1 - e**(-BR * p))\n\n   --> Ecoulement  :  dEP = 3/2 * dp * < S-X > / J2(S-X)\n\n\n   Il convient de se rapporter au rapport de D. NOUAILHAS :\n   \" A viscoplastic modelling applied to stainless steel behaviour\",\n   Second Inter. Conf. on Constitutive Laws for Engineering Materials,\n                   University of Arizona, Tucson,1987\n\n   Loi d'evolution du seuil :\n   'N   '    : exposant du seuil de viscoplasticite\n   'KK  '    : valeur initiale de l'ecrouissage isotrope\n   'K0  '    : facteur initial de normalisation du seuil\n   'ALF '    : coefficient de viscosite\n\n   Loi d'evolution des centres X1 et X2 :\n   'CL1 '    : coefficient de la deformation plastique\n   'DNL1'    : coefficient du terme de rappel\n   'GDM1'    : facteur de normalisation pour la restauration\n   'PTM1'    : exposant du terme de restauration\n   'CL2 '    : coefficient de la deformation plastique\n   'DNL2'    : coefficient du terme de rappel\n   'PHI '    : coefficient multiplicatif du terme de rappel\n   'B   '    : coefficient d'ecrouissage cinematique\n\n   Loi d'evolution de l'ecrouissage isotrope :\n   'RMAX'    : valeur maximale de R\n   'BR  '    : coefficient d'ecrouissage isotrope\n\n   Modele viscoplastique VISK2 :\n   -----------------------------\n     En deca su seuil, le comportement est elastique. Au-dela, on cumule\n     un effet d'ecrouissage cinematique, et un effet de viscosite de type\n     Maxwell, etendu par la possibilite d'utiliser une loi polynomiale.\n     (DMT 98/013)\n\n\n     Les donnees a introduire sont les suivantes :\n      'SIGY' : limite elastique\n      'H   ' : ecrouissage cinematique\n      'ETA ' : coefficient de viscosite\n      'HVIS' : module lie a la viscosite\n      'N   ' : exposant de la loi\n\n\n      Modele general de deformation MISTRAL,\n      --------------------------------------\n      traite comme un modele viscoplastique\n      -------------------------------------\n\n      Ce modele, applicable a un materiau orthotrope, traite l'ensemble\n      des deformations suivantes :\n\n        - dilatation thermique,\n        - deformation elastique,\n        - 0 ou 1 deformation plastique instantanee a seuil,\n        - 0 a 3 (dans version actuelle) deformations viscoplastiques,\n        - croissance sous irradiation.\n\n      De ce fait, pour tout materiau traite par MISTRAL :\n\n          - la dilatation thermique existant par ailleurs dans CASTEM\n      doit etre mise a zero : 'ALP1' 0.    'ALP2' 0.   'ALP3' 0. ,\n\n          - les coefficients d'elasticite doivent etre definis de la\n      facon generale existant dans CASTEM pour un materiau orthotrope :\n\n                    'YG1 ' E1    'YG2 ' E2   'YG3 ' E3\n                    'NU12' NU12  'NU23' NU23 'NU13' NU13\n                    'G12 ' MU12  ['G13 ' MU13 'G23 ' MU23]\n\n      mais les objets E1, E2, E3, NU12, NU23, NU13, MU12, [MU23, MU13]\n      sont necessairement des evolutions donnant les coefficients\n      d'elasticite en fonction de la temperature absolue (en K).\n\n\n      Le modele MISTRAL fonctionne pour des elements massifs et pour\n      les types de calcul suivants : tridimensionnel, axisymetrie,\n      deformations planes, contraintes planes et deformations planes\n      generalisees.\n\n\n      Les donnees a introduire sont les suivantes :\n      (cf rapport DMN/SEMI/LEMO/RT/01-010/A)\n\n      'DILT' : PDILT, liste de reels contenant les parametres des\n               fonctions traduisant l'evolution des coefficients de\n               dilatation thermique en fonction de la temperature.\n\n      'NDIM' : NDIME, liste de 4 entiers en format reel contenant :\n               - le nombre de deformations plastiques instantanees a\n               seuil (0 ou 1),\n               - le nombre de deformations viscoplastiques (0 a 3),\n               - le numero maximal de niveau de contraintes internes\n               pour toute deformation plastique precedente (0 a 2 dans\n               version actuelle), le niveau 0 correspondant aux\n               contraintes internes (directement) mesurables,\n               - 1 ou 0 selon qu'il existe ou non des couplages par\n               les contraintes internes entre deformations plastiques\n               de natures differentes.\n\n      'COHI' : PCOHI, liste de reels contenant les parametres des\n               fonctions traduisant l'evolution des coefficients\n               d'anisotropie plastique (de Hill) en fonction de la\n               temperature  et de la fluence de neutrons rapides *.\n\n      'ACOU' : PECOU, liste de reels contenant les parametres relatifs\n               a la loi d'ecoulement **.\n\n      'ECRI' : PECRI, liste de reels contenant les parametres relatifs\n               a la loi d'ecrouissage isotrope *.\n\n      'ECRC' : PECRC, liste de reels contenant les parametres relatifs\n               a la loi d'ecrouissage cinematique *.\n\n      'DURI' : PDURI, liste de reels contenant les parametres relatifs\n               a la variable de durcissement d'irradiation *.\n\n       *     : pour toutes les deformations plastiques\n       **    : pour toutes les deformations viscoplastiques\n\n      'CROI' : PCROI, liste de reels contenant les parametres de la loi\n               de croissance sous irradiation.\n\n      'INCR' : PINCR, liste de reels contenant les increments maximaux\n               autorisees pour la determination automatique du pas de\n               temps lors de l'integration des equations d'evolution\n               des variables materiau par MISTRAL.\n\n\n      Avec certains types de calcul de CASTEM, toutes les bases de\n      l'espace a 3 dimensions ne sont pas accessibles pour la base\n      principale d'orthotropie, par exemple : la base (radiale,\n      circonferentielle, axiale) n'est pas accessible en mode\n      axisymetrique (la direction circonferentielle est toujours en\n      3eme position). Or les lois des gaines des combustibles sont\n      habituellement exprimees dans cette base.\n\n      C'est pourquoi on doit fournir les deux nombres suivants pour\n      definir la base principale d'orthotropie pour MISTRAL (toujours dans\n      l'espace a 3 dimensions) par rapport a la base principale\n      d'orthotropie pour CASTEM (il s'agit d'une simple permutation des\n      axes avec eventuel changement de sens pour conserver l'orientation\n      de l'espace) :\n\n      'SIP1' : SENSIP1, numero d'ordre de la 1ere direction de la base\n               MISTRAL dans la base CASTEM, affecte du signe - s'il y a\n               changement de sens.\n\n      'SIP2' : SENSIP2, numero d'ordre de la 2eme direction de la base\n               MISTRAL dans la base CASTEM, affecte du signe - s'il y a\n               changement de sens.\n\n\n      Avant l'appel a l'operateur 'MATE', les donnees peuvent etre lues\n      sur un fichier, et en plus  mises en forme adaptee a CASTEM pour les\n      coefficients d'elasticite, par la procedure @mistpar de la facon\n      suivante :\n\n        fichier = 'nom du fichier de donnees' ;\n        PDILT    E1 E2 E3 NU12 NU23 NU13 MU12 MU23 MU13\n        NDIME PCOHI PECOU PECRI PECRC PDURI PCROI PINCR\n                             = @mistpar fichier SENSIP1 SENSIP2 ;\n\n     Les nombres SENSIP1 et SENSIP2, affecte a 'SIP1' et 'SIP2' dans\n     l'operateur 'MATE', sont arguments de cette procedure pour transformer\n     les coefficients d'elasticite de la base d'orthotropie MISTRAL\n     a celle de CASTEM.\n\n\n\n   Modele GATT_MONERIE :\n   ---------------------\n\n   Le modele GATT_MONERIE decrit la viscoplasticite du combustible UO2\n   standard ou dope au Chrome.\n   Il fonctionne pour des elements massifs et pour les types de calcul\n   suivants : tridimensionnel, axisymetrie, deformations planes,\n   contraintes planes et deformations planes generalisees.\n\n   Dans ce modele :\n\n   le module d'Young E s'ecrit sous la forme :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     E = Em(T) * Ef(f)\n\n   oa\u00b9 Em(T) est une fonction de la temperature (eventuellement\n            constante) T exprimee en Kelvin\n      Ef(f) est une fonction de la porosite f du materiau\n            (eventuellement constante)\n      f est une variable interne du modele representant la porosite\n\n   le module de cisaillement G s'ecrit sous la forme :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     G = Gm(T) * Gf(f)\n\n   oa\u00b9 Gm(T) est une fonction de la temperature (eventuellement\n            constante) T exprimee en Kelvin\n      Gf(f) est une fonction de la porosite f du materiau\n            (eventuellement constante)\n      f est une variable interne du modele representant la porosite\n\n   le coefficient de Poisson NU est obtenu a partir de l'expression :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n      NU = (E/2G) - 1\n\n   le coefficient de dilatation thermique ALPHA s'ecrit sous la forme :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     ALPHA = ALPHAm(T) * ALPHAf(f)\n\n   oa\u00b9 ALPHAm(T) est une fonction de la temperature (eventuellement\n                constante) T exprimee en Kelvin\n      ALPHAf(f) est une fonction de la porosite f du materiau\n                (eventuellement constante)\n      f est une variable interne du modele representant la porosite\n\n   Dans le cadre de ce modele, les donnees a introduire et relatives au\n   comportement elastique du modele sont donc les suivantes :\n\n   'YOUN' : module d'Young\n   'NU  ' : coefficient de Poisson\n   'ALPH' : coefficient de dilatation thermique secant\n   'TREF' : temperature de reference de la structure\n           (aucune deformation d'origine thermique)\n   'TALP' : temperature de reference du coefficient de dilatation\n   'RHO ' : masse volumique initiale\n\n   ALPH est OBLIGATOIRE\n   RHO  est OBLIGATOIRE (cf. plus loin)\n\n\n   La deformation visco-plastique Evp comprend un fluage d'origine\n   thermique primaire et secondaire et un fluage induit par\n   l'irradiation.\n\n   Fluage d'origine thermique :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    La vitesse de fluage primaire d'origine thermique s'exprime par :\n\n   vEvp0 = 1.5 * KPRIM * ( Sigeq**(AP-1)) / Evpq**BP ) * Sigprim\n\n\n   Le fluage secondaire d'origine thermique fait intervenir\n   deux mecanismes (de diffusion et de dislocation).\n\n   Pour chacun de ces deux mecanismes de fluage, le potentiel\n   thermodynamique PSIi s'ecrit sous la forme\n   (i=1 : premier mecanisme / i=2 : second mecanisme) :\n\n   PSIi = (AKi /(Ni+1)) *\n           ( Ai(f)*((1.5*Sigm)**2) + Bi(f)*(Sigeq**2) ) ** ((Ni+1)/2) )\n\n     avec Sigma : tenseur de contraintes\n          Sigm = (trace Sigma)/3\n          II    : tenseur identite\n          Sigprim = Sigma - Sigm*II\n          Sigeq : contrainte equivalente au sens de Von Mises :\n                  Sigeq = (1.5 * Sigprim : Sigprim)**0.5\n          Evpq = ( (2/3) * (Evp :: Evp) ) ** 0.5\n          Evp :: Evp designant le produit contracte du tenseur de\n                     deformation visco-plastique Evp\n\n     KPRIM = KP * exp(- QP/R*T)\n\n     Ai(f) et Bi(f) sont des fonctions de la porosite f :\n\n      Ai(f) = (Ni*(f**(-1/Ni) - 1))**(-2*Ni/(Ni+1))\n      Bi(f) = (1 +(2f/3)) / ( (1-f)**(2*Ni/(Ni+1)) )\n       (Ni constante du modele)\n\n      AK1 = WC1 * K1 * (DG**M1) * exp(- Q1/R*T)\n      WC1 = 1 + 0.5*CR1*[1+th((CR-CR2)/CR3)]\n      AK2 = WC2 * K2 * (DG**M2) * exp(- Q2/R*T)\n      WC2 = 2 * [1-cos(DG/DG0)]\n       (KP, AP, BP, Ki, Ni et Mi constantes du modele,\n        QP energie d'activation du fluage primaire,\n        Qi energie d'activation du mecanisme i,\n        CR1, CR2, CR3 constantes pour le mecanisme de diffusion,\n        CR concentration en Chrome,\n        DG taille de grain,\n        DG0 constante pour le mecanisme de dislocation,\n        R constante des gaz parfaits,\n        T temperature exprimee en Kelvin)\n\n   Pour chaque mecanisme, la vitesse de fluage thermique vEvpi se\n   calcule par :\n\n   vEvpi =\n     (1/3 * dPSIi/dSigm * II) + (1.5 * dPSIi/dSigeq * Sigprim/Sigeq)\n\n   soit :\n\n   vEvpi = 0.5 * AKi *\n    ( ( Ai(f)*((1.5*Sigm)**2) + Bi(f)*(Sigeq**2) ) ** ((Ni-1)/2) ) *\n        ( Ai(f)*1.5*Sigm*II + 3*Bi(f)*Sigprim)\n\n   Le potentiel thermodynamique PSI est le resultat du couplage entre\n   ces deux mecanismes via la fonction de couplage statique Theta0\n   ou dynamique Theta:\n     PSI = (1-Theta0)*PSI1 + Theta0*PSI2 ou\n     PSI = (1-Theta )*PSI1 + Theta *PSI2\n\n La fonction de couplage statique Theta0 est definie par :\n ---------------------------------------------------------\n     Theta0(T,GSigeq) = 0.5*BETA * (1 + th((T-(OMEG*(GSigeq**(-Q))))/H))\n\n       (th : tangente hyperbolique,\n        OMEG, Q et H constantes du modele,\n        BETA : parametre permettant d'introduire le couplage)\n\n     et dTheta0/dSigma = 0.5*BETA*Q*(OMEG/H)*(GSigeq**(-Q-2)) *\n                   [1-(th((T-(OMEG*(GSigeq**(-Q))))/H)**2] *\n                   [(9A1/(4B1+A1))*Sigm*II + 1.5*(B1/(B1+A1/4))*Sigprim]\n\n     oa\u00b9 GSigeq =\n     ( (B1/(B1+A1/4)) * (Sigeq**2) + (9A1/(4B1+A1)) * (Sigm**2) ) ** 0.5\n\n La vitesse de la fonction de couplage dynamique Theta est definie par :\n -----------------------------------------------------------------------\n     vTheta(T,Sigeq) = signe(Theta0-Theta)*((Theta0-Theta)**2)/Theta0/to\n\n       (Theta0 : fonction de couplage statique definie ci-dessus,\n        to temps caracteristique constant dependant de la taille\n        de grain pour le combustible UO2 et valant\n        to = DYN1 * (1 + th((DYN2-T)/DYN3)) + 1 pour le combustible\n        AFA3GLAA,\n        DYN1, DYN2 et DYN3 constantes du modele)\n\n   La vitesse de fluage thermique secondaire vEvp12 issue des deux\n   mecanismes et du couplage statique entre eux est :\n\n   vEvp12 = (1-Theta0)*vEvp1 + Theta0*vEvp2 + dTheta0/dSigma*(PSI2-PSI1)\n\n   La vitesse de fluage thermique secondaire vEvp12 issue des deux\n   mecanismes et du couplage dynamique entre eux est :\n\n   vEvp12 = (1-Theta)*vEvp1 + Theta*vEvp2\n\n   La vitesse de fluage thermique (primaire et secondaire) est :\n\n   vEvp = vEvp0 + vEvp12\n\n   Cette vitesse de fluage thermique vEvp est par ailleurs multipliee\n   par un facteur d'acceleration dont l'expression est : 1 + K*PHI\n     avec PHI flux de fissions\n          K constante du modele\n\n   Fluage induit par l'irradiation :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   La vitesse vEvpir de fluage induit par l'irradiation est de la\n   forme :\n\n    vEvpir = A * PHI * (Sigma**(N3-1))*exp(-Q3/R*T)*(1.5*Sigprim)\n\n      avec : Sigma : tenseur de contraintes\n             Sigm = (trace Sigma)/3\n             II    : tenseur identite\n             Sigprim = Sigma - Sigm*II\n             A et N3 constantes du modele\n             PHI flux de fissions\n             Q3 energie d'activation du systeme\n             R constante des gaz parfaits\n             T temperature exprimee en Kelvin\n\n\n   Dans le cadre de ce modele, les donnees a introduire et relatives au\n   comportement visco-plastique du modele sont donc les suivantes :\n\n   'R   ' : constante des gaz parfaits\n\n   Pour les deux mecanismes associes au fluage d'origine thermique :\n\n   'DG  ' : taille de grain\n\n    pour le fluage primaire :\n\n   'KP  ' : constante du modele\n   'AP  ' : constante du modele\n   'BP  ' : constante du modele\n   'QP  ' : energie d'activation du fluage primaire\n\n    pour le mecanisme 1 (fluage secondaire) :\n\n   'K1  ' : constante du modele\n   'M1  ' : constante du modele\n   'Q1  ' : energie d'activation du mecanisme 1\n   'N1  ' : constante du modele\n   'CR  ' : concentration en Chrome\n   'CR1 ' : constante du modele\n   'CR2 ' : constante du modele\n   'CR3 ' : constante du modele\n\n    pour le mecanisme 2 (fluage secondaire) :\n\n   'K2  ' : constante du modele\n   'M2  ' : constante du modele\n   'Q2  ' : energie d'activation du mecanisme 2\n   'N2  ' : constante du modele\n   'DG0 ' : constante du modele\n\n   Pour le couplage entre les deux mecanismes :\n\n   'OMEG' : constante du modele\n   'Q   ' : constante du modele\n   'H   ' : constante du modele\n   'BETA' : 1. ou 0. selon la presence ou non de couplage\n\n   Pour l'acceleration du fluage thermique :\n\n   'K   ' : constante du modele\n\n   Pour le fluage induit par l'irradiation :\n\n   'A   ' : constante du modele\n   'Q3  ' : energie d'activation du systeme\n   'N3  ' : constante du modele\n\n\n\n   La vitesse de deformation liee au gonflement solide s'ecrit :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     vEgs = (1/3) * KGON * (d Bu / dt) * II\n\n   La vitesse de deformation liee a la densification se calcule par :\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     vEd = (1/3) *\n      d/dt [-1*(1+KGON*Bu)*A*Ln(Bu/BUMI)/(1 - POR0 + A*Ln(Bu/BUMI))]\n       * II\n\n    avec II : tenseur identite\n\n      Le coefficient A est obtenu par un processus iteratif qui\n      necessite les donnees suivantes :\n\n   'ADEN' : donnee specifique du materiau\n   'KGON' : coefficient de gonflement\n   'BUMI' : valeur seuil du taux de combustion en dessous de laquelle\n            la masse volumique est constante\n\n      Bu est le taux de combustion (variable interne du modele) :\n      Son calcul a partir de l'evolution temporelle du flux de fissions\n      PHI necessite les donnees suivantes :\n\n   'RHO ' : masse volumique initiale\n   'EFIS' : energie moyenne degagee par fission\n   'POR0' : porosite initiale\n\n\n   Donnees optionnelles :\n\n   'TYPE' : 0. (par defaut) si combustible UO2, 1. si comb AFA3GLAA\n   'COMP' : 0. (par defaut) si combustible compressible, 1. sinon\n   'DYN ' : 0. (par defaut) si couplage statique,\n            1.              si couplage dynamique\n   pour combustible UO2 :\n   'DYN1' : constante de la fonction de couplage dynamique (to)\n   pour combustible AFA3GLAA :\n   'DYN1' : constante de la fonction de couplage dynamique\n   'DYN2' : constante de la fonction de couplage dynamique\n   'DYN3' : constante de la fonction de couplage dynamique\n\n\n   Avant l'appel a l'operateur 'MATE', les donnees peuvent etre lues\n   sur un fichier, et de plus mises en forme adaptee a CAST3M, par la\n   procedure @GATTPAR de la facon suivante :\n\n   fichier = 'nom du fichier de donnees' ;\n   tata = '@GATTPAR' fichier  ;\n   (se reporter a la notice de la procedure @GATTPAR)\n\n\n   Modele UO2 :\n   ------------\n\n   Le modele UO2 decrit la viscoplasticite du combustible UO2\n   standard ou dope au Chrome avec possibilite de fissuration en\n   traction. Il s'agit d'un couplage entre le modele de fissuration\n   propose par OTTOSEN et le modele viscoplastique GATT_MONERIE.\n   Il fonctionne :\n   - pour des elements massifs et pour les types de calcul\n     tridimensionnel, axisymetrique, en deformations planes, en\n     contraintes planes et en deformations planes generalisees.\n   - pour des elements de type coques minces avec ou sans cisaillement\n     transverse en tridimensionnel.\n\n\n   Pour la description des donnees a introduire dans le cadre de ce\n   modele, on se reportera au chapitre relatif au modele GATT_MONERIE\n   en ce qui concerne les caracteristiques de viscoplasticite.\n\n   Les caracteristiques de fissuration a fournir sont donnees ci-apres :\n\n  ('LTR')    : limite en traction (par defaut YOUN*1.2E-4)\n  ('LTR1')   : limite en traction pour la premiere direction de\n               fissuration (par defaut LTR)\n  ('LTR2')   : limite en traction pour la deuxieme direction de\n               fissuration (par defaut LTR)\n  ('LTR3')   : limite en traction pour la troisieme direction de\n               fissuration (par defaut LTR) - sans objet en contraintes\n               planes et pour les coques minces\n  ('GFTR')   : taux de restitution d'energie ou energie de fissuration\n               (par defaut LTR*3.9E-5)\n  ('GFT1')   : energie de fissuration pour la premiere direction de\n               fissuration (par defaut GFTR)\n  ('GFT2')   : energie de fissuration pour la deuxieme direction de\n               fissuration (par defaut GFTR)\n  ('GFT3')   : energie de fissuration pour la troisieme direction de\n               fissuration (par defaut GFTR) - sans objet en contraintes\n               planes et pour les coques minces\n  ('GS')     : module traduisant la perte de resistance au cisaillement\n               d'une fissure avec son ouverture (par defaut YOUN*1.8E-4)\n  ('GS1')    : pour la premiere direction de fissuration,\n               module traduisant la perte de resistance au cisaillement\n               de la fissure avec son ouverture (par defaut GS)\n  ('GS2')    : pour la deuxieme direction de fissuration,\n               module traduisant la perte de resistance au cisaillement\n               de la fissure avec son ouverture (par defaut GS)\n  ('GS3')    : pour la troisieme direction de fissuration,\n               module traduisant la perte de resistance au cisaillement\n               de la fissure avec son ouverture (par defaut GS) - sans\n               objet en contraintes planes et pour les coques minces\n  ('EPSR')   : deformation a rupture dans la direction normale au plan\n               de representation pour les calculs axisymetriques, en\n               deformations planes et en deformations planes\n               generalisees (par defaut 3.*LTR/YOUN)\n  ('EPSB')   : deformation caracterisant le changement de pente dans\n               le cas d'une relation contrainte/deformation d'ouverture\n               bilineaire dans la direction normale au plan de\n               representation, pour les calculs axisymetriques, en\n               deformations planes et en deformations planes\n               generalisees (par defaut 0.)\n  ('WRUP')   : ouverture determinant la rupture d'une fissure\n               (par defaut 0.)\n  ('WRU1')   : ouverture determinant la rupture d'une fissure pour la\n               premiere direction de fissuration\n               (par defaut WRUP ou 2*GFT1/LTR1 si WRUP=0.)\n  ('WRU2')   : ouverture determinant la rupture d'une fissure pour la\n               deuxieme direction de fissuration\n               (par defaut WRUP ou 2*GFT2/LTR2 si WRUP=0.)\n  ('WRU3')   : ouverture determinant la rupture d'une fissure pour la\n               troisieme direction de fissuration\n               (par defaut WRUP ou 2*GFT3/LTR3 si WRUP=0.) - sans objet\n               pour les calculs axisymetriques, en deformations planes,\n               en deformations planes generalisees, en contraintes\n               planes et pour les coques minces\n  ('BILI')   : ouverture caracterisant le changement de pente dans le\n               cas d'une relation contrainte/ouverture bilineaire\n               (par defaut 0.)\n  ('BIL1')   : pour la premiere direction de fissuration, ouverture\n               caracterisant le changement de pente dans le cas d'une\n               relation contrainte/ouverture bilineaire\n               (par defaut BILI)\n  ('BIL2')   : pour la deuxieme direction de fissuration, ouverture\n               caracterisant le changement de pente dans le cas d'une\n               relation contrainte/ouverture bilineaire\n               (par defaut BILI)\n  ('BIL3')   : pour la troisieme direction de fissuration, ouverture\n               caracterisant le changement de pente dans le cas d'une\n               relation contrainte/ouverture bilineaire\n               (par defaut BILI) - sans objet pour les calculs\n               axisymetriques, en deformations planes, en deformations\n               planes generalisees, en contraintes planes et pour les\n               coques minces\n  ('BTR')    : fraction non recouvrable de l'ouverture d'une fissure\n               (par defaut 0.2)\n  ('SIMP')   : conditionne le type de resolution souhaitee\n               0. resolution exacte\n               1. resolution simplifiee a energie de fissuration nulle\n               (par defaut 0.)\n\n  Remarque : les valeurs par defaut sont fournies dans le systeme\n  ---------- d'unites international\n\n\n  Dans un deuxieme temps, il faut obligatoirement adjoindre au CHAML de\n  de sous-type CARACTERISTIQUES construit par l'operateur MATE, le CHAML\n  resultat de l'operateur TAILLE applique au modele de calcul.\n\n  En cas de grands deplacements, il faut definir l'option LAGRANGIEN de PASAPAS\n  a TOTAL pour prendre correctement en compte l'evolution du repere local.\n\n\n\n   Modele viscoplastique VISCODD :\n   -----------------------\n\n   Les equations du modele sont de la forme :\n\n   --> Notations   :  S   tenseur des contraintes\n                      SEQ contrainte equivalente endommagee\n                      EP  tenseur des deformations inelastiques\n                      p  deformation inelastique equivalente cumulee\n                      M  tenseur prenant en compte l'anisotropie de l'endommagem\n                      t   temps\n                      <a> partie positive de a\n                      r variable d'ecrouissage isotrope\n                      R  ecrouissage isotrope\n                      DD endommagement isotrope ductile\n                      YD taux de restitution d'energie d'endommagement ductile\n                      DC endommagement anisotrope de fluage\n                      YC taux de restitution d'energie d'endommagment de fluage\n                      H(.) fonction d'Heaviside\n\n   --> Calcul de SEQ  :  SEQ = SQRT((S:M:S)/((1-DD)*(1-DC))\n   --> Critere     :  F = SEQ - R - SIGY\n   --> Ecrouissage:  dR  = b*(Ri - R)*dr\n   --> Loi de Viscosite : dr = <F/k>**n dt\n   --> Ecoulement  :  dEP = dr * M:S / (SEQ*(1-DD)*(1-DC))\n   --> Loi d endommagment ductile  :  dDD = (YD/sd)**rd*dr * H(p-pd)\n   --> Loi d endommagment de fluage  :  dDC = (YC/sc)**rc * dt * H(p-pc)\n\n   Les parametres de la loi a introduire sont les suivants :\n\n   'N   '    : exposant de loi de viscoplasticite\n   'K   '    : module de viscosite\n   'B   '    : facteur d'ecrouissage\n   'RI  '    : valeur limite de l'ecrouissage\n   'SIGY'    : limite d elasticite\n   'SD  '    : facteur endommagement ductile\n   'RD  '    : exposant endommagement ductile\n   'PD  '    : seuil d'endommagement ductile\n   'SC  '    : facteur endommagement de fluage\n   'RC  '    : exposant endommagement de fluage\n   'PC  '    : seuil d'endommagement de fluage\n\n   L'exemple visco2d.dgibi traite du fluage d'une eprouvette en 16MND5\n   avec cette loi mais pour de plus amples renseignements il convient\n   de se rapporter a la these de B. Vereecke :\n   \"Analyse probabiliste du comportement d'une famille d'aciers pour\n    cuve de REP en cas d'accident grave \", These de doctorat,\n    Universite Paris 6, LMT-Cachan\n\n\n   Modele SYCO1\n   -----------------\n\n   Ce modele fonctionne en 2D contraintes planes, 2D deformations planes\n   ou 3D pour des \u00e9l\u00e9ments massifs ou \u00e9l\u00e9ments XFEM\n\n   Le comportement viscoplastique du mat\u00e9riau est mod\u00e9lis\u00e9\n   par la loi de Symonds & Cowper \"standard\" qui s'\u00e9crit:\n\n   sig_dyn(T,epse,rate_epse) = sig_stat(T,epse)*(1+(rate_epse/D)**(1/p))\n\n   o\u00f9 sig_dyn est la contrainte \u00e9quivalente de Von Mises en dynamique,\n   sig_stat est la contrainte \u00e9quivalente de Von Mises en statique,\n   epse est la d\u00e9formation plastique \u00e9quivalente cumul\u00e9e,\n   rate_epse est la vitesse de d\u00e9formation plastique \u00e9quivalente,\n   D et p sont les constantes caract\u00e9ristiques de la viscosit\u00e9 du mat\u00e9riau.\n\n   Param\u00e8tres concernant l'\u00e9crouissage statique du mat\u00e9riau:\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n\n   Param\u00e8tres concernant la viscosit\u00e9 du mat\u00e9riau:\n   'PSYC' p\n   'DSYC' D\n\n   Modele SYCO2\n   -----------------\n\n   Ce modele fonctionne en 2D contraintes planes, 2D deformations planes\n   ou 3D pour des \u00e9l\u00e9ments massifs ou \u00e9l\u00e9ments XFEM\n\n   Le comportement viscoplastique du mat\u00e9riau est mod\u00e9lis\u00e9 par une loi\n   de Symonds & Cowper modifi\u00e9e (cf. th\u00e8se de B. Prabel) qui s'\u00e9crit:\n\n   sig_dyn(T,epse,rate_epse) = sig_stat(T, epse)*(1+ H(T,epse)*(rate_epse**(1/p)\n\n   o\u00f9 sig_dyn est la contrainte \u00e9quivalente de Von Mises en dynamique,\n   sig_stat est la contrainte \u00e9quivalente de Von Mises en statique,\n   epse est la d\u00e9formation plastique \u00e9quivalente cumul\u00e9e,\n   rate_epse est la vitesse de d\u00e9formation plastique \u00e9quivalente,\n   et  H(T, epse) = A + B  * EXP(-epse/C).\n   A, B, C et p sont les param\u00e8tres caract\u00e9ristiques de la viscosit\u00e9 du mat\u00e9\n\n   Param\u00e8tres concernant l'\u00e9crouissage statique du mat\u00e9riau:\n   'ECRO'    : mot-cle suivi de :\n   EVOL1     : objet de type EVOLUTION, courbe d'ecrouissage du\n               materiau donnant l'evolution de la contrainte\n               equivalente en fonction de la deformation plastique\n               cumulee. Le premier point de la courbe definit\n               la limite elastique.\n\n   Param\u00e8tres concernant la viscosit\u00e9 du mat\u00e9riau:\n   'PSYC' P\n   'ASYC' A\n   'BSYC' B\n   'CSYC' C\n\n\n   FUSION :\n   --------\n\n   Pour tous les modeles visco-plastiques, l'option FUSION met a zero\n   les variables internes du modele si la temperature au point\n   d'integration est superieure a la temperature de fusion, donnee par :\n\n   'TFUS'     : FLOTTANT, temperature de fusion du materiau.\n\n\n  \n1.11 MECANIQUE VISCO_EXTERNE \n---------------------------- \n   ------------------------------------------------------\n   | Noms des parametres pour un materiau VISCO_EXTERNE |\n   ------------------------------------------------------\n\n   Les parametres des lois du groupe 'VISCO_EXTERNE' sont les memes que\n   ceux du comportement 'ELASTIQUE' 'ISOTROPE'.\n\n\n  \n1.12 MECANIQUE NON_LOCAL \n------------------------ \n   ------------------------------------------------------------\n   | Noms des parametres pour une mise en oeuvre en NON_LOCAL |\n   ------------------------------------------------------------\n\n   Pour une mise en oeuvre non locale de type 'MOYE' il faut\n   introduire la longueur caracteristique 'LCAR'.\n\n   Pour une mise en oeuvre non locale de type 'SB' il faut\n   introduire la longueur caracteristique 'LCAR' et la contrainte\n   limite de traction 'SBFT' pour la normalisation.\n\n  \n1.13 MECANIQUE IMPEDANCE \n------------------------ \n   ------------------------------------------------------\n   | Noms des parametres pour un materiau IMPEDANCE     |\n   ------------------------------------------------------\n   remarques :\n   - Pour un support POI1, 3 parametres facultatifs supplementaires :\n   'CPLE' : module de torsion (Nm) (type 'FLOTTANT')\n   'INER' : moment d'inertie (type 'FLOTTANT')\n   'AROT' : amortissement reduit en rotation (%)\n\n   - pour combiner le modele IMPEDANCE ELASTIQUE avec un materiau\n   non-lineaire (par exemple 'PLASTIQUE' 'PARFAIT') on complete avec\n   les parametres du materiau vise.\n\n   Modele IMPEDANCE ELASTIQUE :\n   ----------------------------\n   'RAID'  : raideur (N/m) (type 'FLOTTANT')\n\n   Parametres facultatifs\n   'MASS' : masse (type 'FLOTTANT')\n   'AMOR' : amortissement generalise (%) (type 'FLOTTANT')\n   'ZNU'  : coefficient numerique utilise comme coefficient de Poisson\n   'ALPH' : coefficient de dilatation thermique secant\n\n\n   Modele IMPEDANCE REUSS ou IMPEDANCE VOIGT :\n   -------------------------------------------\n   'RAID'  : raideur (N/m) (type 'FLOTTANT')\n   'VISC'  : viscosite de friction (Ns/m) (type 'FLOTTANT')\n\n   Parametres facultatifs\n   'MASS' : masse (type 'FLOTTANT')\n   'AMOR' : amortissement generalise (%) (type 'FLOTTANT')\n\n\n   Modele IMPEDANCE COMPLEXE :\n   ---------------------------\n   'MOCO'  : module complexe (type 'EVOLUTION')\n   - composante 'RAID' (type 'EVOLUTION'),\n            abscisse frequence 'FREQ' ou 'TEMP' (type 'LISTREEL')\n            ordonnee raideur 'MOCO' (N/m) (type 'LISTREEL')\n   - composante 'VISC' (type 'EVOLUTION'),\n            abscisse frequence 'FREQ' ou 'TEMP' (type 'LISTREEL')\n            ordonnee viscosite 'VISC' (Ns/m) (type 'LISTREEL')\n\n   Parametres facultatifs\n   'MASS' : masse (type 'FLOTTANT')\n   'AMOR' : amortissement generalise (%) (type 'FLOTTANT')\n\n\n  \n1.14 MECANIQUE CAOUTCHOUC \n------------------------- \n   ------------------------------------------------------\n   | Noms des parametres pour un materiau CAOUTCHOUC    |\n   ------------------------------------------------------\n\n MATE : HYPERELASTIQUE\nL Gornet, Ecole Centrale Nantes, GeM\n\nLes densites d'energie de type Mooney-Rivlin, Biderman, Hart-Smith,\nArruda-Boyce et  GD  sont disponibles en formulation\nincompressible dans le cas des contraintes planes.\nLes modeles quasi-incompressibles sont implantes sous les hypotheses\ntridimensionnelle et deformations planes.\nLes parametres par defaut correspondent a un caoutchouc a 8% de\nsulfure vulcanise pendant 3 heures.\nLe materiau est du type de celui presente dans Treloard (1944).\nOn suppose de plus qu'il est equivalent a celui de Kawabata el al. 1981.\nCe caoutchouc presente l'avantage d'etre fortement elastique\nreversible sans presenter de cristallisation sous contrainte jusqu'a\n400% d'extension. Il est donc bien decrit par des modeles hyperelastiques.\n\nDans le cas des materiaux quasi-incompressible, on partitionne\nl'energie elastique W en une partie isochore Wiso(Ib1, Ib2) et\nune partie hydrostatique W(J). Les invariants Ib1 et Ib2 sont\nconstruits a partir du gradient de la transformation Fb= J**(-1/3) F\navec I3=J**2\n\nW(J). = 5/ D (J-1)**2, ou  D represente le coefficient\nde penalite (1.E-4 par defaut).\n\nTRELOAR L. R. G., \"Stress-strain data for vulcanised rubber\nunder various types of deformation\", Trans. Faraday Soc., Vol. 40,\npp. 59-70, 1944.\nKAWABATA S., MATSUDA M., TEI K., ET KAWAI H., \"Experimental survey of\nthe strain energy density function of isoprene rubber vulcanizate\",\nMacromolecules,14 , pp. 154-162, 1981.\nJ. LEMAITRE, J.L. CHABOCHE, A BENALLAL, R. DESMORAT, Mecanique des\nmateriaux solides, 3eme edition, Dunod 2009\n\n   Modele MOONEY-RIVLIN :\n   ---------------------\nhyperelastique Mooney Rivlin\nIncompressible : W(I1,I2,I3=1)=C10 (I1-3)+C20*(I2-3)\nQuasi-incompressible : W(Ib1,Ib2,I3=J**2)= Wiso(Ib1, Ib2)+.5/ D (J-1)**2\nCaoutchouc Treloard / Kawabata, 2 parametres : C1 = 0.183 MPa ;\nC2 = 0.0034 MPa\nLe modele Neo-Hookeen correspond a C20=0 et C10 = nkT=0.4 MPa\n\n   Modele BIDERMAN :\n   -----------------\nModele : hyperelastique Biderman\nIncompressible :\nW(I1,I2,I3=1)=C10 (I1-3)+C20*(I1-3)**2+C30*(I1-3)**3+ C01 (I2-3)\nQuasi-incompressible : W(Ib1, Ib2, I3=J**2)=Wiso(Ib1,Ib2)+.5/ D (J-1)**2\nCaoutchouc Treloard / Kawabata : 4 parametres\nC01 = 0.0233 MPa; C10 = 0.208 MPa ;C20 = -0.0024 MPa C30 = 0.0005MPa\n\n   Modele HART-SMITH :\n   ---------------------\nModele hyper elastique : Hart-Smith\nIncompressible :\nW(I1, I3=1)= G* Intg (exp(K1 ( I1 -3)**2) dI1)+3 K2 ln(I2/3)\nQuasi-incompressible :\nW(Ib1, Ib2, I3=J**2)= Wiso(Ib1, Ib2)+.5/ D (J-1)**2\nCaoutchouc Treloard / Kawabata : 3 parametres\nG = 0.175 MPa ;K1 = 2.86E-4  MPa ; K2 = 0.311  MPa\n\n   Modele 8-CHAINES :\n   ---------------------\nModele : Densite d'energie hyperelastique  8-Chaines\nLe modele est implante a partir du developpement de Taylor de\nl'inverse de la fonction de Langevin a l'ordre 5.\nIncompressible :\nW(I1, I3=1)= NKT (Sommes sur n de (Cn / N**(n-1) (I1**n-3**n))\nCn sont les coefficients du developpement de Taylor\nQuasi-incompressible : W(Ib1, I3=J**2)= Wiso(Ib1)+.5/ D (J-1)**2\nCaoutchouc Treloard / Kawabata, 2 parametres : NKT = 0.28 MPa  VN= 25.4\n\n   Modele 8-CHAINES :\n   ---------------------\nModele hyper elastique : GD\nCe modele exprime a partir des invariants a des performances identiques\nau modele Ogden 5 parametres (Gornet, Club Cast3M 2009).\nLe modele 8 Chaines (equivalent a la partie en I1 du modele Hart-Smith)\nest confine par le reseau avoisinant (energie de l'enveloppe)\nIncompressible :\nW(I1, I3=1)= H1* Intg (exp(H3 ( I1 -3)**2) dI1)+3H2 Intg (dI2/I2**2)\nQuasi-incompressible : W(Ib1, Ib2, I3=J**2)= Wiso(Ib1, Ib2)+.5/ D (J-1)**2\nCaoutchouc Treloard / Kawabata : 3 parametres\nH1 = 0.142236 MPa; H2 = 1.5854659E-2  MPa ; H3 = 3.4946541E-4 MPa\n\n\n  \n1.15 MECANIQUE ELASTIQUE ORTHOTROPE \n----------------------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ORTHOTROPE |\n   -------------------------------------------------------------\n\n   Coques minces (COQ2, COQ3, DKT)\n   -------------------------------\n\n    'YG1 ', 'YG2 '          : modules d'Young\n    'NU12'                  : coefficient de Poisson\n    'G12 '                  : module de cisaillement\n    'ALP1', 'ALP2'          : coefficients de dilatation thermique secants\n    'TREF'                  : temperature de reference de la structure\n                             (aucune deformation d'origine thermique)\n    'TALP'                  : temperature de reference du coefficient de dilatation\n    'RHO '                  : masse volumique\n\n\n   Coques avec  cisaillement transverse (DST, COQ4, COQ6, COQ8)\n   --------------------------------------------------------\n\n    'YG1 ', 'YG2 '          : modules d'Young\n    'NU12'                  : coefficient de Poisson\n    'G12 '  'G23 ', 'G13 '  : modules de cisaillement\n    'ALP1', 'ALP2'          : coefficients de dilatation thermique secants\n    'TREF'                  : temperature de reference de la structure\n                             (aucune deformation d'origine thermique)\n    'TALP'                  : temperature de reference du coefficient de dilatation\n    'RHO '                  : masse volumique\n\n\n   Elements joints 3D (JOI4)\n   -------------------------\n\n    'KS1 ', 'KS2 '          : raideurs de cisaillement selon les\n                              directions 1 et 2  du plan du joint\n                              ( N/m3 )\n    'KN  '                  : raideur normale au plan du joint\n                              ( N/m3 )\n    'RHO '                  : masse volumique du joint ( kg/m2 )\n    'ALPN'                  : coefficient de dilatation thermique secant\n                              suivant la normale au joint ( m/K )\n    'TREF'                  : temperature de reference de la structure\n                             (aucune deformation d'origine thermique)\n    'TALP'                  : temperature de reference du coefficient de dilatation\n\n\n   Elements joints unidimensionnels en 3D (JOI1)\n   ---------------------------------------\n\n   Les unites sont donnees a titre indicatif en systeme SI.\n\n   'KS1 ', 'KS2 '           : raideurs de cisaillement selon les\n                              directions 1 et 2  du plan normal\n                              a l'axe du joint         ( N/m )\n   'KN  '                   : raideur normale          ( N/m )\n   'QS1 ', 'QS2 '           : raideur angulaire de flexion selon\n                              les directions 1 et 2  du plan\n                              normal a l'axe du joint      ( N.m )\n   'QN  '                   : raideur angulaire de torsion ( N.m )\n   'ALPN'   :  coefficient de dilatation thermique secant dans la\n               direction normale au joint        ( m/K )\n   'ALP1'   :  coefficient de dilatation thermique secant dans la\n               direction transverse #1 au joint  ( m/K )\n   'ALP2'   :  coefficient de dilatation thermique secant dans la\n               direction transverse #2 au joint  ( m/K )\n   'ALQN'   :  coefficient de dilatation thermique secant en rotation\n               selon la direction normale au joint  ( 1/K )\n   'ALQ1'   :  coefficient de dilatation thermique secant en rotation\n               selon la direction transverse #1 au joint  ( 1/K )\n   'ALQ2'   :  coefficient de dilatation thermique secant en rotation\n               selon la direction transverse #2 au joint  ( 1/K )\n   'TREF'   :  temperature de reference de la structure\n              (aucune deformation d'origine thermique)\n   'TALP'   :  temperature de reference du coefficient de dilatation\n   'MASS'   :  masse totale du bloc represente par l'element\n                joint                  ( kg  )\n   'JX  '   :  inertie de rotation autour de l'axe X ( kg/m**2 )\n   'JY  '   :  inertie de rotation autour de l'axe Y ( kg/m**2 )\n   'JZ  '   :  inertie de rotation autour de l'axe Z ( kg/m**2 )\n\n\n   Elements joints unidimensionnels en 2D (JOI1)\n   ---------------------------------------\n\n   Les unites sont donnees a titre indicatif en systeme SI.\n\n   'KS '           : raideur de cisaillement ( N/m )\n   'KN '           : raideur normale         ( N/m )\n   'QS '           : raideur angulaire de flexion   ( N.m )\n   'ALPN'   :  coefficient de dilatation thermique secant dans la\n               direction normale au joint    ( m/K )\n   'ALPS'   :  coefficient de dilatation thermique secant dans la\n               direction transverse          ( m/K )\n   'ALQS'   :  coefficient de dilatation thermique secant en rotation\n               ( 1/K )\n   'TREF'   :  temperature de reference de la structure\n              (aucune deformation d'origine thermique)\n   'TALP'   :  temperature de reference du coefficient de dilatation\n   'MASS'   :  masse totale du bloc represente par l'element\n                joint                        ( kg  )\n   'JZ  '   :  inertie de rotation autour de l'axe Z ( kg/m**2 )\n\n\n   Massifs tridimensionnels\n   ------------------------\n\n    'YG1 ', 'YG2 ', 'YG3 '  : modules d'Young\n    'NU12', 'NU23', 'NU13'  : coefficients de Poisson\n    'G12 ', 'G23 ', 'G13 '  : modules de cisaillement\n    'ALP1', 'ALP2', 'ALP3'  : coefficients de dilatation thermique secants\n    'TREF'                  : temperature de reference de la structure\n                             (aucune deformation d'origine thermique)\n    'TALP'                  : temperature de reference du coefficient de dilatation\n    'RHO '                  : masse volumique\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n   ------------------------------------------------------------------\n   | contrainte plane   | deformation plane  | serie de Fourier     |\n   |                    | axisymetrique      |                      |\n   |--------------------|--------------------|----------------------|\n   |'YG1','YG2'         |'YG1', 'YG2', 'YG3' | 'YG1', 'YG2', 'YG3'  |\n   |'NU12''G12 '        |'NU12','NU23','NU13'| 'NU12','NU23','NU13' |\n   |'YG3' 'NU23','NU13' |'G12 '              | 'G12 ','G23 ','G13 ' |\n   |'ALP1','ALP2'       |'ALP1','ALP2','ALP3'| 'ALP1','ALP2','ALP3' |\n   |'TREF','TALP'       |'TREF','TALP'       | 'TREF','TALP'        |\n   |'RHO'               |'RHO '              | 'RHO'                |\n   ------------------------------------------------------------------\n\n\n   Remarques\n   ---------\n   - Dans le cas du modele NON_LINEAIRE UTILISATEUR affecte aux massifs\n     bidimensionnels et tridimensionnels, les parametres specifiques a\n     l'elasticite orthotrope doivent etre donnes dans l'ordre defini\n     ci-dessus, la definition du repere d'orthotropie (mot-cles\n     'DIRECTION'...ou 'RADIAL'...) survenant apres la donnee du ou des\n     modules de cisaillement, donc avant la donnee des coefficients de\n     dilatation thermique.\n   - Dans le cas du modele NON_LINEAIRE UTILISATEUR affecte aux elements\n     finis 1D, les modules d'Young et les coefficients de Poisson\n     doivent etre donnes dans le meme ordre que celui defini pour les\n     massifs tridimensionnels.\n\n\n  \n1.16 MECANIQUE ELASTIQUE ANISOTROPE \n----------------------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ANISOTROPE |\n   -------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n    Les noms des parametres dans un cas tridimensionnel correspondent\n    aux 21 termes independants de la matrice de Hooke pour un materiau\n    anisotrope :\n\n\n    | sig1 |    |D11          sym.       |     | eps1  |\n    | sig2 |    |D21 D22                 |     | eps2  |\n    | sig3 | =  |D31 D32 D33             |  x  | eps3  |\n    | tau12|    |D41 D42 D43 D44         |     | gama12|\n    | tau13|    |D51 D52 D53 D54 D55     |     | gama13|\n    | tau23|    |D61 D62 D63 D64 D65 D66 |     | gama23|\n\n    A ces parametres il faut ajouter (si necessaire) :\n\n     'ALP1','ALP2','ALP3'  : coefficients de dilatation thermique secants\n     'AL12','AL23','AL13'\n     'TREF'                : temperature de reference de la structure\n                            (aucune deformation d'origine thermique)\n     'TALP'                : temperature de reference du coefficient de dilatation\n     'RHO'                 : masse volumique\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n   ------------------------------------------------------------------\n   |  contrainte plane  | deformation plane  | serie de Fourier     |\n   |                    | axisymetrique      |                      |\n   ------------------------------------------------------------------\n   |'D11','D21','D22'   |'D11','D21','D22'   | 'D11','D21','D22'    |\n   |'D31','D32','D33'   |'D31','D32','D33'   | 'D31','D32','D33'    |\n   |'D41','D42','D43'   |'D41','D42','D43'   | 'D41','D42','D43'    |\n   |'D44'               |'D44'               | 'D44','D55','D65'    |\n   |                    |                    | 'D66'                |\n   |'ALP1','ALP2','AL12'|'ALP1','ALP2','ALP3'| 'ALP1','ALP2','ALP3' |\n   |'TREF','TALP'       |'AL12','TREF','TALP'| 'AL12','TREF','TALP' |\n   |'RHO '              |'RHO '              | 'RHO '               |\n   ------------------------------------------------------------------\n\n   Remarque : Dans le cas des contraintes planes, les coefficients D11,\n              D21, ... doivent etre les memes que dans le cas des\n              deformations planes. Les modifications dues a l'hypothese\n              des contraintes planes sont effectuees par l'operateur.\n\n              L'option anisotrope n'est pas definie pour les elements\n              joints.\n\n\n   Elements joints unidimensionnels en 3D (JOI1)\n   ---------------------------------------------\n\n    Les unites sont donnees a titre indicatif en systeme SI.\n\n    Les noms des parametres dans un cas tridimensionnel correspondent\n    aux 21 termes independants de la matrice de Hooke pour un materiau\n    anisotrope :\n\n\n    | EFFX |    |D11          sym.       |     | EXX  |\n    | EFFY |    |D21 D22                 |     | GXY  |\n    | EFFZ | =  |D31 D32 D33             |  x  | GXZ  |\n    | MOMX |    |D41 D42 D43 D44         |     | CXX  |\n    | MOMY |    |D51 D52 D53 D54 D55     |     | CXY  |\n    | MOMZ |    |D61 D62 D63 D64 D65 D66 |     | CXZ  |\n\n    A ces parametres il faut ajouter (si necessaire) :\n\n     'ALP1','ALP2','ALP3'  : coefficients de dilatation thermique secants\n     'ALQ1','ALQ2','ALQ3'    en translation et en rotation\n     'TREF'                : temperature de reference de la structure\n                            (aucune deformation d'origine thermique)\n     'TALP'                : temperature de reference du coefficient de dilatation\n     'MASS '  :  masse totale du bloc represente par l'element\n                 joint                                 ( kg    )\n     'JX   '  :  inertie de rotation autour de l'axe X ( kg/m**2 )\n     'JY   '  :  inertie de rotation autour de l'axe Y ( kg/m**2 )\n     'JZ   '  :  inertie de rotation autour de l'axe Z ( kg/m**2 )\n\n\n   Elements joints unidimensionnels en 2D (JOI1)\n   ---------------------------------------------\n\n    Les unites sont donnees a titre indicatif en systeme SI.\n\n    Les noms des parametres dans un cas bidimensionnel correspondent\n    aux 6 termes independants de la matrice de Hooke pour un materiau\n    anisotrope :\n\n\n    | EFFX |    | D11     sym.|     | EXX  |\n    | EFFY | =  | D21 D22     |  x  | GXY  |\n    | MOMZ |    | D31 D32 D33 |     | CXZ  |\n\n    A ces parametres il faut ajouter (si necessaire) :\n\n     'ALP1','ALP2','ALQ3'  : coefficients de dilatation thermique secants\n     'TREF'                : temperature de reference de la structure\n                            (aucune deformation d'origine thermique)\n     'TALP'                : temperature de reference du coefficient de dilatation\n     'MASS '  :  masse totale du bloc represente par l'element\n                 joint                                 ( kg    )\n     'JZ   '  :  inertie de rotation autour de l'axe Z ( kg/m**2 )\n\n\n  \n1.17 MECANIQUE ELASTIQUE UNIDIRECTIONNEL \n---------------------------------------- \n   ------------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE UNIDIRECTIONNEL |\n   ------------------------------------------------------------------\n\n   'YOUN'  :  module d'Young\n   'RHO '  :  masse volumique\n   'ALPH'  :  coefficient de dilatation thermique secant\n   'TREF'  :  temperature de reference de la structure\n             (aucune deformation d'origine thermique)\n   'TALP'  :  temperature de reference du coefficient de dilatation\n\n\n  \n1.18 MECANIQUE ELASTIQUE SECTION \n-------------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE SECTION  |\n   -----------------------------------------------------------\n\n   'MODS'  :  modele decrivant la section (type MMODEL)\n   'MATS'  :  proprietes materielles decrivant la section\n              (type MCHAML), associees au modele ci-dessus\n  ('MAHO') :  matrice de hooke de la poutre equivalente\n              (type LISTREEL)\n  \n2. formulations LIQUIDE & LIQUIDE MECANIQUE \n=========================================== \n \n  \n2.1 LIQUIDE \n----------- \n   ---------------------------------------\n   | Noms des parametres pour un LIQUIDE |\n   ---------------------------------------\n\n   'RHO '  :  masse volumique\n   'RORF'  :  masse volumique de reference\n   'CSON'  :  celerite du son\n   'CREF'  :  celerite de reference\n   'LCAR'  :  longueur caracteristique\n   'G   '  :  acceleration de la pesanteur\n\n\n  \n2.2 HOMOGENEISE FLUIDE-STRUCTURE \n-------------------------------- \n   -------------------------------------------------------------------\n   | Noms des parametres pour un milieu homogeneise fluide-structure |\n   -------------------------------------------------------------------\n\n   'B11 '  :  permeabilite acoustique selon l'axe X\n   'B22 '  :  permeabilite acoustique selon l'axe Y\n   'B12 '  :  permeabilite acoustique mixte\n   'ROF '  :  masse volumique du fluide\n   'CSON'  :  celerite du son  dans le fluide\n   'YOUN'  :  rigidite des tubes\n   'ROS '  :  masse volumique des tubes\n   'RORF'  :  masse volumique de reference du fluide\n   'CREF'  :  celerite de reference dans le fluide\n   'LCAR'  :  longueur caracteristique  du domaine fluide\n   'E111'  :  |\n   'E112'  :  |\n   'E121'  :  | coefficients cellulaires du deuxieme ordre\n   'E122'  :  |\n   'E221'  :  |\n   'E222'  :  |\n\n\n  \n2.3 RACCORD FLUIDE-TUYAU \n------------------------ \n   ---------------------------------------------------------------\n   | Noms des parametres pour un element de raccord fluide-tuyau |\n   ---------------------------------------------------------------\n\n   'RHO '  :  masse volumique\n   'RORF'  :  masse volumique de reference\n   'LCAR'  :  longueur caracteristique\n  \n3. Formulation THERMIQUE \n======================== \n \n   ------------------------------------------------\n   | Noms des parametres en formulation THERMIQUE |\n   ------------------------------------------------\n\n  \n3.1 THERMIQUE CONDUCTION \n------------------------ \n   'RHO'   : masse specifique\n   'C'     : chaleur specifique\n   'TINI'  : temperature initiale du milieu\n\n   Elements Massifs\n   'K'     : conductivite isotrope\n\n   Elements JOI1\n   'KT'     : conductivite integree equivalente\n\n  \n3.2 THERMIQUE Changement de PHASE \n--------------------------------- \n   'TPHA'  : temperature de changement de phase\n            (Elle est attendue constante par SOUS-ZONES)\n   'QLAT'  : chaleur latente par unite de masse\n\n  \n3.3 THERMIQUE CONVECTION \n------------------------ \n   'H'     : coefficient d'echange\n\n   Elements Massifs\n   'TC'    : temperature \"exterieure\" d'echange convectif\n\n   Elements Coques\n   'TCIN'    : temperature \"exterieure\" d'echange convectif de la face inferieure\n   'TCSU'    : temperature \"exterieure\" d'echange convectif de la face superieure\n\n  \n3.4 THERMIQUE RAYONNEMENT \n------------------------- \n   'EMIS'  : coefficient d'emissivite pour les massifs\n   'EINF'  : emissivite relative a la face inferieure (COQUES)\n   'ESUP'  : emissivite relative a la face superieure (COQUES)\n   'E_IN'  : emissivite de l'infini si besoin (1.D0 par defaut)\n   'T_IN'  : temperature \"a l'infini\" (milieu ambiant)\n   'CABS'  : coefficient d'absorbtion du milieu interne d'une cavite\n   'TABS'  : temperature de la cavite\n\n           La designation des peaux des COQUES  se fait par rapport a la\n           normale  exterieure de  l'element : la  peau  superieure  est\n           placee dans  le sens de  la normale  exterieure  vis-a-vis du\n           plan median. Dans le cas ou les elements ne sont pas orientes\n           d'une facon  coherente, il faut  les reorienter  en utilisant\n           l'operateur ORIENT.\n\n  \n3.5 THERMIQUE ADVECTION \n----------------------- \n   'RHO'   : masse specifique\n   'C'     : chaleur specifique\n   'TINI'  : temperature initiale du milieu\n   'K'     : conductivite isotrope\n\n   Elements Massifs (rep\u00e8re global)\n   'UX'           : Vitesse suivant X     (1D)\n   'UX','UY'      : Vitesse suivant X,Y   (2D)\n   'UX','UY','UZ' : Vitesse suivant X,Y,Z (3D)\n\n   Elements TUYAU (repere local)\n   'VITE'  : vitesse de deplacement dans le tuyau\n\n\n  \n3.6 THERMIQUE SOURCE \n-------------------- \n   ---------------------------------------------------------\n   | Noms des parametres pour un materiau THERMIQUE SOURCE |\n   ---------------------------------------------------------\n\n     'QVOL'    : densite volumique de chaleur imposee.\n\n    Remarque   : le parametre QVOL peut etre un flottant ou un champ,\n                 champ par point (CHPOINT) ou par element (MCHAML).\n\n\n   Dans le cas d'elements coques, on dispose des deux parametres\n   supplementaires :\n\n     'QINF'    : densite volumique de chaleur imposee sur la face\n                 inferieure de l'element coque ;\n     'QSUP'    : densite volumique de chaleur imposee sur la face\n                 superieure de l'element coque.\n\n    Remarque   : voir ORIE pour la definition des faces inferieure\n                 et superieure des elements coques.\n\n\n   --------------------------------------------------------------------\n   | Noms des parametres pour un materiau THERMIQUE SOURCE GAUSSIENNE |\n   --------------------------------------------------------------------\n\n   Les modeles de source gaussienne disponibles sont :\n\n   Modele THERMIQUE SOURCE GAUSSIENNE ISOTROPE :\n   ---------------------------------------------\n\n     La distribution de chaleur est definie par l'equation suivante :\n\n        Q(r) = Q0.EXP{-2.[(r/R0)^2]}\n\n     r etant la distance a un point P0 origine, Q0 et R0 des parametres.\n\n     Les parametres du modele sont :\n\n     'QTOT'    : objet FLOTTANT, quantite de chaleur imposee dans tout\n                 demi-espace passant par le centre de la Gaussienne.\n                 Si le centre de la Gaussienne est a la surface du milieu,\n                 QTOT est alors la quantite totale de chaleur fournie au milieu.\n     'ORIG'    : objet POINT, point P0 origine,\n     'RGAU'    : objet FLOTTANT, valeur du parametre R0.\n\n     Remarque  : Le parametre Q0 est egal a :\n\n        - DIME 2 MODE PLAN : Q0 = 0.25/pi/R0/R0\n        - DIME 2 MODE AXIS : Q0 = (pi**1.5)/(2**0.5)*R0*(XK1+XK2+XK3)\n          avec :\n            o XK1 = 0.25*R0*R0*exp(-2.*r(P0)*r(P0)/R0/R0)\n            o XK2 = 0.5*R0*r(P0)*(pi/2)**0.5\n            o XK3 = (pi**0.5)/(2**1.5)*R0*r(P0)*erf(r(P0)*(2**0.5)/R0)\n          ou r(P0) est la 1ere coordonnee du point P0.\n        - DIME 3 MODE TRID : Q0 = sqrt(2**5/pi**3)/R0/R0/R0*QTOT\n\n\n   Modele THERMIQUE SOURCE GAUSSIENNE ISOTROPE_TRANSVERSE :\n   --------------------------------------------------------\n\n     La distribution de chaleur est definie par l'equation suivante :\n\n        Q(r',z') = Q0.EXP{-2.[(r'/R0)^2 + (z'/Z0)^2]}\n\n     avec :\n        - r' : la distance a l'axe d'isotropie transverse, dont\n               l'origine est definie par un point P0 et la direction\n               d'isotropie transverse par un point P1,\n        - z' : la coordonne sur l'axe d'isotropie transverse,\n     et Q0, R0 et Z0 des parametres.\n\n     Les parametres du modele sont :\n\n     'QTOT'    : objet FLOTTANT, quantite de chaleur imposee dans les\n                 demi-espaces definis par la direction d'anisotropie de\n                 la distribution Gaussienne et passant par son centre.\n                 Si le centre de la Gaussienne est a la surface du milieu\n                 et que sa direction d'anisotropie est orthogonale a cette\n                 surface, alors QTOT est la quantite totale de chaleur\n                 fournie au milieu.\n     'ORIG'    : objet POINT, point P0 origine,\n     'RGAU'    : objet FLOTTANT, valeur du parametre R0,\n     'DIRE'    : objet POINT, point P1 definissant l'axe d'isotropie\n                 transverse,\n     'ZGAU'    : objet FLOTTANT, valeur du parametre Z0.\n\n     Remarque  : Le parametre Q0 est egal a :\n\n        - DIME 2 MODE PLAN : Q0 = 0.25/pi/R0/Z0\n        - DIME 2 MODE AXIS : Q0 = (pi**1.5)/(2**0.5)*Z0*(XK1+XK2+XK3)\n          avec :\n            o XK1 = 0.25*R0*R0*exp(-2.*r(P0)*r(P0)/R0/R0)\n            o XK2 = 0.5*R0*r(P0)*(pi/2)**0.5\n            o XK3 = (pi**0.5)/(2**1.5)*R0*r(P0)*erf(r(P0)*(2**0.5)/R0)\n          ou r(P0) est la 1ere coordonnee du point P0.\n        - DIME 3 MODE TRID : Q0 = sqrt(2**5/pi**3)/R0/R0/Z0*QTOT\n\n\n  \n3.7 THERMIQUE ORTHOTROPE \n------------------------ \n   -----------------------------------------------------------------\n   | Noms des parametres pour une formulation THERMIQUE ORTHOTROPE |\n   -----------------------------------------------------------------\n\n   Coques  (COQ2, COQ3, COQ4, COQ6, COQ8)\n   ---------------------------------------\n\n     'K1','K2','K3'       :  conductivites thermiques\n     'RHO'                :  masse volumique\n     'C '                 :  chaleur massique\n     'H '                 :  coefficient d'echange\n\n\n   Massifs tridimensionnels\n   ------------------------\n\n     'K1','K2','K3'       :  conductivites thermiques\n     'RHO'                :  masse volumique\n     'C '                 :  chaleur massique\n     'H '                 :  coefficient d'echange\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n           -------------------------------------------\n           | bidimensionnel et  | serie de Fourier   |\n           | axisymetrique      |                    |\n           -------------------------------------------\n           | 'K1','K2'          | 'K1','K2','K3'     |\n           | 'RHO','H','C'      | 'RHO','H','C'      |\n           -------------------------------------------\n\n\n  \n3.8 THERMIQUE ANISOTROPE \n------------------------ \n   -----------------------------------------------------------------\n   | Noms des parametres pour une formulation THERMIQUE ANISOTROPE |\n   -----------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n      'K11','K21','K22'     : les termes independants de la matrice\n      'K31','K32','K33'       de conductivites anisotrope\n      'RHO'                 : masse volumique\n      'H'                   : coefficient d'echange\n      'C'                   : chaleur massique\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n           -------------------------------------------\n           | bidimensionnel et  | serie de Fourier   |\n           | axisymetrique      |                    |\n           -------------------------------------------\n           |'K11','K21','K22'   | 'K11','K21','K22'  |\n           |                    | 'K33'              |\n           | 'RHO','H','C'      | 'RHO','H','C'      |\n           -------------------------------------------\n\n   Remarque  :\n\n   Dans le cas des coques en thermique ainsi que des coques epaisses\n   orthotropes en mecanique, il faut entrer les proprietes geometriques\n   en meme temps que les proprietes materielles.\n  \n4. Formulation CHANGEMENT_PHASE \n=============================== \n \n   +-----------------------------------------------------+\n   | Noms des parametres en formulation CHANGEMENT_PHASE |\n   +-----------------------------------------------------+\n  \n4.1 CHANGEMENT_PHASE PARFAIT \n---------------------------- \n   'PRIM'     : Valeur de l'inconnue ou du chargement a laquelle le\n                changement de phase a lieu.\n   'DUAL'     : Quantit\u00e9 latente par unite de volume.\n\n  \n4.2 CHANGEMENT_PHASE SOLUBILITE \n------------------------------- \n   'SOLU'     : Valeur limite maximale de la solubilite de la\n                premiere inconnue primale.\n  \n5. Formulation METALLURGIE \n========================== \n \n   --------------------------------------------------\n   | Noms des parametres en formulation METALLURGIE |\n   --------------------------------------------------\n   Les caracteristiques des transformations de phase metallurgiques\n   different selon que la transformation soit de type KOISTINEN-MARBURGER\n   ou LEBLOND-DEVAUX. Elles sont indexees par le numero \"i\" de la reaction.\n   1- Type KOISTINEN-MARBURGER : 'KMi'  (constant dans leur theorie)\n                                 'MSi'  (constant dans leur theorie)\n   2- Type LEBLOND-DEVAUX      : 'PEQi'\n                                 'TAUi'\n                                 'Fi  '\n      exemples : metallurgie_07.dgibi --> metallurgie_14.dgibi\n  \n6. Formulation DARCY \n==================== \n \n  \n6.1 DARCY ISOTROPE \n------------------ \n   --------------------------------------------\n   | Noms des parametres en formulation DARCY |\n   --------------------------------------------\n\n   'K'     :  permeabilite isotrope\n\n\n  \n6.2 DARCY ORTHOTROPE \n-------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour une formulation DARCY ORTHOTROPE |\n   -------------------------------------------------------------\n\n   Hybrides tridimensionnels\n   -------------------------\n\n     'K1','K2','K3'       :  permeabilites hydrauliques\n\n\n   Hybrides bidimensionnels\n   ------------------------\n\n     'K1','K2'            :  permeabilites hydrauliques\n\n\n  \n6.3 DARCY ANISOTROPE \n-------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour une formulation DARCY ANISOTROPE |\n   -------------------------------------------------------------\n\n   Hybrides tridimensionnels\n   -------------------------\n\n      'K11','K21','K22'     : les termes independants de la matrice\n      'K31','K32','K33'       de permeabilites anisotropes\n\n\n   Hybrides bidimensionnels\n   ------------------------\n\n      'K11','K21','K22'     : les termes independants de la matrice\n                              de permeabilites anisotropes\n  \n7. CONTACT \n========== \n \n  \n7.1 COULOMB \n----------- \n   Modele de frottement de COULOMB :\n   ---------------------------------\n\n   'MU'    :  coefficient de frottement (egal a tgPHI)\n   'JEU'   :  Distance minimale a respecter entre les objets en\n              contact (type MCHAML, sur le MAILLAGE de contact\n              issu d'IMPO)\n   ('COHE'):  coefficient de cohesion\n   ('ADHE'):  coefficient d'adherence\n\n  \n7.2 FROCABLE \n------------ \n   Modele de frottement des cables 'FROCABLE' :\n   --------------------------------------------\n\n   'FF'    : voir code BPEL99\n   'PHIF'  : voir code BPEL99\n  \n8. POREUX \n========= \n \n  \n8.1 POREUX ELASTIQUE ISOTROPE \n----------------------------- \n   -----------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ISOTROPE |\n   -----------------------------------------------------------\n\n   'YOUN'  :  module d'Young\n   'NU  '  :  coefficient de poisson\n   'RHO '  :  masse volumique\n   'ALPH'  :  coefficient de dilatation thermique secant\n   'TREF'  :  temperature de reference de la structure\n             (aucune deformation d'origine thermique)\n   'TALP'  :  temperature de reference du coefficient de dilatation\n   'MOB '  :  module de Biot\n   'COB '  :  coefficient de Biot\n   'PERM'  :  permeabilite intrinseque\n   'VISC'  :  viscosite dynamique du fluide\n   'ALPM'  :  coefficient de couplage pression - temperature\n\n      Cas des joints poreux\n\n   'KS  '  :  raideur de cisaillement\n   'KN  '  :  raideur normale\n   'COB '  :  coefficient de Biot\n   'MOB '  :  module de Biot\n   'PERT'  :  permeabilite intrinseque tangentielle\n   'PERH'  :  permeabilite intrinseque normale de la face en haut\n   'PERB'  :  permeabilite intrinseque normale de la face en bas\n   'VISC'  :  viscosite dynamique du fluide\n\n\n  \n8.2 POREUX ELASTIQUE ORTHOTROPE \n------------------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ORTHOTROPE |\n   -------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n    'YG1 ', 'YG2 ', 'YG3 '  : modules d'Young\n    'NU12', 'NU23', 'NU13'  : coefficients de Poisson\n    'G12 ', 'G23 ', 'G13 '  : modules de cisaillement\n    'ALP1', 'ALP2','ALP3'   : coefficients de dilatation thermique secants\n    'TREF'                  : temperature de reference de la structure\n                             (aucune deformation d'origine thermique)\n    'TALP'                  : temperature de reference du coefficient de dilatation\n    'RHO '                  : masse volumique\n    'COB1', 'COB2', 'COB3'  : coefficients de Biot\n    'MOB '                  : module de Biot\n    'PER1', 'PER2', 'PER3'  : permeabilites intrinseques\n    'VISC'                  : viscosite dynamique du fluide\n    'ALPM'                  : coefficient de couplage pression -\n                              temperature\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n    Les noms de parametres pour les differents cas bidimensionnels sont\n    resumes dans le tableau suivant :\n\n\n   ------------------------------------------------------------------\n   | contrainte plane   | deformation plane  | serie de Fourier     |\n   |                    | axisymetrique      |                      |\n   |--------------------|--------------------|----------------------|\n   |'YG1', 'YG2','YG3'  |'YG1', 'YG2', 'YG3' | 'YG1', 'YG2', 'YG3'  |\n   |'NU12','NU23','NU13'|'NU12','NU23','NU13'| 'NU12','NU23','NU13' |\n   |'G12 '              |'G12 '              | 'G12 ','G23 ','G13 ' |\n   |'ALP1','ALP2'       |'ALP1','ALP2','ALP3'| 'ALP1','ALP2','ALP3' |\n   |'TREF','TALP'       |'TREF','TALP'       | 'TREF','TALP'        |\n   |'RHO'               |'RHO '              | 'RHO'                |\n   |'COB1','COB2','COB3'|'COB1','COB2','COB3'| 'COB1','COB2','COB3' |\n   |'MOB '              |'MOB '              | 'MOB '               |\n   |'PER1','PER2'       |'PER1','PER2'       | 'PER1','PER2','PER3' |\n   |'VISC'              |'VISC'              | 'VISC'               |\n   |'ALPM'              |'ALPM'              | 'ALPM'               |\n   ------------------------------------------------------------------\n\n\n  \n8.3 POREUX ELASTIQUE ANISOTROPE \n------------------------------- \n   -------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE ANISOTROPE |\n   -------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n    Les noms des parametres dans un cas tridimensionnel correspondent\n    aux 21 termes independants de la matrice de Hooke pour un materiau\n    anisotrope et aux 6 termes independants de la matrice de Biot :\n\n\n    | sig1 |    |D11          sym.       |     | eps1  |    |COB1 |\n    | sig2 |    |D21 D22                 |     | eps2  |    |COB2 |\n    | sig3 | =  |D31 D32 D33             |  x  | eps3  |  - |COB3 | x p\n    | tau12|    |D41 D42 D43 D44         |     | gama12|    |CO12 |\n    | tau13|    |D51 D52 D53 D54 D55     |     | gama13|    |CO13 |\n    | tau23|    |D61 D62 D63 D64 D65 D66 |     | gama23|    |CO23 |\n\n    et au module de Biot : 'MOB '\n\n    A ces parametres il faut ajouter (si necessaire) :\n\n     'ALP1','ALP2','ALP3'    : coefficients de dilatation thermique secants\n     'AL12','AL23','AL13'\n     'TREF'                  : temperature de reference de la structure\n                              (aucune deformation d'origine thermique)\n     'TALP'                  : temperature de reference du coefficient de dilatation\n     'RHO'                   : masse volumique\n     'PER1','PER2','PER3'  | : matrice de permeabilites intrinseques\n     'PE12','PE13','PE23'  |\n     'VISC'                  :  viscosite du fluide\n     'ALPM'                  : coefficient de couplage pression -\n                               temperature\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n    Les noms des parametres pour les differents cas bidimensionnels\n    sont resumes dans le tableau suivant :\n\n   ------------------------------------------------------------------\n   |  contrainte plane  | deformation plane  | serie de Fourier     |\n   |                    | axisymetrique      |                      |\n   ------------------------------------------------------------------\n   |'D11','D21','D22'   |'D11','D21','D22'   | 'D11','D21','D22'    |\n   |'D31','D32','D33'   |'D31','D32','D33'   | 'D31','D32','D33'    |\n   |'D41','D42','D43'   |'D41','D42','D43'   | 'D41','D42','D43'    |\n   |'D44'               |'D44'               | 'D44','D55','D65'    |\n   |                    |                    | 'D66'                |\n   |'ALP1','ALP2'       |'ALP1','ALP2','ALP3'| 'ALP1','ALP2','ALP3' |\n   |'AL12'              |'AL12'              | 'AL12'               |\n   |'TREF','TALP'       |'TREF','TALP'       | 'TREF','TALP'        |\n   |'RHO '              |'RHO '              | 'RHO '               |\n   |'COB1','COB2','COB3'|'COB1','COB2','COB3'| 'COB1','COB2','COB3' |\n   |'CO12','MOB '       |'CO12','MOB '       | 'CO12','MOB '        |\n   |'PER1','PER2','PE12'|'PER1','PER2','PE12'| 'PER1','PER2','PER3' |\n   |'VISC'              |'VISC'              | 'PE12','VISC'        |\n   |'ALPM'              |'ALPM'              | 'ALPM'               |\n   ------------------------------------------------------------------\n\n\n  \n8.4 POREUX ELASTIQUE UNIDIRECTIONNEL \n------------------------------------ \n   ------------------------------------------------------------------\n   | Noms des parametres pour un materiau ELASTIQUE UNIDIRECTIONNEL |\n   ------------------------------------------------------------------\n\n\n   'YOUN'  :  module d'Young\n   'RHO '  :  masse volumique\n   'ALPH'  :  coefficient de dilatation thermique secant\n   'TREF'  :  temperature de reference de la structure\n             (aucune deformation d'origine thermique)\n   'TALP'  :  temperature de reference du coefficient de dilatation\n   'MOB '  :  module de Biot\n   'COB '  :  coefficient de Biot\n   'PERM'  :  permeabilite intrinseque\n   'VISC'  :  viscosite dynamique du fluide\n   'ALPM'  :  coefficient de couplage pression - temperature\n  \n9. MAGNETODYNAMIQUE \n=================== \n \n  \n9.1 CORFOU \n---------- \n   Coques (modelisation CORFOU)\n   ------\n\n   'ETA'   :  resistivite (en ohm.m)\n   'PERM'  :  permeabilite relative\n                mu = mur.mu0 avec mu0 = 4.pi.e-7 henry/m\n\n  \n9.2 MAGNETODYNAMIQUE ORTHOTROPE \n------------------------------- \n   Coques (modelisation CORFOU)\n   ------\n\n   'ETA1'  :  resistivite suivant la premiere direction d'orthotropie\n              (en ohm.m)\n   'ETA2'  :  resistivite suivant la deuxieme direction d'orthotropie\n              (en ohm.m)\n   'PERM'  :  permeabilite relative\n                mu = mur.mu0 avec mu0 = 4.pi.e-7 henry/m\n  \n10. MELANGE \n=========== \n \n  \n10.1 Modele CEREM \n----------------- \n   Modele CEREM  (transition de phase du 16MND5)\n   -------------\n\n    'AC1' : temperature debut transition\n    'AR1' : temperature fin transition\n    'MS0' : temperature transition martensitique initiale\n    'BETA':\n    'AC'  :\n    'AA'  :\n    'ZS'  :\n    'TPLM':\n    'CARB':\n    'ACAR': temperature transition au refroidissement\n    'DG0' : taille de grain\n    'AGRA':\n    'TIHT': temperature debut refroidissement\n    'TFHT': temperature fin refroidissement\n    'DTHT': decrement de temperature\n    'NHTR': donnees des proportions de phases finales pour\n            differents trajets de refroidissement (objet NUAGE)\n    'NLEB': donnees modele de Leblond au chauffage (objet NUAGE)\n    'ZA'  : proportion d'austenite\n    'ZF'  : proportion de ferrite\n    'ZB'  : proportion de bainite\n    'ZM'  : proportion de martensite\n    'MS'  ; temperature de transition martensitique\n\n\n  \n10.2 Modele PARALLELE \n--------------------- \n   Modele PARALLELE (combinaison lineaire)\n   ----------------\n\n   Les coefficients de phases sont les 4 premieres lettres des noms\n   de phases participant au modele.\n\n\n  \n10.3 Modele ZTMAX \n----------------- \n   Modele ZTMAX (transition entre 2 phases)\n   ------------\n\n   'PHA1', 'PHA2' : proportions phase1 / phase 2\n   'VIPH' : valeur maxi de la variable\n   'VDEH' : valeur mini de la variable\n   'AC1', 'AC2': debut et fin de transition 1->2 quand la variable croit\n   'AC3', 'AC4': debut et fin de transition 2->1 quand la variable\n                 decroa\u00aet\n   'VPAR' : nom de la variable parametre (par defaut 'T')\n  \n11. FISSURE \n=========== \n \n     Notations : f : coefficient de frottement\n                 e : ouverture en entree de fissure\n                 RE : nombre de Reynolds\n                 REC : nombre de Reynolds critique\n\n  \n11.1 loi POISEU_BLASIUS \n----------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi de frottement POISEU_BLASIUS |\n   -------------------------------------------------------\n     C'est la loi par defaut pour la formulation FISSURE.\n     En regime laminaire : f=96/RE\n     En regime turbulent lisse : f=0.316*RE^(-0.25) (Blasius)\n     Le nombre de Reynolds critique REC vaut 2042 (intersection entre\n     ces 2 fonctions)\n\n     'RUGO': rugosite (m)\n             RUGO/2e doit etre inferieur a 1e-4\n\n  \n11.2 loi POISEU_COLEBROOK \n------------------------- \n   --------------------------------------------------------\n   | Parametres pour la loi de frottement POISEU_COLEBROOK |\n   --------------------------------------------------------\n     f = max(96/RE;Colebrook)\n     Formule implicite de Colebrook  :\n     1/sqrt(f) = -2 log(RUGO/2e/3.7+2.51/RE/sqrt(f)) (log base 10)\n     Le nombre de Reynolds critique varie avec la rugosite\n\n     'RUGO': rugosite (m)\n             RUGO/2e doit etre superieur ou egal a 1e-4\n\n  \n11.3 loi FROTTEMENT1 \n-------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi de frottement FROTTEMENT1    |\n   -------------------------------------------------------\n     En regime laminaire : f=k/RE\n     En regime turbulent : f=(a+bRE^c)^d\n\n     'REC': nombre de Reynolds critique donne par l utilisateur\n     'FK': k\n     'FA': a\n     'FB': b\n     'FC': c\n     'FD': d\n\n\n  \n11.4 loi FROTTEMENT2 \n-------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi de frottement FROTTEMENT2    |\n   -------------------------------------------------------\n     En regime laminaire : f=k/RE\n     En regime turbulent : f=a(b+clogRE)^d\n\n     'REC': nombre de Reynolds critique donne par l utilisateur\n     'FK': k\n     'FA': a\n     'FB': b\n     'FC': c\n     'FD': d\n\n  \n11.5 loi FROTTEMENT3 \n-------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi de frottement FROTTEMENT3    |\n   -------------------------------------------------------\n     FROT3 : k*Colebrook sur toute la gamme de Reynolds\n\n     'RUGO': rugosite (m)\n             RUGO/2e doit etre superieur ou egal a 1e-4\n     'FK': k\n\n  \n11.6 loi FROTTEMENT4 \n-------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi de frottement FROTTEMENT4    |\n   -------------------------------------------------------\n     FROT4 : k*(max(96/RE;Colebrook))\n\n     'RUGO': rugosite (m)\n             RUGO/2e doit etre superieur ou egal a 1e-4\n     'FK': k\n  \n12. LIAISON \n=========== \n \n   Voir egalement notice DYNE\n   'SORT' : composante optionnelle (type TABLE)\n     la table est indicee par l'objet (type MMODEL) de liaison\n\n  \n12.1 loi POINT_PLAN FLUIDE \n-------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_PLAN FLUIDE            |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'INER' : 'COEFFICIENT_INERTIE'\n   'CONV' : 'COEFFICIENT_CONVECTION'\n   'VISC' : 'COEFFICIENT_VISCOSITE'\n   'PELO' : 'COEFFICIENT_P_D_C_ELOIGNEMENT'\n   'FRAP' : 'COEFFICIENT_P_D_C_RAPPROCHEMENT'\n   'JFLU' : 'JEU_FLUIDE'\n\n  \n12.2 loi POINT_PLAN FROTTEMENT \n------------------------------ \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_PLAN FROTTEMENT        |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'JEU'  :\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n\n  \n12.3 loi POINT_PLAN \n------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_PLAN                   |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'JEU'  :\n\n    composantes optionnelles\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n   'PERM' : 'LIAISON_PERMANENTE'  (type ENTIER 0 ou 1)\n   'SPLA' : 'SEUIL_PLASTIQUE'\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.4 loi POINT_POINT FROTTEMENT \n------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_POINT FROTTEMENT       |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'JEU'  :\n   'POIB' : 'POINT_B'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n   'MODE' :\n\n  \n12.5 loi POINT_POINT DEPLACEMENT_PLASTIQUE \n------------------------------------------ \n   -------------------------------------------------------\n   | Pour la loi POINT_POINT DEPLACEMENT_PLASTIQUE       |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'ECRO' : 'ECROUISSAGE'\n   'JEU'  :\n   'POIB' : 'POINT_B'\n   'PERM' : 'LIAISON_PERMANENTE'  (type ENTIER 0 ou 1)\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.6 loi POINT_POINT ROTATION_PLASTIQUE \n--------------------------------------- \n   -------------------------------------------------------\n   | Pour la loi    POINT_POINT ROTATION_PLASTIQUE       |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'ECRO' : 'ECROUISSAGE'\n   'JEU'  :\n   'POIB' : 'POINT_B'\n   'PERM' : 'LIAISON_PERMANENTE'  (type ENTIER 0 ou 1)\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'ELAS' :  (type ENTIER 0 ou 1)\n\n  \n12.7 loi POINT_POINT \n-------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi    POINT_POINT               |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'JEU'  :\n   'POIB' : 'POINT_B'\n   'PERM' : 'LIAISON_PERMANENTE'  (type ENTIER 0 ou 1)\n\n   composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'LOIC' : 'LOI_DE_COMPORTEMENT' (type EVOLUTION)\n\n  \n12.8 loi POINT_CERCLE MOBILE \n---------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_CERCLE MOBILE          |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'PCER' : 'CERCLE'\n   'RAYO' : 'RAYON'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composantes optionnelles\n   'CINT' : 'CONTACT_INTERIEUR'\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.9 loi POINT_CERCLE FROTTEMENT \n-------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_CERCLE FROTTEMENT      |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'EXCE' : 'EXCENTRATION'\n   'RAYO' : 'RAYON'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composantes optionnelles\n   'CINT' : 'CONTACT_INTERIEUR'\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.10 loi POINT_CERCLE \n---------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POINT_CERCLE                 |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'EXCE' : 'EXCENTRATION'\n   'RAYO' : 'RAYON'\n\n    composante optionnelle\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.11 loi CERCLE_PLAN FROTTEMENT \n-------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi CERCLE_PLAN FROTTEMENT       |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'JEU'  :\n   'RAYS' : 'RAYON_SUPPORT'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composante optionnelle\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.12 loi CERCLE_CERCLE FROTTEMENT \n---------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi CERCLE_CERCLE FROTTEMENT     |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'EXCE' : 'EXCENTRATION'\n   'RAYS' : 'RAYON_SUPPORT'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n   'RAYB' : 'RAYON_BUTEE'\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'CINT' : 'CONTACT_INTERIEUR'\n\n  \n12.13 loi PROFIL_PROFIL INTERNE/EXTERNE \n--------------------------------------- \n   -------------------------------------------------------\n   | Parametres pour les lois PROFIL_PROFIL INTERNE      |\n   |                          PROFIL_PROFIL EXTERNE      |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'RAID' : 'RAIDEUR'\n   'PFIX' : 'PROFIL_FIXE' (type MAILLAGE)\n   'PMOB' : 'PROFIL_MOBILE' (type MAILLAGE)\n   'ERAI' : 'EXPOSANT_RAIDEUR'\n\n  \n12.14 loi LIGNE_LIGNE FROTTEMENT \n-------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi LIGNE_LIGNE FROTTEMENT       |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'LIMA' : 'LIGNE_MAITRE' (type MAILLAGE)\n   'LIES' : 'LIGNE_ESCLAVE'  (type MAILLAGE)\n   'RAID' : 'RAIDEURS'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n   'JEU'  :\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'RECH' : 'RECHERCHE' (type ENTIER 0 : local, 1 global)\n   'SYME' : 'SYMETRIE' (type ENTIER 0 ou 1)\n\n  \n12.15 loi LIGNE_CERCLE FROTTEMENT \n--------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi LIGNE_CERCLE FROTTEMENT      |\n   -------------------------------------------------------\n   'NORM' : 'NORMALE' (type POINT)\n   'LIMA' : 'LIGNE_MAITRE' (type MAILLAGE)\n   'LIES' : 'LIGNE_ESCLAVE' (type MAILLAGE)\n   'RAID' : 'RAIDEURS'\n   'GLIS' : 'COEFFICIENT_GLISSEMENT'\n   'ADHE' : 'COEFFICIENT_ADHERENCE'\n   'RTAN' : 'RAIDEUR_TANGENTIELLE'\n   'ATAN' : 'AMORTISSEMENT_TANGENTIEL'\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n   'RECH' : 'RECHERCHE' (type ENTIER 0 : local, 1 global)\n   'RAYO' : 'RAYON'\n   'ACTN' : 'ACTNOR' (type ENTIER 0 ou 1)\n   'INVE' : 'INVERSION' (type ENTIER 0 ou 1)\n\n  \n12.16 loi PALIER_FLUIDE RHODE_LI \n-------------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi PALIER_FLUIDE RHODE_LI       |\n   -------------------------------------------------------\n   'LONG' : 'LONGUEUR_PALIER'\n   'RAYO' : 'RAYON_ARBRE'\n   'VISC' : 'VISCOSITE_FLUIDE'\n   'RHOF' :  'RHO_FLUIDE'\n   'PADM' : 'PRESSION_ADMISSION'\n   'VROT' : 'VITESSE_ARBRE'\n   'EPSI' : 'CRITERE_ARRET'\n   'PHII' :\n   'AFFI' :\n   'TLOB' : 'GEOMETRIE_PALIER'\n\n    composantes optionnelles\n   'AMOR' : 'AMORTISSEMENT'\n\n  \n12.17 loi COUPLAGE DEPLACEMENT \n------------------------------ \n   -------------------------------------------------------\n   | Parametres pour la loi COUPLAGE DEPLACEMENT         |\n   -------------------------------------------------------\n   'ORIG' : 'ORIGINE'\n   'COEF  : 'COEFFICIENT'\n\n  \n12.18 loi COUPLAGE VITESSE \n-------------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi COUPLAGE VITESSE             |\n   -------------------------------------------------------\n   'ORIG' : 'ORIGINE'\n   'COEF  : 'COEFFICIENT'\n\n  \n12.19 loi POLYNOMIALE \n--------------------- \n   -------------------------------------------------------\n   | Parametres pour la loi POLYNOMIALE                  |\n   -------------------------------------------------------\n   'COEF' : 'COEFFICIENT'\n   'PCO1' ... 'PCO9' : points origines (maximum 9)\n   'TCO1' ... 'TCO9' : tables contributions (maximum 9)\n\n\n  \n12.20 loi NEWMARK MODAL \n----------------------- \n           Loi non compatible avec DYNE\n   -------------------------------------------------------\n   | Parametres pour la loi NEWMARK MODAL                |\n   -------------------------------------------------------\n   'JEU'  :\n   'EXCE' : soit u le deplacement normal,\n         si jeu < 0     u - exce > jeu\n         si jeu > 0     u - exce < jeu\n   'FROT' : coefficient de frottement\n   'MOFR' : modele (type MMODEL) sur lequel s'applique le frottement\n  \n13. DIFFUSION \n============= \n \n  \n13.1 loi de FICK \n---------------- \n   -------------------------------------------------------\n   | Parametres pour la loi FICK                         |\n   -------------------------------------------------------\n   'KD'   : coefficient de diffusion\n   'CDIF' : terme capicitif, analogue a (rho*Cp) en thermique\n\n  \n13.2 DIFFUSION ORTHOTROPE \n------------------------- \n   -----------------------------------------------------------------\n   | Noms des parametres pour une formulation DIFFUSION ORTHOTROPE |\n   -----------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n     'KD1','KD2','KD3'    :  diffusivites\n     'RHO'                :  masse volumique\n     'CDIF'               :  terme capacitif,\n                             analogue a (rho*Cp) en thermique\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n    Les noms des parametres pour les differents cas bidimensionnels\n    sont resumes dans le tableau suivant :\n\n           -------------------------------------------\n           | bidimensionnel et  | serie de Fourier   |\n           | axisymetrique      |                    |\n           -------------------------------------------\n           | 'KD1','KD2'        | 'KD1','KD2','KD3'  |\n           | 'CDIF','RHO'       | 'CDIF','RHO'       |\n           -------------------------------------------\n\n  \n13.3 DIFFUSION ANISOTROPE \n------------------------- \n   -----------------------------------------------------------------\n   | Noms des parametres pour une formulation DIFFUSION ANISOTROPE |\n   -----------------------------------------------------------------\n\n   Massifs tridimensionnels\n   ------------------------\n\n      'KD11','KD21','KD22'  : les termes independants de la matrice\n      'KD31','KD32','KD33'  : de diffusivite anisotrope\n      'RHO'                 : masse volumique\n      'CDIF'                : terme capacitif,\n                              analogue a (rho*Cp) en thermique\n\n\n   Massifs bidimensionnels\n   -----------------------\n\n     Les noms des parametres pour les differents cas bidimensionnels\n     sont resumes dans le tableau suivant :\n\n           -------------------------------------------\n           | bidimensionnel et    | serie de Fourier |\n           | axisymetrique        |                  |\n           -------------------------------------------\n           | 'KD11','KD21','DK22' | 'KD11','KD21',   |\n           |                      | 'KD22','KD33'    |\n           | 'CDIF','RHO'         | 'CDIF','RHO'     |\n           -------------------------------------------\n  \n14. Definition des reperes d'orthotropie et unidirectionnels \n============================================================ \n \n                     | 'DIRECTION' P1 (P2) | | ('PARALLELE')        |\n   MAT1 = MATE MODL1 |                     | | 'PERPENDICULAIRE'    | ...\n                     |   'RADIAL' P1  (P2) | | 'INCLINE' FLOT1 (P3) |\n\n           ... NOMCi VALi ...    ;\n\n    Les proprietes d'orthotropie et d'anisotropie sont donnees dans\n    des reperes qui dependent des elements coques ou massifs et qui\n    sont definis comme suit :\n\n  \n14.1 Reperes d'orthotropie pour elements coques \n----------------------------------------------- \n           ----------------------------------------------\n           | Reperes d'orthotropie pour elements coques |\n           ----------------------------------------------\n\n\n    Les reperes d'orthotropie sont definis par la donnee de la premiere\n    direction d'orthotropie. On commence par definir un premier vecteur\n    VEC1 par :\n\n    'DIRECTION'   : on projette la direction P1 (type POINT) sur le plan\n                    tangent a la coque, ce qui donne un vecteur VEC1.\n\n    'RADIAL'      : equivaut a  \"DIRECTION (PT - P1)\", PT etant un point\n                    courant de la coque (direction variable en fonction\n                    du point de l'element).\n\n    puis on specifie la premiere direction d'orthotropie par :\n\n    'PARALLELE'      : VEC1 est alors la premiere direction\n                       d'orthotropie\n\n    'PERPENDICULAIRE': La premiere direction d'orthotropie est alors\n                       perpendiculaire a VEC1\n\n    'INCLINE'        : La premiere direction d'orthotropie fait un\n                       angle +/-FLOT1 (type FLOTTANT) avec la direction\n                       VEC. P3 (type POINT) donne la direction de la\n                       normale exterieure a la coque et donc le signe de\n                       l'angle. Si ce vecteur n'est pas fourni,\n                       l'orientation est celle de la normale a la coque.\n\n    Par exemple, dans le cas d'une coque cylindrique modelisee en 3D ou\n    en 2D Fourier, on ecrira 'DIRECTION' P1, P1 etant dirige selon l'axe\n    du cylindre, puis 'PARALLELE' si la premiere direction d'orthotropie\n    est selon l'axe, 'PERPENDICULAIRE' si elle est perpendiculaire a l'axe,\n    ou 'INCLINE' FLOT1 si elle est en helice le long du cylindre.\n\n   Remarque 1 :\n   -------------\n   La direction P2 n'est pas utilisee dans le cas des elements coques.\n   La 3eme direction est toujours perpendiculaire a la surface de la\n   coque.\n\n   Remarque 2 :\n   -------------\n   Pour les elements joints 3D elastiques orthotropes, les reperes\n   d'orthotropie sont identiques a ceux des elements coques. Seule\n   l'option 'RADIAL' est interdite.\n\n   Remarque 3 :\n   -------------\n   L'option 'RADIAL' est interdite pour les coques minces 2D.\n\n\n  \n14.2 Reperes d'orthotropie pour elements massifs \n------------------------------------------------ \n           -----------------------------------------------\n           | Reperes d'anisotropie pour elements massifs |\n           -----------------------------------------------\n\n    On construit d'abord un triedre a partir des deux vecteurs VEC1 et\n    VEC2 fournis par l'utilisateur. Le premier axe correspond a VEC1.\n    Le troisieme axe est perpendiculaire aux vecteurs VEC1 et VEC2.\n    Le deuxieme axe complete le triedre. Les vecteurs VEC1 et VEC2 sont\n    donnes par :\n\n    'DIRECTION'   : la direction P1 (type point) correspond a VEC1 et\n                    la direction P2 (type point) correspond a VEC2 .\n\n    'RADIAL'      : en dimension 2, VEC1 joint le point courant a P1;\n                    en dimension 3, VEC1 est selon l'axe P1 P2 et VEC2\n                    est selon la perpendiculaire a VEC1 menee depuis\n                    le point courant.\n\n    Le repere d'anisotropie correspond au triedre defini ci-dessus\n    eventuellement tourne autour de l'axe 3 :\n\n    'PARALLELE'      : VEC1 est alors la premiere direction\n                       d'orthotropie (aucune rotation autour de l'axe 3)\n\n    'PERPENDICULAIRE': La premiere direction d'orthotropie est alors\n                       perpendiculaire a VEC1 (rotation de +90 autour\n                       de l'axe 3)\n\n    'INCLINE'        : La premiere direction d'orthotropie fait un\n                       angle FLOT1 (type FLOTTANT) avec la direction\n                       VEC1 (rotation d'un angle quelconque autour\n                       de l'axe 3)\n\n    Remarque 1 :\n    -------------\n    Dans un cas bidimensionnel, la definition d'un seul vecteur (VEC1)\n    est suffisante. Le deuxieme axe correspond a un vecteur qui fait\n    un angle de + 90 avec le vecteur VEC1 dans le plan.\n    Le troisieme vecteur est donc toujours hors-plan sauf dans le cas\n    ci-dessous.\n    En 2D Fourier, pour les modeles MECANIQUE ORTHOTROPE, il est\n    possible d'incliner le repere d'orthotropie avec l'option INCLINE\n    suivie de 2 reels FLOT1 et FLOT2. FLOT1 est l'angle de rotation de\n    VEC1 autour du vecteur hors-plan (axe 3) et FLOT2 est l'angle de\n    rotation des vecteurs 2 et 3 autour du 1er vecteur.\n\n    Remarque 2 :\n   -------------\n    La direction P3 n'est pas utilisee dans le cas des elements massifs.\n\n\n  \n14.3 Direction des materiaux unidirectionnels \n--------------------------------------------- \n           ---------------------------------------------\n           | Direction des materiaux unidirectionnels  |\n           ---------------------------------------------\n\n    La syntaxe ci-dessus pour les reperes d'orthotropie (ou\n    d'anisotropie )dans les cas des elements coques et massifs,\n    s'applique egalement aux materiaux unidirectionnels. Dans ce\n    cas le premier axe d'orthotropie correspond a la direction des\n    materiaux unidirectionnels.\n  \n15. PROPRIETES GEOMETRIQUES \n=========================== \n \n  \n15.1 Elements Massifs \n--------------------- \n  -------------------------------------------------------\n  | Noms des caracteristiques pour les elements massifs |\n  -------------------------------------------------------\n\n   ('DIM3')    : epaisseur dans le cas des contraintes planes\n\n\n  \n15.2 Elements COQ2, COQ3, COQ4, DKT, DST \n---------------------------------------- \n  ---------------------------------------------------------------------\n  | Noms des caracteristiques pour les elements COQ2, COQ3, COQ4, DKT,\n  |                                             DST\n  ---------------------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   ('ALFA')  : coefficient utilise dans le critere de plasticite\n               (par defaut 2/3)\n   ('EXCE')  : excentrement du plan moyen de la coque par rapport au\n               plan de reference, compte positif dans le sens de la\n               normale (non disponible pour COQ3)\n   ('DIM3')  : epaisseur dans l'autre direction (cas des COQ2 en\n                                                 contraintes planes)\n\n\n  \n15.3 Elements COQ6, COQ8 \n------------------------ \n   ----------------------------------------------------------\n   | Noms des caracteristiques pour les elements COQ6, COQ8 |\n   ----------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   ('EXCE')  : excentrement par rapport au plan moyen, compte positif\n               dans le sens de la normale\n\n\n  \n15.4 Elements ROT3 \n------------------ \n   ---------------------------------------------------\n   | Noms des caracteristiques pour les elements ROT3 |\n   ---------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque (avec 'MATE')\n\n\n  \n15.5 Elements POJS, TRIS, QUAS \n------------------------------ \n   --------------------------------------------------------------\n   | Noms des caracteristiques pour un element POJS, TRIS, QUAS |\n   --------------------------------------------------------------\n\n   La section est decrite dans le plan xOy. L'axe Ox du repere de\n   description de la section est l'axe local Oy de l'element TIMO.\n\n   'SECT'    : aire de la section droite (seulement pour les elements POJS)\n\n   'ALPY'    : facteur de gauchissement dans la direction locale Oy\n               coefficient qui multiplie la contrainte de cisaillement\n               sxy (Ox et Oy sont des axes locaux de l'element TIMO).\n\n   'ALPZ'    : facteur de gauchissement dans la direction locale Oz\n               coefficient qui multiplie la contrainte de cisaillement\n               sxz (Ox et Oz sont des axes locaux de l'element TIMO).\n\n   Ces coefficients dans le cas d'une section homogene peuvent etre\n   definis d'apres la theorie de Timoshenko.\n\n\n  \n15.6 Elements JOINT generalise \n------------------------------ \n   -------------------------------------------------------------------\n   | Noms des caracteristiques pour les elements de joint generalise |\n   -------------------------------------------------------------------\n\n   ('EPAI')    : epaisseur du joint\n\n\n  \n15.7 Elements BARRE \n------------------- \n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element BARRE |\n   ---------------------------------------------------\n\n   'SECT'    : section droite\n\n\n  \n15.8 Elements CERCE \n------------------- \n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element CERCE |\n   ---------------------------------------------------\n\n   'SECT'    : section droite\n\n\n  \n15.9 Elements POUTRE, TIMO \n-------------------------- \n   ----------------------------------------------------------\n   | Noms des caracteristiques pour un element POUTRE, TIMO |\n   ----------------------------------------------------------\n\n    Les caracteristiques de la poutre sont definies dans le repere local\n    de l'element (Ox axe de la poutre oriente du premier point vers\n    le second, Oy defini si necessaire par l'utilisateur, Oz completant\n    le repere).Il faut que les axes Oy Oz soient des axes pricipaux de\n    la section car on ne definit pas les moments d'inertie croisees\n    (sauf poul l'element TIMO avec un modele SECTION).\n\n    'SECT'     : section droite\n    'INRY'     : moment d'inertie par rapport a l'axe local Oy\n                 (3D seulement)\n    'INRZ'     : moment d'inertie par rapport a l'axe local Oz\n    'TORS'     : moment d'inertie de torsion (3D seulement)\n    ('SECY')   : section reduite a l'effort tranchant selon l'axe local\n    ('SECZ')   : section reduite a l'effort tranchant selon l'axe local\n                 (3D seulement)\n    ('VECT')   : mot-cle permettant de definir l'axe local Oy. Il doit\n                 etre suivi par un vecteur appartenant au plan xOy\n                 (objet de type POINT) (TRID seulement).\n    DX, DY, DZ : distances permettant de calculer des contraintes a\n                 partir des moments (cf VMIS) :\n    ('DX  ') | : distance associee a la torsion (TORS)\n    ('DY  ') | : distance a la fibre neutre suivant l'axe Oy\n    ('DZ  ') | : distance a la fibre neutre suivant l'axe Oz\n\n    Par defaut, les sections SECY et SECZ sont prises egales a SECT pour\n    l'element TIMO et pour les elements POUTRE on neglige l'energie\n    de deformation de cisaillement (cela  revient a imposer des valeurs\n    infinies pour les sections reduites)\n\n\n  \n15.10 Elements TUYAU \n-------------------- \n   ---------------------------------------------------\n   | Noms des caracteristiques pour un element TUYAU |\n   ---------------------------------------------------\n\n    Cet element sert a representer des portions de tuyau droit ou de\n    coude, la differenciation se faisant par le rayon de courbure.\n    Les caracteristiques du tuyau sont definies dans le repere local de\n    l'element, de la Meme facon que pour l'element POUTRE.\n\n   'EPAI'    : epaisseur\n   'RAYO'    : rayon exterieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n   ('VECT')  : mot-cle permettant de definir l'axe local Oy. Il doit\n               etre suivi par un POINT representant un vecteur de xOy.\n               Cette donnee est imperative s'il s'agit d'un coude.\n\n               Attention : pour les coudes, le vecteur local Oz, deduit\n               ---------\n               de Ox et Oy, est situe dans le plan du coude et oriente\n               par convention vers l'extrados du coude.\n   ('PRES')  : pression interne\n   ('CFFX')  : facteur multiplicatif permettant de calculer la\n               contrainte de membrane a partir de l'effort EFFX, pour\n               le critere de plasticite (1. par defaut), (cf VMIS).\n   ('CFMX')  : facteur multiplicatif permettant de calculer la\n               contrainte de torsion a partir du moment MOMX, pour\n               le critere de plasticite (3.**0.5 par defaut), (cf VMIS).\n   ('CFMY')  : facteur multiplicatif permettant de calculer la\n               contrainte de flexion a partir du moment MOMY, pour\n               le critere de plasticite ((pi/4)*gamma par defaut),\n               (cf VMIS).\n   ('CFMZ')  : facteur multiplicatif permettant de calculer la\n               contrainte de flexion a partir du moment MOMZ, pour\n               le critere de plasticite ((pi/4)*gamma par defaut),\n               (cf VMIS).\n   ('CFPR')  : facteur multiplicatif permettant de calculer la\n               contrainte circonferentielle due a la pression. Facteur\n               non utilise pour le critere de plasticite mais\n               seulement dans le calcul de la contrainte equivalente\n               (0. par defaut), (cf VMIS).\n\n               Remarque : pour CFMY et CFMZ, gamma est egal a 1. pour\n               ---------\n               les parties droites et a maxi ( 1., (8/9)/lambda**2/3 )\n               pour les coudes, avec lambda = epai*raco/rmoy**2 oa\u00b9\n               rmoy est le rayon moyen du tuyau.\n\n\n  \n15.11 Elements LINESPRING \n------------------------- \n   --------------------------------------------------------\n   | Noms des caracteristiques pour un element LINESPRING |\n   --------------------------------------------------------\n\n   'EPAI'    : epaisseur de la coque\n   'FISS'    : profondeur de l'entaille\n   'VX  ' |\n   'VY  ' |  : composantes du vecteur normal au plan de la coque (son\n   'VZ  ' |    sens indique le cote de la coque o\u00c2\u00ba s'ouvre l'entaille)\n\n    Remarque :\n    __________\n\n    Il ne doit pas y avoir d'angle inferieur a 175 degres ou superieur\n    a 185 degres entre les elements dans leur plan (defini a l'aide\n    du vecteur normal).\n\n\n  \n15.12 Elements TUYAU FISSURE \n---------------------------- \n   -----------------------------------------------------------\n   | Noms des caracteristiques pour un element TUYAU FISSURE |\n   -----------------------------------------------------------\n\n     Cet element permet de representer des portions de tuyau droit ou\n     de coude fissure, la difference etant faite d'apres le rayon de\n     courbure.\n\n     Les caracteristiques du tuyau sont definies dans le repere local de\n     l'element, de la meme facon que pour l'element POUTRE.\n\n    'EPAI'    : epaisseur\n    'RAYO'    : rayon exterieur du tuyau\n    'ANGL'    : ouverture totale en degre de la fissure\n    'VX  ' |\n    'VY  ' | : composantes du vecteur definissant l'axe du tuyau fissure\n    'VZ  ' |\n    'VXF '  |\n    'VYF '  | : composantes du vecteur definissant l'orientation de la\n    'VZF '  |   fissure\n\n\n    Remarque :\n    __________\n\n    Le domaine de validite de cet element correspond a un rapport\n    RAYO/EPAI compris entre 5.5 et 20.5.\n\n\n  \n15.13 Elements RACCORD \n---------------------- \n   -----------------------------------------------------\n   | Noms des caracteristiques pour un element RACCORD |\n   -----------------------------------------------------\n\n    Pour les elements de raccord fluide-structure autres que LITU,\n    il est necessaire de connaa\u00aetre la position du fluide par rapport\n    a l'element de raccord. Pour cela on donne derriere le mot-cle\n    'LIQU' l'objet geometrique representant le fluide.\n\n\n  \n15.14 Elements LSE2 \n------------------- \n   --------------------------------------------------\n   | Noms des caracteristiques pour un element LSE2 |\n   --------------------------------------------------\n\n    'RAYO'   : rayon interieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n\n\n  \n15.15 Elements LITU \n------------------- \n   --------------------------------------------------\n   | Noms des caracteristiques pour un element LITU |\n   --------------------------------------------------\n\n    'RAYO'   : rayon interieur du tuyau\n   ('RACO')  : rayon de courbure s'il s'agit d'un coude\n   ('VECT')  : mot-cle permettant de definir l'axe local Oy. Il doit\n               etre suivi par un POINT representant un vecteur de xOy.\n               Cette donnee est imperative s'il s'agit d'un coude.\n\n               Attention : pour les coudes, le vecteur local Oz, deduit\n               ---------\n               de Ox et Oy, est situe dans le plan du coude et oriente\n               par convention vers l'extrados du coude.\n\n\n  \n15.16 Elements HOMOGENEISE \n-------------------------- \n   ---------------------------------------------------------\n   | noms des caracteristiques pour un element HOMOGENEISE |\n   ---------------------------------------------------------\n\n   'SCEL'    : mesure de la cellule elementaire agrandie\n   'SFLU'    : mesure du domaine fluide dans la cellule agrandie\n   'EPS '    : pas tubulaire du milieu\n   'NOF1'    : rapport de la norme de la deformee modale du tube\n               par la norme de la pression selon l'axe du faisceau\n   'NOF2'    : rapport du produit scalaire de la deformee modale du tube\n               et de la deformee modale de la pression par le carre\n               de la norme de la pression selon l'axe du faisceau\n\n    Remarque :\n    __________\n\n    Dans le cas de l'etude d'une tranche , les coefficients 'NOF1' et\n    'NOF2' valent 1 tous les deux.",
  },
  {
    name: "MATOUTIL",
    url: "MATOUTIL",
    documentation:
      '$$$$ MATOUTIL NOTICE  GOUNAND   21/04/09    21:15:04     10944          \n                                             DATE     21/04/09\n\n\n\n    Procedure MATOUTIL                          Voir aussi : MAILTOPO\n    ------------------                                     \n    Objet :\n    _______\n\n    "MAilTOpo UTILitaires"\n\n    Des utililitaires utilises par la procedure MAILTOPO.\n    ',
  },
  {
    name: "MATP",
    url: "MATP",
    documentation:
      "$$$$ MATP     NOTICE  CHAT      11/09/12    21:17:11     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MATP                           Voir aussi :\n    --------------  \n    RIG2 = MATP MODE1  RIG1 (TAB2) ;\n\n\n    Objet :\n    _______\n\n    L'operateur MATP (MAtrice en Trace de charge TH) permet la\nconstruction des matrices elementaires du systeme matriciel en\ntrace de charge dans le cadre de la resolution des equations\nde DARCY par une methode d'elements finis mixtes hybrides.\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet modele (type MMODEL) decrivant la formulation\n                utilisee. On attend une formulation DARCY (cf. MODE).\n\n       RIG1   : Objet rigidite de sous type MASSEHYB contenant les\n                matrices masses elementaires pour les elements\n                hybrides (cf. MHYB).\n\n       TAB2   : Objet table de sous type DARCY_TRANSITOIRE contenant\n                les conditions initiales et les coefficients pour le\n                schema d'integration en temps dans le cas transitoire\n                (cf procedure darcytra).\n\n       RIG2   : Objet rigidite resultat de sous type MATP contenant\n                les matrices elementaires du systeme final en TH.",
  },
  {
    name: "MATR",
    url: "MATR",
    documentation:
      "$$$$ MATR     NOTICE  FANDEUR   14/10/10    21:15:16     8178           \n                                             DATE     14/10/10\n\n  Op\u00e9rateur MATR                           Voir aussi :\n    --------------  \n\n    Cet op\u00e9rateur a \u00e9t\u00e9 d\u00e9branch\u00e9.\n    Se reporter \u00e0 l'op\u00e9rateur MATE(RIAU).",
  },
  {
    name: "MAX1",
    url: "MAX1",
    documentation:
      "$$$$ MAX1     NOTICE  CHAT      11/09/12    21:17:11     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MAX1                           Voir aussi :\n    --------------  \n                           |('AVEC')|\n    CHP1 = MAX1 CHP2 ( |        | LMOTS1 ) ;\n                           | 'SANS' |\n\n\n    Objet :\n    _______\n\n    L'operateur MAX1 norme un objet en le divisant par son maximum (de\ntelle sorte que son plus grand terme soit exactement egal a 1.).\n\n    On peut limiter la recherche du maximum a un sous-ensemble en donnant\nla liste des noms de composantes a considerer (mot-cle 'AVEC') ou a\nexclure (mot-cle 'SANS').\n\n    Commentaire :\n    _____________\n\n    CHP2   : objet a normer (type CHPOINT)\n\n    LMOTS1 : liste des noms de composantes a considerer ou a exclure\n             (type LISTMOTS)\n\n    CHP1   : objet resultat de meme type que CHP2 (type CHPOINT)",
  },
  {
    name: "MAXI",
    url: "MAXI",
    documentation:
      "$$$$ MAXI     NOTICE  BP208322  21/01/21    21:15:27     10861          \n                                             DATE     21/01/21\n\n    Operateur MAXIMUM                        Voir aussi : MINI   \n    -----------------                                     POIN   ELEM  \n    \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Maximum d'un objet\n    1.1 Syntaxe\n    1.2 Objet\n    1.3 Remarques\n2. Maximum d'une EVOLUTION\n    2.1 Syntaxe\n    2.2 Objet\n    2.3 Remarques\n3. Maximum de n ENTIERs ou FLOTTANTs\n    3.1 Syntaxe\n    3.2 Objet\n4. Maximum de n objets\n    4.1 Syntaxe\n    4.2 Objet\n\n  \n1. Maximum d'un objet1 \n===================== \n  \n1.1 Syntaxe \n----------- \n    OBJET1 =  MAXI  OBJET2   ('ABS')  ( |('AVEC')| LMOTS1 ) ;\n                                        | 'SANS' |\n    \n  \n1.2 Objet \n--------- \n    L'operateur MAXIMUM determine la plus grande valeur algebrique\nOBJET1 d'un objet OBJET2, ou de la valeur absolue d'OBJET2 si le\nmot-cle 'ABS' a ete donne.\n\n    On peut limiter la recherche du maximum a un sous-ensemble d'OBJET2\nen donnant la liste LMOTS1 (type LISTMOTS) des noms de composantes a\nconsiderer (mot-cle 'AVEC') ou a exclure (mot-cle 'SANS') dans la\nrecherche du maximum.\n\n    Types d'objets possibles :\n    ------------------------------\n    |  OBJET2     |     OBJET1   |\n    ------------------------------\n    |  CHPOINT    |    FLOTTANT  |\n    |  LISTENTI   |    ENTIER    |\n    |  LISTREEL   |    FLOTTANT  |\n    |  MCHAML     |    FLOTTANT  |\n    ------------------------------\n\n  \n1.3 Remarques \n------------- \n 1. La limitation a certaines composantes n'a pas de sens pour les\nobjets de type LISTENTI et LISTREEL.\n\n 2. On peut aussi utiliser les operateurs POIN ou ELEM pour chercher\nle lieu geometrique du maximum d'un champ.   \n    \n    \n  \n2. Maximum d'une EVOLUTION \n========================== \n \n  \n2.1 Syntaxe \n----------- \n    OBJET2 OBJET3 OBJET4  =  MAXI  OBJET1   ('ABS') \n\n  \n2.2 Objet \n--------- \n    L'operateur MAXIMUM determine le couple abscisse - ordonnee\n    de plus grande valeur algebrique, ainsi que l'indice de ce\n    couple pour un OBJET1 de type EVOLUTIO ne comportant qu'une\n    seule courbe. Si le  mot-cle 'ABS' a ete donne, il s'agit de\n    l'ordonnee de plus grande valeur absolue. \n    Le type d'OBJET2 est ENTIER, OBJET3 et OBJET4 sont de type\n    FLOTTANT. En cas de multiplicite de l'ordonnee maximale,\n    le couple de plus faible indice est renvoye.\n\n    Si OBJET1 de type EVOLUTIO comprend plusieurs courbes, \n    l'operateur construit par extension des objets \n    OBJET2, type LISTENTI, OBJET3 et OBJET4, type LISTREEL.\n    \n  \n2.3 Remarques \n------------- \n    Seules les EVOLUTIONs d'un LISTREEL en fonction d'un autre\n    LISTREEL sont permises.\n  \n3. Maximum de n ENTIERs ou FLOTTANTs \n==================================== \n \n  \n3.1 Syntaxe \n----------- \n      XMAX  =  MAXI  ('ABS')  X1  X2  (... Xn)   \n \n  \n3.2 Objet \n--------- \n    L'operateur MAXIMUM retourne dans XMAX le reel/entier\n    maximum des termes X1, X2, ..., Xn\n    (ou des termes |X1|, |X2|, ... |Xn|  si 'ABS est precise).\n    \n    \n  \n4. Maximum de n objets \n====================== \n \n  \n4.1 Syntaxe \n----------- \n      OBJET3   =  MAXI  ('ABS')  OBJET1  OBJET2  (OBJETi ...)   \n \n  \n4.2 Objet \n--------- \n    L'operateur MAXIMUM cr\u00e9e un objet de meme type que OBJET1, OBJET2,\n    OBJETi... en prenant la valeur maximum (eventuellement en valeur\n    absolue), terme \u00e0 terme, de OBJET1, OBJET2, OBJETi...\n    \n    Les types autorises sont LISTENTI, LISTREEL et CHPOINT. Pour les\n    objets CHPOINTS, les composantes et maillages supports doivent\n    etre identiques.\n    ",
  },
  {
    name: "MAYOTO",
    url: "MAYOTO",
    documentation:
      "$$$$ MAYOTO   NOTICE  CHAT      11/09/12    21:17:12     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure MAYOTO                     Voir aussi :\n        ----------------  \n        RES = MAYOTO  | SENB | TAB;\n                      |      |\n                      | CT   |\n                      |      |\n                      | CCP  |\n\n\n        Objet:\n        ------\n\n        Cette procedure permet un maillage automatique \n        d'eprouvettes SENB, CT, CCP .\n\n        Commentaire:\n        ------------\n\nEn entree :\n**********\n\n        SENB, CT, CCP mot cle indiquant le type d'eprouvette a mailler\n\n        TAB : table indicee par des mots,contenant les parametres \n              necessaires au maillage automatique de l'eprouvette \n              (type TABLE):\n\n                TAB.app: type de maillage proche de la fissure\n                          (=1 maillage rayonnant )\n                          (=0 maillage quadrille )\n             \n             \n    - Pour une SENB:\n \n                TAB.s : longueur de l'eprouvette (type FLOTTANT)\n                TAB.b : largeur de l'eprouvette (type FLOTTANT)\n                TAB.a : taille de la fissure (type FLOTTANT)\n                TAB.k : coefficient de finesse du maillage (type ENTIER)\n\n    - Pour une CT: \n \n                TAB.b : cote de l'eprouvette (type FLOTTANT)\n                TAB.a : longueur fissuree (type FLOTTANT)\n                TAB.k : coefficient de finesse du maillage (type ENTIER)\n\n    - Pour une CCP:\n\n                 TAB.h : demi largeur de l'eprouvette (type FLOTTANT)\n                 TAB.l : demi longueur de l'eprouvette (type FLOTTANT)\n                 TAB.lf:longueur fissuree (type FLOTTANT)\n  \n\nEn sortie :\n***********\n         \n        RES : table contenant les resultats (type TABLE).\n\n             Pour tous les types d'eprouvettes, la table contient les\n             resultats suivants:\n\n                 RES.e : eprouvette maillee\n                 RES.p : point extremite de la fissure\n                 RES.f : levre(s) de la fissure\n\n             Elle contient egalement des resultats particuliers a\n             chaque type d'eprouvette :\n\n    - Pour une SENB:\n\n                 RES.n : ligament de la fissure\n                 RES.i : point de chargement superieur en flexion 3 pts\n                 RES.u : point de chargement en bas a droite \n\n\n    - Pour une CT:\n\n                 RES.i : point de chergement situe dans le trou de la partie\n                         superieure\n                 RES.m : point de chargement dans la partie inferieure\n                 RES.g : maillage des goupille permettant une meilleure\n                         repartition des contraintes et evitant la \n                         plastification\n                 RES.n : ligament de la fissure \n\n    - Pour une CCP:\n\n                 RES.s : ligne en haut de l'eprouvette\n                 RES.o : cote de l'eprouvette\n                 RES.m : ligaments de la fissure\n                 RES.v : ligne de symetrie verticale\n\n\n        Remarque\n        --------\n            Des donnees incompatibles entraineront un echec complet de\n        la procedure.\n \n ",
  },
  {
    name: "MDIA",
    url: "MDIA",
    documentation:
      "$$$$ MDIA     NOTICE  CHAT      11/09/12    21:17:12     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur MDIA                          Voir aussi :\n     --------------  \n     Syntaxe EQEX (cf EQEX) :\n\n     ... 'EQEX' ... 'OPTI' MOT1 MOT2\n                    'ZONE' MOD2\n                    'OPER' 'MDIA' OBJ1\n                    'INCO' MOT3 (MOT4)\n\n\n\n\n     Objet :\n     _______\n\n     L'operateur MDIA discretise un terme lineaire dans une equation\nscalaire ou vectorielle. Cet operateur permet le couplage lineaire\nentre inconnues.\n\n     Dans le cas d'une equation scalaire portant sur T, le terme\ndiscretise est de la forme aT avec a coefficient scalaire par unite\nde temps.\n\n     Dans le cas d'un systeme d'equations le terme discretise peut\nprendre une forme plus generale permettant de coupler deux inconnues.\nSoit V l'inconnue sur laquelle porte l'equation consideree (inconnue\nduale). Le terme discretise est de la forme aT avec T inconnue sur\nlaquelle porte le couplage (inconnue primale) et a coefficient scalaire\nou vectoriel suivant les dimensions de T et V.\n\n     La convention de signe associee a ce terme est la suivante :\nlorsque a et T sont positifs, T (resp. V) diminue.\n\n     Cet operateur est appele par la procedure transitoire EXEC.\nLa syntaxe indiquee permet a l'utilisateur de construire a l'aide\nde l'operateur EQEX les donnees necessaires a l'operateur.\n\n\n     Commentaires :\n     ______________\n                                                                                \n    'OPTI' : Mot cle introduisant les options numeriques de MDIA\n     MOT1  : Type de discretisation spatiale ('EF', 'VF' ou 'EFM1')\n     MOT2  : Type de discretisation temporelle ('IMPL')\n\n    'ZONE' : Mot cle introduisant les informations geometriques\n     MOD2  : MODEL de sous-type 'NAVIER_STOKES' pour la zone ou\n             s'applique MDIA\n\n    'OPER' : Mot cle introduisant les donnees physiques associees\n             a l'operateur dont le nom suit\n    'MDIA' : Nom de l'operateur\n     OBJ1  : Coefficient a (CHPOINT ou FLOTTANT ou POINT ou MOT)\n\n    'INCO' : Mot cle introduisant le nom des inconnues primale et duale\n     MOT3  : Nom de l'inconnue primale T\n     MOT4  : Nom de l'inconnue duale V\n     Lorsque primale et duale sont identiques, MOT4 est optionnel\n\n\n     Resultats :\n     ___________\n\n    - La matrice \"masse\" est stockee dans un MATRIK et rangee dans la\ntable TAB1 a l'indice de type MOT MATELM.\n    - Aucun second-membre n'est cree.\n\n\n     Remarques :\n     ___________\n                                                                                \n     1) Lorsque OBJ1 est de type MOT, l'operateur utilise le champ\ncontenu dans la table INCO a l'indice MOT indique.\n\n     2) Le support geometrique (spg) des inconnues contient une des\nclasses de points de la table DOMAINE. Selon la formulation choisie\nles compatibilites suivantes sont verifiees :\n   - En formulation EF ou EFM1, le spg de la duale contient SOMMET\n   - En formulation VF le spg de la duale contient CENTRE\n   - lorsque les inconnues primale et duale sont differentes,\nle spg de l'inconnue primale est CENTRE ou SOMMET.\n\n     3) Dimensions et supports des donnees :\n\n                  +--------------------------------+\n                  |      D i m e n s i o n         |\n                  +--------------------------------+\n                  | duale V | primale T | coeff. a |\n    --------------+--------------------------------+\n    a T dans V      1         1           1\n    ->->\n    a T dans V      1         IDIM        IDIM\n    ->       ->\n    a T dans V      IDIM      1           IDIM\n      ->     ->\n    a T dans V      IDIM      IDIM        1\n    --------------+--------------------------------+\n\n    --------------+-----------+\n    primale T       S C S S C        S = SOMMET\n    duale   V       S C C C S        C = CENTRE\n    coeff   a       S C S C C\n    --------------+-----------+\n\n     4) L'utilisateur-programmeur developpant ses propres procedures\ntransitoire appellera MDIA suivant la syntaxe :\n     MDIA TAB1 ;\navec TAB1 : Table de sous type EQEX contenant les informations\n            physiques et numeriques de l'operateur MDIA. Cette\n            table est construite par l'operateur EQEX.",
  },
  {
    name: "MDNRIS",
    url: "MDNRIS",
    documentation:
      "$$$$ MDNRIS   NOTICE  CHAT      11/09/12    21:17:13     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure MDNRIS                         Voir aussi : FINVREPA\n    ----------------  \n      MDNRIS P*FLOTTANT;\n\n\n\n    Objet :\n    _______\n    procedure auxiliaire appelee par FINVREPA\n                                                           ",
  },
  {
    name: "MDRECOMB",
    url: "MDRECOMB",
    documentation:
      "$$$$ MDRECOMB NOTICE  CHAT      11/09/12    21:17:13     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure MDRECOMB                       Voir aussi :\n    ------------------  \n      MDRECOMB RXT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure MDRECOMB est une procedure interne appelee par EXECRXT.\n Cette procedure n'est executee qu'en presence de recombineurs. Celle-ci\n permet d'effectuer les bilans 0D (masse et energie) entre les especes \n qui entrent dans le recombineur et les especes qui sortent.\n\n    Commentaires\n    ____________\n\n    RXT : objet de type TABLE",
  },
  {
    name: "MEC1",
    url: "MEC1",
    documentation:
      "$$$$ MEC1     NOTICE  CHAT      11/09/12    21:17:13     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n            CALCUL ELASTIQUE EN MECANIQUE\n            -----------------------------\n\n La liste des objets manipules dans le cadre d'un calcul elastique en\nmecanique est :\n\n-----------------------------------------------------------------------\n|  MMODEL   : formulation et modele de comportement                   |\n-----------------------------------------------------------------------\n|  MCHAML   : Champ defini a l'interieur des elements                 |\n-----------------------------------------------------------------------\n|  CHPOINT  : Champ defini aux noeuds du maillage                     |\n-----------------------------------------------------------------------\n|  DEFORME  : Deformee d'un maillage sous un champ de deplacement     |\n-----------------------------------------------------------------------\n|  ENTIER   : Nombre entier                                           |\n-----------------------------------------------------------------------\n|  FLOTTANT : Nombre flottant                                         |\n-----------------------------------------------------------------------\n|  LISTENTI : Liste d'entiers (operateur LECT)                        |\n-----------------------------------------------------------------------\n|  LISTREEL : Liste de reels  (operateur PROG)                        |\n-----------------------------------------------------------------------\n|  LOGIQUE  : variable logique (vrai-faux)                            |\n-----------------------------------------------------------------------\n|  MAILLAGE : Geometrie de la structure etudiee                       |\n-----------------------------------------------------------------------\n|  MOT      : Mot                                                     |\n-----------------------------------------------------------------------\n|  RIGIDITE : Matrice de raideurs et de blocages                      |\n-----------------------------------------------------------------------\n|  SOLUTION : Famille de mode propre                                  |\n-----------------------------------------------------------------------\n|  VECTEUR  : Fleches (destine a etre trace)                          |\n-----------------------------------------------------------------------",
  },
  {
    name: "MEC2",
    url: "MEC2",
    documentation:
      "$$$$ MEC2     NOTICE  CHAT      11/09/12    21:17:13     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n*--------------------------------------------------------------------*\n*                                                                    *\n*           Exemple simple de calcul mecanique elastique             *\n* fonctionnant avec les anciennes structures AFFECT,MODELE,CHAMELEM  *\n*                                                                    *\n*--------------------------------------------------------------------*\n* Definition des options\n*\n           OPTI DIME 3 ELEM CU20 MODEL TRIDIM ; DENS 10 ;\n*\n* Maillage d'une barre de 5 elements CU20\n*\n  P1 = 0 0 0 ; P2 = 10 0 0 ; LI= P1 D 1 P2 ; SUB=LI TRAN (0 10 0) ;\n   TOTAL = SUB VOLU TRAN (0 0 50) COUL JAUN ; SUH = TOTAL FACE 2 ;\n     LIH = SUH COTE 2 ; TRAC TOTAL CACH (1000 -2000 1000) QUAL ;\n*\n* Formulation, materiau defini a l'aide de\n* la procedure ACIER (voir operateur MATE)\n*\n            OBJMOD = MODELE TOTAL MECANIQUE ELASTIQUE  CU20 ;\n                     CARM = ACIER A316L OBJMOD ;\n*\n* Conditions de blocages\n*\n                        ENC1 = BLOQ UZ SUB ;\n               ENC2 = BLOQ UY LI ; ENC3 = BLOQ UX P1 ;\n*\n* Blocage pour deplacements imposes\n*\n                        ENC4 = BLOQ UZ SUH ;\n                    ENC = ENC1 ET ENC2 ET ENC3 ;\n*\n* Raideur totale\n*\n                 RIG = (RIGI CARM OBJMOD) ET ENC ET ENC4 ;\n*\n* Valeur des deplacements imposes\n*\n                      FEXT = DEPI ENC4 1E-9  ;\n*\n* Force ponctuelle et force totale\n*\n         FNOD = FORCE LIH (0 1000 0) ; FTOT = FEXT ET FNOD ;\n*\n* Resolution  pour obtenir les deplacements\n*\n                        DEP = RESOU RIG FTOT ;\n*\n* Vecteur force et reaction\n*\n               VEF = VECTEUR FTOT 0.03 FX FY FZ ROUG ;\n                   REA = REAC (ENC4 ET ENC) DEP ;\n               VER = VECTEUR REA 0.01 FX FY FZ BLEU ;\n*\n* Contraintes et vonmises\n*\n               SSI = SIGMA DEP CARM OBJMOD; VM = VMIS SSI ;\n*\n* Deformee et trace\n*\n             DEF = DEFO TOTAL DEP 50 (VEF ET VER) VERT ;\n                   TRAC DEF VM (1000 -2000 1000) ;\n                                FIN ;",
  },
  {
    name: "MEC3",
    url: "MEC3",
    documentation:
      "$$$$ MEC3     NOTICE  CHAT      11/09/12    21:17:13     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n*--------------------------------------------------------------------*\n*                                                                    *\n*           Exemple simple de calcul mecanique elastique             *\n*    fonctionnant avec les nouvelles structures MMODEL et MCHAML     *\n*                                                                    *\n*--------------------------------------------------------------------*\n* Definition des options\n*\n           OPTI DIME 3 ELEM CU20 MODEL TRIDIM ; DENS 10 ;\n*\n* Maillage d'une barre de 5 elements CU20\n*\n  P1 = 0 0 0 ; P2 = 10 0 0 ; LI= P1 D 1 P2 ; SUB=LI TRAN (0 10 0) ;\n   TOTAL = SUB VOLU TRAN (0 0 50) COUL JAUN ; SUH = TOTAL FACE 2 ;\n     LIH = SUH COTE 2 ; TRAC TOTAL CACH (1000 -2000 1000) QUAL ;\n*\n* Formulation, materiau defini a l'aide de\n*\n   MODL1 = MODL TOTAL MECANIQUE ELASTIQUE CU20 ;\n    CARM = MATR MODL1 'YOUN' 2.E11 'NU' 0.3 'RHO' 7800. 'ALPH' 12.E-6 ;\n*\n* Conditions de blocages\n*\n                        ENC1 = BLOQ UZ SUB ;\n               ENC2 = BLOQ UY LI ; ENC3 = BLOQ UX P1 ;\n*\n* Blocage pour deplacements imposes\n*\n                        ENC4 = BLOQ UZ SUH ;\n                    ENC = ENC1 ET ENC2 ET ENC3 ;\n*\n* Raideur totale\n*\n                 RIG = (RIGI MODL1 CARM) ET ENC ET ENC4 ;\n*\n* Valeur des deplacements imposes\n*\n                      FEXT = DEPI ENC4 1E-9  ;\n*\n* Force ponctuelle et force totale\n*\n         FNOD = FORCE LIH (0 1000 0) ; FTOT = FEXT ET FNOD ;\n*\n* Resolution  pour obtenir les deplacements\n*\n                        DEP = RESOU RIG FTOT ;\n*\n* Vecteur force et reaction\n*\n               VEF = VECTEUR FTOT 0.03 FX FY FZ ROUG ;\n                   REA = REAC (ENC4 ET ENC) DEP ;\n               VER = VECTEUR REA 0.01 FX FY FZ BLEU ;\n*\n* Contraintes et vonmises\n*\n               SSI = SIGMA MODL1 DEP CARM ; VM = VMIS MODL1 SSI ;\n*\n* Deformee et trace\n*\n             DEF = DEFO TOTAL DEP 50 (VEF ET VER) VERT ;\n                   TRAC DEF MODL1 VM (1000 -2000 1000) ;\n                                FIN ;",
  },
  {
    name: "MECA",
    url: "MECA",
    documentation:
      "$$$$ MECA     NOTICE  CHAT      11/09/12    21:17:14     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n            CALCUL ELASTIQUE EN MECANIQUE\n            -----------------------------\n\n La liste des operateurs utiles pour faire un calcul elastique en\nmecanique est :\n\n-----------------------------------------------------------------------\n|  OPTION   : Declaration des options generales de calcul             |\n-----------------------------------------------------------------------\n|  ET       : Permet d'assembler des proprietes decrites par zones:   |\n|                     maillages, champs, raideurs ...                 |\n-----------------------------------------------------------------------\n|  MODELE   : Definition du modele de comportement pour le materiau   |\n-----------------------------------------------------------------------\n|  MATER    : Description des proprietes du materiau                  |\n|  CARAC    : Description des caracteristiques supplementaires        |\n|                     epaisseur inerties ....                         |\n-----------------------------------------------------------------------\n|  RIGIDITE : Construction des matrices de raideur des elements       |\n|  MASSE    : Construction des matrices de masse des elements         |\n-----------------------------------------------------------------------\n|  BLOQUE   : Description des blocages encastrements et deplacements  |\n|                     imposes                                         |\n|  SYMTRIE  : Description des proprietes de symetrie de la structure  |\n|  ANTISYMT : Description des proprietes d'antisymetrie               |\n|  RELATION : Description des relations imposees entre inconnues du   |\n|                     probleme                                        |\n-----------------------------------------------------------------------\n|  DEPIMP   : Affection de valeurs aux deplacements imposees          |\n-----------------------------------------------------------------------\n|  FORCE    : Introduction de forces exterieures                      |\n|  MOMENT   : Introduction de moment                                  |\n|  PRESSION : Calcule les forces generalisees dues a une pression     |\n|  BSIGMA   : Fourni le champ de forces resultant de l'integration    |\n|                     d'un champ de contraintes                       |\n|  RESU     : Permet de connaitre la resultante d'un champ de forces  |\n-----------------------------------------------------------------------\n|  THETA    : Calcule les contraintes equivalentes dues a un champ de |\n|                     temperature                                     |\n-----------------------------------------------------------------------\n|  RESOU    : Calcul des deplacements a partir des forces et de la    |\n|                     raideur                                         |\n|  VIBRATI  : Calcul de modes et frequences propres                   |\n-----------------------------------------------------------------------\n|  TIRER    : Extraction de modes propres de l'objet solution         |\n|                     construit par VIBRATI                           |\n-----------------------------------------------------------------------\n|  SIGMA    : Calcul des contraintes                                  |\n|  VMIS     : Calcul de la contrainte equivalente                     |\n-----------------------------------------------------------------------\n|  VECTEUR  : Construction d'un ensemble de vecteur pouvant etre      |\n|                     traces a partir d'un champ                      |\n|  DEFORME  : Construction de la deformee d'une structure pouvant     |\n|                     etre tracee                                     |\n-----------------------------------------------------------------------\n|  TRACE    : Trace de grandeurs sur des maillages                    |\n|  LIST     : Impressions de resultats                                |\n-----------------------------------------------------------------------\n|  SAUVER   : Interruption du calcul                                  |\n|  RESTITUER: Reprise du calcul                                       |\n-----------------------------------------------------------------------\n\n Il existe une procedure CALCULER qui enchaine ces operations dans le\ncadre d'un calcul simple. Apres avoir construit un maillage faire :\n\" CALCULER ;\"  puis repondre aux questions.",
  },
  {
    name: "MENA",
    url: "MENA",
    documentation:
      "$$$$ MENA     NOTICE  CHAT      11/09/12    21:17:14     7124           \n                                             DATE     11/09/12\n\n    Directive MENAGE                         Voir aussi : PLAC OUBL\n    ----------------                                      DETR  \n    MENAGE  ('OBLI') (La_place_desiree) ;\n\n\n    Objet :\n    _______\n\n    La directive MENAGE a pour effet de supprimer de la memoire les\ninformations perimees et inaccessibles.\n\n    On peut indiquer apres MENAGE la place memoire (exprimee en nombre d\nmots) (type ENTIER) dont on veut obtenir la disponibilite.\n\n    En presence du mot OBLI le menage est effectivement execute, sinon cela\ndepend, de la place utilisee, de ...\n\n    Remarque 1 :\n    ____________\n\n    Elle trouve son interet dans l'ecriture de processus iteratifs qui\ncreent de nouveaux objets a chaque iteration. MENAGE appelee a la\nfin du processus eliminera de la memoire les objets devenus obsoletes.\n\n    Remarque 2 :\n    ____________\n\n    Si apres l'emploi de MENAGE il apparait une erreur dans\nGEMAT du type :\n\n    Le pointeur designe un segment supprime\n\ncela provient d'une erreur interne dans MENAGE qui ne prend pas\ncorrectement en compte les objets manipules.\n\n    Remarque 3 :\n    ____________\n\n    La directive MENAGE verifie la validite de tous les objets\naccessibles. L'emploi de l'operateur DETRUIRE peut creer des structures\nincorrectes, o\u00ba un objet pointe sur d'autres objets detruits.\nCeci n'est pas genant, si on ne se sert plus de ces objets.\nL'operateur MENAGE arretera l'execution en detectant de telles\nstructures incorrectes.\n\n    Remarque 4 :\n    ____________\n\n    La directive MENAGE peut demander beaucoup de temps pour verifier\nsi les objets sont perimes ou inaccessibles.",
  },
  {
    name: "MENU",
    url: "MENU",
    documentation:
      "$$$$ MENU     NOTICE  CHAT      11/09/12    21:17:14     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MENU                           Voir aussi :\n    --------------  \n    OBJR = MENU MESSAGE | OBJ1 OBJ2 ... OBJN ;\n                        | LMOT1  ;\n\n\n    Objet :\n    _______\n\n    L'operateur MENU propose un choix d'objets a l'utilisateur puis\nretourne celui choisi. Ces noms peuvent etre mis sous forme d'une\n liste de mots\n\n   OBJR : objet choisi par l'utilisateur.\n   OBJ1 :\n   ....\n   OBJN : objets entre les quels effectuer un choix.\n\n   LMOT1: LISTMOTS contenant les noms entre lesquels effectuer un choix.\n\n   MESSAGE : Chaine de caracteres affichee sous le choix a effectuer.\n\n\n    Remarque :\n    __________\n\n    N'a ete presentement teste qu'avec un affichage XWindow.",
  },
  {
    name: "MESM",
    url: "MESM",
    documentation:
      "$$$$ MESM     NOTICE  CHAT      11/09/12    21:17:14     7124           \n                                             DATE     11/09/12\n                                             \n   Operateur MESM                            Voir aussi : TRACMECA\n   --------------                                         LIMEMECA  \n   TAB1 TAB2=MESM MODL1 RIGI1 |('TOUT')|;\n                                'ROTA'  ;\n\n    Objet :\n    _______\n\n    L'operateur MESM determine l'ensemble des mecanismes elementaires\nde ruine associes a la structure definie par le modele MODL1 et les\nbloquages RIGI1. Le calcul est bidimensionel et s'applique uniquement \na des maillages de poutre (element 'TIMO' ou 'POUT').\n\n    Si l'option 'TOUT' est utilisee, on considere 3 modes de rupture\npar element (2 en rotation aux extremites de l'element et 1 \nlongitudinal) alors que l'option 'ROTA' se limite a 2 modes (2 en \nrotation). \n\n    Le resultat est contenu dans 2 tables TAB1 et TAB2, indexees\npar un nombre entier indiquant le numero du mecanisme elementaire. TAB1\ncontient les CHPOINT de deplacement des modes de rupture et TAB2 les \nMCHAML de deformations plastiques associes.\n\n    Remarque :\n    __________\n\n    Cet operateur permet d'effectuer un calcul de charge limite par\nl'approche cinematique (voir procedure LIMEMECA). On peut visualiser\nles modes elementaires de rupture (voir procedure TRACMECA).\n\n    Les MCHAML de deformations plastiques sont constants par elements.\nLes nom des composantes sont: 'RZP1' (rotation plastique autour de \nl'axe local Oz a l'extremite 1 de l'element, 'RZP2' (rotation plastique\na l'extremite 2 de l'element et, eventuellement, 'UP2' (ouverture \nplastique dans l'axe de l'element).\n\n    Attention :\n    ___________\n\n    RIGI1 est une rigidite qui ne contient que des bloquages qui ne \npeuvent s'appliquer qu'aux degres de libertes de MODL1. Cette rigidite\npeut inclure des relations",
  },
  {
    name: "MESS",
    url: "MESS",
    documentation:
      "$$$$ MESS     NOTICE  PV        19/12/10    21:15:08     10423          \n                                             DATE     19/12/10\n                                             \n    Directive MESSAGE                        Voir aussi : CHAINE\n    -----------------  \n\n    Objet :\n    _______\n\n    La directive MESSAGE permet d'editer sous forme de message une suite\nd'objets. La syntaxe est celle de l'operateur CHAINE (appele en interne).\n\n\n    Exemple :\n    _________\n\n            OBJET1 = MOT   ' LA VALEUR DE PI EST :' ;\n            P = 3.14159 ;\n            MESSAGE OBJET1 P ;",
  },
  {
    name: "MESU",
    url: "MESU",
    documentation:
      "$$$$ MESU     NOTICE  PASCAL    21/03/19    21:15:11     10924          \n                                             DATE     21/03/19\n  Operateur MESURE                        Voir aussi :\n    -----------------  \n    FLOT1 = MESURE GEO1 | ('LONG') ;\n                        | ('SURF') ;\n                        | ('VOLU') ;\n\n    CHPO1 = MESURE GEO1 'DENS' ;\n\n\n    Objet :\n    _______\n\n    L'operateur MESU calcule la mesure du maillage GEO1.\nPar defaut, si GEO1 est une ligne MESU en calculera la longueur, si GEO1 est\nune surface, MESU en calculera la surface, et si GEO1 est un volume MESU en\ncalculera le volume.\n\n    Si GEO1 est une ligne fermee, le mot cle SURF permettra de calculer\nl'aire de la surface limitee par GEO1. En 3D on obtiendra l'aire de la\nsurface projetee sur son plan moyen.\n\n    Si GEO1 est une surface close, le mot cle VOLU permettra de calculer\nle volume enclos dans GEO1.\n\n    L'option DENS permet de mesurer la carte de densite du maillage\n(taille moyenne des aretes des elements en chaque noeud).",
  },
  {
    name: "METH",
    url: "METH",
    documentation:
      "$$$$ METH     NOTICE  CHAT      11/09/12    21:17:15     7124           \n                                             DATE     11/09/12\n  \n  Operateur METHODE                        Voir aussi :\n    -----------------                            \n      OBJET1%METHODE   NOMMETH1   METH1;\n                                \n\n\n    Objet :\n    _______\n\n    L'operateur METHODE affecte a l'objet de type OBJET OBJET1 une\nmethode qui portera le nom NOMMETH1. Lors de l'appel de cette methode\nsur l'objet la methode (procedure) METH1 sera executee.\n\n\n\n      Commentaire :\n      _____________\n\n      NOMMETH1  :  on extrait de cet objet son nom.\n\n      METH1     : est une methode qui existe deja, elle est creee\n                  par l'operateur DEBMETH.",
  },
  {
    name: "MFIL",
    url: "MFIL",
    documentation:
      "$$$$ MFIL     NOTICE  FD218221  21/03/01    21:15:06     10906          \n                                             DATE     21/03/01\n                 \n\n               CETTE OPERATEUR A ETE MIS GRACIEUSEMENT\n                A DISPOSITION DE LA COMMUNAUTE CAST3M\n          PAR Guenhael Le Quilliec(1) ET Thomas Fournier(2)\n              (1) Laboratoire de Mecanique Gabriel Lame\n Universite de Tours, Universite d Orleans, INSA Centre Val de Loire\n    Polytech Tours, 7 avenue Marcel Dassault, 37200 Tours, France\n      (2) Stage au Laboratoire de Mecanique Gabriel Lame en 2020\n\n\n    Operateur MFIL                           Voir aussi : TOPOPTIM\n    ______________                                        TOPOSURF  \n                                                          TOPOFILT  \n\n    RIG1 = MFIL CHPO1 (FLOT1 (FLOT2 (FLOT3))) (MOT1 (MOT2)) ;\n\n\n    Objet :\n    _______\n\nL'operateur MFIL cree une matrice de rigidite contenant pour chaque\nnoeud du maillage les poids de ses noeuds voisins a appliquer dans le\nbut de pouvoir filtrer (i.e. lisser / floutter) un champ par points en\nle multipliant par cette matrice.\n\nSi un noeud voisin se trouve a une distance D < FLOT1, son poids\n(sa raideur) est alors calcule comme suit :\n       (1.0 - (Rv / FLOT1))**FLOT2\n       * valeur de CHPO1 du noeud voisin\n       / somme des poids de tous les noeuds voisins\nEnfin seuls les poids > FLOT3 sont conserves.\n\n    En entree :\n    ___________\n\n CHPO1 : (CHPOINT) Champ par points de ponderation (e.g. champ des volumes)\n         qui est utilise dans le calcul des poids (raideurs) de la matrice\n         de sortie.\n         Ce champ permet egalement de recuperer les noeuds sur lesquelles\n         s'appliquera la matrice de rigidite de sortie.\n\n FLOT1 : (FLOTTANT) Rayon d'action du filtre au voisinage de chaque noeud.\n         Cette donnee est facultative et est egale a 0.0 par defaut. Le\n         filtre n'aura alors aucun effet.\n\n FLOT2 : (FLOTTANT) Exposant applique lors du calcul des poids.\n         Cette donnee est facultative et est egale a 1.0 par defaut.\n\n FLOT3 : (FLOTTANT) Valeur comprise entre 0.0 et 1.0 au dela de laquelle les\n         poids sont conserves.\n         Cette donnee est facultative et est egale a 0.0 par defaut.\n\n MOT1 : (MOT) Nom des inconnues primales.\n        Cette donnee est facultative et est egale a 'SCAL' par defaut.\n\n MOT2 : (MOT) Nom des inconnues duales.\n        Cette donnee est facultative et est egale a la valeur de MOT1 par defaut.\n\n    En sortie :\n    ___________\n\n RIG1 : (RIGIDITE) Matrice de rigidite.\n\n\n    Exemples:\n    _________\n\nmfil.dgibi",
  },
  {
    name: "MHYB",
    url: "MHYB",
    documentation:
      "$$$$ MHYB     NOTICE  AURI      99/06/02    21:21:42     3578           \n                                             DATE     99/06/02\n          \n  Op\u00e9rateur MHYB                           Voir aussi :\n    --------------  \n\n     -----------------       \n     | 1-\u00e8re Fonction |                                                  \n     -----------------                                                   \n\n\n    RIG1 = MHYB MODE1  CAR1 ('DARCY') ;\n\n    Objet : \n    _______\n\n    L'op\u00e9rateur MHYB  permet le calcul de l'inverse des 'matrices de \n darcy' \u00e9l\u00e9mentaires pour les mod\u00e8les utilisant des \u00e9l\u00e9ments finis\n mixtes hybrides.\n\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet mod\u00e8le (type MMODEL) d\u00e9crivant la formulation\n                utilis\u00e9e (cf. MODE).\n\n       CAR1   : Objet de type MCHAML de sous-type CARACTERISTIQUES;\n                Caract\u00e9ristiques physiques de la structure (cf. MATE).\n\n       RIG1   : Objet rigidit\u00e9 r\u00e9sultat contenant l'inverse des\n                'matrices de darcy' \u00e9l\u00e9mentaires.\n\n    'DARCY'   : mot cl\u00e9 correspondant au sous-type de l'objet RIG1.\n\n\n\n     -----------------       \n     | 2-\u00e8me Fonction |                                                  \n     -----------------   \n\n\n    RIG1 = MHYB MODE1  MOT1 ;\n\n    Objet : \n    _______\n\n    L'op\u00e9rateur MHYB permet le calcul des 'matrices masses \u00e9l\u00e9mentaires\n pour les mod\u00e8les utilisant des \u00e9l\u00e9ments finis mixtes hybrides.\n\n       RIG1   : Objet rigidit\u00e9 r\u00e9sultat contenant les matrices masses \n                \u00e9l\u00e9mentaires.\n\n    'MASSE'   : mot cl\u00e9 correspondant au sous-type de l'objet RIG1",
  },
  {
    name: "MINI",
    url: "MINI",
    documentation:
      "$$$$ MINI     NOTICE  BP208322  21/01/21    21:15:29     10861          \n                                             DATE     21/01/21\n\n    Operateur MINIMUM                        Voir aussi : MAXI   \n    -----------------                                     POIN   ELEM  \n    \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Minimum d'un objet\n    1.1 Syntaxe\n    1.2 Objet\n    1.3 Remarques\n2. Minimum d'une EVOLUTION\n    2.1 Syntaxe\n    2.2 Objet\n    2.3 Remarques\n3. Minimum de n ENTIERs ou FLOTTANTs\n    3.1 Syntaxe\n    3.2 Objet\n4. Minimum de n objets\n    4.1 Syntaxe\n    4.2 Objet\n\n  \n1. Minimum d'un objet1 \n===================== \n  \n1.1 Syntaxe \n----------- \n    OBJET1 =  MINI  OBJET2   ('ABS')  ( |('AVEC')| LMOTS1 ) ;\n                                        | 'SANS' |\n    \n  \n1.2 Objet \n--------- \n    L'operateur MINIMUM determine la plus petite valeur algebrique\nOBJET1 d'un objet OBJET2, ou de la valeur absolue d'OBJET2 si le\nmot-cle 'ABS' a ete donne.\n\n    On peut limiter la recherche du minimum a un sous-ensemble d'OBJET2\nen donnant la liste LMOTS1 (type LISTMOTS) des noms de composantes a\nconsiderer (mot-cle 'AVEC') ou a exclure (mot-cle 'SANS') dans la\nrecherche du minimum.\n\n    Types d'objets possibles :\n    ------------------------------\n    |  OBJET2     |     OBJET1   |\n    ------------------------------\n    |  CHPOINT    |    FLOTTANT  |\n    |  LISTENTI   |    ENTIER    |\n    |  LISTREEL   |    FLOTTANT  |\n    |  MCHAML     |    FLOTTANT  |\n    ------------------------------\n\n  \n1.3 Remarques \n------------- \n 1. La limitation a certaines composantes n'a pas de sens pour les\nobjets de type LISTENTI et LISTREEL.\n\n 2. On peut aussi utiliser les operateurs POIN ou ELEM pour chercher\nle lieu geometrique du minimum d'un champ.   \n    \n    \n  \n2. Minimum d'une EVOLUTION \n========================== \n \n  \n2.1 Syntaxe \n----------- \n    OBJET2 OBJET3 OBJET4  =  MINI  OBJET1   ('ABS') \n\n  \n2.2 Objet \n--------- \n    L'operateur MINIMUM determine le couple abscisse - ordonnee\n    de plus petite valeur algebrique, ainsi que l'indice de ce\n    couple pour un OBJET1 de type EVOLUTIO ne comportant qu'une\n    seule courbe. Si le  mot-cle 'ABS' a ete donne, il s'agit de\n    l'ordonnee de plus petite valeur absolue. \n    Le type d'OBJET2 est ENTIER, OBJET3 et OBJET4 sont de type\n    FLOTTANT. En cas de multiplicite de l'ordonnee minimale,\n    le couple de plus faible indice est renvoye.\n\n    Si OBJET1 de type EVOLUTIO comprend plusieurs courbes, \n    l'operateur construit par extension des objets \n    OBJET2, type LISTENTI, OBJET3 et OBJET4, type LISTREEL.\n    \n  \n2.3 Remarques \n------------- \n    Seules les EVOLUTIONs d'un LISTREEL en fonction d'un autre\n    LISTREEL sont permises.\n  \n3. Minimum de n ENTIERs ou FLOTTANTs \n==================================== \n \n  \n3.1 Syntaxe \n----------- \n      XMIN  =  MINI  ('ABS')  X1  X2  (... Xn)   \n \n  \n3.2 Objet \n--------- \n    L'operateur MINIMUM retourne dans XMIN le reel/entier\n    minimum des termes X1, X2, ..., Xn\n    (ou des termes |X1|, |X2|, ... |Xn|  si 'ABS est precise).\n    \n    \n  \n4. Minimum de n objets \n====================== \n \n  \n4.1 Syntaxe \n----------- \n      OBJET3   =  MINI  ('ABS')  OBJET1  OBJET2  (OBJETi ...)   \n \n  \n4.2 Objet \n--------- \n    L'operateur MINIMUM cr\u00e9e un objet de meme type que OBJET1, OBJET2,\n    OBJETi... en prenant la valeur minimum (eventuellement en valeur\n    absolue), terme \u00e0 terme, de OBJET1, OBJET2, OBJETi...\n    \n    Les types autorises sont LISTENTI, LISTREEL et CHPOINT. Pour les\n    objets CHPOINTS, les composantes et maillages supports doivent\n    etre identiques.\n    ",
  },
  {
    name: "MISE",
    url: "MISE",
    documentation:
      "$$$$ MISE     NOTICE  AF221230  13/08/01    21:15:05     7808           \n                                             DATE     13/08/01\n\n    Directive MISE                  Voir aussi : PREPMISS\n    ----------------                                                     \n\n   MISE TAB1 ;                                                     \n                                                                       \n\n    Objet :\n    _______\n\n    Operateur qui permet l'ecritures des fichiers des donnees pour le logiciel M\n    \n    Commentaire :\n    _____________\n    \n    Cette operateur est appell\u00e9 par la procedure PREPMISS. Voir la notice PREPMI",
  },
  {
    name: "MISL",
    url: "MISL",
    documentation:
      "$$$$ MISL     NOTICE  AF221230  13/08/01    21:15:05     7808           \n                                             DATE     13/08/01\n\n    Directive MISL                  Voir aussi : POSTMISS\n    ----------------                                                     \n\n   MISL TAB1 ;                                                     \n                                                                       \n\n    Objet :\n    _______\n\n    Operateur qui permet la lecture de la sortie du logiciel MISS3D\n    \n    Commentaire :\n    _____________\n    \n    Cette operateur est appell\u00e9 par la procedure POSTMISS et IMPDMISS. Voir les \n    POSTMISS et IMPDMISS",
  },
  {
    name: "MIXE",
    url: "MIXE",
    documentation:
      "$$$$ MIXE     NOTICE  KICH      20/10/05    21:15:25     10740          \n                                             DATE     20/10/05\n\n    Operateur MIXE                    Voir aussi : MODE, MATE\n    --------------------      \n  \n           CHE3 = MIXE MOD1 CHE1 CHE2 ;\n\n    Objet :\n    _______\n\n    L'operateur MIXE construit un objet CHE3 de type MCHAML, \n    qui selon les lois contenues par l'objet MOD1,\n    combine avec les pond\u00e9rations du champs\n    de caract\u00e9ristiques CHE1, de type MCHAML, associ\u00e9 \u00e0 MOD1,\n    les grandeurs physiques de memes noms pour diff\u00e9rentes \n    phases collect\u00e9es dans CHE2, de type MCHAML ;\n    un coefficient de CHE1 de nom MOT1 est relatif aux \n    grandeurs de CHE2 associ\u00e9es \u00e0 la phase de nom identique.\n\n    MOD1 : type MMODEL, formulation 'MELANGE'\n\n    \n\n    \n$$$$\n ",
  },
  {
    name: "MOCA",
    url: "MOCA",
    documentation:
      "$$$$ MOCA     NOTICE  CHAT      11/09/12    21:17:16     7124           \n                                             DATE     11/09/12\n                                       \n \n    Operateur MOCA                            Voir aussi : AJUSTE EXCE\n    --------------                                         LEVM  \n    RESU1 = MOCA LISTPARA LISTMESU LISTFONC LISTDERi (('POIDS' LISTPOI);\n                                \n\n\n\n    Objet :\n    _______\n\n    Soit une fonction G connue en n points. On cherche a determiner les\nparametres (a,b,c...,p) d'une fonction F de maniere a approcher au mieux\nla fonction G. \n    L'operateur MOCA permet de determiner ce jeu de parametres. LISTMESU \n(listreel) qui contient les n valeurs de G.  \n\n  \nIl faut donner les valeurs LISTFONC (listreel de n valeurs) \nobtenues pour F pour un jeu de parametres LISTPARA (listreel) et qui \nseront a comparer a LISTMESU. Enfin il faut fournir LISTDERi \n(listreels de n valeurs)(i=1,p) qui contiennent les derivees partielles \nde F par rapport aux parametres. \n    Cet operateur fournit le meilleur jeu de parametres si F varie \nlineairement en fonction des parametres.Il choisit de minimiser un \ncritere egal a :\nSomme sur j=1,n(poidj*poidj*(listmesu(j)-listF(j))*(listmesu(j)-listF(j))    \n\n\n\n      Commentaire :\n      _____________\n\n      LISTPARA  : LISTREEL de P valeurs donnant les parametres initiaux\n\n      LISTMESU  : LISTREEL de n valeurs donnant l'objectif pour la \n                  fonction G.\n\n      LISTFONC  : LISTREEL de n valeurs  donnant les valeurs de F pour\n                  le jeu de parametres LISTPARA aux n points. \n \n      LISTDERi  : p LISTREEL donnant chacun la derivee partielle de F \n                  (pour chacun des n points) par rapport au ieme \n                  parametre.\n\n      POIDS     : mot introduisant LISTPOI qui contient les n poids a \n                  prendre en compte pour le cacul du critere a minimiser.\n                  En l'absence de cette donnee tous les poids valent 1. \n\n      RESU1     : LISTREEL contenant les valeurs pour les P parametres.\n\n\n     Remarque : On trouvera un exemple d'utilisation de cet operateur \n                dans un des jeux de donnees de Cast3m (identifi.dgibi).\n                Cet exemple utilise moca,dans un systeme iteratif, pour         \n                approcher une fonction nonlineaire.\n                \n\n  ",
  },
  {
    name: "MOCU",
    url: "MOCU",
    documentation:
      "$$$$ MOCU     NOTICE  CHAT      11/09/12    21:17:16     7124           \n                                             DATE     11/09/12\n\n  Operateur MOCU                           Voir aussi :\n    --------------  \n    (LREE1) LREE2 LREE3 = MOCU (LREE4) LREE5 LREE6 MODE1 CHAM1 FLOT1;\n    ou\n     (LREE1) LREE2 LREE3 TAB1 = \n                   MOCU (LREE4) LREE5 LREE6 MODE1 CHAM1 FLOT1 VERIF;\n\n \n    Objet :\n    _______\n \n    L'operateur MOCU (MOment/CoUrbure) calcule la reponse d'un modele\n    de SECTION soumis a une biflexion circulaire sous effort normal.\n \n    Commentaire :\n    _____________\n \n    (LREE4) : Programme de chargement en courbure par rapport a l'axe\n            local Oy (en 3D uniquement)\n    (LREE1) : Reponse en moment par rapport a l'axe local Oy\n                  (en 3D uniquement)\n    LREE5 : Programme de chargement en courbure par rapport a l'axe\n            local Oz\n    LREE2 : Reponse en moment par rapport a l'axe local Oz\n\n    LREE6 : Programme de chargement en effort normal\n    LREE3 : Reponse en deformation normale\n\n    MODE1 : Modele de la section\n\n    CHAM1 : Caracteristique de la section\n\n    FLOT1 : Tolerance pour les calculs non-lineaires\n\n    VERIF : avec l'option VERIF, MOCU sort une table de tables contenant\n             les variables internes (indice 'VARIABLES_INTERNES)', les \n             contraintes (indice 'CONTRAINTES') et la reponse\n             en deformation normale  dans la section\n             a tous les instants de calculs.\n\n    Remarque :\n    __________\n \n    L'origine du chargement est l'etat nul\n \n\n \n \n ",
  },
  {
    name: "MODE",
    url: "MODE",
    documentation:
      "$$$$ MODE     NOTICE  PV        21/10/22    21:15:02     11139          \n                                             DATE     21/10/22\n\n    Operateur MODE (MODELISER)               Voir aussi : OPTI\n    --------------------------                            MATE  CARA  \n    Objet :\n    _______\n\n    L'operateur MODE (MODELISER) permet d'associer a un maillage\nune formulation, un modele de comportement du materiau, un type\nd'element fini a utiliser et eventuellement un nom de constituant,\nle nombre de points d'integration dans l'epaisseur des coques DKT\n('INTEGRE' N1) et le point support de la deformation plane\ngeneralisee ('DPGE' P1).\n    Dans le cas d'un modele de comportement mecanique non lineaire\nexterne developpe par l'utilisateur, des informations supplementaires\ndoivent etre saisies : numero ou nom affecte a la loi de comportement,\nliste des parametres externes, liste des composantes de materiau, liste\ndes variables internes de la loi.\n   Le modele MELANGE PARALLELE permet de superposer des\ncomportements elementaires associes a des noms de phases, et d'en\nrealiser une combinaison lineaire a l'aide des coefficients de phases.\n    Les differentes donnees et mots cles doivent apparaitre dans l'ordre\ndefini par la syntaxe ci-dessus.\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Specification generale\n2. MECANIQUE\n    2.1 LINEAIRE\n    2.2 NON_LINEAIRE (UMAT)\n    2.3 PLASTIQUE\n    2.4 ENDOMMAGEMENT\n    2.5 FLUAGE\n    2.6 PLASTIQUE_ENDOM\n    2.7 VISCOPLASTIQUE\n    2.8 VISCO_EXTERNE\n    2.9 IMPEDANCE\n    2.10 Remarques\n3. LIQUIDE & LIQUIDE MECANIQUE\n4. POREUX\n    4.1 Lineaire (ELASTIQUE)\n    4.2 Non lineaire (PLASTIQUE)\n5. CONTACT\n    5.1 Sans frottement\n    5.2 Avec frottement\n6. THERMIQUE\n7. CHANGEMENT_PHASE\n8. METALLURGIE\n9. DARCY\n10. MAGNETODYNAMIQUE\n11. NAVIER_STOKES, EULER\n12. MELANGE\n13. FISSURE\n14. THERMOHYDRIQUE\n15. LIAISON\n16. DIFFUSION\n17. CHARGEMENT\n18. Tableau des elements disponibles par formulation\n    18.1 MECANIQUE\n    18.2 FLUIDE\n    18.3 FLUIDE MECANIQUE\n    18.4 POREUX\n    18.5 THERMIQUE CONDUCTION, PHASE ou SOURCE\n    18.6 THERMIQUE CONVECTION\n    18.7 THERMIQUE RAYONNEMENT\n    18.8 THERMIQUE ADVECTION\n    18.9 DIFFUSION\n    18.10 DARCY\n    18.11 FROTTEMENT\n    18.12 MAGNETODYNAMIQUE\n    18.13 NAVIER_STOKES\n    18.14 EULER (Volumes Finis)\n    18.15 FISSURE\n    18.16 THERMOHYDRIQUE\n    18.17 LIAISON\n\n  \n1. Specification generale1 \n========================= \n    MODL1 = MODE  GEO1 FOR1  MAT1 ( ...MATn )  (FUSION) ...\n\n      | ... ( ELEM1 ... ELEMn ) ...\n      |\n      | ... ('INCO' MOT2 (MOT3) ) ...\n      |\n      | ... ('NON_LOCAL' MOT2 'V_MOYENNE' LMOTS6) ...\n      |\n      |    ( | 'NUME_LOI' ILOI1  | )  ( 'PARA_LOI' LMOTS1 )\n             | 'NOM_LOI'  CLOI16 |\n           ( 'C_MATERIAU' LMOTS2 ) ( 'C_VARINTER' LMOTS3 )\n\n           ('INTEGRE' N1 ) ( 'CONS'  MOT4  ) ( 'DPGE'  P1)\n           ('PHAS' MOT5 )  (| 'LIBRE' |)\n                            | 'LIE'   |\n           (LMOTS4 LMOTS5) ;\n\n      |  ... MODL2 ( ... MODLn)  ;\n\n\n    Commentaire :\n    _____________\n\n      GEO1 : geometrie (type MAILLAGE)\n\n      FOR1 : formulation definie par un ou plusieurs mots\n             choisis parmi :\n\n           - formulations simples : |   'MECANIQUE'\n                                    |   'LIQUIDE'\n                                    |   'POREUX'\n                                    |   'CONTACT'\n                                    |   'THERMIQUE'\n                                    |   'DARCY'\n                                    |   'MAGNETODYNAMIQUE'\n                                    |   'NAVIER_STOKES'\n                                    |   'EULER'\n                                    |   'MELANGE'\n                                    |   'FISSURE'\n                                    |   'THERMOHYDRIQUE'\n                                    |   'LIAISON'\n                                    |   'DIFFUSION'\n                                    |   'CHARGEMENT'\n\n           - formulation couplee  :     'LIQUIDE' 'MECANIQUE'\n\n\n     MAT1 (...MATn ) : type de materiau avec autant de mots que\n                       necessaire (type MOT). Les types possibles\n                       sont listes plus loin.\n\n     (FUSION)        : pour les modeles mecaniques non-lineaires,\n                       exceptes NON_LINEAIRE (Umat) et VISCO_EXTERNE,\n                       cette option permet de prendre en compte la fusion\n                       du materiau dans l'integration du comportement par\n                       la mise a zero des varirables internes pour T > Tfus.\n\n     ( ELEM1...ELEMn ) : element(s)-fini(s) particulier(s) a utiliser\n                       (type MOT). Par defaut, on utilise l'element fini\n                       ayant le meme nom que le support geometrique.\n                       Cette liste est obligatoire pour les coques et\n                       les elements joints. Les types possibles sont\n                       listes plus loin. Pour le modele 'NAVIER_STOKES'\n                       on peut utiliser les noms generiques LINE\n                       (lineaire) MACRO (iso-P2 iso-P1) ou QUAF\n                       (quadratique pour les fluides).\n                       Pour la formulation 'MECANIQUE' le nom generique\n                       BBAR induit des termes spheriques diminues de la\n                       projection de la trace dans la base des derivees\n                       des fonctions de forme.\n\n\n     ( NON_LOCAL MOT2 ) : uniquement pour la mise en oeuvre non locale.\n                       MOT2 d\u00e9finit cette mise en oeuvre (MOYE si\n                       simple moyenne ou 'SB' si basee sur l'etat de\n                       contraintes). Il faut ensuite donner le mot clef\n                       V_MOYENNE pour preciser dans LMOTS6 la liste des\n                       variables internes a moyenner.\n\n\n     ( INCO MOT2 (MOT3) ) : uniquement pour la formulation DIFFUSION :\n                       noms des inconnues primale MOT2 et duale MOT3.\n                       ATTENTION : le nom de l'inconnue primale est\n                       limite a 2 caracteres (CO par defaut) afin de\n                       pouvoir nommer les composantes du gradient\n                       (CO,X...). La donnee de MOT3 est optionnelle.\n                       Le nom de l'inconnue duale est, par defaut,\n                       'QXX', quand 'XX' est le nom de la primale.\n\n\n     Ensemble de 4 donnees definissant un modele de comportement externe\n     programme par l'utilisateur, en formulation 'MECANIQUE' :\n     => loi 'NON_LINEAIRE' 'UTILISATEUR', pouvant etre associee a\n        - 'ELASTIQUE' 'ISOTROPE',\n        - 'ELASTIQUE' 'ORTHOTROPE',\n        - 'ELASTIQUE' 'ANISOTROPE',\n        - 'ELASTIQUE' 'UNIDIRECTIONNEL'.\n     => loi de comportement du groupe 'VISCO_EXTERNE', pouvant etre\n        associee uniquement a 'ELASTIQUE' 'ISOTROPE'.\n\n     ( ILOI1 )  : Numero affecte a la loi de comportement externe.\n                  type ENTIER : 1 <EG ILOI1 <EG 999999\n     ( CLOI16 ) : Nom affecte a la loi de comportement externe.\n                  type MOT de 16 caracteres au maximum\n     ILOI1  OU  CLOI16 = donnee obligatoire pour tout modele externe.\n\n     ( LMOTS1 ) : Objet de type LISTMOTS donnant la liste des noms des\n                  parametres externes de la loi de comportement.\n                  Donnee facultative.\n                  Si la temperature 'T   ' fait partie des parametres\n                  externes du modele, elle doit etre declaree en tete\n                  de liste.\n                  Les redondances dans la liste des parametres externes\n                  sont interdites.\n\n     ( LMOTS2 ) : Objet de type LISTMOTS donnant la liste des noms des\n                  composantes de materiau de la loi de comportement.\n                  Donnee obligatoire pour une loi de comportement\n                  'NON_LINEAIRE' 'UTILISATEUR' : toutes les composantes\n                  du comportement (domaine lineaire et non lineaire)\n                  doivent etre declarees. Les redondances dans la liste\n                  des composantes de materiau sont interdites.\n                  Donnee ignoree dans les autres cas : toutes les lois\n                  du groupe 'VISCO_EXTERNE' ont les memes composantes de\n                  materiau que le comportement 'ELASTIQUE' 'ISOTROPE'.\n\n     ( LMOTS3 ) : Objet de type LISTMOTS donnant la liste des noms des\n                  variables internes de la loi de comportement.\n                  Donnee facultative.\n                  Les redondances dans la liste des variables internes\n                  sont interdites.\n                  Par defaut, les lois du groupe 'VISCO_EXTERNE' ont 4\n                  variables internes : 'EC0 ', 'ESW0', 'P   ' et 'QTLD'.\n                  L'objet LMOTS3 donne la liste des variables internes\n                  supplementaires par rapport aux 4 pre-definies.\n\n     Remarques :\n     => Une loi 'NON_LINEAIRE' 'UTILISATEUR' peut s'appliquer a tout\n        type d'element fini, a l'exeption des coques sans points\n        d'integration dans l'epaisseur.\n        Pour les elements autres que les massifs, les caracteristiques\n        geometriques utiles peuvent etre declarees parmi les parametres\n        externes de la loi.\n     => Les lois du groupe 'VISCO_EXTERNE' ne s'appliquent en l'etat\n        actuel qu'aux elements massifs.\n     => Pas de redondances entre noms de composantes de materiau et\n        noms de variables internes.\n     => Si le modele externe 'NON_LINEAIRE' 'UTILISATEUR' calcule des\n        deformations inelastiques, celles-ci peuvent etre sorties si\n        elles ont ete declarees parmi les variables internes.\n\n\n     ( LMOTS4 ) : Objet de type LISTMOTS donnant la liste des noms des\n                  inconnues primales pour un materiau impedance pour\n                  un support POI1 ou le premier point d'un SEG2\n\n\n     ( LMOTS5 ) : Objet de type LISTMOTS donnant la liste des noms des\n                  inconnues primales pour un materiau impedance pour\n                  le second point d'un SEG2\n\n      (N1   )  : nombre de points integration(entre 1 et 15) dans\n                 l'epaisseur  lorsqu'on utilise les elements de\n                 coque avec integration numerique dans l'epaisseur .\n                 Il est conseille d'utiliser un nombre impair.\n\n\n     ( MOT4  ) : nom du constituant (type MOT, au maximum 16 caracteres)\n                 Cette possibilite est a utiliser lorsque l'on veut\n                 associer dans un meme calcul plusieurs modeles a un\n                 meme objet maillage, comme par exemple dans le cas des\n                 coques multicouches. Le nom MOT4 permet alors a\n                 l'utilisateur d'identifier chacun des constituants.\n                 Par defaut, chaque modele a un constituant unique.\n\n     ( MOT5  ) : nom de phase (type MOT, au maximum 8 caracteres)\n                 Cette possibilite est a utiliser lorsque l'on veut\n                 associer dans un meme calcul plusieurs modeles a un\n                 meme objet maillage, et combiner ces modeles comme\n                 dans un melange multiphases. Le nom MOT5 permet alors a\n                 l'utilisateur d'identifier chacune des phases.\n                 Par defaut, la phase est ' '.\n\n     ( 'LIBRE' ) : pour les elements JOI1, il est possible d'indiquer si le\n     ( 'LIE'   )   repere local est libre (par defaut) ou lie au maillage des\n                   joints. Un repere local lie peut etre mis a jour selon le\n                   deplacement du maillage grace a l'operateur FORM (utilise\n                   en grands deplacements). Dans ce cas, la longueur des\n                   joints doit etre non nulle.\n\n\n      MODL2 ( .. MODn) : modele possedant un nom de phase (type\n                        MMODEL)\n\n      MODL1 : objet modele resultat (type MMODEL)\n\n Remarque :\n __________\n\n Les noms de formulation et de comportement de materiau doivent\n etre donnes en toutes lettres.\n  \n2. MECANIQUE \n============ \n \n     ---------------------------------\n    | Noms des materiaux en MECANIQUE |\n     ---------------------------------\n\n Le comportement lineaire doit d'abord etre defini, puis\n le comportement non lineaire, le cas echeant, selon les\n directives ci-dessous. Par exemple, les donnees suivantes :\n\n             ELASTIQUE ISOTROPE PLASTIQUE ISOTROPE\n\n correspondent a un materiau dont le comportement lineaire est\n elastique isotrope et dont le comportement non lineaire est\n plastique selon un modele de Von Mises a ecrouissage isotrope.\n\n\n  \n2.1 LINEAIRE \n------------ \n- Comportements lineaires :\n  -------------------------\n\n * 'ELASTIQUE'  | ('ISOTROPE')       (option par defaut)\n                | 'ORTHOTROPE'\n                | 'ANISOTROPE'\n                | 'UNIDIRECTIONNEL'\n                | 'HOMOGENEISE'\n                | 'SECTION'\n                | 'ARMATURE'\n                | 'MODAL'\n                | 'STATIQUE'\n                | 'IMPEDANCE'\n\n    Le cas SECTION est utilisable pour les poutres de Timoschenko\n    et permet de decrire le comportement lineaire et non lineaire\n    d'une section droite. Si l'element de poutre est en 2D\n    (Contraintes ou deformations planes), l'axe Oy du repere local\n    de l'element de poutre correspond a l'axe Ox de la section.\n\n    Le cas ARMATURE est utilise pour les armatures (actives ou\n    passives) du beton arme ( element fini : BARRE, support\n    geometrique : SEG2).\n\n    Le materiau 'MODAL' permet une representation des deplacements\n    sur une base de modes propres (voir VIBR). Le support geometrique\n    est un maillage constitue d'un point. De maniere analogue le\n    materiau 'STATIQUE' permet une representation au moyen d'une\n    solution elastique. Ces deux materiaux sont compatibles avec\n    un materiau 'IMPEDANCE' non-lineaire.\n\n\n\n- Comportements non lineaires :\n  ----------------------------\n\n  \n2.2 NON_LINEAIRE (UMAT) \n----------------------- \n * 'NON_LINEAIRE' : comportement elastique non lineaire ou\n                    comportement non lineaire externe.\n                    Pas d'option par defaut.\n                    Doit etre suivi d'un mot choisi parmi :\n\n       |----------------------------------------------------------------\n       | 'EQUIPLAS' : Modele de comportement elastique\n       |              non-lineaire dont le comportement en\n       |              charge est strictement identique au\n       |              comportement plastique isotrope\n       |\n       |----------------------------------------------------------------\n       | 'UTILISATEUR' : Modele de comportement non lineaire externe\n       |                 developpe par l'utilisateur.\n       |\n       |  Un numero ILOI1 ou un nom CLOI16 doit etre affecte a la loi\n       |  de comportement externe.\n       |  La liste des parametres externes de la loi est donnee par\n       |  l'objet LMOTS1 (le cas echeant).\n       |  La liste des composantes de materiau est donnee par LMOTS2.\n       |  Cette liste couvre les domaines lineaire et non lineaire du\n       |  comportement.\n       |  La liste des variables internes de la loi est donnee par\n       |  l'objet LMOTS3 (le cas echeant).\n       |\n       |  Le modele 'NON_LINEAIRE' 'UTILISATEUR' est integre par un\n       |  formalisme programme par l'utilisateur dans le module\n       |  externe UMAT.\n       |  Ce module est appele par l'operateur COMP pour la resolution\n       |  a chaque point d'integration du modele. Etant donnes :\n       |  - un etat initial a l'instant t0 : contraintes, deformations\n       |    totales, variables internes ;\n       |  - un pas de temps dt ;\n       |  - un increment de deformations totales impose de t0 a t0+dt ;\n       |  - les valeurs des parametres externes a t0 et t0+dt ;\n       |  le module UMAT calcule l'etat final a t0+dt : nouvelles\n       |  contraintes et variables internes (parmi lesquelles les\n       |  deformations inelastiques le cas echeant).\n       |\n       |  Remarque :\n       |\n       |  Un certain nombre de lois sont pre-existantes dans la version\n       |  fournie. On peut citer les lois definies par le numero :\n       |         5     pour plastique isotrope\n       |         7     pour VISCOPLASTIQUE' 'GATT_MONERIE'\n       |        10     pour ELASTICITE ISOTROPE ISOTHERME\n       |        11     pour ELASTICITE ISOTROPE NON ISOTHERME\n       |        12     pour ELASTICITE ORTHOTROPE ISOTHERME\n       |        21,22  pour 'FLUAGE' 'POLYNOMIAL' (massif)\n       |        31     pour modele Mooney-rivlin(2D Plan CONT,3D massif)\n       |        32     pour modele neo-hookien\n       |        33     pour modele  GD (hyperelastique)\n       |        34     pour modele Hart-Smith (hyperelastic)\n       |        35     pour modele Biderman (hyperelastic)\n       |        36     pour modele 8chaines (hyperelastic)\n       |   Des exemples d'utilisations de ces lois existent dans les\n       |   fichiers .dgibi fournis et les donnees des parametres sont\n       |   MATE\n       |\n       |\n       |  Mode operatoire :\n       |  ---------------\n       |  1 - Programmer le module externe UMAT et ses dependances :\n       |      - Reprendre le module exemple integre au code.\n       |        Il faut conserver imperativement la premiere carte du\n       |        module exemple pour assurer le succes de la compilation.\n       |      - Respecter l'interface d'appel de la routine.\n       |  2 - Compiler le module externe et ses dependances, puis\n       |      edition de liens avec le reste du code.\n       |  3 - Mise en oeuvre en langage Gibiane en respectant la syntaxe\n       |      decrite ci-dessus.\n       |\n       |  Interface du module externe UMAT :\n       |  --------------------------------\n       |  SUBROUTINE UMAT ( STRESS, STATEV, DDSDDE, SSE, SPD, SCD,\n       | &                  RPL, DDSDDT, DRPLDE, DRPLDT,\n       | &                  STRAN, DSTRAN, TIME, DTIME,\n       | &                  TEMP, DTEMP, PREDEF, DPRED,\n       | &                  CMNAME, NDI, NSHR, NTENS, NSTATV,\n       | &                  PROPS, NPROPS, COORDS,\n       | &                  DROT, PNEWDT, CELENT, DFGRD0, DFGRD1,\n       | &                  NOEL, NPT, LAYER, KSPT, KSTEP, KINC )\n       |  IMPLICIT REAL*8(A-H,O-Z)\n       |\n       |  CHARACTER*16  CMNAME\n       |\n       |  INTEGER       NDI, NSHR, NTENS, NSTATV, NPROPS,\n       | &              NOEL, NPT, LAYER, KSPT, KSTEP, KINC\n       |\n       |  REAL*8        STRESS(NTENS), STATEV(*),\n       | &              DDSDDE(NTENS,NTENS),\n       | &              SSE, SPD, SCD,\n       | &              RPL, DDSDDT(NTENS), DRPLDE(NTENS), DRPLDT,\n       | &              STRAN(NTENS), DSTRAN(NTENS),\n       | &              TIME(2), DTIME,\n       | &              TEMP, DTEMP, PREDEF(*), DPRED(*),\n       | &              PROPS(NPROPS),\n       | &              COORDS(3),\n       | &              DROT(3,3),\n       | &              PNEWDT,\n       | &              CELENT,\n       | &              DFGRD0(3,3), DFGRD1(3,3)\n       |\n       |\n       |  IN/OUT : STRESS : REAL*8(NTENS), tenseur des contraintes\n       |                    En entree : tenseur des contraintes a t0\n       |                    En sortie : tenseur des contraintes a t0+dt\n       |  IN/OUT : STATEV : REAL*8(*), variables internes\n       |                    En entree : variables internes a t0\n       |                    En sortie : variables internes a t0+dt\n       |\n       |\n       |  OUT    : DDSDDE : REAL*8(NTENS,NTENS), matrice jacobienne du\n       |                    modele (matrice tangente) a t0+dt\n       |                    Sortie facultative, non exploitee par CAST3M\n       |                    pour l'instant\n       |\n       |  IN/OUT : SSE    : REAL*8, energie de deformation elastique\n       |           SPD    : REAL*8, dissipation plastique\n       |           SCD    : REAL*8, dissipation visqueuse\n       |                    Valeurs a t0 en entree, a t0+dt en sortie\n       |                    Entrees/sorties facultatives, non exploitees\n       |                    par CAST3M pour l'instant\n       |\n       |\n       |  OUT    : RPL    : REAL*8, puissance calorifique volumique\n       |                    degagee par le travail mecanique, a t0+dt\n       |           DDSDDT : REAL*8(NTENS), derivee du tenseur des\n       |                    contraintes par rapport a la temperature,\n       |                    a t0+dt\n       |           DRPLDE : REAL*8(NTENS), derivees de RPL par rapport\n       |                    aux composantes du tenseur des deformations,\n       |                    a t0+dt\n       |           DRPLDT : REAL*8, derivee de RPL par rapport a la\n       |                    temperature, a t0+dt\n       |                    Sorties facultatives, non exploitees par\n       |                    CAST3M pour l'instant\n       |                    Ces sorties sont prevues pour un couplage\n       |                    fort entre thermique et mecanique\n       |\n       |\n       |  IN     : STRAN  : REAL*8(NTENS), tenseur des deformations\n       |                    totales a t0\n       |           DSTRAN : REAL*8(NTENS), tenseur des increments de\n       |                    deformation totale par rapport a l'etat\n       |                    de reference a t0\n       |\n       |\n       |  IN     : TIME   : REAL*8(2), TIME(1) = 0\n       |                               TIME(2) = t0\n       |           DTIME  : REAL*8,    DTIME   = dt\n       |                    t0 : precedent instant d'equilibre atteint\n       |                    dt : nouveau pas de temps propose par\n       |                         PASAPAS pour atteindre l'equilibre\n       |                         avec l'increment de deformation totale\n       |                         impose (DSTRAN)\n       |\n       |\n       |  IN     : TEMP   : REAL*8, temperature a t0\n       |           DTEMP  : REAL*8, increment de temperature a t0+dt\n       |           PREDEF : REAL*8(*), vecteur des parametres externes\n       |                    de la loi de comportement, valeurs a t0\n       |           DPRED  : REAL*8(*), increments des parametres\n       |                    externes a t0+dt\n       |\n       |\n       |  IN     : CMNAME : CHARACTER*16, identifiant de la loi de\n       |                    comportement\n       |                 1) La loi est identifiee par le numero qui lui\n       |                    a ete attribue : ILOI1, mot cle 'NUME_LOI'\n       |                    Par convention, ce numero est encode dans\n       |                    les 4 derniers caracteres de la chaine,\n       |                    et doit etre recupere dans UMAT par une\n       |                    instruction du type\n       |                    K4ILOI = CMNAME(13:16)\n       |                    (K4ILOI variable locale de type CHARACTER*4)\n       |                 2) La loi est identifiee par le nom qui lui a\n       |                    a ete attribue : CLOI16, mot cle 'NOM_LOI'\n       |                    et peut etre recupere dans UMAT directement\n       |                    car CMNAME = CLOI16 (variable CHARACTER*16)\n       |\n       |\n       |  IN     : NDI    : INTEGER definissant le type de calcul CAST3M\n       |\n       |\n       |  IN     : NSHR   : INTEGER\n       |                    Entree non active dans le cas d'une\n       |                    adherence a CAST3M\n       |\n       |\n       |  IN     : NTENS  : INTEGER, nombre de composantes du tenseur\n       |                    des contraintes\n       |           NSTATV : INTEGER, nombre de variables internes\n       |\n       |\n       |  IN     : PROPS  : REAL*8(NPROPS), vecteur des constantes\n       |                    de materiau\n       |           NPROPS : INTEGER, nombre de constantes de materiau\n       |\n       |\n       |  IN     : COORDS : REAL*8(3), coordonnees cartesiennes du point\n       |                    d'integration courant\n       |\n       |\n       |  IN     : DROT   : REAL*8(3,3), matrice de passage du repere\n       |                    local de l'element fini massif au repere\n       |                    general du maillage\n       |                    Entree non active pour les elements finis\n       |                    non massifs\n       |\n       |\n       |  OUT    : PNEWDT : REAL*8, rapport entre le nouveau pas de\n       |                    temps suggere et le pas de temps en entree\n       |                    (NEWDT = PNEWDT * DTIME)\n       |\n       |\n       |  IN     : CELENT : REAL*8, longueur caracteristique de\n       |                    l'element\n       |                    Determinee comme la distance maximale entre\n       |                    deux noeuds de l'element.\n       |\n       |\n       |  IN     : DFGRD0 : REAL*8(3,3), tenseur gradient de deplacement\n       |                    a t0\n       |           DFGRD1 : REAL*8(3,3), tenseur gradient de deplacement\n       |                    a t0+dt\n       |\n       |\n       |  IN     : NOEL   : INTEGER, numero de l'element courant\n       |                    Attention : numerotation locale (numero de\n       |                    l'element dans la sous-zone courante)\n       |           NPT    : INTEGER, numero du point d'integration\n       |                    courant\n       |\n       |\n       |  IN     : LAYER  : INTEGER\n       |           KSPT   : INTEGER,\n       |                    Entrees non actives dans le cas d'une\n       |                    adherence a CAST3M\n       |\n       |\n       |  IN     : KSTEP  : INTEGER\n       |           KINC   : INTEGER\n       |                    Entrees n'ayant pas de sens dans\n       |                    le cas d'une adherence a CAST3M\n       |\n       |  CONVENTION : on autorise la programmation de l'utilisateur a\n       |  se servir de KINC comme code retour. Regles a respecter :\n       |  1 - Pas d'initialisation superflue de KINC en entrant dans\n       |      UMAT. KINC est initialise a 1 avant l'appel a UMAT.\n       |  2 - En cas d'erreur, KINC est affecte d'une valeur\n       |      differente de 1\n       |\n       |----------------------------------------------------------------\n\n\n  \n2.3 PLASTIQUE \n------------- \n * 'PLASTIQUE'    suivi d'un mot choisi parmi :\n\n       | ('ISOTROPE') : Modele de Von Mises a ecrouissage isotrope\n       |                (option par defaut)\n       |\n       | 'PARFAIT'  : Modele de Von Mises sans ecrouissage\n       |\n       | 'CINEMATIQUE'  : Modele de Von Mises a ecrouissage\n       |                  cinematique lineaire\n       |\n       | 'DRUCKER_PARFAIT' : Modele de Drucker-Prager a ecoulement\n       |                     associe et sans ecrouissage\n       |\n       | 'DRUCKER_PRAGER'  : Modele de Drucker-Prager a ecoulement\n       |                     non associe et ecrouissage\n       |\n       | 'BETON'  : Modele beton (uniquement en contraintes\n       |            planes).\n       |\n       | 'CHABOCHE1'  : Modele Chaboche a un centre (et ecrouissage\n       |                isotrope).\n       |\n       | 'CHABOCHE2'  : Modele Chaboche a deux centres (et ecrouis-\n       |                sage isotrope).\n       |\n       | 'TUYAU_FISSURE'  : Modele de plasticite (parfaite)/\n       |                    (ecrouissage) pour l'element TUYAU\n       |                    FISSURE.\n       |\n       | 'ENDOMMAGEABLE'  : Modele de materiau elastoplastique\n       |                    endommageable (Lemaitre Chaboche).\n       |\n       | 'GAUVAIN'  : Modele de Gauvain.\n       |\n       | 'BILIN_MOMY'  : modele de flexion ou de cisaillement\n       | 'BILIN_EFFZ'    bilineaire pour les element POUT et TIMO\n       |\n       | 'TAKEDA_MOMY' : modele de flexion ou de cisaillement\n       | 'TAKEMO_EFFZ'   de takeda pour les element POUT et TIMO\n       |\n       | 'BA1D'        : modele global de poteau en b\u00c3\u00a9ton arm\u00c3\u00a9\n       |                 en flexion pour les elements POUT\n       |\n       | 'LINESPRING'  : Modele de plasticite (parfaite)/(ecrouis-\n       |                 sage) pour l'element LINESPRING.\n       |\n       | 'UBIQUITOUS'  : Modele Ubiquitous.\n       |\n       | 'GLOBAL'   : Modele de plasticite pour les elements en\n       |              beton arme qui permet la prise en compte\n       |              des lois de comportement globales, diffe-\n       |              rentes selon les types de sollicitation.\n       |\n       | 'CAM_CLAY' : Modele ayant un comportement elastique\n       |              non-lineaire en volume et plastique en\n       |              volume et en distorsion.\n       |\n       | 'HUJEUX'   : Modele de comportement de sols et de\n       |              certains milieux granulaires, ayant\n       |              un comportement plastique en volume et\n       |              en distorsion.\n       |\n       | 'GURSON'   : Modele plastique basee sur la surface de\n       |              de Gurson qui depend de la pression. La\n       |              porosite est introduite comme variable\n       |              interne. Ce modele est utilise pour la\n       |              rupture ductile par croissance de cavites.\n       |              Il n'est implante qu'en 3D et en axisym.\n       |\n       | 'JOINT_DILATANT' : Modele de joint avec critere de\n       |              type Mohr-Coulomb et ecoulement non\n       |              associe (en 2D cont. planes, defo. planes)\n       |\n       | 'JOINT_SOFT' : Modele de joint avec critere de\n       |              type Mohr-Coulomb et adoucissement et sans dilatance\n       |              (en 2D cont. planes, defo. planes)\n       |\n       | 'JOINT_COAT' : Modele de joint en cisaillement avec critere de\n       |              plasticite isotrope, adoucissement et endommagement.\n       |              (en 2D cont. planes, defo. planes)\n       |\n       | 'ANCRAGE_ELIGEHAUSEN' : Modele d'ancrage reprenant la loi\n       |              d'Eligehausen (avec adoucissement) en cisaillement\n       |              Le comportement du joint en traction-compression\n       |              reste elastique lineaire.\n       |              (en 2D cont. planes, defo. planes)\n       |\n       | 'COULOMB'  : Modele de joint dilatant avec critere de\n       |              type Mohr-Coulomb et ecoulement associe\n       |              (en 3D isotrope, 2D axi, cont. planes, defo. planes)\n       |\n       | 'INTJOI  ' : Modele d'interface acier/beton sans/avec prise\n       |              en compte de la corrosion. Trois mecanismes sont\n       |              couples : endommagement, glissement interne et\n       |              anelasticite des produits de corrosion s'il y a\n       |              lieu. Ce modele est implante pour des elements\n       |              joints 2D/3D.\n       |\n       | 'AMADEI'   : Modele de joint non lineaire incremental\n       |              a comportement adoucissant en cisaillement\n       |              (en 3D isotrope, 2D axi, defo. planes)\n       |\n       | 'ACIER_UNI': Modele de comportement de l'acier de\n       |              Menegotto-Pinto utilisable pour les elements\n       |              modelisant une section de poutre  (modele a fibre)\n       |              et les elements de barre\n       |\n       | 'ACIER_ANCRAGE': Modele de comportement d'ancrage ou de recouvrement\n       |              base sur de le modele d'acier ACIER_UNI et le modele\n       |              de glissement acier/beton ANCRAGE_ELIGEHAUSEN.\n       |              Cette loi uniaxiale est valable pour des elements de\n       |              barre ou des sections de poutre  (modele a fibre)\n       |              et les elements de barre\n       |\n       | 'BETON_UNI': Modele de comportement du beton de\n       |              Hognestad utilisable pour les elements\n       |              modelisant une section de poutre (modele a fibre)\n       |              et les elements de barre\n       |\n       | 'BETON_BAEL':Modele de beton du BAEL pour les elements\n       |              modelisant une section de poutre (modele a fibre)\n       |              et les element de barre\n       |\n       | 'MAZARS'    : Modele d'endommagement scalaire pour le beton\n       |              (bien adapte aux chargements monotones) pour les\n       |              elements modelisant une section de poutre (modele a fibre)\n       |              Ce modele a ete implemente dans le modele a fibre\n       |              dans sa formulation 3D complete et non pas uniaxiale\n       |\n       | 'INTIMP'      : Modele d'acier corrode couple avec un modele\n       |              d'interface acier/beton RICINT. Le couplage est effectue\n       |              en realisant l'equilibre d'un element barre. Ce modele\n       |              permet une prise en compte de l'interface acier/beton dans\n       |              un calcul de type multifibre en relaxant les contraintes\n       |              dans l'acier selon le niveau d'endommagement de l'interfac\n       |\n       | 'UNILATERAL'  : Modele d'endommagement a 2 variables\n       |              scalaires pour le beton ( bien adapte\n       |              aux chargements cycliques ) pour les elements\n       |              modelisant une section de poutre (modele a fibre)\n       |              et les elements de barre (modele de laborderie)\n       |\n       | 'FRAGILE_UNI':Modele d'endommagement et unilateral fragile\n       |               en traction et en compression pour les elements\n       |               modelisant une section de poutre (modele a fibre)\n       |\n       | 'STRUT_UNI':  Modele non-lineaire pour l'effort tranchant\n       |               (diagonale en beton pour la compression et cadre\n       |               pour la traction) pour les elements\n       |               modelisant une section de poutre (modele a fibre)\n       |\n       | 'CISAIL_NL' : Modele non-lineaire avec adoucissement\n       |               reliant cisaillement et effort tranchant\n       |               pour les elements de poutre de Timoshenko\n       |               et les elements modelisant une section de\n       |               poutre (modele a fibre) (la loi est non lineaire\n       |               dans la direction Oz du repere local de la poutre)\n       |\n       | 'INFILL_UNI'  : modele non-lineaire d'endommagement-plasticite\n       |                 unilateral avec adoucissement en compression et\n       |                 sans resistance en traction  (element de barre\n       |                 uniquement).\n       |                 Cette loi peut etre utilisee sur deux\n       |                 elements de barre comme modele global\n       |                 pour modeliser les murs de remplissage en maconnerie\n       |\n       | 'PARFAIT_UNI': Modele d'acier elasto-plastique avec ecrouissage\n       |               cinematique pour les elements modelisant une\n       |               section de poutre\n       |\n       | 'PARFAIT_ANCRAGE': Modele de comportement d'ancrage ou de recouvrement\n       |              base sur de le modele d'acier PARFAIT_UNI et le modele\n       |              de glissement acier/beton ANCRAGE_ELIGEHAUSEN.\n       |              Cette loi uniaxiale est valable pour des elements de\n       |              barre ou des sections de poutre (modele a fibre)\n       |\n       | 'OTTOSEN'  : Modele de comportement des materiaux fragiles\n       |              ecrit selon l'approche des modeles de fissuration\n       |              fictive. Lorsque l'endommagement est localise, le\n       |              modele tient compte d'un parametre de taille\n       |              donnant une mesure de la zone degradee afin\n       |              d'assurer un calcul objectif vis a vis du\n       |              choix du maillage.\n       |\n       | 'OTTOVARI' : Nouvelle implementation du modele OTTOSEN pour traiter le\n       |              cas ou les parametres materiau sont variables.\n       |              Seulement pour les elements massifs volumiques.\n       |\n       | 'BETOCYCL'  : Modele plastique reproduisant la degradation\n       |               de resistance en compression sous chargement\n       |               cyclique. Le modele comporte deux surfaces\n       |               (une \"interieure\" et une \"exterieure\")\n       |               ayant chacune un mecanisme de traction\n       |               et un de compression du type Rankyne.\n       |               Ce modele a ete developpe pour la modelisation\n       |               de structures planes en maconnerie soumises\n       |               a des chargements cycliques\n       |               (en 2D contraintes planes).\n       |\n       | 'STEINBERG': Modele de comportement de Steinberg-Cochran\n       |              -Guinan utilisable pour des elements\n       |              massifs. Ce modele a ete elabore pour\n       |              reproduire le comportement sous choc\n       |              des solides metalliques.\n       |\n       | 'ZERILLI'  : Modele de comportement de Zerilli-Armstrong\n       |              utilisable pour des elements massifs.\n       |              Il propose une formulation mathematique\n       |              de la contrainte d'ecoulement au sens de\n       |              Von Mises s'appuyant sur la theorie des\n       |              dislocations.\n       |\n       | 'PRESTON'  : Modele de comportement de\n       |              Preston-Tonks-Wallace\n       |              utilisable pour des elements massifs.\n       |              Il propose une formulation mathematique\n       |              de la contrainte d'ecoulement s'appuyant,\n       |              d'une part sur la theorie des dislocations\n       |              et d'autres part sur la theorie\n       |              de l'analyse dimensionnelle.\n       |\n       | 'HINTE'    : Modele de joint avec degradation jusqu'a la\n       |              phase ultime de la rupture. Ce modele\n       |              d'endommagement est independant du temps.\n       |              Il a comme support geometrique les elements\n       |              raccord ( en 2D pour l'instant)\n       |\n       | 'J2'            : Modele de Von Mises avec ecrouissage isotrope\n       |                   exponentiel/lineaire\n       |                   matrice tangente consistante disponible\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'RH_COULOMB'    : Modele de Mohr Coulomb approche hyperbolique\n       |                   plasticite parfaite et associee\n       |                   matrice tangente consistante disponible\n       |                   sous-decoupage disponible (voir SSTE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'MRS_LADE'      : Modele de MRS-Lade pour les materiaux granulaires\n       |                   sans cohesion\n       |                   Cap-modele,ecrouissage conique non associe\n       |                   matrice tangente consistante disponible\n       |                   sous-decoupage disponible (voir SSTE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'VMT_FEFP'      : Modele de Von Mises Tresca avec ecrouissage isotrope\n       |                   exponentiel/lineaire, hyperelasticite et\n       |                   deformations finies\n       |                   matrice tangente consistante disponible (voir ECFE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'RHMC_FEFP'     : Modele de Mohr Coulomb plastique approche\n       |                   hyperbolique avec hyperelasticite et\n       |                   deformations finies\n       |                   plasticite parfaite et associee\n       |                   matrice tangente consistante disponible (voir ECFE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'POWDER_FEFP'   : Modele de plasticite elliptique dependant de la\n       |                   densite avec hyperelasticite et deformations finies\n       |                   utilise pour la simulation de compaction de poudre\n       |                   a froid\n       |                   matrice tangente consistante disponible (voir ECFE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'POWDERCAP_FEFP': Modele de plasticite elliptique dependant de la\n       |                   densite avec hyperelasticite et deformations finies\n       |                   utilise pour la simulation de compaction de poudre\n       |                   a froid\n       |                   matrice tangente consistante disponible (voir ECFE)\n       |                   (option de calcul : plan defo,axis)\n       |\n       | 'DRUCKER_PRAGER_2' : Modele de plasticite adoucissant pour les betons\n       |                     a deux surfaces seuils : un critere de Rankine en\n       |                     traction et un critere de drucker-prager adoucissan\n       |                     en compression\n       |\n       | 'RICBET_UNI' :    Modele d'endommagement pour le beton (bien adapte aux\n       |                   chargements cycliques et sismique) pour les elements\n       |                   modelisant une section de poutre (modele a fibre).\n       |                   La particularite de ce modele est qu'il prend en comp\n       |                   les effets hysteretiques locaux.\n       |\n       | 'DP_SOL' :        Modele de plasticite Drucker-Prager avec loi\n       |                   d ecoullement non assosie et ecrouissage non lineaire\n       |\n       | 'LIAISON_ACBE' :  Modele d'adherence unidimensionnel (liaison\n       |                   acier-beton) prenant en compte la decharge,\n       |                   pour les elements coaxiaux (COA2 et COS2)\n       |                   dans le cas tridimensionel.\n       |\n       | 'OUGLOVA' :    Modele de elastoplastique endommageable de l'acier\n       |                corrode. Implante pour des calculs en 3D, 2D, 1D et\n       |                multifibres\n       |\n       | 'IWPR3D_SOL' :    Modele de plasticite base sur le travaux de\n       |                   Prevost sur un modele de nested yield surface\n       |                   La loi est composee de 10 surface de charge\n       |                   \u00c3  ecrouissage lineaire. La loi peut reppresenter\n       |                   l'anisotropie dans la phase plastique\n       |\n       | 'NORTON' :     Modele de fluage de Norton unidirectionnel pour les elements modelisant une\n       |                section de poutre (modele a fibre, elements finis POJS, TRIS, QUAS).\n       |\n       | 'POLYNOMIAL' : Modele de fluage polynomial unidirectionnel pour les elements modelisant\n       |                une section de poutre (modele a fibre, elements finis POJS, TRIS, QUAS).\n       |\n       | 'BLACKBURN' et 'BLACKBURN_2' : Modeles de fluage de Blackburn unidirectionnel pour les\n       |                                elements modelisant une section de poutre (modele a fibre,\n       -                                elements finis POJS, TRIS, QUAS).\n       |\n       | 'LEMAITRE' : Modele de fluage de Lemaitre unidirectionnel pour les elements modelisant\n       |              une section de poutre (modele a fibre, elements finis POJS, TRIS, QUAS).\n\n\n  \n2.4 ENDOMMAGEMENT \n----------------- \n * 'ENDOMMAGEMENT'   suivi d'un mot choisi parmi :\n\n       | 'MAZARS'      : Modele d'endommagement scalaire pour\n       |                 le beton (bien adapte aux chargements monotones)\n       |\n       | 'UNILATERAL'  : Modele d'endommagement a 2 variables\n       |                 scalaires pour le beton (bien adapte aux chargements cycliques)\n       |\n       | 'ROTATING_CRACK' : Modele d'endommagement pour le\n       |                    beton\n       |\n       | 'SIC_SIC' : Modele d'endommagement pour le composite\n       |             ceramique SiC/SiC\n       |\n       | 'MVM'           : Modele d'endommagement de Von Mises modifie\n       |                   dommage scalaire nonlocal pour materiau quasifragile\n       |\n       | 'SICSCAL'    : Modele 'scalaire' d'endommagement pour le composite\n       |                tisse  SiCf/SiC developpe a l'ONERA avec 3 variables\n       |                d'endommagement correspondant aux plans perpendiculaires\n       |                aux directions des fibres: d1 et d2 et dans le plan\n       |                du pli: d3.\n       |\n       | 'SICTENS'    : Modele 'pseudo-tensoriel' d'endommagement pour le compos\n       |                tisse  SiCf/SiC developpe a l'ONERA avec 5 variables\n       |                d'endommagement correspondant aux plans perpendiculaires\n       |                aux directions des fibres : d1 et d2, dans le plan du pl\n       |                et dans les plans perpendiculaires aux directions a + et\n       |                45\u00c2\u00b0 des fibres (rotation dans le plan du pli).\n       |\n       | 'DAMAGE_TC'  : Modele d'endommagement a deux variables : une en tractio\n       |                et une en compression. Ce modele est utilisation en\n       |                cyclique et est regularise par energie de fissuration.\n       |\n       | 'DESMORAT'   : Modele d'endommagement anisotrope pour le beton\n       |                ( bien adapte aux chargements monotones ).\n       |                Ce modele est utilisable en non local.\n       |\n       | 'FATSIN'     : Modele d'endommagement scalaire isotrope de materiaux te\n       |                en FATigue SINusoidale (implante en local ou nonlocal)\n       |\n       | 'RICRAG'     : Modele d'endommagement scalaire pour\n       |                le beton (adapte aux cas de chargements monotones et\n       |                cycliques alternes \u00c3  niveau modere de charge) pour les\n       |                elements volumiques 2D/3D.\n       |\n       | 'GLRC_DM'    : Mod\u00c3\u00a8le d'endommagement scalaire pour le b\u00c3\u00a9ton arm\u00c3\u00a9\n       |               sous chargement cyclique. Ce mod\u00c3\u00a8le est formul\u00c3\u00a9\n       |               en termes de contraintes et d\u00c3\u00a9formation g\u00c3\u00a9n\u00c3\u00a9ralis\u00c3\u00a9es.\n       |               Il est implant\u00c3\u00a9 pour des \u00c3\u00a9l\u00c3\u00a9ments de type coque. Il\n       |                peut \u00c3\u00aatre not\u00c3\u00a9 qu'il n'y a pas de branche adoucissante\n       |               Ainsi, aucun ph\u00c3\u00a9nom\u00c3\u00a8ne de localisation des d\u00c3\u00a9formation\n       |               ne peut appara\u00c3\u00aetre, ce qui assure une ind\u00c3\u00a9pendance \u00c3  l\n       |               discr\u00c3\u00a9tisation.\n       | 'EFEM'       : Mod\u00c3\u00a8le mettant permettant la mise en oeuvre de la\n       |                m\u00c3\u00a9thode EFEM (Embeded Finite Element Method).\n       |\n       | 'RICBET'     : Modele d'endommagement visant \u00c3  d\u00c3\u00a9crire le comportemen\n       |               du b\u00c3\u00a9ton sous chargement cyclique/sismique. Parmi ses po\n       |               forts, on peut citer : la disymm\u00c3\u00a9trie traction/compressi\n       |               les d\u00c3\u00a9formations permanentes en traction et en compressi\n       |               les effets hyst\u00c3\u00a9r\u00c3\u00a9tiques en traction en enfin, un effet\n       |               unilat\u00c3\u00a9ral complet lin\u00c3\u00a9aire. Elements volumique 3D.\n       |\n       | 'RICCOQ'     : Mod\u00c3\u00a8le d'endommagement simplifi\u00c3\u00a9 r\u00c3\u00a9gularis\u00c3\u00a9 par\n       |                l'energie de fissuration. Il est pr\u00c3\u00a9vu pour les \u00c3\u00a9l\u00c3\u00a9me\n       |                coques. Sa formulation est simple et robuste.\n       |\n       | 'CONCYC'    : Mod\u00c3\u00a8le d'endommagement scalaire regularise soit en non\n       |               local soit par une approche energetique (Hillerborg) adap\n       |               aux chargements cycliques. Des enrichissement multi-axiau\n       |               du critere de fissuration et de l'evolution de la\n       |               fissuration peuvent etre activees. Le cisaillement peut e\n       |               controle efficacement. Il prend en compte l effet unilate\n       |               les deformations permamentes et les effets hysteretiques\n       |               induites par friction.\n\n  \n2.5 FLUAGE \n---------- \n * 'FLUAGE'    suivi d'un mot choisi parmi :\n\n       | 'NORTON'  : Modele de fluage de NORTON\n       |\n       | 'BLACKBURN'  : Modele de fluage de Blackburn\n       |\n       | 'RCCMR_316'  : Modele de fluage RCC-MR pour l'acier 316-SS\n       |\n       | 'RCCMR_304'  : Modele de fluage RCC-MR pour l'acier 304-SS\n       |\n       | 'LEMAITRE'   : Modele de fluage de Lemaitre\n       |\n       | 'POLYNOMIAL' : Modele de fluage de polynomial\n       |\n       | 'CERAMIQUE' : Modele de comportement des ceramiques\n       |              Au dessus d'une temperature de transition\n       |              le materiau flue selon la loi de Norton.\n       |              Au dessous de cette temperature, il se comporte\n       |              selon le modele d'Ottosen.\n       |              la perte de rigidite des elements ayant subi en\n       |              fluage une deformation totale superieure a une\n       |              limite fixee peut aussi etre prise en compte.\n       |\n       | 'MAXWELL'  : Modele de Maxwell generalise. L modele possede\n       |              4 branches obligatoires ( en plus de la branche\n       |              purement elastique) et 4 branches facultatives.\n       |\n       | 'MAXOTT'   : Modele de comportement couplant le modele OTTOSEN\n       |              pour le comportement fragile et le modele de\n       |              MAXWELL pour le comportement de fluage.\n       |\n       | 'KELVIN' :   Modele de comportement pour le fluage propre du\n       |              beton. Ce modele est base sur une cha\u00c3\u00aene de\n       |              Kelvin-Voigt compose de 3 systemes en serie et\n       |              de 1 ressort isole pour la partie purement\n       |              elastique.\n\n\n\n  \n2.6 PLASTIQUE_ENDOM \n------------------- \n * 'PLASTIQUE_ENDOM' suivi d'un mot choisi parmi :\n\n       | 'PSURY'     : modele d'endommagement P/Y\n       |\n       | 'ROUSSELIER': modele d'endommagement ductile de Rousselier\n       |\n       | 'GURSON2'   : modele d'endommagement ductile de Gurson\n       |               modifie par Needleman et Tvergaard\n       |\n       | 'DRAGON'    : modele endommageable quasi-fragile de Dragon\n       |\n       | 'BETON_URGC': modele de beton\n       |\n       | 'BETON_INSA': modele de beton\n       |\n       | 'BETON_DYNAR_LMT' : modele de beton pour dynamique rapide\n       |\n       | 'ENDO_PLAS' : modele de beton plastique endommageable\n\n\n  \n2.7 VISCOPLASTIQUE \n------------------ \n * 'VISCOPLASTIQUE'   suivi d'un mot choisi parmi :\n\n       | 'CHABOCHE'  : Modele viscoplastique de Chaboche\n       |\n       | 'GUIONNET'  : Modele viscoplastique de Guionnet\n       |\n       | 'ONERA'     : Modele viscoplastique \"unifie\" de Chaboche\n       |               (effets \"memoire\" de la def. plastique)\n       |\n       | 'OHNO'      : Modele viscoplastique de Ohno\n       |               (ONERA-Chaboche modifie Ohno )\n       |\n       | 'VISCODOMMAGE' : Modele viscoplastique endommageable de\n       |                  Lemaitre et Chaboche\n       |\n       | 'PARFAIT'   : Modele viscoplastique parfait.\n       |\n       | 'POUDRE_A'   : Modele viscoplastique d'ABOUAF pour\n       |               les poudres\n       |\n       | 'DDI'        : Modele a deux deformations inelastiques.\n       |\n       | 'KOCKS'   : Modele viscoplatique de KOCKS\n       |\n       | 'NOUAILHAS_A : Modele viscoplastique de Nouailhas\n       |\n       | 'NOUAILHAS_B : Modele viscoplastique de Chaboche\n       |\n       | 'VISK2' : Modele viscoplastique a 2 variables internes\n       |      base sur le modele plastique a ecrouissage cinematique\n       |\n       |  'VISCOHINTE' : Il s'agit d'un modele de JOIN avec\n       |                 degradation jusqu'a la phase ultime de la\n       |                 rupture. Ce modele d'endommagement est\n       |                 dependant du temps. Il a comme support\n       |                 geometrique les elements RACCORD.\n       |\n       | 'MISTRAL' : Modele general de deformation MISTRAL. Ce modele\n       |             requiert un comportement elastique orthotrope.\n       |\n       | 'GATT_MONERIE' : Modele viscoplastique de GATT_MONERIE pour\n       |                  le comportement du combustible UO2\n       |\n       | 'UO2': Modele couplant la viscoplasticite du combustible UO2\n       |        decrite par le modele GATT_MONERIE et son comportement\n       |        fragile en traction (apparition de fissuration fictive)\n       |        decrit par le modele propose par OTTOSEN.\n       |\n       | 'VISCODD': Modele viscoplastique a ecrouissage isotrope\n       |        avec deux variables dendommagements: une premiere\n       |        ductile isotrope et une seconde de fluage anisotrope.\n       |\n       |  'SYCO1' : loi de 'SYMONDS & COWPER' standard (cf. MATE)\n       |  'SYCO2' : loi de 'SYMONDS & COWPER' modifi\u00c3\u00a9e (cf. MATE)\n       |  disponible pour les formulations 3D et 2D contraintes planes\n       |  et d\u00c3\u00a9formations planes avec les \u00c3\u00a9l\u00c3\u00a9ments massifs et XFEM.\n\n\n\n\n  \n2.8 VISCO_EXTERNE \n----------------- \n * 'VISCO_EXTERNE' : comportement viscoplastique externe.\n                     Pas d'option par defaut.\n                     Doit etre suivi d'un mot choisi parmi :\n\n       | 'GENERAL' : modele evaluant une deformation inelastique\n       |             combinaison d'un terme de gonflement et d'un terme\n       |             de fluage, a l'aide d'un critere general sur les\n       |             contraintes (critere de Von Mises)\n       |\n       | 'DRUCKER_PRAGER' : Option non disponible pour le calcul\n       |\n       | 'COHESION' : Option non disponible pour le calcul\n       |\n       | 'CONSOLIDATION' : Option non disponible pour le calcul\n       |\n       | 'UTILISATEUR' : Option non disponible pour le calcul\n       |\n       |\n       |  Commentaires :\n       |  ------------\n       |  Un numero ILOI1 ou un nom CLOI16 doit etre affecte a toute\n       |  loi de comportement du groupe 'VISCO_EXTERNE'.\n       |  La liste des parametres externes de la loi est donnee par\n       |  l'objet LMOTS1 (le cas echeant).\n       |  Les composantes de materiau sont les memes que celles du\n       |  comportement 'ELASTIQUE' 'ISOTROPE'.\n       |  Quatre variables internes pre-definies pour toutes les lois :\n       |  - 'EC0 ' : deformation equivalente cumulee de fluage,\n       |  - 'ESW0' : deformation equivalente cumulee de gonflement,\n       |  - 'P   ' : 1er invariant du tenseur des contraintes\n       |             = 1/3 trace (SIGMA),\n       |  - 'QTLD' : contrainte equivalente de Von Mises\n       |             = SQRT(3/2 S:S), avec S deviateur des contraintes.\n       |  La liste des variables internes supplementaires est donnee par\n       |  l'objet LMOTS3 (le cas echeant).\n       |\n       |  Les lois 'VISCO_EXTERNE' sont integrees par un schema general\n       |  de type Runge-Kutta d'ordre 2. Le processus d'integration fait\n       |  appel au module utilisateur CREEP pour le calcul de vitesses\n       |  equivalentes de deformation de fluage et de gonflement.\n       |  Etant donnes :\n       |  - les deformations equivalentes cumulees EC0 et ESW0 au debut\n       |    du pas ;\n       |  - les variables internes caracterisant l'etat de contraintes\n       |    P et QTLD, au debut OU a la fin du pas ;\n       |  - les eventuelles variables internes supplementaires au debut\n       |    du pas ;\n       |  - un pas de temps dt ;\n       |  - un indicateur de debut OU de fin du pas ;\n       |  le module CREEP calcule :\n       |  - deux increments de deformation equivalente de fluage et de\n       |    gonflement : produits des vitesses de deformation (evaluees\n       |    au debut OU en fin de pas) par le pas de temps dt ;\n       |  - les valeurs des variables internes supplementaires en fin\n       |    de pas, si la routine est appelee avec l'indicateur de fin\n       |    du pas.\n       |\n       |  Mode operatoire :\n       |  ---------------\n       |  1 - Programmer le module externe CREEP et ses dependances :\n       |      - Reprendre le module exemple integre au code.\n       |        Il faut conserver imperativement la premiere carte du\n       |        module exemple pour assurer le succes de la compilation.\n       |      - Respecter l'interface d'appel de la routine.\n       |  2 - Compiler le module externe et ses dependances, puis\n       |      edition de liens avec le reste du code.\n       |  3 - Mise en oeuvre en langage Gibiane en respectant la syntaxe\n       |      decrite ci-dessus.\n       |\n       |----------------------------------------------------------------\n       |  Interface du module externe CREEP :\n       |  ---------------------------------\n       |\n       |  SUBROUTINE CREEP (DECRA,DESWA,STATEV,serd,EC0,ESW0,P,QTILD,\n       | &                  TEMP,DTEMP,PREDEF,DPRED,TIME,DTIME,\n       | &                  CMNAME,leximp,LEND,COORDS,NSTATV,NOEL,NPT,\n       | &                  layer,kspt,KSTEPC,KINC)\n       |  IMPLICIT REAL*8(A-H,O-Z)\n       |\n       |\n       |  CHARACTER*16  CMNAME\n       |\n       |  INTEGER       leximp, LEND, NSTATV, NOEL, NPT, layer, kspt,\n       |  &             KSTEPC, KINC\n       |\n       |  REAL*8        DECRA(5), DESWA(5), STATEV(*),\n       |  &             serd, EC0, ESW0, P, QTILD,\n       |  &             TEMP,DTEMP, PREDEF(*),DPRED(*), TIME(2),DTIME,\n       |  &             COORDS(*)\n       |\n       |----------------------------------------------------------------\n       |  OUT    : DECRA  : REAL*8(5)\n       |                    DECRA(1) : increment scalaire de deformation\n       |                    de fluage, au debut du pas si LEND=0,\n       |                    a la fin du pas si LEND=1.\n       |                    Les composantes 2 a 5 ne sont pas exploitees\n       |                    dans le cas d'une adherence a CAST3M.\n       |\n       |  OUT    : DESWA  : REAL*8(5)\n       |                    DESWA(1) : increment scalaire de deformation\n       |                    de gonflement, au debut du pas si LEND=0,\n       |                    a la fin du pas si LEND=1.\n       |                    Les composantes 2 a 5 ne sont pas exploitees\n       |                    dans le cas d'une adherence a CAST3M.\n       |\n       |  Remarque : la routine CREEP evalue des VITESSES de deformation\n       |  (fluage et gonflement) au debut ou a la fin du pas, suivant la\n       |  valeur de LEND.\n       |  Les increments DECRA(1) et DESWA(1) sont ensuite determines\n       |  par les produits de ces vitesses par le pas de temps DTIME.\n       |\n       |  IN/OUT : STATEV : REAL*8(*),variables internes supplementaires\n       |                    Il s'agit des eventuelles variables internes\n       |                    s'ajoutant aux 4 pre-definies 'EC0 ','ESW0',\n       |                    'P   ' et 'QTLD'.\n       |                    Valeurs au debut du pas si LEND=0.\n       |                    Peuvent etre mises a jour si LEND=1: valeurs\n       |                    a la fin du pas.\n       |\n       |  IN/OUT : serd   : REAL*8, puissance volumique de deformation\n       |                    inelastique (produit contracte du tenseur\n       |                    des contraintes et du tenseur des vitesses\n       |                    de deformation inelastique).\n       |                    Entree/sortie facultative, non exploitee par\n       |                    CAST3M pour l'instant.\n       |\n       |  IN     : EC0    : REAL*8, deformation de fluage cumulee.\n       |                    1ere des 4 variables internes pre-definies.\n       |                    Valeur au debut du pas.\n       |\n       |  IN     : ESW0   : REAL*8, deformation de gonflement cumulee.\n       |                    2eme des 4 variables internes pre-definies.\n       |                    Valeur au debut du pas.\n       |\n       |  IN     : P      : REAL*8, 1er invariant du tenseur des\n       |                    contraintes = 1/3 trace(SIGMA)\n       |                    3eme des 4 variables internes pre-definies.\n       |                    Valeur au debut du pas si LEND=0, a la fin\n       |                    du pas si LEND=1.\n       |\n       |  IN     : QTILD  : REAL*8, contrainte equivalente de Von Mises\n       |                    = SQRT(3/2 S:S), S deviateur des contraintes\n       |                    4eme des 4 variables internes pre-definies.\n       |                    Valeur au debut du pas si LEND=0, a la fin\n       |                    du pas si LEND=1.\n       |\n       |  IN     : TEMP   : REAL*8, temperature a la fin du pas.\n       |           DTEMP  : REAL*8, increment de temperature au cours du\n       |                    pas de temps.\n       |           PREDEF : REAL*8(*), vecteur des parametres externes\n       |                    de la loi de comportement, valeurs a la fin\n       |                    du pas.\n       |           DPRED  : REAL*8(*),increments des parametres externes\n       |                    au cours du pas de temps.\n       |\n       |  IN     : TIME   : REAL*8(2)\n       |                    TIME(1) : duree cumulee des iterations\n       |                    internes a la fin du pas en cours.\n       |                    TIME(2) : instant intermediaire absolu\n       |                    a la fin du pas en cours.\n       |           DTIME  : REAL*8, valeur du pas de temps en cours.\n       |\n       |  Remarque : l'instant absolu correspondant a la precedente\n       |  iteration interne convergee est TIME(2)-DTIME.\n       |\n       |  IN     : CMNAME : CHARACTER*16, identifiant de la loi de\n       |                    comportement.\n       |                 1) La loi est identifiee par le numero qui lui\n       |                    a ete attribue : ILOI1, mot cle 'NUME_LOI'\n       |                    Par convention, ce numero est encode dans\n       |                    les 4 derniers caracteres de la chaine,\n       |                    et doit etre recupere dans CREEP par une\n       |                    instruction du type\n       |                    K4ILOI = CMNAME(13:16)\n       |                    (K4ILOI variable locale de type CHARACTER*4)\n       |                 2) La loi est identifiee par le nom qui lui a\n       |                    a ete attribue : CLOI16, mot cle 'NOM_LOI'\n       |                    et peut etre recupere dans CREEP directement\n       |                    car CMNAME = CLOI16 (variable CHARACTER*16)\n       |\n       |  IN     : leximp : INTEGER\n       |                    Entree non active dans le cas d'une\n       |                    adherence a CAST3M.\n       |\n       |  IN     : LEND   : INTEGER, indicateur de debut/fin de pas.\n       |                    LEND=0 : les entrees P, QTILD sont definies\n       |                    au debut du pas ; les sorties DECRA(1),\n       |                    DESWA(1) sont calculees au debut du pas.\n       |                    LEND=1 : les entrees P, QTILD sont definies\n       |                    a la fin du pas ; les sorties DECRA(1),\n       |                    DESWA(1) sont calculees a la fin du pas.\n       |\n       |  IN     : COORDS : REAL*8(*), coordonnees cartesiennes du point\n       |                    d'integration courant.\n       |\n       |  IN       NSTATV : INTEGER, nombre de variables internes\n       |                    supplementaires (en plus des 4 pre-definies)\n       |\n       |  IN     : NOEL   : INTEGER, numero de l'element courant.\n       |                    Attention : numerotation locale (numero de\n       |                    l'element dans la sous-zone courante).\n       |           NPT    : INTEGER, numero du point d'integration\n       |                    courant.\n       |\n       |  IN     : layer  : INTEGER\n       |           kspt   : INTEGER\n       |                    Entrees non actives dans le cas d'une\n       |                    adherence a CAST3M.\n       |\n       |  IN/OUT : KSTEPC : INTEGER\n       |                    Entree n'ayant pas de sens dans le cas d'une\n       |                    adherence a CAST3M.\n       |\n       |  CONVENTION : on autorise la programmation de l'utilisateur a\n       |  se servir de KSTEPC comme code retour. Regles a respecter :\n       |  1. Pas d'initialisation superflue de KSTEPC en entrant dans\n       |     CREEP. KSTEPC est initialise a 1 avant l'appel a CREEP.\n       |  2. En cas d'erreur, KSTEPC est affecte d'une valeur\n       |     differente de 1\n       |\n       |  IN     : KINC   : INTEGER, compteur d'iterations internes.\n       |                    Incrementation geree par l'appelant.\n       |\n       |----------------------------------------------------------------\n\n\n  \n2.9 IMPEDANCE \n------------- \n * 'IMPEDANCE' , s'utilise pour pour un maillage support constitue de\n                 POI1 ou SEG2, suivi d'un mot choisi parmi :\n\n       |'ELASTIQUE' : Comportement purement lineaire elastique\n       |\n       |'VOIGT'     : Comportement superposant un frein visqueux\n       |              a une reponse de ressort lineaire\n       |\n       |'REUSS   : Comportement resultant de l'association en serie\n       |              d'un frein visqueux et d'un ressort lineaire\n       |\n       |'COMPLEXE'  : Comportement restreint au calcul frequentiel,\n       |           associant une partie elastique et un frein visqueux\n\n       Il peut etre possible d'utiliser un autre materiau non-lineaire\n       de cette notice (ex : 'PLASTIQUE' 'PARFAIT')\n\n\n\n  \n2.10 Remarques \n-------------- \n  Remarques :  * Actuellement, il n'est pas possible de cumuler\n  _________      les comportements non lineaires\n\n               * Actuellement, seul le comportement lineaire\n                 elastique isotrope peut etre utilise avec un\n                 comportement non lineaire, a l'exception du modele\n                 MISTRAL qui requiert un comportement elastique\n                 orthotrope.\n  \n3. LIQUIDE & LIQUIDE MECANIQUE \n============================== \n \n     -----------------------------------------------\n    | Noms des materiaux pour la formulation LIQUIDE |\n     -----------------------------------------------\n\n La seule donnee de la formulation est necessaire.\n\n\n     ----------------------------------------------------------\n    | Noms des materiaux pour la formulation LIQUIDE  MECANIQUE |\n     ----------------------------------------------------------\n\n La seule donnee de la formulation est necessaire.\n  \n4. POREUX \n========= \n \n     ----------------------------------------------\n    | Noms des materiaux pour la formulation POREUX |\n     ----------------------------------------------\n\n Le comportement lineaire doit d'abord etre defini, puis\n le comportement non lineaire, le cas echeant, selon les\n directives ci-dessous :\n\n\n  \n4.1 Lineaire (ELASTIQUE) \n------------------------ \n- Comportements lineaires :\n  -------------------------\n\n * 'ELASTIQUE'   ('ISOTROPE')\n\n\n- Comportements non lineaires :\n  ----------------------------\n\n\n  \n4.2 Non lineaire (PLASTIQUE) \n---------------------------- \n * 'PLASTIQUE'   suivi d'un mot choisi parmi :\n\n       | ('ISOTROPE') : Modele de Von Mises ecrouissage isotrope.\n       |\n       | 'PARFAIT'  : Modele de Von Mises sans ecrouissage\n       |\n       | 'CINEMATIQUE'  : Modele de Von Mises ecrouissage\n       |                  cinematique lineaire.\n       |\n       | 'DRUCKER_PRAGER'  : Modele de Drucker-Prager a ecoulement\n       |                     non associe.\n       |\n       | 'DRUCKER_PARFAIT'  : Modele simplifie de Drucker-Prager\n       |                        (parfait)\n  \n5. CONTACT \n========== \n \n     --------------------------------------------------\n    | Noms des materiaux pour la formulation CONTACT |\n     --------------------------------------------------\n\n    Il faut donner les deux maillages entre lesquels imposer la\n    condition de contact et eventuelement un mot-cle parmi :\n\n       | 'SYME' : traitement symetrique du contact\n       | 'MESC' : traitement non symetrique du contact (maitre/esclave)\n       | 'FAIB' : formulation faible du contact ou la condition de\n                  non penetration est imposee en moyenne sur chaque\n                  element\n\n    Par defaut, le traitement du contact est maitre-esclave (mot-cle MESC)\n    La condition Maitre Esclave impose qu'aucun noeud du second maillage\n    ne traverse un element du premier maillage.\n\n    En 2D, les deux maillages doivent etre constitues d'elements de type\n    SEG2. Ces lignes doivent etre orientees et la condition de contact est\n    imposee sur leur droite.\n\n                    MAIL1\n            >----->------>------>  /|\\\n                                    | DEP1\n            <-----<------<------<  \\|/\n                    MAIL2\n\n    En 3D, les deux maillages doivent etre constitues d'elements de type\n    TRI3. Ces surfaces doivent etre orientees et la condition de contact\n    est ecrite selon la direction d'orientation.\n\n\n  \n5.1 Sans frottement \n------------------- \n- Comportement sans frottement :\n  -------------------------------\n\n *  ('UNILATERAL')  (pour l'instant, le seul disponible)\n\n\n  \n5.2 Avec frottement \n------------------- \n- Comportements avec frottements :\n  -------------------------------\n\n * 'FROTTANT'    suivi d'un mot choisi parmi :\n\n       |  'COULOMB'    :  frottement de coulomb entre deux lignes (2D)\n       |                  ou deux surfaces (3D).\n       |\n       |  'FROCABLE'   :  frottement de cables de precontraintes selon\n       |                  lois du BPEL99. Il faut en plus donner le\n       |                  modele des cables et le maillage du volume\n       |                  dans lequel les cables sont noyes.\n  \n6. THERMIQUE \n============ \n \n     --------------------------------\n    | Noms des materiaux en THERMIQUE |\n     --------------------------------\n       |  ('ISOTROPE')\n       |  'ORTHOTROPE'\n       |  'ANISOTROPE'\n\n* Comportements\n       |  'CONDUCTION'     C'est le comportement par defaut\n       |\n       |  'CONVECTION'     Convection entre deux surfaces ou entre milieu\n       |                   externe et paroi. Pour les coques il faut un des\n       |                   mots:\n       |                    'SUPERIEURE'\n       |                    'INFERIEURE'  suivant que l'\u00c3\u00a9change se fait par la\n       |                              face superieure ou inferieure de la coque\n       |\n       |  'RAYONNEMENT'    Echange thermique par rayonnement. suivi d'un des\n       |                   mots :\n       |\n       |                  - 'INFINI'  rayonnement \u00c3  l'infini\n       |                  - 'FAC_A_FAC' rayonnement face \u00c3  face de deux surface\n       |                                suivi de :\n       |                                GEO1   surface 1\n       |                                GEO2   surface 2\n       |                                GEO3   maillage de seg2 reliant les\n       |                                       points homologues de GEO1 et GEO2\n       |                                MOD1   modele \"thermique convection\"\n       |                                       sur les elements raccords liant\n       |                                       les deux faces\n       |                  - 'CAVITE'   rayonnement de la surface sur elle-meme\n       |                               suivi ou non des mots :\n       |\n       |                               'CONVEXE' si la cavite est convexe\n       |                               'FERME'  si la cavite est ferme\n       |                               'SYMETRIQUE' en cas d'etude d'une partie\n       |                                          symetrique de la cavite totale\n       |                               'FAC_FORME' si on veut utiliser la\n       |                                           methode qui s'appuie sur le\n       |                                           calcul des facteurs de formes\n       |                               'ABSO'    si le milieu est absorbant\n       |\n       |        Remarque : un modele de thermique rayonnement peut etre defini\n       |        en plusieurs fois a condition de preciser le meme constituant\n       |\n       |  'PHASE'         En cas de changement de phase avec chaleur latente. Ce\n       |                  comportement est une extension non lineaire de la\n       |                  conduction\n       |\n       |  'ADVECTION'     echange d'un fluide dans un tuyau. La temperature du\n       |                  fluide est supposee homogene dans une section du tube\n       |                  ce comportement est une extension non lineaire de la\n       |                  conduction\n       |\n       |  'SOURCE'        Definition d'une source de chaleur appliquee sur le\n       |                  maillage fourni au modele. La formulation generale\n       |                  permet de definir une densite volumique de chaleur\n       |                  (voir MATE).\n       |\n       |                  Deux distributions spatiales specifiques sont egalement\n       |                  disponibles :\n       |                  - 'GAUSSIENNE' 'ISOTROPE'\n       |                  - 'GAUSSIENNE' 'ISOTROPE_TRANSVERSE'\n       |\n       |        Remarque : les modeles de source GAUSSIENNE ne sont disponibles\n       |        que pour les elements massifs en dimension 2 et 3.\n  \n7. CHANGEMENT_PHASE \n=================== \n \n     ----------------------------------------\n    | Noms des materiaux en CHANGEMENT_PHASE |\n     ----------------------------------------\n       |  'PARFAIT'\n       | Remarque : Les variables primales et duales impactees sont a\n       |            fournir obligatoirement a 'MODE'.\n       |            ex : pour un changement de phase thermique :\n       |              MOD1 = ... 'INCO' 'T' 'Q' ... ;\n\n       |  'SOLUBILITE'\n       | Remarque : Les 2 inconnues primales et 2 duales impactees sont a\n       |            fournir obligatoirement a 'MODE'.\n       |            ex : pour une solubilite liquide gaz en diffusion :\n       |              MOD1 = ... 'INCO' 'CL' 'CGA' 'QL' 'QGA' ... ;\n  \n8. METALLURGIE \n============== \n \n     -----------------------------------\n    | Noms des materiaux en METALLURGIE |\n     -----------------------------------\n   Deux types de transformations sont disponibles pour les transformations\n   metallurgiques :\n   1- Type KOISTINEN-MARBURGER (Acta Metallurgica, Vol.7, Issue 1,\n      January 1959, pp.59-60)\n   2- Type LEBLOND-DEVAUX (Acta Metallurgica, Vol.32, Issue 1,\n      January 1984, pp.137-146)\n\n   Pour definir les transformations, quatre objets sont a fournir en plus\n   a l'operateur MODE :\n   'PHASES'  : (LISTMOTS) liste des phases en presence\n   'REACTIFS': (LISTMOTS) liste des reactifs pour chaque transformation\n   'PRODUITS': (LISTMOTS) liste des produits pour chaque transformation\n   'TYPE'    : (LISTMOTS) type de chacune des r\u00e9actions | 'KOIS'\n                                                        | 'LEBL'\n  \n9. DARCY \n======== \n \n     -----------------------------\n    | Noms des materiaux en DARCY |\n     -----------------------------\n       | ('ISOTROPE')\n       | 'ORTHOTROPE'\n       | 'ANISOTROPE'\n  \n10. MAGNETODYNAMIQUE \n==================== \n \n     ----------------------------------------\n    | Noms des materiaux en MAGNETODYNAMIQUE |\n     ----------------------------------------\n\n La seule formulation actuellement disponible est\n la formulation en coques minces 'POTENTIEL_VECTEUR' (option\n par defaut).\n\n  syntaxe :\n  ---------\n\n  * 'POTENTIEL_VECTEUR'  | ('ISOTROPE')       (option par defaut)\n                         | 'ORTHOTROPE'\n  \n11. NAVIER_STOKES, EULER \n======================== \n \n     -------------------------------------------------------\n    | Noms des materiaux pour la formulation NAVIER_STOKES |\n     -------------------------------------------------------\n\n La seule donnee de la formulation est necessaire.\n\n     -------------------------------------------------------\n    | Noms des materiaux pour la formulation EULER         |\n     -------------------------------------------------------\n\n La seule donnee de la formulation est necessaire.\n  \n12. MELANGE \n=========== \n \n     -------------------------------------------------------\n    | Noms des materiaux pour la formulation MELANGE       |\n     -------------------------------------------------------\n\n   'CEREM' : modele de transition de phase du 16MND5\n\n   'PARALLELE' : modele de combinaison lineaire de modeles\n    elemntaires munis de noms de phases.\n\n   'ZTMAX' : modele de changement d'etat avec transition. Par\n    defaut la variable d'etat est la temperature.\n  \n13. FISSURE \n=========== \n \n     -------------------------------------------------------\n    | Noms des materiaux pour la formulation FISSURE       |\n     -------------------------------------------------------\n\n     | ('PARF')  | ('MASS')   | ('POISEU_BLASIUS')\n     | ('REEL')  | ('FILM')   | ('POISEU_COLEBROOK')\n                              | ('FROTTEMENT1')\n                              | ('FROTTEMENT2')\n                              | ('FROTTEMENT3')\n                              | ('FROTTEMENT4')\n\n    * choix de la loi de comportement pour la vapeur d'eau\n     | 'PARF' : gaz parfait\n     | 'REEL' : gaz reel\n    * choix du modele de condensation\n     | 'MASS' : condensation en masse (la vapeur condensee est\n     transportee par le fluide)\n     | 'FILM' : condensation en film (la vapeur condensee est\n     transportee par le fluide.\n     condensation en masse (mot-cle MASS): la vapeur condensee forme\n     un film qui adhere a la paroi, dont l'epaisseur ne modifie pas\n     l'ouverture de la fissure.\n    * choix de la loi de frottement\n     | ('POISEU_BLASIUS')   : ecoulement dans un canal rectangulaire lisse\n     | ('POISEU_COLEBROOK') : ecoulement dans un canal rectangulaire rugueux\n     | ('FROTTEMENTi') : loi a coefficients choisis par l'utilisateur\n    *les valeurs par defaut sont : PARF MASS POISEU_BLASIUS\n  \n14. THERMOHYDRIQUE \n================== \n \n     -------------------------------------------------------\n    | Noms des materiaux pour la formulation THERMOHYDRIQUE |\n     -------------------------------------------------------\n\n   'SCHREFLER' : modele de couplage thermohydrique pour milieux poreux\n                 insatures constitues de 4 phases : solide poreux, eau\n                 liquide, eau vapeur et air sec.\n  \n15. LIAISON \n=========== \n \n     --------------------------------------------------\n    | Noms des materiaux pour la formulation LIAISON  |\n     --------------------------------------------------\n\n   La base A est formee a partir d'un ensemble de deformees\n   (par exemple modes propres ou modes statiques) ; la base B est\n   celle des elements finis.\n\n   - Liaisons compatibles avec PASAPAS et DYNE (voir notice DYNE)\n\n  'POINT_PLAN' 'FLUIDE' : s'exprime en  base A et base B\n\n  'POINT_PLAN' 'FROTTEMENT' :   base B\n\n  'POINT_PLAN' : base A et base B\n\n  'POINT_POINT' 'FROTTEMENT' :  base B\n\n  'POINT_POINT' 'DEPLACEMENT_PLASTIQUE' :   base B\n\n  'POINT_POINT' 'ROTATION_PLASTIQUE' :  base B\n\n  'POINT_POINT' : base B\n\n  'POINT_CERCLE' 'MOBILE' : base B\n\n  'POINT_CERCLE' 'FROTTEMENT' :  base B\n\n  'POINT_CERCLE' :   base B\n\n  'CERCLE_PLAN' 'FROTTEMENT' :   base B\n\n  'CERCLE_CERCLE' 'FROTTEMENT' :  base B\n\n  'PROFIL_PROFIL' 'INTERIEUR' :  base B\n\n  'PROFIL_PROFIL' 'EXTERIEUR' :   base B\n\n  'LIGNE_LIGNE' 'FROTTEMENT' :  base B\n\n  'LIGNE_CERCLE' 'FROTTEMENT' :  base B\n\n  'PALIER_FLUIDE' 'RHODE_LI' : base B\n\n  'COUPLAGE' 'DEPLACEMENT' :  base A\n\n  'COUPLAGE' 'VITESSE' : base A\n\n  'POLYNOMIALE' :  base A\n\n  - Liaison compatible uniquement avec PASAPAS\n\n  'NEWMARK' 'MODAL' : base A\n  \n16. DIFFUSION \n============= \n \n     ---------------------------------------------------\n    | Noms des materiaux pour la formulation DIFFUSION |\n     ---------------------------------------------------\n\n   'FICK' : loi de Fick (J = -D.gradC), modele par defaut.\n  \n17. CHARGEMENT \n============== \n \n     ----------------------------------------------------\n    | Noms des materiaux pour la formulation CHARGEMENT |\n     ----------------------------------------------------\n\n   'PRESSION' : d\u00c3\u00a9finit un modele de chargement de pression.\n                GEO1 est un maillage de surface.\n\n    Remarques :\n    -----------\n      La surface GEO1 doit etre orientee (voir INVE et ORIE).\n  \n18. Tableau des elements disponibles par formulation \n==================================================== \n \n    Les tableaux  qui suivent indiquent,  pour chaque  formulation,quels\n sont les elements finis disponibles,  associes a un support geometrique\n donne, le(s) degre(s)  de leurs fonctions d'interpolation,  les options\n de calcul dans  lesquelles ils sont  utilisables  (voir OPTI) ainsi que\n les inconnues nodales correspondantes.\n\n\n  \n18.1 MECANIQUE \n-------------- \n --------------------------------------------------------------------\n |            Elements finis en formulation MECANIQUE               |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    POI1    |  POI1   |   point     |     | PLAN GENE | UX UY     |\n |            |         |             |     |cf Remarque| UZ RX RY  |\n |            |-----------------------------------------------------|\n |            |  CERC   |   cerce     |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  POJS   | element de  |     | PLAN      |           |\n |            |         |  section    |     | TRID      |           |\n |            |         | de poutre   |     |           |           |\n --------------------------------------------------------------------\n |    SEG2    |  BARR   |   barre     |  1  | PLAN CONT | UX UY     |\n |            |         |             |     | PLAN DEFO | UX UY     |\n |            |         |   armature  |     | TRID      | UX UY UZ  |\n |            |------------------------------------------------------\n |            |  BAEX   |   barre     |  1  | PLAN CONT | UX UY     |\n |            |         | excentree   |     | PLAN DEFO | UX UY     |\n |            |         |             |     | TRID      | UX UY UZ  |\n |            |------------------------------------------------------\n |            | (M1D2)  | massif (1D) |  1  | UNID PLAN | UX        |\n |            |         |  2 noeuds   |     | UNID AXIS | UR        |\n |            |         |             |     | UNID SPHE | UR        |\n |            |------------------------------------------------------\n |            |  COQ2   | coque mince |  1  | PLAN CONT | UX UY RZ  |\n |            |         |             |     | PLAN DEFO | UX UY RZ  |\n |            |         |             |  et | PLAN GENE | UX UY RZ  |\n |            |         |             |     |cf Remarque| UZ RX RY  |\n |            |         |             |  3  | AXIS      | UR UZ RT  |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |         |             |     |           | RT        |\n |            |------------------------------------------------------\n |            |  POUT   |   poutre    |  1  | TRID      | UX UY UZ  |\n |            |         |             |  et |           | RX RY RZ  |\n |            |         |             |  3  | PLAN CONT | UX UY RZ  |\n |            |         |             |     | PLAN DEFO | UX UY RZ  |\n |            |------------------------------------------------------\n |            |  TIMO   |   poutre    |  1  | TRID      | UX UY UZ  |\n |            |         |     de      |     |           | RX RY RZ  |\n |            |         | Timoschenko |     | PLAN CONT | UX UY RZ  |\n |            |         |             |     | PLAN DEFO | UX UY RZ  |\n |            |------------------------------------------------------\n |            |  TUYA   | tuyau droit |  1  | TRID      | UX UY UZ  |\n |            |         |     et      |  et |           | RX RY RZ  |\n |            |         |   coude     |  3  |           |           |\n |            |------------------------------------------------------\n |            |  TUFI   |   tuyau     |     | TRID      | UX UY UZ  |\n |            |         |  fissure    |     |           | RX RY RZ  |\n |            |------------------------------------------------------\n |            |  JOI1   | joint       |  0  | TRID      | UX UY UZ  |\n |            |         | unidimen-   |     |           | RX RY RZ  |\n |            |         | sionnel a   |     | PLAN CONT | UX UY RZ  |\n |            |         | deux noeuds |     | PLAN DEFO | UX UY RZ  |\n --------------------------------------------------------------------\n |    SEG3    |  BAR3   |  barre      |  2  |  TRID     | UX UY UZ  |\n |            |------------------------------------------------------\n |            | (M1D3)  | massif (1D) |  2  | UNID PLAN | UX        |\n |            |         |  3 noeuds   |     | UNID AXIS | UR        |\n |            |         |             |     | UNID SPHE | UR        |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  triangle   |  1  | PLAN CONT | UX UY     |\n |            |         |  a 3 noeuds |     | PLAN DEFO | UX UY     |\n |            |         |             |     | PLAN GENE | UX UY     |\n |            |         |   massif    |     |cf Remarque| UZ RX RY  |\n |            |         |             |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  ICT3   |  triangle   |  1  | PLAN CONT | UX UY     |\n |            |         |  a 3 noeuds |     | PLAN DEFO | UX UY     |\n |            |         |incompressib.|     | AXIS      | UR UZ     |\n |            |------------------------------------------------------\n |            |  COQ3   | coque mince |  1  | TRID      | UX UY UZ  |\n |            |         |  polynome   |  et |           | RX RY RZ  |\n |            |         | incomplet   |  3  |           |           |\n |            |         | en flexion  |     |           |           |\n |            |------------------------------------------------------\n |            |  DKT    | coque mince |  1  | TRID      | UX UY UZ  |\n |            |         | hypothese de|  et |           | RX RY RZ  |\n |            |         |  Kirchhoff  |  3  |           |           |\n |            |         |  discrete   |     |           |           |\n |            |------------------------------------------------------\n |            |  DST    | coque avec  |  1  | TRID      | UX UY UZ  |\n |            |         | cisaillement|  et |           | RX RY RZ  |\n |            |         | transverse  |  3  |           |           |\n |            |------------------------------------------------------\n |            |  TRIH   | element     |     | PLAN CONT | P PI UX UY|\n |            |         | homogeneise |     | PLAN DEFO | P PI UX UY|\n |            |         |             |     | AXIS      | P PI UR RT|\n |            |         |             |     | FOUR      | P PI UR UT|\n |            |         |             |     |           | RR RT     |\n |            |------------------------------------------------------\n |            |  TRIS   | element de  |  1  | PLAN      |           |\n |            |         |  section    |     | TRID      |           |\n |            |         | de poutre   |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  | quadrangle  |  1  | PLAN CONT | UX UY     |\n |            |         | a 4 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         |             |     | PLAN GENE | UX UY     |\n |            |         |   massif    |     |cf Remarque| UZ RX RY  |\n |            |         |             |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  Q4RI   | quadrangle  |   1 | PLAN CONT | UX UY     |\n |            |         | a 4 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         | et 1x1      |     | PLAN GENE | UX UY     |\n |            |         | point de    |     |cf Remarque| UZ RX RY  |\n |            |         | Gauss       |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  ICQ4   | quadrangle  |  1  | PLAN CONT | UX UY     |\n |            |         | a 4 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         |incompressib.|     | AXIS      | UR UZ     |\n |            |------------------------------------------------------\n |            |  COQ4   | coque mince |  1  | TRID      | UX UY UZ  |\n |            |         |     avec    |     |           | RX RY RZ  |\n |            |         | cisaillement|     |           |           |\n |            |         | transverse  |     |           |           |\n |            |------------------------------------------------------\n |            |  QUAS   | element de  |  1  | PLAN      |           |\n |            |         |  section    |     | TRID      |           |\n |            |         | de poutre   |     |           |           |\n |            |------------------------------------------------------\n |            |  QUAH   | element     |     | AXIS      | P PI UR RT|\n |            |         | homogeneise |     | FOUR      | P PI UR UT|\n |            |         |             |     |           | RR RT     |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  triangle   |  2  | PLAN CONT | UX UY     |\n |            |         |  a 6 noeuds |     | PLAN DEFO | UX UY     |\n |            |         |             |     | PLAN GENE | UX UY     |\n |            |         |   massif    |     |cf Remarque| UZ RX RY  |\n |            |         |             |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  ICT6   |  triangle   |  2  | PLAN CONT | UX UY     |\n |            |         |  a 6 noeuds |     | PLAN DEFO | UX UY     |\n |            |         |incompressib.|     | AXIS      | UR UZ     |\n |            |------------------------------------------------------\n |            |  COQ6   |    coque    |  2  | TRID      | UX UY UZ  |\n |            |         |  epaisse    |     |           | RX RY RZ  |\n |            |------------------------------------------------------\n |            |  TRH6   | element     |  2  | PLAN CONT | P PI UX UY|\n |            |         | homogeneise |     | PLAN DEFO | P PI UX UY|\n  --------------------------------------------------------------------\n |    QUA8    | (QUA8)  | quadrangle  |  2  | PLAN CONT | UX UY     |\n |            |         | a 8 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         |             |     | PLAN GENE | UX UY     |\n |            |         |   massif    |     |cf Remarque| UZ RX RY  |\n |            |         |             |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  Q8RI   | quadrangle  |   2 | PLAN CONT | UX UY     |\n |            |         | a 8 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         | et 2x2      |     | PLAN GENE | UX UY     |\n |            |         | points de   |     |cf Remarque| UZ RX RY  |\n |            |         | Gauss       |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n |            |------------------------------------------------------\n |            |  ICQ8   | quadrangle  |  2  | PLAN CONT | UX UY     |\n |            |         | a 8 noeuds  |     | PLAN DEFO | UX UY     |\n |            |         |incompressib.|     | AXIS      | UR UZ     |\n |            |------------------------------------------------------\n |            |  COQ8   |    coque    |  2  | TRID      | UX UY UZ  |\n |            |         |  epaisse    |     |           | RX RY RZ  |\n --------------------------------------------------------------------\n |    POLY    |  POLY   | Polygone    |  1  | PLAN CONT | UX UY     |\n |            |         |meme nombre  |     | PLAN DEFO | UX UY     |\n |            |         |de noeuds    |     | PLAN GENE | UX UY     |\n |            |         |que de cotes |     |cf Remarque| UZ RX RY  |\n |            |         |   massif    |     | AXIS      | UR UZ     |\n |            |         |             |     | FOUR      | UR UZ UT  |\n --------------------------------------------------------------------\n |    CUB8    | (CUB8)  |    cube     |  1  | TRID      | UX UY UZ  |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  CUBH   | element     |     | TRID      | P PI UX RY|\n |            |         | homogeneise |     |           |      UY RX|\n |            |------------------------------------------------------\n |            |  SHB8   | element de  | 1   | TRID      | UX UY UZ  |\n |            |         | coque       |     |           |           |\n |            |         |             |     |           |           |\n |            |------------------------------------------------------\n |            |  ICC8   |incompressib.|  1  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    TET4    | (TET4)  |   tetraedre |  1  | TRID      | UX UY UZ  |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  ICT4   |incompressib.|  1  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    PRI6    | (PRI6)  |   prisme    |  1  | TRID      | UX UY UZ  |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  ICP6   |incompressib.|  1  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    PYR5    | (PYR5)  |  pyramide   |  1  | TRID      | UX UY UZ  |\n |            |         |  a 5 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  ICY5   |incompressib.|  1  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    CU20    | (CU20)  |    cube     |  2  | TRID      | UX UY UZ  |\n |            |         | a 20 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  IC20   |incompressib.|  2  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    TE10    | (TE10)  |   tetraedre |  2  | TRID      | UX UY UZ  |\n |            |         | a 10 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  IC10   |incompressib.|  2  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    PR15    | (PR15)  |   prisme    |  2  | TRID      | UX UY UZ  |\n |            |         | a 15 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  IC15   |incompressib.|  2  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    PY13    | (PY13)  |  pyramide   |  2  | TRID      | UX UY UZ  |\n |            |         | a 13 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  IC13   |incompressib.|  2  | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    RAC2    |  LISP   |  element    |     | TRID      | UX UY UZ  |\n |            |         | linespring  |     |           | RX RY RZ  |\n |            |------------------------------------------------------\n |            |  LISM   |  element    |     | TRID      | UX UY UZ  |\n |            |         | linespring  |     |           | RX RY RZ  |\n |            |         |  modifie    |     |           |           |\n |            |------------------------------------------------------\n |            |  JOI2   |  element    |  1  | PLAN DEFO | UX UY     |\n |            |         |  joint a    |     | PLAN CONT | UX UY     |\n |            |         |  4 noeuds   |     | AXIS      | UR UZ     |\n |            |------------------------------------------------------\n |            |  COA2   |  element    |  1  | PLAN DEFO | UX UY     |\n |            |         |  coaxial a  |     | PLAN CONT | UX UY     |\n |            |  COS2   |  4 noeuds   |     | TRID      | UX UY UZ  |\n --------------------------------------------------------------------\n |    RAC3    |  JOI3   |  element    |  2  | PLAN DEFO | UX UY     |\n |            |         |  joint a    |     | PLAN CONT | UX UY     |\n |            |         |  6 noeuds   |     | AXIS      | UR UZ     |\n --------------------------------------------------------------------\n |    LIA3    |  JOT3   |  element    |  1  | TRID      | UX UY UZ  |\n |            |         |  joint a    |     |           |           |\n |            |         |  6 noeuds   |     |           |           |\n --------------------------------------------------------------------\n |    LIA4    |  JOI4   |  element    |  1  | TRID      | UX UY UZ  |\n |            |         |  joint a    |     |           |           |\n |            |         |  8 noeuds   |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.2 FLUIDE \n----------- \n --------------------------------------------------------------------\n |            Elements finis en formulation FLUIDE                  |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n |------------------------------------------------------------------|\n |    SEG2    |  LSE2   |  element    |  1  | TRID      | P PI      |\n |            |         |   tuyau     |     |           |           |\n |            |         | acoustique  |     |           |           |\n |            |         |   pure      |     |           |           |\n |            |------------------------------------------------------\n |            |  LSU2   | element de  |  1  | PLAN CONT | P  PI UZ  |\n |            |         |  surface    |     | PLAN DEFO | P  PI UZ  |\n |            |         |   libre     |     | AXIS      | P  PI UZ  |\n |            |         |             |     | FOUR      | P  PI UZ  |\n --------------------------------------------------------------------\n |    TRI3    |  LTR3   |  triangle   |  1  | PLAN CONT | P  PI     |\n |            |         | a 3 noeuds  |     | PLAN DEFO | P  PI     |\n |            |         |   massif    |     | AXIS      | P  PI     |\n |            |         |             |     | FOUR      | P  PI     |\n |            |------------------------------------------------------\n |            |  LSU3   | element de  |  1  | TRID      | P  PI UZ  |\n |            |         |  surface    |     |           |           |\n |            |         |   libre     |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    |  LQU4   | quadrangle  |  1  | PLAN CONT | P  PI     |\n |            |         | a 4 noeuds  |     | PLAN DEFO | P  PI     |\n |            |         |   massif    |     | AXIS      | P  PI     |\n |            |         |             |     | FOUR      | P  PI     |\n |            |------------------------------------------------------\n |            |  LSU4   | element de  |  1  | TRID      | P  PI UZ  |\n |            |         |  surface    |     |           |           |\n |            |         |   libre     |     |           |           |\n --------------------------------------------------------------------\n |    CUB8    |  LCU8   |    cube     |  1  | TRID      | P  PI     |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TET4    |  LTE4   |   tetraedre |  1  | TRID      | P  PI     |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PRI6    |  LPR6   |   prisme    |  1  | TRID      | P  PI     |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PYR5    |  LPY5   |  pyramide   |  1  | TRID      | P  PI     |\n |            |         |  a 5 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.3 FLUIDE MECANIQUE \n--------------------- \n --------------------------------------------------------------------\n |        Elements finis en formulation FLUIDE  MECANIQUE           |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    |  LITU   |  raccord    |  1  | TRID      | P PI UX UY|\n |            |         |  liquide    |     |           | UZ        |\n |            |         |   tuyau     |     |           |           |\n --------------------------------------------------------------------\n |    RAC2    | (RAC2)  |  raccord    |  1  | PLAN CONT | P PI UX UY|\n |            |         |  liquide    |     | PLAN DEFO | P PI UX UY|\n |            |         |  massif     |     | AXIS      | P PI UR UZ|\n |            |         |             |     | FOUR      | P PI UR UZ|\n |            |------------------------------------------------------\n |            |  RACO   |  raccord    |  3  | PLAN CONT | P PI UX UY|\n |            |         |  liquide    |     |           | RZ        |\n |            |         |   coque     |     | PLAN DEFO | P PI UX UY|\n |            |         |             |     |           | RZ        |\n |            |         |             |     | AXIS      | P PI UR UZ|\n |            |         |             |     |           | RT        |\n |            |         |             |     | FOUR      | P PI UR UZ|\n |            |         |             |     |           | RT        |\n --------------------------------------------------------------------\n |    LIA3    | (LIA3)  |  raccord    |  1  | TRID      | P  PI     |\n |            |         |  liquide    |     |           | UX UY UZ  |\n |            |         |  massif     |     |           |           |\n |            |------------------------------------------------------\n |            |  LICO   |  raccord    |  3  | TRID      | P  PI     |\n |            |         |  liquide    |     |           | UX UY UZ  |\n |            |         |   coque     |     |           | RX RY RZ  |\n --------------------------------------------------------------------\n |    LIA4    | (LIA4)  |  raccord    |  1  | TRID      | P  PI     |\n |            |         |  liquide    |     |           | UX UY UZ  |\n |            |         |  massif     |     |           |           |\n |            |------------------------------------------------------\n |            |  LIC4   |  raccord    |  3  | TRID      | P  PI     |\n |            |         |  liquide    |     |           | UX UY UZ  |\n |            |         |   coque     |     |           | RX RY RZ  |\n --------------------------------------------------------------------\n\n\n  \n18.4 POREUX \n----------- \n --------------------------------------------------------------------\n |            Elements finis en formulation POREUX                  |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    TRI6    | (TRIP)  |  triangle   |  2  | PLAN CONT | UX UY P   |\n |            |         |  a 6 noeuds |  et | PLAN DEFO | UX UY P   |\n |            |         |   massif    |  1  | AXIS      | UR UZ P   |\n --------------------------------------------------------------------\n |    QUA8    | (QUAP)  | quadrangle  |  2  | PLAN CONT | UX UY P   |\n |            |         | a 8 noeuds  |  et | PLAN DEFO | UX UY P   |\n |            |         |   massif    |  1  | AXIS      | UR UZ P   |\n --------------------------------------------------------------------\n |    CU20    | (CUBP)  |    cube     |  2  | TRID      | UX UY UZ  |\n |            |         | a 20 noeuds |  et |           | P         |\n |            |         |   massif    |  1  |           |           |\n --------------------------------------------------------------------\n |    TE10    | (TETP)  |   tetraedre |  2  | TRID      | UX UY UZ  |\n |            |         | a 10 noeuds |  et |           | P         |\n |            |         |   massif    |  1  |           |           |\n --------------------------------------------------------------------\n |    PR15    | (PRIP)  |   prisme    |  2  | TRID      | UX UY UZ  |\n |            |         | a 15 noeuds |  et |           | P         |\n |            |         |   massif    |  1  |           |           |\n --------------------------------------------------------------------\n |    RAP3    | (JOP3)  |   element   |  2  | PLAN CONT | UX UY P   |\n |            |         |   joint a   |  et | PLAN DEFO | UX UY P   |\n |            |         |   8 noeuds  |  1  | AXIS      | UR UZ P   |\n --------------------------------------------------------------------\n |    LIP6    | (JOP6)  |   element   |  2  | TRID      | UX UY UZ  |\n |            |         |   joint a   |  et |           | P         |\n |            |         |  15 noeuds  |  1  |           |           |\n --------------------------------------------------------------------\n |    LIP8    | (JOP8)  |   element   |  2  | TRID      | UX UY UZ  |\n |            |         |   joint a   |  et |           | P         |\n |            |         |  20 noeuds  |  1  |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.5 THERMIQUE CONDUCTION, PHASE ou SOURCE \n------------------------------------------ \n --------------------------------------------------------------------\n |       Elements finis en THERMIQUE, pour les formulations :       |\n |                   CONDUCTION, PHASE ou SOURCE                    |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    |  JOI1   |   joint     |  1  | PLAN      | T         |\n |            |         |             |     | TRID      | T         |\n |            |------------------------------------------------------\n |            |  BARR   |   barre     |  1  | PLAN      | T         |\n |            |         |             |     | TRID      | T         |\n |            |------------------------------------------------------\n |            | (T1D2)  | massif (1D) |  1  | UNID PLAN | T         |\n |            |         |  2 noeuds   |     | UNID AXIS | T         |\n |            |         |             |     | UNID SPHE | T         |\n |            |------------------------------------------------------\n |            |  COQ2   | coque mince |  1  | PLAN      | T TSUP    |\n |            |         |  variation  |     |           |   TINF    |\n |            |         | parabolique |     | AXIS      | T TSUP    |\n |            |         |    dans     |     |           |   TINF    |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    SEG3    | (T1D3)  | massif (1D) |  1  | UNID PLAN | T         |\n |            |         |  3 noeuds   |     | UNID AXIS | T         |\n |            |         |             |     | UNID SPHE | T         |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  triangle   |  1  | PLAN      | T         |\n |            |         |  a 3 noeuds |     | AXIS      | T         |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ3   | coque mince |  1  | TRID      | T TSUP    |\n |            |         |  variation  |     |           |   TINF    |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  | quadrangle  |  1  | PLAN      | T         |\n |            |         | a 4 noeuds  |     | AXIS      | T         |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ4   | coque mince |  1  | TRID      | T TSUP    |\n |            |         |  variation  |     |           |   TINF    |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  triangle   |  2  | PLAN      | T         |\n |            |         |  a 6 noeuds |     | AXIS      | T         |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ6   |    coque    |  2  | TRID      | T TSUP    |\n |            |         |  epaisse    |     |           |   TINF    |\n |            |         |  variation  |     |           |           |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    QUA8    | (QUA8)  | quadrangle  |  2  | PLAN      | T         |\n |            |         | a 8 noeuds  |     | AXIS      | T         |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ8   |    coque    |  2  | TRID      | T TSUP    |\n |            |         |  epaisse    |     |           |   TINF    |\n |            |         |  variation  |     |           |           |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    CUB8    | (CUB8)  |    cube     |  1  | TRID      | T         |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TET4    | (TET4)  |   tetraedre |  1  | TRID      | T         |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PRI6    | (PRI6)  |   prisme    |  1  | TRID      | T         |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PYR5    | (PYR5)  |  pyramide   |  1  | TRID      | T         |\n |            |         |  a 5 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    CU20    | (CU20)  |    cube     |  2  | TRID      | T         |\n |            |         | a 20 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TE10    | (TE10)  |   tetraedre |  2  | TRID      | T         |\n |            |         | a 10 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PR15    | (PR15)  |   prisme    |  2  | TRID      | T         |\n |            |         | a 15 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PY13    | (PY13)  |  pyramide   |  2  | TRID      | T         |\n |            |         | a 13 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.6 THERMIQUE CONVECTION \n------------------------- \n --------------------------------------------------------------------\n |            Elements finis en formulation THERMIQUE CONVECTION    |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    POI1    | (POI1)  | element 0D  |  1  | UNID PLAN | T         |\n |            |         | d'echange   |     | UNID AXIS | T         |\n |            |         | pour massif |     | UNID SPHE | T         |\n --------------------------------------------------------------------\n |    SEG2    | (SEG2)  |  element    |  1  | PLAN      | T         |\n |            |         | d'echange   |     | AXIS      | T         |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ2   |  element    |  1  | AXIS      |   TSUP    |\n |            |         | d'echange   |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n |            |------------------------------------------------------\n |            | (SEG2)  | element 1D  |  1  | UNID PLAN | T         |\n |            |         | d'echange   |     | UNID AXIS | T         |\n |            |         | face a face |     | UNID SPHE | T         |\n |            |         | a 1x1 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    SEG3    | (SEG3)  |  element    |  2  | PLAN      | T         |\n |            |         | d'echange   |     | AXIS      | T         |\n |            |         | pour massif |     |           |           |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ3   |  element    |  1  | TRID      |   TSUP    |\n |            |         | d'echange   |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ4   |  element    |  1  | TRID      |   TSUP    |\n |            |         | d'echange   |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ6   |  element    |  2  | TRID      |   TSUP    |\n |            |         | d'echange   |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    QUA8    | (QUA8)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ8   |  element    |  2  | TRID      |   TSUP    |\n |            |         | d'echange   |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    RAC2    | (RAC2)  |  element    |  1  | PLAN      | T         |\n |            |         | d'echange   |     | AXIS      |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x2 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    RAC3    | (RAC3)  |  element    |  2  | PLAN      | T         |\n |            |         | d'echange   |     | AXIS      |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x3 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA3    | (LIA3)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x3 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA4    | (LIA4)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x4 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA6    | (LIA6)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x6 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA8    | (LIA8)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x8 noeuds|     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.7 THERMIQUE RAYONNEMENT \n-------------------------- \n --------------------------------------------------------------------\n |            Elements finis en formulation THERMIQUE  RAYONNEMENT  |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    | (SEG2)  |  element de |  1  | PLAN      | T         |\n |            |         | rayonnement |     | AXIS      | T         |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ2   |  element de |  1  | AXIS      |   TSUP    |\n |            |         | rayonnement |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    SEG3    | (SEG3)  |  element de |  2  | PLAN      | T         |\n |            |         | rayonnement |     | AXIS      | T         |\n |            |         | pour massif |     |           |           |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  element de |  1  | TRID      | T         |\n |            |         | rayonnement |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ3   |  element de |  1  | TRID      |   TSUP    |\n |            |         | rayonnement |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  |  element de |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | rayonnement |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ4   |  element de |  1  | TRID      |   TSUP    |\n |            |         | rayonnement |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  element de |  2  | TRID      | T         |\n |            |         | rayonnement |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ6   |  element de |  2  | TRID      |   TSUP    |\n |            |         | rayonnement |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    QUA8    | (QUA8)  |  element de |  2  | TRID      | T         |\n |            |         | rayonnement |     |           |           |\n |            |         | pour massif |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ8   |  element de |  2  | TRID      |   TSUP    |\n |            |         | rayonnement |     |           |ou TINF    |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n |    RAC2    | (RAC2)  |  element de |  1  | PLAN      | T         |\n |            |         | rayonnement |     | AXIS      |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x2 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    RAC3    | (RAC3)  |  element de |  2  | PLAN      | T         |\n |            |         | rayonnement |     | AXIS      |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x3 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA3    | (LIA3)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x3 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA4    | (LIA4)  |  element    |  1  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x4 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA6    | (LIA6)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x6 noeuds|     |           |           |\n --------------------------------------------------------------------\n |    LIA8    | (LIA8)  |  element    |  2  | TRID      | T         |\n |            |         | d'echange   |     |           |           |\n |            |         | face a face |     |           |           |\n |            |         | a 2x8 noeuds|     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.8 THERMIQUE ADVECTION \n------------------------ \n --------------------------------------------------------------------\n |            Elements finis en formulation THERMIQUE  ADVECTION    |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    |  TUY2   | element de  |  1  | PLAN      | T         |\n |            |         | tuyauterie  |     | TRID      |           |\n |------------|------------------------------------------------------\n |    SEG3    |  TUY3   | element de  |  2  | PLAN      | T         |\n |            |         | tuyauterie  |     | TRID      |           |\n |------------|------------------------------------------------------\n |            |         | triangle    |     |           |           |\n |    TRI3    | (TRI3)  | a 3 noeuds  |  1  | PLAN      | T         |\n |            |         | massif      |     |           |           |\n --------------------------------------------------------------------\n |            |         | quadrangle  |     |           |           |\n |    QUA4    | (QUA4)  | a 4 noeuds  |  1  | PLAN      | T         |\n |            |         | massif      |     |           |           |\n --------------------------------------------------------------------\n |            |         | triangle    |     |           |           |\n |    TRI6    | (TRI6)  | a 6 noeuds  |  2  | PLAN      | T         |\n |            |         | massif      |     |           |           |\n --------------------------------------------------------------------\n |            |         | quadrangle  |     |           |           |\n |    QUA8    | (QUA8)  | a 8 noeuds  |  2  | PLAN      | T         |\n |            |         | massif      |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.9 DIFFUSION \n-------------- \n --------------------------------------------------------------------\n |           Elements finis en formulation DIFFUSION                |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    |  BARR   |   barre     |  1  | PLAN      | (CO)      |\n |            |         |             |     | TRID      | (CO)      |\n |            |------------------------------------------------------\n |            | (M1D2)  | massif (1D) |  1  | UNID PLAN | (CO)      |\n |            |         |  2 noeuds   |     | UNID AXIS | (CO)      |\n |            |         |             |     | UNID SPHE | (CO)      |\n |            |------------------------------------------------------\n |            |  BARR   |   barre     |  1  | PLAN      | (CO)      |\n |            |         |             |     | TRID      | (CO)      |\n --------------------------------------------------------------------\n |    SEG3    | (M1D3)  | massif (1D) |  1  | UNID PLAN | (CO)      |\n |            |         |  3 noeuds   |     | UNID AXIS | (CO)      |\n |            |         |             |     | UNID SPHE | (CO)      |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  triangle   |  1  | PLAN      | (CO)      |\n |            |         |  a 3 noeuds |     | AXIS      | (CO)      |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ3   | coque mince |  1  | TRID      | (CO)(COSU)|\n |            |         |  variation  |     |           |  (COIN)   |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  | quadrangle  |  1  | PLAN      | (CO)      |\n |            |         | a 4 noeuds  |     | AXIS      | (CO)      |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ4   | coque mince |  1  | TRID      | (CO)(COSU)|\n |            |         |  variation  |     |           |  (COIN)   |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  triangle   |  2  | PLAN      | (CO)      |\n |            |         |  a 6 noeuds |     | AXIS      | (CO)      |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ6   |    coque    |  2  | TRID      | (CO)(COSU)|\n |            |         |  epaisse    |     |           |  (COIN)   |\n |            |         |  variation  |     |           |           |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    QUA8    | (QUA8)  | quadrangle  |  2  | PLAN      | (CO)      |\n |            |         | a 8 noeuds  |     | AXIS      | (CO)      |\n |            |         |   massif    |     |           |           |\n |            |------------------------------------------------------\n |            |  COQ8   |    coque    |  2  | TRID      | (CO)(COSU)|\n |            |         |  epaisse    |     |           |  (COIN)   |\n |            |         |  variation  |     |           |           |\n |            |         | parabolique |     |           |           |\n |            |         |    dans     |     |           |           |\n |            |         | l'epaisseur |     |           |           |\n --------------------------------------------------------------------\n |    CUB8    | (CUB8)  |    cube     |  1  | TRID      | (CO)      |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TET4    | (TET4)  |   tetraedre |  1  | TRID      | (CO)      |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PRI6    | (PRI6)  |   prisme    |  1  | TRID      | (CO)      |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PYR5    | (PYR5)  |  pyramide   |  1  | TRID      | (CO)      |\n |            |         |  a 5 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    CU20    | (CU20)  |    cube     |  2  | TRID      | (CO)      |\n |            |         | a 20 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TE10    | (TE10)  |   tetraedre |  2  | TRID      | (CO)      |\n |            |         | a 10 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PR15    | (PR15)  |   prisme    |  2  | TRID      | (CO)      |\n |            |         | a 15 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PY13    | (PY13)  |  pyramide   |  2  | TRID      | (CO)      |\n |            |         | a 13 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.10 DARCY \n----------- \n --------------------------------------------------------------------\n |            Elements finis en formulation DARCY                   |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    TRI7    | (HYT3)  |  triangle   |     | PLAN      | TH        |\n |            |         |  a 3 noeuds |     |           |           |\n |            |         |  hybride    |     |           |           |\n --------------------------------------------------------------------\n |    QUA9    | (HYQ4)  | quadrangle  |     | PLAN      | TH        |\n |            |         | a 4 noeuds  |     |           |           |\n |            |         | hybride     |     |           |           |\n --------------------------------------------------------------------\n |    CU27    | (HYC8)  |    cube     |     | TRID      | TH        |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |  hybride    |     |           |           |\n --------------------------------------------------------------------\n |    TE15    | (HYT4)  |   tetraedre |     | TRID      | TH        |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   hybride   |     |           |           |\n --------------------------------------------------------------------\n |    PR21    | (HYP6)  |   prisme    |     | TRID      | TH        |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   hybride   |     |           |           |\n --------------------------------------------------------------------\n\n\n\n\n  \n18.11 FROTTEMENT \n---------------- \n --------------------------------------------------------------------\n |            Elements finis en formulation FROTTEMENT              |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    MULT    | (FRO3)  |  element a  |  1  | PLAN      | UX UY LX  |\n |            |         |  3 + 2      |     | AXIS      | UR UZ LX  |\n |            |         |  noeuds     |     |           |           |\n |    MULT    | (FRO4)  |  2+ n noeuds|  1  | 3D        | UX UY UZ  |\n |            |         |             |     |           | LX        |\n |            |         |             |     |           |           |\n |    MULT    |         |  2 noeuds   |  1  | 2D-3D     | Ui LX     |\n |            |         |             |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.12 MAGNETODYNAMIQUE \n---------------------- \n --------------------------------------------------------------------\n |            Elements finis formulation en MAGNETODYNAMIQUE        |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    TRI3    |  (ROT3) |  element de |  1  | TRID      | FC        |\n |            |         | magneto-    |     |           |           |\n |            |         | dynamique   |     |           |           |\n |            |         | pour coque  |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.13 NAVIER_STOKES \n------------------- \n --------------------------------------------------------------------\n |            Elements finis formulation NAVIER_STOKES              |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n | QUAF LINE et MACR sont les noms    |     |           |           |\n | generiques pour les familles       |     |           |           |\n | d'elements listes dans les colonnes|     |           |           |\n | corespondantes                     |     |           |           |\n --------------------------------------------------------------------\n |    QUAF    | LINE    |             | 1 U |           |           |\n |            |         |             | 0 P |           |           |\n | TRI7 QUA9  |TRF3 QUF4| TRI3 QUA4   |     | PLAN AXI  | UX UY     |\n | CU27 PR21  |CUF8 PRF6| CUB8 PRI6   |     | TRID      | UX UY UZ  |\n | TE15 PR19  |TEF4 PYF5| TET4 PYR5   |     | TRID      | UX UY UZ  |\n |            |         | Pression nc |     |           |           |\n |            |         | P0          |     |           |           |\n --------------------------------------------------------------------\n |    QUAF    | MACR    |             | 1 U |           |           |\n |            |         |             | 0 P |           |           |\n | TRI7 QUA9  |MTR6 MQU9|4xTRI3 4xQUA4|     | PLAN AXI  | UX UY     |\n | CU27 PR21  |MC27 MP18|8xCUB8 8xPRI6|     | TRID      | UX UY UZ  |\n | TE15 PR19  |MT10 MP14|8xTET4       |     | TRID      | UX UY UZ  |\n |            |         | Pression nc |     |           |           |\n |            |         | iso P1      |     |           |           |\n --------------------------------------------------------------------\n |    QUAF    | QUAF    |             | 2 U |           |           |\n |            |         |             | 1 P |           |           |\n | TRI7 QUA9  |TRF7 QUF9| TRI7 QUA9   |     | PLAN AXI  | UX UY     |\n | CU27 PR21  |CF27 PF21| CU27 PR21   |     | TRID      | UX UY UZ  |\n | TE15 PR19  |TF15 PF19| TE15 PR19   |     | TRID      | UX UY UZ  |\n |            |         | Pression nc |     |           |           |\n |            |         | P1          |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.14 EULER (Volumes Finis) \n--------------------------- \n --------------------------------------------------------------------\n |            Volumes finis formulation EULER                       |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n | TRI3 QUA4  |         |             |     | PLAN      |           |\n | CUB8 PRI6  |         |             |     | TRID      |           |\n | TET4 PYR5  |         |             |     | TRID      |           |\n --------------------------------------------------------------------\n\n\n  \n18.15 FISSURE \n------------- \n --------------------------------------------------------------------\n |            Elements finis en formulation FISSURE                 |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    SEG2    |         |             |     | MONOD     |           |\n |            |         |             |     | PLAN      |           |\n |            |         |             |     | TRID      |           |\n  --------------------------------------------------------------------\n\n\n  \n18.16 THERMOHYDRIQUE \n-------------------- \n --------------------------------------------------------------------\n |           Elements finis en formulation THERMOHYDRIQUE           |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |    TRI3    | (TRI3)  |  triangle   |  1  | PLAN      | PG,PC,T   |\n |            |         |  a 3 noeuds |     | AXIS      | PG,PC,T   |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    QUA4    | (QUA4)  | quadrangle  |  1  | PLAN      | PG,PC,T   |\n |            |         | a 4 noeuds  |     | AXIS      | PG,PC,T   |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TRI6    | (TRI6)  |  triangle   |  2  | PLAN      | PG,PC,T   |\n |            |         |  a 6 noeuds |     | AXIS      | PG,PC,T   |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    QUA8    | (QUA8)  | quadrangle  |  2  | PLAN      | PG,PC,T   |\n |            |         | a 8 noeuds  |     | AXIS      | PG,PC,T   |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    CUB8    | (CUB8)  |    cube     |  1  | TRID      | PG,PC,T   |\n |            |         |  a 8 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TET4    | (TET4)  |   tetraedre |  1  | TRID      | PG,PC,T   |\n |            |         |  a 4 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PRI6    | (PRI6)  |   prisme    |  1  | TRID      | PG,PC,T   |\n |            |         |  a 6 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PYR5    | (PYR5)  |  pyramide   |  1  | TRID      | PG,PC,T   |\n |            |         |  a 5 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    CU20    | (CU20)  |    cube     |  2  | TRID      | PG,PC,T   |\n |            |         | a 20 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    TE10    | (TE10)  |   tetraedre |  2  | TRID      | PG,PC,T   |\n |            |         | a 10 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PR15    | (PR15)  |   prisme    |  2  | TRID      | PG,PC,T   |\n |            |         | a 15 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n |    PY13    | (PY13)  |  pyramide   |  2  | TRID      | PG,PC,T   |\n |            |         | a 13 noeuds |     |           |           |\n |            |         |   massif    |     |           |           |\n --------------------------------------------------------------------\n\n\n  \n18.17 LIAISON \n------------- \n --------------------------------------------------------------------\n |           Elements finis en formulation LIAISON                  |\n --------------------------------------------------------------------\n | Support    | Element | Description |Degre|  Option   | Inconnues |\n | geometrique|  fini   |             |     | de calcul |  nodales  |\n --------------------------------------------------------------------\n |   POI1     | (POI1)  |  point      |  1  | PLAN      | ALFA  BETA|\n |            |         |             |     | TRID      | en base A |\n --------------------------------------------------------------------\n\n\n Remarque : Correspondance entre les noms des inconnues primales (P)\n ---------  et duales (D) :\n\n  P : UX UY UZ UT RX RY RZ RT RR P  PI  T TSUP TINF LX  TH   FC PG PC\n  D : FX FY FZ FT MX MY MZ MT MR FP FPI Q QSUP QINF FLX FLUX ED QG QC\n\n  P : ALFA BETA CO\n  D : FALF FBET QCO\n\n    Les inconnues nodales liees aux deformations planes\n generalisees (UZ,RX,RY) et leurs duales (FZ,MX,MY) sont supportees\n par le point defini lors de l'option MODE PLAN GENE.\n    Dans les modes de calcul 1D, les inconnues nodales liees au(x)\n deformation(s) plane(s) generalisee(s) (UZ,UY) et leurs duales (FZ,FY)\n sont supportees par le point defini lors de l'option MODE UNID PLAN\n CYGZ/DYGZ/GYCZ/GYDZ/GYGZ ou MODE UNID AXIS AXGZ.\n\n Note :  Le comportement ELASTIQUE UNIDIRECTIONNEL ne fonctionne\n -----   pas en massif tridimensionnel.",
  },
  {
    name: "MODI",
    url: "MODI",
    documentation:
      "$$$$ MODI     NOTICE  CHAT      11/09/12    21:17:17     7124           \n                                             DATE     11/09/12\n                                             \n  Directive MODIFIER                       Voir aussi :\n    ------------------  \n    MODIFIER ( OEIL1 si 3D) GEO1 ;\n        \n    Objet :\n    _______\n\n    La directive MODIFIER permet, si on dispose d'un terminal graphique\ninteractif muni d'un curseur graphique, de deplacer ou de nommer des\npoints, de supprimer, d'ajouter ou de nommer des elements d'un maillage.\n\n    Commentaire :\n    _____________\n\n    OEIL1 : point origine de l'angle de vue (type POINT)\n\n    GEO1  : geometrie affectee (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    Les points deplaces le sont pour tous les maillages les contenant,\nmais seul le maillage GEO1 est concerne par le travail sur les\nelements.",
  },
  {
    name: "MODL",
    url: "MODL",
    documentation:
      "$$$$ MODL     NOTICE  FANDEUR   14/10/10    21:15:17     8178           \n                                             DATE     14/10/10\n\n  Op\u00e9rateur MODL (MODELISER)               Voir aussi :\n    --------------------------  \n\n    Cet op\u00e9rateur a \u00e9t\u00e9 d\u00e9branch\u00e9.\n    Se reporter \u00e0 l'op\u00e9rateur MODE(LISER).",
  },
  {
    name: "MOIN",
    url: "MOIN",
    documentation:
      "$$$$ MOIN     NOTICE  CHAT      11/09/12    21:17:17     7124           \n                                             DATE     11/09/12\n\n    Operateur MOINS                           Voir aussi : PLUS\n    ---------------                                        DEPL  \n\n    Objet :\n    _______\n\n    L'operateur MOINS s'utilise dans les cas suivants :\n\n    -----------------------\n    |  1ere possibilite   |\n    -----------------------\n   \n              OBJ2 = OBJ1 MOINS | VEC1     ;\n                                | CHPO1 \n \n        NOBJ1   ... NOBJN  = OBJ1 ...  OBJN  MOINS |  VEC1    ;\n                                                   |  CHPO1 \n\n    Objet :\n    _______\n \n    L'operateur MOINS se comporte comme l'operateur PLUS \n    en multipliant par -1 les operandes VEC1 ou CHPO1.\n\n    Commentaire :\n    _____________\n   \n         OBJ1 : types POINT, MAILLAGE, CHPOINT, MCHAML, MMODEL, \n                le type RIGIDITE est admis pour la translation par -VEC1\n                mais pas pour la transformation par -CHPO1. Il est aussi\n                possible de donner une TABLE.\n\n      OBJ1 ... OBJN : voir OBJ1\n\n         VEC1 : type POINT\n\n        CHPO1 : type CHPOINT\n  \n         OBJ2 : resultat de meme type que OBJ1\n\n    NOBJ1 ... NOBN : resultats respectivement de memes types \n                   que OBJ1 ... OBJN\n\n\n    -----------------------\n    |  2eme possibilite   |\n    -----------------------\n   \n              CHPO1 = GEO2 MOINS GEO1 ;\n\n    Objet :\n    _______\n\n    L'operateur MOINS cree un CHPOINT correspondant, si elle existe,\n    a la transformation qui permet d'obtenir GEO2 a partir de GEO1.\n    Le support de CHPO1 est l'ensemble des points de GEO1. \n    \n\n    Commentaire :\n    _____________\n   \n        GEO1 : type MAILLAGE\n\n        GEO2 : type MAILLAGE, topologiquement equivalent a GEO1\n\n        CHPO1 : type CHPOINT",
  },
  {
    name: "MOME",
    url: "MOME",
    documentation:
      "$$$$ MOME     NOTICE  CHAT      11/09/12    21:17:18     7124           \n                                             DATE     11/09/12\n\n    Operateur MOMENT                         Voir aussi : FORC\n    ----------------                                       OPTI  \n\n    CHPO1 = MOMENT  |  VEC1           |   GEO1   ;\n                    |  MOTi FLOTi ... |\n\n\n    Objet :\n    _______\n\n    L'operateur MOMENT definit un champ de moment resultant de l'appliqua-\ntion du moment represente, soit par les composantes d'un vecteur, soit\npar des valeurs de composantes.\n\n    Commentaire :\n    _____________\n\n    VEC1  : vecteur (type POINT)\n\n    MOTi  : nom des composantes (type MOT)\n\n    FLOTi : valeurs des composantes (type FLOTTANT)\n\n    GEO1  : support geometrique (type MAILLAGE)\n\n    CHPO1 : champ de moments (type CHPOINT)\n\n\n    Remarque :\n    __________\n\n    Les noms de moments possibles sont :\n\n         pour un calcul en mode | PLAN CONT |\n                                | PLAN DEFO | :  MZ\n\n         pour un calcul en mode   AXIS        :  MT\n\n         pour un calcul en mode   FOUR        :  MT  MZ\n\n         pour un calcul en mode   PLAN GENE   :   MX(*) MY(*)\n\n         pour un calcul en mode   TRID        :   MX   MY  MZ\n\n         (*)  uniquement au point support des inconnues supplementaires\n\n\n    Exemple :\n    _________\n\n    Si GEO1 contient 50 points, le moment applique sur chaque\npoint est 1/50 de VEC1 (ou 1/50 de VALi).\n\n    Attention : On doit specifier VEC1 avant GEO1.\n    ----------",
  },
  {
    name: "MONTAGNE",
    url: "MONTAGNE",
    documentation:
      "$$$$ MONTAGNE NOTICE  CHAT      11/09/12    21:17:18     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure MONTAGNE                              Voir aussi : @RELIEF\n    ------------------  \n    MONTAGNE  CHPO1 (CHPO2) GEO1 (FLOT1) (| POIN1 )\n                                          | PROG1\n                                          \n                    ('CACHE') ('TITRE' CHA1) | ('VOLUME') ;\n                                             |  'FLECHE'\n                                             | ('SUPER')\n\n\n    Objet :\n    _______\n\n    Cette procedure sert a visualiser en relief un champ par point a une\n    composante, et eventuellement de superposer a ce relief les\n    isovaleurs d'un autre champ.  \n\n    Commentaire :\n    _____________\n\n    CHPO1 : champ par points a visualiser (type CHPOINT)\n            pour creer le relief \n\n    CHPO2 : champ par points a visualiser (type CHPOINT - facultatif)\n            dont les isovaleurs s'appuieront sur le relief\n\n    GEO1  : support geometrique du champ (type MAILLAGE)\n\n    FLOT1 : coefficient d'amplification (type FLOTTANT - facultatif)\n\n    'TITRE' mot-clef suivi de \n    CHA1  : chaine de caracteres a utiliser comme titre du\n            dessin. (facultatif) \n\n    POIN1 : point de vue (type POINT - facultatif)\n    PROG1 : idem (type LISTREEL - facultatif), sous la forme d'une\n            liste de trois reels.\n\n    'FLECHE'/'VOLUME'/'SUPER' : (type MOT - facultatif) :\n          FLECHE pour relief par des petites fleches\n          VOLUME pour relief par volume (par defaut si CHPO1 seul)\n          SUPER    \"     \"    \"     \"   plus isovaleurs\n                 (selectionne obligatoirement si CHPO2 donne)\n\n    'CACHE' : mot-clef facultatif indiquant (avec 'VOLUME') qu'on veut\n            les faces cachees. C'est l'option par defaut dans les\n            autres cas.\n\n    Remarque :\n    __________\n\n    Les deux champs doivent avoir le meme support geometrique GEO1,\n    et n'avoir qu'une seule composante.\n\n    Les axes horizontaux du trace correspondent aux deux premieres\n    coordonnees des points sous-tendant CHPO1.\n\n    Si on donne un seul champ et le mot-clef 'SUPER', trace ce champ\n    en relief et superpose ses propres isovaleurs dessus.\n\n    Si CHPO2 est fourni, l'option de trace devient 'SUPER' quel que\n    soit le mot-clef fourni.\n\n    Si OEIL n'est pas fourni, il est place au-dessus, regardant par le\n    sud-sud-ouest.\n    Pour fournir OEIL, il faut etre obligatoirement en dimension 3.\n\n    Si le coefficient d'amplification FLOT1, n'est pas fourni, il est\n    determine automatiquement en donnant une meme amplitude verticale\n    que les amplitudes horizontales.\n    ",
  },
  {
    name: "MOT",
    url: "MOT",
    documentation:
      "$$$$ MOT      NOTICE  CHAT      11/09/12    21:17:18     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MOT                            Voir aussi :\n    -------------  \n    MOT1 = MOT  MOT2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur MOT sert a donner un alias a un mot-cle ou a \n    mettre un nom d'operateur ou de procedure dans une table.\n\n\n    Commentaire :\n    _____________\n\n    MOT1 : alias donne au mot-cle (type MOT)\n\n    MOT2 : mot-cle (type MOT)\n\n    Exemple :\n    _________\n\n    T = MOT 'TRAC' ;\n    TA= TABLE;\n    TA . 1 = MOT 'DROI';\n    TA . 2 = MOT CERC ;\n    ta . 2 = MOT PASAPAS; \n    \n\n    On pourra alors ecrire : T OBJET ;  au lieu de : TRAC OBJET ;\n    \n    Remarque : Il est preferable de donner le nom d'un operateur \n    entre quotes mais le nom d'une procedure ne doit pas l'etre.",
  },
  {
    name: "MOTA",
    url: "MOTA",
    documentation:
      "$$$$ MOTA     NOTICE  CHAT      11/09/12    21:17:18     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MOTA                           Voir aussi :\n    --------------  \n      CHEL1  =  MOTA  MODL1 SIG1 VAR1 MAT1 (FLOT1) ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur MOTA calcule le champ de modules tangents, liant la\nvitesse de contrainte equivalente DSIG a la vitesse de deformation\nplastique equivalente DEPS  :\n\n\n                   DSIG  = CHEL1 * DEPS\n\n      L'etat initial doit etre plastiquement et statiquement admissible.\n\n      Commentaire :\n      _____________\n\n      MODL1 : objet modele (type MMODEL)\n\n      SIG1  : champ de contraintes (type MCHAML, sous-type CONTRAINTES)\n\n      VAR1  : champ de variables internes (type MCHAML, sous-type\n              VARIABLES INTERNES)\n\n      MAT1  : champ de caracteristiques materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n      FLOT1 : precision permettant de determiner le critere (type\n              FLOTTANT) la precision vaut 1.E-3 par defaut\n\n      CHEL1 : champ de modules tangents (type MCHAML)\n\n\n    Remarque :\n    __________\n\n    La logique de calcul du module tangent est la suivante pour chaque\npoint de chaque element :\n\n    - ou bien SIG1 est a l'interieur de la surface de charge; dans ce ca\n      le module est le module d'Young.\n\n    - ou bien SIG1 est sur la surface de charge; dans ce cas le module\n      est le module tangent.\n\n    L'etat initial doit etre plastiquement et statiquement admissible.\n\n    Un point se trouve sur la surface de charge si:\n\n    -  le materiau est plastique.\n    -  sa deformation plastique est strictement positive.\n    -  le critere du tenseur de contrainte SIG1 est superieur a\n       FLOT1 * SELAS ( SELAS est le diametre actuel de la surface de\n       charge ).\n\n    Il convient de respecter l'ordre des donnees en entree .",
  },
  {
    name: "MOTS",
    url: "MOTS",
    documentation:
      "$$$$ MOTS     NOTICE  JB251061  21/04/13    21:15:10     10959          \n                                             DATE     21/04/13\n\n    Operateur MOTS                           Voir aussi : PROG LECT SUIT\n    --------------                                        EVOL  \n    LMOTS1 = MOTS  MOT1 MOT2 ... ;\n\n\n    Objet :\n    _______\n\n    L'operateur MOTS cree une liste de mots de 8 caracteres.\n\n\n    Commentaire :\n    _____________\n\n    MOTi   : mots contenus dans la liste de mots (type MOT)\n\n    LMOTS1 : liste de mots (type LISTMOTS)\n\n\n    -----------------------\n    |  Sous-directive  *  |\n    -----------------------\n\n    LMOTS1 = MOTS 3*'ROUG' ;\n\n    est equivalent a : LMOTS1 = MOTS 'ROUG' 'ROUG' 'ROUG' ;\n\n\n    On peut aussi ecrire :\n\n    LMOTS1 = MOTS 2*'BLEU' 2*'VERT' 'ROUG' ;\n\n    qui equivaut a : LMOTS1 = MOTS 'BLEU' 'BLEU' 'VERT' 'VERT' 'ROUG' ;\n\n\n\n    Remarque :\n    __________\n\n    Pour eviter que l'un des mots soit pris pour un operateur, il faut\n    ecrire l'operateur MOTS en tete.",
  },
  {
    name: "MOYESPEC",
    url: "MOYESPEC",
    documentation:
      "$$$$ MOYESPEC NOTICE  MB234859  17/10/02    21:15:17     9577           \n                                             DATE     17/10/02\n\n  Procedure MOYESPEC                       Voir aussi :\n    ------------------  \n    FLOT1 = MOYESPEC EVOL1 FLOT2 FLOT3;\n\n\n    objet :\n    -------\n\n    La procedure MOYESPEC calcule la valeur moyenne FLOT1\n    d'une courbe EVOL1  dans l'intervalle donne par\n    FLOT2-FLOT3.",
  },
  {
    name: "MPRO",
    url: "MPRO",
    documentation:
      "$$$$ MPRO     NOTICE  CHAT      11/09/12    21:17:19     7124           \n                                             DATE     11/09/12\n\n    Operateur MPRO                           Voir aussi : RESO \n    --------------                                        TRAC  \n    MELEME = MPRO RAIDEUR ;\n\n\n    Objet :\n    _______\n\n    L'operateur MPRO construit un maillage de la matrice triangulaire inferieure\n    apparaissant dans la factorisatin d'une matrice.\n\n    Commentaire :\n    _____________\n\n    MELEME  : geometrie (type MAILLAGE)\n\n    RAIDEUR : raideur deja factorisee (type RIGIDITE)",
  },
  {
    name: "MRCFRAM1",
    url: "MRCFRAM1",
    documentation:
      "$$$$ MRCFRAM1 NOTICE  AF221230  18/04/20    21:15:02     9814           \n                                             DATE     18/04/20\n\n    procedure MRCFRAM1                       Voir aussi : MRCFRAME\n    ----------------   \n   LAM1 = MRCFRAM1 MOT1 TAB1 TOL1;\n\n\n\nObjet :\n-------\n\n    Procedure appelee par MRCFRAME pour le calcul de la marge sismique \n    des elements de type portiques (frame) (TIMO ou POUT) type POUTEAU COURT\n\nCommentaire :\n-------------\n    Cette procedure est appell\u00e9e par la procedure de calcul des marges \n    pour les elements frame (TIMO et POUT) - voir MRCFRAME\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "MRCFRAM2",
    url: "MRCFRAM2",
    documentation:
      "$$$$ MRCFRAM2 NOTICE  AF221230  18/04/20    21:15:02     9814           \n                                             DATE     18/04/20\n\n    procedure MRCFRAM2                       Voir aussi : MRCFRAME\n    ----------------   \n   LAM1 = MRCFRAM2 MOT1 TAB1 TOL1;\n\n\n\nObjet :\n-------\n\n    Procedure appele par MRCFRAME pour le calcul de la marge sismique \n    des elements de type portique (frame) (TIMO ou POUT) type POUTEAU LONG\n\nCommentaire :\n-------------\n    Cette procedure est appell\u00e9e par la procedure de calcul des marges \n    pour les elements frame (TIMO et POUT) - voir MRCFRAME\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "MRCFRAM3",
    url: "MRCFRAM3",
    documentation:
      "$$$$ MRCFRAM3 NOTICE  AF221230  18/04/20    21:15:03     9814           \n                                             DATE     18/04/20\n\n    procedure MRCFRAM3                       Voir aussi : MRCFRAME\n    ----------------   \n   LAM1 = MRCFRAM3 MOT1 TAB1 TOL1;\n\n\n\nObjet :\n-------\n\n    Procedure appelee par MRCFRAME pour le calcul de la marge sismique \n    des elements de type portique (frame) (TIMO ou POUT) type POUTRE COURTE\n\nCommentaire :\n-------------\n    Cette procedure est appell\u00e9e par la procedure de calcul des marges \n    pour les elements frame (TIMO et POUT) - voir MRCFRAME\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "MRCFRAM4",
    url: "MRCFRAM4",
    documentation:
      "$$$$ MRCFRAM4 NOTICE  AF221230  18/04/20    21:15:03     9814           \n                                             DATE     18/04/20\n\n    procedure MRCFRAM4                       Voir aussi : MRCFRAME\n    ----------------   \n   LAM1 = MRCFRAM4 MOT1 TAB1 TOL1;\n\n\n\nObjet :\n-------\n\n    Procedure appelee par MRCFRAME pour le calcul de la marge sismique \n    des elements de type portique (frame) (TIMO ou POUT) type POUTRE LONG\n\nCommentaire :\n-------------\n    Cette procedure est appell\u00e9e par la procedure de calcul des marges \n    pour les elements frame (TIMO et POUT) - voir MRCFRAME\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "MRCFRAME",
    url: "MRCFRAME",
    documentation:
      "$$$$ MRCFRAME NOTICE  AF221230  18/04/20    21:15:03     9814           \n                                             DATE     18/04/20\n\n    procedure MRCFRAME                       Voir aussi : MRCFRAME\n    ----------------   \n   TAB2 = MRCFRAME MOT1 TAB1 TOL1 LELE1\n\n\n\nObjet :\n-------\n\n    Procedure pour la determination des marges de securite pour \n    les elements de portique (frames) (TIMO et POUT) en beton arme avec ou sans la\n    prise en compte des covariances des efforts. \n\nCommentaire :\n-------------\n    Cette procedure est appellee (utilisable) seulement pour les claculs \n    en 3D.\n\nEn entree :\n-----------\n     MOT1:       Type de calcul [MOT] \n                          'RECTANGLE'     sans prise en compte des \n                                          covariances\n                          'ELLIPSOIDE'    avec prise en compte des \n                                          covariances\n     TAB1.'MAILLAGE':                Maillage de l element [MAILLAGE]\n         .'EFFORT_SEISME':           MCHAML de la matrice \n                                       representant l enveloppe des \n                                       efforts sismiques (voir SISSIB)\n         .'EFFORT_STATIQUE':         MCHAML des efforts statiques qui\n                                       agissent sur l element frame\n         .'CARACTERISTIQUES'        :MCHAML contenant les \n                                       caracteristiques de l element\n                                       frame :\n                                       'B_Y' longeur Y de la section \n                                                      en m [FLOTTANT]\n                                       'B_Z' longeur Z de la section \n                                                      en m [FLOTTANT]\n                                       'LIBY'  Longeur ly \n                                                      en m [FLOTTANT]\n                                       'LIBZ'  Longeur lz \n                                                      en m [FLOTTANT]\n                                       'SCAD'  Espacement cadres \n                                                      en m [FLOTTANT]\n                                       'ENRB'  Enrobage en m [FLOTTANT]\n                                       'PFER'  Diametres ferrailage \n                                                      en mm [LISTREEL]\n                                       'YFER'  position y ferraillage\n                                                      en m [LISTREEL]\n                                       'ZFER'  position z ferraillage\n                                                      en m [LISTREEL]\n                                       'ASWY'  aire ferraillage transv y\n                                                      en m2 [FLOTTANT]\n                                       'ASWZ'  aire ferraillage transv z\n                                                      en m2 [FLOTTANT]\n                                       'YACI'  module d young \n                                                de l acier \n                                                   en Pa [FLOTTANT]\n                                       'EPSB'  deformation ultime du\n                                                   beton [FLOTTANT]\n                                       'EPSA'  deformation ultime de\n                                                   l acier [FLOTTANT]\n         .'FC_BET':             Resistance caracteristique beton\n                                        [FLOTTANT]\n         .'GAM_C':                  Coef gammac  1.5/1.2 EC2/EC8\n                                        [FLOTTANT]\n         .'ALP_C':                  Coef alpa    1.0  EC2\n                                        [FLOTTANT]\n         .'FS_ACI':             resistance caracteristique de l acier\n                                        [FLOTTANT]\n         .'GAM_S':                  Coef gammas  1.15 EC2\n                                        [FLOTTANT]\n         TOL1:          Tollerance [FLOTTANT]\n         LELE1:         Liste des elements sur lesquels on veut sortir \n                        les graphiques des surfaces limites et des \n                        enveloppes (sans ou avec covariance - RECTANGLE \n                        ou ELLISPOIDE) (pas necessaire) \n                        [LISTREEL]\n\nEn sortie :\n-----------\n\n     TAB1.:             Table Contenant:\n         .'CH_LAMBDA': MCHAML les valeurs des marges (composent LAMB) \n         .'CARTE':     Maillage avec deux colorations pour indiquer les \n                       elements avec une marge superieure \u00e0 1 ou \n                       inferieure:\n                            ROUGE   elements ->  Lambda < 1.0\n                            VERT    elements ->  Lambda > 1.0\n         .'GRAPHIQUES':  Sous table pour les outils de graphique:\n                .I.                Ieme element\n                  .'LIMITE':      Surface limite de l element [MAILLAGE]\n                  .'RECTANGLE':   enveloppe sismique sans prise \n                                  en compte des covariances \n                                  (methode RECTANGLE) [MAILLAGE]\n                  .'ELLIPSOIDE':  enveloppe sismique avec prise \n                                  en compte des covariances \n                                  (methode ELLIPSOIDE) [MAILLAGE]\n                  .'RECTANGLE_AUG':  enveloppe sismique augment\u00e9 \n                                  sans prise en compte des covariances \n                                  (methode RECTANGLE) [MAILLAGE]\n                  .'ELLIPSOIDE_AUG': enveloppe sismique augment\u00e9 \n                                  avec prise en compte des covariances \n                                  (methode ELLIPSOIDE) [MAILLAGE]\n\nRemarques :\n-----------",
  },
  {
    name: "MRCSHELL",
    url: "MRCSHELL",
    documentation:
      "$$$$ MRCSHELL NOTICE  AF221230  16/11/03    21:15:12     9139           \n                                             DATE     16/11/03\n\n    procedure MRCSHELL                       Voir aussi : EFFMARTI \n                                                          SISSIB  \n    ----------------  \n   TAB_OUT = TAB_IN TOL_1 L_ELE1 ;\n\n\n\nObjet :\n-------\n\n    Procedure pour la determination des marges de securite pour les voiles \n    en beton arme avec ou sans la prise en compte des covarinces des \n    efforts. La verification est faite sur les efforts projes selon \n    le modele de MARTI a trois couches\n\nCommentaire :\n-------------\n    Cette procedure est appellee (utilisable) seulement pour les clacul \n    en 3D.\n\nEn entree :\n-----------\n    TYP_CAL1:       Type de calcul [FLOTTANT] \n                          'RECTANGLE'     sans prise en compte des \n                                          covariances\n                          'ELLIPSOIDE'    avec prise en compte des \n                                          covariances\n    TAB_IN.'MAILLAGE':                Maillage du voile [MAILLAGE]\n    TAB_IN.'EFFORT_SEISME':           MCHAML des matrices \n                                      rapresentant l'enveloppe des \n                                      efforts sismiques (voir SISSIB)\n    TAB_IN.'EFFORT_STATIQUE':         MCHAML des efforts statiques qui\n                                      agissent sur la voile \n                                      (issu EFFMARTI)\n    TAB_IN.'CARACTERISTIQUES_EXTERNE':MCHAML contenant les \n                                      caracteristiques de la couche \n                                      externe selon le modele de MARTI\n                                      (voir EFFMARTI):\n                                     'RHO1' taux d'acier direction 1\n                                     'RHO2' taux d'acier direction 2\n                                     'ENRO' Enrobage\n    TAB_IN.'CARACTERISTIQUES_INTERNE':MCHAML contenant les \n                                      caracteristiques de la couche \n                                      interne selon le modele de MARTI\n                                      (voir EFFMARTI):\n                                     'RHO1' taux d'acier direction 1\n                                     'RHO2' taux d'acier direction 2\n                                     'ENRO' Enrobage\n    TAB_IN.'CARACTERISTIQUES_CORE':  MCHAML contenant les \n                                     caracteristiques et les coeficients \n                                     pour la couche intermediaire\n                                     selon le modele de MARTI\n                                     'H' Epaisseur Totale\n                                     'RHOT' taux d'acier transversale\n                                     'COTH' Facteur cisaillement\n    TAB_IN.'FC_BET':                 Resistance caracteristique beton\n                                       [FLOTTANT]\n    TAB_IN.'GAM_C':                  Coef gammac  1.5/1.2 EC2/EC8\n                                       [FLOTTANT]\n    TAB_IN.'ALP_C':                  Coef alpa    1.0     EC2\n                                       [FLOTTANT]\n    TAB_IN.'NU_C':                   Coef nu      0.6*(1-250/fck) EC2\n                                       [FLOTTANT]\n    TAB_IN.'FS_ACI':                 resistance caracteristique acier\n                                       [FLOTTANT]\n    TAB_IN.'GAM_S':                  Coef gammas  1.15 EC2\n                                       [FLOTTANT]\n    TOL_1:          Tollerance [FLOTTANT]\n    L_ELE1:         Liste des elements sur lesquels on veut sortir les \n                    graphiques des surfaces limites et des enveloppes\n                    (sans ou avec covariance - RECTANGLE ou ELLISPOIDE) \n                    pour les couches externes, internes et \n                    intermediaire (pas necessaire) [LISTREEL]\n\nEn sortie :\n-----------\n\n   TAB_OUT:             Table output:\n    .'CH_LAMBDA_E': MCHAML des valeurs des marges pour la couche \n                           externe (composent LAME) \n    .'CH_LAMBDA_I': MCHAML des valeurs des marges pour la couche \n                           interne (composent LAMI)\n    .'CH_LAMBDA_C': MCHAML des valeurs des marges pour la couche \n                           intermediaire (composent LAMC)\n    .'CARTE_E':     Maillage avec deux coloration pour indiquer les \n                    element avec une marge superieure \u00e0 1 ou \n                    inferieure (couche externe):\n                      ROUGE   elements ->  Lambda < 1.0\n                      VERT    elements ->  Lambda > 1.0\n    .'CARTE_I':     Maillage avec deux coloration pour indiquer les \n                    element avec une marge superieure \u00e0 1 ou \n                    inferieure (couche interne):\n                      ROUGE   elements ->  Lambda < 1.0\n                      VERT    elements ->  Lambda > 1.0\n    .'CARTE_C':     Maillage avec deux coloration pour indiquer les \n                    element avec une marge superieure \u00e0 1 ou \n                    inferieure (couche intermediaire):\n                      ROUGE   elements ->  Lambda < 1.0\n                      VERT    elements ->  Lambda > 1.0\n    .'GRAPHIQUES':  Sous table for the graphiques tools:\n      .I.                    Ieme element\n        .'LIMITE_E':            Surface limite de la couche externe\n                                [MAILLAGE]\n        .'LIMITE_E':            Surface limite de la couche interne\n                                [MAILLAGE]\n        .'LIMITE_C':            Surface limite de la couche \n                                intermediaire [MAILLAGE]\n        .'RECTANGLE_E':         enveloppe couche externe sans prise \n                                en compte des covariances \n                                (methode RECTANGLE) [MAILLAGE]\n        .'RECTANGLE_I':         enveloppe couche interne sans prise \n                                en compte des covariances \n                                (methode RECTANGLE) [MAILLAGE]\n        .'RECTANGLE_I':         enveloppe couche intermediaire \n                                sans prise en compte des covariances \n                                (methode RECTANGLE) [MAILLAGE]\n        .'ELLIPSOIDE_E':        enveloppe couche externe avec prise \n                                en compte des covariances \n                                (methode ELLIPSOIDE) [MAILLAGE]\n        .'ELLIPSOIDE_I':        enveloppe couche interne avec prise \n                                en compte des covariances \n                                (methode ELLIPSOIDE) [MAILLAGE]\n        .'ELLIPSOIDE_I':        enveloppe couche intermediaire \n                                avec prise en compte des covariances \n                                (methode ELLIPSOIDE) [MAILLAGE]\n        .'RECTANGLE_E_AUG':     enveloppe couche externe sans prise \n                                en compte des covariances amplifie par\n                                la marge LAME \n                                (methode RECTANGLE) [MAILLAGE]\n        .'RECTANGLE_I_AUG':     enveloppe couche interne sans prise \n                                en compte des covariances amplifie par\n                                la marge LAMI \n                                (methode RECTANGLE) [MAILLAGE]\n        .'RECTANGLE_C_AUG':     enveloppe couche intermediaire sans prise \n                                en compte des covariances amplifie par\n                                la marge LAMC \n                                (methode RECTANGLE) [MAILLAGE]\n        .'ELLIPSOIDE_E_AUG':    enveloppe couche externe avec prise \n                                en compte des covariances amplifie par\n                                la marge LAME \n                                (methode ELLIPSOIDE) [MAILLAGE]\n        .'ELLIPSOIDE_I_AUG':    enveloppe couche interne avec prise \n                                en compte des covariances amplifie par\n                                la marge LAMI \n                                (methode ELLIPSOIDE) [MAILLAGE]\n        .'ELLIPSOIDE_C_AUG':    enveloppe couche intermediaire avec \n                                prise en compte des covariances \n                                amplifie par la marge LAMC \n                                (methode ELLIPSOIDE) [MAILLAGE]\n\nRemarques :\n-----------",
  },
  {
    name: "MRCTRACE",
    url: "MRCTRACE",
    documentation:
      "$$$$ MRCTRACE NOTICE  AF221230  16/11/03    21:15:12     9139           \n                                             DATE     16/11/03\n\n    procedure MRCTRACE                       Voir aussi : MRCSHELL\n    ----------------  \n   VAL1 = MRCTRACE TAB1;\n\n\n\nObjet :\n-------\n\n    Procedure pour tracer les surfaces limites et les enveloppes des \n    trois couches selon le modele de MARTI (voir EFFMARTI)\n\nCommentaire :\n-------------\nCette procedure est appell\u00e9e par la procedure de calcul des marges pour\nles elements 2D (coques ou voiles) - voir MRCSHELL\n\nEn entree :\n-----------\n\n\n\nEn sortie :\n-----------\n\n\nRemarques :\n-----------",
  },
  {
    name: "MREM",
    url: "MREM",
    documentation:
      "$$$$ MREM     NOTICE  CHAT      11/09/12    21:17:19     7124           \n                                             DATE     11/09/12\n\n    Operateur MREM                           Voir aussi : UNILATER\n    --------------                                        CHAN   DEPE  \n              \n\n\n  \n      Syntaxe :\n      ________\n                    \n                  CHPO3 = 'MREM' CHPO1 RIG1 RIG2 CHPO1 CHPO2 ;\n                     \n       Objet :\n      _______\n   \n L'operateur MREM  est appele dans la procedure UNILATER pour\n reintroduire les inconnues eliminees dans la solution.\n\n Son emploi en dehors de ce contexte est deconseille.",
  },
  {
    name: "MULC",
    url: "MULC",
    documentation:
      "$$$$ MULC     NOTICE  GOUNAND   12/12/06    21:15:16     7595           \n                                             DATE     12/12/06\n\n    Procedure MULC                           Voir aussi : *\n    --------------  \n    CH1 = MULC CH2 CH3 ;\n\n\n\n    Objet :\n    _______\n \n    La procedure MULC realise la multiplication terme a terme de 2\n    champs par points.\n\n    Commentaire :\n    _____________\n \n    CH2, CH3  : champs (type CHPOINT) pointant sur la meme geometrie et \n                ayant les memes noms de composantes.\n\n    CH1       : champ (type CHPOINT) pointant sur la meme geometrie et\n                ayant les memes noms de composantes que CH2 et CH3; la \n                valeur de la composante Cj au point Pi du champ CH1 etant\n                egale au produit des valeurs des champs CH2 et CH3 pour \n                la meme composante et au meme point.\n\n    Remarques :\n    ___________\n\n    La procedure MULC est appelee par la procedure SISSIB.\n\n    On suggere d'utiliser l'operateur '*' qui est plus general.",
  },
  {
    name: "MULT",
    url: "MULT",
    documentation:
      "$$$$ MULT     NOTICE  CHAT      11/09/12    21:17:20     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MULT                           Voir aussi :\n    --------------  \n    LOG1 = MULT  N1 N2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur MULT compare deux nombres entiers N1 et N2.\n\n    Commentaire :\n    _____________\n\n    N1, N2 : nombres entiers (type ENTIER)\n\n    LOG1   : resultat logique (type LOGIQUE)\n             a pour valeur VRAI si N1 est un multiple entier de N2 et\n             FAUX sinon.",
  },
  {
    name: "MULTIDEC",
    url: "MULTIDEC",
    documentation:
      "$$$$ MULTIDEC NOTICE  MB234859  17/10/02    21:15:18     9577           \n                                             DATE     17/10/02\n\n    Procedure MULTIDEC                       Voir aussi : MULTIREC\n    ------------------                                    ANALYSER  \n\n    N1 EVOL1_DECO EVOL2_RESI=MULTIDEC EVOL3_SIGN LREEL1_HT ENTI1_HT\n                                     LREEL2_GT ENTI2_GT (ENTI3 MOT1);\n\n\n\n    Objet :\n    -------\n\n    La procedure MULTIDEC permet d'effectuer la multidecomposition\n    d'un signal donne sur une grille uniforme de longueur quelconque\n    EVOL3_SIGN (dont on traite que la premiere courbe) par rapport\n    aux filtres miroirs conjugues LREEL1_HT et LREEL2_GT. LREEL1_HT\n    et LREEL2_GT pouvant etre non symetriques,  ENTI1_HT et ENTI2_GT\n    indiquent le nombre de points \"negatif\" a prendre en compte dans\n    la convolution (ENTI1_HT et/ou ENTI2_GT sont negatifs si la\n    convolution est symetrique).\n\n    L'ENTIER N1 indique le nombre de niveaux d'analyse effectif,\n    EVOL1_DECO (contenant N1 courbes) contient la decomposition (des\n    basses vers les hautes \"frequences\") et EVOL2_RESI (contenant\n    une courbes) le residu de EVOL3_SIGN.\n\n    La procedure MULTIDEC utilise les operateurs CVOL et DIAD.\n\n    Options :\n    ---------\n\n    ENTI3  : L'ENTIER ENTI3 permet de specifier le nombre de niveaux\n             de decomposition souhaite. Par defaut c'est le maximum\n             autorise par le convolueur CVOL.\n\n    MOT1   : Le MOT MOT1 specifie les conditions de bord pour les\n             calculs de correlation: 'SYME'(trique) ou 'PADD'(ing) de\n             zero. Le defaut est 'SYME'.",
  },
  {
    name: "MULTIREC",
    url: "MULTIREC",
    documentation:
      "$$$$ MULTIREC NOTICE  MB234859  17/10/02    21:15:18     9577           \n                                             DATE     17/10/02\n\n    Procedure MULTIREC                       Voir aussi : MULTIDEC\n    ------------------                                    RECOMPOS  \n    N2 EVOL1_SIGN=MULTIREC EVOL2_RESI EVOL3_DECO\n                           LREEL1_H ENTI1_H\n                           LREEL2_G ENTI2_G (ENTI3 MOT1);\n\n\n    Objet :\n    -------\n\n    La procedure MULTIREC permet d'effectuer la multi-recomposition\n    EVOL1_SIGN (comportant une courbe) d'un signal a partir de sa\n    decomposition EVOL3_DECO (contenant N1 courbes des basses\n    vers les hautes frequences) et son residu EVOL2_RESI (contenant\n    une courbe) par rapport aux filtres conjugues LREEL1_H et LREEL2_G,\n    LREEL1_H et LREEL2_G pouvant etre non symetriques, ENTI1_H et ENTI2_G\n    indiquent le nombre de points \"negatifs\" a prendre  en compte dans la\n    convolution (ENTI1_H et/ou ENTI2_G sont negatifs si la convolution\n    est symetrique)\n\n    L'ENTIER N2 indique le nombre de niveaux d'analyse effectif.\n\n    La procedure MULTIREC utilise les operateurs CVOL et DIAD.\n\n    Options :\n    ---------\n\n    ENTI3  : permet de specifier le nombre de niveaux de recomposition\n             souhaite. Par defaut c'est N1.\n\n    MOT1   : specifie les conditions de bord pour les calculs de\n             correlation: 'SYME'(trique) ou 'PADD'(ing) de zero. Le\n             defaut est 'SYME'.",
  },
  {
    name: "MUTU",
    url: "MUTU",
    documentation:
      "$$$$ MUTU     NOTICE  CHAT      11/09/12    21:17:20     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur MUTU                           Voir aussi :\n    --------------  \n    RIG1 = MUTU MOD1 MAT1 (GEO1);\n\n\n\n    Objet :\n    _______\n\n    L'operateur MUTU construit la matrice de mutuelle inductance\n    d'un modele 'MAGNETODYNAMIQUE' de calcul de Courants de \n    Foucault (formulation 'POTENTIEL_VECTEUR') avec le support\n    de ces courants.  \n    Le maillage support des courants est a priori celui du\n    domaine de calcul, sinon GEO1 specifie un domaine deduit\n    par symetrie ou rotation. Dans ce dernier cas le logiciel essaye\n    de faire correspondre la topologie du maillage support du modele \n    MOD1 avec celle de GEO1. Si les topologies sont trop complexes, \n    il peut etre necessaire d'appeler plusieurs fois l'operateur\n    en simplifiant les donnees.\n    \n   \n    Commentaire :\n    _____________\n\n     MOD1  : nom du modele 'MAGNETODYNAMIQUE' (type MODELE)\n     MAT1  : champ de caracteristiques du materiau  (type MCHAML)\n     GEO1  : support des Courants de Foucault (type MAILLAGE)\n     RIG1  : matrice de resistance (type RIGIDITE)",
  },
  {
    name: "M_DAMPIN",
    url: "M_DAMPIN",
    documentation:
      "$$$$ M_DAMPIN NOTICE  MB234859  17/10/02    21:15:17     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure M_DAMPIN                       Voir aussi :\n    ------------------  \n    RIG2 = M_DAMPIN  TAB1 LREEL1 RIG1;\n\n \n    Objet :\n    _______\n \n    La procedure M_DAMPIN construit une matrice d'amortissement\n modal dans l'espace physique. Elle affecte a chaque mode de base \n un amortissement reduit. Cette procedure correspond a l'operateur\n AMOR qui travaille dans l'espace modal.\n \n    Commentaire :\n    _____________\n \n  TAB1    : table definissant les modes (type 'TABLE', sous-type \n            'BASE_DE_MODES')\n \n  LREEL1  : coefficients des amortissements modaux reduits (en %)\n            (type 'LISTREEL')\n\n  RIG1    : matrice de rigidite (type 'RIGIDITE', sous-type\n            'RIGIDITE')\n \n  RIG2    : matrice d'amortissement (type 'RIGIDITE', sous-type\n            'RIGIDITE')",
  },
  {
    name: "M_DAMP_K",
    url: "M_DAMP_K",
    documentation:
      "$$$$ M_DAMP_K NOTICE  MB234859  17/10/02    21:15:16     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure M_DAMP_K                       Voir aussi :\n    ------------------  \n    RIG2 = M_DAMPIN  TAB1 LREEL1 RIG1;\n\n \n    Objet :\n    _______\n \n    La procedure M_DAMP_K construit une matrice d'amortissement\n modal dans l'espace physique, completee par un amortissement\n proportionel a la rigidite. Elle affecte a chaque mode de base \n un amortissement reduit. \n \n    Commentaire :\n    _____________\n \n  TAB1    : table definissant les modes (type 'TABLE', sous-type \n            'BASE_DE_MODES')\n \n  LREEL1  : coefficients des amortissements modaux reduits (en %)\n            (type 'LISTREEL')\n\n  RIG1    : matrice de rigidite (type 'RIGIDITE', sous-type\n            'RIGIDITE')\n \n  RIG2    : matrice d'amortissement (type 'RIGIDITE', sous-type\n            'RIGIDITE')",
  },
  {
    name: "NATAF",
    url: "NATAF",
    documentation:
      "$$$$ NATAF    NOTICE  CHAT      11/09/12    21:17:20     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure NATAF                          Voir aussi : FIABILI FDENS\n    -----------------                                     FINVREPA REPART  \n     NATAF TAB1 ;\n\n          TAB1 . transformation_directe\n               . points_espace_physique\n               . points_espace_reference\n               . noms_des_variables\n               . matcov\n               . matrice_de_decorrelation\n               . param_va . k . typva\n               . param_va . k . A\n               . param_va . k . B\n               . param_va . k . LAMBDA\n               . param_va . k . MU\n               . param_va . k . MOYENNE\n               . param_va . k . ECART_TYPE\n\n\n\n    Objet :\n    _______\n La procedure NATAF calcule l'image d'un point de l'espace physique \n dans l'espace de reference (si les variables sont dependantes par la\n  transformation de NATAF) ou la reciproque c'est a dire l'image\n  d'un point de l'espace de reference dans l'espace physique.\n\n   Donnees :\n    ---------\n  TAB1 . 'TRANSFORMATION_DIRECTE' : logique\n   si VRAI on va de l'espace physique vers l'espace de reference\n   si FAUX on va de l'espace de reference vers l'espace physique.\n\n  TAB1 . 'POINTS_ESPACE_PHYSIQUE' : listreel des coordonnees du point\n   dans l'espace physique.\n    entree si TAB1 . 'TRANSFORMATION_DIRECTE' = VRAI\n    sortie si TAB1 . 'TRANSFORMATION_DIRECTE' = FAUX\n\n  TAB1 . 'POINTS_ESPACE_REFERENCE' : listreel des coordonnees du point\n   dans l'espace de reference.\n    entree si TAB1 . 'TRANSFORMATION_DIRECTE' = FAUX\n    sortie si TAB1 . 'TRANSFORMATION_DIRECTE' = VRAI\n\n  TAB1 . 'NOMS_DES_VARIABLES'  : listmots contenant le nom de chaque variable.\n\n  TAB1 . 'MATCOV'  : listreel qui contient la matrice de correlation \n    dans le cas ou les variables ne sont pas independantes. C'est la \n    transformation de nataf qui est utilisee.\n    pour une matrice | a b c |\n                     | b d e |\n                     | c e f |\n    il faut rentrer (prog a b d c e f).\n    Les lois autorisees sont : \n   Uniforme, Normale centree reduite, Normale, Lognormale, Exponentielle.\n\n  TAB1 . MATRICE_DE_DECORRELATION : listreel contenant la matrice \n  triangulaire inferieure obtenue par la decomposition de Cholesky de \n  la matrice de correlation fictive obtenue a l'aide des formules approchees.\n    pour une matrice | a b c |\n                     | d e f |\n                     | g h i |\n    c'est  (prog a b c d e f g h i).\n   si elle fournie par l'utilisateur, on ne la recalcule pas sinon on la\n   calcule et on la fournit en sortie.\n\n  TAB1 . 'PARAM_VA' . k : est une table qui contient les differents parametres\n                           necessaire a la connaissance de la kieme variable \n                            aleatoire.\n  TAB1 . 'PARAM_VA' . k . 'TYPVA' : chaine de caractere contenant le type de\n      la kieme variable aleatoire.\n     Les types disponibles sont :\n                                 'LOI_UNIFORME'\n                                 'LOI_NORMALE_STANDARD' (i.e. centree,reduite)\n                                 'LOI_EXPONENTIELLE'\n                                 'LOI_LOGNORMALE'\n                                 'LOI_NORMALE'\n\n   Dans le cas de la loi uniforme :\n  TAB1 . 'PARAM_VA' . k . 'A'\n  TAB1 . 'PARAM_VA' . k . 'B' : sont les bornes de l'intervalle sur lequel\n        la variable est definie (A<B)\n\n   Dans le cas de la loi normale centree reduite (LOI_NORMALE_STANDARD) :\n pas de parametre. La densite vaut : exp(-0.5*x^2)/((2*pi)**0.5)\n\n   Dans le cas de la loi exponentielle :\n     TAB1 . 'PARAM_VA' . k . 'LAMBDA'\n     TAB1 . 'PARAM_VA' . k . 'MU'\n  la densite vaut : lambda*exp(lambda*(mu - x)) si x >= mu \n                     0                          sinon\n\n   Dans le cas de la loi lognormale :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi normale :\n  TAB1 . 'PARAM_VA' . k . 'MOYENNE'\n  TAB1 . 'PARAM_VA' . k . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.",
  },
  {
    name: "NAVI",
    url: "NAVI",
    documentation:
      "$$$$ NAVI     NOTICE  CHAT      11/09/12    21:17:21     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n\n         Navier_Stokes : Ecoulements fluides incompressibles visqueux   | \n         ------------------------------------------------------------   | \n                                                                        | \n  I Modeles physiques                                                   | \n  ____________________                                                  | \n                                                                        | \n  Le modele Navier_Stokes permet de traiter dans un formalisme Eulerien | \n les ecoulements multidimensionnels de fluides incompressibles ( ou     | \n faiblement compressibles) visqueux et newtonien. Cela concerne les     | \n ecoulements dans les structures internes industrielles, les ecoulements| \n atmospheriques a petite echelle, les ecoulements dans une enceinte de  | \n reacteur en situation accidentelle, le genie chimique (ecoulement dans | \n un reacteur chimique, centrifugation) les interactions fluide/structure| \n ... etc.                                                               | \n Les regimes d'ecoulements peuvent etre stationnaires ou instationnaires| \n laminaires ou turbulents, en convection forcee, naturelle ou mixte.    | \n                                                                        | \n  Ecoulements faiblement compressibles :                                | \n                                                                        | \n    approximation de Boussinesq                                         | \n    approximation faible Mach                                           | \n                                                                        | \n  Modelisation de la turbulence :                                       | \n                                                                        | \n    modele K - Epsilon                                                  | \n    modele RNG K - Epsilon                                              | \n                                                                        | \n  Conditions limites :                                                  | \n                                                                        | \n    vitesse, temperature .. imposees                                    | \n    contraintes totale (visqueuses et pression) imposees                | \n    flux thermique ou de masse impose                                   | \n    condition d'echange thermique                                       | \n    fonction de paroi QDM thermique et masse                            | \n                                                                        | \n  Force de volume / termes,source ou puits                              | \n                                                                        | \n  Ecoulements aux travers d'obstacles                                   | \n                                                                        | \n    faisceaux, plaques, diaphragmes                                     | \n                                                                        | \n  Modeles bi-fluide                                                     | \n                                                                        | \n    transport de particules                                             | \n    emulsion                                                            | \n                                                                        | \n                                                                        | \n  II Methodes numeriques                                                | \n  ______________________                                                | \n                                                                        | \n                                                                        | \n    II.1 Discretisation spatiale                                        | \n    ----------------------------                                        | \n                                                                        | \n  Elle est obtenue par une methode d'elements finis multidimensionnelle | \n 2D (plan ou axi) ou 3D.                                                | \n                                                                        | \n On fera reference par la suite aux familles d'elements suivantes :     | \n                                                                        | \n LINE  : SEG2 TRI3 QUA4 CUB8 PRI6 TET4 PYR5                             | \n QUAD  : SEG3 TRI6 QUA8 CU20 PR15 TE10 PY13    (MECANIQUE)              | \n QUAF  : SEG3 TRI7 QUA9 CU27 PR21 TE15 PY19    (MECA FLU)               | \n MACRO : SEG3 TRI6 QUA9 CU27 PR18 TE10         (MECA FLU)               | \n                                                                        | \n                                                                        | \n  La formulation mixte vitesse pression ne permet pas n'importe quel    | \n type d'element. On peut distinguer deux classes d'elements : les       | \n elements a pression continue et ceux a pression discontinue. On ne     | \n dispose dans CASTEM 2000 que de ces derniers.                          | \n                                                                        | \n                                                                        | \n                                                                        | \n              A - Les elements quadratiques QUAF                        | \n                                                                        | \n P2+bulle - P1 nc (nc : non conforme) et Q2 - P1 nc                     | \n (Crouzeix-Raviart) [1]                  (Bercovier-Pironneau) [2]      | \n et leurs homologues 3D                                                 | \n La pression est P1 non conforme                                        | \n                                                                        | \n        u                                                               | \n       /\\            u-----u-----u                                      | \n      /p \\           |     |     |                                      | \n    u/____\\u         | p   |     |                                      | \n    /\\ u  /\\         u-----u--p--u                                      | \n   /p \\  /p \\        |     |     |                                      | \n  /____\\/____\\       |     p     |                                      | \n u      u     u      u-----u-----u                                      | \n                                                                        | \n Ref :                                                                  | \n [1] M. Crouzeix and P.A. Raviart : Conforming and non conforming       | \n     finite element methods for solving the stationary Stokes equations.| \n     R.A.I.R.O. (7eme annee,decembre 1973,R-3,p.33a76)                  | \n                                                                        | \n [2] M. Bercovier and O. Pironneau : Error estimates for finite element | \n     solution of the Stokes problem in the primitive variables.         | \n     Numer. Math. 33,p.211-224, 1979.                                   | \n                                                                        | \n Les ordres de convergence spatiales sont :                             | \n ------------------------------------------                             | \n  pour la vitesse  O(h**3)                                              | \n  pour la pression O(h**2)                                              | \n  h etant une mesure de l'element.                                      | \n                                                                        | \n  mise en oeuvre :                                                      | \n  ----------------                                                      | \n                                                                        | \n 1/ Faire un maillage compose d'elements LINE ou QUAD.                  | \n                                                                        | \n 2/ Transformer les elements du maillage en QUAF.  voir operateur CHAN  | \n                                                                        | \n 3/ Faire les eliminations necessaires de points eventuellement crees   | \n    en double.                                     voir operateur ELIM  | \n                                                                        | \n 4/ Creer les objets MMODEL 'NAVIER_STOKES' associes aux maillages en   | \n    precisant QUAF pour le type des elements finis.                     | \n                                                   voir operateur MODE  | \n         $MT = MODE MT 'NAVIER_STOKES' QUAF ;                           | \n                                                                        | \n 5/ Creer les champs de vitesse et de pression.                         | \n    La vitesse  sera un CHPOINT VECT SOMMET                             | \n    La pression sera un CHPOINT SCAL CENTREP1                           | \n                                                   voir operateur KCHT  | \n    UN = KCHT $MT VECT SOMMET (0. 0. 0.) ;                              | \n    PN = KCHT $MT SCAL CENTREP1 0. ;                                    | \n                                                                        | \n                                                                        | \n                                                                        | \n              B - Les elements lineaires MACRO                          | \n                                                                        | \n iso P2 - iso P1 nc                                                     | \n iso Q2 - iso P1 nc  [1],[2]                                            | \n                                                                        |  \n Ce sont des macro-elements redecoupes en 4 elements lineaires en 2D    | \n (8 en 3D) pour la vitesse                                              | \n La pression est 3xP0 en 2D 4xP0 et 3D  Cf figure ci-dessous            | \n                                                                        | \n        u                                                               | \n       /\\            u-----u-----u                                      | \n      /p \\           |     |     |                                      | \n    u/____\\u         | p   |     |                                      | \n    /\\    /\\         u-----u--p--u                                      | \n   /p \\  /p \\        |     |     |                                      | \n  /____\\/____\\       |     p     |                                      | \n u      u     u      u-----u-----u                                      | \n                                                                        | \n Ref :                                                                  | \n   [1] J. Boland and R.A. Nicolaides: Stability of finite elements under| \n       divergence constraints, SIAM Jour. Numer. Analy. 20,722-730 1983 | \n                                                                        | \n   [2] D. Gunzburger.                                                   | \n       Finite Element Methods for Viscous Incompressible Flows          | \n       A Guide to Theory, Practice, and Algorithms. ACADEMIC PRESS 1989 | \n       pages 28-31                                                      | \n                                                                        | \n                                                                        | \n Les ordres de convergence spatiales sont :                             | \n ------------------------------------------                             | \n                                                                        | \n  pour la vitesse  O((h/2)**2)                                          | \n  pour la pression O(h)                                                 | \n  h/2 etant une mesure du sous element lineaire                         | \n  h etant une mesure du macro element.                                  | \n                                                                        | \n  mise en oeuvre :                                                      | \n  ----------------                                                      | \n                                                                        | \n 1/ Faire un maillage compose d'elements LINE ou QUAD.                  | \n                                                                        | \n 2/ Transformer les elements du maillage en QUAF.  voir operateur CHAN  | \n                                                                        | \n 3/ Faire les eliminations necessaires de points eventuellement crees   | \n    en double.                                     voir operateur ELIM  | \n                                                                        | \n 4/ Creer les objets MMODEL 'NAVIER_STOKES' associes aux maillages en   | \n    precisant MACRO pour le type des elements finis.                    | \n                                                   voir operateur MODE  | \n         $MT = MODE MT 'NAVIER_STOKES' MACRO ;                          | \n                                                                        | \n 5/ Creer les champs de vitesse et de pression.                         | \n    La vitesse  sera un CHPOINT VECT SOMMET                             | \n    La pression sera un CHPOINT SCAL CENTREP1                           | \n                                                   voir operateur KCHT  | \n    UN = KCHT $MT VECT SOMMET (0. 0. 0.) ;                              | \n    PN = KCHT $MT SCAL CENTREP1 0. ;                                    | \n                                                                        | \n                                                                        | \n                                                                        | \n              C - Les elements lineaires LINE                           | \n                                                                        | \n Q1 - P0 [1]                                                            | \n P1 - P0                                                                |\n                                                                        | \n        u             u-----u                                           |  \n       / \\            |     |                                           | \n      / p \\           |  p  |                                           | \n    u/_____\\u         |     |                                           | \n                      u-----u                                           | \n                                                                        | \n  Ces elements ne sont pas stables. Pire un maillage composes uniquement| \n de triangles P1 - P0 peut conduire a un blocage. La seule solution Uh  | \n compatible avec Div Uh = 0 etant Uh = 0 . Cette famille d'elements     | \n est donc fortement deconseillee.                                       | \n  Pour stabiliser les elements precedents la technique utilisee dans    | \n CASTEM 2000 consiste a regrouper les elements lineaires au sein de     | \n MACRO elements de formes standard. La stabilisation s'obtient en       | \n modifiant l'equation de continuite (Cf Brezzi, Silvester Kechkar [2])  | \n Le fait d'operer sur les MACRO elements permet de conserver l'attrait  | \n des pressions discontinues c'est a dire une conservation forte au      | \n niveau des MACRO elements [3].Il apparait cependant un coefficient Beta| \n qu'il n'est pas toujours facile de choisir. C'est pourquoi nous deconse| \n illons aussi cette methode.                                            |\n Pour les quadrangles beta # 1 pour les triangles beta # 1000           | \n                                                                        | \n                                                                        | \n Ref :                                                                  | \n   [1] P.M. Gresho, S.T. Chan, R.L. Lee,and C.D. Upson.                 | \n       A Modified Finite Element Method for Solving the Time-dependent  | \n       Incompressible Navier-Stokes Equations. Part 1: Theory.          | \n       Int. J. Num. Meth. Fluids, 4:557-598,1984.                       | \n                                                                        | \n   [2] N. Kechkar and D. Silvester: Analysis of Locally Stabilized Mixed| \n       Finite Element Methods for the Stokes Problem.                   | \n       Mathematics of Computation,58(197):1-10,1992.                    | \n                                                                        | \n   [3] H. Paillere and J.P. Magnaud : A finite Element Flow Solver For  | \n       Low Mach Number Compressible Flows.                              | \n       Proc. 10th Int. Conf. on Finite Elements in Fluids,              | \n       January 5-8 1998, Tucson, Arizona.                               | \n                                                                        | \n                                                                        | \n                                                                        | \n                                                                        | \n    II.2 Algorithmes                                                    | \n    ----------------                                                    | \n                                                                        | \n      Regimes permanents resolution en Vitesse-pression                 | \n                                                                        | \n      Transitoire Implicite Vitesse-pression                            | \n                                                                        | \n      Transitoire semi explicite Vitesse-pression                       | \n                  implicite sur la pression                             | \n                  explicite sur toutes les autres inconnues             | \n                                                                        | \n                                                                        | \n                                                                        | \n                                                                        | \n            A - Navier_Stokes : Convection isotherme permanent          | \n                                                                        | \n                                                                        | \n   ro U Grad U = mu Lapl U - Grad P                                     | \n                                                                        | \n   Div U = 0                                                            | \n                                                                        | \n                                                                        | \n   RV = EQEX                                                            | \n   OPTI EF IMPL                                                         | \n   ZONE $MT OPER NS (mu/ro)    INCO UN                                  | \n   ZONE $MT OPER KBBT 1 (-1.)  INCO UN PN                               | \n   ;                                                                    | \n                                                                        | \n                                                                        | \n                                                                        | \n            B - Navier_Stokes : Convection isotherme transitoire        | \n                                                                        | \n                                                                        | \n   ro dU/dt + ro U Grad U = mu Lapl U - Grad P                          | \n                                                                        | \n   Div U = 0                                                            | \n                                                                        | \n   ** Implicite Euler (ordre 1 en temps)                                | \n                                                                        | \n   RV = EQEX                                                            | \n   OPTI EF IMPL                                                         | \n   ZONE $MT OPER NS (mu/ro)        INCO UN                              | \n   ZONE $MT OPER KBBT (1/ro) (-1.) INCO UN PN                           | \n   ZONE $MT OPER DFDT 1. 'UN' dt   INCO UN                              | \n   ;                                                                    | \n                                                                        | \n     ou                                                                 |\n                                                                        |\n   RV = EQEX                                                            | \n   OPTI EF IMPL                                                         | \n   ZONE $MT OPER DFDT 1. 'UN' dt INCO UN                                | \n   ZONE $MT OPER KONV ro         INCO UN                                | \n   ZONE $MT OPER LAPN mu         INCO UN                                | \n   ZONE $MT OPER KBBT 1 (-1.)    INCO UN PN                             | \n   ;                                                                    | \n                                                                        | \n   ** Implicite Crank Nicolson (ordre 2 en temps)                       | \n                                                                        | \n   RV = EQEX                                                            | \n   OPTI EF SEMI 0.5                                                     | \n   ZONE $MT OPER NS (mu/ro)        INCO UN                              | \n   ZONE $MT OPER KBBT (1/ro) (-1.) INCO UN PN                           | \n   ZONE $MT OPER DFDT 1. 'UN' dt   INCO UN                              | \n   ;                                                                    | \n                                                                        | \n   ** Implicite Crank Nicolson generalise (ordre 4 en temps)            | \n                                                                        | \n   RV = EQEX                                                            | \n   OPTI EF SEMI 0.5 'CNG'                                               | \n   ZONE $MT OPER NS (mu/ro)        INCO UN                              | \n   ZONE $MT OPER KBBT (1/ro) (-1.) INCO UN PN                           | \n   ZONE $MT OPER DFDT 1. 'UN' dt   INCO UN                              | \n   ;                                                                    | \n                                                                        | \n   ** Explicite Euler (ordre 1 en temps)                                | \n    (pas de temps limite pour la stabilite)                             | \n                                                                        | \n   RV = EQEX                                                            | \n   OPTI EFM1 EXPL                                                       | \n   ZONE $MT OPER NS (mu/ro)      INCO UN                                | \n   ZONE $MT OPER DFDT 1. 'UN' dt INCO UN                                | \n   ;                                                                    | \n                                                                        | \n   RVP = EQPR $MT                                                       | \n   ZONE $MT OPER PRESSION 0.                                            | \n   ;                                                                    | \n                                                                        | \n   RV.'PRESSION' =  RVP ;                                               | \n                                                                        | \n                                                                        | \n                                                                        | \n    II.3 Schema de convection                                           | \n    -------------------------                                           | \n                                                                        | \nLes schemas de convection disponibles sont les suivants :               | \n                                                                        | \n--------------------------------------------------------                | \nschema                   |ordre en   |schema en temps  |                | \n                         |espace     |                 |                | \n-------------------------------------|-----------------|                | \nelements                 |MACRO QUAF |                 |                | \n                         |LINE       |                 |                | \n-------------------------------------|-----------------|                | \ncentre                   |  2     3  | impl/expl 2D/3D |                | \ndecentre SUPG            |  2     3  | impl/expl 2D/3D |                | \ndecentre SUPGCC [1]      |  2     3  | impl/expl 2D/3D |                | \ndecentre PSI    [2]      |  2     3  | explicite 2D    |                | \n--------------------------------------------------------                | \n                                                                        | \n Ref :                                                                  | \n   [1] T.J.R. Hughes, M. Mallet and A. Mizukami.                        | \n       A New Finite Element Formulation for Computational Fluid Dynamics| \n       II. Beyond SUPG                                                  | \n                                                                        | \n   [2] H. Paillere.                                                     | \n       Multidimensional Upwind Residual Distribution Schemes for the    | \n       Euler and Navier-Stokes Equations on Unstructured Grids          | \n       These Von Karman Institute June 1995                             | \n                                                                        | \n voir burger*.dgibi                                                     | \n                                                                        | \n                                                                        | \n                                                                        | \n    II.4 Schema en temps                                                | \n    --------------------                                                | \n                                                                        | \nLes schemas en temps disponibles sont les suivants :                    | \n                                                                        | \n-------------------------------------------------------                 | \nschema                    |ordre en  |schema en temps |                 | \n                          |temps     |                |                 | \n------------------------------------------------------|                 | \nelements                  |MACRO QUAF|                |                 | \n                          |LINE      |                |                 | \n------------------------------------------------------|                 | \nEuler                     |  1       |impl/expl 2D/3D |                 | \nTenseur visqueux          |  2       |     expl 2D/3D |                 | \nCrank Nicolson            |  2       |implicite 2D/3D |                 | \nCrank Nicolson generalise |  4       |implicite 2D/3D |                 | \n-------------------------------------------------------                 | \n                                                                        | \n   voir cone.DGIBI                                                      | \n                                                                        | \n                                                                        | \n                                                                        | \n  III Liste des operateurs utiles pour faire un calcul Navier_Stokes    | \n  __________________________________________________________________    | \n                                                                        | \n                                                                        | \n------------------------------------------------------------------------| \n|  OPTION   : Declaration des options generales de calcul               | \n------------------------------------------------------------------------| \n|  ET       : Permet d'assembler des proprietes decrites par zones:     | \n|                     maillages, champs ...                             | \n------------------------------------------------------------------------| \n|  MODELE   : Definition du modele Navier_Stokes                        | \n------------------------------------------------------------------------| \n|  KCHT     : Definition des CHPOINTs pour decrire les proprietes       | \n|           : physiques les champs etc                                  | \n------------------------------------------------------------------------| \n|  EQEX     : permet de creer la table pour la resolution               | \n|           : d'un probleme                                             | \n------------------------------------------------------------------------| \n|  EXEC     : Procedure executant un algorithme conduisant a la         | \n|           : resolution d'un probleme de type Navier_Stokes            | \n------------------------------------------------------------------------| \n|           :            Operateurs de discretisation                   | \n|           : Transport : convection/diffusion                          | \n|  DFDT     : Derivee temporelle d'un scalaire                          | \n|  LAPN     : Laplacien scalaire (diffusion)                            | \n|  KONV     : Convection                                                | \n|  TSCA     : Diffusion/convection/source                               | \n|  FIMP     : Flux/source imposee                                       | \n|  ECHI     : Echange impose                                            | \n------------------------------------------------------------------------|\n|           : Navier Sokes                                              | \n|  DFDT     : Derivee temporelle d'un vecteur                           | \n|  NS       : QDM Diffusion/convection/source                           | \n|  LAPN     : Laplacien vecteur (diffusion)                             | \n|  KONV     : Convection                                                | \n|  DUDW     : Penalisation de la contrainte Div U = 0                   | \n|  KMAB     :                                                           | \n|  KMBT     :                       t                                   | \n|  KBBT     : Calcule les matrices C et C                               | \n|  TOIM     :                                                           | \n------------------------------------------------------------------------|\n|           : Turbulence                                                | \n|  NSKE     : QDM Diffusion/convection/source + modele K-Epsilon        | \n|  FPU      : Fonction de paroi QDM                                     | \n|  FPT      : Fonction de paroi thermique                               | \n|  FPA      : Fonction de paroi aerosols                                | \n|  FILTREKE : Procedure de filtrage des valeurs de K et Epsilon         | \n|           : operateur masse                                           | \n|  MDIA     :                                                           | \n|  FROT     :                                                           | \n------------------------------------------------------------------------|\n|           : Operateurs de projection                                  | \n|  ELNO     : CENTRE -> SOMMET                                          | \n|  NOEL     : SOMMET -> CENTRE                                          | \n|  KSOF     : SOMMET -> FACE                                            | \n------------------------------------------------------------------------| \n|  DBIT     : Calcul d'un debit                                         | \n------------------------------------------------------------------------| \n|  TRACE    : Trace de grandeurs sur des maillages                      | \n|  LIST     : Impressions de resultats                                  | \n------------------------------------------------------------------------| \n|  SAUVER   : Ecriture dans un fichier                                  | \n|  RESTITUER: Reprise du calcul                                         | \n------------------------------------------------------------------------| \n                                                                        | \n                                                                        | \n  IV Exemples                                                           | \n  ___________                                                           | \n                                                                        | \n                                                                        | \n   Liste des exemples DGIBI                                             | \n------------------------------------------------------------------------| \n                         |   Commentaires                               | \n------------------------------------------------------------------------| \n                                                                        | \n        Transport                                                       | \n                                                                        | \n 15wedge.dgibi           |                                              | \n burgerC.dgibi           |                                              | \n burgerNC.dgibi          |                                              | \n burgerpsi.dgibi         |                                              | \n smithhutton.dgibi       |                                              | \n transport1.dgibi        |                                              | \n cone.dgibi              | 2D transitoire transport scalaire teste      | \n                         | schema en temps                              | \n convnonlin1.dgibi       |                                              | \n consmasse.dgibi         |                                              | \n                                                                        | \n        Convection forcee NS                                            | \n                                                                        | \n blasius.dgibi           |                                              | \n hy1.dgibi               |                                              | \n ccar1.dgibi             |                                              | \n ccar2.dgibi             |                                              | \n ccar3.dgibi             |                                              | \n ccar4.dgibi             |                                              | \n ccar3d.dgibi            |                                              | \n tubesrc.dgibi           |                                              | \n couette.dgibi           |                                              | \n                                                                        | \n        Convection naturelle NS                                         | \n                                                                        | \n dvisi.dgibi             |                                              | \n benchmark_imst.dgibi    |2D plan NS convection naturelle faible Prandtl| \n vahldavis3D.dgibi       |                                              | \n vahldavis.dgibi         |                                              | \n villers_platten.dgibi   |                                              | \n vortex.dgibi            |                                              | \n                                                                        | \n        Rayonnement                                                     | \n                                                                        | \n cvry-2D-1.dgibi         |                                              | \n wsgg.dgibi              |                                              | \n                                                                        | \n        Turbulence                                                      | \n                                                                        | \n bc30.dgibi              |                                              | \n gridturb.dgibi          |                                              | \n tubturb.dgibi           |                                              | \n                                                                        | \n        Modelisations complexes                                         | \n                                                                        | \n linekman.dgibi          |                                              | \n ODWp.dgibi              |                                              | \n BINGHAMp.dgibi          |                                              | \n dynasp.dgibi            | Aspersion bifluide 2D plan                   | \n mistra.dgibi            |                                              | \n aerosol1.dgibi          |                                              | \n aerosol2.dgibi          |                                              | \n aerosol3.dgibi          |                                              | \n centrif.dgibi           |                                              | \n ale_mecaflu.dgibi       | 2D plan  NS ALE 1/2 expl                     | \n basmachQ.dgibi          | 2D plan  NS combustion bas Mach              | \n basmachT.dgibi          |                                              | \n                                                                        | \n        Post traitement                                                 | \n                                                                        | \n trajec.dgibi            |                                              | \n lignecourant.dgibi      |                                              | \n------------------------------------------------------------------------|\n                                                                        | \n                                                                        | \n  V Quelques conseils                                                   | \n  ___________________                                                   | \n                                                                        | \n                                                                        | \n                                                                        | \n                                                                        | \nLa construction du jeux de donnees va se faire en plusieurs etapes :    | \n                                                                        | \n                                                                        | \n construction du maillage et des domaines associes ;                    | \n definition de la modelisation ;                                        | \n definition des conditions aux limites ;                                | \n initialisation ;                                                       | \n execution ;                                                            | \n                                                                        | \n                                                                        | \n Construction du maillage :                                             | \n                                                                        | \n  Lors de la construction du maillage, il est conseille de parametrer   | \n le nombre d'elements pour permettre un passage sans probleme d'un      | \n maillage grossier a un maillage fin ;                                  | \n                                                                        | \n  Il est aussi conseille d'identifier les elements sur lesquels         | \n s'appliquent les conditions aux limites ou vont s'effectuer les        | \n postraitements sous la forme de sous-objets maillages nommes.          | \n                                                                        | \n  On cree ensuite les maillages d'elements QUAF (voir operateur CHAN)   | \n seuls elements acceptes par le modele NAVIER_STOKES. Ces maillages     |\n geometriques servent a la construction des maillages associes a la     |\n discretisation quel que soit la formulation choisi : MACRO QUAF ou LINE|\n Il faut bien entendu faire les ELIM necessaire entre tous les objets   |\n maillages changes en QUAF.                                             | \n                                                                        | \n Dans le cas de la formulation MACRO veiller au bon redecoupage des     | \n des elements en MACRO.                                                 | \n                                                                        | \n Utiliser l'operateur DOMA pour extraire les maillages compatibles      | \n pour les conditions limites                                            | \n                                                                        | \n                                                                        | \n En explicite placer DFDT apres les operateurs de discretisation tels NS|\n etc pour profiter du calcul automatique du pas de temps                |\n                                                                        | \n                                                                        | ",
  },
  {
    name: "NAVIER",
    url: "NAVIER",
    documentation:
      "$$$$ NAVIER   NOTICE  CHAT      11/09/12    21:17:21     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n\n         Navier_Stokes : Ecoulements fluides incompressibles visqueux   |\n         ------------------------------------------------------------   |\n                                                                        |\n  I Modeles physiques                                                   |\n  ____________________                                                  |\n                                                                        |\n  Le modele Navier_Stokes permet de traiter dans un formalisme Eulerien |\n les ecoulements multidimensionnels de fluides incompressibles ( ou     |\n faiblement compressibles) visqueux et newtonien. Cela concerne les     |\n ecoulements dans les structures internes industrielles, les ecoulements|\n atmospheriques a petite echelle, les ecoulements dans une enceinte de  |\n reacteur en situation accidentelle le genie chimique (ecoulement dans  |\n un reacteur chimique, centrifugation) les interactions fluide/structure|\n .. etc.                                                                |\n Les regimes d'ecoulements peuvent etre stationnaires ou instationnaires|\n laminaires ou turbulents, en convection forcee, naturelle ou mixte.    |\n                                                                        |\n  Ecoulements faiblement compressibles :                                |\n                                                                        |\n    approximation de Boussinesq                                         |\n    approximation faible Mach                                           |\n                                                                        |\n  Modelisation de la turbulence :                                       |\n                                                                        |\n    modele K - Epsilon                                                  |\n    modele RNG K - Epsilon                                              |\n                                                                        |\n  Conditions limites :                                                  |\n                                                                        |\n    vitesse, temperature .. imposees                                    |\n    contraintes totale (visqueuses et pression) imposees                |\n    flux thermique ou de masse impose                                   |\n    condition d'echange thermique                                       |\n    fonction de paroi QDM thermique et masse                            |\n                                                                        |\n  Force de volume / termes,source ou puits                              |\n                                                                        |\n  Ecoulements aux travers d'obstacles                                   |\n                                                                        |\n    faisceaux, plaques, diaphragmes                                     |\n                                                                        |\n  Modeles bi-fluide                                                     |\n                                                                        |\n    transport de particules                                             |\n    emulsion                                                            |\n                                                                        |\n                                                                        |\n  II Methodes numeriques                                                |\n  ______________________                                                |\n                                                                        |\n                                                                        |\n    II.1 Discretisation spatiale                                        |\n    ----------------------------                                        |\n                                                                        |\n  Elle est obtenue par une methode d'elements finis multidimensionnelle |\n 2D (plan ou axi) ou 3D.                                                |\n                                                                        |\n On fera reference par la suite aux familles d'elements suivantes :     |\n                                                                        |\n LINE  : SEG2 TRI3 QUA4 CUB8 PRI6 TET4 PYR5                             |\n QUAD  : SEG3 TRI6 QUA8 CU20 PR15 TE10 PY13    (MECANIQUE)              |\n QUAF  : SEG3 TRI7 QUA9 CU27 PR21 TE15 PY19    (MECA FLU)               |\n MACRO : SEG3 TRI6 QUA9 CU27 PR18 TE10         (MECA FLU)               |\n                                                                        |\n                                                                        |\n  La formulation mixte vitesse pression ne permet pas n'importe quel    |\n type d'element. On peut distinguer deux classes d'elements : les       |\n elements a pression continue et ceux a pression discontinue. On ne     |\n dispose dans CASTEM 2000 que des derniers.                             |\n                                                                        |\n                                                                        |\n                                                                        |\n              A - Les elements quadratiques QUAF                        |\n                                                                        |\n P2+bulle - P1 nc (nc : non conforme) et Q2 - P1 nc                     |\n (Crouzeix-Raviart) [1]                  (Bercovier-Pironneau) [2]      |\n et leurs homologues 3D                                                 |\n                                                                        |\n Ref :                                                                  |\n [1] M. Crouzeix and P.A. Raviart : Conforming and non conforming       |\n     finite element methods for solving the stationary Stokes equations.|\n     R.A.I.R.O. (7eme annee,decembre 1973,R-3,p.33a76)                  |\n                                                                        |\n [2] M. Bercovier and O. Pironneau : Error estimates for finite element |\n     solution of the Stkes problem in the primitive variables.          |\n     Numer. Math. 33,p.211-224, 1979.                                   |\n                                                                        |\n Les ordres de convergence spatiales sont :                             |\n ------------------------------------------                             |\n  pour la vitesse  O(h**3)                                              |\n  pour la pression O(h**2)                                              |\n  h etant une mesure de l'element.                                      |\n                                                                        |\n  mise en oeuvre :                                                      |\n  ----------------                                                      |\n                                                                        |\n 1/ Faire un maillage compose d'elements LINE ou QUAD.                  |\n                                                                        |\n 2/ Transformer les elements du maillage en QUAF.  voir operateur CHAN  |\n                                                                        |\n 3/ Faire les eliminations necessaires de points eventuellement crees   |\n    en double.                                     voir operateur ELIM  |\n                                                                        |\n 4/ Creer les objets MMODEL 'NAVIER_STOKES' associes aux maillages en   |\n    precisant QUAF pour le type des elements finis.                     |\n                                                   voir operateur MODE  |\n         $MT = MODE MT 'NAVIER_STOKES' QUAF ;                           |\n                                                                        |\n 5/ Creer les champs de vitesse et de pression.                         |\n    La vitesse  sera un CHPOINT VECT SOMMET                             |\n    La pression sera un CHPOINT SCAL CENTREP1                           |\n                                                   voir operateur KCHT  |\n    UN = KCHT $MT VECT SOMMET (0 0 0) ;                                 |\n    PN = KCHT $MT SCAL CENTREP1 0 ;                                     |\n                                                                        |\n                                                                        |\n                                                                        |\n              B - Les elements lineaires iso P2 - iso P1 nc MACRO       |\n                                         iso Q2 - iso P1 nc  [1],[2]    |\n                                                                        |\n Ce sont des macro-elements redecoupes en 4 elements lineaires en 2D    |\n (8 en 3D) pour la vitesse                                              |\n La pression est 3xP0 en 2D 4xP0 et 3D  Cf figure ci-dessous            |\n                                                                        |\n        u                                                               |\n       /\\            u-----u-----u                                      |\n      /p \\           |     |     |                                      |\n    u/____\\u         | p   |     |                                      |\n    /\\    /\\         u-----u--p--u                                      |\n   /p \\  /p \\        |     |     |                                      |\n  /____\\/____\\       |     p     |                                      |\n u      u     u      u-----u-----u                                      |\n                                                                        |\n Ref :                                                                  |\n   [1] J. Boland and R.A. Nicolaides: Stability of finite elements under|\n       divergence constraints, SIAM Jour. Numer. Analy. 20,722-730 1983 |\n                                                                        |\n   [2] D. Gunzburger.                                                   |\n       Finite Element Methods for Viscous Incompressible Flows          |\n       A Guide to Theory, Practice, and Algorithms. ACADEMIC PRESS 1989 |\n       pages 28-31                                                      |\n                                                                        |\n                                                                        |\n Les ordres de convergence spatiales sont :                             |\n ------------------------------------------                             |\n                                                                        |\n  pour la vitesse  O((h1/2)**2)                                         |\n  pour la pression O(h)                                                 |\n  h1/2 etant une mesure du sous element lineaire                        |\n  h etant une mesure du macro element.                                  |\n                                                                        |\n  mise en oeuvre :                                                      |\n  ----------------                                                      |\n                                                                        |\n 1/ Faire un maillage compose d'elements LINE ou QUAD.                  |\n                                                                        |\n 2/ Transformer les elements du maillage en QUAF.  voir operateur CHAN  |\n                                                                        |\n 3/ Faire les eliminations necessaires de points eventuellement crees   |\n    en double.                                     voir operateur ELIM  |\n                                                                        |\n 4/ Creer les objets MMODEL 'NAVIER_STOKES' associes aux maillages en   |\n    precisant MACRO pour le type des elements finis.                    |\n                                                   voir operateur MODE  |\n         $MT = MODE MT 'NAVIER_STOKES' MACRO ;                          |\n                                                                        |\n 5/ Creer les champs de vitesse et de pression.                         |\n    La vitesse  sera un CHPOINT VECT SOMMET                             |\n    La pression sera un CHPOINT SCAL CENTREP1                           |\n                                                   voir operateur KCHT  |\n    UN = KCHT $MT VECT SOMMET (0 0 0) ;                                 |\n    PN = KCHT $MT SCAL CENTREP1 0 ;                                     |\n                                                                        |\n                                                                        |\n                                                                        |\n              C - Les elements LINE Q1 - P0 [1]                         |\n                                                                        |\n  Ces elements ne sont pas stables. Pire un maillage composes uniquement|\n de triangles P1 - P0 peut conduire a un blocage. La seule solution Uh  |\n compatible avec Div Uh = 0 etant Uh = 0 . Cette famille d'elements     |\n est donc fortement deconseillee.                                       |\n  Pour stabiliser les elements precedents la technique utilisee dans    |\n CASTEM 2000 consiste a regrouper les elements lineaires au sein de     |\n MACRO elements de formes standart. La stabilisation s'obtient en       |\n modifiant l'equation de continuite (Cf Brezzi, Silvester Kechkar [2])  |\n Le fait d'operer sur les MACRO elements permet de conserver l'attrait  |\n des pressions discontinues c'est a dire une conservation forte au      |\n niveau des MACRO elements [3]. Il apparait cependant un coeficient Beta|\n qu'il n'est pas toujours facile de choisir. C'est pourquoi nous        |\n deconseillons aussi cette methode.                                     |\n                                                                        |\n Ref :                                                                  |\n   [1] P.M. Gresho, S.T. Chan, R.L. Lee,and C.D. Upson.                 |\n       A Modified Finite Element Method for Solving the Time-dependent  |\n       Incompressible Navier-Stokes Equations. Part 1: Theory.          |\n       Int. J. Num. Meth. Fluids, 4:557-598,1984.                       |\n                                                                        |\n   [2] N. Kechkar and D. Silvester: Analysis of Locally Stabilized Mixed|\n       Finite Element Methods for the Stokes Problem.                   |\n       Mathematics of Computation,58(197):1-10,1992.                    |\n                                                                        |\n   [3] H. Paillere and J.P. Magnaud : A finite Element Flow Solver For  |\n       Low Mach Number Compressible Flows.                              |\n       Proc. 10th Int. Conf. on Finite Elements in Fluids,              |\n       January 5-8 1998, Tucson, Arizona.                               |\n                                                                        |\n                                                                        |\n                                                                        |\n                                                                        |\n    II.2 Algorithmes                                                    |\n    ----------------                                                    |\n                                                                        |\n      Regimes permanents resolution en Vitesse-pression                 |\n                                                                        |\n      Transitoire Implicite Vitesse-pression                            |\n                                                                        |\n      Transitoire semi explicite Vitesse-pression                       |\n                  implicite sur la pression                             |\n                  explicite sur toutes les autres inconnues             |\n                                                                        |\n                                                                        |\n                                                                        |\n                                                                        |\n            A - Navier_Stokes : Convection isotherme permanent          |\n                                                                        |\n                                                                        |\n   ro U Grad U = mu Lapl U - Grad P                                     |\n                                                                        |\n   Div U = 0                                                            |\n                                                                        |\n                                                                        |\n   RV = EQEX                                                            |\n   OPTI EF IMPL                                                         |\n   ZONE $MT OPER NS (mu/ro)    INCO UN                                  |\n   ZONE $MT OPER KCCT 1 (-1.)  INCO UN PN                               |\n   ;                                                                    |\n                                                                        |\n                                                                        |\n                                                                        |\n            B - Navier_Stokes : Convection isotherme transitoire        |\n                                                                        |\n                                                                        |\n   ro dU/dt + ro U Grad U = mu Lapl U - Grad P                          |\n                                                                        |\n   Div U = 0                                                            |\n                                                                        |\n   ** Implicite grands pas de temps  Euler (ordre 1 en temps)           |\n                                                                        |\n   RV = EQEX $MT                                                        |\n   OPTI EF IMPL                                                         |\n   ZONE $MT OPER NS (mu/ro)      INCO UN                                |\n   ZONE $MT OPER KCCT 1 (-1.)    INCO UN PN                             |\n   ZONE $MT OPER DFDT ro 'UN' dt INCO UN                                |\n   ;                                                                    |\n                                                                        |\n   ** Implicite grands pas de temps  Crank Nicholson (ordre 2 en temps) |\n                                                                        |\n   RV = EQEX $MT                                                        |\n   OPTI EF SEMI 0.5                                                     |\n   ZONE $MT OPER NS (mu/ro)      INCO UN                                |\n   ZONE $MT OPER KCCT 1 (-1.)    INCO UN PN                             |\n   ZONE $MT OPER DFDT ro 'UN' dt INCO UN                                |\n   ;                                                                    |\n                                                                        |\n   ** Semi implicite petits pas de temps  Euler (ordre 1 en temps)      |\n                                                                        |\n   RV = EQEX $MT                                                        |\n   OPTI EFM1 EXPL                                                       |\n   ZONE $MT OPER NS (mu/ro)      INCO UN                                |\n   ZONE $MT OPER DFDT ro 'UN' dt INCO UN                                |\n   ;                                                                    |\n                                                                        |\n   RVP = EQPR $MT                                                       |\n   ZONE $MT OPER PRESSION 0.                                            |\n   ;                                                                    |\n                                                                        |\n   RV.'PRESSION' =  RVP ;                                               |\n                                                                        |\n                                                                        |\n                                                                        |\n    II.3 Schema de convection                                           |\n    -------------------------                                           |\n                                                                        |\nLes schemas de convection disponibles sont les suivants :               |\n                                                                        |\n--------------------------------------------------------                |\nschema                   |ordre en   |algorithme       |                |\n                         |espace     |                 |                |\n-------------------------------------|-----------------|                |\nelements                 |MACRO QUAF |                 |                |\n                         |LINE       |                 |                |\n-------------------------------------|-----------------|                |\ncentre                   |  2     3  | impl/expl 2D/3D |                |\ndecentre Hughes-Brooks   |  2     3  | impl/expl 2D/3D |                |\ndecentre SUPG            |  2     3  | impl/expl 2D/3D |                |\ndecentre SUPGCC [1]      |  2     3  | impl/expl 2D/3D |                |\ndecentre PSI    [2]      |  2     3  | explicite 2D    |                |\n--------------------------------------------------------                |\n                                                                        |\n Ref :                                                                  |\n   [1] T.J.R. Hughes, M. Mallet and A. Mizukami.                        |\n       A New Finite Element Formulation for Computational Fluid Dynamics|\n       II. Beyond SUPG                                                  |\n                                                                        |\n   [2] H. Paillere.                                                     |\n       Multidimensional Upwind Residual Distribution Schemes for the    |\n       Euler and Navier-Stokes Equations on Unstructured Grids          |\n       These Von Karman Institute June 1995                             |\n                                                                        |\n voir burger*.dgibi                                                     |\n                                                                        |\n                                                                        |\n                                                                        |\n    II.4 Schema en temps                                                |\n    --------------------                                                |\n                                                                        |\nLes schemas en temps disponibles sont les suivants :                    |\n                                                                        |\n-------------------------------------------------------                 |\nschema                    |ordre en |algorithme       |                 |\n                          |temps    |                 |                 |\n------------------------------------------------------|                 |\nelements                  |         |                 |                 |\n                          |         |LINE             |                 |\n------------------------------------------------------|                 |\nEuler                     |  1      | impl/expl 2D/3D | EF/EFM1         |\nTenseur visqueux          |  2      | impl/expl 2D/3D |                 |\nCrank Nicholson           |  2      | implicite 2D/3D |                 |\nCrank Nicholson generalise|  4      | implicite 2D/3D |                 |\n-------------------------------------------------------                 |\n                                                                        |\n   voir cone.DGIBI                                                      |\n                                                                        |\n                                                                        |\n                                                                        |\n  III Liste des operateurs utiles pour faire un calcul Navier_Stokes    |\n  __________________________________________________________________    |\n                                                                        |\n                                                                        |\n------------------------------------------------------------------------|\n|  OPTION   : Declaration des options generales de calcul               |\n------------------------------------------------------------------------|\n|  ET       : Permet d'assembler des proprietes decrites par zones:     |\n|                     maillages, champs ...                             |\n------------------------------------------------------------------------|\n|  MODELE   : Definition du modele Navier_Stokes                        |\n------------------------------------------------------------------------|\n|  DOMA     : Association a un maillage d'une formulation element fini  |\n------------------------------------------------------------------------|\n|  KCHT     : Definition des CHPOINTs pour decrire les proprietes       |\n|           : physiques les champs etc                                  |\n------------------------------------------------------------------------|\n|  EQEX     : permet de creer la table pour la resolution               |\n|           : d'un probleme                                             |\n------------------------------------------------------------------------|\n|  EXEC     : Procedure executant un algorithme conduisant a la         |\n|           : resolution d'un probleme de type Navier_Stokes            |\n------------------------------------------------------------------------|\n|           :            Operateurs de discretisation                   |\n|           : Transport : convection/diffusion                          |\n|  DFDT     : Derivee temporelle d'un scalaire                          |\n|  LAPN     : Laplacien scalaire (diffusion)                            |\n|  KONV     : Convection                                                |\n|  TSCA     : Diffusion/convection/source                               |\n|  FIMP     :                                                           |\n|  ECHI     :                                                           |\n|           : Navier Sokes                                              |\n|  DFDT     : Derivee temporelle d'un vecteur                           |\n|  NS       : QDM Diffusion/convection/source                           |\n|  LAPN     : Laplacien vecteur (diffusion)                             |\n|  KONV     : Convection                                                |\n|  DUDW     : Penalisation de la contrainte Div U = 0                   |\n|  KMAC     :                                                           |\n|  KMCT     :                                                           |\n|  KCCT     :                                                           |\n|  TOIM     :                                                           |\n|           : Turbulence                                                |\n|  NSKE     : QDM Diffusion/convection/source + modele K-Epsilon        |\n|  FPU      : Fonction de paroi QDM                                     |\n|  FPT      : Fonction de paroi thermique                               |\n|  FPA      : Fonction de paroi aerosols                                |\n|  FILTREKE : Procedure de filtrage des valeurs de K et Epsilon         |\n|           : operateur masse                                           |\n|  MDIA     :                                                           |\n|  FROT     :                                                             |\n-----------------------------------------------------------------------\n|           : Operateurs de projection                                  |\n|  ELNO     : CENTRE -> SOMMET                                          |\n|  NOEL     : SOMMET -> CENTRE                                          |\n|  KSOF     : SOMMET -> FACE                                            |\n------------------------------------------------------------------------|\n|  DBIT     : Calcul d'un debit                                         |\n------------------------------------------------------------------------|\n|  TRACE    : Trace de grandeurs sur des maillages                      |\n|  LIST     : Impressions de resultats                                  |\n------------------------------------------------------------------------|\n|  SAUVER   : Interruption du calcul                                    |\n|  RESTITUER: Reprise du calcul                                         |\n------------------------------------------------------------------------|\n                                                                        |\n                                                                        |\n  IV Exemples                                                           |\n  ___________                                                           |\n                                                                        |\n                                                                        |\n   Liste des exemples DGIBI                                             |\n------------------------------------------------------------------------|\n                         |   Commentaires                               |\n------------------------------------------------------------------------|\n                                                                        |\n        Transport                                                       |\n                                                                        |\n 15wedge.dgibi           |                                              |\n burgerC.dgibi             |                                            |\n burgerNC.dgibi          |                                              |\n burgerpsi.dgibi         |                                              |\n smithhutton.dgibi       |                                              |\n transport1.dgibi        |                                              |\n cone.dgibi              | 2D transitoire transport scalaire teste      |\n                         | schema en temps                              |\n convnonlin1.dgibi       |                                              |\n consmasse.dgibi         |                                              |\n                                                                        |\n        Convection forcee NS                                            |\n                                                                        |\n blasius.dgibi           |                                              |\n hy1.dgibi               |                                              |\n ccar1.dgibi             |                                              |\n ccar2.dgibi             |                                              |\n ccar3.dgibi             |                                              |\n tubesrc.dgibi           |                                              |\n couette.dgibi           |                                              |\n                                                                        |\n        Convection naturelle NS                                         |\n                                                                        |\n dvisi.dgibi             |                                              |\n benchmark_imst.dgibi    |2D plan NS convection naturelle faible Prandtl|\n vahldavis3D.dgibi       |                                              |\n vahldavis.dgibi         |                                              |\n villers_platten.dgibi   |                                              |\n vortex.dgibi            |                                              |\n                                                                        |\n        Rayonnement                                                     |\n                                                                        |\n cvry-2D-1.dgibi         |                                              |\n wsgg.dgibi              |                                              |\n                                                                        |\n        Turbulence                                                      |\n                                                                        |\n bc30.dgibi              |                                              |\n gridturb.dgibi          |                                              |\n tubturb.dgibi           |                                              |\n                                                                        |\n        Modelisations complexes                                         |\n                                                                        |\n linekman.dgibi          |                                              |\n ODWp.dgibi              |                                              |\n BINGHAMp.dgibi          |                                              |\n dynasp.dgibi            | Aspersion bifluide 2D plan                   |\n mistra.dgibi            |                                              |\n aerosol1.dgibi          |                                              |\n aerosol2.dgibi          |                                              |\n aerosol3.dgibi          |                                              |\n centrif.dgibi           |                                              |\n ale_mecaflu.dgibi       | 2D plan  NS ALE 1/2 expl                     |\n basmachQ.dgibi          | 2D plan  NS combustion bas Mach              |\n basmachT.dgibi          |                                              |\n                                                                        |\n        Post traitement                                                 |\n                                                                        |\n trajec.dgibi            |                                              |\n lignecourant.dgibi      |                                              |\n-----------------------------------------------------------------------\n                                                                        |\n                                                                        |\n  V Quelques conseils                                                   |\n  ___________________                                                   |\n                                                                        |\n                                                                        |\n                                                                        |\n                                                                        |\nLa construction du jeux de donnees va se faire en plusieurs etapes :    |\n                                                                        |\n                                                                        |\n construction du maillage et des domaines associes ;                    |\n definition de la modelisation ;                                        |\n definition des conditions aux limites ;                                |\n initialisation ;                                                       |\n execution ;                                                            |\n                                                                        |\n                                                                        |\n Construction du maillage :                                             |\n                                                                        |\n  Lors de la construction du maillage, il est conseille de parametrer   |\n le nombre d'elements pour permettre un passage sans probleme d'un      |\n maillage grossier a un maillage fin ;                                  |\n                                                                        |\n  Il est aussi conseille d'identifier les elements sur lesquels         |\n s'appliquent les conditions aux limites ou ou vont s'effectuer les     |\n postraitements sous la forme de sous-objets maillages nomes.           |\n                                                                        |\n  On cree ensuite les maillages d'elements QUAF (quadratique pour les   |\n fluides) mais aussi necessite pour les LINE. Le modele NAVIER_STOKES   |\n n'admet que ce type d'element. Voir operateur CHAN. Il faut bien       |\n entendu faire les ELIM necessaire entre tous les objets maillages      |\n changes en QUAF.                                                       |\n                                                                        |\n                                                                        |\n                                                                        |",
  },
  {
    name: "NBEL",
    url: "NBEL",
    documentation:
      "$$$$ NBEL     NOTICE  CHAT      11/09/12    21:17:21     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur NBEL                           Voir aussi : ELEM\n    --------------                                        NBNO  \n    RESU1 = NBEL  GEO1 (LMOTS1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur NBEL donne le nombre d'elements contenus dans une\ngeometrie. La recherche peut etre restreinte a certain(s) type(s)\nd'element(s) et le resultat est alors le nombre d'elements de chaque\ntype demande.\n\n    Commentaire :\n    _____________\n\n    GEO1   : geometrie (type MAILLAGE)\n\n    LMOTS1 : liste des types d'elements (type LISTMOTS)\n\n    RESU1  : nombre d'elements contenus dans la geometrie (type ENTIER)\n             liste des nombres d'elements correspondant aux types\n             demandes (type LISTENTI)\n\n    Exemple :\n    _________\n\n    LIST (NBEL MONOBJ1);  pour connaitre le nombre d'elements\n                         de l'objet MONOBJ1.",
  },
  {
    name: "NBNO",
    url: "NBNO",
    documentation:
      "$$$$ NBNO     NOTICE  CHAT      11/09/12    21:17:21     7124           \n                                             DATE     11/09/12\n\n    Operateur NBNO                           Voir aussi : NBEL\n    --------------  \n    ENTI1 = NBNO  GEO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur NBNO fournit le nombre de noeuds contenus dans une geo-\nmetrie.\n\n    Commentaire :\n    _____________\n\n    GEO1  : geometrie (type MAILLAGE)\n\n    ENTI1 : nombre de noeuds (type ENTIER)\n\n    Exemple :\n    _________\n\n    LIST (NBNO MONOBJ1);  pour connaitre le nombre de noeuds\n                         de l'objet MONOBJ1.",
  },
  {
    name: "NEG",
    url: "NEG",
    documentation:
      "$$$$ NEG      NOTICE  CHAT      11/09/12    21:17:22     7124           \n                                             DATE     11/09/12\n\n    Operateur NEG                            Voir aussi : EGA\n    -------------                                         <     >  \n                                                          <EG   >EG  \n                                                          ENTI FLOT  \n    LOG1 =  OBJET1  NEG  OBJET2 (FLOT1) ;\n\n                                    OBJET1=ENTIER,FLOTTANT,LISTENTI\n                                           MOT,TEXTE,POINT,LOGIQUE\n\n    Objet :\n    _______\n\n    L'operateur NEG compare les objets OBJET1 et OBJET2.\n\n    Commentaire :\n    _____________\n\n    OBJETi   : objets a comparer.\n               Les types autorises pour OBJET1 et OBJET2 sont :\n\n                              ENTIER\n                              FLOTTANT\n                              POINT\n                              LISTENTI\n                              MOT\n                              TEXTE\n                              LOGIQUE\n\n    FLOT1    : critere de comparaison (type FLOTTANT) entre deux\n               points ou deux flottants. Dans ce dernier cas, le\n               critere est egal a 0. par defaut.\n\n    LOG1     : resultat logique (type LOGIQUE) ayant pour valeur FAUX\n               si les deux objets sont egaux, VRAI sinon.\n\n    Remarque :\n    __________\n\n    Deux objets de type POINT sont dits \"egaux\" s'ils ont la meme\n    position dans l'espace. On peut imposer une tolerance  FLOT1 (type\n    FLOTTANT) egale par defaut au 1/10 eme des densites des points ou,\n    si celles-ci sont nulles, au 1/10 eme de la densite courante.\n\n    Si les objets sont des MOTs, il faut respecter l'ordre suivant :\n    LOG1 = NEG  MOT1  MOT2  ;\n    Dans la comparaison on ne tiendra pas compte des blancs situes a\n    la fin des mots. (EGA 'AA' 'AA   ') est VRAI.\n\n    Si on compare des scalaires (ENTIERS ou FLOTTANTS),\n    OBJET2 sera converti au type de OBJET1.",
  },
  {
    name: "NEUT",
    url: "NEUT",
    documentation:
      "$$$$ NEUT     NOTICE  CHAT      11/09/12    21:17:22     7124           \n                                             DATE     11/09/12\n  \n  Operateur NEUT                            Voir aussi :\n   --------------  \n       CHPO2 = NEUT  TAB1  CHPO1  ;\n\n\n        Objet\n       -------\n       Calcul du bilan electrique d'une solution chimique en tout point\n       d'un domaine.\n\n\n       Commentaires\n       ------------\n       TAB1 est un objet de type TABLE et de sous type chimi1 \n            (cf operateur CHI1)\n\n       CHPO1 nom d'un objet de type CHPOIN ayant une composante pour\n             chaque espece en solution, et contenant la concentration\n             de chaque espece en solution.\n\n       CHPO2 objet de type CHPOIN ayant deux composantes ANIO et CATI.\n             ANIO contient la concentration en anions.\n             CATI contient la concentration en cations.\n\n\n \n\n \n\n \n \n \n ",
  },
  {
    name: "NEWMARK",
    url: "NEWMARK",
    documentation:
      "$$$$ NEWMARK  NOTICE  MB234859  17/10/02    21:15:18     9577           \n                                             DATE     17/10/02\n                                             \n  Procedure NEWMARK                        Voir aussi :\n    -----------------  \n    CHPO1 CHPO2 = NEWMARK  CHPO3 CHPO4 RIG1 RIG2 RIG3 CHPO5 CHPO6 FLOT1\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule un increment de solution en dynamique\npas a pas par l'algorithme de Newmark centre.\n\n    Commentaire :\n    _____________\n\n    CHPO3 : champ de deplacements au debut du pas (type CHPOINT)\n\n    CHPO4 : champ de vitesses au debut du pas (type CHPOINT)\n\n    RIG1  : operateur dynamique (type RIGIDITE)\n\n    RIG2  : matrice de rigidite (type RIGIDITE)\n\n    RIG3  : matrice de masse (type RIGIDITE)\n\n    CHPO5 : champ de forces au debut du pas (type CHPOINT)\n\n    CHPO6 : champ de forces a la fin du pas (type CHPOINT)\n\n    FLOT1 : pas de temps (type FLOTTANT)\n\n    CHPO1 : champ de deplacements a la fin du pas (type CHPOINT)\n\n    CHPO2 : champ de vitesses a la fin du pas (type CHPOINT)\n\n    Remarque :\n    __________\n\n    Les arguments de la procedure NEWMARK doivent etre entres dans\nl'ordre indique dans la syntaxe.\n\n    L'expression de l'operateur RIG1 est la suivante :\n\n            RIG1 = RIG2 + AMOR1*(2/FLOT1) + RIG3*(4/FLOT1/FLOT1)\n\no\u00ba AMOR1 est la matrice d'amortissement .\n\n    Les vitesses doivent etre des champs dont les noms de composantes\nsont identiques a ceux de champs de deplacements .",
  },
  {
    name: "NLIN",
    url: "NLIN",
    documentation:
      "$$$$ NLIN     NOTICE  GOUNAND   21/06/02    21:17:18     11022          \n                                             DATE     21/06/02\n$X   NLIN (Construction de matrices elementaires)\n\n\n  Voir aussi :\n                                                           NAVI ININLIN\n\n\n      Operateur NLIN\n      ______________\n\n\n      RIG1 = 'NLIN' MOT1 MAIL1 (MAIL2) TAB1 TAB2 ...\n                    ...   |('EREF')| ('ERRJ') ('MATK') ('MREG') ...\n                          |('ERF1')|\n                    ...   |('CHPO')| MOT2 ;\n                          |('CHAM')|\n\n      Objet :\n      _______\n\n      L'operateur NLIN (Noyau LINeaire) cree une matrice correspondant \n      a la discretisation d'une forme bilineaire par une methode \n      d'elements finis scalaires.  \n\n      On aura :\n\n             ---      /    \n             \\        |   dN_s               dM_r\n      RIG1 = /        |  ------ d_qsl c_qrk ----- dOmega\n             ---      |   dx_l               dx_k\n           q,s,r,k,l  |\n                      / Omega\n\n      ou :  - Omega est le domaine d'integration de dimension n<=m,\n              inclus dans R^m, et {x_1,...,x_m} une base orthogonale \n              de R^m ;\n            - k, l sont des indices muets variant de 0 a m (ou n si \n              un des mots-cles 'EREF' ou 'ERF1' est specifie) avec\n              la convention que d/dx_0 est l'identite ;\n            - q varie de 1 a n_op, nombre d'operateurs a discretiser ;\n            - r varie de 1 a n_vp, nombre de variables primales ;\n            - s varie de 1 a n_vd, nombre de variables duales ;\n            - \\M^r (resp. \\N^r) sont les fonctions d'interpolation de \n              l'espace d'elements finis de la variable r (resp. s) ; \n            - c_qkr (resp. d_qsl) sont des multiplicateurs. Ils sont \n              obtenus par la multiplication de coefficients.\n              Un coefficient est obtenu par une loi de comportement \n              dependant de donnees connues.\n\n      MOT1     : objet de type MOT, nom d'une famille d'elements finis \n                 utilisee pour l'interpolation geometrique.\n\n      MAIL1    : objet de type MAILLAGE constitue d'elements de type\n                 QUAF, support de l'ensemble des espaces d'elements \n                 finis utilises. Si MAIL2 n'est pas donne, MAIL1 sert \n                 egalement de domaine d'integration Omega. \n\n      MAIL2    : objet optionnel de type MAILLAGE constitue d'elements \n                 surfaciques de type QUAF. Ce maillage surfacique doit \n                 s'appuyer sur MAIL1 et sert de domaine d'integration \n                 Omega.\n\n      TAB1     : objet de type TABLE contenant les informations liees \n                 aux variables primales.\n\n      TAB2     : objet de type TABLE contenant les informations liees \n                 aux variables duales.\n\n      EREF     : mot-cles indiquant que les integrations sont \n      ERF1       effectuees sur les elements de reference ou sur les\n                 elements de reference dont le volume a ete normalise\n                 a 1.\n\n      ERRJ     : mot-cle indiquant que, si le signe du jacobien change\n                 sur un element, l'operateur n'emet pas une erreur\n                 mais renvoie un entier (code d'erreur).\n\n      MREG     : mot-cle indiquant que MAIL1 est constitue d'elements\n                 identiques (orientation comprise).\n\n      CHAM     : mot-cle indiquant que NLIN renvoie des objets de type\n                 MCHAML (forces non assemblees) au lieu de CHPOINT le\n                 cas echeant (cf. note 1). \n\n      MOT2     : Famille de methode d'integration a utiliser.\n      \n      RIG1     : objet de type RIGIDITE (ou MATRIK si le mot-cle MATK\n                 est utilise) contenant la matrice de l'operateur \n                 discretise.\n                 (ou objet de type ENTIER si mot-cle ERRJ)\n\n       \n      Commentaires :\n      ______________\n\n          Un espace de discretisation est un regroupement \n          coherent d'elements finis (une \"famille\"). Les \n          familles disponibles, qui ne comprennent pas forcement\n          toutes les formes geometriques d'elements, sont :\n          * 'CSTE' : constant par element  (L2 degre 0) ;\n          * 'LINM' : lineaire par morceaux (L2 degre 1) ;\n          * 'LINE' : lineaire              (H1 degre 1) ;\n          * 'LINC' : lineaire non conforme    (degre 1) ;\n          * 'LINB' : lineaire + bulle      (H1 degre 1) ;\n          * 'QUAI' : quadratique incomplet (H1 degre 2) ;\n          * 'QUAD' : quadratique           (H1 degre 2) ;\n          * 'QUAF' : quadratique + bulle   (H1 degre 2) ;\n          * 'CUBI' : cubique               (H1 degre 3) ;\n          * 'BULL' : bulle                (H10 degre 0).\n\n          Une famille de methodes d'integration est un regroupement \n          coherent de methodes d'integration. Les familles \n          disponibles, qui ne comprennent pas forcement toutes les \n          formes geometriques d'elements, sont :\n          * 'GAUi' : methodes d'integration type gauss d'ordre \n                     au moins i (i compris entre 1 et 7) ;\n          * 'GAPi' : methodes d'integration type gauss produit\n                     d'ordre au moins i (i valant 3, 5 ou 7).\n          * 'NC1 ' : methodes d'integration type Newton-Cotes\n                     d'ordre au moins 1 \n                     (points d'integration : sommet des elements)\n          * 'GAMi' : points de Gauss pour la masse (interpolation\n                     d'ordre i) (i compris entre 1 et 2)\n          * 'GARi' : points de Gauss pour la rigidite (interpolation\n                     d'ordre i) (i compris entre 1 et 2)\n\n\n          Une table contenant les informations liees aux variables\n          de l'espace primal (ou dual) est organisee de la fa\u00e7on \n          suivante :\n          \n          A . 'NUMOP'  = n_op   ; nombre d'operateurs    (indice q)\n          A . 'NUMVAR' = n_vp   ; nombre de variables    (indice r)\n          A . 'NUMDAT' = n_dp   ; nombre de donnees      (indice v)\n          A . 'NUMCOF' = n_cp   ; nombre de coefficients (indice w)\n          A . 'NUMDER' = m      ; dimension de l'espace d'integration\n                                    (indices k variant de 0 a m)\n          * Variable r :\n          \n          A . 'VAR' . r . 'NOMDDL' = MOT ou LISTMOTS ;  nom(s) des ddls\n          A . 'VAR' . r . 'DISC'   = MOT ;  espace de discretisation\n\n          * Donnee v :\n\n          A . 'DAT' . v . 'NOMDDL' = MOT ou LISTMOTS ;  nom(s) des ddls\n          A . 'DAT' . v . 'DISC'   = MOT ;  espace de discretisation\n          A . 'DAT' . v . 'VALEUR' = CHPOINT\n                                  ou MCHAML aux noeuds de MAIL1\n                                  ou FLOTTANT\n                                  ou ENTIER  valeurs des ddl\n          * Coefficient w\n\n          A . 'COF' . w . 'COMPOR' = MOT ; nom de la loi de comportement\n          A . 'COF' . w . 'LDAT'   = ENTIER ou LISTENTI ;  numero(s) v des\n                                donnees dont depend la loi de comportement\n          \n          * Multiplicateur c_qrk :\n\n          A . q . r . k = ENTIER ou LISTENTI ; numero(s) w des coefficients dont\n                                     la multiplication donne c_qrk\n                                     (un LISTENTI vide ou un ENTI egal a\n                                     0 implique c_qrk = 1 ; un w negatif\n                                     indique une division par le\n                                     coefficient de numero |w|)\n\n          Une telle table peut etre initialisee par la procedure\n          ININLIN.\n\n          Les noms des lois de comportement actuellement implementees \n          sont les suivants :\n          * 'RIEN' : fonction de 0 donnee valant 1 ;\n          * 'IDEN' : fonction de 1 donnee x valant x ;\n          * 'RAYS' : fonction de 3 donnees epsi, sigma, T valant \n                     epsi * sigma * T^3 ;\n          * 'MUR ' : fonction de 4 donnees T1, T2, V1, V2  valant \n                     V1 si T1 > T2 et V2 sinon ;\n          * 'SUTH' : fonction de 3 donnees T, Tref, S valant \n                     (T/Tref)^3/2 ((Tref+S)/(T+S)) \n                     (loi de Sutherland) ;\n          * 'D/DXi' : fonction de 1 donnee T valant dT/dx_i \n                     (fonction composante i du gradient) ;\n          * 'DIV'  : fonction de m donnees (u_1,...u_m) \n                     valant \\som_{i=1,m} du_i/dx_i \n                     (fonction divergence) ;\n          * 'TAILDIRE' : fonction de m donnees (u_1,...u_m) donnant \n                         la taille de l'element courant dans la \n                         direction definie par (u_1,...u_m).\n          * 'MUSTABij' : fonction de m+3 donnees \\rho, \\mu,\n                         (u_1,...u_m), Pe_c\n                         donnant les composantes d'un vecteur v_j \n                         (j variant de 1 a m) permettant de construire \n                         un tenseur de viscosite numerique T_jk=v_j v_k\n                         afin de stabiliser une equation de transport-\n                         diffusion.\n                         Si j=0, on obtient une valeur scalaire \n                         correspondant a une viscosite numerique.\n                         \\rho est le coefficient du terme de transport.\n                         \\mu est le coefficient du terme de diffusion.\n                         (u_1,...u_m) est la vitesse de transport.\n                         Pe_c est le Peclet critique (valeur courante :\n                         2).\n                         i varie de 1 a 3 et designe la methode de\n                         decentrement :\n                         * i = 1 : decentrement amont\n                         * i = 2 : decentrement SUPG (critical approx)\n                         * i = 3 : decentrement SUPG (doubly asymptotic)\n          * 'VNORi'    : fonction de 0 donnee donnant la ieme \n                         composante d'un vecteur unitaire  normal a une\n                         surface.\n          * 'X1'       : fonction de 0 donnee donnant la valeur de la\n                         premiere coordonnee x_1 (uniquement disponible\n                         en mode axisym\u00e9trique). \n\n\n      Notes :\n      _______\n          \n      1)  Il est possible de preciser la valeur des variables primales\n          et/ou duales avec la meme syntaxe que pour les donnees :\n\n          A . 'VAR' . r . 'VALEUR' = CHPOINT \n                                  ou MCHAML aux noeuds de MAIL1\n                                  ou FLOTTANT\n                                  ou ENTIER             valeurs des ddl\n\n          Si on donne la valeur des variables primales (resp. duales),\n          RIG1 est alors un objet de type CHPOINT dual (resp. primal).\n          Si le mot-cle 'CHAM' est donne et que l'espace dual (resp.\n          primal) est de type 'LINE', 'QUAI' ou 'QUAF' alors RIG1 est\n          un objet de type MCHAML defini aux noeuds, representant une\n          force non assemblee.\n\n          Si on donne les valeurs des variables primales et duales,\n          RIG1 est un objet de type CHPOINT de composante 'SCAL', \n          donnant la valeur de l'integrale par element.\n          Si le mot-cle 'CHAM' est donne alors RIG1 est un objet de type\n          MCHAML defini aux noeuds de MAIL1, constant par element.\n\n      2)  Si une donnee ou a une variable a une valeur constante :\n\n          A . | 'VAR' . r | . 'VALEUR' = FLOTTANT ou ENTIER\n              | 'DAT' . v |\n\n          il n'est pas necessaire de donner de donner les indices\n          'NOMDDL' et 'DISC' associes.\n\n      3)  Pour un coefficient w, la loi de comportement est 'IDEN' par\n          defaut, on peut donc omettre la ligne :\n\n          A . 'COF' . w . 'COMPOR' = 'IDEN' ;\n\n      4)  Pour un coefficient w avec une loi de comportement a 0 donnee,\n          on peut omettre la ligne :\n          \n          A . 'COF' . w . 'LDAT'   = 'LECT' ;\n\n      5)  MAIL1 peut etre un maillage standard (lineaire ou quadratique\n          non QUAF) sous les conditions suivantes :\n          - MAIL2 ne doit pas etre donne ;\n          - tous les espaces de discretisation utilises doivent pouvoir\n            s'appuyer uniquement sur les noeuds de MAIL1.\n      ",
  },
  {
    name: "NLOC",
    url: "NLOC",
    documentation:
      "$$$$ NLOC     NOTICE  AM        17/09/25    21:15:17     9566           \n                                             DATE     17/09/25\n\n    Operateur NLOC (NON LOCAL)               Voir aussi : CONN\n    --------------------------                            PASAPAS  \n    CHAM1 = NLOC  ( | 'MOYE' | )  CHAM2 CHAM3 ;\n                    | 'SB  ' |\n \n\n\n    Objet :\n    _______\n \n    L'operateur NLOC (Non LOCal) construit a partir d'un MCHAML CHAM2,\n    d'un MCHAML CHAM3 de sous-type 'CONNECTIVITE NON LOCAL', cree a \n    l'aide de l'operateur CONNEC, LE MCHAML CHAM1 construit de la\n    meme maniere que CHAM2.\n    La methode de regularisation a utiliser est donnee par le mot-cle \n    'MOYE' (methode par defaut, si aucun mot-cle n'est donne) ou \n    'SB  ' (methode stress-based).\n\n    Methode 'MOYE' :\n    Les composantes de CHAM2 dont le nom se trouve dans LISMO1 sont\n    moyennees, les autres sont reproduites a l'identique.\n\n    Methode 'SB  ' :\n    La composante de CHAM2 dont le nom se trouve en premier dans LISMO1\n    est moyennee. Le champ CHAM2 doit contenir le champ \u00e0 moyenner, \n    l'etat de contrainte du milieu regularise ainsi que des caracteristiques\n    (contrainte limite de traction, taille moyenne de l'\u00e9l\u00e9ment).\n\n\n    Commentaire :\n    _____________\n\n    C'est un limiteur de localisation (de la meme maniere que\n    l'utilisation du second gradient ou de milieux de COSSERAT).\n\n    La methode 'MOYE' permet d'obtenir des resultats plus objectifs pour \n    les calculs non lineaires et en particulier en cas d'ecrouissage negatif\n    (adoucissement) en fournissant un moyen de s'affranchir des problemes \n    de dependance du maillage.\n\n    La methode de r\u00e9gularisation 'SB  ' se base sur la m\u00e9thode nonlocale\n    (NLOC) en introduisant l'influence de l'etat de contrainte dans le\n    milieu regularise sur les interactions nonlocales. Cette methode \n    permet d'ameliorer la description du champ d'endommagement a la rupture \n    ainsi que proche de bords libres comparee a la methode originale.\n    Plus de details peuvent etre trouves dans la publication suivante\n    qui sert egalement de reference pour citer ce travail :\n      Giry C., Dufour F., Mazars M. Stress-based nonlocal damage model.\n      International Journal of Solids and Structures 48 (2011) 3431-3443\n \n \n    CHAM2  : ('MOYE') MCHAML contenant minima les composantes a moyenner\n             ('SB  ') MCHAML contenant le champ a regulariser,le champ de \n                      contraintes principales, le champ de contrainte \n                      limite de traction et le champ de taille moyenne\n                      des elements\n \n    CHAM3  : MCHAML de type 'CONNECTIVITE NON LOCAL' construit par CONNEC\n \n \n    CHAM1  : MCHAML resultat\n \n \n    Attention :\n    ___________\n \n      Lorsqu'une composante de CHAM2 est a moyenner, son support\n      geometrique doit etre contenu dans celui de CHAM3 sinon on sort\n      avec un message d'erreur.\n ",
  },
  {
    name: "NNOR",
    url: "NNOR",
    documentation:
      "$$$$ NNOR     NOTICE  CB215821  18/04/04    21:15:06     9798           \n                                             DATE     18/04/04\n\n    Operateur NNOR                           Voir aussi : MAX1 NORM\n    --------------  \n    Syntaxe 1 : Norme Infinie\n       OBJET2 = NNOR  ('INFI')  OBJET1  ( | ('AVEC') | LMOTS1 )  ...\n                                          |  'SANS'  |\n\n                          ...  ('RORF' VAL1 'CREF' VAL2 'LCAR' VAL3)  ;\n\n    Syntaxe 2 : Norme Euclidienne\n       OBJET2 = NNOR   'EUCL'   OBJET1   (RIGID1)  ;       \n\n\n    Objet :\n    _______\n\n    L'operateur NNOR rend un objet  unitaire au sens de la norme infinie\n    (par defaut) ou de la norme Euclidienne.\n    \n    \n    La norme infinie (ou norme sup) d'un champ (mot-cle 'INFI')\n    correspond a sa plus grande valeur, tous noeuds et toutes\n    composantes confondues :\n\n      + on peut limiter la recherche de la plus grande valeur a un\n        sous-ensemble de l'objet en donnant une liste de composantes a\n        considerer (mot-cle 'AVEC') ou a exclure (mot-cle 'SANS')\n    \n      + on peut redimensionner les composantes 'P' et 'PI' avant la\n        recherche du maximum en fournissant les coefficients 'RORF',\n        'CREF' et 'LCAR' du modele LIQUIDE correspondant\n\n        \n    La norme Euclidienne (ou norme 2) d'un champ (mot-cle 'EUCL')\n    correspond a la racine carre de la somme des carres des valeurs\n    en chaque noeud et en chaque composante. Contrairement a la\n    norme sup, la norme 2 est associee a une forme quadratique dont\n    on peut eventuellement fournir la matrice (symetrique definie\n    positive).\n\n\n    Commentaire :\n    _____________\n\n    OBJET1 : objet a normer (type CHPOINT, TABLE de sous-type\n                            'BASE_MODALE' ou 'BASE_DE_MODES')\n\n    OBJET2 : objet norme de meme type que OBJET1\n\n    LMOTS1 : liste des composantes a considerer ou a exclure (type\n             LISTMOTS)\n\n    'AVEC' : mot-cle indiquant que l'on regarde uniquement, dans\n             la recherche de maximum, les valeurs associees aux\n             composantes citees dans LMOTS1 (option par defaut)\n\n    'SANS' : mot-cle indiquant que l'on exclut, dans la recherche du\n             maximum, les valeurs associees aux composantes citees\n             dans LMOTS1\n\n    VAL1 | : valeurs des coefficients 'RORF', 'CREF', 'LCAR' donnees\n    VAL2 |   dans l'operateur MATE (materiau liquide ou materiau\n    VAL3 |   homogeneise fluide-structure)\n    \n    RIGID1 : matrice symetrique definie positive associee a la forme\n             quadratique (donc a la norme)\n            ",
  },
  {
    name: "NOCOMCHI",
    url: "NOCOMCHI",
    documentation:
      "$$$$ NOCOMCHI NOTICE  CHAT      11/09/12    21:17:23     7124           \n                                             DATE     11/09/12\n \n    Procedure NOCOMCHI                       Voir aussi : CHI1 CHI2\n    ------------------                                    NOESPCHI  \n   MO4 MO3 ENT2  = NOCOMCHI TAB1 MO1  <MO2> <ENT1> ;\n\n\n        Objet\n        -----\n        Tous les composants chimiques utilises par CHI1 et CHI2 ayant:\n        - un nom chimique (dont le nombre de lettres est variable)\n        - un numero d'identification dans la base de donnees.\n        - un nom de 4 lettres attribue par le code.\n        Cette procedure permet de retrouver ces 3 elements lorsqu'un\n        seul est connu.\n\n        Commentaires\n        -------------\n\n        TAB1 est une table issue de CHI1.\n\n        MO1  mot cle\n\n           'NUMCOMP'  ENT1 sera le numero d'identification du composant.\n\n           'NOMINT' MO2 sera le nom attribue par le code a ce composant\n\n           'NOMCOMP'  MO2 sera le nom chimique ( tel qu'il est dans la\n                      base de donnees)\n\n        en sortie nous aurons:\n\n            MO4  nom chimique\n            MO3  nom attribue par le code\n            ENT2 numero d'identification",
  },
  {
    name: "NOEL",
    url: "NOEL",
    documentation:
      "$$$$ NOEL     NOTICE  CHAT      11/09/12    21:17:23     7124           \n                                             DATE     11/09/12\n\n  Operateur NOEL                          Voir aussi :\n     --------------  \n    CHP2 = NOEL MOD1 CHP1 <MOT> ;\n\n\n\n\n    Objet :\n    _______\n\n    L'operateur NOEL transforme un CHPOINT definit sur les points\n    SOMMET en un CHPOINT definit sur les points interieurs a l'element,\n    CENTRE ou CENTREP1.\n    Cet operateur necessite la donnee d'un objet modele 'NAVIER_STOKES'.\n\n    Commentaires :\n    ______________\n\n    MOD1    : Objet de type MMODEL 'NAVIER_STOKES'\n    CHP1    : Objet de type CHPOINT (points SOMMET)\n    CHP2    : Objet de type CHPOINT, CHPOINT resultat\n    MOT     : Objet de type MOT valant : CENTRE ou CENTREP1 ou MSOMMET\n              par defaut on cree un CHPOINT CENTRE\n\n\n    Complements d'information :\n    ___________________________\n\n    NOEL est la transformation inverse de ELNO.\n\n    Le cas MSOMMET consiste seulement a faire une reduction du CHAMP\n   (operateur REDU) sur les points MSOMMET de l'element. Il y a\n   toujours continuite entre elements.",
  },
  {
    name: "NOESPCHI",
    url: "NOESPCHI",
    documentation:
      "$$$$ NOESPCHI NOTICE  CHAT      11/09/12    21:17:24     7124           \n                                             DATE     11/09/12\n \n    Procedure NOESPCHI                       Voir aussi : CHI1 CHI2\n    ------------------                                    NOCOMCHI  \n    MO3 ENT2  = NOESPCHI TAB1  <MO2> <ENT1> ;\n\n\n        Objet\n        -----\n        Toutes les especes chimiques utilises par CHI1 et CHI2 ayant:\n        - un numero d'identification dans la base de donnees.\n        - un nom de 4 lettres attribue par le code.\n        Cette procedure permet de retrouver le nom attribue par le code\n        connaissant le numero d'identification et reciproquement.\n\n        Commentaires\n        -------------\n\n        TAB1 est une table issue de CHI1.\n\n        ENT1 sera le numero d'identification de l'espece.\n\n        MO2 sera le nom attribue par le code a cette espece.\n\n\n        en sortie nous aurons:\n\n            MO3  nom attribue par le code\n            ENT2 numero d'identification",
  },
  {
    name: "NOEU",
    url: "NOEU",
    documentation:
      "$$$$ NOEU     NOTICE  CHAT      11/09/12    21:17:24     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur NOEUD                          Voir aussi :\n    ---------------  \n\n    Objet :\n    _______\n\n    L'operateur NOEUD permet d'identifier un noeud dans un maillage ou\npermet de connaitre le numero actuel d'un noeud d'apres son nom.\n\n    Deux syntaxes sont possibles :\n\n    ----------------------\n    |  1ere possibilite  |\n    ----------------------\n\n    POIN1 = NOEUD N1 ;\n\n    Objet :\n    _______\n\n    L'operateur NOEUD permet d'identifier le N1-ieme noeud du maillage.\nLes numeros de noeuds apparaissent dans les commandes LIST et TRAC NOEUD\n\n    Exemple :        P = NOEU 321 ;\n    _________\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n    ENTI1 = NOEUD MOT1 ;\n\n    Objet :\n    _______\n\n    L'operateur NOEUD permet de connaitre le numero ENTI1 (type ENTIER)\nd'un noeud d'apres son nom MOT1 (type POINT)\n\n    ATTENTION :\n    ___________\n\n    Il s'agit du numero actuel, qui peut etre modifie par la suite.",
  },
  {
    name: "NOMC",
    url: "NOMC",
    documentation:
      "$$$$ NOMC     NOTICE  CHAT      11/09/12    21:17:24     7124           \n                                             DATE     11/09/12\n\n  Operateur NOMC                           Voir aussi :\n    --------------  \n    CHPO2 = NOMC  | MOT1              | CHPO1 ( 'NATU' |'INDETER'\n                  | LISTMOT1 LISTMOT2 |                |'DIFFUS'\n                                                       |'DISCRET' ) ;\n\n    CHE2 = NOMC  | MOT1              | CHE1  ;\n                 | LISTMOT1 LISTMOT2 |                \n\n\n\n    Objet :\n    _______\n\n    L'operateur NOMC cree un nouveau champ par points, ou champ par \n    elements, en changeant eventuellement le nom de certaines composantes.\n    Le champ par elements ne doit comporter qu'un constituant.\n    On utilise la syntaxe specifiant un mot dans les cas ou le champ par\n    points, ou le champ par elements, possede une composante. Dans les autres\n    cas, on precise la liste des composantes a renommer selon une\n    seconde liste.\n\n    Commentaire :\n    _____________\n\n    CHPO1   : champ par points (type CHPOINT)\n\n    CHE1    : champ par elements (type MCHAML)\n\n    MOT1    : nouveau nom attribue a la composante (type MOT)\n\n    LISMOT1 : liste des composantes a renommer (type LISTMOTS)\n\n    LISMOT2 : liste des nouvelles composantes (type LISTMOTS)\n\n    CHPO2   : objet resultat (type CHPOINT)\n\n    CHE2   : objet resultat (type MCHAML)\n\n    Remarques :\n    ___________\n\n    1. Les noms de composantes font 4 caracteres.\n\n    2. La liste LISMOT1 des composantes a remplacer dans \nCHPO1 peut n'etre qu'une sous-liste de la liste de toutes les composantes \nde CHPO1. La i-eme composante de LISMOT1 sera remplacee par la i-eme \ncomposante de LISMOT2 (ces deux listes doivent avoir la meme longueur, \n      celle-ci etant inferieure ou egale au nombre de composantes).",
  },
  {
    name: "NOMM",
    url: "NOMM",
    documentation:
      "$$$$ NOMM     NOTICE  PV        13/12/22    21:15:00     7894           \n                                             DATE     13/12/22\n\n\n    Directive NOMM\n    --------------\n                                                          \n    NOMM LE_NOM OBJET  ;\n\n\n    Objet :\n    _______\n\n    La directive NOMMer permet de donner un nom \u00e0 l'objet OBJET.\n\nSi LE_NOM d\u00e9signe un MOT, c'est la valeur de ce MOT qui sera le nom\nde l'objet. Sinon, ce sera LE_NOM.",
  },
  {
    name: "NON",
    url: "NON",
    documentation:
      "$$$$ NON      NOTICE  CHAT      11/09/12    21:17:24     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur NON                            Voir aussi :\n    -------------  \n    LOG1  =  NON  LOG2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur NON est la negation de la proposition logique LOG2 (type\nLOGIQUE). Le resultat LOG1 est de type LOGIQUE.",
  },
  {
    name: "NORM",
    url: "NORM",
    documentation:
      "$$$$ NORM     NOTICE  CHAT      11/09/12    21:17:25     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur NORM                           Voir aussi :\n    --------------  \n    FLOT1  =  NORM  VEC1  ;\n\n\n    Objet :\n    _______\n\n    L'operateur NORM calcule la norme FLOT1 (type FLOTTANT) du\nvecteur VEC1 (type POINT).",
  },
  {
    name: "NORMALIM",
    url: "NORMALIM",
    documentation:
      "$$$$ NORMALIM NOTICE  MB234859  17/10/02    21:15:19     9577           \n                                             DATE     17/10/02\n\n  Procedure NORMALIM                       Voir aussi :\n    ------------------  \n    LREEL1 EVOL1 = NORMALIM EVOL2 (FLOT1)\n\n\n    objet :\n    -------\n\n    La procedure NORMALIM permet de generer les fonctions normees\n    EVOL1 (contenant N courbes) associees a EVOL2 (contenant N\n    courbes). LREEL1 (contenant N FLOTTANT) contient la norme de\n    chaque courbes de EVOL1.\n\n\n    options :\n    ---------\n\n    La norme introduite est par defaut la norme L2 evaluee a l'aide\n    de l'operateur SOMM. Si le FLOTTANT FLOT1 est introduit, on se\n    trouve dans le cas d'une analyse en ondelette et la norme est\n    determinee sur base d'une echantillonnage de periode FLOT1.",
  },
  {
    name: "NORV1",
    url: "NORV1",
    documentation:
      "$$$$ NORV1    NOTICE  CHAT      11/09/12    21:17:25     7124           \n                                             DATE     11/09/12\n                                          \n \n\n  Procedure NORV1                               Voir aussi :\n    ---------------  \n      CETTE PROCEDURE A ETE MISE GRACIEUSEMENT                           \n     A DISPOSITION DE LA COMMUNAUTE  CAST3M \n       PAR  F. DUPRAT (LMDC - INSA Toulouse)\n\n\n      Cette procedure est appelee par la procedure HASOFER",
  },
  {
    name: "NOTI",
    url: "NOTI",
    documentation:
      "$$$$ NOTI     NOTICE  CHAT      11/09/12    21:17:25     7124           \n                                             DATE     11/09/12\n\n    Directive NOTICE                         Voir aussi : INFO\n    ----------------  \n    NOTICE   | GIBI ;\n             | CASTEM2000 ;\n\n\n    Objet :\n    _______\n\n    La directive NOTICE permet d'obtenir respectivement la notice\nd'emploi de GIBI ou CASTEM2000.\n\n    Remarque :\n    __________\n\n    Cette notice s'imprime sur l'unite logique (6 par defaut)\ndefinie par la directive OPTION :\n\n               OPTION IMPR INUM ;",
  },
  {
    name: "NOUV",
    url: "NOUV",
    documentation:
      "$$$$ NOUV     NOTICE  PV        21/10/23    21:15:01     11141          \n                                             DATE     21/10/23\nDocumentation Generale sur Cast3M :\n  http://www-cast3m.cea.fr/index.php?xml=maj2011\n\nLa version de Cast3M utilisee, COURANTE ou MODIFIEE, est desormais indiquee a l'execution.\n\n\n***********************************************************************\n\n$$$$\n\n \n \n \n ",
  },
  {
    name: "NS",
    url: "NS",
    documentation:
      "$$$$ NS       NOTICE  CHAT      11/09/12    21:17:26     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur NS                             Voir aussi :\n    ------------  \n    SYNTAXE ( EQEX ) :   Cf operateur EQEX\n    __________________\n\n  1/ Formulation non conservative\n\na/\n      'OPER'  'NS'   ro un mu              'INCO' 'UN'\n\nb/\n      'OPER'  'NS'   nu                    'INCO' 'UN'\n      'OPER'  'NS'   nu  s                 'INCO' 'UN'\n\n     approximation de Boussinesq :\na/\n      'OPER'  'NS'   ro un mu  gb tn tref  'INCO' 'UN'\n\nb/\n      'OPER'  'NS'   nu gb tn tref         'INCO' 'UN'\n\n  2/ Formulation conservative (dilatable)\n\n      'OPER'  'NS'   mu un    'INCO' 'GN'\n      'OPER'  'NS'   mu un S  'INCO' 'GN'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n Cet operateur discretise les termes de diffusion, de convection et\neventuellement le terme source de l'equation de Navier - Stokes.\n Pour une dicretisation element finis EFM1 (algorithme explicite),\nil calcule l'increment.\n Pour une dicretisation element finis EF (algorithme implicite ou semi\nimplicite), il calcule les matrices elementaires et les second membres.\n\n Suivant l'option les equations sont traitees sous forme conservative\nou non conservative.\n\n1/ Formulation non conservative\n\na/\nro(du/dt + u Grad u) = mu Lapl u -  Grad p  < + s (=S) >\n   -----                            ------  < + ro*g*beta(T-Tref) >\n\nb/\ndu/dt + u Grad u  = nu Lapl u - 1/ro Grad p  < + s (=S/ro) >\n-----                           -----------  < + g*beta(T-Tref) >\n\n2/ Formulation conservative (avec la vitesse massique comme inconnue).\n\ndG/dt + Div ( u X G ) = mu (Lapl u + 1/3 (Grad Div u))\n-----\n                                               - Grad p  < + S >\n                                                 ------\n(Les termes soulignes ne sont pas discretises dans NS voir procedure EXEC)\n\n    Commentaires\n    ____________\n\n ro,nu,mu  densite, viscosite cinematique (resp. dynamique) moleculaire\n         FLOTTANT ou CHPOINT SCAL CENTRE ou CHPOINT SCAL SOMMET ou MOT\n s,S     Source volumique de quantite de mouvement. (s=S/ro)\n         POINT ou CHPOINT VECT CENTRE ou MOT\n\n approximation de Boussinesq :\n gb      Coefficient de flottabilite (g*beta ou g est l'accelleration\n         de la pesanteur et beta le coefficient de dilatabilite)\n         POINT ou CHPOINT VECT CENTRE ou MOT\n tn      Champ de temperature\n         CHPOINT SCAL SOMMET ou MOT\n tref    temperature de reference\n         FLOTTANT ou CHPOINT SCAL SOMMET ou MOT\n\n un      Champ de vitesse transportant\n         CHPOINT VECT SOMMET ou MOT\n gn      Champ de vitesse massique\n         CHPOINT VECT SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    Options : (EQEX)\n    _________\n\n\n\n 1/ Discretisation EFM1 :  OPTI EFM1\n ___________________________________\n\n Algorithme Explicite\n\n La discretisation des termes de convection peut etre :\n\n centree                              CENTREE\n decentree                            SUPG\n decentree avec capture de choc       SUPGCC   Option par defaut\n\n Formulation non conservative         NOCONS   Option par defaut\n Formulation conservative             CONS\n\n 2/ Discretisation EF :  OPTI EF\n _______________________________\n\n Algorithme IMPLICITE    OPTI IMPL ou SEMI omega\n\n La discretisation des termes de convection peut etre :\n\n centree                              CENTREE\n decentree                            SUPG\n decentree avec capture de choc       SUPGCC   Option par defaut\n tenseur visqueux (ordre 2 en temps)  TVISQ\n\n Formulation non conservative         NOCONS   Option par defaut",
  },
  {
    name: "NSCLIM",
    url: "NSCLIM",
    documentation:
      "$$$$ NSCLIM   NOTICE  CHAT      11/09/12    21:17:26     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure NSCLIM                         Voir aussi :\n    ----------------  \n\n OBJ1 = NSCLIM tit TIMPR NOMQ  val1 <'SWIRL' val2> NCO Tps\n                    MODG MODC <OBJ2> NOMG\n                   < NOMT sgm portee>              ;\n\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure creant un CHPOIN pour les conditions limites NAVIER_STOKES\n\n\n    Commentaires\n    ____________\n\n   tit    CHAI         titre\n   TIMPR  LOGIQUE      impressions et trace de controle si VRAI\n   NOMQ   MOT          Type de condition limite  a choisir parmi\n           DEBIT        Debit impose    (Debit entrant >0)\n         <'SWIRL' val2> swirl impose\n         val2:  FLOTTANT  pourcentage par rapport a la vitesse debitante\n           VITESSE      Vitesse imposee (Vitesse entrante >0)\n           TEMPERATURE  Temperature imposee (ou scalaire)\n           ADHERENCE    u=v=w=0     imposees\n           FPAROI       u.n=0  et Fparoi\n           SYMETRIE     u.n=0 et rien si vitesse rien si Temperature\n           SORTIE       -> p=0\n           PRESSION     -> p=p0\n\n   VAL1   FLOTTANT      si constant en temps\n       ou EVOLUTION     sinon\n\n   NCO    MOT          nom de la composante sur laquelle porte la\n                       condition limite\n   TPS    FLOTTANT     Temps\n   MODG   MODELE       geometrie globale (NAVIER_STOKES)\n   MODC   MODELE       geometrie sur laquelle porte la condition limite\n   <OBJ2> CHPOIN      CHPOIN facultatif contenant les conditions limites\n                      a modifier\n\n   NOMG   MOT          = STRICTEMENT\n                         LARGEMENT\n\n   NOMT   MOT          = SGE\n                         XXXXXXXXX\n\n\n    Exemple\n    _______\n\n rtf.'CLIM' = NSCLIM tit TIMPR 'TEMPERATURE' Tinj  'TF' Tps\n                    $vtf $esort (rtf.'CLIM') 'STRICTEMENT'   ;",
  },
  {
    name: "NSKE",
    url: "NSKE",
    documentation:
      "$$$$ NSKE     NOTICE  CHAT      11/09/12    21:17:26     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur NSKE                           Voir aussi :\n    --------------  \n\n    SYNTAXE ( EQEX ) :   Cf operateur EQEX\n    __________________\n\n  1/ Cas incompressible\n\n      'OPER'  'NSKE'   nu nut         'INCO' 'UN' 'KN' 'EN'\n      'OPER'  'NSKE'   nu nut s       'INCO' 'UN' 'KN' 'EN'\n\n     approximation de Boussinesq :\n      'OPER'  'NSKE'   nu nut gb tn tref 'INCO' 'UN' 'KN' 'EN'\n\n  2/ Cas compressible (dilatable)\n\n      'OPER'  'NSKE'   ro mu mut un    'INCO' 'GN' 'KN' 'EN'\n      'OPER'  'NSKE'   ro mu mut un S  'INCO' 'GN' 'KN' 'EN'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n Cet operateur discretise les termes de diffusion, de convection et\neventuellement le terme source des equations de Navier - Stokes\ncouplees au modele de turbulence K-epsilon, et calcule l'increment pour\nun algorithme explicite.\n\n Suivant l'option les equations sont traitees sous forme conservative\nou non conservative.\n\n1/ Formulation non conservative\n\ndu/dt + u Grad u  = (nu+nut) Lapl u - 1/ro Grad p  < + s (=S/ro) >\n-----                                 -----------  < + g*beta(T-Tref) >\n\n2/ Formulation conservative (avec la vitesse massique comme inconnue).\n\ndG/dt + Div ( u X G ) = (mu+mut)(Lapl u + 1/3 (Grad Div u))\n-----\n                                               - Grad p  < + S >\n                                                 ------\n(Les termes soulignes ne sont pas discretises dans NSKE voir procedure EXEC)\n\n    Commentaires\n    ____________\n\n ro      densite\n         FLOTTANT ou CHPOINT SCAL CENTRE ou MOT\n nu,mu   viscosite cinematique (resp. dynamique) moleculaire\n         FLOTTANT ou CHPOINT SCAL CENTRE ou MOT\n nut,mut viscosite cinematique (resp. dynamique) turbulente\n         CHPOINT SCAL CENTRE ou MOT\n le champ de viscosite turbulente calcule dans NSKE est restitue dans\n nut ou mut\n s,S     Source volumique de quantite de mouvement. (s=S/ro)\n         POINT ou CHPOINT VECT CENTRE ou MOT\n\n approximation de Boussinesq :\n gb      Coefficient de flottabilite (g*beta ou g est l'acceleration\n         de la pesanteur et beta le coefficient de dilatabilite)\n         POINT ou CHPOINT VECT CENTRE ou MOT\n tn      Champ de temperature\n         CHPOINT SCAL SOMMET ou MOT\n tref    temperature de reference\n         FLOTTANT ou CHPOINT SCAL SOMMET ou MOT\n\n un      Champ de vitesse transportant\n         CHPOINT VECT SOMMET ou MOT\n gn      Champ de vitesse massique\n         CHPOINT VECT SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    Options : (EQEX)\n    _________\n\n La discretisation des termes de convection peut etre :\n\n centree                              OPTION CENTREE\n decentree                            OPTION SUPG\n decentree avec capture de choc       OPTION SUPGCC   Option par defaut\n tenseur visqueux (ordre 2 en temps)  OPTION TVISQ\n\n Formulation non conservative         OPTION NOCONS   Option par defaut\n Formulation conservative             OPTION CONS\n\n Formulation EFM1                     OPTION EFM1     Option par defaut\n\n \n \n \n ",
  },
  {
    name: "NTAB",
    url: "NTAB",
    documentation:
      "$$$$ NTAB     NOTICE  CHAT      11/09/12    21:17:26     7124           \n                                             DATE     11/09/12\n\n    Directive NTABLEAU                         Voir aussi : TRAC\n    ------------------                                      DESS  \n\n   NTAB (EVOL1 ET EVOL2 ET ... EVOLN) ( 'TITR'   MOT1       ) ;\n        (CHPE                       ) ( 'STITR'  MOT2       ) ;\n        (CHPP                       ) ( 'TCOL'   ENTI1 MOT3 ) ;\n                                      ( 'TLIG'   ENTI2 MOT4 ) ;\n                                      ( 'TRILIG' ENTI3      ) ;\n                                      ( 'TRICOL' ENTI4      ) ;\n                                      ( 'TEXCOU' ENTI5      ) ;\n                                      ( 'LIGCOU' ENTI6      ) ;\n                                      ( 'COLCOU' ENTI7      ) ;\n                                      ( 'LOGCOU' ENTI8      ) ;\n                                      ( 'TITCOU' ENTI9      ) ;\n                                      ( 'NODATE'            ) ;\n                                      ( 'NOCENTER'          ) ;\n                                      ( 'NOLIG'             ) ;\n                                      ( 'PAGE'              ) ;\n                                      ( 'NOPAGE'            ) ;\n                                      ( 'LOGO'              ) ;\n\n\n    Objet :\n    _______\n\n    Cette directive permet de tracer un tableau a partir d'objets de\n    type EVOLUTIO, CHAMELEM ou CHAMPOIN.\n\n    * EVOLi evolutions :\n      Toutes les valeurs des abcsisses sont regroupees dans la\n      premiere colonne.\n      Une evolution n'est prise en compte que si son abscisse est un\n      nombre (ENTIER ou FLOTTANT).\n      Les ordonnees sont imprimees en face des valeurs\n      correspondantes, a raison d'une colonne par evolution entree.\n\n    * CHPP champ par point :\n      Seul le premier sous-champ est affiche. Pour voir les autres,\n      faire une procedure pour les extraire et les afficher.\n\n    * CHPE champ par element :\n      idem.\n\n    Commentaire :\n    _____________\n\n    Par defaut:\n       On centre les tableaux.\n       On utilise le titre de l'objet\n       Pas de sous-titre.\n       On affiche la date.\n       Les numeros de page sont mis si necessaire.\n\n    * Les options generales possibles sont :\n\n    'TITR'     : mot-cle (type MOT) suivi de\n    MOT1       : titre du tableau (defaut = titre de l'objet)\n\n    'STITR'    : mot-cle (type MOT) suivi de\n    MOT2       : sous-titre du tableau (defaut = aucun)\n\n    'TCOL'     : mot-cle (type MOT) suivi de\n    ENTI1 MOT3 : MOT3 devient l'en-tete de la colonne ENTI1.\n\n    'TLIG'     : mot-cle (type MOT) suivi de\n    ENTI2 MOT4 : MOT4 devient le nom de la ligne ENTI2.\n\n    'TRILIG'   : mot-cle (type MOT) demandant le tri des lignes suivi\n                 de \n    ENTI3      : numero de la colonne de reference.\n\n    'TRICOL'   : mot-cle (type MOT) demandant le tri des colonnes\n                 suivi de \n    ENTI4      : numero de la ligne de reference.\n\n    * Changement des couleurs\n\n    Attention a ne pas utiliser des couleurs qui n'existent pas sur la\n    sortie utilisee.\n\n    'TEXCOU'   : mot-cle (type MOT) permettant de modifier la couleur\n                 du texte, suivi de\n    ENTI5      : numero de la couleur du texte.\n\n    'LIGCOU'   : mot-cle (type MOT) suivi de\n    ENTI6      : numero de la couleur des encadrements.\n\n    'TITCOU'   : mot-cle (type MOT) suivi de\n    ENTI7      : numero de la couleur du titre.\n\n    'LOGCOU'   : mot-cle (type MOT) suivi de\n    ENTI8      : numero de la couleur du logo.\n\n    'COLCOU'   : mot-cle (type MOT) suivi de\n    ENTI9      : numero de la couleur des intitules de colonne.\n\n    * options d'affichage\n\n    'NODATE'   : mot-clef supprimant l'affichage de la date.\n\n    'NOLIG'    : mot-clef supprimant l'encadrement automatique.\n\n    'NOCENTER' : mot-clef demandant des tableaux non centres.\n\n    'PAGE'     : mot-clef for\u00e7ant l'affichage des numeros de page.\n\n    'NOPAGE'   : mot-clef empechant l'affichage des numeros de page.\n\n    'LOGO'     : mot-clef indiquant qu'il faut afficher le logo.\n\n\n    Exemple:\n    --------\n\nNTAB (EVOL1 ET EVOL2 ET EVOL3) 'TITR' 'Resonances circuits 1, 2 et 3';",
  },
  {
    name: "NUAG",
    url: "NUAG",
    documentation:
      "$$$$ NUAG     NOTICE  CHAT      11/09/12    21:17:27     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur NUAGE                                            \n    --------------- \n\n\n   Cet operateur cree un objet NUAGE de differentes manieres.\n\n    ----------------------\n    |  1ere possibilite  |\n    ----------------------                                                      \n   NUA1 = NUAGE |     'COMP'  NOMCOMP1 OBJE1_1 OBJE1_2 .. OBJE1_M               \n                | ..  'COMP'  NOMCOMP2 OBJE2_1 OBJE2_2 .. OBJE2_M \n                | .........\n                | ..  'COMP'  NOMCOMPN OBJEN_1 OBJEN_2 .. OBJEN_M\n\n   \n   NUA1 = NUAGE | NOCOMP1*TYP1 NOCOMP2*TYP2 ... NOCOMPN*TYPN\n                |   OBTYP1_1 OBTYP2_1 .... OBTYPN_1 \n                |   OBTYP1_2 OBTYP2_2 .... OBTYPN_2\n                |  ..........\n                |   OBTYP1_M OBTYP2_M .... OBTYPN_M \n\n                                              \n    Objet:                                                                      \n    ------ \n\n    Cet operateur permet de definir un objet de type NUAGE.\nUn NUAGE est un ensemble de M  N-uplets. Chaque composante\nd'un N-uplet porte un nom (NOCOMPI).\n \nDeux syntaxes sont autorisees :\n   \n   La premiere lit le nom puis tous les objets d'une composante etc..\n\n   La seconde lit tous les noms de composantes avec le type des \nobjets, puis lit tous les N-uplets les uns apres les autres.\n     \n Exemple : On veut definir un nuage qui decrit la variation\nd'une courbe de traction en fonction de la temperature. Supposons\nque EV1 EV2 EV3 sont les trois objets EVOLUTIO representant\nles courbes de traction pour les temperatures T1 T2 T3.\n\n    La definition du NUAGE peut alors se faire des deux facons\nsuivantes :\n\n \n\nNU1 = NUAGE  'TEMPERATURE'*'FLOTTANT' 'TRAC'*'EVOLUTIO'\n           T1  EV1        T2  EV2         T3  EV3;\n\nNU2 = NUAGE  'COMP' 'TEMPERATURE'  T1  T2  T3 \n             'COMP' 'TRAC'        EV1 EV2 EV3 ;\n\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------                                                      \n\nNU1 = NUAGE CHPO1 ;\n\n    Objet :\n    _______\n\n    L'operateur NUAGE change un champ par point en nuage.\n    A chaque point du champ par point il fait correspondre \nun n-uplet du nuage compose des composantes du champ par point.\n\n    Commentaire :\n    _____________\n    \n    NUA1   : objet resultat (type 'NUAGE')\n  \n    CHPO1  : objet de type 'CHPOINT'\n\n    Remarque :\n    __________\n\n    Les composantes non definies dans une sous-zone du champ par \npoint sont prises egales a zero dans le n-uplet.\n\n    Exemple :\n    _________\n\n    CHP1 = MANU 'CHPO' POIN1 2 'UX' 10 'UY' 20 ;\n    NUA1 = NUAGE CHP1 ;\n    LIST NUA1 ;\n    Le nuage contient 1 n-uplet a 2 composantes\n    Composante 1 de nom UX     et de type FLOTTANT\n    Liste des valeurs associees\n    10.\n    Composante 2 de nom UY     et de type FLOTTANT\n    Liste des valeurs associees\n    20.  \n   \n\n    ----------------------\n    |   3eme possibilite | \n    ----------------------\n\n\n  NUA1 = NUAGE CHAM1;\n\n    Objet :\n    _______\n\n    L'operateur NUAGE change un champ par elements en nuage.\nA chaque point support du champ par elements, il fait correspondre\nun n-uplet du nuage composes des valeurs des composantes aux points \nconsideres.  \n\n    Commentaire :\n    _____________\n    \n    NUA1 : objet resultat de type 'NUAGE'\n    CHAM1 : objet de type 'MCHAML'\n \n    Remarque :\n    __________\n \n    Toutes les composantes du champ par elements doivent etre de\ntype 'FLOTTANT'.\n     Les composantes non definies dans une sous-zone du champ par\nelements sont prises egales a zero dans le n-uplet.\n\n    Exemple :\n    _________\n   \n    LIG1 = P1 DROI 5 P2;\n    CHAM1 = MANU CHML LIG1 G 9.81;\n    CHAM2 = COOR 1 CHAM1;\n    NUA1 = NUAGE CHAM2;\n    LIST NUA1;\n    Le nuage contient 10 n-uplets a une composante\n    Composante 1 de nom SCAL et de type FLOTTANT\n    Liste des valeurs associees : 10\n ",
  },
  {
    name: "OBJE",
    url: "OBJE",
    documentation:
      "$$$$ OBJE     NOTICE  CHAT      11/09/12    21:17:27     7124           \n                                             DATE     11/09/12\n                                            \n    Operateur OBJE                           Voir aussi : DEBM FINM\n    --------------                                        METHODE  \n                                                          HERITE  \n      OBJET1 =  OBJET  METH1 ;\n                               \n\n\n    Objet :\n    _______\n\n    L'operateur OBJET cree un objet de type OBJET  de classe\nMETHODE1 sur lequel on applique le constructeur METH1.\n\n\n\n      Commentaire :\n      _____________\n\n  La difference essentielle entre un OBJET et une TABLE est qu'il\nn'est pas possible de se servir d'un OBJET sans passer par ses\nmethodes. Celles-ci se definissent par les methodes METHODE ou\nHERITE qui sont mises de facon systematique dans les objets.\n\n  Pour appliquer une methode sur un objet la syntaxe  est:\n\n RESU1 RESU2... = OBJET1%METH1 ARG1 ARG2 ....;\n\n  METH1 est une methode qui se definit comme une procedure. Il faut\nseulement commencer par DEBMETHODE au lieu de DEBPROCEDUR et terminer\npar FINMETHODE au lieu de FINPROCEDUR. \n  A l'interieur de la methode METH1 on peut acceder aux elements\ncontenus dans l'objet par la syntaxe  suivante :\nPour l'element ELE1 on pourra ecrire \n       %ELE1 = ...   ou\n       RES = %ELE1 + ENT1 +....\n\nTout comme pour les tables ELE1 est un objet quelconque ",
  },
  {
    name: "OBTE",
    url: "OBTE",
    documentation:
      "$$$$ OBTE     NOTICE  PASCAL    17/06/26    21:15:11     9451           \n                                             DATE     17/06/26\n\n    Operateur OBTENIR                        Voir aussi : ARGU\n    -----------------                                     MESS  \n    OBTENIR  OBJET1*TYP1  ( OBJET2*TYP2 ....) ;\n\n\n    Objet :\n    _______\n\n    L'operateur OBTENIR permet d'acquerir interactivement au clavier\n  un ou plusieurs objets de type TYPi.\n\n    Remarque :\n    __________\n\n    Il est possible d'omettre le type ; dans ce cas, il ne faut pas\n  mettre le *.\n\n    Si un ou plusieurs objets demandes ne sont pas fournis, un objet \n  de type ANNULE est cr\u00e9e. S'il s'agit d'un LISTENTI ou LISTREEL, \n  l'objet garde, s'il y a lieu,  la liste d'\u00e9l\u00e9ments d\u00e9j\u00e0 fournis.\n\n    La donnee entree au clavier peut etre : un ENTIER, un FLOTTANT,\n  un MOT, un LOGIQUE (VRAI-FAUX),un LISTENTI, un LISTREEL ou un nom\n  deja connu par CAST3M.\n\n    Dans le cas de LISTENTI ou LISTREEL, il ne peut y avoir qu'un seul\n  objet en lecture. La liste des valeurs constituant l'objet peut etre\n  de longueur quelconque et peut etre donn\u00e9e en une ou plusieurs fois.\n\n\n    Exemple :\n    _________\n\n    La procedure LIREFLOT est un exemple d'emploi de OBTENIR.\n\n         DEBPROC   LIREFLOT    UMIN*FLOTTANT  UMAX*FLOTTANT ;\n         REPETER BLOC1 ;\n         OBTENIR FL*FLOTTANT ;\n         SI (( >EG FL UMIN) ET ( <EG FL UMAX))  ;\n         QUITTER  BLOC1;\n         FINSI ;\n         MESSAGE ' DONNEZ UN NOMBRE COMPRIS ENTRE' UMIN 'ET' UMAX;\n         FIN BLOC1;\n         FINPROC FL;",
  },
  {
    name: "ONDE",
    url: "ONDE",
    documentation:
      "$$$$ ONDE     NOTICE  MB234859  17/10/02    21:15:19     9577           \n                                             DATE     17/10/02\n\n    Operateur ONDE                           Voir aussi : TFR\n    --------------  \n\n-------------------------------------------------------------\n| 1ere possibilite : transformation par ondelettes continue |\n-------------------------------------------------------------\n\n\n    Objet :\n    _______\n\n    L'operateur ONDE construit la transformee par ondelettes\n continue d'un signal.\n\n    Commentaire :\n    _____________\n\n\n    N1     : on utilise, pour la transformee de Fourier rapide,\n             un nombre de points egal a 2**N1 (type ENTIER)\n             (Si le signal traite est plus long, on le tronque;\n             s'il est plus court, on le complete par des 0.)\n\n    EVOL2  : objet contenant le signal a etudier (type EVOLUTION);\n             les abscisses doivent etre a pas constant, les valeurs\n             du signal etant les ordonnees. L'objet ne doit contenir\n             qu'une seule courbe.\n\n    MOT1   : mot indiquant le type de sorties voulues\n\n             'REIM' pour partie reelle et partie imaginaire / Frequence\n             'MOPH' pour module et phase  / Frequence\n\n   'FMIN'   : mot-cle suivi de :\n    FLOT1   : frequence minimale visualisee; elle sera superieure a 0.\n              \n   'FMAX'   : mot-cle suivi de :\n    FLOT2   : frequence maximale visualisee; elle sera inferieure\n              a 1/(2*DT), DT etant le pas de temps du signal d'entree.\n              (type FLOTTANT)\n\n   'NFRQ'   : mot-cle suivi de :\n    FLOT3   :  nombre de pas en frequence\n              (type FLOTTANT, valeur par defaut = 50 )\n\n   'PULS'   : mot-cle suivi de :\n    FLOT4   :  pulsation de l'ondelette mere de Morlet \n              (type FLOTTANT, valeur par defaut = 5. )\n\n    CHP1   : objet contenant la transformee, sous forme d'un chpo a deux\n             composantes : MODU et PHAS pour l'option MOPH, PREE et \n             PIMA pour l'option REIM.\n              (type CHPOINT)\n\n    MAIL1   : maillage sur lequel s'appui CHP1 ( carre unitaire ) :\n     l'abscisse correspond au temps, et l'ordonnee a la frequence.\n\n\n  CHP1 MAIL1 = ONDE  N1 EVOL2 MOT1 'FMIN' FLOT1 'FMAX' FLOT2\n                       ('DFRQ' ENTI1)  ('PULS' FLOT4)  ;\n\n\n--------------------------------------------------------------\n| 2eme possibilite : extraction de l'arete de la transformee |\n--------------------------------------------------------------\n\n\n    Objet :\n    _______\n\n    L'operateur extrait l'arete de la transformee en ondelettes\n continue ( frequences et modules instantanes )\n\n    Commentaire :\n    _____________\n\n    MOT1  : mot indiquant le critere utilise pour l'extraction :\n\n             'CRMO' : critere sur le module\n             'CRPH'  : critere sur la phase \n\n   'EPSI'  : mot-cle suivi de :\n    FLOT5  : utilise seulement avec 'CRPH' : critere de nullite \n              (type FLOTTANT, valeur par defaut = 1.E-4 )\n\n   COUL1   : couleur choisie des courbes (type MOT)\n              (blanc par defaut)\n\n   EVOL1 : objet contenant 2 evolutions : la frequence et le\n module ( dans cet ordre )  de l'arete au cours du temps.\n               (type EVOLUTION)\n\n\n  EVOL1 = ONDE  N1 EVOL2 MOT1 'FMIN' FLOT1 'FMAX' FLOT2\n        ('DFRQ' ENTI1)  ('EPSI' FLOT5) ('PULS' FLOT4) (COUL1)  ;\n \n \n ",
  },
  {
    name: "OPTI",
    url: "OPTI",
    documentation:
      "$$$$ OPTI     NOTICE  BP208322  21/01/05    21:15:01     10842          \n                                             DATE     21/01/05\n\n\n    Directive OPTION                         Voir aussi : VALE\n    ----------------  \n    'OPTION'  MOT1 VAL1  (MOT2 VAL2 ...) ;\n\n    Objet :\n    _______\n\n    La directive OPTION sert \u00e0 pr\u00e9ciser des options g\u00e9n\u00e9rales de calcul.\n\n\n    Options possibles :\n    ___________________\n\n------------------------------------------------------------------------\n|Mot-cl\u00e9 | Valeurs possibles (une)    | D\u00e9faut |     Commentaire       |\n| MOTi   |       VALi                 |        |                       |\n|--------|----------------------------|--------|-----------------------|\n|'ACQU'  |    num\u00e9ro unit\u00e9 logique    |  9     | fichier d'entr\u00e9e      |\n|        |    ou 'nom fichier'        |        |                       |\n|        |                            |        |                       |\n|'ASSI'  |    nombre d'assistants     |  0     | parall\u00e9lisme          |\n|        |                            |        |                       |\n|'ATTE'  | Duree d'attente pour un    |  0     | Surveillance GEMAT    |\n|        | SEGMENT au dela de laquelle|        |   <0 : ooogll         |\n|        | on affiche un message GEMAT|        |   >0 : ooowait        |\n|        | (en Microsecondes)         |        |                       |\n|        |                            |        |                       |\n|'CADR'  |    FLOTTANT positif        |  30.   | Cot\u00e9 du cadre (en cm) |\n|        |                            |        |                       |\n|'COSC'  |  NOIR,BLANC, JAUN          |  NOIR  | Couleur fond d'ecran  |\n|        |                            |        |                       |\n|'COUL'  | DEFA,BLEU,ROUG,ROSE,JAUN,  |  DEFA  | couleur pr\u00e9d\u00e9finie    |\n|        | VERT,TURQ,BLAN,NOIR,AZUR,  |        |                       |\n|        | ORAN,VIOL,OCEA,CYAN,OLIV,  |        |                       |\n|        | GRIS                       |        |                       |\n|        |                            |        |                       |\n|'DEBU'  |    0,1                     |   0    | en cas d'erreur, on ne!\n|        |                            |        | peut pas lister les   |\n|        |                            |        | objets internes \u00e0 la  |\n|        |                            |        | procedure             |\n|        |                            |        |                       |\n|'DENS'  |     FLOTTANT positif       |   0.   | taille de maille par  |\n|        |                            |        | defaut (voir aussi    |\n|        |                            |        | notice DENS)          |\n|        |                            |        |                       |\n|'DIME'  |    1,2,3                   |  0     | dimension de l'espace |\n|        |                            |        |                       |\n|'DONN'  |    num\u00e9ro unit\u00e9 logique    |  5     | cartes donn\u00e9es        |\n|        |    ou 'nom fichier'        |        |                       |\n|        |                            |        |                       |\n|'ECHO'  |    -1,0,1,2                |  1     | \u00e9cho donn\u00e9es          |\n|        |                            |        |                       |\n|'ECRA'  |                            |        |                       |\n|        |                            |        |                       |\n|'ELEM'  | POI1,SEG2,SEG3,TRI3,TRI6,  |        | \u00e9l\u00e9ment \u00e0 fabriquer   |\n|        | QUA4,QUA8,RAC2,RAC3,CUB8,  |        |                       |\n|        | CU20,PRI6,PR15,PYR5,PY13,  |        |                       |\n|        | TET4,TE10                  |        |                       |\n|        |                            |        |                       |\n|'EPTR'  |    1,2,...,10              |  1     | \u00e9paisseur du trait    |\n|        |                            |        | pour le trac\u00e9         |\n|        |                            |        |                       |\n|'ERRE'  | FATAL,NORMAL,              | NORMAL | Type de traitements   |\n|        | CONTROLE,IGNORE            |        | des erreurs           |\n|        |                            |        |                       |\n|'ERMA'  |                            |        | en sortie donne la    |\n|        |                            |        | valeur maxi de        |\n|        |                            |        | l'erreur atteinte.    |\n|        |                            |        |                       |\n|'FTRA'  |    cha\u00eene de caract\u00e8res    |   -    | Nom du fichier conte- |\n|        |                            |        | nant le trac\u00e9 de type |\n|        |                            |        | PostScript ou MIF     |\n|        |                            |        | (FrameMaker)          |\n|        |                            |        |                       |\n|'IMPI'  |    0,1,2                   |  0     | niveau de message     |\n|        |                            |        |                       |\n|'IMPR'  |    num\u00e9ro unit\u00e9 logique    |  6     | imprimante            |\n|        |    ou nom fichier          |        |                       |\n|        |                            |        |                       |\n|'INCO'  |  LMOT1 LMOT2 ou MOT1 MOT2  |        | Noms d'inconnues      |\n|        |                            |        | primales (L)MOT1 et   |\n|        |                            |        | duales (L)MOT2 definis|\n|        |                            |        | par l'utilisateur     |\n|        |                            |        |                       |\n|'ISOV'  | LIGNE,SURFACE,SULI         | SURFACE| Type de trac\u00e9 des     |\n|        |                            |        | isovaleurs            |\n|        |                            |        |                       |\n|'LANG'  | FRANCAIS,ANGLAIS,...       |FRANCAIS| Langue de la notice   |\n|        |                            |        |                       |\n|'LECT'  |    num\u00e9ro unit\u00e9 logique    |  4     | fichier d'entr\u00e9e      |\n|        |    ou 'nom fichier'        |        |                       |\n|        |                            |        |                       |\n|'LOCA'  | VRAI,FAUX                  | FAUX   | creation d'une table  |\n|        |                            |        | &TOTO apres chaque    |\n|        |                            |        | appel de la procedure |\n|        |                            |        | TOTO contenant toutes |\n|        |                            |        | ses variables locales |\n|        |                            |        |                       |\n|'MODE'  | PLAN CONT ( cont planes )  |  PLAN  | - mod\u00e8le de calcul    |\n|        | PLAN DEFO ( d\u00e9fo planes )  |  DEFO  |   (en 2D et en 1D)    |\n|        | PLAN GENE (d\u00e9fo planes     |        | - numero de l'harmo-  |\n|        |             g\u00e9n\u00e9ralis\u00e9es)  |        |   nique pour FOUR     |\n|        | AXIS      (axisym\u00e9trique)  |        |                       |\n|        | FOUR  NN  (Fourier )       |        |   (voir remarques)    |\n|        | TRID      (tridimensionnel)|        |                       |\n|        | UNID PLAN (DYDZ)  )        |        |                       |\n|        | UNID PLAN DYCZ    )        |        |                       |\n|        | UNID PLAN CYDZ    )        |        |                       |\n|        | UNID PLAN CYCZ    )        |        |                       |\n|        | UNID PLAN GYDZ    )        |        |                       |\n|        | UNID PLAN GYCZ    )        |        |                       |\n|        | UNID PLAN DYGZ    )  1D    |        |                       |\n|        | UNID PLAN CYGZ    )        |        |                       |\n|        | UNID PLAN GYGZ    )        |        |                       |\n|        | UNID AXIS (AXDZ)  )        |        |                       |\n|        | UNID AXIS AXCZ    )        |        |                       |\n|        | UNID AXIS AXGZ    )        |        |                       |\n|        | UNID SPHE         )        |        |                       |\n|        | FREQ  (frequentiel)        |        | (voir remarques)      |\n|        |                            |        |                       |\n|'NAVI'  | LICE,LIMS,LBMS,MCCE,MCP1,  |        | D\u00e9finition du couple  |\n|        | MCMS,QFCE,QFP1,QFMS        |        | vitesse/pression dans |\n|        |                            |        | le cadre NavierStokes |\n|        |                            |        |                       |\n|'NBP'   | ENTIER positif ou nul      |        | Impose le nombre de   |\n|        |                            |        | points                |\n|        |                            |        |                       |\n|'NGMA'  | ENTIER positif (VAR NGMAXY)| 100000 | Nb de mots ( matrice )|\n|        |                            |        |                       |\n|'NIVE'  |    19                      |   19   | Niveau des sorties    |\n|        |                            |        |                       |\n|'NORM'  | LISMOT1 LISREE1            |        |Normalisation des      |\n|        |       (LISMO2  LISREE2)    |        |variables en vue de la |\n|        | 'AUTO'                     |        |factorisation          |\n|        | 'ANNU'                     |        |                       |\n|        |                            |        |                       |\n|'OEIL'  | POINT                      |        |Oeil par d\u00e9faut        |\n|        |                            |        |                       |\n|'OMBR'  | VRAI,FAUX                  | VRAI   |Ombrage des trac\u00e9s FACE|\n|        |                            |        |                       |\n|'PARA'  | VRAI,FAUX                  | FAUX   | par d\u00e9faut pas de     |\n|        |                            |        | Gibiane parall\u00e8le     |\n|        |                            |        |                       |\n|'PLAC'  | Entier positif             | Ptot   | Place m\u00e9moire libre   |\n|        |                            |    /10 | minimale \u00e0 respecter  |\n|        |                            |        |                       |\n|'POLI'  |8_BY_13,9_BY_15,TIMES_10,   |8_BY_13 | choix de la police    |\n|        |TIMES__24,HELV_10,HELV_12,  |        | pour dessins et traces|\n|        |HELV_18                     |        |                       |\n|        |                            |        |                       |\n|'POTR'  | COURIER_N, HELVETICA_N     |COURIER_14| choix de la police  |\n|        | ou TIMES_N                 |        | pour dessins et traces|\n|        | avec N=12,14,16 ou 18      |        | postscript (PS et PSC)|\n|        |                            |        |                       |\n|'RESO'  | 'DIRECTE' ou  'ITERATIVE'  | 'DIRE' | M\u00e9thode de r\u00e9solution |\n|        |                            |        |                       |\n|'REST'  |    num\u00e9ro unit\u00e9 logique    |  2     | fichier d'entr\u00e9e      |\n|        |    ou 'nom fichier'        |        |                       |\n|        |    mot-cl\u00e9 \u00e9ventuel FORMAT |        |                       |\n|        |    mot-cl\u00e9 \u00e9ventuel XDR    |        |                       |\n|        |                            |        |                       |\n|'SAUV'  |    num\u00e9ro unit\u00e9 logique    |  8     | fichier de sortie     |\n|        |    ou 'nom fichier'        |        |                       |\n|        |    mot-cl\u00e9 \u00e9ventuel FORMAT |        |                       |\n|        |    mot-cl\u00e9 \u00e9ventuel XDR    |        |                       |\n|        |    mot-cl\u00e9 \u00e9ventuel TAILLE | 4.5e8  |                       |\n|        |   suivi de la taille max   |        |                       |\n|        |   en nombre de mot simple  |        |                       |\n|        |   pr\u00e9cision.               |        |                       |\n|        |                            |        |                       |\n|'SORT'  |    num\u00e9ro unit\u00e9 logique    |  7     | fichier de sortie     |\n|        |    ou 'nom fichier'        |        |                       |\n|        |                            |        |                       |\n|'SURV'  |    numero du segment Esope |        | Surveillance GEMAT    |\n|        |    \u00e0 surveiller            |        |                       |\n|        |                            |        |                       |\n|'TRAC'  | BENS,IBM,GKS,PHIGS,X,PS    |  BENS  | unit\u00e9 de sortie       |\n|        | MIF,PSC,OPEN               |        | graphique             |\n|        |                            |        |                       |\n|'VERI'  |    0,1                     |  0     | Trace des op\u00e9rateurs  |\n|        |                            |        |                       |\n|'ZERO'  | ENTIER positif             |  4     | Nombre de z\u00e9ros       |\n|        |                            |        | cons\u00e9cutifs \u00e0 prendre |\n|        |                            |        | en compte (RESOLUTION)|\n|        |                            |        |                       |\n|'PETI'  | FLOTTANT                   |        | Defini la plus petite |\n|        |                            |        | valeur non nulle dans |\n|        |                            |        | Cast3M                |\n|        |                            |        |                       |\n|'GRAN'  | FLOTTANT                   |        | Defini la plus grande |\n|        |                            |        | valeur dans Cast3M    |\n|        |                            |        |                       |\n|'PREC'  | FLOTTANT                   |        | Precision des         |\n|        |                            |        | operations sur les    |\n|        |                            |        | FLOTTANTS             |\n|        |                            |        | (System Dependant)    |\n|--------|----------------------------|--------|-----------------------|\n\n\n    Exemple :\n    _________\n\n    OPTION DIME 2 ELEM QUA4 ;\n\n\n    Remarques :\n    ___________\n\n    ---  VALE  ---------------------------------------------------------\n    \n    Les valeurs courantes de certaines options peuvent \u00eatre obtenues par\n    l'op\u00e9rateur VALE(UR).\n    \n\n    ---  OPTI 'LANG'  --------------------------------------------------\n    \n    Par d\u00e9faut, la langue utilis\u00e9e pour la notice et les messages\n    d'erreur est le fran\u00e7ais. En fait, la notice de chaque op\u00e9rateur\n    contient une partie (la syntaxe) commune \u00e0 toutes les langues et des\n    parties sp\u00e9cifiques \u00e0 chaque langue. Si on utilise par exemple\n    \"OPTION LANGUE JAVANAIS;\", l'op\u00e9rateur INFO n'imprimera que la\n    syntaxe de l'op\u00e9rateur et les messages d'erreurs seront en francais\n    car ils n'existent pas en javanais.\n    \n\n    ---  OPTI 'ECHO'  --------------------------------------------------\n    \n    L'option ECHO permet de sp\u00e9cifier la verbosit\u00e9 de l'affichage dans \n    Cast3M : \n     - ECHO -1 : Affichage des messages d'erreur seulement\n     - ECHO  0 : Ajout des Warnings (Messages d'erreur n\u00e9gatifs)\n     - ECHO  1 : Ajout des instructions interpr\u00e9t\u00e9es (Hors PROCEDURES)\n     - ECHO  2 : Ajout du contenu des PROCEDURES externe\n\n     \n    ---  OPTI 'MODE'  --------------------------------------------------\n    \n    Le mode de calcul defini par MODE doit etre compatible avec la\n    dimension courante (definie par DIME). Si tel n'est pas le cas, un\n    message d'erreur sera affiche.\n\n    En cas d'option MODE PLAN GENE, il faudra donner, par mod\u00e8le, un\n    point support aux inconnues suppl\u00e9mentaires (translation et\n    rotations de la section) et de r\u00e9f\u00e9rence g\u00e9om\u00e9trique \u00e0 la rotation\n    de la section \u00e9tudi\u00e9e.\n\n    En cas d'option MODE FOUR, on donne le num\u00e9ro d'harmonique positif\n    pour les modes sym\u00e9triques et n\u00e9gatif pour les modes\n    antisym\u00e9triques.  En indiquant MODE FOUR NOHARM, on peut cr\u00e9er des\n    objets utilisables en MODE FOUR quel que soit le num\u00e9ro\n    d'harmonique.\n\n    Dans le cas d'une modelisation unidimensionnelle (DIME 1 MODE UNID),\n    le mode de calcul par defaut est MODE UNID PLAN (DYDZ). Les options\n    UNID PLAN et UNID AXIS correspondent, en mecanique, respectivement a\n    UNID PLAN DYDZ et UNID AXIS AXDZ. Pour les options MODE UNID PLAN\n    GYDZ, UNID PLAN GYCZ, UNID PLAN DYGZ, UNID PLAN CYGZ, UNID PLAN GYGZ\n    et UNID AXIS AXGZ, il faudra ajouter a chacun des modeles un point\n    support caracterisant la(les) direction(s) de deformation\n    generalisee 'G-' (translation(s) de la ligne etudiee) et de ddl UY\n    et UZ.\n\n    En cas d'option MODE FREQ :\n    - PASAPAS resout le probl\u00e8me dynamique dans la base des modes\n      propres et extension en balayant l'\u00e9chelle des fr\u00e9quences ;\n    - les objets MODELE d\u00e9clar\u00e9s ensuite sont associ\u00e9s \u00e0 des champs\n      munis de composantes imaginaires.\n\n      \n    ---  OPTI 'SAUV'  --------------------------------------------------\n    \n    Pour l'option SAUV avec FORMAT ou TAILLE, les mots cl\u00e9s doivent\n    pr\u00e9c\u00e9der le num\u00e9ro de l'unit\u00e9 logique ou le nom du fichier.\n    \n    Le format de sortie XDR utilise la biblioth\u00e8que fxdr en provenance \n    de l'universit\u00e9 de California, San Diego et ses contributeurs\n\n    \n    ---  OPTI 'NBP'  --------------------------------------------------\n    \n    L'option NBP permet, en liaison avec RESTituer, de fusionner les\n    r\u00e9sultats de plusieurs calculs faits avec le m\u00eame maillage.\n\n    \n    ---  OPTI 'TRAC'  --------------------------------------------------\n    \n    Pour l'option TRAC, selon ce qui est support\u00e9 sur le syst\u00e8me\n    informatique utilis\u00e9, BENS cr\u00e9e des fichiers de type LGI, IBM\n    appelle le syst\u00e8me graphique GDDM, GKS appelle le syst\u00e8me GKS, PHIGS\n    appelle le syst\u00e8me graphique PHIGS, X appelle l'interface X-WINDOW,\n    PS cr\u00e9e un fichier de type PostScript monochrome, MIF cr\u00e9e un\n    fichier au format Framemaker et PSC cr\u00e9e un fichier de type\n    PostScript couleur.\n\n    \n    ---  OPTI 'FTRA'  --------------------------------------------------\n    \n    L'option 'FTRA' (Fichier de TRAc\u00e9) ne peut \u00eatre utilis\u00e9e que lorsque\n    la sortie graphique se fait au format PS, PSC ou MIF. Elle permet\n    non seulement de choisir le nom du fichier contenant les dessins\n    mais aussi de modifier celui-ci au cours d'une session et ainsi\n    cr\u00e9\u00e9r plusieurs fichiers de dessins.\n    Le mot-cl\u00e9 'SUIT' permet au cours d'une meme execution de cast3m de\n    realiser les traces a la suite des precedents dans le fichier \n    specifie (sinon, le fichier est par defaut ecrase). Exemple :\n      OPTI TRAC PSC FTRA 'toto-1.ps'; \n      DESS evol1;\n      OPTI TRAC PSC FTRA 'toto-2.ps';\n      DESS evol2;\n      OPTI TRAC PSC FTRA 'toto-1.ps' 'SUIT';\n      DESS evol3;\n    --> toto-1.ps contiendra les traces des evolutions evol1 et evol3,\n        et toto-2.ps contiendra le trace de evol2.\n\n        \n    ---  OPTI 'NORM'  --------------------------------------------------\n    \n    Pour l'option NORM il faut donner un LISTMOT contenant les inconnues\n    primales \u00e0 normaliser et le LISTREEL contenant les facteurs de\n    normalisation. On peut aussi sp\u00e9cifier les variables duales avec\n    leurs facteurs de normalisation. Il est aussi possible de demander\n    la normalisation automatique 'AUTO' qui prend plus de temps.\n    Ex. 1. Pour changer d'unit\u00e9 de mm vers des m\u00e8tres il faut donner\n           1000.\n    Ex. 2. Pour les fluides, on peut donner les valeurs ROREF CREF et\n           LCAR \u00e0 1 et normaliser P par ROREF * CREF * CREF / LCAR et PI\n           par ROREF * LCAR.\n\n    Le mot cl\u00e9 'ANNU' (annuler) sert \u00e0 annuler le recours \u00e0 la\n    normalisation des variables.\n\n   Remarque 1) Lorsque la normalisation de variables est demand\u00e9e, le\n               programme duplique toutes les matrices \u00e9l\u00e9mentaires\n               concern\u00e9es et leur applique la normalisation. Le\n               programme utilise donc beaucoup plus de m\u00e9moire en cas de\n               r\u00e9solution avec la normalisation que lorsque cette option\n               est desactiv\u00e9e.\n\n   Remarque 2) La normalisation des variables primales et duales\n               entra\u00eene la perte de la sym\u00e9trie de la matrice invers\u00e9e\n               d'o\u00f9 le besoin encore accru en ressources dans ce cas l\u00e0.\n\n   Remarque 3) En cas de normalisation des matrices non-sym\u00e9triques, il\n               est demand\u00e9 \u00e0 l'utilisateur de sp\u00e9cifier les facteurs de\n               normalisation pour les variables primales et\n               duales. L'option automatique 'AUTO' est assimil\u00e9e au cas\n               o\u00f9 seules les variables primales \u00e0 normaliser sont\n               d\u00e9finies, elle ne marche donc pas dans le cas\n               non-sym\u00e9trique.\n\n   Remarque 4) Il est d\u00e9conseill\u00e9 de modifier les options de\n               normalisation entre deux inversions de la m\u00eame matrice\n               (au sens de l'objet de Cast3m).\n               \n   \n   ",
  },
  {
    name: "OPTO",
    url: "OPTO",
    documentation:
      "$$$$ OPTO     NOTICE  GOUNAND   21/04/06    21:15:16     10940          \n                                             DATE     21/04/06\n\n\n    Operateur OPTO                            Voir aussi : MAILTOPO\n    --------------                                         TRIA REMA  \n                                                           INDI  \n    MAIL1 CHPO1 ENTI1 ENTI2 ENTI3 ENTI4 = 'OPTO'\n          MAIL2 MAIL3 CHPO2 ('VTOL' FLOT1) ('QTOL' FLOT2) ('ALGO' ENTI5)\n             ('AJNO' ENTI6) ('VIRT' POIN1) ('NCMA' ENTI7) ('STMA' ENTI8)\n             ('VERI' ENTI9) ('SGAJ' ENT10) ('IMPR' ENT11) ;\n\n    Objet :\n    _______\n\n    Cet operateur n'est pas destine a etre appele par l'utilisateur.\n    Il OPtimise une TOpologie de maillage par amelioration locale.\n    Il est appele par la procedure MAILTOPO.\n\n    Commentaire :\n    _____________\n\n      MAIL1 : Topologie optimisee (type MAILLAGE)\n      CHPO1 : Metrique inverse sur la topologie optimisee (type CHPOINT)\n      ENTI1 : Nombre de topologies examinees (type ENTIER)\n      ENTI2 : Nombre de topologies changees (type ENTIER)\n      ENTI3 : Nombre de topologies parcourues (type ENTIER)\n      ENTI4 : Nombre de limitation du nombre de candidats (type ENTIER)\n\n      MAIL2 : Topologie a optimiser (type MAILLAGE)\n      MAIL3 : Entitees de la topologie autour desquelles optimiser\n              (type MAILLAGE) \n      CHPO2 : Inverse de la Metrique voulue definie sur MAIL2 (type\n              CHPOINT)\n      FLOT1 : Tolerance sur les volumes (1.d-11 par defaut)\n      FLOT2 : Tolerance sur les qualites (1.d-2 par defaut)\n      ENTI5 : Creation d'un maillage si egal a 0 (par defaut)\n              Amelioration d'un maillage si egal a 1\n      ENTI6 : L'algorithme n'ajoute pas de nouveaux noeuds si egal a 0\n              (par defaut)\n              L'algorithme ajoute des nouveaux noeuds si egal a 1\n      POIN1 : Noeud virtuel\n      ENTI7 : Nombre de Candidats MAximum (1000 par defaut)\n      ENTI8 : STrategie quand on atteint le MAximum  (0 par defaut)\n      ENTI9 : Si egal a 1 : verification dans l'algorithme (lent, pour\n              debugger, 0 par defaut)\n      ENT10 : Si egal a 1 affichage des nombres de fois ou des segments\n              sont ajustes (debug, 0 par defaut)\n      ENT11 : Niveau d'impression (0 par defaut)",
  },
  {
    name: "ORBITE",
    url: "ORBITE",
    documentation:
      "$$$$ ORBITE   NOTICE  BP208322  16/09/02    21:15:00     9054           \n                                             DATE     16/09/02\n                                           \n\n    Procedure ORBITE                       Voir aussi : EVOL DESS TRAC\n\n\n    Objet :\n    _______\n\n    Etant donne un ensemble de courbes contenues dans EVOL1 et\n    chacune definies par les listes {x_i} - {y_i} avec i={1..N},\n    la procedure ORBITE permet de DESSiner successivement une portion \n    de ces courbes en vue de realiser une animation de type orbite\n    ou trajectoire.\n    \n    La \"tete\" de la trajectoire est materialise par un cercle plein.\n    \n    Les options par defaut peuvent etre modifiee via la table \n    facultative TABOPT dont les indices pouvant etre donnes sont :\n   \n    TABOPT . 'PAS'      = nombre de pas entre 2 traces\n    ou \n    TABOPT . 'N_DESSIN' = nombre approximatif de traces souhaites\n    \n    TABOPT . 'QUEUE'    = nombre de pas pendant lesquels la remanence \n                          de la trajectoire est assure (ENTIER)\n                          ou mot 'INFINIE'\n                          \n    TABOPT . 'IDEB'     = indice du pas definissant le debut de la \n                          courbe (0 par defaut)\n\n    TABOPT . 'TEMPS_CALCULES'  =  LISTENTI ou LISTREEL des temps\n                                  a afficher dans le titre\n                                  \n    TABOPT . 'EVOL_FIXE' = EVOLUTION immobile a ajouter aux traces  \n    \n    TABOPT . 'TITRE'     = prefixe du titre (MOT)\n                           (mot ORBITE par defaut)\n    TABOPT . 'TITX'      = titre des abscisses (MOT)\n    TABOPT . 'TITY'      = titre des ordonnees (MOT)\n    TABOPT . 'XBOR'      = bornes des abscisses (MOT) (ex: '-2. 1.5')\n    TABOPT . 'YBOR'      = bornes des ordonnees (MOT)\n    TABOPT . 'CARR'      = FAUX pour desactiver l'option CARR de DESS\n                           (VRAI par defaut)\n                              \n                              \n    Exemple : trace anime d'une courbe de Lissajous\n    _________\n    \n    xpi = 180.;\n    t = prog 0. pas (xpi / 360.) (4.*xpi);\n    y =  3. * (sin (2. * t));\n    x = -1. * (cos (1. * t));\n    ev = evol VERT manu 'x' x 'y' y;\n    dess ev;\n    toto = tabl; toto . 'CARR'  = faux;\n    ORBITE ev toto;   \n\n     __________________________________\n    |                                  |\n    |     _ _ _             _ _ _      |\n    |   _/     \\__         o     \\_    |\n    |  /          \\_     .         \\   |\n    | /             \\_ .            \\  |\n    | .             . \\_            /  |\n    |   .         .     \\__       _/   |\n    |     . . . .          \\_ _ _/     |\n    |                                  |\n    |__________________________________|\n    \n   ",
  },
  {
    name: "ORDO",
    url: "ORDO",
    documentation:
      "$$$$ ORDO     NOTICE  JB251061  21/02/09    21:15:05     10884          \n                                             DATE     21/02/09\n\n    Operateur ORDONNER                       Voir aussi : UNIQ, ORIE\n    ------------------  \n\n\n    Objet :\n    _______\n    \n    L'operateur ORDONNER range le contenu d'un objet ordonnable.\n    \n    \n    \n    Syntaxes :\n    __________\n               \n                \n    Tri d'un seul objet LISTENTI, LISTREEL ou LISTMOTS\n    **************************************************\n  \n    LIS2 = ORDO LIS1 |('CROI')| ('ABSO') ('NOCA') ('UNIQ' (FLOT1)) ;\n                     |('DECR')|\n                     \n                     \n                \n    Tri d'un ou plusieurs objets LISTENTI, LISTREEL et/ou LISTMOTS\n    **************************************************************\n    \n    a) Tri CROIssant ou DECRoissant\n       ----------------------------\n                \n    RES1 (.. RESN) = ORDO LIS1 (.. LISN) |('CROI')| ('ABSO') ('NOCA') ;\n                                         |('DECR')|\n                \n    TAB2 = ORDO TAB1 OBJ1 |('CROI')| ('ABSO') ('NOCA') ;\n                          |('DECR')|\n    \n    \n    b) Tri minimisant un COUT\n       ----------------------\n                \n    RES0 RES1 (.. RESN) = ORDO LIS1 (.. LISN) 'COUT' LISCOU |('HONG')| ;\n                                                            | 'COMP' |\n                                         \n                         \n    Tri d'un objet EVOLUTION\n    ************************\n    \n    EVOL2 = ORDO EVOL1 |('CROI')| ('ABSO') ;\n                       |('DECR')|\n                 \n                 \n    Tri d'un objet MAILLAGE\n    ***********************\n    \n    MAIL2 = ORDO MAIL1 ;\n\n    \n              \n    Commentaires :\n    ______________\n    \n    \n    1) Les actions sont differentes selon le type de l'objet a traiter :\n    \n     - LISTENTI ou LISTREEL : on ordonne les nombres\n     - LISTMOTS : on range les mots par ordre alphabetique\n     - EVOLUTION : on ordonne les abscisses de chaque courbe\n     - MAILLAGE :\n          o POI1 : on ordonne les points par distance croissante au\n                   premier d'entre eux       \n          o SEG2, SEG3 : on ordonne les elements de maniere a decrire\n                         une ligne continue d'une extremite a l'autre\n                         (dans le cas d'une ligne fermee, celle-ci\n                         est ordonnee a partir du premier point du\n                         premier element, et le sens de parcours\n                         est celui du premier element)\n          o autres : on ordonne par voisinnage des elements\n          \n          \n    2) Dans le cas d'un objet LIS1 (type LISTENTI, LISTREEL ou LISTMOTS)\n       il est possible de fournir d'autres listes LIS2, LIS3, ...LISN\n       (de types quelconques parmi LISTENTI, LISTREEL et LISTMOTS) qui\n       subiront les memes permutations que LIS1. Toutes les listes\n       doivent avoir la meme longueur.\n       \n       \n    3) Il est possible de regrouper les listes (type LISTENTI, LISTREEL\n       ou LISTMOTS) dans un objet TAB1 de type TABLE. Le tri s'effectue\n       alors sur celle d'indice OBJ1, et les autres listes subissent\n       ensuite les memes permutations.\n       \n       \n    4) Description des mots-cles disponibles :\n\n       >>> 'CROI' & 'DECR'\n            s'applique a : LISTENTI, LISTREEL, LISTMOTS et EVOLUTION\n                           \\__________________________/\n                                     ou TABLE\n       \n            Il est possible de trier le contenu par ordre croissant\n            (mot-cle 'CROI') ou decroissant (mot-cle 'DECR').\n\n    \n       >>> 'ABSO'\n            s'applique a : LISTENTI, LISTREEL et EVOLUTION\n                           \\________________/\n                                ou TABLE\n       \n            Le mot-cle 'ABSO' signifie que l'on ne tient compte que de \n            la valeur absolue des nombres pour faire la mise en ordre.\n\n    \n       >>> 'NOCA'\n            s'applique a : LISTMOTS (ou TABLE)\n       \n            Le mot-cle 'NOCA' indique que le tri est insensible a   \n            la casse des caracteres. En son absence, les majuscules\n            precedent les minuscules dans l'ordre de tri.\n\n       \n       >>> 'UNIQ'\n            s'applique a : LISTENTI, LISTREEL, LISTMOTS\n                           \\__________________________/\n                            ou TABLE d'une seule liste\n       \n            (INVALIDE quand plusieurs listes sont triees simultenement)\n       \n            Le mot-cle 'UNIQ' permet de supprimer les eventuels doublons \n            une fois le tri effectue. Si le mot 'NOCA' est present, deux \n            mots seront consideres identiques meme si leur casse est\n            differente, et seul l'un des deux sera conserve. Si un\n            nombre FLOT1 (type FLOTTANT) est donne, deux reels seront\n            consideres egaux si que leur difference (en valeur absolue)\n            est inferieure a ce nombre.\n\n                          \n       >>> 'COUT'\n            s'applique a : LISTENTI, LISTREEL, LISTMOTS\n                           \\__________________________/\n                                     ou TABLE\n       \n            Le mot-cle 'COUT' doit obligatoirement etre suivi d'un objet \n            LISCOU de valeurs C_i_j traduisant le cout de l'association \n            (i;j). Cet objet de type LISTENTI ou LISTREEL est donc de\n            dimension n**2 avec n la dimension des autres listes de\n            valeurs LIS1 (.. LISN).\n            \n            ORDO calculera alors la permutation j=perm(i) minimisant\n            le cout total, soit la somme pour i=1..n des C_i_perm(i)\n            (retournee dans RES0). Les listes RES1 (.. RESN) sont les\n            images des LIS1 (.. LISN) soumises a cette permutation-ci.\n            \n            L'option 'COMP' (pour COMPLET) calcule les (n!) permutations\n            possibles, ce qui peut etre tres long. L'option 'HONG'\n            utilise la methode \"Hongroise\", beaucoup plus rapide.\n       ",
  },
  {
    name: "ORDOVIBC",
    url: "ORDOVIBC",
    documentation:
      "$$$$ ORDOVIBC NOTICE  BP208322  21/09/06    21:15:06     11096          \n                                             DATE     21/09/06\n\n                                             \n    Operateur ORDO VIBC                           Voir aussi : VIBC ORDO\n    ------------------  \n       \n    ORDOVIBC TbasC2 (TbasC1);\n    \n    \n\n    Objet :\n    _______\n\n    La procedure ORDOVIBC cr\u00e9e des listreels {wR} et {wI} des frequences  \n    r\u00e9elles et imaginaires d'une base modale complexe TbasC2 obtenue \n    avec VIBC et ordonne les modes complexes : \n    - selon {wR} croissant si TbasC1 n'est pas fourni,\n    - selon l'ordre des modes de TbasC1 de mani\u00e8re \u00e0 minimiser\n      le produit scalaire complexe <\\psi1,\\psi2> + <w1,w2>\n      si TbasC1 est fourni.\n\n    Commentaire :\n    _____________\n\n    TbasC2       : base modales complexe a traiter \n                   (type TABLE, sous-type BASEMODA)\n                   avec les indices :\n      . 'MODES' = table des modes |non ordonn\u00e9e (Entree)\n                                  |ordonn\u00e9e     (Sortie)\n      . 'LISTE_FREQUENCES_REELLES'     = listreel des {wR} ordonn\u00e9es (Sortie)\n      . 'LISTE_FREQUENCES_IMAGINAIRES' = listreel des {wI} ordonn\u00e9es (Sortie)\n\n    TbasC1       : base modales complexe de reference pour \n                   l'ordonnancement de TbasC2\n                   (type TABLE, sous-type BASEMODA)",
  },
  {
    name: "ORIE",
    url: "ORIE",
    documentation:
      "$$$$ ORIE     NOTICE  CB215821  18/06/05    21:15:14     9830           \n                                             DATE     18/06/05\n\n    Operateur ORIENTER                       Voir aussi : VERS, INVE\n    ------------------                                    ORDO  \n\n    Objet :\n    _______\n\n    L'operateur ORIENTER construit un maillage identique au maillage\n    initial, mais dont tous les elements orientables sont orientes.\n\n    -------------------------------------------------------\n    | 1ere possibilite : orientation des elements massifs |\n    -------------------------------------------------------\n\n    GEO1 = ORIENTER GEO2 ;\n\n    Objet :\n    _______\n\n    Les elements sont orientes de la meme maniere que l'element de\n    reference correspondant (jacobien de la transformation geometrique\n    positif).\n\n    Commentaire :\n    _____________\n\n    GEO2  : maillage initial (type MAILLAGE)\n\n    GEO1  : maillage oriente (type MAILLAGE)\n\n    Remarque :\n    ----------\n\n    Les elements orientables pour chaque dimension d'espace sont les\n    suivants :\n    - 1D : SEG2, SEG3\n    - 2D : TRI3, TRI4, TRI6, TRI7, QUA4, QUA5, QUA8 et QUA9    \n    - 3D : TET4, TE10, TE15, PRI6, PR15, PR21, PYR5, PY13, PY19, CUB8,\n           CU20, CU27   \n\n    --------------------------------------------------------------------\n    | 2eme possibilite : orientation des elements surfaciques + coques |\n    --------------------------------------------------------------------\n\n     GEO1 = ORIENTER GEO2  | ('DIRECTION') VEC1  | ;\n                           |  'POINT'      POIN1 |\n\n    Objet :\n    _______\n    \n    En 3D, on oriente les elements en fonction de leur direction par\n    rapport a un vecteur ou a un point.\n\n    Commentaire :\n    _____________\n\n    GEO2  : maillage initial (type MAILLAGE)\n\n    VEC1  : vecteur definissant l'orientation (type POINT): le produit\n            scalaire avec VEC1 de la normale sortante a chaque element\n            est positif.\n\n    POIN1 : point definissant l'orientation (type POINT) : la normale\n            sortante a chaque element pointe vers le demi-espace\n            contenant POIN1.\n\n    GEO1  : maillage oriente (type MAILLAGE)\n\n    Les elements \"orientables\" sont de type TRI3/QUA4/TRI6/QUA8/\n    TRI7/QUA9.\n\n    Les elements de coques SHB8 (cub8) sont aussi orientables.\n\n    Remarque pour le SHB8 :\n    _______________________\n\n    On suppose qu'il n'y a qu'une couche d'element dans l'epaisseur et\n    que les 4 premiers noeuds du cub8 representnte une peau de la coque.\n    On reoriente ces elements de telle facon que le vecteur indiquant la\n    direction traverse le cube de la peau interne vers la peau externe.\n    Le maillage resultat aura les deux peaux en references qui pourront\n    etre isolees par l'operateur FACE (surface interne est numero 1 et\n    externe numero 2).",
  },
  {
    name: "ORTH",
    url: "ORTH",
    documentation:
      "$$$$ ORTH     NOTICE  CHAT      11/09/12    21:17:28     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur ORTHOGONALISER                 Voir aussi : SUIT\n    ------------------------                                 \n    CHPO1 = ORTH  ('SEMBLABLE') CHPO2 LCHPO1 LREEL1 (LCHPO2) RIG1 ...\n                                  ...  ( FLOT1 (N1) ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur ORTHOGONALISER orthogonalise un objet CHPO2 par rapport\n@ une suite d'objets Ui, orthogonaux entre eux et de meme type que CHPO2\nIl est fondamental que les objets Ui soient orthogonaux entre eux.\n\n    Commentaire :\n    _____________\n\n    L'orthogonalite choisie est definie au moyen d'un objet RIG1 tel que\nl'expression:\n                CHPO2 * RIG1 * U(i)\nait un sens et puisse etre comparee a 0.\n\n    'SEMBLABLE': mot-cle valable, si CHPO2 est de type CHPOINT. Il\n                 signifie que l'on est certain que tous les CHPOINTs\n                 s'appuient sur les memes points, avec les memes compo-\n                 santes. C'est une option qui accelere le calcul, mais\n                 qui demande a l'utilisateur une bonne maitrise des\n                 operandes fournis.\n\n     LCHPO1    : suite des U(i) cites plus haut (type LISTCHPO)\n\n     LREEL1    : la suite des produits U(i)*RIG1*U(i) (type LISTREEL)\n\n     LCHPO2    : la suite des produits RIG1*U(i) (type LISTCHPO)\n                 Si elle est fournie, cette suite evite de refaire\n                 les produits RIG1*U(i).\n\n     FLOT1     : precision d'orthogonalite demandee (type FLOTTANT).\n                 Elle est automatiquement modulee en fonction de la\n                 taille du probleme: Les erreurs de troncature sont\n                 plus importantes pour un gros probleme.\n\n     N1        : nombre maximal d'orthogonalisations (type ENTIER),\n                 necessaires pour compenser les erreurs d'arrondi.\n                 (Cela n'a de sens que si l'on a donne une precision\n                 FLOT1).\n                 Interet de prendre N1 superieur a 1 n'est pas du\n                 tout etabli.\n\n     CHPO2     : objet a orthogonaliser (type CHPOINT)\n\n     CHPO1     : objet resultat (type CHPOINT)",
  },
  {
    name: "OSCI",
    url: "OSCI",
    documentation:
      "$$$$ OSCI     NOTICE  MB234859  17/10/02    21:15:19     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur OSCI                           Voir aussi :\n    --------------  \n    EVOL2 = OSCI EVOL1 'AMOR' FLOT1 'FREQ' FLOT2 ( 'TEMPS' LREEL1 ) \n\n           ( 'DEPL' FLOT3 ) ( 'VITE' FLOT4 )  'COUL' COUL1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur OSCI permet de calculer la reponse X(t) d'un oscillateur\n@ un signal donne, solution de l'equation :\n\n                X''+ 2*FLOT1*W*X' + W*W*X =GAMMA(t)\n\n    Commentaire :\n    _____________\n\n    EVOL1     : Objet contenant le signal d'excitation\n                (type EVOLUTION).\n\n   'AMOR'     : mot-cle suivi de :\n    FLOT1     : amortissement de l'oscillateur (type FLOTTANT).\n\n   'FREQ'     : mot-cle suivi de :\n    FLOT2     : frequence de l'oscillateur (type FLOTTANT).\n\n   'TEMPS'    : mot-cle suivi de :\n    LREEL1    : liste de temps correspondant aux instants o\u00ba l'on\n                souhaite effectuer les calculs (type LISTREEL).\n                Par defaut, les temps sont ceux de l'objet EVOLUTION\n                contenant le signal d'excitation.\n\n   'DEPL'     : mot-cle suivi de :\n    FLOT3     : deplacement initial (type FLOTTANT).\n\n   'VITE'     : mot-cle suivi de :\n    FLOT4     : vitesse initiale (type FLOTTANT).\n\n   'COUL'     : mot-cle suivi de :\n    COUL1     : couleur de la courbe desiree (type MOT).\n\n    EVOL2     : objet resultat (type EVOLUTION).",
  },
  {
    name: "OTER",
    url: "OTER",
    documentation:
      "$$$$ OTER     NOTICE  CHAT      11/09/12    21:17:29     7124           \n                                             DATE     11/09/12\n                                           \n \n    Operateur OTER                            Voir aussi : ENLE\n    --------------  \n        OTER  TAB1 OBJET1 ;\n                                \n\n\n    Objet :\n    _______\n\n    Le foncteur OTER permet de supprimer l'indice OBJET1\n    de la table TAB1",
  },
  {
    name: "OU",
    url: "OU",
    documentation:
      "$$$$ OU       NOTICE  CHAT      11/09/12    21:17:30     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur OU                             Voir aussi :\n    ------------  \n    LOG3 =  OU  LOG1  LOG2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur OU travaille sur deux propositions logiques LOG1 et LOG2\n(type LOGIQUE). Le resultat est la disjonction de ces propositions.\n\n    Le resultat LOG3 est de type LOGIQUE.",
  },
  {
    name: "OUBL",
    url: "OUBL",
    documentation:
      "$$$$ OUBL     NOTICE  CHAT      11/09/12    21:17:30     7124           \n                                             DATE     11/09/12\n\n    Operateur OUBLIER                        Voir aussi : DETR MENA\n    -----------------                                     PLAC   ENLE  \n    OUBLIER OBJET1 ;                                      \n    OUBLIER TAB1 OBJET1\n\n\n    Objet :\n    _______\n\n    L'operateur OUBLIER efface de la memoire le nom d'objet OBJET1.\n    L'operateur OUBLIER efface de la memoire l'indice OBJET1 de la\n       table TAB1 (OBJET1 ne doit pas etre un FLOTTANT). L'ordre \n       des operandes doit etre respecte.",
  },
  {
    name: "OUVCOR",
    url: "OUVCOR",
    documentation:
      "$$$$ OUVCOR   NOTICE  MB234859  17/10/02    21:15:19     9577           \n                                             DATE     17/10/02\n\n\n    Procedure OUVCOR                       \n    _________________                                   \n\n    Objet :\n    _______\n\nMECANIQUE :\n\n  Cette procedure permet d'effectuer un calcul de l'ouverture de fissure\n  dans le cas complexe suivant le trajet de fissure. La fissure s'ouvre \n  perpendiculairement au trajet de fissure. L'ouverture de fissure \n  prend en compte les microfissures autour d'une fissure principale.\n  \n  Cette procedure est constitu\u00e9e de deux parties:\n\n -----------------\n  Premiere partie:\n -----------------\n\n  La premiere partie est compos\u00e9e de trois sous-procedures qui r\u00e9alise\n  les calculs dans l'ordre suivant : \n\n  - initou: permet de positionner les points de fissure\n  - zonfis: permet de detecter visuellement une zone de fissure\n  - postou: permet de caculer l'ouverture de fissure\n\n\n   Description des sous-proc\u00e9dures :\n   _________________________________\n\nL'entree pour initou:\nTAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres) \ndont voici la liste :\n\n    TAB1.GEO   MAILLAGE : structur\u00e9 a post-traiter (CUB8)\n    TAB1.POI   POI1     : sur un bord du maillage\n    TAB1.LH    MAILLAGE : ligne de limite haute\n    TAB1.LB    MAILLAGE : ligne de limite basse\n    TAB1.LG    MAILLAGE : ligne de limite gauche\n    TAB1.LD    MAILLAGE : ligne de limite droite\n    TAB1.PLA   MOTS     : 'XY', 'YZ', 'ZX' defini le plan de \n                          post-traitement\n\n    TAB1.HOR   LOGIQUE  : vrai si le cacule du saut horizontal\n    TAB1.PAS   ENTIER   : numero de pas\n\n    TAB1.CRITO FLOTTANT : critere du seuil pour la norme de saut de\n                          deplacement\n    TAB1.CRITP FLOTTANT : critere du seuil pour la position de fissure \n\nExemple d'utilisation : initou tab1;\n\nL'entree pour zonfis:\nVoici la liste :\n\n    TAB1.DROI LOGIQUE   : pour ajuster la zone de fissure\n    OBJET1    ENTIER    : numero de colonne de partie haute\n    OBJET2    ENTIER    : numero de colonne de partie basse\n    OBJET3    ENTIER    : numero de ligne de partie haute\n    OBJET4    ENTIER    : numero de ligne de partie basse  \n    OBJET5    FLOTTANT  : limite haute de la grille\n    OBJET6    ENTIER    : limite basse de la grille\n    OBJET7    ENTIER    : ajustement de translation gauche\n    OBJET8    ENTIER    : ajustement de translation droite \n    OBJET9    ENTIER    : ajustement en bas gauche ou droite  \n\nExemple d'utilisation :\n    ZONFIS TAB1 OBJ1 OBJ2 OBJ3 OBJ4 OBJ5 OBJ6 OBJ7 OBJ8 OBJ9;\n\n\nL'entree pour postou:\n\nTAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres) \ndont voici la liste :\n    TAB1   TABLE    : continuation du calcul avec initou et zonfis\n    OBJET1 FLOTTANT : demi-longueur de la ligne de post-traitement.\n\nExemple d'utilisation : postou tab1 obj1;\n\n\nLa sortie pour initou:\n\n    TAB1.LIGV   TABLE   : ligne verticale de repere\n    TAB1.LIGH   TABLE   : ligne horizontal de repere \n    TAB1.TELZ   TABLE   : taille de grille verticale\n    TAB1.TELX   TABLE   : taille de grille horizontale\n\n    TAB1.SDH    TABLE   : saut de deplacement dans les trois directions\n    TAB1.CDH    TABLE   : coordonnee du saut de deplacement\n\n    TAB1.OUFT   TABLE   : norme de saut sur chaque ligne\n    TAB1.COTX   TABLE   : coordonnee X sur chaque ligne\n    TAB1.COTZ   TABLE   : coordonnee Z sur chaque ligne\n    TAB1.OUFTT LISTREEL : norme de saut sur la structure\n    TAB1.COTXX LISTREEL : coordonnee X sur la structure\n    TAB1.COTZZ LISTREEL : coordonnee Z sur la structure\n\n    TAB1.PFO    TABLE   : maxima locaux de la norme de saut \n                          sur chaque ligne\n    TAB1.PFX    TABLE   : coordonnee X sur chaque ligne\n    TAB1.PFZ    TABLE   : coordonnee Z sur chaque ligne\n    TAB1.LPFO  LISTREEL : maxima locaux de la norme de \n                          saut sur la structure\n    TAB1.LPFX  LISTREEL : coordonnee X sur la structure\n    TAB1.LPFZ  LISTREEL : coordonnee Z sur la structure\n\n\nLa sortie pour zonfis:\n\n    TAB1.ZONE liste des points d'ajustement\n\n\nLa sortie pour postou:\n\n    TAB1.CHE    TABLE   : coordonnee des points de fissure dans une\n                          zone de fissure\n\n    TAB1.NORMM  TABLE   : points d'extremite de la ligne de \n                          post-traitement\n    TAB1.DIRNN  TABLE   : direction de la ligne de post-traitement\n\n    TAB1.OUVNO LISTREEL : ouverture normale sur les lignes de \n                          post-traitement\n    TAB1.OUVTO LISTREEL : ouverture tangentielle sur les lignes de \n                          post-traitement\n    TAB1.OUVNX LISTREEL : abscisse sur les lignes de post-traitement\n\n    TAB1.FISNO LISTREEL : ouverture normale au trajet de fissure\n    TAB1.FISTO LISTREEL : ouverture tangentielle au trajet de fissure\n    TAB1.FISNX LISTREEL : coordonnee X de l'ouverture normale\n    TAB1.FISNZ LISTREEL : coordonnee Z de l'ouverture normale\n\n\n -----------------\n  Deuxi\u00e8me partie:\n -----------------\n    \n    Dans cette partie, il s'agit d'un calcul de glissement et d'un \n    positionnement des points de changement de signe de glissement \n    (les points ou la fissure s'ouvre). La sous-procedure posigl \n    de la procedure ouvcor determine la position de fissure.\n\nL'entree pour posigl:\n\nTAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres) \ndont voici la liste :\n\n    TAB1.LACI MAILLAGE  : l'acier\n    TAB1.LBET MAILLAGE  : segment raccorde a l'acier\n    TAB1.PAS  ENTIER    : numero du pas\n\n    TAB1.HOR  LOGIQUE   : VRAI si les glissements sont horizontaux\n    TAB1.DIR  MOTS      : 'XX', 'YY', 'ZZ' direction de l'acier\n    TAB1.TACI TABLE     : MAILLAGE de chaque barre d'acier\n\n    TAB1.CRITG FLOTTANT : seuil pour le change de signe du glissement\n\n\nLa sortie pour posigl:\n\n    TAB1.NGLIS ENTIER   : noeuds du glissement\n    TAB1.PGLIS POI1     : coordonnees du glissement\n    TAB1.GLISX LISTREEL : glissement dans la direction X\n    TAB1.GLISY LISTREEL : glissement dans la direction Y\n    TAB1.GLISZ LISTREEL : glissement dans la direction Z\n\n    TAB1.GLIS TABLE     : glissements dans la direction de l'acier \n                          et leur coordonnees\n\n    TAB1.PG TABLE       : positions des glissements et leur coordonnees",
  },
  {
    name: "OUVFISS",
    url: "OUVFISS",
    documentation:
      "$$$$ OUVFISS  NOTICE  MB234859  17/10/02    21:15:19     9577           \n                                             DATE     17/10/02\n                                             \n\n    Procedure OUVFISS                          \n                                                    \n\n    OUVFISS ETAB (I) (|TR);\n                     (|PRIN);\n\n\n    Objet :\n    _______\n\nLa procedure OUVFISS calcule l'ouverture de fissure \u00e0 partir de l'etat \nde contraintes et des caracteristiques elastiques pour chaque pas de \ntemps stockes dans la table ETAB.\nOn fait l'hypothese qu'une fissure unique peut traverser un element \nfini et que la deformation est elastique autre part que dans la \nfissure.\nLe resultat est un tenseur d'ouverture de fissure (exprime \ndans l'unite de longueur utilisee pour le calcul). \nPar d\u00e9faut, les calculs sont effectu\u00e9s sur l'ensemble des pas de temps\ndisponibles dans la table fournie. On peut pr\u00e9ciser le num\u00e9ro du pas \u00e0\ntraiter si on ne souhaite effectuer les calculs que sur un pas de \ntemps.\nSi l'option 'TR' est indiqu\u00e9e, le r\u00e9sultat sera la trace du tenseur \nd'ouverture de fissure.\nSi l'option 'PRIN' est indiqu\u00e9e, le r\u00e9sultat ser le tenseur \nd'ouverture de fissure \u00e9crit dans sa base principale.\nLa methode est construite pour un modele utilise pour decrire le \ncomportement non lineaire du materiau s'appuie sur une regularisation \nenergetique (Hillerborg ou crack band), mais les resultats obtenus avec d'autres\ntypes de modeles (non local par exemple) devraient egalement \u00eatre \ncorrects.\n\nPlus de details peuvent \u00eatre trouves dans la publication suivante que \nvous \u00eates pries de referencer si vous utilisez cette procedure.\n\nM. Matallah , C. La Borderie and O. Maurel, \"A practical method to \nestimate crack openings in concrete structures\", \nInt. J. Numer. Anal. Meth. Geomech. (2009) doi: 10.1002/nag.876\n\n\n\n\n    Commentaires :\n    _____________\n\n    ETAB   : Table issue d'un calcul PASPAS.\n\n    ETAB.OUV.I : Ouverture de fissure au pas \"i\" de type Champ par elements \n\n     Exemple d'utilisation :\n    ________________________\n\n     ...\n     ...\n     PASAPAS ETAB;\n     OUVFISS ETAB;\n     I=DIME (ETAB . TEMPS);\n     TRAC ETAB . OUV . (I-1) ETAB.MODELE;\n\n$$$$\n \n \n \n ",
  },
  {
    name: "PARA",
    url: "PARA",
    documentation:
      "$$$$ PARA     NOTICE  CHAT      11/09/12    21:17:30     7124           \n                                             DATE     11/09/12\n\n    Operateur PARABOLE                       Voir aussi : CER3\n    ------------------                                    CERC  \n    LIG1 = PARA  (N1) ('DINI' DENS1) ('DFIN' DENS2) POIN1 POIN3 POIN2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur PARA construit un arc de parabole joignant deux points\ntel que l'intersection des tangentes en ces points soit un point speci-\nfie.\n\n    Commentaire :\n    _____________\n\n    N1      : nombre d'elements generes (type ENTIER)\n\n    POIN1 | : extremites de l'arc de parabole (type POINT)\n    POIN2 |\n\n    POIN3   : point intersection des tangentes (type POINT)\n\n    DENS1 | : densites associees aux extremites de l'arc de parabole\n    DENS2 |   (type FLOTTANT)\n\n    LIG1    : arc de parabole (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n\n    Si N1 est specifie et positif, N1 elements d'egale longueur seront\nengendres.\n\n    Si N1 est negatif, N1 elements seront engendres et leurs tailles\nseront calculees en tenant compte des densites des extremites.\n\n    Si les densites associees aux points POIN1 et POIN2 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ndeuxieme point, derriere le mot-cle 'DFIN'.\n\n    Si une ligne LIG2 est donnee a la place du point POIN1 (ou POIN2)\ncette ligne est prolongee jusqu'au point POIN2 (elle commence au\npoint POIN1).\n\n    Si le point POIN2 n'est pas donne, la premiere extremite de la\nligne LIG1 est prise en compte, ce qui permet de fermer celle-ci.",
  },
  {
    name: "PARASTAT",
    url: "PARASTAT",
    documentation:
      "$$$$ PARASTAT NOTICE  CHAT      11/09/12    21:17:31     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure PARASTAT                       Voir aussi :\n    ------------------  \n    FLOT1 FLOT2 FLOT3 FLOT4 = PARASTAT TAB1;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule les parametres statistiques associes\n    a un ensemble de valeurs.\n\n    Commentaire :\n    _____________\n\n\n    TAB1 = (type TABLE)\n\n    TAB1.i.POINT = i-eme point d'integration (type FLOTTANT)\n\n    TAB1.i.POIDS = i-eme poids d'integration (type FLOTTANT)\n\n    FLOT1 = moyenne (type FLOTTANT)\n\n    FLOT2 = ecart-type (type FLOTTANT)\n\n    FLOT3 = coefficient de symetrie (type FLOTTANT)\n\n    FLOT4 = coefficient d'aplatissement (type FLOTTANT)",
  },
  {
    name: "PARC",
    url: "PARC",
    documentation:
      "$$$$ PARC     NOTICE  CHAT      11/09/12    21:17:31     7124           \n                                             DATE     11/09/12\n\n    Operateur PARC                           Voir aussi : CERC\n    --------------  \n    GEO1 = PARC (N1)  POIN1 CENTR1 POIN2  ('DINI' DENS1) ('DFIN' DENS2)\n\n\n\n    Objet :\n    _______\n\n    L'operateur PARC permet de construire une ligne constituee d'une\nsuccession d'arcs de paraboles, qui approchent un arc de cercle de\ncentre CENTR1, construit entre les points POIN1 et POIN2.\nLes elements sont des segments a 3 noeuds, dont les extremites sont\nsur l'arc de cercle et tangentes a l'arc de cercle.\n\n\n\n    Commentaire :\n    _____________\n\n    POIN1 | : points extremite de l'arc de cercle (type POINT)\n    POIN2 |\n\n    CENTR1  : centre du cercle (type POINT)\n\n    N1      : nombre d'elements generes (type ENTIER)\n\n    DENS1 | : densites associees aux points POIN1 et POIN2\n    DENS2 |   (type FLOTTANT)\n\n    GEO1    : ligne creee (type MAILLAGE)\n\n\n    Remarque 1 :\n    ____________\n\n     Si N1 n'est pas specifie, le nombre d'elements engendres et leurs\ntailles seront calcules en fonction des densites des extremites.\n     Si N1 est specifie et positif, N1 elements d'egale longueur\nseront engendres.\n     Si N1 est negatif, N1 elements seront engendres et leurs tailles\nseront calculees en tenant compte des densites des extremites.\n\n     Remarque 2 :\n     ____________\n\n     Si les densites associees aux points POIN1 et POIN2 ne sont pas\ncorrectes, il est possible de les surcharger. Pour le premier point, il\nfaut donner la bonne valeur derriere le mot-cle 'DINI' et, pour le\ndeuxieme point, derriere le mot-cle 'DFIN'.\n\n     Remarque 3 :\n     ____________\n\n     Si une ligne LIG1 est donnee a la place du point POIN1 (ou POIN2)\ncette ligne est prolongee jusqu'au point POIN2 (la ligne commence au\npoint POIN1).\n     Si le point POIN2 n'est pas donne, la premiere extremite de la\nligne LIG1 est consideree; ce qui permet de fermer celle-ci.",
  },
  {
    name: "PARMCHI2",
    url: "PARMCHI2",
    documentation:
      "$$$$ PARMCHI2 NOTICE  CHAT      11/09/12    21:17:31     7124           \n                                             DATE     11/09/12\n \n    Methode PARM CHI2                         Voir aussi : CHI2\n    ----------------                                      OBJE  \n     OBJ1  = OBJET PARMCHI2  ;\n\n\n        Objet\n        -----\n\n     La methode PARMCHI2 permet de creer un objet de type objet et de\n     CLASSE PARMCHI2. Un tel objet contient les donnees des parametres\n     de CHI2. Cette methode permet de tester la coherence des donnees\n     lors de l'ecriture.\n\n        Commentaires\n        -------------\n\n        Les methodes associees a PARMCHI2 sont\n\n   GEPS   GITMAX   GITERSOL   GIAFFICH   GPRECPE   GNITERPE \n   GDELPE   GMDELPE   GNFI   GSORTIE   GIMPRIM\n\n   GEPS   Charge le contenu de l'indice EPS.\n          Un REEL, la precision du calcul.Valeur par defaut 1.E-4\n\n   GITMAX  Charge le contenu de l'indice ITMAX.ENTIER nombre maximal \n           d'iterations dans la resolution du systeme chimique.\n           Valeur par defaut 20.\n\n   GITERSOL Charge le contenu de l'indice ITERSOLI ( ENTIER). Nombre\n           maximal d'iterations, pour trouver les mineraux precipites.\n            Valeur par defaut 10.\n\n   GIAFFICH Charge le contenu de l'indice IAFFICHE, un ENTIER permettant\n        le choix d'affichage des resultats pour les solutions solides.\n             1  coefficients stoechiometriques des solutions solides\n             2  fractions molaires des solutions solides\n             Valeur par defaut 2.\n\n   GPRECPE Charge le contenu de l'indice PRECPE( REEL).La precision\n           sur le calcul redox. Valeur par defaut 1.E-10\n\n   GNITERPE Charge le contenu de l'indice NITERPE ( ENTIER).\n           Le nombre maximal d'iterations de dichotomie.\n           Valeur par defaut 50.\n\n   GDELPE  Charge le contenu de l'indice DELPE ( REEL)\n           L'intervalle initial des iterations de dichotomie.\n           La valeur par defaut est 1.\n\n\n   GMDELPE Charge le contenu de l'indice MDELPE (ENTIER). Le nombre\n           maximal de pas dans la recherche de l'intervalle\n           de dichotomie. Valeur par defaut 20.\n           ( evite de cycler lorsque l'on est tres loin de la solution)\n\n\n   GNFI Charge le contenu de l'indice NFI (ENTIER). Nombre de cycles\n       de chimie.Valeur par defaut 4. Un cycle correspond  a la\n       sequence:\n                    * calcul de la force ionique\n                    * modification des logk\n                                           |---\n                    * boucle mineraux a    |* resolution ( iterative )\n                        precipiter         |\n                                           |* verification des mineraux\n                                           |  precipites\n                                           |---\n\n\n   GSORTIE  Charge le contenu de l'indice SORTIE ( LISTMOTS).\n           Ces mots doivent etre pris dans la liste:\n             'PREC' 'FION' 'TYP6' 'TYP3' 'NTY4' 'TYP5' 'SURF' 'SOLU'\n             'POLE' 'LOGK'\n             Ils servent a preciser les elements que l'on veut voir\n             figurer dans les resultats.\n\n\n   GIMPRIM Charge le contenu de l'indice IMPRIM (LISTENTI). Dans le cas\n             ou l'on demande un niveau de message superieur a 0\n             ( OPTION IMPI 1 ), ceci permet de limiter les impressions\n             aux seuls noeuds du maillage dont le numero figure dans \n             la liste.",
  },
  {
    name: "PART",
    url: "PART",
    documentation:
      "$$$$ PART     NOTICE  JC220346  16/11/21    21:15:03     9192           \n                                             DATE     16/11/21\n\n  Operateur PARTITION                      Voir aussi :\n    -------------------  \n    TABL1 = PART ('NESC') | 'OPTI' MAIL1 (ENTI1) ;\n                          |\n                          | 'ARLE' | MAIL1 | ENTI1 ;\n                          |        | MODL1 |      \n                          |                \n                          | 'CONN' MAIL1 ;\n                          |                \n                          | 'SEPA' MAIL1 SEPA1 (SEPA2 ...) ;\n\n                                avec SEPAi = | 'FACE'                \n                                             | 'LIGN'                \n                                             | 'MAIL' MAIL2          \n                                             | 'ANGL' (FLOT2) ('TELQ')\n                            \n                  \n\n    Objet :\n    _______\n\n    L'operateur PART construit une partition d'un objet, soit sa\n    decomposition en sous-ensembles non vides, disjoints deux a deux\n    et dont l'union correspond a l'objet initial.\n    \n    Note : en l'absence du mot-cle 'NESC', la TABLE renvoyee en sortie\n           sera de SOUSTYPE 'ESCLAVE'.\n    \n    \n    +---------------------+\n    | Partition OPTIMISEE |\n    +---------------------+\n    \n    Tente d'equilibrer la taille des sous-parties d'un maillage et\n    de minimiser le nombre de points sur les frontieres.\n\n    \n    Commentaire :\n    _____________\n    \n    MAIL1 : Geometrie a partitionner (type MAILLAGE)\n    \n    ENTI1 : Nombre de zones dans la partition (type ENTIER)\n    \n            Doit etre une puissance entiere positive de 2. Par defaut,\n            on prend la plus petite puissance entiere positive de 2\n            superieure au nombre d'assistants\n    \n    TABL1 : Partition du maillage/modele (type TABLE)\n            C'est une table dont les indices sont les entiers compris\n            entre 1 et ENTI1 et dont les valeurs sont les maillages\n            composant la partition\n            \n    \n    +-----------------------------------+\n    | Partition selon un motif ARLEQUIN |\n    +-----------------------------------+\n    \n    Disperse des rangees d'elements adjacents dans les differentes\n    zones de la partition.\n\n    \n    Commentaire :\n    _____________\n    \n    MAIL1 : Geometrie a partitionner (type MAILLAGE)\n        \n    MODL1 : Modele a partitionner (type MMODEL)    \n    \n    ENTI1 : Nombre de zones dans la partition (type ENTIER)\n    \n    TABL1 : Partition du maillage/modele (type TABLE)\n            C'est une table dont les indices sont les entiers compris\n            entre 1 et ENTI1 et dont les valeurs sont les maillages\n            ou modeles composant la partition\n    \n    \n    +-----------------------------------+\n    | Partition en composantes CONNEXES |\n    +-----------------------------------+\n    \n    Decompose un maillage en ses composantes connexes.\n    \n    Une composante connexe regroupe l'ensemble des elements joignables,\n    c'est-a-dire entre lesquels il est possible de trouver une chaine\n    d'elements ou deux maillons consecutifs partagent au moins 1 noeud.\n    \n    \n    Commentaire :\n    _____________\n    \n    MAIL1 : Geometrie a partitionner (type MAILLAGE)\n    \n    TABL1 : Partition du maillage (type TABLE)\n            C'est une table dont les indices sont les entiers compris\n            entre 1 et le nombre de composantes connexes et dont les\n            valeurs sont les maillages formant les composantes connexes\n    \n    \n    +---------------------------------+\n    | Partition suivant un SEPARATEUR |\n    +---------------------------------+\n    \n    Separe les composantes connexes d'un maillage (voir definition\n    ci-dessus) puis les subdivise suivant des regles donnees :\n    \n    \n    1) Mot-cle 'LIGN' (destine aux maillages de lignes) :\n    \n            Les noeuds appartenant a plus de 2 elements jouent le\n            role de separateur (ces noeuds peuvent par ailleurs \n            etre determines grace a l'operateur POIN 'JONC').\n            \n            => Plusieurs lignes se rejoignant en un meme noeud\n               formeront autant de zones distinctes\n               \n                \n    2) Mot-cle 'FACE' (destine aux maillages surfaciques) :\n                \n            Les aretes appartenant a plus de 2 elements jouent le\n            role de separateur (ces lignes peuvent par ailleurs\n            etre determinees par l'operateur CONT 'INTE').\n\n            => Deux surfaces ayant seulement 1 noeud en commun seront\n               dans des zones distinctes\n               \n            => L'intersection de plusieurs surfaces (suivant une ou\n               plusieurs lignes) aboutira a autant de zones distinctes \n    \n    \n    3) Mot-cle 'MAIL' :\n       \n           Le separateur est fourni sous la forme d'un maillage\n           quelconque, typiquement surfacique pour partitionner des\n           volumes, lineique pour partitionner des surfaces ou de POI1\n           pour partitionner des lignes.\n           \n           C'est une generalisation des options 'LIGN' et 'FACE'.\n           \n           => Deux elements voisins du maillage a partitionner dont\n              l'interface est incluse dans un element appartenant au\n              maillage separateur seront affectes a des zones distinctes\n    \n    \n    4) Mot-cle 'ANGL' (destine aux maillages de lignes/surfaces) :\n    \n           Les aretes vives ou les angles vifs jouent le role de\n           separateurs.\n    \n           => Deux elements voisins appartiennent a la meme zone\n              si et seulement si l'angle entre leurs vecteurs normaux\n              (surfaces) ou tangents (lignes) forment un angle plus\n              petit qu'une valeur FLOT2 specifiee par l'utilisateur\n              (angle non oriente compris entre 0 et 180 degres, par\n               defaut 20 degres)\n           \n           => On considere par defaut que les elements voisins qui\n              forment un angle de 180 degres appartiennent bien a la\n              meme zone. Si ce n'est pas le comportement desire, il\n              faut ajouter le mot-cle 'TELQ'\n    \n    \n    Commentaire :\n    _____________\n    \n    MAIL1 : Geometrie a partitionner (type MAILLAGE)\n    \n    MAIL2 : Geometrie constituant le separateur (type MAILLAGE)\n            Ses elements sont typiquement une dimension plus petite\n            que ceux de MAIL1 (surfaces pour separer un volume, lignes\n            pour separer une surface et points pour separer des lignes)\n            \n    FLOT1 : Angle en-deca duquel une arete (ou un angle) est consideree\n            comme suffisamment \"vive\" pour separer deux zones voisines\n            (valeur entre 0 et 180 degres, type FLOTTANT)\n    \n    TABL1 : Partition du maillage (type TABLE)\n            C'est une table dont les indices sont les entiers compris\n            entre 1 et le nombre de zones et dont les valeurs sont les\n            maillages formant les differentes zones",
  },
  {
    name: "PASAPAS",
    url: "PASAPAS",
    documentation:
      "$$$$ PASAPAS  NOTICE  CB215821  21/08/20    21:15:32     11089          \n                                             DATE     21/08/20\n\n    Procedure PASAPAS                        Voir aussi : PECHE\n    _________________                                     EXPLORER  \n                                                          CHARTHER  \n                                                          PAS_SAUV  \n\n    TAB1.  ACCELERATIONS               MODELE\n           AMORTISSEMENT               MOVA\n           AUGMENTATION_AUTOMATIQUE    MTOL\n           AUTOCRIT                    NB_BOTH\n           AUTORESU                    NITERINTER_MAX\n           AUTOMATIQUE                 NITER_KTANGENT\n           AUTOPAS                     NMAXSUBSTEPS\n           BCSTH                       NPAS_TRACKING\n           BLOCAGES_DIFFUSIONS         NRMAX\n           BLOCAGES_MECANIQUES         ORDRE\n           BLOCAGES_THERMIQUES         PARAMETRE_DE_PILOTAGE\n           CAPACITE_CONSTANTE          PAS_AJUSTE\n           CARACTERISTIQUES            PAS_MAX\n           CELSIUS                     PILOTAGE_INDIRECT\n           CHARGEMENT                  PRECDECHARGE\n           CONCENTRATIONS              PRECISINTER\n           CONDUCTIVITE_CONSTANTE      PRECISION\n           CONN                        PREDICTEUR\n           CONSOLIDATION               PROCEDURE_CHARMECA\n           CONTRAINTES                 PROCEDURE_CHARTHER\n           CONVERGENCE_FORCEE          PROCEDURE_PARATHER\n           CONVERGENCE_MEC_THE         PROCEDURE_PERSO1\n           CONVERGENCE_MONOTONE        PROCEDURE_PERSO2\n           CRITERE_COHERENCE           PROCEDURE_REEV_MEC\n           CTE_STEFAN_BOLTZMANN        PROCEDURE_REEV_THE\n           CTOL                        PROCEDURE_THERMIQUE\n           DEFORMATIONS_INELASTIQUES   PROCESSEURS\n           DELTAITER                   PROJECTION\n           DEPLACEMENTS                PROPORTIONS_PHASE\n           DEPLACEMENTS_PILOTES        REACTIONS\n           DYNAMIQUE                   REACTIONS_DIFFUSIONS\n           ECONOMIQUE                  REACTIONS_THERMIQUES\n           FEFP_FORMULATION            REAC_GRANDS\n           FORCES_PILOTEES             RELAXATION_DUPONT\n           FREA1                       RELAXATION_NONCONV\n           FTOL                        RELAXATION_THETA\n           GRANDS_DEPLACEMENTS         RENORMALISATION\n           HYPOTHESE_DEFORMATIONS      RIGIDITE_AUGMENTEE\n           INITIALISATION              RIGIDITE_CONSTANTE\n           K_SIGMA                     SOUS_INCREMENT\n           K_TANGENT                   SOUS_RELAXATION\n           K_TANGENT_ITER0             STABILITE\n           K_TANGENT_PERT              SUBSTEPPING\n           K_TANGENT_SYME              TEMPERATURES\n           K_TANG_PERT_C1              TEMPS\n           LAGRANGIEN                  TEMPS_CALCULES\n           LBC                         TEMPS_SAUVEGARDES\n           LINESEARCH                  TEMPS_SAUVES\n           MAN                         TRACKING\n           MASSE_CONSTANTE             TYP_TRAC\n           MAXDEFOR                    TTOL\n           MAXSOUSPAS                  UPDATE_LAGRANGIAN\n           MAXISOUSPAS                 VARIABLES_INTERNES\n           MAXITERATION                VITESSES\n           MES_SAUVEGARDES             ZONE_DE_PILOTAGE\n\n\n\n\n\n\n\n\n\n    Objet :\n    _______\n\nMECANIQUE :\n\n  Cette procedure permet d'effectuer un calcul non lineaire incremental\n  La non linearite peut provenir, soit du materiau (plasticite), soit\n  des grands deplacements soit des deux a la fois.\n  Les resultats sont calcules a des valeurs du parametre d'evolution\n  (pseudo temps ou temps reel) definies par l'utilisateur.\n  Sous l'option MODE FREQ, la procedure resout l'\u00e9quation dynamique\n  sur la base modale \u00e9tendue selon l'approche dite spectrale ou\n  fr\u00e9quentielle. Implicitement un instant est interpr\u00e9t\u00e9 comme une\n  fr\u00e9quence pour l'objet CHARGEMENT sans changement de terminologie.\n  La proc\u00e9dure propose un balayage de fr\u00e9quences par d\u00e9faut lorsque la\n  liste des TEMPS_CALCULES n'est pas pr\u00e9cis\u00e9e.\n\n\nTHERMIQUE :\n\n  Cette procedure permet d'effectuer un calcul lineaire et\n  non-lineaire en tenant compte de la conduction, de la convection\n  et du rayonnement.\n\nDIFFUSION :\n\n  Cette procedure permet de resoudre un proble lineaire ou non-lineaire\n  de diffusion.\n\n  Il est possible d'effectuer un calcul couplant MECANIQUE, THERMIQUE\n  et DIFFUSION. THERMIQUE et DIFFUSION sont resolues simulatnement.\n\n   Commentaire :\n   _____________\n\nEn entree, TAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres,\net en majuscules s'ils sont mis entre cotes) dont voici la liste :\n\n BLOCAGES_DIFFUSIONS   : blocages de diffusion (type RIGIDITE).\n\n BLOCAGES_MECANIQUES   : blocages mecaniques (type RIGIDITE).\n\n BLOCAGES_THERMIQUES   : blocages thermiques (type RIGIDITE).\n\n CARACTERISTIQUES  : Champ de caracteristiques materielles et\n                     eventuellement geometriques si necessaire\n                     (type MCHAML ,sous-type CARACTERISTIQUES)\n                     Ses composantes peuvent etre de type :\n                             1) FLOTTANT si la composante est\n                                est constante sur toute la\n                                structure;\n                             2) MCHAML si la composante depend\n                                uniquement des points de la\n                                structure;\n                             3) EVOLUTION si la composante\n                                varie en fonction d'un seul\n                                parametre.\n                             4) NUAGE si la composante est\n                                decrite par une courbe de type\n                                EVOLUTION dependant d'un seul\n                                parametre.\n\n CHARGEMENT  : definition du chargement en fonction du parametre\n               d'evolution (type CHARGEME) (cree par l'operateur CHAR).\n               Les chargements elementaires sont obligatoirement\n               nommes:\n\n                    -  la temperature                    T\n                    -  les concentrations imposees       CIMP\n                    -  les deplacements imposes          DIMP\n                    -  les temperatures imposees         TIMP\n                    -  Les autres chargements (meca)     MECA\n                    -  Flux (en consolidation)           FLUX\n                    -  Les flux de diffusion (diffusion) QCO\n                    -  Les flux de chaleur (thermique)   Q\n                    -  Les temperatures ext (convection) TECO\n                    -  Les temperatures ext (rayonnement)TERA\n                    -  Une deformation imposee           DEFI\n                    -  Des blocages mecaniques           BLOM\n                    -  Des blocages thermiques           BLOT\n                    -  Des blocages diffusions           BLOD\n                    -  Le modele                         MODE\n                    -  Ses carateristiques materielles   MATE\n                    -  Des parametres externes de nom... MOT1\n\n\n        \"Les autres chargements\" concernent uniquement la mecanique\n        et representent un champ a ajouter au second membre\n        (type  = CHPOINT)\n\n        \"Les flux de diffusion\" ont pour nom de composante QCO par\n        defaut.  Toutefois, l'utilisateur a la possibilite de le\n        surcharger (voir notice operateur MODE). Dans ce cas,\n        il convient de mettre le nom de composante choisi.\n\n        \"Les variables exterieures\" sont les variables dont la donnee\n        est indispensable pour instancier le champ de materiau\n        (type conseille = MCHAML). Il peut s'agir en particulier des\n        parametres externes du modele, s'il en existe.\n\n        Dans le cas de chargement devant etre evalues a la fin du pas\n        (par exemple les pressions suiveuses, le rayonnement)\n        il faut utiliser la possibilite offerte par PROCEDURE_CHARMECA\n        ou PROCEDURE_CHARTHER.\n\n        Dans le cas de \"variables exterieures\" devant etre mises a jour\n        au cours des iterations thermiques, afin de prendre en compte\n        leur evolution sur le champ de materiau, il faut utiliser la\n        possibilite offerte par PROCEDURE_PARATHER.\n\n\n PROCEDURE_CHARMECA :  Logique. VRAI s'il faut evaluer une partie\n                       du chargement mecanique au cours des iterations\n                       d'equilibrage. Ce calcul se fera a travers une\n                       procedure CHARMECA dont l'appel est :\n                         TAB2 = CHARMECA TAB1  TIME;\n                       TAB1 est la table passee a PASAPAS et TIME est\n                       l'instant pour lequel on veut la charge\n                       TAB2.'ADDI_SECOND'. Il faut evaluer le chargement\n                       sur la configuration courante.  Voir exemples\n                       gdep2 et gdep3. Ils montrent comment modeliser\n                       une pression suiveuse.\n\n PROCEDURE_CHARTHER :  Logique. VRAI s'il faut evaluer une partie du\n                       chargement thermique au cours des iterations pour\n                       le calcul d'un pas de temps.Ce calcul se fera a\n                       travers une procedure CHARTHER dont l'appel est :\n                         TAB2 = CHARTHER TAB  TIME;\n                       TAB est la table passee a PASAPAS et TIME est\n                       l'instant pour lequel on veut la charge\n                       TAB2.'ADDI_SECOND'. Il faut evaluer le chargement\n                       sur la configuration courante.\n\n PROCEDURE_PARATHER :  Logique a VRAI s'il faut mettre a jour des\n                       \"variables exterieures\" a chaque iteration d'un\n                       calcul thermique.  Cette mise a jour se fera via\n                       la procedure PARATHER dont l'appel est \"PARATHER\n                       TAB1 INST ;\", TAB1 etant la table passee a\n                       PASAPAS et INST l'instant pour lequel on evalue\n                       les \"variables exterieures\" necessaires a la\n                       thermique. (Un exemple de procedure PARATHER est\n                       disponible dans le cas-test\n                       \"exemple_parather.dgibi\".)\n\n\n TEMPS_CALCULES : definition des valeurs du parametre d'evolution\n                  (ou du temps) pour lesquelles on effectue le calcul\n                  (type LISTREEL) (cree par l'operateur PROG).\n                  Dans le cas ou cette donnee est absente, le code\n                  passe en ajustement automatique de pas et considere\n                  comme liste des temps a calculer la liste des temps\n                  sauves donnee sous l'indice TEMPS_SAUVES.\n                  (voir PAS_AJUSTE)\n\n TEMPS_SAUVES : definition des valeurs du\n                (ou du temps) pour lesquelles on met les resultats dans\n                les tables de resultats\n                (type LISTREEL) (cree par l'operateur PROG) (facultatif)\n\n TEMPS_SAUVEGARDES : definition des valeurs du parametre d'evolution\n                     pour lesquelles PASAPAS appelle l'operateur SAUV\n                     avec, en argument, la table passee a PASAPAS. La\n                     liste fournie doit etre une sous liste des l'indice\n                     TEMPS_SAUVES. Il faut avoir defini le fichier de\n                     sauvegarde (par OPTION SAUV '...';) avant l'appel\n                     a PASAPAS.\n                     REMARQUE IMPORTANTE : la sauvegarde n'est effectuee\n                     que s'il s'est ecoule plus de 5 minutes depuis la\n                     precedente sauvegarde afin de limiter les acces disque.\n MES_SAUVEGARDES : Table permettant de demander de garder certains\n                   resultats en plus des ceux sauves automatiquement.\n\n                   Les indices permis sont :\n\n                   -'DEFIN'=VRAI pour les deformations inelastiques\n                   -'DEFTO'=VRAI pour les deformations.\n                                 Attention, pas necessairement egal\n                                 aux deformations totales.\n                   -'DEFLO'=VRAI pour les  deformations logarithmique si\n                                 grandes deformations utilisateurs\n                   -'ROTAF'=VRAI pour les rotations du repere\n                                 corotationnel si grandes deformations\n                                 Jaumann\n\n                   Lorsque la table MES_SAUVEGARDES est definie, les\n                   indices non renseignes sont pris egal a FAUX.\n\n                   On peut de plus utiliser cette table pour faire\n                   transiter vers la procedure PAS_SAUV des informations\n                   supplementaires. Cette procedure, qui realise la mise\n                   des resultats dans les tables de resultats, peut etre\n                   surchargee par l'utilisateur (voir la notice de la\n                   procedure PAS_SAUV)\n\n ECONOMIQUE   :   Logique VRAI si on veut que pasapas recupere la place\n                  memoire, prise par les resultats, au fur et a mesure\n                  des sauvegardes.\n\n MODELE : Objet modele (type MMODEL) englobant toute la structure\n          excepte celle correspondant a la RIGIDITE_CONSTANTE\n\n   indice           type objet pointe            commentaires\n\n HYPOTHESE_DEFORMATIONS   MOT      Indique l'hypothese faite sur le calcul du tenseur des deformations.\n                                   Les valeurs possibles sont :\n                                   LINEAIRE (par defaut) : deformation infinitesimale\n                                   QUADRATIQUE : deformation de Green-Lagrange\n                                   TRUESDELL : deformation de Truesdell\n                                   JAUMANN : deformation de Jaumann\n                                   UTILISATEUR : deformation d\u00e9finie par l'utilisateur\n GRANDS_DEPLACEMENTS   LOGIQUE     VRAI pour reactualiser la geometrie a chaque\n                                   iteration dans le cas des grands deplacements.\n                                   En standard, cette option entraine :\n                                   -- K_SIGMA = VRAI\n                                      peut etre impose a FAUX en l'ecrivant\n                                   -- HYPOTHESE_DEFORMATIONS = QUADRATIQUE\n                                      peut etre modifie en l'ecrivant\n                                   -- La sauvegarde des deformations totales.\n DYNAMIQUE             LOGIQUE     VRAI si calcul dynamique\n TRACKING              LOGIQUE     VRAI si le trcaking est active\n                                   (methode EFEM).\n TYP_TRAC              MOT         FIXED_HC : tracking par resolution\n                                   d un probleme de conduction\n                                   VARIABLE_HC : tracking par resolution\n                                   d un probleme de convection/diffusion\n                                   isotrope\n                                   VARIABLE_HCD_SU : tracking par resolution\n                                   d un probleme de convection/diffusion\n                                   anisotrope\n MASSE_CONSTANTE       RIGIDITE    matrice de masse constante.\n                                   Par exemple masses lumpees.\n                                   La masse coherente est calculee\n                                   automatiquement a partir du modele\n                                   et du champ de materiau\n AMORTISSEMENT         RIGIDITE    matrice d'amortissement,\n                                   facultative en calcul dynamique\n RIGIDITE_AUGMENTEE    RIGIDITE    matrice d'augmentation de la raideur.\n                                   N'intervenant pas dans le calcul\n                                   du residu, elle ne change pas la\n                                   solution mais peut influer sur la\n                                   convergence.\n                                   La masse ou l'amortissement sont\n                                   classiquement utilisees.\n AUGMENTATION_AUTOMATIQUE LOGIQUE  Si la rigidite augmentee est fournie, calcul\n                                   automatique du coefficient multiplicateur.\n                                   Sinon calcul automatique de la matrice\n                                   d'augmentation.\n RIGIDITE_CONSTANTE    RIGIDITE    matrice de rigidite constante ajoutee\n                                   a celle de la structure. Par exemple,\n                                   une rigidite decrivant des appuis\n                                   elastiques (voir operateur APPUI).\n                                   Le champ de forces nodales associe\n                                   est calcule en multipliant le champ\n                                   de deplacement par cette matrice.\n CAPACITE_CONSTANTE    RIGIDITE    matrice de capacite ajoutee a celle\n                                   du modele thermique.\n                                   Les flux thermiques nodaux associes\n                                   sont calcules en multipliant le champ\n                                   de temperature par cette matrice.\n                                   Pour les problemes de DIFFUSION, une\n                                   matrice de capacite de diffusion peut\n                                   aussi etre ajoutee par cette entree.\n CONDUCTIVITE_CONSTANTE  RIGIDITE  matrice de conductivite ajoutee a\n                                   celle du modele thermique.\n                                   Les flux thermiques nodaux associes\n                                   sont calcules en multipliant le champ\n                                   de temperature par cette matrice.\n                                   Pour les problemes de DIFFUSION, une\n                                   matrice de diffusivite peut aussi etre\n                                   ajoutee par cette entree.\n PILOTAGE_INDIRECT     LOGIQUE     VRAI si on desire activer le pilotage\n                                   indirect du chargement mecanique. Il\n                                   est possible de specifier differents\n                                   equations de pilotage en modifiant la\n                                   procedure PILOINDI.\n                                   Voir l'exemple : pilotage_indirect_1.dgibi\n DEPLACEMENTS_PILOTES  CHPOINT     Pour le PILOTAGE_INDIRECT, il s'agit du\n                                   CHPOINT, issu de DEPI, indiquant la\n                                   direction du chargement en deplacements\n                                   imposes (peut etre unitaire)\n FORCES_PILOTEES       CHPOINT     Pour le PILOTAGE_INDIRECT, il s'agit du\n                                   CHPOINT de forces nodales indiquant la\n                                   direction du chargement en forces\n                                   imposees (peut etre unitaire)\n PARAMETRE_DE_PILOTAGE EVOLUTION   Evolution en fonction du temps du parametre\n                                   de pilotage a etre respecte via PILOINDI.\n ZONE_DE_PILOTAGE      MAILLAGE    Pour le PILOTAGE_INDIRECT, il s'agit de\n                                   preciser la region ou la deformation\n                                   maximale doit etre cherchee (valable pour\n                                   le critere de pilotage standard de PILOINDI).\n                                   Cet indice est facultatif. S'il n'est pas\n                                   renseigne, l'option par default est activee\n                                   (recherche sur l'ensemble du maillage).\n AUTOMATIQUE           LOGIQUE     VRAI si on desire piloter le\n                                   chargement en fonction d'un\n                                   critere sur le champ de\n                                   deplacement. Par defaut le pas\n                                   de charge est choisi pour que\n                                   l'increment de deformation\n                                   correspondant soit proche de la\n                                   valeur TAB1.'AUTOCRIT'que l'on\n                                   nomme le critere de pilotage.\n                                   Il est possible de specifier un\n                                   autre type de pilotage en modi\n                                   fiant la procedure AUTOPILO .\n                                   Dans ce cas il faut encore\n                                   fournir le listreel LREEL1 mais\n                                   le programme limite l'increment\n                                   du temps de facon a respecter\n                                   le critere sur epsilon total.\n AUTOCRIT              FLOTTANT    critere de pilotage (par defaut\n                                   0.001)\n AUTOPAS               ENTIER      nombre maximum de sous pas\n                                   autorises pour atteindre le\n                                   temps demande.\n BCSTH                 RIGIDITE    conditions aux limites pour le\n                                   tracking (methode EFEM)\n AUTORESU              ENTIER      valeur precisant tous les combien de\n                                   pas il faut garder les resultats\n                                   dans le cas de calcul AUTOMATIQUE.\n PAS_AJUSTE            LOGIQUE     permet d'imposer un choix de\n                                   strategie de calcul de pas de temps.\n                                   VRAI on veut faire des pas de temps\n                                   ajustes en fonction de la difficulte\n                                   de convergence du pas precedent.\n CONVERGENCE_FORCEE    LOGIQUE     VRAI si on force la convergence en\n                                   effectuant des sous-pas non converges\n                                   (le defaut)\n MAXDEFOR              FLOTTANT    increment de deformation maximum en\n                                   convergence forcee (1e-3 par defaut)\n CONSOLIDATION         LOGIQUE     VRAI si calcul de consolidation\n DELTAITER             ENTIER      nombre de pas d'ecart pour le test\n                                   de non convergence\n K_SIGMA               LOGIQUE     VRAI si on souhaite ajouter\n                                   la matrice KSIGMA a l'operateur\n                                   d'iterations.\n K_TANGENT             LOGIQUE     iterations avec la matrice tangente\n                                   coherente (appel a KTAN) (FAUX par\n                                   defaut)\n K_TANGENT_ITER0       MOT         mot indiquant la matrice a utiliser\n                                   pour demarrer les iterations\n                                   mecaniques d'un pas 'MAT_ELASTIQUE'\n                                   rigidite elastique 'MAT_TANGENTE'\n                                   rigidite tangente en debut de pas\n                                   (avec DT = 0.). Par defaut, on\n                                   utilise la matrice calculee au pas\n                                   precedent.\n K_TANGENT_PERT        LOGIQUE     iterations avec la matrice tangente\n                                   calculee par perturbation (appel a\n                                   KTAN PERT) (FAUX par defaut)\n K_TANGENT_SYME        LOGIQUE     La matrice tangente calculee est\n                                   symetrisee (FAUX par defaut)\n K_TANG_PERT_C1        FLOTTANT    matrice tangente par perturbation\n                                   coefficient multiplicatif applique a\n                                   l'increment de deformation pour\n                                   determiner la perturbation\n                                   (1.D-3 par defaut)\n K_TANG_PERT_C2        FLOTTANT    matrice tangente par perturbation\n                                   valeur minimale de l'increment de\n                                   deformation perturbe (C1/100. par\n                                   defaut)\n NITER_KTANGENT        ENTIER      la matrice tangente est recalculee\n                                   toutes les NITER_KTANGENT iterations\n                                   (1 par defaut)\n SUBSTEPPING           LOGIQUE     Substepping pour l'integration locale\n                                   avec la matrice tangente consistante.\n                                   Modeles: J2, RH_COULOMB, MRS_LADE.\n NMAXSUBSTEPS          ENTIER      nombre maximum de sous-pas pour\n                                   SUBSTEPPING.\n NITERINTER_MAX        ENTIER      nombre max d'iterations au niveau\n                                   local (avec SUBSTEPPING).  Modeles:\n                                   J2, RH_COULOMB, MRS_LADE.\n PRECISINTER           FLOTTANT    precision pour le probleme local\n                                   (integration des lois constitutives)\n                                   1D-8 par defaut\n FEFP_FORMULATION      LOGIQUE     retour exponentiel avec line-search\n                                   au niveau local et matrice tangente\n                                   consistante. Modeles: VMT_FEFP,\n                                   RHMC_FEFP, POWDER_FEFP,\n                                   POWDERCAP_FEFP.\n UPDATE_LAGRANGIAN     LOGIQUE     VRAI pour le traitement de FEFP par\n                                   Lagrangien Augmente (par defaut)\n PRECISION             FLOTTANT    Valeur de la precision du calcul,\n                                   quelle que soit la physique (par\n                                   default 1e-4).\n PRECDECHARGE          FLOTTANT    valeur de la precision en decharge\n                                   sous pilotage. defaut: 1.e-2\n FTOL                  FLOTTANT    l'equilibre des efforts sera\n                                   verifie a FTOL pres\n MTOL                  FLOTTANT    l'equilibre des moments sera\n                                   verifie a MTOL pres\n TTOL                  FLOTTANT    l'equilibre en THERMIQUE sera verifie a TTOL pres (Valeur absolue)\n                                   sur les variables primales\n CTOL          FLOTTANT/CHPOINT    l'equilibre en DIFFUSION sera verifie a CTOL pres (Valeur absolue)\n                                   sur les variables primales\n PROCESSEURS           MOT         'MONO_PROCESSEUR' pour imposer une\n                                   execution avec un seul processeur\n                                   'COMPORTEMENT' pour imposer que seul\n                                   le comportement est envoye sur\n                                   plusieurs processeurs 'AUTOMATIQUE'\n                                   pour imposer, l'utilisation maximale\n                                   des processeurs.\n PREDICTEUR            HPP         on utilise un calcul HPP pour\n                                   initialiser le calcul en grands\n                                   deplacements.\n LINESEARCH            LOGIQUE     VRAI pour acc\u00e9leration grands\n                                   d\u00e9placements\n STABILITE             LOGIQUE     VRAI pour test stabilit\u00e9\n ACCELERATION          ENTIER      on utilise l'acceleration de\n                                   convergence  tous les\n                                   TAB1.'ACCELERATION' pas\n                                   (2 par defaut).\n MAN                   LOGIQUE     VRAI pour demander l'utilisation de\n                                   la methode asymptotique numerique\n                                   comme predicteur du deplacements en\n                                   cas d'etudes en grands deplacements.\n                                   Pour que cela soit vraiment interes-\n                                   -sant il faut un comportement\n                                   elastique lineaire des materiaux.\n LBC                   MAILLAGE    support geometrique des conditions\n                                   aux limites pour l'algorithme de\n                                   tracking.\n ORDRE                 ENTIER      prermet de preciser l'ordre du\n                                   developpement de la MAN. Par defaut\n                                   il vaut 12.\n MAXITERATION          ENTIER      nombre maximum d'iterations\n                                   valeur prise par defaut: 49\n MAXISOUSPAS           ENTIER      nombre maximum de sous-\n                                   increments en viscoplasticite ou\n                                   en fluage.\n MAXSOUSPAS            ENTIER      nombre maximum de sous-pas\n                                   en convergence forcee\n                                   valeur prise par defaut: 200\n NPAS_TRACKING         FLOTTANT    Nombre de pas a considerer pour\n                                   realiser le tracking de la fissure\n                                   (method EFEM)\n NRMAX                 FLOTTANT    Nombre maximum d elements susceptibles\n                                   de voir une fissure s initier\n                                   (methode EFEM).\n CONN                  MCHAML      Champ de connectivites construit par\n                                   l'operateur CONN, pour tous les cas\n                                   incluant des symetries.a taille de\n                                   la plus grande heterogeneite).\n MOVA                  MOT         Precise le nom de la variable interne\n                                   sur laquelle on teste le nombre de\n                                   points plastifies (EPSE par defaut)\n CONTRAINTES.0         MCHAML      contraintes au debut du pas\n                                   (0. par defaut)\n                                   NB : cf. remarques.\n DEPLACEMENTS.0        CHPOINT     deplacements au debut du pas\n                                   (0. par defaut)\n                                   NB : cf. remarques.\n VARIABLES_INTERNES.0  MCHAML      variables internes au debut du pas\n                                   (0. par defaut)\n                                   NB : cf. remarques.\n DEFORMATIONS_INELASTIQUES.0       deformations inelastiques au debut\n                       MCHAML      du pas (0. par defaut)\n                                   NB : cf. remarques.\n VITESSES.0            CHPOINT     vitesses au debut du pas en\n                                   dynamique (0. par defaut)\n ACCELERATIONS.0       CHPOINT     accelerations au debut du pas en\n                                   dynamique (0. par defaut)\n TEMPS.0               FLOTTANT    temps au debut du pas\n                                   (0. par defaut)\n FREA1                 CHPOINT     forces de reactions au debut du pas\n                                   (0. par defaut). Ce champ n'est pris\n                                   en compte que lorsque un des indices\n                                   DYNAMIQUE ou CONSOLIDATION de la\n                                   table TAB1 est VRAI.\n SOUS_INCREMENT        ENTIER      En dynamique et si la contrainte peut\n                                   varier fortement pendant le pas il\n                                   peut etre important de suivre au mieu\n                                   les contraintes afin d'adapter\n                                   l'algoritme dynamique. L'entier\n                                   fourni est le nombre de\n                                   sous_increment par pas de calcul.\n CONCENTRATIONS.0      CHPOINT     concentrations au debut du pas.\n                                   (0. par defaut pour le 1er pas).\n TEMPERATURES.0        CHPOINT     temperature au debut du pas.\n                                   (0. par defaut pour le 1er pas).\n PROCEDURE_THERMIQUE   MOT         Nom de la procedure thermique a\n                                   utiliser :\n                            NONLINEAIRE  : nonlineaire a un pas de temps\n                                           (theta-methode)\n                            LINEAIRE     : lineaire (theta-methode)\n                            DUPONT       : nonlineaire a deux pas de\n                                           temps (methode DUPONT2)\n PAS_MAX               FLOTTANT    pas maximum autorise en thermique.\n\n CTE_STEFAN_BOLTZMANN  FLOTTANT La valeur de la constante de Stefan-\n                                Boltzmann est egale par defaut a\n                                5.673E-8 (la valeur en unites SI). Si le\n                                calcul est fait dans un autre systeme\n                                d'unites il convient de mettre ici la\n                                bonne valeur de cette constante\n CELSIUS               LOGIQUE  VRAI si le calcul de fait en degres\n                                Celsius. Lorsque cette variable est VRAI\n                                on rajoute 273 aux champs de temperature\n                                avant d'en deduire des quantites liees\n                                au rayonnement.\n\n RELAXATION_DUPONT     FLOTTANT    Valeur du coefficient de relaxation\n                                   pour DUPONT2 (0.25 pas defaut)\n RELAXATION_NONCONV    FLOTTANT    Valeur du coefficient de relaxation\n                                   pour la non convergence (1 par defaut)\n                                   qui determine le sou-pas non converge\n RELAXATION_THETA      FLOTTANT    Valeur du coefficient de relaxation\n                                   pour theta-methode (1.0 par defaut)\n SOUS_RELAXATION       FLOTTANT    Valeur du coefficient de sous-\n                                   relaxation (1.0 par defaut)\n\n PROCEDURE_PERSO1      LOGIQUE     VRAI si on doit appeler une procedure\n                                   utlisateur apres le calcul mecanique.\n                                   Nom de cette procedure : PERSO1.\n                                   ATTENTION ! Cette procedure est appe-\n                                   lee apres chaque increment, mais non\n                                   au cours des iterations.\n                                   Voir aussi les remarques.\n PROCEDURE_PERSO2      LOGIQUE     VRAI si on doit appeler une procedure\n                                   utlisateur apres le calcul thermique.\n                                   Nom de cette procedure : PERSO2.\n                                   ATTENTION ! Cette procedure est appe-\n                                   lee apres chaque increment, mais non\n                                   au cours des iterations.\n                                   Voir aussi les remarques.\n\n PROJECTION            LOGIQUE     VRAI si on effectue un calcul couple\n                                   et si la mecanique et la thermique ne\n                                   s'appuient pas sur le meme maillage.\n\n PROCEDURE_REEV_MEC    LOGIQUE     VRAI si on utilise une procedure de\n                                   reactualisation apres le calcul\n                                   mecanique (par ex pour reevaluer les\n                                   donnees du calcul thermique si elles\n                                   dependent de la configuration\n                                   mecanique)\n PROCEDURE_REEV_THE    LOGIQUE     VRAI si on utilise une procedure de\n                                   reactualisation apres le calcul\n                                   thermique (par ex pour reevaluer des\n                                   donnees du calcul mecanique si elles\n                                   dependent de la configuration\n                                   thermique).\n\n CONVERGENCE_MEC_THE   LOGIQUE     VRAI si on souhaite iterer le schema\n                                   thermique mecanique en  cas de depen-\n                                   -dance mutuellle des deux problemes.\n                                   FAUX par defaut.\n                                   Voir aussi les remarques.\n CRITERE_COHERENCE     FLOTTANT    critere de convergence si on itere\n                                   l'alternance thermique-mecanique en\n                                   cas de dependance mutuelle. Le test\n                                   est effectue sur les resulats de la\n                                   thermique et il porte sur l'erreur\n                                   relative maximale entre les deux\n                                   dernieres solutions.\n                                   Vaut 'PRECISION' par defaut.\n NB_BOTH               ENTIER      Nombre d'iterations maximale de la\n                                   boucle de coherence\n                                   mecanique/thermique.\n                                   Par defaut : 10\n\n REAC_GRANDS           FLOTTANT    increment de deformation pour lequel\n                                   on reactualise la matrice de raideur\n                                   en grands_deplacements\n                                   (valeur par defaut : 10.E-2)\n CONVERGENCE_MONOTONE  LOGIQUE     VRAI si on souhaite imposer la\n                                   decroissance monotone du residu au\n                                   cours des iterations en recalculant\n                                   la matrice de raideur et en limitant\n                                   l'itere.\n                                   (FAUX par defaut)\n INITIALISATION        LOGIQUE     FAUX si on ne souhaite pas que le\n                                   premier residu soit initialise avec\n                                   les resultats du pas precedent.\n                                   (VRAI par defaut)\n RENORMALISATION       LOGIQUE     VRAI si on souhaite limiter l'itere\n                                   a une valeur inferieure a MAXDEFOR.\n                                   (FAUX par defaut)\n LAGRANGIEN            MOT         MI_PAS (ou REACTUALISE) (par defaut) pour appliquer le comportement\n                                     sur la geometrie au milieu du pas. Meilleur ecoulement plastique.\n                                   FIN_PAS pour appliquer le comportement sur la geometrie en fin\n                                     du pas. Meilleures contraintes.\n                                   TOTAL   pour appliquer le comportement sur la geometrie initiale.\n                                     Meilleur retour a zero des contraintes si on a un\n                                     chargement cyclique.\n\nEn sortie, TAB1 permet de retrouver les resultats. Ceux\nci sont mis dans des tables dont les indices sont des\nentiers (0 1 2 ... N) correspondants aux numero de\nsauvegarde des resultats (0 : temps initial). L'utilisateur peut\nintervenir de deux fa\u00e7ons sur le contenu des resultats. Soit il utilise\nla table referencee dans l'indice 'MES_SAUVEGARDES' soit il surcharge\ndirectement la procedure PAS_SAUV.\n\n\n   indice                  type objet     commentaires\n                              pointe\n\n   ERREUR                     LOGIQUE  logique de valeur VRAI en cas\n                                       d'erreur au cours de l'execution\n                                       de la procedure.\n   CONV                       LOGIQUE  VRAI si calcul converge avant ou\n                                       pour le nombre maximum d'itera-\n                                       tions, FAUX sinon.\n   TEMPS                      TABLE    cette table contient les temps\n          (automatique)                de calcul (correspond a\n                                       TEMPS_SAUVES)\n   CONCENTRATIONS             TABLE    cette table contient les\n         (automatique)                                concentrations.\n   TEMPERATURES               TABLE    cette table contient les\n         (automatique)                                temperatures.\n   DEPLACEMENTS               TABLE    cette table contient les\n         (automatique)                              deplacements.\n   CONTRAINTES                TABLE    cette table contient les\n         (automatique)                              contraintes.\n   VARIABLES_INTERNES         TABLE    cette table contient les\n         (automatique)                 variables internes en\n                                       nonlineaire materiau.\n   DEFORMATIONS_INELASTIQUES  TABLE    cette table contient les\n                                       deformations inelastiques\n                                       en nonlineaire materiau.\n   DEFORMATIONS               TABLE    cette table contient les\n                                       deformations cumulees dans\n                                       le repere corotationnel\n                                       en cas de grandes deformations\n                                       avec derivee de Jaumann\n   MODELES                    TABLE    Avec un chargement de nom MODE,\n                                       contient le modele instancie au\n                                       numero de PAS en indice.\n   ROTATIONS                  TABLE    cette table contient les\n                                       rotations du repere corotationnel\n                                       en cas de grandes deformations\n                                       avec derivee de Jaumann\n   VITESSES                   TABLE    cette table contient les\n        (automatique si dynamique)     vitesses.\n   ACCELERATIONS              TABLE    cette table contient les\n        (automatique si dynamique)     accelerations.\n   REACTIONS                  TABLE    cette table contient les\n        (automatique)                  forces de reactions.\n   REACTIONS_DIFFUSIONS       TABLE    cette table contient les quantites\n        (automatique)                  nodales d'especes chimiques (CHPOINT)\n                                       resultant des BLOCAGES_DIFFUSIONS.\n   REACTIONS_THERMIQUES       TABLE    cette table contient les quantites\n        (automatique)                  de chaleur nodales (CHPOINT)\n                                       resultant des BLOCAGES_THERMIQUES.\n   PROPORTIONS_PHASE          TABLE    cette table contient les propor-\n        (automatique)                  -tions de phase si changement de\n                                       phase thermique\n\n       Exemple : pour lister le CHPOINT de deplacements calcules pour\n                 la valeur du parametre d'evolution 2.5, il faudra\n                 coder :\n                           LIST ( PECHE TAB1 DEPLACEMENTS 2.5 ) ;\n                 ou si on connait son numero de sauvegarde i.\n                           LIST (TAB1.DEPLACEMENTS.i);\n\n------------------------------ REMARQUES -------------------------------\n\n  Poursuite / reprise de calcul\n  _____________________________\n\n\u00c0 l'issue d'un calcul effectue avec PASAPAS il est possible de le\ncontinuer en utilisant la meme table TAB1. Pour pouvoir faire ceci,\nil faut redefinir les LISTREEL associes aux indices 'TEMPS_CALCULES'\net 'TEMPS_SAUVES' de la table TAB1. Si (une de) ces listes contien(nen)t\ndes valeurs inferieures a TAB1.'TEMPS'.NUMPAS, elles seront ignorees.\n\nLa continuation du calcul peut etre demandee soit dans la meme session\nde Cast3M (sans quitter le programme), soit dans une nouvelle session.\nDans ce dernier cas, la table TAB1 doit etre prealablement sauvee avec\nla directive SAUV, et restituee dans la nouvelle session avec la\ndirective REST.\n\n  Etat mecanique initial\n  ______________________\n\n  Lorsqu'on fournit un \u00e9tat m\u00e9canique initial (indices CONTRAINTES.0,\nDEPLACEMENTS.0 et, si besoin, DEFORMATIONS_INELASTIQUES.0, etc.),\ncelui-ci ne doit pas necessairement \u00eatre \u00e9quilibr\u00e9 (si ce n'est pas le\ncas, PASAPAS tiendra compte du d\u00e9s\u00e9quilibre initial) mais il doit \u00eatre\ncoh\u00e9rent avec la loi de comportement (par ex., contraintes lin\u00e9airement\nd\u00e9pendantes du gradient du d\u00e9placement) et avec les hypoth\u00e8ses de calcul\n(par ex., en grands d\u00e9placement, contraintes correctement transport\u00e9es\ndans la configuration d\u00e9form\u00e9e). Voir aussi l'exemple \"gdep4.dgibi\".\n\n  Procedures PERSO\n  ________________\n\nUne valeur de type logique peut etre positionnee dans la table (avec\nl'indice 'ARRET') pour arreter le calcul. Ceci permet a l'interieur\ndes procedures PERSO1 et PERSO2 de faire sortir de la procedure\nPASAPAS.\n\nIl est possible dans les procedures PERSO1 et PERSO2 de changer la\nliste des pas de temps a calculer. Pour cela il faut donner un\nobjet de type LISTREEL que l'on transmet a PASAPAS via la table TAB1\na l'indice 'A_CALCULER'.\n\n  Convergence Thermique-Mecanique\n  _______________________________\n\nLa boucle BO_BOTH a ete mise en place dans PASAPAS pour pouvoir tenir\ncompte des effets mecaniques sur les donnees de thermique (par exemple,\ndans le cas d'un transfert de chaleur dans un jeu qui se ferme).\nDeux nouvelles procedures ont ete ajoutees pour modifier la table de\nPASAPAS au cours des iterations de BO_BOTH : REEV_THE & REEV_MEC.\n\n| REEV_THE TAB1 0\n| REEV_MEC TAB1 0\n|\n| BOUCLE Sur les pas de temps\n   | BOUCLE JUSQU'A NB_BOTH\n   |   |\n   |   | PREPARATION CALCUL THERMIQUE\n   |   | PROCEDURE DE CALCUL THERMIQUE : Resultats stocke dans la table\n   |   | intermediaire CHTER\n   |   |\n   |   | TAB1.'CHTER' = CHTER\n   |   | REEV_THE TAB1 1\n   |   |\n   |   | PREPARATION CALCUL MECANIQUE\n   |   | PROCEDURE DE CALCUL MECANIQUE : Resultat stocke dans la table\n   |   | intermediaire TT\n   |   |\n   |   | TAB1.'TT' = TT\n   |   | REEV_MEC TAB1 1\n   |   |\n   |   | TEST DE CONVERGENCE THERMIQUE-MECANIQUE.\n   |   | Le critere est base sur l'ecart relatif maximal entre les deux\n   |   | derniers resultats issus des procedures de resolution de pro-\n   |   | -blemes transitoires (TRANSNON, TRANSLIN ou DUPONT2)\n   |   | La precision est fixee par l'indice CRITERE_COHERENCE de la\n   |   | table d'entree de PASAPAS (1.E-2 par defaut).\n   |   |\n   |  Reactualisation de TAB1 par les contenus de CHTER et TT\n   |",
  },
  {
    name: "PAS_DEFA",
    url: "PAS_DEFA",
    documentation:
      "$$$$ PAS_DEFA NOTICE  PASCAL    20/12/03    21:15:05     10801          \n                                             DATE     20/12/03\n\n\n    procedure PAS_DEFA   \n    ------------------\n\n\n    Cette procedure est appelee au debut de PASAPAS, elle initialise \n    les valeurs par defaut et cree la table WTAB de pasapas. \n    \n    Syntaxe :\n    ---------\n    \n    PAS_DEFA TAB1 ;\n\n    Avec TAB1, table de donnees de PASAPAS.\n\n    En sortie, PAS_DEFA renvoie TAB1 avec un nouvel indice WTABLE.\n    Quelques sous-indices de WTABLE :\n\n    ... \n\n    'CHAR_MODE'       : LOGIQUE, vrai si chargement de nom MODE\n\n    'CHAR_MATE'       : LOGIQUE, vrai si chargement de nom MATE\n\n    'CHAR_BLOD'       : LOGIQUE, vrai si chargement de nom BLOD\n\n    'CHAR_BLOM'       : LOGIQUE, vrai si chargement de nom BLOM\n\n    'CHAR_BLOT'       : LOGIQUE, vrai si chargement de nom BLOT\n\n    ... ",
  },
  {
    name: "PAS_EPTH",
    url: "PAS_EPTH",
    documentation:
      "$$$$ PAS_EPTH NOTICE  CB215821  17/05/22    21:15:05     9437           \n                                             DATE     17/05/22\n\n\n    procedure PAS_EPTH   \n    ------------------\n\n    ETHER2 = PAS_EPTH PRECED MODEVAL MATEVAL | TEVAL*CHPOINT;\n                                             | TEVAL*MCHAML ;\n\n\n    Cette procedure est appelee par PASAPAS et UNPAS. Elle permet de \n    calculer la deformation thermique:\n\n    1- ETREF,  la deformation thermique de reference selon la relation:\n       TREF  = TEMPERATURE_REFERENCE\n       ETREF = ALPHA(TREF)*(TREF-TALPA_REFERENCE)\n       ETREF est stoque dans l'indice WTABLE.'ETREF'\n\n    2- ETHER2, la deformation thermique selon la relation:\n       ETHER2 = ALPHA(T)*(T-TALPA_REFERENCE) - ETREF\n\n    ARGUMENTS\n       ETHER2  (MCHAML) : Deformation thermique\n       PRECED  (TABLE ) : Table donnee en argument de PASAPAS\n       MODELVAL(MMODEL) : MODELE mecanique sur lequel faire le calcul\n       MATEVAL (MCHAML) : MCHAML materiau\n\n       TEVAL   (CHPOINT)\n                 ou     : Temperature a laquelle on evalue ETHER2\n               (MCHAML )",
  },
  {
    name: "PAS_ETAT",
    url: "PAS_ETAT",
    documentation:
      "$$$$ PAS_ETAT NOTICE  CHAT      11/09/12    21:17:33     7124           \n                                             DATE     11/09/12\n\n\n    procedure PAS_ETAT   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle cree un champ par \n    element representant l'etat de la structure a un instant donne.\n        \n    ",
  },
  {
    name: "PAS_HELM",
    url: "PAS_HELM",
    documentation:
      "$$$$ PAS_HELM NOTICE  AM        17/12/20    21:15:27     9675           \n                                             DATE     17/12/20\n\n    Procedure PAS_HELM\n    ------------------\n\n\n \n    Cette procedure est appelee au debut de UNPAS dans le cas \n    de l'utilisation d'un modele nonlocal de type HELM.\n    \n    ",
  },
  {
    name: "PAS_INIT",
    url: "PAS_INIT",
    documentation:
      "$$$$ PAS_INIT NOTICE  CHAT      11/09/12    21:17:33     7124           \n                                             DATE     11/09/12\n\n\n    procedure PAS_INIT   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle initialise \n    les champs initiaux qui ne le sont pas, les mets dans la table \n    reperee par l'indice CONTINUATIOn de la table entree dans PASAPAS\n    et cree les tables de resultats. \n                  ",
  },
  {
    name: "PAS_MATE",
    url: "PAS_MATE",
    documentation:
      "$$$$ PAS_MATE NOTICE  CHAT      11/09/12    21:17:33     7124           \n                                             DATE     11/09/12\n\n\n    procedure PAS_MATE   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle cree un champ par\n    element representant l'etat des materiaux a un instant donne. \n    Ce champ de materiaux est celui passe a l'operateur COMP.\n    \n      \n    \n    ",
  },
  {
    name: "PAS_MODL",
    url: "PAS_MODL",
    documentation:
      "$$$$ PAS_MODL NOTICE  PASCAL    20/07/01    21:15:01     10631          \n                                             DATE     20/07/01\n\n\n    Procedure PAS_MODL   \n    ------------------\n\n    \n    PAS_MODL TAB1 ;\n\n    \n    Objet :\n    -------\n\n    Cette procedure est une procedure interne de PASAPAS.\n    Elle initialise et met a jour les sous-indices relatifs aux\n    modeles de l'indice WTABLE de la table PASAPAS, ainsi que\n    les sous-indices relatifs a leurs caracteristiques.\n    \n    \n    Commentaire :\n    -------------\n\n    TAB1 est la table PASAPAS.\n\n\n    Entrees :\n    ---------\n\n    En entree, PAS_MODL utilise les indices suivants :\n\n    TAB1.WTABLE.'MODELE'           : objet MMODEL, par defaut,\n                                     modele de PASAPAS (TAB1.MODELE)\n\n    TAB1.WTABLE.'CARACTERISTIQUES' : objet MCHAML, caracteristiques\n                                     du modele (TAB1.'CARACTERISTIQUES'\n                                     par defaut)\n\n\n    Sorties :\n    ---------\n\n    En sortie, PAS_MODL initialise ou met a jour les indices suivants :\n\n    TAB1.WTABLE.'MODELE_COURANT' : objet MMODEL, modele avec lequel\n                                   PAS_MODL a instancie la table au\n                                   precedent appel.\n \n    TAB1.WTABLE.'MODELE_INITIAL' : objet MMODEL, modele fourni en entree\n                                   de PASAPAS a son precedent appel.\n                                   Sert notamment en cas de reprise.\n \n\n    Indices utiles a TRANSNON :\n    ---------------------------\n\n    TAB1.WTABLE.'THE1'        : objet LOGIQUE, presence d'une formulation\n                                THERMIQUE\n\n    TAB1.WTABLE.'MOD_THE'     : objet MMODEL, modeles THERMIQUE\n\n    TAB1.WTABLE.'MAT_THE'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_THE'\n\n    TAB1.WTABLE.'THM1'        : objet LOGIQUE, presence d'une formulation\n                                THERMOHYDRIQUE\n\n    TAB1.WTABLE.'MOD_THM'     : objet MMODEL, modeles THERMOHYDRIQUE \n\n    TAB1.WTABLE.'MAT_THM'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_THM'\n\n    TAB1.WTABLE.'FOR_THER'    : objet LOGIQUE, presence d'une formulation\n                                THERMIQUE ou THERMOHYDRIQUE\n\n    TAB1.WTABLE.'MOD_T'       : objet MMODEL, modeles THERMIQUE et\n                                THERMOHYDRIQUE\n\n    TAB1.WTABLE.'MAT_T'       : objet MCHAML, champ de caracteristiques\n                                du modele 'MOD_T'\n\n    TAB1.WTABLE.'CONVECTION'  : objet LOGIQUE, presence de CONVECTION\n\n    TAB1.WTABLE.'MOD_CON'     : objet MMODEL, modeles THERMIQUE CONVECTION\n\n    TAB1.WTABLE.'MAT_CON'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_CON'\n\n    TAB1.WTABLE.'RAYO'        : objet LOGIQUE, presence de RAYONNEMENT\n\n    TAB1.WTABLE.'MOD_RAY'     : objet MMODEL, modeles de RAYONNEMENT\n\n    TAB1.WTABLE.'MAT_RAY'     : objet MCHAML, champ de caracteristiques\n                                de 'MAT_RAY'\n\n    TAB1.WTABLE.'ADVECTION'   : objet LOGIQUE, presence d'advection\n\n    TAB1.WTABLE.'MOD_ADV'     : objet MMODEL, modeles d'advection\n\n    TAB1.WTABLE.'MAT_ADV'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_ADV'\n\n    TAB1.WTABLE.'CONDUCTION'  : objet LOGIQUE, presence de CONDUCTION\n\n    TAB1.WTABLE.'MOD_COND'    : objet MMODEL, modeles THERMIQUE CONDUCTION\n\n    TAB1.WTABLE.'MAT_COND'    : objet MCHAML, champ de caracteristiques\n                                de 'MOD_COND'\n\n    TAB1.WTABLE.'SOURCE_Q'    : objet LOGIQUE, presence de SOURCE THERMIQUE\n\n    TAB1.WTABLE.'MOD_SOQ'     : objet MMODEL, modeles THERMIQUE SOURCE\n\n    TAB1.WTABLE.'MAT_SOQ'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_SOQ'\n\n    TAB1.WTABLE.'FOR_DIFF'    : objet LOGIQUE, presence d'une formulation\n                                DIFFUSION\n\n    TAB1.WTABLE.'MOD_DIF'     : objet MMODEL, modeles de DIFFUSION\n\n    TAB1.WTABLE.'MAT_DIF'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_DIF'\n\n    TAB1.WTABLE.'FOR_METALLU' : objet LOGIQUE, presence d'une formulation\n                                METALLURGIE\n\n    TAB1.WTABLE.'MOD_MET'     : objet MMODEL, modeles METALLURGIE\n\n    TAB1.WTABLE.'MAT_MET'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_MET'\n\n    TAB1.WTABLE.'PHASE'       : objet LOGIQUE, presence d'une formulation\n                                CHANGEMENT_PHASE\n\n    TAB1.WTABLE.'MOD_PHA'     : objet MMODEL, modeles CHANGEMENT_PHASE\n\n    TAB1.WTABLE.'MAT_PHA'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_PHA'\n\n\n    TAB1.WTABLE.'MOD_TOT'     : objet MMODEL, ensemble des modeles THERMIQUE,\n                                THERMOHYDRIQUE, DIFFUSION, METALLURGIE et\n                                CHANGEMENT_PHASE\n\n    TAB1.WTABLE.'MAT_TOT'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_TOT'\n\n\n    Indices utiles a UNPAS :\n    ------------------------\n\n    TAB1.WTABLE.'MEC1'        : objet LOGIQUE, presence d'une formulation\n                                MECANIQUE\n\n    TAB1.WTABLE.'MOD_MEC'     : objet MMODEL, modeles MECANIQUE\n\n    TAB1.WTABLE.'MAT_MEC'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_MEC'\n\n    TAB1.WTABLE.'CONTACT'     : objet LOGIQUE, presence d'une formulation\n                                CONTACT\n\n    TAB1.WTABLE.'MODCONTA'    : objet MMODEL, modeles de CONTACT\n\n    TAB1.WTABLE.'MATCONTA'    : objet MCHAML, champ de caracteristiques\n                                de 'MODCONTA'\n\n    TAB1.WTABLE.'CAFROTTE'    : objet LOGIQUE, presence de CONTACT FROTTEMENT\n\n    TAB1.WTABLE.'ADHERENCE'   : objet LOGIQUE, presence de CONTACT ADHERENT\n\n    TAB1.WTABLE.'POR1'        : objet LOGIQUE, presence d'une formulation\n                                POREUX\n\n    TAB1.WTABLE.'MOD_POR'     : objet MMODEL, modeles POREUX\n\n    TAB1.WTABLE.'MAT_POR'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_POR'\n\n    TAB1.WTABLE.'MOD_CHA'     : objet MMODEL, modeles CHARGEMENT\n\n    TAB1.WTABLE.'MAT_CHA'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_CHA'\n\n    TAB1.WTABLE.'MOD_PRE'     : objet MMODEL, modeles CHARGEMENT PRESSION\n\n    TAB1.WTABLE.'MAT_PRE'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_PRE'\n\n    TAB1.WTABLE.'MOD_LIA'     : objet MMODEL, modeles de LIAISON\n\n    TAB1.WTABLE.'MAT_LIA'     : objet MCHAML, champ de caracteristiques\n                                de 'MOD_LIA'\n\n\n    TAB1.WTABLE.'FOR_MECA'    : objet LOGIQUE, presence d'une formulation\n                                MECANIQUE, POREUX ou CHARGEMENT\n\n    TAB1.WTABLE.'MO_TOT'      = objet MMODEL, modeles MECANIQUE, POREUX\n                                CHARGEMENT et LIAISON\n\n    TAB1.WTABLE.'MA_TOT'      : objet MCHAML, champ de caracteristiques\n                                de MO_TOT\n\n    TAB1.WTABLE.'MOD_REF'     = MO_TOT ;\n\n    TAB1.WTABLE.'MO_TOT_PREC' = MO_TOT ;\n\n    TAB1.WTABLE.'NLOC'        : objet LOGIQUE, presence de modeles\n                                NON_LOCAL\n\n    TAB1.WTABLE.'NON_LOCAL'   : objet MOT, type d'approche en non-local\n\n    TAB1.WTABLE.'NLOC_MODL'   : objet MMODEL, modeles non-locaux",
  },
  {
    name: "PAS_RAYO",
    url: "PAS_RAYO",
    documentation:
      "$$$$ PAS_RAYO NOTICE  FANDEUR   17/04/06    21:15:02     9389           \n                                             DATE     17/04/06\n\n    Procedure PAS_RAYO                       Voir aussi : PASAPAS\n    ------------------                                    \n           TAB1   = PAS_RAYO  TAB2   FLOT1 IENT1 ;\n\n\n    Objet :\n    _______\n\n   Cette procedure PAS_RAYO traite en standard uniquement le cas du \n rayonnement thermique et est appelee a chaque iteration du schema de \n calcul d'un pas de thermique de PASAPAS.\n\n\n    Commentaire :\n    _____________\n\n       TAB2     : c'est la table entree dans PASAPAS\n\n       FLOT1    : Instant pour lequel on veut calculer les differents termes\n                  necessaires dus au rayonnement (flux et/ou relations/matrices)\n\n       IENT1    : valeur entiere valant :\n                  1 si l'appel vient de DUPONT2\n                  2 si premier appel de TRANSNON\n                  3 si deuxieme appel de TRANSNON\n\n       TAB1     : est une table dont les indices sont \n                  \n                   -  'ADDI_SECOND'  pointe un Chpoint second membre\n\n                   -  'ADDI_MATRICE'  pointe une matrice a mettre au \n                      premier membre\n ",
  },
  {
    name: "PAS_REPR",
    url: "PAS_REPR",
    documentation:
      "$$$$ PAS_REPR NOTICE  CHAT      11/09/12    21:17:34     7124           \n                                             DATE     11/09/12\n                                            \n\n\n    procedure PAS_REPR   \n    ------------------\n\n \n    Cette procedure est appelee par PAS_DEFA, elle est \n    appelee en cas de reprise de calcul a un autre temps que \n    le dernier.\n    \n    ",
  },
  {
    name: "PAS_RESU",
    url: "PAS_RESU",
    documentation:
      "$$$$ PAS_RESU NOTICE  CB215821  18/08/31    21:15:03     9902           \n                                             DATE     18/08/31\n\n\n    procedure PAS_RESU   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle mets les\n    resultats de ce qui vient d'etre calcules dans la table, passee\n    a pasapas, sous l'indice ESTIMATION. En cas de convergence mecanique-\n    thermique les resultats sont SAUVEGARDES sous certaines conditions.\n    ",
  },
  {
    name: "PAS_VERM",
    url: "PAS_VERM",
    documentation:
      "$$$$ PAS_VERM NOTICE  CHAT      11/09/12    21:17:34     7124           \n                                             DATE     11/09/12\n\n\n    procedure PAS_VERM   \n    ------------------\n\n\n \n    Cette procedure est appelee au debut de PASAPAS, elle verifie\n    la presence des champs necessaires a l'instanciation des materiaux. \n       \n    ",
  },
  {
    name: "PAVE",
    url: "PAVE",
    documentation:
      "$$$$ PAVE     NOTICE  CHAT      11/09/12    21:17:35     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur PAVE                           Voir aussi :\n    --------------  \n    VOL1 = PAVE  SURF1 SURF2 SURF3 SURF4 SURF5 SURF6 ;\n\n\n    Objet :\n    _______\n\n    L'operateur PAVE permet de mailler avec des cubes l'interieur d'un\nvolume parallelipepedique dont les six faces sont precisees.\n\n    Commentaire :\n    _____________\n\n    SURFi : faces delimitant le volume (type MAILLAGE)\n\n    VOL1  : volume resultat (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    Les faces doivent etre rectangulaires, maillees avec des quadrila-\nteres par l'operateur DALLER.\n\n    Les faces opposees qui doivent se suivre dans la liste, doivent avoir\ndes descriptions homologues.",
  },
  {
    name: "PECHE",
    url: "PECHE",
    documentation:
      "$$$$ PECHE    NOTICE  PASCAL    13/01/29    21:16:09     7685           \n                                             DATE     13/01/29\n\n    Procedure PECHE                          Voir aussi : NONLIN\n    ---------------                                       PASAPAS  \n    CH2 = PECHE  TAB1 MOT1 ( FLOT1 ) ( MOT2 ) ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de recuperer des resultats d'un calcul\n    effectue en utilisant la procedure NONLIN ou PASAPAS ,\n    pour un temps donne.\n\n    Commentaire :\n    _____________\n\n    TAB1  : table utilisee dans NONLIN ou PASAPAS (type TABLE)\n\n    MOT1  : mot-cle (type MOT) correspondant a l'indice du resultat\n            souhaite (par exemple : 'RESUDEPL', 'DEPLACEMENTS', ...)\n\n    FLOT1 : temps (type FLOTTANT) pour lequel on souhaite les resul-\n            tats. Par defaut, on recupere les resultats pour le\n            dernier temps calcule\n\n    MOT2  : mot-cle (type MOT) 'IPOL' pour interpoler les resultats\n            a un un instant qui n'est pas dans la liste des temps\n            calcules.\n\n    CH2   : champ resultat (type CHPOINT ou MCHAML)",
  },
  {
    name: "PENCECHI",
    url: "PENCECHI",
    documentation:
      "$$$$ PENCECHI NOTICE  GOUNAND   12/12/20    21:15:21     7633           \n                                             DATE     12/12/20\n\n    Procedure PENCECHI                      Voir aussi : PREPAENC\n    ------------------                                         \n    CHPO1 MAT1 = PENCECHI TAB1 ;\n\n    Objet :\n    _______\n\n    Cette procedure est utilisee par la procedure PREPAENC pour \n    discretiser un terme d'echange.\n    ",
  },
  {
    name: "PENT",
    url: "PENT",
    documentation:
      "$$$$ PENT     NOTICE  CHAT      11/09/12    21:17:35     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur PENT                           Voir aussi :\n    --------------  \n\n    Objet :\n    _______\n\n    \u00c9valuation du gradient d'un champ dans le cadre d'une \n    discretisation de type volumes finis (variables aux \n    centres)\n\n    -----------------------------------------------------------\n    | 1ere possibilite : creation d'un gradient aux CENTRES   |\n    -----------------------------------------------------------\n\n   RCHPO1 RCHPO2 RCHELEM1 = 'PENT' MOD1\n           'CENTRE' MCLE1 MCLE2 LMOT1 CHPO1 ('CLIM' CHPO2) ;\n \n   ou\n \n   RCHPO1 RCHPO2  = 'PENT' MOD1\n           'CENTRE' MCLE1 MCLE2 LMOT1 CHPO1 ('CLIM' CHPO2) \n           'GRADGEO' RCHELEM1 ;\n\n\n    Commentaire :\n    _____________\n\n    MOD1    : Objet MODELE.\n\n    MCLE1    : MOT; indique la fa\u00e7on de considerer la frontiere;\n               4 choix possibles:\n               * 'BORDNULL': reconstruction lineaire exacte; \n                  le gradient du CHPOINT est nul sur les elements \n                  de frontiere;\n               * 'LINEXACT': reconstruction lineaire exacte; le \n                  gradient est calcule sur les elements de frontiere\n                  par interpolation lineaire exacte.\n               * 'EULESCAL': reconstruction lineaire exacte; le \n                  gradient est calcule en utilisant des conditions \n                  aux limites de type mur pour un champ scalaire \n                  (etat miroir a l'element de bord). Ceci dans le \n                  cadre des equations d'Euler.\n               * 'EULEVECT': reconstruction lineaire exacte; le \n                  gradient est calcule en utilisant des conditions \n                  aux limites de type mur pour un champ vectoriel \n                  (etat miroir a l'element de bord). Ceci dans le \n                  cadre des equations d'Euler.\n\n    MCLE2    : MOT; indique le type de limiteur de gradient a \n               calculer. \n               * 'LIMITEUR', on calcule le limiteur de Barth-Jespersen; \n               * 'NOLIMITE', les coefficients de limiteur sont egal a\n                 1.0\n\n    LMOT1    : LISTMOTS, composantes de CHPO1 et CHPO2\n\n    CHPO1    : CHPOINT 'CENTRE' (i composantes, 1 <= i <= 9) dont on\n               souhaite calculer le gradient.\n\n    CHPO2    : CHPOINT (meme composantes que CHPO1): champoint\n               qui specifie les conditions limites de type Dirichlet \n               sur certains points de type 'FACE'\n              \n    RCHELEM1 : Champ par element des coefficients geometriques pour le\n               calcul du gradient\n\n    RCHPO1   : CHPOINT 'CENTRE' (NDIM * i composantes); contient le\n               gradient du CHPO1; le gradient associe a la i-eme\n               composante a pour noms de composantes 'PiDX', 'PiDY'\n               ('PiDZ').\n\n    RCHPO2  :  CHPOINT 'CENTRE'  (i composantes); contient les\n               coefficients multiplicateurs compris entre 0 et 1 par\n               lesquels il faut multiplier le gradient si on souhaite\n               que ce dernier soit limite. Le nom des composantes est \n               'Pi', avec la meme convention que pour RCHPO1.\n\n\n   Remarques :\n   __________\n\n   1) Le gradient calcule est exact a l'interieur du domaine si la \n      fonction est lineaire. Cette propriete est vraie egalement sur \n      le bord avec l'option 'LINEXACT'.\n\n   2) Les options 'EULESCAL' et 'EULEVECT' traite la frontiere du \n      domaine comme un mur.\n\n   3) Si on utilise l'option 'EULEVECT', CHPO1 (et CHPO2) doit avoir \n      deux composantes en 2D ('UX','UY') et trois composantes en 3D \n      ('UX','UY','UZ')\n\n\n    -----------------------------------------------------------\n    | 2eme possibilite : creation d'un gradient aux FACEs     |\n    -----------------------------------------------------------\n\n\n \n   RCHPO1  RCHELEM1 = 'PENT' MOD1 'FACE' 'DIAMAN2'  LMOT1 LMOT2\n                       CHPO1 CHPO2 CHPO3 ;\n\n   ou\n\n   RCHPO1  = 'PENT' MOD1 'FACE' 'DIAMAN2' LMOT1 LMOT2\n              CHPO1 CHPO2 CHPO3 'GRADGEO' RCHELEM1 ;\n\n\n   Commentaire :\n   _____________\n\n\n\n   MOD1     :  Objet MODELE.\n\n   LMOT1    :  LISTMOTS, composantes de CHPO1 et CHPO2\n\n   LMOT2    :  LISTMOTS, composantes de CHPO3 et RCHPO1\n\n   CHPO1    :  CHPOINT 'CENTRE' dont on\n               souhaite calculer le gradient.\n\n   CHPO2    :  CHPOINT qui specifie les conditions limites de type\n               Dirichlet sur certains points de type 'FACE'\n             \n   CHPO3    :  CHPOINT qui specifie les conditions limites de type\n               von Neumann sur certains points de type 'FACE'\n             \n   RCHELEM1 :  Champ par element des coefficients geometriques pour le\n               calcul du gradient.\n\n   RCHPO1   :  CHPOINT 'FACE' (NDIM * i composantes); contient le\n               gradient du CHPO1\n\n   Remarques :\n   __________\n\n   1) La condition limite de type von Neumann prise en compte est donne \n      par le produit scalaire de CHPO3 et des normales aux faces\n   \n\n\n    --------------------------------------------------------------------\n    | 3eme possibilite : creation d'un gradient aux FACEs  \n    | en 2 dimensions avec tenseur symetrique                                   \n      -------------------------------------------------------------------\n\n\n \n   RCHPO1  RCHELEM1 = 'PENT' 'FACE' MCLE1 MOD1 CHPO1 \n           ('DISPDIF CHPO3) ('CLIM' CHPO2) \n           ('NEUM' CHPO4) ('MIXT' CHPO5) ;\n\n   ou\n\n   RCHPO1  = 'PENT' 'FACE'  MCLE1 MOD1 CHPO1 ('DISPDIF CHPO3) \n             ('CLIM' CHPO2) ('NEUM' CHPO4) ('MIXT' CHPO5) \n              'GRADGEO' RCHELEM1 ;\n\n\n   Commentaire :\n   _____________\n\n\n\n   MOD1     :  Objet MODELE.\n\n   MCLE1    :  Methode pour le calcul du gradient. Options possibles : \n               'MPFA'\n\n   CHPO1    :  CHPOINT 'CENTRE'  dont on souhaite calculer le gradient.\n\n   CHPO2    :  CHPOINT 'FACE' (meme composantes que CHPO1): \n               champoint qui specifie les conditions aux limites de type\n               Dirichlet sur certains points de type 'FACE'\n\n   CHPO4    :  CHPOINT 'FACE' (1 composante)  \n               champoint qui specifie les conditions aux limites de type\n               flux sur certains points de type 'FACE'\n\n   CHPO5    :  CHPOINT 'FACE' (4 composantes, lambda1,lambda2,qlimx,qlimy)  \n               champoint qui specifie les conditions aux limites de type\n               mixtes sur certains points de type 'FACE'\n               lambda1 (d grad T . n) + lambda2 T = (qlimx*nx) + (qlim*ny)\n\n   CHPO3    :  CHPOINT 'CENTRE' (3 composantes 'K11','K22','K21') \n               du tenseur \n             \n   RCHELEM1 :  Champ par element des coefficients geometriques pour le\n               calcul du gradient.\n\n   RCHPO1   :  CHPOINT 'FACE' : contient le produit scalaire du gradient \n               de CHPO1 avec les normales aux faces du maillage.  \n               Il a pour nom de composante 'FLUX'.\n\n\n    --------------------------------------------------------------------\n    | 4eme possibilite : creation d'un gradient aux FACEs  \n    |  avec un tenseur symetrique, en suivant la methode decrite\n    | par Christophe Le Potier dans \"Schema volumes finis pour des operateurs \n    |  de diffusion fortement anisotropes sur des maillages non structures,\n    |  C. R. Acad. Sci. Ser. I \\textbf{340}, 2005, pp. 921--926.\" \n    |  Le schema obtenu est symetrique.\n    |  -------------------------------------------------------------------\n\n\n   RCHPO1  RCHELEM1 = 'PENT' 'FACE' MCLE1 MOD1 CHPO1 \n           ('DISPDIF CHPO3) ('CLIM' CHPO2) \n           ('NEUM' CHPO4) ;\n\n   Commentaire :\n   _____________\n\n\n\n   MOD1     :  Objet MODELE.\n\n   MCLE1    :  Methode pour le calcul du gradient. Options possibles : \n               'VFSYM'\n\n   CHPO1    :  CHPOINT 'CENTRE'  dont on souhaite calculer le gradient.\n\n   CHPO2    :  CHPOINT 'SOMMET' (meme composantes que CHPO1): \n               champoint qui specifie les conditions aux limites de type\n               Dirichlet sur certains points de type 'SOMMET'\n\n   CHPO4    :  CHPOINT 'FACE' (1 composante)  \n               champoint qui specifie les conditions aux limites de type\n               flux sur certains points de type 'FACE'\n\n   RCHELEM1 :  Champ par element des coefficients geometriques pour le\n               calcul du gradient (en 2 dimensions).\n\n   RCHPO1   :  CHPOINT 'FACE' : contient le produit scalaire du gradient \n               de CHPO1 avec les normales aux faces du maillage.  \n               Il a pour nom de composante 'FLUX'.",
  },
  {
    name: "PERM",
    url: "PERM",
    documentation:
      "$$$$ PERM     NOTICE  CHAT      11/09/12    21:17:35     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur PERMEABILITE                   Voir aussi :\n    ----------------------  \n      RIG1 = PERM MODL1 MAT1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur PERM calcule les matrices de permeabilite des elements\nde milieux poreux .\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele (type MMODEL)\n\n      MAT1  : champ de proprietes materielles (type MCHAML, sous-type\n              CARACTERISTIQUES)\n\n      RIG1  : matrices de permeabilite\n             (type RIGIDITE, sous-type PERMEABILITE)\n\n\n    Remarques :\n    ___________\n\n    Le support geometrique de RIG1 sera celui de MAT1 .\n\n    Le numero de l'harmonique utilise dans le cas d'une analyse en\nserie de Fourier est precise par la directive:\n\n                    OPTION MODE FOUR NN ;",
  },
  {
    name: "PERT",
    url: "PERT",
    documentation:
      "$$$$ PERT     NOTICE  MB234859  17/10/02    21:15:20     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur PERT                           Voir aussi :\n    --------------  \n    LREEL1 = PERT LREEL2 ( 'SIGN'       )\n                         ( 'AMPL' FLOT1 )\n                         ( 'INIT' ENTI1 ) ;\n\n\n    objet :\n    -------\n\n    Operateur PERT perturbe LREEL2 pour produire LREEL1.\n\n    option :\n    --------\n\n    - A l'aide du mot clef 'SIGN'(e), qui est le defaut, on change\n      aleatoirement le signe des elements de LREEL2.\n\n    - A l'aide du mot clef 'AMPL'(itude), on perturbe aleatoirement\n      l'amplitude (module) des elements de LREEL2. Chaque valeur est\n      partiellement reporte sur ses voisines selon les fonctions\n      cosinus et sinus pour preserver la puissance du signal original.\n      L'amplitude moyenne (en degre) est donnee par FLOT1.\n\n    - La \"perturbation\" necessite un tirage de phase aleatoire. L'option\n      'INIT' permet l'initialisation de generateur par l'utilisateur en\n      introduisant ENTI1 (objet de type entier).\n\n    remarque :\n    ----------\n\n    les deux options 'SIGN' et 'AMPL' peuvent etre utilisee simultanement.",
  },
  {
    name: "PFLUAGE",
    url: "PFLUAGE",
    documentation:
      "$$$$ PFLUAGE  NOTICE  CHAT      11/09/12    21:17:36     7124           \n                                             DATE     11/09/12\n\n    Procedure PFLUAGE                        Voir aussi : PREC    \n    -----------------                                     PHASAGE  \n                                                          TENSION  \n                                                          EPAIFUT  \n                                                          RETRAIT   \n      CHAM2 = PFLUAGE  ........;\n\n\n\n    Objet :\n    _______\n\n      Cette procedure permet de calculer le tenseur de deformations \n      differees du au fluage du beton. Elle est appellee \n      automatiquement par la procedure PHASAGE. \n       ",
  },
  {
    name: "PHAJ",
    url: "PHAJ",
    documentation:
      "$$$$ PHAJ     NOTICE  CB215821  21/08/20    21:15:32     11089          \n                                             DATE     21/08/20\n\n    Operateur PHAJ                           Voir aussi : PMAT PROP\n    --------------                                        EXCP EXCS  \n      CHP2 =  PHAJ  MOD1 MAT1 CHP1 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur 'PHAJ' calcule la valeur des \"jeux\" associes aux\nconditions unilaterales de changement de phase en thermique.\nCet operateur est automatiquement appele dans la procedure TRANSNON.\n\n\n\n      Commentaire :\n      _____________\n\n      MOD1  : objet de type MMODEL contenant une formulation de type\n             'CHANGEMENT_PHASE'.\n\n      MAT1  : objet MCHAML des caracteristiques. La composante  'PRIM'\n              est  attendue constante par SOUS-ZONE.\n\n      CHP1  : objet CHPOINT contenant les inconnues initiales.\n\n      CHP2  : objet CHPOINT contenant les \"jeux\" des inconnues ('FLX')\n              avant d'effectuer le changement de phase.",
  },
  {
    name: "PHASAGE",
    url: "PHASAGE",
    documentation:
      "$$$$ PHASAGE  NOTICE  CHAT      11/09/12    21:17:36     7124           \n                                             DATE     11/09/12\n\n    Procedure PHASAGE                        Voir aussi : PREC    \n    -----------------                                     EPAIFUT  \n                                                          TENSION  \n                                                          PFLUAGE  \n                                                          RETRAIT   \n                                             Voir exemple: phasage.dgibi      \n\n\n\n    Objet :\n    _______\n\n      Calculer les etats de contraintes a l'issu des sequences de \n      constructions et de mise en tension des cables de precontrainte.\n      (NB : Cette procedure a ete developpee pour une application \n      particuliere et il peut manquer des options d'interet tout a \n      fait general, merci de nous les signaler)\n      \n      \n\n     Les indices de la table TAB1 sont tous des mots, ce sont :\n\n   \n        \n\n     'FLUAGE'  : mot parmi les quatre mots 'BPEL99', 'BPEL91'\n                 'LG','EC2' indiquant le reglement a appliquer pour la\n                 prise en compte du fluage reglementaire. \n                 Si la donnee n'est pas fournie le fluage n'est pas \n                 pris en compte.\n               \n     'RETRAIT' : mot parmi les quatre mots 'BPEL99', 'BPEL91'\n                 'LG','EC2' indiquant le reglement a appliquer pour la\n                 prise en compte du retrait reglementaire. \n                 Si la donnee n'est pas fournie le retrait n'est pas \n                 pris en compte.\n     \n\n     'LEVEES'  : pointe vers une table contenant les informations\n                 concernant les levees du beton . Les indices de cette\n                 table sont des entiers 1,.N qui reperent les N levees. \n                 Chaque indice pointe vers une table qui a pour indice\n                 les mots :\n                       \n              'MODELE'    : objet modele associe a la levee .\n              'MATERIAU'  : materiau associe au modele precedent.\n              'INSTANT'   : temps en jours separant la premiere levee de\n                            celle-ci.(TAB1.LEVEES.1 doit etre egal a 0). \n              ('COEF1')     : flottant correspondant au taux d'humidite\n                              de la loi de retrait (facultatif :a ne \n                              fournir que si le calcul du retrait est\n                              demande ).\n              ('COEF2')     : objet chamelem donnant le taux d'armature \n                              (en poids) passive pour cette levee (a ne \n                              fournir que si le calcul du retrait est\n                              demande). \n              ('SECHAGE')   : objet chamelem contenant les differents \n                              rayons de sechage du modele exprime en \n                              centimetres (voir EPAIFUT) (a ne fournir\n                              que si le calcul du retrait est demande ).\n\n     'PRECONTRAINTE'  : pointe vers une table contenant la description \n                 des sequences de mise en tension des groupes de cables.\n                 C'est la table creee par la procedure TENSION.     \n              \n     'MOD_RESTE': modele associe a la structure hors beton et hors \n                  cables de precontraintes (ferraillages, peau \n                  metallique ...).\n\n     'MAT_RESTE': materiau associe au modele precedent.\n\n     'BLOCAGES': objet rigidite contenant l'ensemble des\n                 blocages.\n      \n     'RIGIDITE_ADDITIONNELLE' : objet rigidite contenant\n                  eventuellement une rigidite constante.\n\n     'TEMPS_FINAL': flottant donnant le temps final du calcul. Ce temps \n                    doit etre plus grand que le temps definissant\n                    la derniere levee  et celui de la derniere \n                    mise en precontrainte.\n\n     'SOUS_LEVEES' : entier donnant le nombre de sous pas pour calculer \n                     le fluage entre deux levees ( 1 par defaut).\n\n     'SOUS_PRECONTRAINTES' : entier donnant le nombre de sous pas pour\n                     calculer le fluage a la suite d'une mise en tension\n                     d'un groupe de cables.\n            \n\n\n   En sortie la table TAB2 contient en plus des elements de TAB1 les \n   indices :         \n\n\n     'TEMPS'       : table indicee par les numeros des phases et \n                     contenant les differents temps ( en jours).\n\n     'DRETRAIT'    : table indicee par les numeros des levees et des\n                     phases et contenant les deformations de retrait. \n                     \n   \n     'DFLUAGE'     : table indicee par les numeros des levees et des \n                     phases et contenant les deformations de fluage.\n\n     'TABLE_SUITE' : table d'entree de la procedure pasapas dont il \n                    faudra, au moins, modifier le chargement et la liste\n                    des temps a calculer pour continuer le calcul.\n\n                    \n   Remarque :\n\n    + tous les temps (en jours) ont comme origine la premiere \n      levee de beton.\n \n    + Pendant les levees c'est le poids qui cree des contraintes, il \n      faut donc specifier les RHO des materiaux. Un objet CHARGEMENT \n      correspondant est cree, sous l'indice 'CHARGEMENT' de la table\n      tab2.'TABLE_SUITE'.\n  \n    + Pour continuer le calcul il faut :\n\n       - recuperer la table fournit par TAB2.'TABLE_SUITE'\n         (XXX= tab2.'TABLE_SUITE' ;)\n\n       - redefinir les temps a calculer au dela du dernier temps calcule\n         par la procedure PHASAGE. (XXX.'TEMPS_CALCULES'= ...)\n\n       - ajouter au chargement deja dans la table le nouveau chargement.\n         (XXX.'CHARGEMENT' = XXX.'CHARGEMENT'  ET NOUV_CHA; ) \n      \n       - appeler PASAPAS    ( PASAPAS XXX; )        \n         ",
  },
  {
    name: "PICA",
    url: "PICA",
    documentation:
      "$$$$ PICA     NOTICE  FD218221  20/12/17    21:15:44     10820          \n                                             DATE     20/12/17\n\n    Operateur PICA                           Voir aussi : CAPI\n    --------------  \n    CH2 =  PICA |  -     | MODL1 CH1 DEP1 (DEP2);\n                | 'JAUM' |\n                | 'UTIL' |\n\n    Objet :\n    _______\n\n 1. Par defaut (pas de mot-cle), l'operateur PICA transforme :\n    - un champ de contraintes de Piola-Kirchhoff de seconde espece \n      en un champ de contraintes de Cauchy \n    - ou un champ de deformations de Green-Lagrange \n      en un champ de deformations d'Almansi-Euler.\n      \n 2. En presence du mot-cle 'JAUM' (Jaummann), l'operateur PICA effectue  \n    un changement de repere sur le champ pour passer du repere  \n    corotationnel au repere general.\n    \n 3. En presence du mot-cle 'UTIL' (utilisateur), on suppose que les \n    contraintes issues du comportement sont des contraintes de Cauchy \n    et par consequent PICA ne fait rien.\n\n\n   Commentaire :\n   _____________\n\n   MODL1: objet de type MMODEL.\n\n   CH1  : champ de contraintes/deformation avant transformation \n          (type MCHAML, sous-type CONTRAINTES/DEFORMATIONS)\n\n   DEP1 : champ de deplacements qui permet de passer de la configuration\n          de reference a la configuration actuelle (type CHPOINT)\n\n   DEP2 : pour la XFEM, champ de deplacements qui permet de passer \n          de la configuration ou la fissure est fermee\n          a la configuration de reference (type CHPOINT)\n\n   CH2  : champ de contraintes apres transformation\n          (type MCHAML, sous-type CONTRAINTES/DEFORMATIONS)",
  },
  {
    name: "PILE",
    url: "PILE",
    documentation:
      "$$$$ PILE     NOTICE  CHAT      11/09/12    21:17:37     7124           \n                                             DATE     11/09/12\n\n  Operateur PILEPS                         Voir aussi :\n    ----------------   \n      FLOT1 =  PILEPS  MCHAM1 MCHAM2 CRIT  ;\n                               \n\n\n    Objet :\n    _______\n\n    L'operateur PILEPS sert au pilotage automatique s'appuyant sur\n une limitation de la plus grande deformation. \n    Le resultat est le plus grand flottant XX tel que pour chaque\n composante des champs par element de deformations MCHAM1 et\n MCHAM2  la relation  suivante soit verifiee :\n\n          eps1  +  XX*eps2  <  CRIT   si eps2>0   ou\n          eps1  +  XX*eps2  > -CRIT   si eps2<0",
  },
  {
    name: "PILOINDI",
    url: "PILOINDI",
    documentation:
      "$$$$ PILOINDI NOTICE  HO261890  20/12/24    21:15:01     10835          \n                                             DATE     20/12/24\n\n\n    Procedure PILOINDI                      Voir aussi : PASAPAS, UNPAS\n    ------------------  \n                                                                                \n    Syntaxe :\n    _______\n\n      FLOT2 = PILOINDI TAB1 CHP1 CHP2 CHP3 CHP4 FLOT1;\n\n\n    Objet :\n    ____________\n    Cette procedure est applicable aux cas de pilotage indirect de chargement \n    mecanique, pour lesquels la correction sur les inconnues nodales peut etre \n    decomposee de maniere additive:\n\n             d^(t) = d^(t-1) + dd^(i)                                      (1)\n            dd^(i) = dd^(i-1) + dI^(i) + [deta^(i)*dII^(i)]                (2)\n            dI^(i) = [K^(i-1)]^-1 *res^(i-1)                               (3)\n           dII^(i) = [K^(i-1)]^-1 *dch                                     (4)\n         P(dd^(i)) = tau^(t)                                               (5)\n\n    avec:\n\n    d^(t-1)   : deplacement au pas de temps (t-1);\n    dd^(i)    : increment de deplacements sur le pas a l'iteration (i);\n    dch       : direction du chargement impose (donnee d'entree de l'analyse);\n    res^(i-1) : desequilibre entre forces internes et externes ;\n    K^(i-1)   : matrice de rigidite du systeme ;\n    deta^(i)  : parametre de pilotage sur le pas ;\n    P(dd^(i)) : equation de pilotage indirect ;\n    tau^(t)   : seuil que l'equation de pilotage doit respecter sur le pas.\n\n    L'objectif de la procedure PILOINDI est de calculer la valeur deta^(i) (de\n    type FLOTTANT). Ensuite, cette valeur est transmise a UNPAS afin de \n    calculer la correction dd^(i). Par defaut, l'equation de pilotage porte \n    sur le maximum de la deformation totale equivalente (methode CMSI). Poutant,\n    la procedure PILOINDI peut etre surchargee par l'utilisateur qui souhaite \n    definir sa propre equation de pilotage. \n\n\n    Commentaire :\n    _____________\n    \n    TAB1  : Table courante de pasapas (type TABLE).\n    CHP1  : Deplacement accumule jusqu'au debut du pas de temps (type CHPOINT),\n            ce qui correspond a d^(t-1) dans l'equation (1).\n    CHP2  : Deplacement accumule dans le pas de temps courant (type CHPOINT),\n            ce qui correspond a dd^(i-1) dans l'equation (2).\n    CHP3  : Partie de la correction correspondant a dI^(i)  (type CHPOINT) \n            dans l'equation (3).\n    CHP4  : Partie de la correction correspondant a dII^(i) (type CHPOINT) \n            dans l'equation (4).\n    FLOT1 : Valeur limite que le critere de pilotage doit respecter dans le \n            pas de temps courant (type FLOTTANT), ce qui correspond a tau^(t)\n            dans l'equation (5).\n    FLOT2 : Valeur (type FLOTTANT) calcule par PILOINDI, qui correspond a\n            deta^(i) dans l'equation (2).\n\n\n    Remarque :\n    _____________\n\n    Les aspects theoriques et les formulations sous-jacentes sont disponibles \n    dans les references [1] et [2].\n\n\n\n    Exemples d'application en pilotage indirect de chargement:\n    __________\n\n    pilotage_indirect_1.dgibi\n    pilotage_indirect_2.dgibi\n\n    References :\n    _____________\n\n    [1] H. Oliveira, G. Rastiello, A. Millard, I. Bitar, B. Richard. \n    Implementation of path-following solvers in the finite element toolbox \n    Cast3M: formulations, algorithms and applications. (to appear).\n\n    [2] G. Rastiello, F. Riccard,, B. Richard. Discontinuity-scale\n    path-following methods for the embedded discontinuity modeling of\n    failure in solids. Computer Methods in Applied Mechanics and Engineering.\n    Volume 349, 2019, Pages 431-457, ISSN 0045-7825,\n    https://doi.org/10.1016/j.cma.2019.02.030.\n$$$$ \n ",
  },
  {
    name: "PJBA",
    url: "PJBA",
    documentation:
      "$$$$ PJBA     NOTICE  BP208322  20/02/20    21:15:01     10528          \n                                             DATE     20/02/20\n\n    Operateur PJBA                           Voir aussi : RECO\n    --------------                                        EVOL 'PJBA'  \n\n    +-----------------------------------------------------------+\n    |                    1ere possibilite                       |\n    +-----------------------------------------------------------+\n    \n    OBJET2  =  PJBA OBJET1 | TAB1 (TAB2)       |  ('LIBR') ;\n                           | BAS1 (STRU1 (N1)) |  \n                           | MOD1 CAR1         |     \n                   \n                   \n    Objet :\n    _______\n\n    L'operateur  PJBA  projette des forces sur une base modale\n    elementaire ou complexe.\n    Autrement dit, il calcule : \n         F^* = [ X Y ]^T * F\n      ou X designe la base de modes propres (TAB1)\n      et Y l'ensemble des solutions statiques (TAB2 optionnelle)\n\n    Commentaire :\n    _____________\n\n    OBJET2 : objet de meme type que OBJET1 (sauf cas particuliers),\n             de composantes modales :\n             FALF  relatives aux modes propres X,\n             FBET  relatives aux solutions statiques Y.\n             \n    OBJET1 : champ de force (type CHPOINT ou CHARGEMENT). Les points et\n             les composantes d'OBJET1 doivent etre inclus dans la base\n             \n    TAB1   : base modale X (type TABLE de sous-type BASE_MODALE \n             obtenue avec VIBR par exemple)\n    TAB2   : base de solutions statiques (ou modes contraints) Y\n             (type TABLE, sous-type LIAISONS_STATIQUES obtenue par IDLI,\n             BLOQ, RESO, DEPI, etc.)\n\n    BAS1   : la base modale X (type BASEMODA)\n    STRU1  : structure sur laquelle s'applique OBJET1, en cas de base\n             modale complexe (type STRUCTUR)\n    N1     : numero de la sous-structure si celle-ci est formee\n             de sous-structures identiques\n\n    MOD1   : objet MMODEL decrivant la base modale\n    CAR1   : objet MCHAML decrivant les proprietes de la base\n\n   'LIBR'  : mot-cle a utiliser pour projeter des forces definies\n             dans des axes fixes, dans une base \"tournante\"\n             (par exemple pour un calcul en grands deplacements sur\n             base tournante). Dans ce cas, OBJET2 est de type LISTCHPO.\n\n\n    Remarque :\n    __________\n\n    Tous les CHPOINTs crees sont de nature discrete.\n    L'option LIBR ne fonctionne qu'avec l'objet BASEMODA.\n\n    Pour definir des forces sur les sous-structures S1, S2, ... ,\n    il faut specifier pour chaque sous-structure Si sur quelle base\n    elementaire s'applique le champ de forces exterieures Fi (type\n    CHPOINT), pour calculer la force generalisee FNi correspondante.\n\n    Par exemple pour chaque sous-structure Si associee a la base\n    modale Bi :\n\n             Fi =  FORCE ...... ;\n             FNi = PJBA Bi Fi  ;\n             \n    puis :\n             FN = FN1 ET FN2 ET ... ;\n\n             \n             \n    +-----------------------------------------------------------+\n    |                    2eme possibilite                       |\n    +-----------------------------------------------------------+\n    \n    LCHPO2 = PJBA | LCHPO1      | (LIPDT1) TBAS1 (NMOD1) (RIGI1) ;\n                  | TAB1 (MOT1) |\n                   \n                   \n    Objet :\n    _______\n\n    L'operateur PJBA  projette un signal instationnaire (par exemple\n    un resultat PASAPAS, DYNAMIC ou EXEC) sur les vecteurs d'une\n    base modale donnee.\n    \n\n    Commentaire :\n    _____________\n\n     Le signal instationnaire est contenu soit :\n     \n       1) dans un objet TAB1 de type TABLE (et de sous-type PASAPAS,\n          DYNAMIC ou EXEC), auquel cas on peut fournir dans MOT1\n          l'indice de la grandeur a tracer :\n          - pour PASAPAS : DEPLACEMENTS (par defaut), TEMPERATURES...\n          - pour DYNAMIC : DEPL (par defaut), VITE...\n          - pour EXEC    : UN (par defaut), PN, TN...\n          \n       2) dans un objet LCHPO1 de type LISTCHPO\n       \n     On peut restreindre la liste des pas de temps retenus en donnant\n     l'objet LIPDT1 de type LISTENTI.\n     \n     La base de modes est donnee dans TBAS1 (objet TABLE de sous-type\n     BASE_MODALE).\n     \n     Il est possible de specifier combien de modes doivent etre pris en\n     compte en fournissant l'objet NMOD1 (type ENTIER). Si absent, la\n     projection est effectuee sur tous les modes de TBAS1.\n     \n     RIGI1 (type RIGIDITE) est une matrice symetrique definie positive\n     utilisee pour realiser le produit scalaire (si RIGI1 est absente,\n     on fait classiquement la somme des produits des composantes).\n     \n     En sortie, LCHPO2 (type LISTCHPO) contient autant d'objets CHPOINT\n     que LCHPO1 (un par pas de temps), et chaque CHPOINT contient un\n     noeud par mode (correspondant a l'indice 'POINT_REPERE' de TBAS1).\n\n     \n\n    +-----------------------------------------------------------+\n    |                    3eme possibilite                       |\n    +-----------------------------------------------------------+\n    \n    RIG2 (RIG3) = PJBA RIG1 TAB1 |  (TAB2)  ; \n                                 | ('REEL') ;\n\n                            \n    Objet :\n    _______\n\n    L'operateur PJBA calcule la projection de la matrice de raideur \n    RIG1 sur une base de modes reels ou complexes TAB1 (et de modes  \n    contraints TAB2 si ils sont presents).\n    \n    Autrement dit, il calcule : \n         K^* = [ X Y ]^H * K * [ X Y ]          \n      ou X designe la base de modes propres (TAB1)\n      et Y l'ensemble des solutions statiques (TAB2 optionnelle)\n      \n    ou, avec l'option 'REEL' : \n         K^* = [X]^T * K * [X]   \n    \n    \n    Commentaire :\n    _____________\n\n    RIG2 : matrice projetee (type RIGIDITE)\n           Lorsque TAB1 est une table de modes complexes, RIG2\n           est la partie reelle de la matrice projetee resultante\n    RIG3 : matrice projetee, (type RIGIDITE)\n           RIG3 est la partie imaginaire de la matrice projetee\n           lorsque TAB1 est une table de modes complexes\n\n    RIG1 : rigidite (type RIGIDITE)\n    \n    TAB1 : base modale X reels ou complexes (type TABLE de sous-type  \n           BASE_MODALE obtenue avec VIBR par exemple)\n    TAB2 : base de solutions statiques (ou modes contraints) Y\n           (type TABLE, sous-type LIAISONS_STATIQUES obtenue par IDLI,\n            BLOQ, RESO, DEPI, etc.)\n\n   'REEL': indique que l'on applique le produit scalaire reel (^T)\n           en presence de BAS1 table de modes complexes\n           (pas de produit Hermitien ^H).\n           \n           \n    +-----------------------------------------------------------+\n    |                    4eme possibilite                       |\n    +-----------------------------------------------------------+\n    \n    RIG5 = PJBA (RIG4)| TAB2      | ;\n                      | MOD1 CAR1 |\n                      \n    RIG5 = PJBA  RIG4   TAB1        ;\n\n    \n    Objet :\n    _______\n\n    L'operateur PJBA transpose une rigidite de relations RIG4 dans une  \n    base de deformees statiques listees dans TAB2 (ou dans le modele\n    MOD1), et en particulier construit la rigidite liant les points  \n    supports exprimant le blocage d'un meme degre de liberte au meme \n    point. Le support de RIG5 est donc compose des points associes aux\n    deformees, les coefficients restent inchanges.\n    \n    Si c'est une base de modes propres TAB1 qui est fournie, RIG4 est\n    obligatoire et PJBA projette ces relations cinematiques sur la base \n    modale. Cette option n'est utile que si cette liaison n'a pas servie \n    au calcul de TAB1 (comme dans le cas de la sous-structuration avec  \n    modes libres par ex.), et peut introduire des liaisons redondantes.\n\n\n    Commentaire :\n    _____________\n\n    RIG4 : matrices des relations cineamtiques (type RIGIDITE), \n           cree avec RELA ou BLOQ par exemple\n    \n    TAB2 : base de modes contraints (type TABLE, sous-type \n           LIAISONS_STATIQUES)\n\n    MOD1 : objet MMODEL decrivant la base modale\n\n    CAR1 : objet MCHAML decrivant les proprietes de la base\n    \n    TAB1 : base de modes reels (type TABLE, sous-type BASE_MODALE)\n\n    RIG5 : projection des matrices de relations cinematiques \n           (type RIGIDITE)\n\n           \n           \n\n$$$$\n \n \n ",
  },
  {
    name: "PLAC",
    url: "PLAC",
    documentation:
      "$$$$ PLAC     NOTICE  CHAT      11/09/12    21:17:37     7124           \n                                             DATE     11/09/12\n\n    Operateur PLAC                           Voir aussi : DETR MENA\n    --------------                                        OUBL  \n    ENTI1 = PLACE ;\n\n\n    Objet :\n    _______\n\n    L'operateur PLACE renseigne sur la taille (type ENTIER) de la memoire\n    disponible (en memoire principale et de debordement).\n\n    Remarque :\n    __________\n\n    Le taux d'efficacite de la place disque y est estimee a 50%.",
  },
  {
    name: "PLAS",
    url: "PLAS",
    documentation:
      "$$$$ PLAS     NOTICE  CHAT      11/09/12    21:17:37     7124           \n                                             DATE     11/09/12\n  Operateur PLAS                           Voir aussi :\n    --------------  \n    SIG1 VAR1 DEPS1 = PLAS MODL1 SIG2 VAR2 EPS3 CAR1  (FLOT1) ;\n        \n    Objet :\n    _______\n\n    Etant donne un etat initial plastiquement et statiquement admissible\ncaracterise par un champ de contraintes, un champ de contraintes interne\nmateriau et eventuellement d'autres caracteristiques d'une part, un incre-\nment de deformations d'autre part, l'operateur PLAS realise l'ecoulement\nselon la surface de charge.\n    L'ecoulement selon la surface de charge est caracterise par un\nnouveau champ de contraintes, de nouvelles variables internes\n(plastiquement admissibles) et par un increment de deformations\ninelastiques.\n\n\n    Commentaire :\n    _____________\n\n\n    MODL1 : objet modele (type MMODEL)\n\n\n    SIG2  : champ de contraintes\n            (type MCHAML, sous-type CONTRAINTES)\n\n    VAR2  : champ de variables  internes\n            (type MCHAML, sous-type VARIABLES INTERNES)\n\n    EPS3  : increment de deformations\n            (type MCHAML, sous-type DEFORMATIONS)\n\n    CAR1  : description du materiau et de caracteristiques geometriques\n            (type MCHAML, sous-type CARACTERISTIQUES)\n\n    FLOT1 : precision numerique utilisee pour le calcul\n            (type FLOTTANT)\n            par defaut FLOT1 est egal a 1.E-3\n\n    SIG1  : nouveau champ de contraintes\n            (type MCHAML, sous-type CONTRAINTES)\n\n    VAR1  : nouvelles variables internes\n            (type MCHAML, sous-type VARIABLES INTERNES)\n\n    DEPS1 : increment de deformations inelastiques\n            (type MCHAML, sous-type DEFORMATIONS)\n\n\n    Remarque:\n    _________\n\n    Il convient de respecter l'ordre des donnees en entree et en\nsortie.",
  },
  {
    name: "PLUS",
    url: "PLUS",
    documentation:
      "$$$$ PLUS     NOTICE  CHAT      11/09/12    21:17:38     7124           \n                                             DATE     11/09/12\n\n    Operateur PLUS                           Voir aussi : MOIN DEPL\n    ---------------                                       TOUR  DEDU  \n\n    Objet :\n    _______\n \n    L'operateur PLUS cree un nouvel objet et realise la translation\n    du support geometrique d'un objet par un vecteur, ou \n    la transformation definie par un champ de deplacements de \n    type CHPOINT, selon le type du dernier operande.\n    Lorsqu'il s'agit d'un CHPOINT, l'image \n    des points appartenant au support de celui-ci est etablie a partir\n    de la valeur des composantes 'UX' 'UY' ('UZ') ou 'UR' 'UZ' en ces points.   \n    Lorsque l'operation est realisee simultanement pour\n    plusieurs operandes, les geometries elementaires ne sont transformees\n    qu'une seule fois. \n\n   \n              OBJ2 = OBJ1 PLUS | VEC1     ;\n                               | CHPO1 \n \n        NOBJ1   ... NOBJN  = OBJ1 ...  OBJN  PLUS |  VEC1    ;\n                                                  |  CHPO1 \n\n\n    Commentaire :\n    _____________\n   \n         OBJ1 : types POINT, MAILLAGE, CHPOINT, MCHAML, MMODEL, \n                le type RIGIDITE est admis pour la translation par VEC1\n                mais pas pour la transformation par CHPO1.\n                OBJ1 peut aussi etre une table. Dans ce cas tous les \n                objets contenus dans la table, qui doivent etre d'un des \n                types ci-dessus, subiront la translation ou la \n                transformation. Si une table est donnee, il ne doit pas y\n                avoir d'autres objets.\n                \n      OBJ1 ... OBJN : voir OBJ1\n\n         VEC1 : type POINT\n\n        CHPO1 : type CHPOINT\n  \n         OBJ2 : resultat de meme type que OBJ1\n\n    NOBJ1 ... NOBN : resultats respectivement de memes types \n                   que OBJ1 ... OBJN",
  },
  {
    name: "PMAT",
    url: "PMAT",
    documentation:
      "$$$$ PMAT     NOTICE  CB215821  21/08/20    21:15:33     11089          \n                                             DATE     21/08/20\n\n    Operateur PMAT                           Voir aussi : PHAJ PROP\n    --------------                                        EXCP EXCS  \n      RIG1 = 'PMAT' MOD1 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur 'PMAT' calcule les matrices de blocages associees a la\n    formulation 'CHANGEMENT_PHASE'.\n    Cet operateur est automatiquement appele dans la procedure TRANSNON.\n\n\n      Commentaire :\n      _____________\n\n      MOD1  : objet de type MMODEL contenant une formulation de type\n             'CHANGEMENT_PHASE'.\n\n      RIG1  : objet de type RIGIDITE",
  },
  {
    name: "PMIX",
    url: "PMIX",
    documentation:
      "$$$$ PMIX     NOTICE  CHAT      11/09/12    21:17:38     7124           \n                                             DATE     11/09/12\n\n    Operateur PMIXTE                         Voir aussi : PVEC\n    ----------------                                      PSCA  \n    FLOT1 = PMIXT  VEC1 VEC2 ( VEC3 si 3D ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur PMIXTE effectue le produit mixte de 2 (en 2D) ou 3\n(en 3D) vecteurs.\n\n    Commentaire :\n    _____________\n\n    VECi  : vecteurs (type POINT)\n\n    FLOT1 : resultat du produit mixte (type FLOTTANT)",
  },
  {
    name: "PMPB",
    url: "PMPB",
    documentation:
      "$$$$ PMPB     NOTICE  CHAT      11/09/12    21:17:39     7124           \n                                             DATE     11/09/12\n\n  Procedure PMPB                           Voir aussi :\n     ---------------  \n\n      \n     Objet :\n     -------       \n     \n      Decomposition de chaque composante d'un champ de contraintes \n      definies sur un segment d'appui   en \n      \n              MEMBRANE                 PM \n              FLEXION LINEARISEE       PB\n              \n           suivant la specification du RCCM    \n      \n     Syntaxe :\n     --------\n     \n        TABV = PMPB   CHPO1  MAIL1   GRAPH  ENTI1  ENTI2  ;\n        \n        \n        \n    ENTREES :\n    \n        CHPO1  champ par point de contraintes sur le segment MAIL1\n                obtenu par  projection du champ par element sur MAIL1\n                ( operateur   PROI   )\n                \n        MAIL1   segmant d appui obligatoirement  en elements SEG2 \n        \n        \n        GRAPH   LOGIQUE  valant VRAI si l'on desire le trace des \n                 decompositions \n                 \n        ENTI1   entier identifiant le segment d'appui \n        \n        ENTI2   entier identifiant le champ de contraintes analyse\n                          \n                        \n     SORTIES :\n        \n        TABV     table contenant les  objets suivants \n  \n   TABV.1   listreel des flexions linearisees en peau interieure\n   TABV.2   listreel des membranes               en peau interieure\n   TABV.3   listreel des contraintes totales  en peau interieure \n\n   TABV.4   listreel des flexions linearisees en peau interieure\n   TABV.5   listreel des membranes                en peau interieure\n   TABV.6   listreel des contraintes totales  en peau interieure\n   \n    ",
  },
  {
    name: "POD",
    url: "POD",
    documentation:
      "$$$$ POD      NOTICE  JC220346  16/04/25    21:15:17     8915           \n                                             DATE     16/04/25\n\n    Operateur POD                                Voir aussi : VIBR\n    -------------  \n       |TPOD1      | = POD |LDATA1     | (LENTI1) (LCOMP1)  ----+\n       |LPOD1 LVAL1|       |TAB1 (MOT1)|                        |\n                                                                |\n         +------------------------------------------------------+\n         |             \n         |               \n         +------>   |'SNAPSHOTS'| (MASS1) NBMOD ('TBAS' (MAIL1)) ;\n                    |'CLASSIQUE'|         \n\n\n                    \n    Objet :\n    _______\n\n    L'operateur POD applique la methode de Decomposition Orthogonale\n    aux valeurs Propres (POD) a un signal d'entree donne. En retour,\n    on obtient la base formee des premiers vecteurs propres ainsi que\n    les valeurs propres associees.\n\n\n    \n    Commentaires :\n    ______________\n\n    \n    DEFINITION DU SIGNAL D'ENTREE\n    *****************************\n        \n    LDATA1 [LISTCHPO] :  Signal d'entree generique constitue d'un \n                         ensemble de champs de meme structure (meme\n                         geometrie et memes composantes)\n                         \n    TAB1 [TABLE]      :  Table de resultats issue d'un calcul CAST3M\n                         (sous-type PASAPAS, DYNAMIC ou EXEC) dans\n                         laquelle recuperer automatiquement le signal\n                         \n    MOT1 [MOT]        :  Nom de la grandeur consideree, par exemple :\n                          - pour PASAPAS : DEPLACEMENTS (par defaut),\n                                           TEMPERATURES...\n                          - pour DYNAMIC : DEPL (par defaut), VITE...\n                          - pour EXEC    : UN (par defaut), PN, TN...    \n                                 \n    LENTI1 [LISTENTI] :  Liste optionnelle des indices des pas de \n                         temps a considerer pour calculer la base POD\n                         (permet de sous-echantillonner le signal)\n                                       \n    LCOMP1 [LISTMOTS] :  Liste optionnelle des composantes retenues\n                                \n\n    DEFINITION DE LA METHODE DE CALCUL\n    **********************************\n    \n    'SNAPSHOTS' :  methode preconisee quand le nombre de d.d.l. (noeuds\n                   + composantes) est largement superieur au nombre de\n                   pas de temps\n                   \n    'CLASSIQUE' :  methode preconisee quand le nombre de d.d.l. (noeuds\n                   + composantes) est largement inferieur au nombre de\n                   pas de temps\n                  \n     MASS1 [RIGIDITE] :  matrice de masse (ou de raideur) fournie\n                         optionnellement pour calculer proprement les\n                         produits scalaires (notion d'energie)\n                                     \n\n    DEFINITION DU FORMAT DE SORTIE\n    ******************************\n    \n    NBMOD [ENTIER] : Nombre de modes POD a calculer (ne devrait pas\n                     exceder le nombre de pas de temps si SNAPSHOTS ou\n                     le nombre de d.d.l. si CLASSIQUE)\n                     \n    'TBAS' : mot-cle indiquant que l'on souhaite recuperer les resultats\n             sous la forme d'une table de sous-type BASE_MODALE\n             \n    MAIL1 [MAILLAGE] : Si le mot-cle 'TBAS' est present, on peut fournir\n                       en option le maillage MAIL1 qui sera place a\n                       l'indice 'MAILLAGE' de la table de sortie TPOD1\n                       (utilise notamment par la procedure EXPLORER)\n                       \n\n    OBJETS EN SORTIE\n    ****************\n    \n    TPOD1 [TABLE] : Table de sous-type BASE_MODALE (renvoyee si le \n                    mot-cle 'TBAS' est specifie)\n                    \n    LPOD1 [LISTCHPO] : Liste des modes POD ranges par valeurs propres\n                       decroissantes (renvoyee si le mot-cle 'TBAS' est\n                       absent)\n                    \n    LVAL1 [LISTREEL] : Liste des valeurs propres rangees par ordre\n                       decroissant (renvoyee si le mot-cle 'TBAS' est\n                       absent)\n\n\n                       \n    Remarques :\n    ___________\n    \n    a) Les multiplicateurs de Lagrange sont toujours ignores lors du\n        calcul des modes POD (meme si 'LX' est specifiee dans COMP1).\n    \n    b) Les modes POD renvoyes sont unitaires au sens de la norme infinie\n       (leur maximum vaut 1, toutes composantes confondues). Il est\n       possible de les renormaliser avec la norme Euclidienne grace a\n       l'operateur NNOR.\n       \n    c) Un indice 'VALEUR_PROPRE' est ajoute pour chaque mode present\n       dans la table TPOD1 (souvent plus pertinent que 'FREQUENCE').",
  },
  {
    name: "POIN",
    url: "POIN",
    documentation:
      "$$$$ POIN     NOTICE  CB215821  20/08/06    21:15:09     10681          \n                                             DATE     20/08/06\n\n\n    Operateur POIN                           Voir aussi : ELEM MAXI\n    --------------                                        MOTS  MINI  \n                                                          SOUC  VALE  \n                                                          DENS  \n    Cet operateur a trois fonctions selon les donnees.\n\n\n   +---------------+\n   | 1ere fonction |\n   +---------------+\n\n    L'operateur POIN permet de creer\n     - un POINT            defini par ses coordonnees (FLOTTANT).\n     - un MAILLAGE de POI1 defini par ses coordonnees (LISTREEL).\n\n\n    RESU1  = POIN OBJET1 (OBJET2) (OBJET3) ('DENS' OBJET4);\n\n    Commentaire :\n    _____________\n\n    +------------+------------+------------+------------++-----------+\n    |   OBJET1   |   OBJET2   |   OBJET3   |   OBJET4   ||   RESU1   |\n    +------------+------------+------------+------------++-----------+\n    |  FLOTTANT  |  FLOTTANT  |  FLOTTANT  |  FLOTTANT  ||   POINT   |\n    |  LISTREEL  |  LISTREEL  |  LISTREEL  |  LISTREEL  ||  MAILLAGE |\n    +------------+------------+------------+------------++-----------+\n\n    OBJET1     : 1ere coordonnee      DIME 1, 2 ou 3\n    OBJET2     : 2eme coordonnee      DIME    2 ou 3\n    OBJET3     : 3eme coordonnee      DIME         3\n\n   'DENS'      : Mots cle optionnel permettant de definir la densite\n    OBJET4     : densite\n\n\n    Remarque :\n    __________\n\n    En DIMEnsion 1, la creation d'un point n'est possible  que via cette\n                    fonction de l'operateur POIN.\n    En DIMENsions 2 et 3, l'operateur POIN  est equivalent  a la syntaxe\n                    couramment utilisee : POIN1 = FLOT1 FLOT2 (FLOT3) ;\n\n\n   +---------------+\n   | 2eme fonction |\n   +---------------+\n\n    L'operateur POIN extrait d'une geometrie un ou plusieurs points.\n\n    POINi = GEO1  POIN | N1\n                       | I1 I2\n                       | 'INITIAL'\n                       | 'FINAL'\n                       | 'JONC'\n                       | 'PROC'   POIN1\n                       | 'DROIT'  POIN1  POIN2              (FLOT1)\n                       | 'PLAN'   POIN1  POIN2 POIN3        (FLOT1)\n                       | 'CYLI'   AXEI1  AXEJ2 POIN1        (FLOT1)\n                       | 'CONE'   SOMM1  AXEI1 POIN1        (FLOT1)\n                       | 'SPHE'   CENTR1 POIN1              (FLOT1)\n                       | 'TORE'   CENTR1 AXEI1 CENTR2 POIN1 (FLOT1)\n\n    Commentaire :\n    _____________\n\n    GEO1  : geometrie (type MAILLAGE)\n\n\n    Suivant le mot-cle, l'operateur POIN extrait de GEO1 :\n\n    -    : le N1-ieme point  | Dans ce cas, GEO1 ne doit etre\n                                    | compose que d'elements de type\n                                    | POI1 ou SEG2 (voir remarque)\n    -    : le I1-ieme noeud du I2-eme element\n\n    - 'INITIAL' : le premier point  | GEO1 est compose uniquement\n    - 'FINAL'   : le dernier point  | d'elements POI1, SEG2 ou SEG3\n\n    - 'JONC'    : les points connectes a plus de 2 elements\n                  (destine essentiellement aux maillages de lignes)\n\n    - 'PROC'    : le point le plus proche de POIN1 (type POINT)\n\n    - 'DROIT'   : l'ensemble des points situes sur la droite POIN1 POIN2\n                  (type POINT)\n    - 'PLAN'    : l'ensemble des points situes sur le plan POIN1 POIN2\n                  POIN3 (type POINT)\n    - 'CYLI'    : l'ensemble des points situes sur le cylindre d'axe\n                  AXEI1 AXEJ1 (type POINT) passant par le point POIN1\n                  (type POINT)\n    - 'CONE'    : l'ensemble des points situes sur le cone de sommet\n                  SOMM1 (type POINT), dont l'axe est AXEI1 SOMM1 (type\n                  POINT) et passe par le point POIN1 (type POINT)\n    - 'SPHE'    : l'ensemble des points situes sur la sphere de centre\n                  CENTR1 passant par le point POINT1\n    - 'TORE'    : l'ensemble des points situes sur le tore de centre\n                  CENTR1 (type POINT), dont un point de l'axe est AXEI1\n                  (type POINT) dont le centre de petit cercle est CENTR2\n                  (type POINT) et passant par le point POIN1 (type POINT\n\n    Avec les mots-cles 'DROIT','PLAN','CYLI','CONE','SPHE','TORE' on\n    peut introduire un critere de proximite :\n\n    - FLOT1     : critere de distance (type FLOTTANT)\n\n\n    Remarques :\n    ___________\n\n    Il faut donner GEO1 avant POIN ou sinon directement apres.\n\n    Pour extraire des points d'un objet GEO1 qui n'est pas compose\n    d'elements de type POI1 ou SEG2, il faut d'abord changer GEO1 en un\n    objet compose d'elements de type POI1 (voir operateur CHANGER),\n    puis utiliser l'operateur POIN. Si GEO1 est compose d'elements SEG2,\n    POINT GEO1 NN ramene le premier point du NN-ieme element.\n\n    Les mots-cles 'DROIT','PLAN','CYLI','CONE','SPHE','TORE' ne sont pas\n    disponibles en DIMEnsion 1.\n\n    Le critere CRIT est par defaut le dixieme de la densite courante.\n\n\n   +---------------+\n   | 3eme Fonction |\n   +---------------+\n\n    L'operateur POIN extrait d'un champ (ou cree quand il s'agit d'un\npoint de Gauss) le ou les points supports du maximum ou du minimum de\nl'ensemble de valeurs d'une ou de plusieurs composantes du champ, ou\nles points supports des valeurs verifiant une relation de comparaison\npar rapport a une (ou deux) valeur(s) de reference.\n\n\n                     |    'MAXI'           |           'AVEC'\n   GEO1 = CHE1 POIN  |    'MINI'           | ('ABS') (        LMOTS1 );\n                     |                     |           'SANS'\n                     |'SUPERIEUR' |        |\n                     |'EGSUPE'    |        |\n                     |'EGALE'     | FLOT1  |\n                     |'EGINFE'    |        |\n                     |'INFERIEUR' |        |\n                     |'DIFFERENT' |        |\n                     |'COMPRIS' FLOT1 FLOT2|\n\n    Commentaire :\n    _____________\n\n    CHE1     : Objet de type CHPOINT ou MCHAML\n\n   'ABS'     : Mot cle indiquant que l'on veut le maximum ou le minimum\n               des valeurs absolues\n\n    LMOTS1   : Objet de type LISTMOTS contenant les noms de composantes\n               a  considerer  ou a  exclure  selon qu'on indique le mot\n              'AVEC'  ou 'SANS'  (en l'absence  de LMOTS1  on considere\n               toutes les composantes)\n\n    GEO1     : Objet de type MAILLAGE (contenant des elements 'POI1')\n\n    FLOT1    : Valeur de reference (type FLOTTANT)\n\n    FLOT2    : Valeur de reference (type FLOTTANT)\n\n    Remarque : 1- Dans l'option COMPRIS, les bornes FLOT1 et FLOT2 sont\n    _________     comprises dans l'intervalle.\n               2- Si aucune composante n'est trouvee, un MAILLAGE 'VIDE'\n                  d'elements 'POI1' est cree, et un SOUCI est emis.",
  },
  {
    name: "POINTCYL",
    url: "POINTCYL",
    documentation:
      "$$$$ POINTCYL NOTICE  FD218221  20/06/17    21:15:08     10629          \n                                             DATE     20/06/17\n\n    Procedure POINTCYL                       Voir aussi : POINTSPH\n    ------------------  \n    POIN1 = POINTCYL  RAY1 FLOT1 (FLOT2) ;\n\n\n    Objet :\n    _______\n\n    La procedure POINTCYL permet de definir un point (ou un maillage de points)\npar des coordonnees cylindriques.\n\n    Commentaire :\n    _____________\n\n    RAY1  : rayon (type FLOTTANT ou LISTREEL)\n\n    FLOT1 : angle en degres (type FLOTTANT ou LISTREEL)\n\n    FLOT2 : cote (en 3D) (type FLOTTANT ou LISTREEL)\n\n    POIN1 : point, ou MAILLAGE de points si l'on utilise des LISTREEL",
  },
  {
    name: "POINTSPH",
    url: "POINTSPH",
    documentation:
      "$$$$ POINTSPH NOTICE  FD218221  20/06/17    21:15:09     10629          \n                                             DATE     20/06/17\n\n    Procedure POINTSPH                       Voir aussi : POINTCYL\n    ------------------  \n    POIN1 = POINTSPH  FLOT1 FLOT2 FLOT3 ;\n\n\n    Objet :\n    _______\n\n    La procedure POINTSPH permet de definir un point (ou un maillage de points)\npar des coordonnees spheriques.\n\n    Commentaire :\n    _____________\n\n    FLOT1 : distance a l'origine (type FLOTTANT ou LISTREEL)\n\n    FLOT2 : angle autour de l'axe Z (compris entre 0 et 360 degres)\n            (type FLOTTANT ou LISTREEL)\n\n    FLOT3 : 2ieme angle (compris entre -90 et +90 degres)\n            (type FLOTTANT ou LISTREEL)\n\n    POIN1 : point, ou MAILLAGE de points si l'on utilise des LISTREEL",
  },
  {
    name: "POLA",
    url: "POLA",
    documentation:
      "$$$$ POLA     NOTICE  CHAT      11/09/12    21:17:40     7124           \n                                             DATE     11/09/12\n\n    Operateur POLA                           Voir aussi : GRAD\n    --------------  \n      R1 U1 = POLA MODL1 GRAD1  | ('GEOM') | ;\n                                |  'DEPL'  |\n\n\n    Objet :\n    _______\n\n L'operateur POLA effectue la decomposition polaire d'un champ de\n gradient F associe a une transformation geometrique: X --> x = X+u\n                       F  = R1 * U1\n Le gradient F est soit donne directement (option 'GEOM' prise par\n defaut), auquel cas F = GRAD1 = dx/dX, soit determine a partir\n du gradient du champ de deplacement u qui fait passer d'une\n geometrie a l'autre (option 'DEPL'), auquel cas GRAD1 = du/dX et\n F = Id + GRAD1.\n\n      Commentaire :\n      _____________\n\n      MODL1  : Objet de type MMODEL\n\n      GRAD1  : champ de gradients (type MCHAML)\n\n      R1     : champ de rotation pure (type MCHAML, sous type gradient)\n\n      U1     : champ de deformation pure (type MCHAML, sous type\n               gradient)",
  },
  {
    name: "POLYNO",
    url: "POLYNO",
    documentation:
      "$$$$ POLYNO   NOTICE  CHAT      11/09/12    21:17:40     7124           \n                                             DATE     11/09/12\n                                             \n  procedure POLYNO                          Voir aussi :\n   ----------------  \n   FLOT1 = POLYNO  FLOT2 COEF0 COEF1 (COEF2 COEF3 COEF4 COEF5) ;\n\n\n   Objet :\n   _______\n\n   Cette procedure sert a calculer un polynome de degre superieur ou egal\n@ 1 et inferieur ou egal a 5.\n\n   Commentaire :\n   _____________\n\n   La procedure POLYNO calcule la quantite :\n\n          FLOT1 = COEF0 + COEF1*FLOT2 + COEF2*FLOT2*FLOT2\n                                      + COEF3*FLOT2*FLOT2*FLOT2\n                                      + ....\n\n\n   FLOT2 : variable du polyn\u00d4me (type FLOTTANT)\n\n   COEFi : coefficients du polyn\u00d4me (type FLOTTANT)\n\n   FLOT1 : resultat (type FLOTTANT)",
  },
  {
    name: "POSI",
    url: "POSI",
    documentation:
      "$$$$ POSI     NOTICE  BP208322  21/10/25    21:15:08     11146          \n                                             DATE     21/10/25\n\n    Operateur POSI                         Voir aussi : EXIS, DANS\n    --------------  \n\n    Objet :\n    _______\n\n    L'op\u00e9rateur POSI recherche la ou les positions d'un ou plusieurs\n    items au sein d'une liste.\n\n\n    Syntaxe :\n    _________\n\n\n      OBJET1 = POSI OBJET2 'DANS' OBJET3 (OBJET4) ('TOUS')\n\n\n      Types possibles detailles ci-apres :\n      \n\n    => Cherche la premiere occurrence d'un item dans une liste\n\n          ENTIER = POSI ENTIER   'DANS' LISTENTI          ;\n          ENTIER = POSI FLOTTANT 'DANS' LISTREEL (FLOT1)  ;\n          ENTIER = POSI MOT      'DANS' LISTMOTS ('NOCA') ;\n          ENTIER = POSI MOT      'DANS' MOT      ('NOCA') ;\n          ENTIER = POSI POINT    'DANS' MAILLAGE ;\n\n\n    => Cherche toutes les occurrences d'un item dans une liste\n\n          LISTENTI = POSI ENTIER   'DANS' LISTENTI          'TOUS' ;\n          LISTENTI = POSI FLOTTANT 'DANS' LISTREEL (FLOT1)  'TOUS' ;\n          LISTENTI = POSI MOT      'DANS' LISTMOTS ('NOCA') 'TOUS' ;\n          LISTENTI = POSI MOT      'DANS' MOT      ('NOCA') 'TOUS' ;\n          LISTENTI = POSI POINT    'DANS' MAILLAGE          'TOUS' ;\n\n\n    => Cherche la premiere occurrence de plusieurs items dans une liste\n\n          LISTENTI = POSI LISTENTI 'DANS' LISTENTI          ;\n          LISTENTI = POSI LISTREEL 'DANS' LISTREEL (FLOT1)  ;\n          LISTENTI = POSI LISTMOTS 'DANS' LISTMOTS ('NOCA') ;\n          LISTENTI = POSI MAILLAGE 'DANS' MAILLAGE          ;\n\n\n\n   Commentaires :\n   ______________\n\n\n   1) Si OBJET2 (ou un de ses items) n'est pas trouve dans la liste\n      OBJET3, sa position vaut 0.\n\n\n   2) Le premier item de la liste OBJET3 occupe la position 1.\n\n\n   3) Pour detecter que deux nombres reels sont egaux, on compare leur\n      difference (en valeur absolue) avec un nombre juge suffisamment\n      petit. Par defaut, on utilise un critere RELATIF base sur la\n      precision machine. L'utilisateur peut imposer une valeur ABSOLUE\n      pour ce critere via la donnee de FLOT1 (type FLOTTANT).\n\n\n   4) Par defaut, la comparaison de chaines est sensible a la casse,\n      ce qui signifie que l'on distingue les majuscules des minuscules.\n      On peut indiquer a la directive que l'on souhaite plutot faire une\n      recherche insensible a la casse grace au mot-cle \"NOCA\".\n      \n   5) Les maillages doivent etre elementaires et de POI1.",
  },
  {
    name: "POSS",
    url: "POSS",
    documentation:
      "$$$$ POSS     NOTICE  CHAT      11/09/12    21:17:41     7124           \n                                             DATE     11/09/12\n  Voir aussi :\n\n\n    COMPATIBILITE  DES ELEMENTS ET DES OPERATEURS\n    ---------------------------------------------\n\n  OPERATEURS          A  R  M  S  B  K\n                      F  I  A  I  S  S\n                      F  G  S  G  I  I\n                      E  I  S  M  G  G\n  elements  support                                    valeurs de IFOUR\n\n\n\n   TRI3     TRI3      *  *  *  *  *                              -2 -1\n   TRI6     TRI6      *  *  *  *  *                              -2 -1\n   QUA4     QUA4      *  *  *  *  *                              -2 -1\n   QUA8     QUA8      *  *  *  *  *                              -2 -1\n   CUB8     CUB8      *  *  *  *  *                                  2\n   CU20     CU20      *  *     *  *                                  2\n   TET4     TET4      *  *  *  *  *                                  2\n   TE10     TE10      *  *     *  *                                  2\n   PRI6     PRI6      *  *  *  *  *                                  2\n   PR15     PR15      *  *     *  *                                  2\n   PYR5     PYR5      *  *     *  *                                  2\n   PY13     PY13      *                                              2\n   COQ3     TRI3      *  *  *  *  *                                  2\n   DKT      TRI3      *  *  *  *  *                                  2\n   POUT     SEG2      *  *  *  *  *  *                               2\n   LISP     RAC2      *  *  *  *                                     2\n   TUYA     SEG2      *  *  *  *  *  *                               2\n   TUFI     SEG2      *  *                                           2\n   LTR3     TRI3      *  *                                           2\n   LQU4     QUA4      *  *                                           2\n   LCU8     CUB8      *  *                                           2\n   LPR6     PRI6      *  *                                           2\n   LPY5     PYR5      *  *                                           2\n   LTE4     TET4      *  *                                           2",
  },
  {
    name: "POSTDDI",
    url: "POSTDDI",
    documentation:
      "$$$$ POSTDDI  NOTICE  CHAT      11/09/12    21:17:41     7124           \n                                             DATE     11/09/12\n\n  Procedure POSTDDI                        Voir aussi :\n    -----------------  \n   TAB1 TAB2 TAB3 TAB4 = POSTDDI TAB5  TAB6 MAI1 PER1 NPE1 IDE1;\n\n\n    Objet :\n    _______\n\n    Calcul du mombre de cycles a rupture sur un ou plusieurs     \ncycles stabilises (a la suite d'un calcul utilisant le modele \nvisco-plastique a deux deformations inelastiques (DDI)).   \n\n   Commentaire :\n   _____________\n\n En entree\n _________\n\n    TAB5           TABLE        C'est la table issue d'un calcul fait\n                                a l'aide de PASAPAS\n\n    TAB6           TABLE        Table qui contient les parametres des\n                                lois d'endommagement. Les indices de\n                                cette table sont des mots. La liste en\n                                est : PETITA, B, C, SIGU, SIGL, M, \n                                ALPHA, BETA, GRANDA, K, R.\n\n        \n    MAI1           MAILLAGE     Objet maillage definissant la zone sur\n                                laquelle on effectue le calcul.\n\n    PER1           FLOTTANT     Periode du chargement.\n\n    NPE1           ENTIER       Nombre de periodes sur lesquelles on\n                                calcule le nombre de cycles a rupture.\n\n    IDE1           ENTIER       Numero de la premiere periode de calcul.\n\n En sortie\n _________\n\n    TAB1           TABLE        table indicee par les numeros de periodes\n                                contenant les nombres de cycles a rupture\n                                en fatigue seule (champs par element). \n\n    TAB2           TABLE        table indicee par les numeros de periodes\n                                contenant les nombres de cycles a rupture\n                                en fluage seul (champs par element). \n\n    TAB3           TABLE        table (par periode) des nombres de cycles\n                                a rupture (entiers)\n\n    TAB4           TABLE        table indicee par les numeros de periodes\n                                contenant les dommages finaux (champs par\n                                element)     ",
  },
  {
    name: "POSTDDI1",
    url: "POSTDDI1",
    documentation:
      "$$$$ POSTDDI1 NOTICE  CHAT      11/09/12    21:17:41     7124           \n                                             DATE     11/09/12\n\n  Procedure POSTDDI1                       Voir aussi :\n    ------------------  \n       CHAM1  =   POSTDDI1   CHAM2  FLO1  MOD1;     \n    \n\n    Cette procedure est appelee par POSTDDI.",
  },
  {
    name: "POSTOU",
    url: "POSTOU",
    documentation:
      "$$$$ POSTOU   NOTICE  MB234859  17/10/02    21:15:20     9577           \n                                             DATE     17/10/02\n\n\n    Procedure POSTOU                              Voir aussi : INITOU ZONFIS  \n\n    Objet :\n    _______\n\nMECANIQUE :\n\n  Une procedure permet d'effectuer un calcul de l'ouverture de fissure\n  dans le cas complexe suivant le trajet de fissure. La fissure s'ouvre \n  perpendiculairement au trajet de fissure. L'ouverture de fissure \n  prend en compte les microfissures autour d'une fissure principale.\n\n  Cette proc\u00e9dure est compos\u00e9e de trois procedures qui r\u00e9alise\n  les calculs dans l'ordre suivant : \n\n  - initou: permet de positionner les points de fissure\n  - zonfis: permet de detecter visuellement une zone de fissure\n  - postou: permet de caculer l'ouverture de fissure\n\n  La procedure postou permet de caculer l'ouverture de fissure.\n\n   Description :\n   ____________\n\nL'entree pour postou:\n\nTAB1 sert a definir les options et les parametres du calcul.\nLes indices de l'objet TAB1 sont des mots (a ecrire en toutes lettres) \ndont voici la liste :\n    TAB1   TABLE    : continuation du calcul avec initou et zonfis\n    OBJET1 FLOTTANT : demi-longueur de la ligne de post-traitement.\n\nLa sortie pour postou:\n\n    TAB1.CHE    TABLE   : coordonnee des points de fissure dans une\n                          zone de fissure\n\n    TAB1.NORMM  TABLE   : points d'extremite de la ligne de \n                          post-traitement\n    TAB1.DIRNN  TABLE   : direction de la ligne de post-traitement\n\n    TAB1.OUVNO LISTREEL : ouverture normale sur les lignes de \n                          post-traitement\n    TAB1.OUVTO LISTREEL : ouverture tangentielle sur les lignes de \n                          post-traitement\n    TAB1.OUVNX LISTREEL : abscisse sur les lignes de post-traitement\n\n    TAB1.FISNO LISTREEL : ouverture normale au trajet de fissure\n    TAB1.FISTO LISTREEL : ouverture tangentielle au trajet de fissure\n    TAB1.FISNX LISTREEL : coordonnee X de l'ouverture normale\n    TAB1.FISNZ LISTREEL : coordonnee Z de l'ouverture normale",
  },
  {
    name: "POSTVIBR",
    url: "POSTVIBR",
    documentation:
      "$$$$ POSTVIBR NOTICE  BP208322  16/02/04    21:15:03     8818           \n                                             DATE     16/02/04\n                                             \n    Procedure POSTVIBR                       Voir aussi : EXPLORER\n    ------------------  \n\n    Objet :\n    _______\n\n    La procedure POSTVIBR est appelee par EXPLORER. Elle permet de \n    depouiller graphiquement les resultats d'une table BASE_MODALE \n    ou LIAISONS_STATIQUES.\n    \n\n   ",
  },
  {
    name: "POT_SCAL",
    url: "POT_SCAL",
    documentation:
      "$$$$ POT_SCAL NOTICE  CHAT      11/09/12    21:17:41     7124           \n                                             DATE     11/09/12\n\n  Procedure  POT_SCAL                  Voir aussi :\n        -------------------  \n         POT_SCAL  TABB  SOLIN\n\n \n        Objet : \n        -------\n        En magnetostatique 3D calcul par la methode a deux potentiels\n        le potentiel total et le potentiel reduit.\n        Materiaux isotropes ou isotropes transverse .\n   \n        Commentaires :\n        --------------\n\n        TABB     table contenant les indices suivants en toute lettre\n\n        'DPHI'  =  GEO1 maillage  de la zone de potentiel reduit\n        \n  eventuellement:       \n        'RIGCON' =   RIG1 rigidite construite  comme suit:\n  \n               | MOD1 = GEO1 'MODE' 'THERMIQUE' 'ISOTROPE' \n               | RIG1 = 'CONDUC' MOD1  'K'  MUAIR\n                  RIG1 peut  l'assemblage  de rigidites elementaires \n                  et de  rigiditees de super elements  \n          (  si absente de la table cette conductivite sera construite \n           - sans super elements) \n          \n        'SEPPHI'=  GEO2 surface de separation (appartenant a  DPHI) \n        'ORIG'  =  POINT de la surface de separartion ou on impose\n                   l'egalite des potentiels \n                   \n                   \n        'POTSYM'= TAB1 \n                  avec TAB1 table contenant des tables de description \n                  sur SEPPHI et son entourage eventuel pour calcul \n                  et application du saut de potentiel\n\n        TAB1.I  = TABLE STN   (I = 1,2.........N)\n                  une table STN  permet de decrire differentes  formes \n         de conditions limites pouvant se presenter  ou de passer\n         directement des objets de type rigidite a prendre en compte\n         dans la resolution ( conditions de periodicite par exemple)\n         3 formes disponibles :\n\n          1)    |STN.'LGEO' = GEO3 maillage type ligne( trace de SEPPHI\n                |            dans un plan de symetrie des potentiels \n                |             si elle existe .En general le saut de \n                |             potentiel est nul si on a choisi\n                |             ORIG sur cette ligne )\n                |STN.'MTYP' = MOT1   'TBLOQ' OU 'RENSE'  condition \n                    s'appliquant aussi a la surface GEO4\n                    si TBLOQ  blocage a zero des noeuds de GEO3\n                    si RENSE  application relation d ensemble sur GEO3\n        eventuellement ( si SEPPHI a plusieurs traces dans un plan de\n        symetrie des potentiels) : \n\n                |STN.'SGEO'  = GEO4 maillage de type surface (surface\n                |           equipotentielle liee au saut de potentiel)\n                |            GEO3  appartient a son son contour \n                            \n                            \n           2)   |STN.'IMPOSE' = CHPO chpoint du saut impose localement\n                                                           \n                            \n                           \n        'MUAIR' =  FLOT1   permeablite du vide \n\n\n\n        'DPSI'   = GEO4   maillage de la zone de potentiel total\n                  (totalite du domaine  air et ferro-magnetique) \n         \n        |'AIRPSI' = GEO5   maillage de la zone d' air de DPSI  \n        |                      (appartient a DPSI)                              \n  OU    |'RIGCSPSI' =   RIG2 rigidite construite  comme suit:\n  \n               | MOD2 = GEO5 'MODE' 'THERMIQUE' 'ISOTROPE' \n               | RIG2 = 'CONDUC' MOD2  'K'  MUAIR\n                  RIG2 peut  l'assemblage  de rigidites elementaires \n                  et de  rigiditees de super elements              \n                \n   \n   \n        \n        'TABNUSEC' = TABMAT   table stockage de l'ensemble \n              des materiaux  ferro-magnetiques  \n\n             | MODI = MODE GEOI THERMIQUE ISOTROPE (ORTHOTROPE)                 \n             |  TABMAT.MODI = STN ;                                    \n             |  STN.'EV1'  = evolution MU1(H)  sortie  voir H_B        \n  Imat fois  |    si materiau  isotrope transverse (isotrope plan 23)           \n             |  STN.'EV2'  = evolution MU2(H)  sortie  voir H_B        \n             |  STN.'DIR1' = P1  direction 1 (type point)                       \n             |  STN.'DIR2' = P2  direction 2 (type point)\n                                                                      \n            \n                     \n        'BLOQUE' = conditions limites du probleme global        \n        'BIOT' = CHP1  champ D INDUCTION defini au minimum  sur \n          la surface de separation SEPPHI ( contruit avec l operateur\n          BIOT par exemple  attention c'est H et non B )\n          \n        'ISTEP'  entier 1   le calcul sera fait en une seule fois\n                   ou     2   le calcul est fait en deux temps :\n                 \n              A) cacul du champ d induction   la TABB doit etre\n               sauvegardee ( voir SAUVER)\n              B) le complement du calcul est lance apres restitution \n              de la sauvegarde en etrant dans POT_SCAL puis MAG_NLIN \n                                                              \n   ---------------------------------------------------------------              \n   SOLIN    si present  on calcule  la solution  en lineaire \n            Pour un calcul non lineaire apres passage dans POT_SCAL \n            il faut enchainer par la procedure MAGNLIN \n                      \n            si absent le premier pas sera  fait dans MAG_NLIN \n            voir ci apres          \n   \n        Cette procedure construit et archive dans TABB les ingredients\n        necessaire a un passage en non lineaire dans MAG_NLIN.                  \n\n\n        SORTIES :\n\n        le potentiel est dans TABB.'POTENTIEL' \n           POTENTIEL REDUIT  ET POTENTIEL TOTAL  SUR LES ZONES \n           CORRESPONDANTES.\n           \n           SI ON S INTERESSE A L INDUCTION  VOIR PROCEDURE MKGDT\n\n        \n        ",
  },
  {
    name: "POT_VECT",
    url: "POT_VECT",
    documentation:
      "$$$$ POT_VECT NOTICE  CHAT      11/09/12    21:17:42     7124           \n                                             DATE     11/09/12\n\n  Procedure POT_VECT                   Voir aussi :\n        ------------------  \n          POT_VECT  TAB1  (MOT1)\n\n \n        Objet : \n        -------\n\n        En  magnetostatique 2D  calcul du potentiel vecteur \n\n           TAB1   table  dont les arguments sont :\n\n        'MUAIR'   permeabilite de l'air ( defaut 4 * PI * 1.E-7 )\n        'AIR'     Partie air non reduite a un super element\n                                                             \n        |'AIRSUP'  Partie air traitee en super element(pas obligatoire)\noption  |'MAITRES' Points maitres si super element         \n        |'ENCS '   Condition limite sur super element(eventuellement)   \n\n\n\n        'TABNUSEC' = TABMAT  table contenant des tables de description \n         de la ( des) zones Ferro_magnetique(s) comme suit:\n                    \n\n\n             |MODI = MODE GEO1 THERMIQUE ISOTROPE (ORTHOTROPE)\n             |TABMAT.MODI = STN ; \n             |STN = TABLE ;                                                     \n             |STN.'EV1 = MU1(H)  courbe 1./MU0*MUREL(B) type evolution\n   Imat fois |     obtenues par H_B a partir de B(H) par exemple\n                 si materiau orthotrope  \n             |STN.'DIR1' =  P1  direction associee ( type point)                \n             |STN.'EV2' = MU2(H) courbe 1./MU0*MUREL(B) type evolution        \n             |la direction associee est perpendiculaire a DIR1                  \n                \n        \n        \n   conditions limites generales et courants\n        \n        'BLOQUE'   Conditions limites generales regroupees     \n        'IMPOSE'  CHPOINT (cree par DEPIMP, la partie rigidite doit\n                  etre dans MATAB.'BLOQUE')\n        'COUR'    table de tables contenant la description des blocs \n                  de courants constituee par un ou des appel(s) a la\n                  procedure DESCOUR \n                             \n        'AXI' =   VRAI  si probleme axisymetrique.\n        \n        \n         MOT1     mot optionnel 'SOLIN' pour le calcul du premier pas \n                  lineaire\n\n        En sortie :\n\n        'POTENTIEL'   si on a demande le calcul du premier pas \n                      par SOLIN   \n        TABB      contient en plus les ingredients  necessaires a la \n                  procedure MAG_NLIN  pour faire les calculs non\n                  lineaires ( voir MAG_NLIN).",
  },
  {
    name: "POUT2MAS",
    url: "POUT2MAS",
    documentation:
      "$$$$ POUT2MAS NOTICE  PASCAL    14/01/23    21:15:03     7910           \n                                             DATE     14/01/23\n\nProcedure POUT2MAS:                          Voir aussi : FOUR2TRI\n\n      MAIL3D = POUT2MAS MOD1 MAT1  (MOTCLE) (TAB1); \n                                  |('GAUSS')\n                                  |('MASSIF')\n\n\nObjet:\n------\n     POUT2MAS genere un maillage massif MAIL3D a partir d'un modele\n     de poutre pour permettre la verification des dimensions et des\n     orientations des modeles de poutre.\n     Des champs de deplacements, les deformees associees, ainsi que\n     certains champs par elements par elements du modele a fibre (MATS,\n     VONS, VAIS) s'appuyant sur le maillage 3D peuvent aussi etre\n     calculees a partir des champs s'appuyant sur le maillage de poutre.\n     \nEntree:\n-------\n   MOD1 : Modele de poutre de type section, poutre ou tuyau\n   \n   MAT1: Materiau contenant les donnees materiaux et le vecteur VECT \n         (vecteur local Oy de la poutre) \n         Pour les tuyaux:  rayon et epaisseur du tuyau\n         Pour les poutres: inerties INRZ INRY,\n         Pour les poutres de type section MODS MATS \n\n   MOTCLE:  \n\n     Option 'GAUSS': Les sections sont tracees a chaque point de Gauss \n                     des elements de poutre (option par defaut)                 \n\n     Option 'MASSIF': Un volume base sur la geometrie de la section et \n                      ayant la discretisation des elements de poutre\n                      dans le sens longitudinal est genere. \n\n   TAB1: Table contenant les indices:\n\n   TAB1.'TUYAU': Table precisant certains parametres pour la generation\n   I             du maillage pour les tuyaux\n   (TAB1.'TUYAU'). 'NCIRC' : nombre de segments le long de la circon-\n                             -ference du tuyau (NCIRC=4 par defaut)\n   (TAB1.'TUYAU'). 'NEPAI' : nombre de segments sur l'epaisseur du tuyau \n                             (NEPAI=1 par defaut)\n\n   TAB1.'POUTRE': Table precisant certains parametres pour la generation\n                  du maillage  pour les poutres\n\n   Sous option poutre de section circulaire:\n   (TAB1.'POUTRE').'CIRCULAIRE' = VRAI;\n   (TAB1.'POUTRE'). 'NCIRC' : nombre de segments le long de la circon-\n                              -ference du tuyau  (4 par defaut)\n\n   Sous option poutre de section rectangulaire:\n   (TAB1.'POUTRE').'RECTANGULAIRE' = VRAI;\n   (TAB1.'POUTRE'). 'NY' : nombre de segments sur le cote Oy  \n                          (repere local de la poutre) (NY= 1 par defaut)\n   (TAB1.'POUTRE'). 'NZ' : nombre de segments sur le cote Oz \n                          (repere local de la poutre) (NZ=1 par defaut)\n\n   TAB1.'DEPLACEMENTS': Table contenant les champs de deplacements\n                        definis sur le maillage de poutre \n   (TAB1.'DEPLACEMENTS').i: Objet de type CHPOINT (champs de deplacement)\n\n   TAB1.'DEPLACEMENTS_3D': Table contenant les  nouvelles deformees\n                           sur le maillage 3D\n   (TAB1.'DEPLACEMENTS_3D').i: Objet de type CHPOINT\n                               (champs de deplacement)\n\n   TAB1.'DEFORMEE': Table contenant les deformees s'appuyant sur le\n                    maillage 3D\n   (TAB1.'DEFORMEE').i: Objet de type DEFORMEE\n\n   TAB1.'AMPLITUDE_DEFORMEES': FLOTTANT donnant l'amplitude des deformees \n\nPour l'option GAUSS uniquement: \n\n   TAB1.'MATS': Table contenant les champs de caracteristiques du\n                modele a fibre (YOUN, NU, RHO, SECT...) s'appuyant\n                sur la section 2D.\n   (TAB1.'MATS').i: Objet de type MCHAML (champs decaracteristiques)\n\n\n   TAB1.'VONS': Table contenant les champs de contraintes du\n                modele a fibre (SMXX, SMXY, SMXZ...) s'appuyant\n                sur la section 2D. \n   (TAB1.'VONS').i: Objet de type MCHAML (champs de contraintes)\n   \n    TAB1.'VAIS': Table contenant les champs de variables internes du\n                 modele a fibre (EPSE, EPSO...) s'appuyant\n                 sur la section 2D. \n   (TAB1.'VAIS').i: Objet de type MCHAML \n   \n                                    \n   TAB1.'RELATION_3D': Si cet indice le table contient le booleen VRAI,\n                       les relations cinematiques liant le modele\n                       de coque et le maillage volumique sont crees.   \n   \nSortie:\n------\n    MAIL3D: Maillage 3D volumique ou surfacique\n\n    TAB1.'MATS_3D': Table contenant les champs s'appuyant\n                    sur le modele 3D (option GAUSS seulement).\n   (TAB1.'MATS_3D').i: Objet de type MCHAML (champs de caracteristiques)\n   \n    TAB1.'VONS_3D': Table contenant les champs s'appuyant\n                    sur le modele 3D (option GAUSS seulement).\n   (TAB1.'VONS_3D').i: Objet de type MCHAML \n   \n    TAB1.'VAIS_3D': Table contenant les champs s'appuyant\n                    sur le modele 3D (option GAUSS seulement).\n   (TAB1.'VAIS_3D').i: Objet de type MCHAML \n\n    TAB1.'RELATION_3D': Table contenant les relations cinematiques\n                        (RIGIDITE) entre le modele de coque\n                        et le maillage volumique  \n                 \n  Remarque: Les champs VONS et VAIS sont situes dans les variables \n            internes du modele de poutre a fibre \n   ",
  },
  {
    name: "PPRE",
    url: "PPRE",
    documentation:
      "$$$$ PPRE     NOTICE  CHAT      11/09/12    21:17:42     7124           \n                                             DATE     11/09/12\n\n    Operateur PPRE                           Voir aussi : BIF\n    --------------  \n    SYNTAXE (EQEX) : Cf operateur EQEX\n    _______________\n\n\n    'OPER' PPRE  'VN' Rrho\n\n\n\n    OBJET :\n    ______\n\nL'operateur PPRE, propre au modele bifluide, calcule et introduit la\nforce due au gradient de pression dans l'equation de quantite de\nmouvement des particules.\nLes equations de qdm etant divisees par la masse volumique, il multiplie\nle gradient de pression du gaz par le rapport des masses volumiques\nRHOf/RHOp.\n\n\n\n    COMMENTAIRES :\n    ______________\n\n\nRrho   rapport  masse vol. gaz / masse vol. particules          FLOTTANT\n\nVN     indice de la table INCO pour la                          MOT\n       vitesse des particules                      (CHPOINT VECT SOMMET)",
  },
  {
    name: "PRCH",
    url: "PRCH",
    documentation:
      "$$$$ PRCH     NOTICE  FANDEUR   14/10/10    21:15:20     8178           \n                                             DATE     14/10/10\n\n  Operateur PRCH                           Voir aussi :\n    --------------  \n    Cet op\u00e9rateur a \u00e9t\u00e9 d\u00e9branch\u00e9.",
  },
  {
    name: "PREC",
    url: "PREC",
    documentation:
      "$$$$ PREC     NOTICE  CHAT      11/09/12    21:17:42     7124           \n                                             DATE     11/09/12\n\n    Operateur PREC                           Voir aussi : BARR\n    --------------                                 \n      PRE1 =  PREC MODARM MATARM F1 (TAB1) |(MAIL1) | (PRE0) ;\n                                           |( POIN1)|\n\n\n\n    Objet :\n    _______\n\n    L'operateur PREC construit calcule les pertes de precontraintes\n    et construit le cham des containtes effectives sur des armatures \n    a partir des tensions initiales appliquees a une extremite \n    de chaque cable  appartenant au modele   \n      ( modeles MARR ou  ARMATURE  BARR ) \n\n\n      Commentaire :\n      _____________\n\n\n      MODARM : objet modele associe aux cables (type MMODEL)\n\n      MATARM : champ de caracteristiques associe au modele\n               (type MCHAML, sous-type CARACTERISTIQUES)\n\n      F1     : valeur de la force de  tension a\n               l'extremite du cable (type FLOTTANT)\n\n      MAIL1  : Maillage des extermites sur lesquelles on applique \n               les tensions  (type POI1 ) (pour les element BARR)\n               par defaut la tension sera appliquee aux points \n               finaux de chaque cable sous-tendant le modele \n               \n      POIN1    point si il n y a qu un seul cable (type POINT) a la \n               place du maillage                \n\n      PRE0   : champ de contraintes initiales (facultatif)\n               (type MCHAML, sous-type CONTRAINTES)\n\n      PRE1   : champ de contraintes resultat\n               (type MCHAML, sous-type CONTRAINTES)\n               \n Dans le cas de calculs de perte de precontrainte :\n      \n      TAB1   : TABLE    contenant les arguments suivants :\n      \n    Pour la perte de precontrainte par frottement   \n  TAB1.'FF'     : coefficient de frottement angulaire (defaut 0.18 rd-1)\n  TAB1. 'PHIF'  : coefficient de frottement lineaire  (defaut 0.002 m-1)\n   \n   Pour la perte de precontrainte par recul a l'ancrage :\n   \n  TAB1.'GANC'  : glissement a l'ancrage (defaut  0.0)\n\n   Pour la perte de precontrainte par relaxation de l'acier :\n    \n   TAB1.'RMU0': coefficient de relaxation de l'armature ((defaut 0.43)\n   TAB1.'FPRG': contrainte de rupture garantie ((defaut 1700.e6 Pa)\n   TAB1.'RH10': relaxation a 1000 heures expimee en % (defaut 2.5 )\n   \n      \n               \n     NOTA  :\n       -le maillage support d un SOUS-MODELE (type SEG2 ) doit  \n      etre constitues  de lignes  SANS BRANCHEMENT\n       -si il y a une precontrainte initiale  le MODARM et MATARM \n      sont imperativement les memes que pour le calcul initial\n                 \n    DANS LE CAS DE L'UTISATION DES VALEURS PAR DEFAUT LES UNITES\n     DOIVENT ETRE CELLE MENTIONNES CI DESSUS.          ",
  },
  {
    name: "PREPAENC",
    url: "PREPAENC",
    documentation:
      "$$$$ PREPAENC NOTICE  CHAT      11/09/12    21:17:43     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure PREPAENC                       Voir aussi :\n    ------------------  \n      PREPAENC RXT TBT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure PREPAENC est une procedure interne appelee par ENCEINTE\n\n    Commentaires\n    ____________\n\n    RXT   TABLE  :\n    TBT   TABLE  :",
  },
  {
    name: "PRES",
    url: "PRES",
    documentation:
      "$$$$ PRES     NOTICE  PASCAL    17/09/21    21:15:12     9559           \n                                             DATE     17/09/21\n                                             \n    Operateur PRES                           Voir aussi : FORC FSUR\n    --------------                                        CNEQ BSIG  \n  1ere syntaxe\n  ------------\n\n    Objet :\n    -------\n      L'operateur PRES calcule les forces nodales equivalentes a une\n  pression appliquee a la surface d'un modele element finis.\n\n    Syntaxe g\u00e9n\u00e9rale :\n    ------------------\n  CHPO1 = PRES | 'MASS' MODL1  | FLOT1 GEO1 | ;\n               |               | CHPO2      |\n               |               | CHEL1      |\n               |\n               | 'COQU' MODL1  | FLOT1      | |  'NORM'        | (CAR1);\n               |               | CHPO2      | |   VEC1         |\n               |               | CHEL1      | |  'POIN'  POIN1 |\n               |\n               | 'FISS' MODL1  | FLOT1      |  VEC1 POIN1 CAR1 ;\n               |               | CHPO2      |\n               |\n               | 'TUYA' MODL1  CAR1 ;\n               |\n               | 'SHB8' MODL1  | FLOT1       |  'INTERNE'  | |  ;\n               |               |             |  'EXTERNE'  | |\n               |               |                             |\n               |               | CHPO2                       |\n\n  Entrees :\n  ---------\n      MASS |\n      COQU | : mot-cle designant le type d'element sur lequel la pression\n      FISS |   est appliquee (elements massifs, coques, linesprings,\n      TUYA |   tuyaux ou SHB8)\n      SHB8 |\n\n      MODL1  : objet sur lequel la pression est appliquee (type MMODEL)\n\n      FLOT1  : valeur algebrique de la pression (type FLOTTANT)\n\n      GEO1   : pour les elements massifs, maillage sur lequel la pression\n               est appliquee (type MAILLAGE)\n\n      CHPO2  : champ contenant les valeurs de pression aux noeuds\n               (type CHPOINT)\n\n      CHEL1  : champ contenant les valeurs de pression (type MCHAML)\n\n      NORM   : mot-cle indiquant que la pression est positive si elle es\n               portee par la normale positive a l'element\n\n      VEC1   : vecteur donnant la direction suivant laquelle la pression\n               est appliquee (type POINT).(Ne fonctionne qu'en 3D)\n\n      POIN   : mot-cle suivi de :\n\n      POIN1  : point vers lequel la pression est appliquee (type POINT)\n               ne s'utilise que pour des coques ou des linesprings.(Ne\n               fonctionne qu'en 3D)\n\n      CAR1   : caracteristiques des coques, des linesprings ou des\n               tuyaux (type MCHAML, sous-type CARACTERISTIQUES) :\n               - pour les coques epaisses, contient les valeurs des\n               epaisseurs aux points d'integration\n               - pour les linesprings, contient les valeurs des caracte-\n               ristiques aux points d'integration\n               - pour les tuyaux, contient la valeur de la pression\n               interne\n\n     'INTERNE' : il faut mettre en pression la surface interne (externe)\n     'EXTERNE'   (si le maillage contenu dans MODL1 ne contient\n                  pas les references au deux surfaces il faut \n                  utiliser l'operateur ORIE)\n\n  Sortie\n  ------\n      CHPO1  : forces nodales equivalentes (type CHPOINT)\n\n  - Remarque 1 :\n  --------------\n      ATTENTION : Si vous utilisez un MODELE plus grand que la zone ou\n      la pression est definie par le CHPOINT CHPO2, alors les elements\n      situes a la frontieres, ayant un point avec une pression non nulle,\n      se verront eux aussi charges. Il est donc fortement conseille de \n      fournir une reduction du MODELE sur les elements concernes.\n\n      Pour les coques, on reoriente les elements de la surface sur\n      laquelle s'applique la pression.\n\n      L'angle que fait le vecteur avec la face d'un element doit etre\n      superieur a 1 degre.\n\n      Pour les elements massifs; la pression est supposee dirigee vers\n      l'interieur du massif. Dans le cas d'une depression il faut donner \n      une pression ou un champ par points de pression negatifs.\n\n      Avec l'option NORM, la normale N a l'element est definie telle\n      que l'element de coque ayant pour numerotation (i,j) on ait \n      (ij,N)=+90.\n\n      Pour les elements SHB8 une pression positive est dirige vers\n      l'element si celui-ci est correctement oriente (voir ORIE)\n\n  - Remarque 2 :\n  --------------\n      ATTENTION : il faut utiliser un modele MODL1 dont la formulation\n      est coherente avec le calcul d'une force de pression \n      (ex : MECANIQUE, POREUX,...).\n\n  2nd Syntaxe \n  ----------\n\n  CHEL2 = PRES MODL1 | MOT1 VAL1 (MAIL1) ;\n                     | CHEL1             ;\n\n    Objet :\n    -------\n      L'operateur PRES definit un champ par element de pression.\n  Dans ce cas, le champ de forces nodales equivalentes peut etre\n  obtenu a l'aide de l'op\u00e9rateur BSIGMA.\n\n    En sortie :\n    -----------\n      CHEL2  : champ par element de pression (type MCHAML).\n\n    En entree :\n    -----------\n\n      MODL1  : objet de type MMODEL, modele de d\u00e9finition du chargement\n               de pression.\n\n      MOT1   : objet de type MOT, nom de la composante de pression.\n\n      VAL1   : objet de type FLOTTANT, valeur alg\u00e9brique de la pression.\n\n      MAIL1  : objet de type MAILLAGE, surface sur laquelle on souhaite\n               appliquer une pression. Par d\u00e9faut, elle s'applique sur\n               toute la surface de d\u00e9finition du modele.\n\n      CHEL1  : objet de type MCHAML, champ par element de pressions.\n\n    Remarque :\n    ----------\n      CHEL1 ne doit avoir qu'une seule composante mais le nom de cette\n  composante peut etre quelconque.",
  },
  {
    name: "PRET",
    url: "PRET",
    documentation:
      "$$$$ PRET     NOTICE  CHAT      11/09/12    21:17:43     7124           \n                                             DATE     11/09/12\n\n    Operateur PRET                           Voir aussi : PRIM\n    --------------                                        KONV  \n\n\n  I) ECOULEMENT COMPRESSIBLE\n     _______________________\n\n       Dans le cadre de la modelisation d'un ecoulement compressible \n    en discretisation volumes finis des \u00c9quations d'Euler, cet \n    operateur permet de calculer les variables primitives aux \n    interfaces (i.e. etats 'gauche' et 'droite' de chaque face), a \n    partir des variables  primitives aux centres.\n\n\n\n\n    -----------------\n    |  1ere modele  |\n    -----------------\n\n    Gaz parfait (mono-espece); les chaleurs specifiques cp et cv \n    sont independantes de la temperature.\n\n\n    \n    Cas a: premier ordre en espace, premier ordre en temps\n    ______\n\n           MCHAM1 MCHAM2 MCHAM3 MCHAM4  = 'PRET' MCLE1  ENTI1 ENTI2 \n                  MOD1  CHPO1  CHPO2  CHPO3  CHPO4 ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFMONO'. \n                    \n           ENTI1   : ENTIER; ordre en espace (=1).\n\n           ENTI2   : ENTIER; ordre en temps  (=1).\n\n           MOD1    : Objet MODELE.\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO3   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant le \"gamma\" du gaz (une\n                     composante, 'SCAL').\n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL' \n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           MCHAM4  : MCHAML (SPG = \"FACEL\") contenant le \"gamma\" du \n                     gaz (une seule composante, 'SCAL').\n\n    \n\n    Cas b: deuxieme ordre en espace, premier ou deuxieme ordre en temps\n    ______\n\n           MCHAM1 MCHAM2 MCHAM3 MCHAM4  = 'PRET' MCLE1  ENTI1 ENTI2 \n                  MOD1   CHPO1  CHPO2  CHPO3  CHPO4  CHPO5  CHPO6\n                  CHPO7  CHPO8  CHPO9 CHPO10 (FLOT1) ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFMONO' \n                    \n           ENTI1   : ENTIER; ordre en espace (=2)\n\n           ENTI2   : ENTIER; ordre en temps  (=1 ou 2)\n\n           MOD1    : Objet MODELE.\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     masse volumique (en kg/m^4; 2 composantes en 2D, \n                     'P1DX', 'P1DY').\n\n           CHPO3   : CHPOINT \"CENTRE\"  contenant le limiteur du\n                     gradient de la masse volumique (une seule \n                     composante 'P1  ')\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO5   : CHPOINT \"CENTRE\" contenant le gradient de la\n                     vitesse (en s^-1; 4 composantes en 2D, 'P1DX',\n                     'P1DY', 'P2DX', 'P2DY').\n\n           CHPO6   : CHPOINT \"CENTRE\"  contenant le limiteur du\n                     gradient de la vitesse (2 composantes en 2D, \n                     'P1', 'P2').\n\n           CHPO7   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           CHPO8   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     pression (en Pa/m; 2 composantes en 2D, 'P1DX', \n                     'P1DY').\n\n           CHPO9   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la pression (une composante, 'P1' ).\n\n           CHPO10  : CHPOINT \"CENTRE\" contenant le \"gamma\" du gaz\n                     (une composante, 'SCAL').\n\n           FLOT1   : FLOTTANT (a specifier dans le cas ENTI2 = 2) qui \n                     contient l'increment en temps (en s) pour l'etape \n                     de prediction (valeur conseillee = Dt / 2); \n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL' \n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           MCHAM4  : MCHAML (SPG = \"FACEL\") contenant le \"gamma\" du \n                     gaz (une seule composante, 'SCAL').\n\n\n\n\n    -----------------\n    |  2eme modele  |\n    -----------------\n\n    Melange de gaz parfaits (cp et cv independants de la temperature)\n\n    \n\n    Cas a: premier ordre en espace, premier ordre en temps\n    ______\n\n           MCHAM1 MCHAM2 MCHAM3 MCHAM4 MCHAM5  = 'PRET' MCLE1  ENTI1 \n                  ENTI2 MOD1 CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFMULT' \n                    \n           ENTI1   : ENTIER; ordre en espace (=1)\n\n           ENTI2   : ENTIER; ordre en temps  (=1)\n\n           MOD1    : Objet MODELE.\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO3   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant les fractions \n                     massiques du gaz (une ou plusieurs composantes)\n\n           CHPO5   : CHPOINT \"CENTRE\" contenant le \"gamma\" du gaz\n                     (une composante, 'SCAL').\n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           MCHAM4  : MCHAML (SPG = \"FACEL\") contenant les fractions \n                     massiques du gaz (meme nombre de composantes et \n                     memes nom que CHPO4).\n           \n           MCHAM5  : MCHAML (SPG = \"FACEL\") contenant le \"gamma\" du \n                     gaz (une seule composante, 'SCAL').\n\n    \n\n    Cas b: deuxieme ordre en espace, premier ou deuxieme ordre en temps\n    ______\n\n           MCHAM1 MCHAM2 MCHAM3 MCHAM4  MCHAM5 = 'PRET' MCLE1 ENTI1 ENTI2 \n                  MOD1  TAB2    CHPO1  CHPO2  CHPO3  CHPO4  CHPO5  CHPO6\n                  CHPO7  CHPO8  CHPO9  CHPO10 CHPO11 CHPO12 CHPO13 (FLOT1) ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFMULT' \n                    \n           ENTI1   : ENTIER; ordre en espace (=2)\n\n           ENTI2   : ENTIER; ordre en temps  (=1 ou 2)\n\n           MOD1    : Objet MODELE.\n\n           TAB2    : TABLE, qui contient les propriete du gaz\n                     (voir operateur PRIM)\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     masse volumique (en kg/m^4; 2 composantes en 2D, \n                     'P1DX', 'P1DY').\n\n           CHPO3   : CHPOINT \"CENTRE\"  contenant le limiteur du \n                     gradient de la masse volumique (une seule \n                     composante 'P1  ')\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO5   : CHPOINT \"CENTRE\" contenant le gradient de la\n                     vitesse (en s^-1; 4 composantes en 2D, 'P1DX',\n                     'P1DY', 'P2DX','P2DY').\n\n           CHPO6   : CHPOINT \"CENTRE\"  contenant le limiteur du\n                     gradient de la vitesse (2 composantes en 2D, \n                     'P1', 'P2').\n\n           CHPO7   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           CHPO8   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     pression (en Pa/m; 2 composantes en 2D, 'P1DX', \n                     'P1DY').\n\n           CHPO9   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la pression (une composante, 'P1' ).\n\n           CHPO10  : CHPOINT \"CENTRE\" contenant les fractions \n                     massiques (n composantes (n >= 1), dont le nom \n                     est dans l'objet LISTMOTS  en TAB2 . 'ESPEULE')\n\n           CHPO11  : CHPOINT \"CENTRE\" contenant le gradient des \n                     fractions massiques (en m^-1, 2n composantes en \n                     2D)\n\n           CHPO12  : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient des fractions massiques (n \n                     composantes).\n\n           CHPO13  : CHPOINT \"CENTRE\" contenant le \"gamma\" du gaz\n                     (une composante, 'SCAL').\n\n           FLOT1   : FLOTTANT (a specifier dans le cas ENTI2 = 2) qui \n                     contient l'increment en temps (en s) pour l'etape \n                     de prediction (valeur conseillee = Dt / 2); \n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL' \n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           MCHAM4  : MCHAML (SPG = \"FACEL\") contenant les fractions \n                     massiques du gaz (meme nombre de composantes et \n                     meme noms que CHPO10).\n           \n           MCHAM5  : MCHAML (SPG = \"FACEL\") contenant le \"gamma\" du \n                     gaz (une seule composante, 'SCAL').\n\n\n\n    -----------------\n    |  3eme modele  |\n    -----------------\n\n    Gaz parfait / melange de gaz parfaits (cv dependants de la temperature\n    selon une fonction polynomiale)\n    \n\n    Cas a: premier ordre en espace, premier ordre en temps\n    ______\n\n           MCHAM1 MCHAM2 MCHAM3 (MCHAM4) (MCHAM5) = 'PRET' MCLE1 ENTI1 \n                  ENTI2 MOD1 TAB2 CHPO1 CHPO2 CHPO3 (CHPO4)  (CHPO5)  ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFTEMP' \n                    \n           ENTI1   : ENTIER; ordre en espace (=1)\n\n           ENTI2   : ENTIER; ordre en temps  (=1)\n\n           MOD1    : Objet MODELE.\n\n           TAB2    : TABLE, qui contient les propriete du gaz\n                     (voir operateur PRIM)\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO3   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           (CHPO4) : CHPOINT \"CENTRE\" contenant les fractions \n                     massiques du gaz (uniquement dans le cas \n                     d'un melange; ses composantes sont aussi en\n                     TAB2 . 'ESPEULE')\n\n           (CHPO5) : CHPOINT \"CENTRE\" contenant les scalaires\n                     passifs du gaz (uniquement dans le cas de \n                     transport de scalaires passifs; ses composantes \n                     sont en TAB2 . 'SCALPASS')\n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           (MCHAM4): MCHAML (SPG = \"FACEL\") contenant les fractions \n                     massiques du gaz (uniquement dans le cas d'un \n                     melange; meme composantes que CHPO4).\n           \n           (MCHAM5): MCHAML (SPG = \"FACEL\") contenant les scalaires \n                     passifs (uniquement dans le cas de transport de\n                     scalaires passifs).\n           \n    \n\n    Cas b: deuxieme ordre en espace, premier ou deuxieme ordre en temps\n    ______\n\n    Premier ordre en temps\n\n     MCHAM1 MCHAM2 MCHAM3 (MCHAM4)(MCHAM5)= 'PRET' MCLE1 ENTI1 ENTI2 \n                                            MOD1  TAB2  \n                                            CHPO1  CHPO2  CHPO3  \n                                            CHPO4  CHPO5  CHPO6\n                                            CHPO7  CHPO8  CHPO9  \n                                           (CHPO10 CHPO11 CHPO12)\n                                           (CHPO13 CHPO14 CHPO15) ;\n\n    Deuxieme ordre en temps\n\n     MCHAM1 MCHAM2 MCHAM3 (MCHAM4)(MCHAM5)= 'PRET' MCLE1 ENTI1 ENTI2 \n                                            MOD1  TAB2  \n                                            CHPO1  CHPO2  CHPO3\n                                            CHPO4  CHPO5  CHPO6\n                                            CHPO7  CHPO8  CHPO9\n                                           (CHPO10 CHPO11 CHPO12)\n                                           (CHPO13 CHPO14 CHPO15)\n                                            CHPO16  FLOT1 ;\n\n    Commentaire :\n    _____________\n\n           MCLE1   : MOT; 'PERFTEMP' \n                    \n           ENTI1   : ENTIER; ordre en espace (=2)\n\n           ENTI2   : ENTIER; ordre en temps  (=1 ou 2)\n\n           MOD1    : Objet MODELE.\n\n           TAB2    : TABLE, qui contient les propriete du gaz\n                     (voir operateur PRIM)\n\n           CHPO1   : CHPOINT \"CENTRE\" contenant la masse volumique (en\n                     kg/m^3; une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     masse volumique (en kg/m^4; 2 composantes en 2D, \n                     'P1DX', 'P1DY').\n\n           CHPO3   : CHPOINT \"CENTRE\"  contenant le limiteur du \n                     gradient de la masse volumique (une seule \n                     composante 'P1  ')\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant la vitesse (en m/s; \n                     deux composantes en 2D, 'UX  ','UY  ').\n     \n           CHPO5   : CHPOINT \"CENTRE\" contenant le gradient de la\n                     vitesse (en s^-1; 4 composantes en 2D, 'P1DX',\n                     'P1DY', 'P2DX','P2DY').\n\n           CHPO6   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la vitesse (2 composantes en 2D, \n                     'P1', 'P2').\"\n\n           CHPO7   : CHPOINT \"CENTRE\" contenant la pression du gaz \n                     (en Pa; une composante, 'SCAL').\n\n           CHPO8   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     pression (en Pa/m; 2 composantes en 2D, 'P1DX', \n                     'P1DY').\n\n           CHPO9   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la pression (une composante, 'P1' ).\n\n          (CHPO10) : CHPOINT \"CENTRE\" contenant les fractions \n                     massiques (uniquement dans le cas d'un melange; \n                     n composantes, qui sont aussi en\n                     TAB2 . 'ESPEULE')\n\n          (CHPO11) : CHPOINT \"CENTRE\" contenant le gradient des \n                     fractions massiques (en m^-1, uniquement dans le \n                     cas d'un melange; 2n composantes en 2D)\n\n          (CHPO12) : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient des fractions massiques (uniquement dans \n                     le cas d'un melange; n composantes).\n\n          (CHPO13) : CHPOINT \"CENTRE\" contenant les scalaires \n                     passifs (uniquement dans le cas de transport de\n                     scalaires passifs; k composantes, qui sont aussi \n                     en TAB2 . 'SCALPASS')\n\n          (CHPO14) : CHPOINT \"CENTRE\" contenant le gradient des \n                     scalaires passifs (uniquement dans le cas de \n                     transport de scalaires passifs; 2k composantes \n                     en 2D)\n\n          (CHPO15) : CHPOINT \"CENTRE\" contenant le limiteur du gradient \n                     des scalaires passifs (uniquement dans le cas de \n                     transport de scalaires passifs; k composantes)\n\n           CHPO16  : CHPOINT \"CENTRE\" contenant le \"gamma\" du gaz\n                     (une composante, 'SCAL'; uniquement dans le cas \n                     ENTI2 = 2).\n\n           FLOT1   : FLOTTANT  qui contient l'increment en temps (en s) \n                     pour l'etape de prediction (uniquement dans le cas \n                     ENTI2 = 2; valeur conseillee = Dt / 2); \n\n           MCHAM1  : MCHAML contenant la masse volumique, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n                     (une composante, 'SCAL'; en kg/m^3)\n\n           MCHAM2  : MCHAML  contenant la vitesse (m/s) et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                      * 'UN' = vitesse normale  (SPG = 'FACEL')\n                      * 'UT' = vitesse tangentielle  (SPG = 'FACEL')\n                      * 'NX' = n.x (SPG = 'FACE')\n                      * 'NY' = n.y (SPG = 'FACE')\n                      * 'TX' = t.x (SPG = 'FACE')\n                      * 'TY' = t.y (SPG = 'FACE')).\n     \n           MCHAM3  : MCHAML (SPG = \"FACEL\") contenant la pression du\n                     gaz (en Pa, une  seule composante, 'SCAL').\n\n           (MCHAM4): MCHAML (SPG = \"FACEL\") contenant les fractions \n                     massiques du gaz (uniquement dans le cas d'un \n                     melange; meme composantes que CHPO10).\n\n           (MCHAM5): MCHAML (SPG = \"FACEL\") contenant les scalaires \n                     passifs (uniquement dans le cas de transport de\n                     scalaires passifs).\n           \n    Remarque:\n    _________\n\n    Le SPG des MCHAMLs \" 'DOMA' MOD1 'FACEL' \" est un MAILLAGE de SEG3.\n    Si la face n'est pas a la frontiere, le premier et le troisieme \n    POINT sont les centres des ELTs s'appuyant sur la face\n    (pour convention le premier point est le centre a gauche de la \n    face et le troisieme est le centre a droite de la face); le \n    deuxieme point est le centre de la face. Les MCHAMLs 'FACEL'  \n    sont definis sur le premier et le  troisieme POINT et \n    representent la reconstruction des variables a gauche et a \n    droite de la face.  \n    Si la face est sur la frontiere, le premier POINT contient \n    l'etat reconstruit et le troisieme contient son etat 'miroir' \n    (i.e. on impose des conditions limites de type 'mur').\n\n\n\n  II) TRANSPORT DE SCALAIRES\n     _______________________\n\n       Dans le cadre de la resolution en volumes finis de \n\n            -->  --->\n    d/dt S + u . grad (S) = 0\n           -->\n    avec div( u ) = 0\n\n    cet operateur permet de calculer les variables S  aux \n    interfaces (i.e. etats 'gauche' et 'droite' de chaque face), a \n    partir des valeurs aux centres.\n\n\n    a)  1er ordre en espace\n\n        CHAM1S  = 'PRET' 'CLAUDEIS' 'FACE' ENTI1 MOD1 CHPO1  ;\n\n        ENTI1       : ordre en espace (=1)\n\n        MOD1        : Objet MODELE.\n\n        CHPO1       : CHPOINT contenant les scalaires a transporter\n                      (SPG = 'DOMA' MOD1 'CENTRE')\n\n        CHAM1S      : MCHAML contenant les S scalaires a transporter\n                     (a gauche et a droite de chaque face, SPG = 'DOMA' MOD1\n                      'CENTRE', autant de composantes que CHPO1)\n\n    Remarque:\n    _________\n\n    Le SPG des MCHAMLs \" 'DOMA' MO1 'FACEL' \" est un MAILLAGE de SEG3.\n    Si la face n'est pas a la frontiere, le premier et le troisieme \n    POINT sont les centres des ELTs s'appuyant sur la face\n    (pour convention le premier point est le centre a gauche de la \n    face et le troisieme est le centre a droite de la face); le \n    deuxieme point est le centre de la face. Les MCHAMLs 'FACEL'  \n    sont definis sur le premier et le  troisieme POINT et \n    representent la reconstruction des variables a gauche et a \n    droite de la face.  \n    Si la face est sur la frontiere, le premier POINT contient \n    l'etat reconstruit et le troisieme contient son etat 'miroir'.\n\n\n\n  III) ECOULEMENT COMPRESSIBLE, EQUATIONS BIFLUIDES\n       ____________________________________________\n\n        Dans le cadre de la modelisation d'un ecoulement compressible \n    en discretisation volumes finis des \u00c9quations du Flux Bifluide a \n    une pression, cet operateur permet de calculer les variables \n    primitives aux interfaces (i.e. etats 'gauche' et 'droite' de \n    chaque face), a partir des variables primitives aux centres.\n\n    Cas a: Premier ordre en espace et en temps\n    ______\n\n           MCHAM8 MCHAM7 MCHAM6 MCHAM5 MCHAM4 MCHAM3 MCHAM2 MCHAM1 = \n           'PRET' MCLE1  ENTI1 ENTI2 MOD1\n           CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 CHPO7 CHPO8 ;\n\n    Commentaire:\n    ____________\n\n           MCLE1   : MOT; 'TWOFLUID'. \n                    \n           ENTI1   : ENTIER; ordre en espace (=1).\n\n           ENTI2   : ENTIER; ordre en temps (=1).\n\n           MOD1    : Objet MODELE.\n\n           CHPO1   : CHPOINT contenant la taux de vide  \n                     (une composante, 'SCAL').\n \n           CHPO2   : CHPOINT contenant la vitesse du gaz \n                     (m/s; deux composantes en 2D, 'UVX  ','UVY  ', trois \n                     composantes en 3D, 'UVX  ','UVY  ','UVZ  ').\n\n           CHPO3   : CHPOINT  contenant la vitesse du liquide\n                     (m/s; deux composantes en 2D, 'ULX  ','ULY  ', trois \n                     composantes en 3D, 'ULX  ','ULY  ','ULZ  ').\n\n           CHPO4   : CHPOINT contenant la pression du gaz (Pa; une\n                     composante, 'SCAL').\n\n           CHPO5   : CHPOINT contenant la temperature du gaz\n                     (K; one component, 'SCAL').\n\n           CHPO6   : CHPOINT contenant la temperature du liquide \n                     (K; une composante, 'SCAL').\n\n           CHPO7   : CHPOINT contenant la densite du gaz\n                     (kg/m^3; une componsamte, 'SCAL').\n\n           CHPO8   : CHPOINT contenant la densite du liquide\n                     (kg/m^3; une composante, 'SCAL').\n\n           MCHAM1  : MCHAML contenant la taux de vide, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n                     (une composante, 'SCAL')\n                     (voir operateur PRET)\n\n           MCHAM2  : MCHAML contenant la vitesse du gaz et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                     * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n                     * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n                     * 'NX' = n.x (SPG = 'FACE')\n                     * 'NY' = n.y (SPG = 'FACE')\n                     * 'TX' = t.x (SPG = 'FACE')\n                     * 'TY' = t.y (SPG = 'FACE')).\n                     (voir operateur PRET)\n\n           MCHAM3  : MCHAML contenant la vitesse du liquide et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                     * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n                     * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n                     * 'NX' = n.x (SPG = 'FACE')\n                     * 'NY' = n.y (SPG = 'FACE')\n                     * 'TX' = t.x (SPG = 'FACE')\n                     * 'TY' = t.y (SPG = 'FACE')).\n                     (voir operateur PRET)\n\n           MCHAM4  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression\n                     (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM5  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la \n                     temperature du gaz (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM6  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la \n                     temperature du liquide (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM7  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n                     gaz (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM8  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n                     liquide (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n    Cas b: deuxieme ordre en espace et en temps\n    ______\n\n           MCHAM8 MCHAM7 MCHAM6 MCHAM5 MCHAM4 MCHAM3 MCHAM2 MCHAM1 = \n           'PRET' MCLE1  ENTI1 ENTI2 MOD1   \n           CHPO1  CHPO2  CHPO3  \n           CHPO4  CHPO5  CHPO6\n           CHPO7  CHPO8  CHPO9  \n           CHPO10 CHPO11 CHPO12  \n           CHPO13 CHPO14 CHPO15\n           CHPO16 CHPO17 CHPO18\n           CHPO19 CHPO20 FLOT1 ;\n           'PRET' MCLE1  ENTI1 ENTI2 MOD1\n           CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 CHPO7 CHPO8 ;\n\n    Contents :\n    _________\n\n           MCLE1   : MOT; 'TWOFLUID'. \n                    \n           ENTI1   : ENTIER; ordre en espace (=1).\n\n           ENTI2   : ENTIER; ordre en temps (=1).\n\n           MOD1    : Objet MODELE.\n\n           CHPO1   : CHPOINT contenant la taux de vide  \n                     (une composante, 'SCAL').\n\n           CHPO2   : CHPOINT \"CENTRE\" contenant le gradient de la \n                     taux de vide (en 1/m; 2 composantes en 2D, 'P1DX', \n                     'P1DY').\n\n           CHPO3   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la taux de vide (one component, 'P1  ')\n\n           CHPO4   : CHPOINT \"CENTRE\" contenant la vitesse du gaz \n                     (m/s; deux composantes en 2D, 'UVX ','UVY ', trois \n                     composantes en 3D, 'UVX ','UVY ','UVZ ').\n\n           CHPO5   : CHPOINT \"CENTRE\" contenant le gradient de la\n                     vitesse du gaz (en s^-1; 4 composantes en 2D, 'P1DX',\n                     'P1DY', 'P2DX','P2DY').\n\n           CHPO6   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la vitesse du gaz (2 composantes en 2D, \n                     'P1', 'P2').\n\n           CHPO7   : CHPOINT \"CENTRE\" contenant la vitesse du liquide\n                     (m/s; deux composantes en 2D, 'ULX ','ULY ', trois \n                     composantes en 3D, 'ULX ','ULY ','ULZ ').\n\n           CHPO8   : CHPOINT \"CENTRE\" contenant le gradient de la\n                     vitesse du liquide (en s^-1; 4 composantes en 2D,\n                     'P1DX', 'P1DY', 'P2DX','P2DY').\n\n           CHPO9   : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la vitesse du liquid (2 composantes en 2D, \n                     'P1', 'P2').\n\n           CHPO10  : CHPOINT \"CENTRE\" contenant la pression (Pa; une\n                     composante, 'SCAL').\n\n           CHPO11  : CHPOINT \"CENTRE\" contenant le gradient de la \n                     pression (en Pa/m; 2 composantes en 2D, 'P1DX', \n                     'P1DY').\n\n           CHPO12  : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la pression (une composante, 'P1' ).\n\n           CHPO13  : CHPOINT contenant la temperature du gaz\n                     (K; une composante component, 'SCAL').\n\n           CHPO14  : CHPOINT \"CENTRE\" contenant le gradient de la \n                     temperature du gaz (en K/m; 2 composantes \n                     en 2D, 'P1DX', 'P1DY').\n\n           CHPO15  : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la temperature du gaz \n                     (une composante, 'P1' ).\n\n           CHPO16  : CHPOINT \"CENTRE\" contenant la temperature du liquide \n                     (K; une composante, 'SCAL').\n\n           CHPO17  : CHPOINT \"CENTRE\" contenant le gradient de la \n                     temperature du liquide (en K/m; 2 composantes \n                     en 2D, 'P1DX', 'P1DY').\n\n           CHPO18  : CHPOINT \"CENTRE\" contenant le limiteur du\n                     gradient de la temperature du liquide \n                     (une composante, 'P1' ).\n\n           CHPO19   : CHPOINT \"CENTRE\" contenant la densite du gaz\n                     (kg/m^3; une componsamte, 'SCAL').\n\n           CHPO20   : CHPOINT \"CENTRE\" contenant la densite du liquide\n                     (kg/m^3; une composante, 'SCAL').\n\n           FLOT1    : FLOTTANT qui contient l'increment en temps (en s) \n                      pour l'etape de prediction (uniquement dans le cas \n                      ENTI2 = 2; valeur conseillee = Dt); \n\n           MCHAM1  : MCHAML contenant la taux de vide, qui a comme \n                     SPG (support geometrique) 'DOMA' MOD1 'FACEL'\n                     (une composante, 'SCAL')\n                     (voir operateur PRET)\n\n           MCHAM2  : MCHAML contenant la vitesse du gaz et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                     * 'UN' = vitesse normale (SPG = 'DOMA' MOD1 'FACEL')\n                     * 'UT' = vitesse tangentielle (SPG = 'DOMA' MOD1 FACEL')\n                     * 'NX' = n.x (SPG = 'FACE')\n                     * 'NY' = n.y (SPG = 'FACE')\n                     * 'TX' = t.x (SPG = 'FACE')\n                     * 'TY' = t.y (SPG = 'FACE')).\n                     (voir operateur PRET)\n\n           MCHAM3  : MCHAML contenant la vitesse du liquide et les cosinus \n                     directeurs du repere locale (n,t) dans le repere \n                     global (x,y) (dans le cas 2D 6 composantes:\n                     * 'UN' = vitesse normale  (SPG = 'DOMA' MOD1 'FACEL')\n                     * 'UT' = vitesse tangentielle  (SPG = 'DOMA' MOD1 FACEL')\n                     * 'NX' = n.x (SPG = 'FACE')\n                     * 'NY' = n.y (SPG = 'FACE')\n                     * 'TX' = t.x (SPG = 'FACE')\n                     * 'TY' = t.y (SPG = 'FACE')).\n                     (voir operateur PRET)\n\n           MCHAM4  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la pression\n                     (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM5  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la \n                     temperature du gaz (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM6  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la \n                     temperature du liquide (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM7  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n                     gaz (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n           MCHAM8  : MCHAML (SPG = 'DOMA' MOD1 'FACEL') contenant la densite du\n                     liquide (une  seule composante, 'SCAL').\n                     (voir operateur PRET)\n\n\n   IV) ECOULEMENT COMPRESSIBLE, 'REACTIVE DISCRETE EQUATION METHOD'\n       ______________________________________\n\n       Dans le cadre de la modelisation d'un ecoulement compressible \n    en discretisation volumes finis des \u00c9quations\n    d'Euler avec REACTIVE DISCRETE EQUATION METHOD, \n    cet operateur permet de calculer les variables \n    primitives aux interfaces (i.e. etats 'gauche' et 'droite' de \n    chaque face), a partir des variables primitives aux\n    centres. Pour une description des variables veillez regarder\n    la notice d'operateur 'PRIM'.\n\n\n\n    a)  deuxieme ordre en espace (pour appliquer premier\n        ordre en espace veillez multiplier CHPGRA* et CHPLIA*\n        par zero)\n\n       CHAMAL1 CHAMAL2 CHAMRN1 CHAMRN2 CHAMV1 CHAMV2 CHAMP1 CHAMP2 = \n          'PRET' 'DEM' MOD1   TABPGAS \n                              CHPAL1 CHPGRA1 CHPLIA1  \n                              CHPAL2 CHPGRA1 CHPLIA1\n                              CHPRN1 CHPGRR1 CHPLIR1\n                              CHPRN2 CHPGRR2 CHPLIR2\n                              CHPVN1 CHPGRV1 CHPLIV1\n                              CHPVN2 CHPGRV2 CHPLIV2\n                              CHPP1  CHPGRP1 CHPLIP1\n                              CHPP2  CHPGRP2 CHPLIP2\n                              EPS ;\n\n     ARGUMENTS  : \n\n           'DEM'   : le mot cle pour  \"Reactive Discrete\n                     Equation Method\"\n                    \n           MOD1    : OBJET MODELE de TYPE 'EULER'\n\n            TABPGAS     : TABLE des proprietes des gaz\n                         (voir la notice de l'operateur 'PRIM')\n\n            CHPAL1 CHPGRA1 CHPLIA1  : CHPOINTs \"CENTRE\":\n                          alpha1, son gradient et limiteur\n\n            CHPAL2 CHPGRA2 CHPLIA2  : CHPOINTs \"CENTRE\":\n                          alpha2, son gradient et limiteur\n\n            CHPRN1 CHPGRR1 CHPLIR1  : CHPOINTs \"CENTRE\":\n                          rho1 - la densite, son gradient et limiteur\n\n            CHPRN2 CHPGRR2 CHPLIR2  : CHPOINTs \"CENTRE\":\n                          rho2 - la densite, son gradient et limiteur\n\n            CHPVN1 CHPGRV1 CHPLIV1  : CHPOINTs \"CENTRE\":\n                          v1 - la vitesse, son gradient et limiteur\n\n            CHPVN2 CHPGRV2 CHPLIV2  : CHPOINTs \"CENTRE\":\n                          v2 - la vitesse, son gradient et limiteur\n\n            CHPVP1 CHPGRP1 CHPLIP1  : CHPOINTs \"CENTRE\":\n                          p1 - la pression, son gradient et limiteur\n\n            CHPVP2 CHPGRP2 CHPLIP2  : CHPOINTs \"CENTRE\":\n                          p2 - la pression, son gradient et limiteur\n\n            EPS         : FLOTTANT; alpha_i < eps  => no phase_i \n\n  RESULTS  : \n\n            CHAMAL1 CHAMAL2 CHAMRN1 CHAMRN2 CHAMV1 CHAMV2 CHAMP1\n            CHAMP2      :  MCHAML \"FACEL\" qui contiennent alpha\n            (1 et 2), densite (1 et 2), vitesse (1 et 2) et\n            pression (1 et 2) a gauche et a droite de\n            chaque interface.\n\n\n\n  V) ECOULEMENT COMPRESSIBLE, GHOST FLUID METHOD FOR THE POOR (GFMP)\n     _______________________________________________________________\n\n        Dans le cadre de la modelisation d'un ecoulement compressible \n    en discretisation volumes finis des \u00c9quations d'Euler, methode \n    GFMP, cet operateur permet de calculer les variables \n    primitives aux interfaces (i.e. etats 'gauche' et 'droite' de \n    chaque face), a partir des variables primitives aux centres.\n\n    V.a) 2eme ordre en espace, une espece\n\n         CHAMPH CHAMRN CHAMV CHAMP = \n         'PRET' 'GFMP' LMOT1  MOD1   \n                              CHPPH CHPGRPH CHPLIP  \n                              CHPRN CHPGRR CHPLIR\n                              CHPVN CHPGRV CHPLIV\n                              CHPP  CHPGRP CHPLIP ;\n    ou\n\n    V.b) 2eme ordre en espace, multi-espece\n\n         CHAMPH CHAMRN CHAMV CHAMP CHAMY CHAMAL = \n         'PRET' 'GFMP' LMOT1  MOD1   \n                              CHPPH CHPGRPH CHPLIP  \n                              CHPRN CHPGRR CHPLIR\n                              CHPVN CHPGRV CHPLIV\n                              CHPP  CHPGRP CHPLIP\n                              CHPYN CHPGRY CHPLIY \n                              CHPAN CHPGRA CHPLIA ;\n\n\n    INPUT\n\n          'GFMP'       : OBJET MOT\n\n           LMOT1       : OBJET LISTMOTS, noms des especes \n                         dans les equations d'Euler \n                   \n           MOD1        : OBJET MODELE de TYPE EULER\n\n           CHPPH CHPGRP CHPLIP  : CHPOINTs \"CENTRE\":\n                         phi,  gradient,  limiteur\n\n           CHPRN CHPGRR CHPLIR  : CHPOINTs \"CENTRE\":\n                         rho, gradient,  limiteur\n\n           CHPVN CHPGRV CHPLIV  : CHPOINTs \"CENTRE\":\n                         v,  gradient,  limiteur\n\n           CHPVP CHPGRP CHPLIP  : CHPOINTs \"CENTRE\":\n                         p  gradient,  limiteur\n\n           CHPYN CHPGRY CHPLIY  : CHPOINTs \"CENTRE\":\n                         y,  gradient,  limiteur\n\n           CHPAN CHPGRA CHPLIA  : CHPOINTs \"CENTRE\":\n                         alpha,  gradient,  limiteur\n\n    OUTPUT\n\n           CHAMPH CHAMRN CHAMV CHAMP CHAMY CHAMAL:  \n                          MCHAML \"FACEL\" \n                          contenant phi, la densite, \n                          la velocite, la pression, les fractions \n                          massiques et volumiques \n                          a gauche et a droite des faces",
  },
  {
    name: "PRIM",
    url: "PRIM",
    documentation:
      "$$$$ PRIM     NOTICE  CHAT      11/09/12    21:17:44     7124           \n                                             DATE     11/09/12\n\n  Operateur PRIM                           Voir aussi :\n\n       \n    a)   EVOL2  = PRIM    EVOL1 ; \n\n    b1)  RCHPO1 RCHPO2 =  'PRIM' 'PERFMONO' CHPO1 CHPO2 CHPO3 CHPO4 ;\n\n    b2)  RCHPO1 RCHPO2 RCHPO3 RCHPO4 RCHPO5 = 'PRIM' 'PERFMULT' TAB1   \n          CHPO1 CHPO2  CHPO3  CHPO4  ;\n\n    b3)  RCHPO1 RCHPO2 RCHPO3 RCHPO4 (RCHPO5) RCHPO6 = \n          'PRIM' 'PERFTEMP'  TAB1  CHPO1  CHPO2  CHPO3  CHPO4  \n          (CHPO5) (CHPO6) ;\n       ou\n\n        RCHPO1 RCHPO2 RCHPO3 (RCHPO5) RCHPO6 = 'PRIM' 'PERFTEMP'\n          TAB1 CHPO1 CHPO2  CHPO3 (CHPO5) (CHPO6) ;\n\n    c)  RMAT1 =  'PRIM' 'CONSPRIM' MAIL1 LMOT1 LMOT2\n           CHPO1 CHPO2 CHPO3 CHPO4 ;\n\n    d)  RCHPO8 RCHPO7 RCHPO6 RCHPO5 RCHPO4 RCHPO3 RCHPO2 RCHPO1 =  \n        'PRIM' 'TWOFLUID'\n        CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 \n        CHPO6 CHPO7 CHPO8 CHPO9 CHPO10 CHPO11;\n\n    e)  RCHD1 RCHD2 RCHV1 RCHV2 RCHP1 RCHP2 RCHT1 RCHT2 = \n                               'PRIM' 'DEM' TABPGAS\n        CHPAL1 CHPAL2 CHPARN1 CHPARN2 CHPAGN1 CHPAGN2 \n        CHPARET1 CHPARET2 CHPTGUE1 CHPTGUE2 EPS ;\n\n    f)  RCHPO0 RCHPO1 (RCHPO2)  = 'PRIM' 'GFMP' TAB1  \n          CHPO0 CHPO1 CHPO2 CHPO3 (CHPO4 CHPO5) ;\n\n\n a) L'operateur PRIMITIVE calcule la primitive d'un objet EVOLUTION \n    pouvant representer des fonctions dont on connait la valeur pour \n    des abscisses croissantes. \n    La valeur de la primitive pour la premiere abscisse de chaque\n    fonction est 0.\n    \n     ATTENTION : les valeurs sont rendues aux abscisses  de l'evolution\n    initiale ( l'evolution  resultat ne represente pas la primitive \n    en tous points de l'intervale) \n\n b) Dans le cadre de la modelisation d'un ecoulement compressible en \n    discretisation volumes finis (equations d'Euler ou Navier-Stokes), \n    cet operateur permet de calculer les variables primitives (i.e. \n    pression, vitesse, temperature, ...) a partir des variables \n    conservatives (i.e. masse volumique, quantite de mouvement, energie \n    volumique totale, masse volumique de chaque espece). \n\n\n b1 -----------------\n    |  1ere modele  |\n    -----------------\n\n    Gaz parfait (mono-espece); les chaleurs specifiques cp et cv \n    sont independantes de la temperature.\n\n    RCHPO1 RCHPO2 =  'PRIM' MCLE1  CHPO1 CHPO2 CHPO3 CHPO4 ;\n\n    Commentaire :\n    _____________\n\n\n    MCLE1   : MOT,  'PERFMONO'.\n                    \n    CHPO1   : CHPOINT  contenant la masse volumique (en kg/m^3; une \n              composante, 'SCAL').\n\n    CHPO2   : CHPOINT  contenant les debits (en  kg/s/m^2; deux \n              composantes en 2D, 'UX  ','UY  ', trois composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n     \n    CHPO3   : CHPOINT  contenant l'energie totale par unite de volume \n              (en J/m^3; une composante, 'SCAL').\n\n    CHPO4   : CHPOINT  contenant le \"gamma\" du gaz (une composante, \n              'SCAL').\n     \n    RCHPO1  : CHPOINT  contenant la vitesse (m/s; deux  composantes \n              en 2D, 'UX  ','UY  ', trois  composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n\n    RCHPO2  : CHPOINT contenant la pression du gaz (Pa; une composante,\n              'SCAL').\n      \n\n    Remarques :\n    ___________\n\n    1) On controle que\n       * la pression est positive, \n       * 1 < gamma < 3\n       * les CHPOINTs sont definis sur le meme support geometrique\n\n    2) CHPO1, CHPO2, CHPO3  sont les variables conservatives des \n       \u00c9quations d'Euler.      \n\n\n b2 -----------------\n    |  2eme modele  |\n    -----------------\n\n    Melange de gaz parfaits (cp et cv independants de la temperature)\n\n    RCHPO1 RCHPO2 RCHPO3 RCHPO4 RCHPO5 = 'PRIM' MCLE1  TAB1 CHPO1  \n           CHPO2  CHPO3  CHPO4  ;\n\n    Commentaire :\n    _____________\n\n\n    MCLE1   : MOT, 'PERFMULT'.\n                  \n    TAB1    : TABLE qui contient :\n              * les noms des especes qui apparaissent explicitement\n                dans les equations d'Euler en TAB1 . 'ESPEULE' \n                (LISTMOTS);\n              * le nom de l'espece qui n'y est pas dans  \n                TAB1 . 'ESPNEULE' (MOT);\n              * les CP et les CV des gaz qui apparaissent en\n                TAB1 . 'ESPEULE' et en TAB1 . 'ESPNEULE' \n                TAB1 . 'CP' (TABLE)\n                TAB1 . 'CV' (TABLE).\n\n    CHPO1   : CHPOINT  contenant la masse volumique (en kg/m^3; une\n              composante, 'SCAL').\n\n    CHPO2   : CHPOINT  contenant les debits (en kg/s/m^2; deux \n              composantes en 2D, 'UX  ','UY  ', trois composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n     \n    CHPO3   : CHPOINT  contenant l'energie totale par unite de volume \n              (en J/m^3; une composante, 'SCAL').\n\n    CHPO4   : CHPOINT  contenant la masse volumique des especes qui sont\n              explicitement \"splitted\" dans les equations  d'Euler \n              (en kg/m^3; leurs noms sont dans  TAB1 . 'ESPEULE').\n\n    RCHPO1  : CHPOINT  contenant la vitesse (en m/s; deux composantes \n              en 2D, 'UX  ','UY  ', trois composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n\n    RCHPO2  : CHPOINT  contenant la pression du gaz (en Pa; une\n              composante, 'SCAL').\n      \n    RCHPO3  : CHPOINT  contenant la temperature du gaz (en K; une\n              composante, 'SCAL').\n      \n    RCHPO4  : CHPOINT  contenant les fractions massiques des \n              differentes especes (autant composantes que CHPO4;\n              meme nom de composantes).\n\n    RCHPO5  : CHPOINT  contenant les \"gamma\" du gaz (une composante,\n              'SCAL').\n      \n\n    Remarques :\n    ___________\n\n    1) On controle que\n       * la pression soit positive\n       * 1 < gamma < 3\n       * 0 < Y_i < 1\n       * sum Y_i < 1\n       * les CHPOINTs sont definis sur le meme support geometrique.\n\n    2) CHPO1, CHPO2, CHPO3, CHPO4 sont les variables conservatives des\n       \u00c9quations d'Euler.\n\n\n    Exemple : \n    _________\n\n    Pour montrer la structure de TAB1 on donne un exemple\n\n\n    PGAZ = 'TABLE' ;\n\n    *\n    *** GAZ: H_2, O_2, H_2O, N_2\n    *\n    *   CP, CV en J/Kg/K @ T = 3000\n    *\n\n    *\n    **** Especes qui sont dans les equations d'Euler\n    *\n\n    PGAZ . 'ESPEULE' = 'MOTS' 'H2  ' 'O2  ' 'H2O ' ;\n\n    *\n    * Attention: 4 LETTRES    |____| |____| |____|\n    *\n\n    *\n    **** Espece qui n'y est pas\n    *\n    \n    \n    PGAZ . 'ESPNEULE' = 'N2  ';\n    \n    * 4 LETTRES         |____| \n\n    \n    PGAZ . 'CP' = 'TABLE' ;\n    PGAZ . 'CP' . 'H2  '  = .18729066D+05 ;\n    PGAZ . 'CP' . 'O2  '  = .11886820D+04 ;\n    PGAZ . 'CP' . 'H2O '  = .31209047D+04 ;\n    PGAZ . 'CP' . 'N2  '  = .12993995D+04 ;\n    \n    PGAZ . 'CV' = 'TABLE' ;\n    PGAZ . 'CV' . 'H2  '  = .14571861D+05 ;\n    PGAZ . 'CV' . 'O2  '  = .92885670D+03 ;\n    PGAZ . 'CV' . 'H2O '  = .26589930D+04 ;\n    PGAZ . 'CV' . 'N2  '  = .10024563D+04 ;\n    \n\n b3  -----------------\n    |  3eme modele  |\n    -----------------\n\n    Gaz parfait / melange de gaz parfaits avec cv dependants de la \n    temperature selon une loi polynomial.\n    \n    Cas multi-especes:\n    RCHPO1 RCHPO2 RCHPO3 RCHPO4 (RCHPO5) RCHPO6 = 'PRIM' MCLE1  \n          TAB1  CHPO1  CHPO2  CHPO3  CHPO4  (CHPO5) (CHPO6) ;\n\n    Cas mono-espece:\n    RCHPO1 RCHPO2 RCHPO3 (RCHPO5) RCHPO6 = 'PRIM' MCLE1  TAB1 \n          CHPO1 CHPO2  CHPO3 (CHPO5) (CHPO6) ;\n\n    Commentaire :\n    _____________\n\n\n    MCLE1   : MOT, 'PERFTEMP'.\n                  \n    TAB1    : TABLE qui contient :\n              * le nom de l'espece qui n'est pas dans les Equations\n                d'Euler en\n                TAB1 . 'ESPNEULE' (MOT);\n              * les noms des especes qui apparaissent explicitement\n                dans les equations d'Euler en \n                TAB1 . 'ESPEULE' (LISTMOTS); \n                dans le cas mono-espece  cet indice n'existe pas.\n              * le degre de polynoms cv_i=cv_i(T), en\n                TAB1 . 'NORD' (ENTIER >= 0)\n              * les proprietes de chaque gaz 'ESPI', dans la table\n                TAB1 . 'ESPI':\n                - TAB1 . 'ESPI' . 'A' (LISTREEL)\n                  qui contient les (TAB1.'NORD')+1 coefficients des \n                  polynoms cv(T), (A0,A1,...); le cv(T) sont supposes \n                  etre en J/kg/K, donc les Ai doivent etre en unites\n                  coherentes; \n                - TAB1 . 'ESPI' . 'R' (J/kg/K, FLOTTANT) \n                  qui contient la constante du gaz parfait \n                - TAB1 . 'ESPI' . 'H0K' (J/kg, FLOTTANT)\n                  qui contient l'enthalpie de formation du gaz a 0K\n                  (quantite numerique et pas physique)\n              * TAB1 . 'SCALPASS' = si existante, noms des scalaires\n                passifs a transporter (LISTMOTS)\n\n    CHPO1   : CHPOINT  contenant la masse volumique (en kg/m^3; une\n              composante, 'SCAL').\n\n    CHPO2   : CHPOINT  contenant les debits (en kg/s/m^2; deux \n              composantes en 2D, 'UX  ','UY  ', trois composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n     \n    CHPO3   : CHPOINT  contenant l'energie totale par unite de volume \n              (en J/m^3; une composante, 'SCAL').\n\n    CHPO4   : CHPOINT  contenant la masse volumique des especes qui \n              sont explicitement \"splitted\" dans les equations  \n              d'Euler \n              (en kg/m^3; leurs noms sont dans  TAB1 . 'ESPEULE').\n\n   (CHPO5)  : CHPOINT contenant les produits entre rho et les scalaires \n              passifs a transporter (leur noms sont en TAB1 . 'SCALPASS').\n\n   (CHPO6)  : CHPOINT contenant une temperature de reference \n              (initialisation de la methode de Newton permettent de \n              calculer T a partir de l'energie)\n              (en K, une composante, 'SCAL')\n\n    RCHPO1  : CHPOINT  contenant la vitesse (en m/s; deux composantes \n              en 2D, 'UX  ','UY  ', trois composantes\n              en 3D, 'UX  ','UY  ', 'UZ  ').\n\n    RCHPO2  : CHPOINT  contenant la pression du gaz (en Pa; une\n              composante, 'SCAL').\n      \n    RCHPO3  : CHPOINT contenant la temperature du gaz (en K; une\n              composante, 'SCAL').\n      \n    RCHPO4  : CHPOINT  contenant les fractions massiques des \n              differentes especes (autant de composantes que CHPO4;\n              meme nom de composantes).\n\n   (RCHPO5) : CHPOINT contenant les scalaires passifs a transporter \n              (leur noms sont en TAB1 . 'SCALPASS').\n      \n    RCHPO6  : CHPOINT  contenant les \"gamma\" du gaz (une composante,\n              'SCAL').\n\n\n    Remarques :\n    ___________\n\n    1) On controle que\n       * la pression et la temperature soient positives\n       * 1 < gamma < 3\n       * 0 < Y_i < 1\n       * sum Y_i < 1\n       * les CHPOINTs sont definis sur le meme support geometrique.\n\n    2) CHPO1, CHPO2, CHPO3, CHPO4 CHPO5 sont les variables conservatives des\n       \u00c9quations d'Euler.\n\n\n    Exemple : \n    _________\n\n    Pour montrer la structure de TAB1 on donne un exemple dans le cas \n    multi-especes:\n\n\n    PGAZ = 'TABLE' ;\n\n    *\n    *** GAZ: H_2, O_2, H_2O, N_2\n    *\n    * \n\n    *\n    **** Especes qui sont dans les equations d'Euler\n    *\n\n    PGAZ . 'ESPEULE' = 'MOTS' 'H2  ' 'O2  ' 'H2O ' ;\n\n    *\n    * Attention: 4 LETTRES    |____| |____| |____|\n    *\n\n    *\n    **** Espece qui n'y est pas\n    *\n    \n    \n    PGAZ . 'ESPNEULE' = 'N2  ';\n    \n    * 4 LETTRES         |____| \n    \n    *\n    **** Degre des polynoms\n    *\n\n    PGAZ . 'NORD' = 4 ;\n\n    *\n    **** Les tables qui contiennent les proprietes de chaque gaz\n    *\n\n    PGAZ .  'H2  ' = 'TABLE'  ;\n    PGAZ .  'H2O ' = 'TABLE'  ;\n    PGAZ .  'N2  ' = 'TABLE'  ;\n    PGAZ .  'O2  ' = 'TABLE'  ;\n\n    *\n    **** R (J/Kg/K)\n    *\n\n    PGAZ .  'H2  ' . 'R' = 4130.0 ;\n    PGAZ .  'H2O ' . 'R' = 461.4 ;\n    PGAZ .  'N2  ' . 'R' = 296.8 ;\n    PGAZ .  'O2  ' . 'R' = 259.8 ;\n\n    *\n    **** Regressions polynomials\n    *\n\n    PGAZ .  'H2  ' . 'A' = 'PROG'  9834.91866 0.54273926 0.000862203836\n                               -2.37281455E-07 1.84701105E-11 ;\n    PGAZ .  'H2O ' . 'A' = 'PROG' 1155.95625 0.768331151 -5.73129958E-05\n                              -1.82753232E-08 2.44485692E-12 ;\n    PGAZ .  'N2  ' . 'A' = 'PROG' 652.940766 0.288239099 -7.80442298E-05\n                             8.78233606E-09 -3.05514485E-13 ;\n    PGAZ .  'O2  ' . 'A' = 'PROG' 575.012333  0.350522002 \n                      -0.000128294865    2.33636971E-08 -1.53304905E-12;\n                              \n    *\n    **** \"Enthalpies\" (ou energies) de formations a 0K (J/Kg)\n    *\n\n    PGAZ .  'H2  ' . 'H0K' = -4.195D6 ;\n    PGAZ .  'H2O ' . 'H0K' = -1.395D7 ;\n    PGAZ .  'N2  ' . 'H0K' = -2.953D5 ;\n    PGAZ .  'O2  ' . 'H0K' = -2.634D5 ;\n\n\n c) Dans le cadre de la modelisation d'un ecoulement compressible en \n    discretisation volumes finis (equations d'Euler ou Navier-Stokes), \n    cet operateur calcule la matrice jacobienne des variables \n    conservatives par rapport aux variables primitives (gaz parfait \n    mono-espece, les chaleurs specifiques cp et cv sont independantes \n    de la temperature).\n\n\n RMAT1 =  'KONV' 'VF' 'PERFMONO' 'CONSPRIM' MAIL1 LMOT1 LMOT2\n           CHPO1 CHPO2 CHPO3 CHPO4 ;\n   \n LMOT1   : objet de type LISTMOTS\n           Noms des variables conservatives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la qdm, de l'energie totale par unite de volume\n\n LMOT2   : objet de type LISTMOTS\n           Noms des variables primitives\n           Il contient dans l'ordre suivant: le noms de la densite,\n           de la vitesse, de la pression\n\n MAIL1   : SPG des CHPOINTs\n\n CHPO1   : CHPOINT contenant la masse volumique\n           (une seule composante, 'SCAL').\n\n CHPO2   : CHPOINT contenant la vitesse\n           (deux/trois composantes\n            'UX', 'UY', 'UZ')\n\n CHPO3   : CHPOINT contenant la pression du gaz\n           (une seule composante, \n            'SCAL').\n\n CHPO4   : CHPOINT contenant le \"gamma\" du gaz\n           (une seule composante, \n            'SCAL').\n\n RMAT1   : objet de type MATRIK\n           (SPG =  MAIL1)\n           (inconnues primales = variables primitives  = LMOT2)\n           (inconnues duales = variables conservatives = LMOT1)\n           Il contient le jacobien des variables conservatives \n           par rapport aux variables primitives.\n\n\nd) Calcul des variables primitives (taux du vide, vitesse du gaz, \n   vitesse du liquide, pression du gaz, temperature du gaz, \n   temperature du liquide) si on connait les valeurs des \n   variables conservatives (masse volumique, quantite de mouvement, \n   energie volumique totale, masse volumique de chaque compossant)\n   sur la modele bifluide a un pression et six equations,\n   seulement valide por melanges d'eau et air\n\n    -----------------\n\n    L'air est considere un gaz parfait et l'eau est traitee\n    avec l'equation de etat \"Stiffened gas\", les chaleurs specifiques \n    cp et cv sont independantes de la temperature.\n\n    RCHPO8 RCHPO7 RCHPO6 RCHPO5 RCHPO4 RCHPO3 RCHPO2 RCHPO1 =  \n    'PRIM' MCLE1  \n    CHPO1 CHPO2 CHPO3 CHPO4 CHPO5 CHPO6 CHPO7 CHPO8 CHPO9 CHPO10 CHPO11;\n\n    Commentaire :\n    _____________\n\n\n    MCLE1   : MOT object,  'TWOFLUID'.\n                    \n    CHPO1   : CHPOINT contenant la masse volumique du gaz\n              (kg/m^3; un composante 'SCAL').\n\n    CHPO2   : CHPOINT contenant la masse volumique du liquide \n              (kg/m^3; un composante 'SCAL').\n\n    CHPO3   : CHPOINT contenant la quantite de mouvement du gaz (kg/s/m^2; \n              deux composantes en 2D, 'UVX  ','UVY  ', trois composantes\n              en 3D, 'UVX  ','UVY  ','UVZ  ').\n\n    CHPO4   : CHPOINT contenant la quantite de mouvement du liquide \n              (kg/s/m^2; deux composantes en 2D, 'ULX  ','ULY  ', \n              trois composantes en 3D, 'ULX  ','ULY  ','ULZ  ').\n     \n    CHPO5   : CHPOINT contenant l'energie totale du gaz par unite de volume\n              (J/m^3; une composante, 'SCAL').\n\n    CHPO6   : CHPOINT contenant l'energie totale du gaz par unite de volume\n              (J/m^3; une composante, 'SCAL').\n\n    CHPO7   : CHPOINT contenant la taux de vide evalue le dernier pas du temp\n              (une composante, 'SCAL').\n\n    CHPO8   : CHPOINT contenant la temperature du gaz le dernier pas du temp\n              (K; one component, 'SCAL').\n\n    CHPO9   : CHPOINT contenant la temperature du liquide le dernier pas \n              du temp (K; une composante, 'SCAL').\n    \n    CHPO10  : CHPOINT contenant le parametre de correccion de pression\n              selon le model du CATHARE (une composante, 'SCAL').\n\n    CHPO11  : CHPOINT contenant le parametre de masse virtual correction\n              selon le model du CATHARE (une composante, 'SCAL').\n\n    RCHPO1  : CHPOINT contenant la taux de vide  \n              (une composante, 'SCAL').\n \n    RCHPO2  : CHPOINT contenant la vitesse du gaz \n              (m/s; deux composantes en 2D, 'UVX  ','UVY  ', trois \n              composantes en 3D, 'UVX  ','UVY  ','UVZ  ').\n\n    RCHPO3  : CHPOINT  contenant la vitesse du liquide\n              (m/s; deux composantes en 2D, 'ULX  ','ULY  ', trois \n              composantes en 3D, 'ULX  ','ULY  ','ULZ  ').\n\n    RCHPO4  : CHPOINT contenant la pression du gaz (Pa; une\n              composante, 'SCAL').\n\n    RCHPO5  : CHPOINT contenant la temperature du gaz\n              (K; one component, 'SCAL').\n\n    RCHPO6  : CHPOINT contenant la temperature du liquide \n              (K; une composante, 'SCAL').\n\n    RCHPO7  : CHPOINT contenant la densite du gaz\n              (kg/m^3; une componsamte, 'SCAL').\n\n    RCHPO8  : CHPOINT contenant la densite du liquide\n              (kg/m^3; une composante, 'SCAL').\n\n    RCHPO9  : CHPOINT contenant la correccion de pression selon la \n              modele du CATHARE (Pa; une composant, 'SCAL').\n      \n\n    Remarks :\n    ___________\n\n    1) On controle que\n       * la pression soit positive\n       * les CHPOINTs sont definis sur le meme support geometrique.\n\n    2) CHPO1, CHPO2, CHPO3, CHPO4, CHPO5, CHPO6  sont les variables \n       conservatives de la modele bifluide a une pression et six \n       equationes\n\n\ne) Evaluation des variables primitives (i.e. les masses volumiques\n   des melanges brule et non-brules,  les vitesses\n   des melanges  brule et non-brules, etc.) en\n   utilisant les variables conservatives\n   dans le cadre de la modelisation de la combustion en\n   discretisation volumes finis + Reactive Discrete Equation Method.\n\n   Ici le melange non-brule (en amont de la flamme) et\n   le melange brule (en aval de la flamme) sont\n   notes respectivement 1 et 2, et les variables\n   primitives et conservatives ont attribuees a chaque melange.\n \n   la fraction volumique \\alpha_1 est egale a 1 dans\n   le melange non-brule et 0 - dans le melange brule;\n   \\alpha_2 est egale a 0 dans le melange\n   non-brule, et 1 - dans le melange brule.\n\n\n        RCHD1 RCHD2 RCHV1 RCHV2 RCHP1 RCHP2 RCHT1 RCHT2 = \n                               'PRIM' 'DEM' TABPGAS\n        CHPAL1 CHPAL2 CHPARN1 CHPARN2 CHPAGN1 CHPAGN2 \n        CHPARET1 CHPARET2 CHPTGUE1 CHPTGUE2 EPS ;\n \n  \n  Arguments:\n ----------- \n\n      TABPGAS   : TABLE qui contient :\n                      * 'SPECIES'  - les noms des especes \n                      * 'CHEM_COEF' - les coefficients dans\n                           la reaction chimique consideree\n                      * 'MASSFRA' - les fraction massiques \n                             initiale et finale de la\n                             premiere espece dans 'SPECIES',\n                             les fractions massiques finales\n                             des autres especes ayants\n                             de coefficients positifs dans 'CHEM_COEF',\n                             les fractions massiques\n                             initiales des especes ayants de coefficients\n                             negatifs dans 'CHEM_COEF'                          \n                      * 'RUNIV' = la constante universelle des gaz parfaits , \n                      * ESPi = la table qui contient les proprietes des \n                               des especes EPSi\n                      * 'TMAX' la temperature maximale\n                               pour expansion de cv, i.e. \n                        pour T>'TMAX', cv(T)=cv('TMAX') \n                      * ESPI . 'A' \n                        CV_i = \\sum_{j=0,k} A_{i,j} T^j \n                      * ESPI . 'W' (Kg/mole)\n                      * ESPI . 'H0K' \n                        e_{0,i} = h_{0,i} = h_{T_0,i} - {R_i * T_0 +\n                                  {\\sum_{j=0,k} A_{i,j} / (j+1) T_0^(j+1)}}; \n\n            CHPAL1  : CHPOINT qui contient la fraction volumique alpha_1 \n                      de 1 (une composante, 'SCAL').\n\n            CHPAL2  : CHPOINT qui contient la fraction volumique alpha_2\n                      de 2 (une composante, 'SCAL').\n\n            CHPARN1 : CHPOINT qui contient la alpha_1 * densite  de 1\n                      (une composante, 'SCAL').\n\n            CHPARN2 : CHPOINT qui contient la alpha_2 * density  de 2\n                      (une composante, 'SCAL').\n\n            CHPAGN1 : CHPOINT qui contient la alpha_1 * momentum de 1\n                   (deux composantes, 'UX', 'UY').\n\n            CHPAGN2 : CHPOINT qui contient la alpha_2 * momentum de 2\n                   (deux composantes, 'UX', 'UY').\n\n            CHPARET1: CHPOINT qui contient la alpha_1 * energie_totale \n                      de 1 (une composante, 'SCAL') .\n\n            CHPARET2: CHPOINT qui contient la alpha_2 * energie_totale \n                      de 2 (une composante, 'SCAL').\n\n            CHPTGUE1: CHPOINT qui contient la valeur 'guess' \n                      pour la temperature de 1 (une composante, 'SCAL').\n             \n            CHPTGUE2: CHPOINT qui contient la valeur 'guess'\n                      pour la temperature de 2 (une composante, 'SCAL').\n\n\n            EPS     : FLOTTANT tel que si ALPHA_i < EPS, on assume \n                      que lespece i n'existe plus.\n\n    Results:\n   ---------\n            RCHD1   : CHPOINT qui contient la densite de 1\n   \n            RCHD2   : CHPOINT qui contient la densite de 2      \n\n            RCHV1   : CHPOINT qui contient la vitesse de 1\n\n            RCHV2   : CHPOINT qui contient la vitesse de 2\n      \n            RCHP1   : CHPOINT qui contient la pression de 1\n\n            RCHP2   : CHPOINT qui contient la pression de 2\n      \n            RCHT1   : CHPOINT qui contient la temperature\n                      de 1\n\n            RCHT2   : CHPOINT qui contient la temperature\n                      de 2\n\n\n f) \u00c9valuation des variables primitives (i.e. masse volumique,\n    vitesse, fractions massiques) en utilisant les variables \n    conservatives dans le cadre de la modelisation de la \n    propagation d'interfaces dans un milieu diphasique,\n    via la methode GFMP (\"the Ghost Fluid method for the poor\", \n    equation d'etat \"Stiffened gas\").\n\n    RCHPO0 RCHPO1 (RCHPO2)  = 'PRIM' 'GFMP' TAB1  CHPO0 CHPO1 CHPO2 \n       CHPO3 (CHPO4 CHPO5) ;\n\n    TAB1 : TABLE qui contient :\n         * les noms des especes qui apparaissent explicitement\n           dans les equations d'Euler en TAB1 . 'ESPEULE' \n           (LISTMOTS) ;\n         * le nom de l'espece qui n'y est pas \n           (TAB1 . 'ESPNEULE' (MOT)) ;\n         * les gamma et les pinf dans la zone phi < 0\n           TAB1 . 'MGAM' (LISTREEL) ;\n           TAB1 . 'MPIN' (LISTREEL) ;\n         * les gamma et les pinf dans la zone phi > 0\n           TAB1 . 'PGAM' (LISTREEL) ;\n           TAB1 . 'PPIN' (LISTREEL) ;\n           NB \n           La premiere valeur dans les objets LISTEEL\n           TAB1 . 'MGAM', ... est celle de l'espece\n           TAB1 . 'ESPNEULE'; les autres sont celles des\n           especes TAB1 . 'ESPEULE'.\n                   \n           CHPO0   : CHPOINT  contenant la fonction phi\n                     (une composante, 'SCAL').\n\n           CHPO1   : CHPOINT  contenant la masse volumique\n                     (une composante, 'SCAL').\n\n           CHPO2   : CHPOINT  contenant les debits\n                    (2 composantes en 2D, 'UX  ','UY  ');\n    \n           CHPO3   : CHPOINT  contenant l'energie totale per\n                     unite de volume (RHO Et),\n                     (une composante, 'SCAL').\n\n           CHPO4   : CHPOINT  contenant les masses volumiques\n                     des especes en (TAB1. 'ESPEULE')\n                     (composante dans TAB1. 'ESPEULE').\n\n           CHPO5   : CHPOINT  contenant les fractions volumiques\n                     des especes en (TAB1. 'ESPEULE')\n                     (composante dans TAB1. 'ESPEULE').\n\n\n           RCHPO0  : CHPOINT  contenant la vitesse ;\n\n           RCHPO1  : CHPOINT  contenant la pression du gaz ;\n     \n           RCHPO2  : CHPOINT  contenant les fractions massiques\n                     des especes en (TAB1. 'ESPEULE')\n                     (composante dans TAB1. 'ESPEULE').",
  },
  {
    name: "PRIN",
    url: "PRIN",
    documentation:
      "$$$$ PRIN     NOTICE  AM        17/03/17    21:15:01     9345           \n                                             DATE     17/03/17\n                                             \n    Operateur PRIN                           Voir aussi : SIGM RTEN\n    --------------                                        CALP    VMIS  \n                                                          TRES    CARA  \n                                                          @PLOTPRI  \n                                                          @B_TPO2D  \n       CHAM2 = PRIN CHAM1 MODL1 (CAR1) (MOT1) ;\n       \n\n    Objet :\n    _______\n\n    L'operateur PRIN calcule le champ de contraintes ou de deformations\nprincipales associe a un champ de contraintes ou de deformations.\nIl fournit egalement les cosinus directeurs\ndes directions principales par rapport au repere general.\n\n    Dans le cas des coques minces, on calcule a partir des contraintes \n ou des deformations generalisees les contraintes ou les deformations\n principales vraies.\n\n\n    Commentaire :\n    _____________\n\n    CHAM1   : champ de contraintes ou de deformations\n              (type MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n    MODL1   : objet modele (type MMODEL)\n\n    CAR1    : champ de caracteristiques materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES)\n\n    MOT1    : mot-cle (type MOT) qui indique pour les coques l'endroit\n              ou les contraintes ou les deformations sont calculees :\n\n              'SUPE' : en peau superieure\n              'MOYE' : sur la surface moyenne ( par defaut )\n              'INFE' : en peau inferieure\n\n              On peut aussi indiquer, en dimension 2, que l'on veut ordonner\n              les trois contraintes ou deformations principales.\n              Dans ce cas mettre : 'TRID'\n\n    CHAM2   : champ de contraintes ou de deformations principales\n              (type MCHAML, sous-type PRINCIPALE)\n\n    Remarque :   En dimension 3, les contraintes ou les deformations\n    __________   princiales sont ordonnees par valeur algebrique \n                 decroissante, la premiere etant la plus grande.\n\n                 En dimension 2, la troisieme valeur principale correspond\n                 systematiquement a la direction perpendiculaire au plan.\n                 Par consequent, seules les 2 premieres sont ordonnees, sauf si\n                 on a donne le mot-clef 'TRID'.\n\n                 On peut obtenir les noms de composantes associes aux \n                 contraintes ou deformations principales en utilisant\n                 l'operateur EXTR : EXTR CHAM2 COMP ...",
  },
  {
    name: "PRNS",
    url: "PRNS",
    documentation:
      "$$$$ PRNS     NOTICE  MB234859  17/10/02    21:15:20     9577           \n                                             DATE     17/10/02\n\n    Operateur PRNS                           Voir aussi : RESPOWNS\n    --------------  \n\n    EVOL1 = PRNS EVOL2 EVOL3 LREEL1 (LREEL2 FLOT1 MOT1 MOT2 COUL1)\n                            (   MOT3 (ENTI1) (FLOT2) (TPL)  )\n                            (   MOT4  DTIME    )           ;\n\n\n\n    objet :\n    _______\n\n    Calcul du spectre de reponse EVOL1 (comportant une unique courbe)\n    associe:\n\n    - au spectre de puissance EVOL2 (comportant une unique courbe) d'un\n      signal stationnaire \"virtuel\" de dure TE.\n\n    - et a N courbes de modulation EVOL3 fonction du temps (comportant N\n      courbes) correspondantes aux bandes de frequence indiquees dans\n      LREEL1 [ la bande de frequence de la i-eme fonction EVOL3 est\n      donnee par le i-eme (frequence inferieure) et le i+1-eme\n      (frequence superieure) element de LREEL1 ].\n\n    Les fonctions de modulation doivent toute demarrer au meme instant\n    TI et s'achever au meme instant TF. La duree du signal TE est\n    evidemment donnee par TF-TI. La distribution des maxima suit la loi\n    de Newmark/Gumble 1.\n\n    options :\n    _________\n\n    - Le calcul du spectre de reponse s'effectue sur une grille\n      de periode de 75 points, compris entre 0.04s (25 Hz) et TE et\n      uniformement distribue dans un espace logarithmique. Une grille\n      alternative peut etre donnee en option dans LREEL2.\n\n    - Le spectre de reponse est calcule pour un amortissement standard\n      de 0,05. L'option FLOT1 permet de specifier un amortissement\n      different.\n\n    - MOT1 represente la grandeur physique de reponse: 'ACCE'(leration),\n      'VITE'(sse) ou 'DEPL'(acement relatif). Le defaut est 'ACCE'.\n\n    - MOT2 represente la grandeur en abscisse de EVOL1:\n      'PERI'(ode) ou 'FREQ'(uence). Le defaut est 'PERI'.\n\n    - COUL1 represente la couleur de l'objet cree.\n      Par defaut c'est la couleur de EVOL2.\n\n    - La partie non-stationnaire du calcul (fonction de transfert des\n      oscillateurs) se refere a K processus stationnaires. L'intervalle\n      de temps defini par EVOL3 est donc divise en K parties egales et\n      integration numerique temporelle sur chaque intervalle est\n      realisee sur M instants equidistants. La modulation instationnaire\n      peut etre non nulle au dela de TE: l'integration peut etre\n      completee sur une duree supplementaire TPL. De plus, des processus\n      iteratifs (e.g.  recherche de zero a une precision PREC) sont\n      eventuellement mis en oeuvre pour determiner la distribution. MOT3\n      permet de specifier K et M d'une part et TPLU et PREC d'autre part.\n      Si MOT3 vaut 'NBPR'(ocessus), ENTI1 specifie K. Si MOT3 vaut\n      'NBIN'(tegration) alors ENTI1 specifie M. Si MOT3 vaut 'TPLU'(s),\n      alors FLOT2 specifie TPL. Si MOT3 vaut 'PREC'(ision), alors FLOT2\n      specifie PREC. Si MOT3 vaut 'NBDE'(faut), K correspond a des\n      processus d'environ 2 secondes, M vaut 10, TPL vaut 20 secondes\n      et PREC vaut 1.E-3. Le defaut pour MOT3 est 'NBDE'.\n\n    - La partie non-stationnaire du calcul peut se referrer a une\n      modelisation en ondelette si MOT4 vaut 'ONDE'. Dans ce cas EVOL2\n      contient autant de point que de bande de frequence et EVOL3 la\n      modelisation des coefficient en ondelette: la premiere courbe est\n      le residu, et les suivantes sont relatives a chaque niveau de\n      decomposition (des basses vers les hautes frequences). DTIME\n      indique la periode echantillonnage associe au residu. Dans ce cas\n      M et K ne peuvent plus etre specifies.",
  },
  {
    name: "PROB",
    url: "PROB",
    documentation:
      "$$$$ PROB     NOTICE  CHAT      11/09/12    21:17:45     7124           \n                                             DATE     11/09/12\n\n  Operateur PROB                           Voir aussi :\n    --------------  \n    FLOT6 =  PROB  FLOT1 FLOT2 FLOT3 FLOT4 FLOT5;\n\n\n    Objet :\n    _______\n\n    L'operateur PROB calcule la probabilite que la variable \n    aleatoire definie par sa moyenne, son ecart-type, ses \n    coefficients de symetrie et d'aplatissement, soit inferieure\n    a une certaine valeur.\n\n    Commentaire :\n    _____________\n\n    FLOT1 = moyenne de la variable aleatoire (type FLOTTANT)\n\n    FLOT2 = ecart-type de la variable aleatoire (type FLOTTANT)\n\n    FLOT3 = coefficient de symetrie de la v.a. (type FLOTTANT)\n\n    FLOT4 = coefficient d'aplatissement de la v.a. (type FLOTTANT)\n\n    FLOT5 = borne superieur de l'integrale (type FLOTTANT)\n\n    FLOT6 = probabilite (type FLOTTANT)",
  },
  {
    name: "PROBABRS",
    url: "PROBABRS",
    documentation:
      "$$$$ PROBABRS NOTICE  CHAT      11/09/12    21:17:44     7124           \n                                             DATE     11/09/12\n\n  Procedure PROBABRS                       Voir aussi :\n    ------------------  \n    FLOT9 = PROBABRS FLOT1 FLOT2 FLOT3 FLOT4 \n                     FLOT5 FLOT6 FLOT7 FLOT8 \n\n\n    Objet :\n    _______\n\n    Cette procedure permet le calcul de la probabilite de defaillance \n    idealisee :\n             Prob(R<S)\n    Probabilite que la resistance    (R) soit inferieure a\n                    la sollicitation (S)\n\n    (la resistance et la sollicitation sont definies par leur\n     quatre premiers moments statistiques)\n\n\n    Commentaire :\n    _____________\n\n    FLOT1 : Moyenne de la resistance R (type REEL)\n\n    FLOT2 : Ecart-type de la resistance R (type REEL)\n\n    FLOT3 : Coefficient de symetrie de la resistance R (type REEL)\n\n    FLOT4 : Coefficient d'aplatissement de la resistance R (type REEL)\n\n    FLOT5 : Moyenne de la sollicitation S (type REEL)\n\n    FLOT6 : Ecart-type de la sollicitation S (type REEL)\n\n    FLOT7 : Coefficient de symetrie de la sollicitation S (type REEL)\n\n    FLOT8 : Coefficient d'aplatissement de la sollicitation S (type REEL)\n\n    FLOT9 : Probabilite que R < S (type REEL)   ",
  },
  {
    name: "PROBDENS",
    url: "PROBDENS",
    documentation:
      "$$$$ PROBDENS NOTICE  CHAT      11/09/12    21:17:44     7124           \n                                             DATE     11/09/12\n\n  Procedure PROBDENS                       Voir aussi :\n    ------------------  \n    EVOL1 EVOL2 = PROBDENS FLOT1 FLOT2 FLOT3 FLOT4\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule les evolutions de la densite de \n    probabilite et de la fonction de repartition entre \n        mu-6*sigma et mu+6*sigma.\n\n    Commentaire :\n    _____________\n\n    FLOT1 = moyenne (type FLOTTANT)\n\n    FLOT2 = ecart-type (type FLOTTANT)\n\n    FLOT3 = coefficient de symetrie (type FLOTTANT)\n\n    FLOT4 = coefficient d'aplatissement (type FLOTTANT)\n\n    EVOL1 = densite de probabilite (type EVOLUTION)\n\n    EVOL2 = fonction de repartition (type EVOLUTION)",
  },
  {
    name: "PROCHEXT",
    url: "PROCHEXT",
    documentation:
      "$$$$ PROCHEXT NOTICE  MAGN      17/12/11    21:15:01     9661           \n                                             DATE     17/12/11\n                                                                                \n    Procedure PROCHEXT                                   Voir EXECRXT\n    ------------------\n\n    PROCHEXT TPS RXT 'KAS1' HZ HAIR TAIR HMER TMER      ;\n\n    ou\n\n    PROCHEXT TPS RXT 'KAS2' HZ TAIR LAIR TMER LMER      ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Cette procedure est destin\u00e9e \u00e0 \u00eatre appel\u00e9e par la proc\u00e9dure personnelle\n  de EXECRXT. PROCHEXT permet de mod\u00e9liser l'\u00e9change thermique de la paroi\n  externe de l'enceinte avec un milieu ext\u00e9rieur. L'enceinte est suppos\u00e9e\n  semi-immerg\u00e9e. On peut donc d\u00e9finir deux modes d'\u00e9change l'un avec l'eau\n  (partie inf\u00e9rieure) et l'autre avec l'atmosph\u00e8re (partie sup\u00e9rieure).\n\n  Dans le cas 'KAS1' On se donne la hauteur d'eau et deux couples,\n  (coefficient d'\u00e9change et temp\u00e9rature ext\u00e9rieure). Toutes ces grandeurs\n  d\u00e9pendent du temps (ce sont des objets EVOLUTION).\n\n  Dans le cas 'KAS2' On se donne toujours la hauteur d'eau et deux \n  temp\u00e9ratures ext\u00e9rieures, mais les coefficients d'\u00e9change sont calcul\u00e9s\n  \u00e0 l'aide d'une corr\u00e9lation de couche limite de convection naturelle\n  pour une paroi plane verticale, respectivement pour l'eau et l'air\n  (Nusselt = 0.113 Grashof**0.33). Dans ce cas seul la hauteur d'eau et\n  les temp\u00e9ratures ext\u00e9rieures d\u00e9pendent du temps.\n\n  On renvoie aux jeux de donn\u00e9es: pressuhx1.dgibi et pressuhx2.dgibi\n\n\n    Commentaires\n    ____________\n\n   TPS   'FLOTTANT': est le temps (en secondes). Cette information est\n                     transmise par la proc\u00e9dure personnelle si l'appel\n                     se fait dans dans la proc\u00e9dure personnelle.\n   RXT   'TABLE'   : est la table envoy\u00e9 \u00e0 EXECRXT. Cette information\n                     est transmise par la proc\u00e9dure personnelle.\n  'KAS1' 'MOT'     : Indique que l'on donne les coefficients d'\u00e9change\n  'KAS2' 'MOT'     : Indique que l'on calcule les coefficients d'\u00e9change\n                     \u00e0 l'aide d'une corr\u00e9lation de convection naturelle\n   HZ    'EVOLUTION':  Hauteur  de la partie immerg\u00e9e \u00e0 partir du point le\n                     plus bas de l'enceinte. Elle peut d\u00e9pendre du temps\n   HAIR  'EVOLUTION': Coefficient d'\u00e9change en W/m**2/\u00b0K pour la partie\n                      \u00e9merg\u00e9e. Il peut d\u00e9pendre du temps\n   HMER  'EVOLUTION': Coefficient d'\u00e9change en W/m**2/\u00b0K pour la partie\n                      immerg\u00e9e. Il peut d\u00e9pendre du temps\n   TAIR  'EVOLUTION': Temp\u00e9rature de l'air ext\u00e9rieur en \u00b0C.\n                      Elle peut d\u00e9pendre du temps\n   TMER  'EVOLUTION': Temp\u00e9rature de l'eau ext\u00e9rieure en \u00b0C.\n                      Elle peut d\u00e9pendre du temps\n   LAIR  'FLOTTANT' : Echelle de longueur (en m\u00e8tre) pour la corr\u00e9lation\n                      de convection naturelle en air.\n   LMER  'FLOTTANT' : Echelle de longueur (en m\u00e8tre) pour la corr\u00e9lation\n                      de convection naturelle en eau.",
  },
  {
    name: "PRODT",
    url: "PRODT",
    documentation:
      "$$$$ PRODT    NOTICE  CHAT      11/09/12    21:17:45     7124           \n                                             DATE     11/09/12\n\nProcedure  PRODT                                 Voir aussi :\n\n   Syntaxe :\n   _________\n\n           P = PRODT $MD (| 'TODEF' |) UN (GB TN) ;\n                          | 'TOROT' |\n                          | 'COMPL' |\n                          | 'MIXTE' |\n\n\n\n\n       P      Mesure locale du gradient de vitesse\n              CHPOINT (SCAL SOMMET)\n\n       $MD    Modele NAVIER_STOKES\n              MMODEL\n\n       UN     Champ de vitesse\n              CHPOINT (VECT SOMMET)\n\n       GB     Vecteur de flottabilite g*beta (vecteur accleration de\n              la pesanteur * coefficient de dilatation thermique)\n              POINT\n\n       TN     Champ de temperature\n              CHPOINT (SCAL SOMMET)\n\n\n   Objet :\n   _______\n\n   Cette procedure renvoie une mesure du tenseur gradient des vitesses,\n   grandeur qui intervient notamment dans le calcul de la viscosite\n   turbulente de modeles RANS ou LES (k-Epsilon, Spalart-Allmaras,\n   Smagorinsky...).\n\n\n\n   Commentaires :\n   ______________\n\n   Pour modeliser la production d'energie turbulente, de nombreux\n   auteurs ont recours a une formulation de type C * Nut * P, ou :\n\n      - C est un facteur adimensionnel, souvent constant voire unitaire\n      - Nut est la viscosite turbulente\n      - P est une mesure locale du tenseur gradient de vitesse\n\n   LA PROC\u00c9DURE PRODT CALCULE UNIQUEMENT LE TERME P, brut, laissant\n   aux routines dediees aux differents modeles le soin de calculer la\n   production reelle.\n\n   /!\\ P est homogene a l'inverse d'un temps au carre\n       => IL PEUT \u00caTRE N\u00c9C\u00c9SSAIRE D'EN PRENDRE LA RACINE!\n\n\n   Differentes mesures du tenseur gradient des vitesses sont proposees:\n\n      - 'TODEF': tenseur taux de deformation (PAR D\u00c9FAUT)\n\n                   P = |S|\u00b2 = 2*Sij*Sij avec Sij = 0.5*(Uij+Uji)\n                                             Uij = dUi/dxj\n\n\n      - 'TOROT': tenseur taux de rotation\n\n                   P = |R|\u00b2 = 2*Rij*Rij avec Rij = 0.5*(Uij-Uji)\n                                             Uij = dUi/dxj\n\n\n      - 'COMPL': tenseur des vitesses complet\n\n                   P = |U|\u00b2 = Uij*Uij   avec Uij = dUi/dxj\n\n\n      - 'MIXTE': combinaison de la deformation et de la vorticite\n                 (Dacles-Mariani et al., AIAA Journal 33(9), 1995)\n\n                   P = { |R| + Cprod*Min(0,|S|-|R|) }\u00b2\n\n                                        avec Cprod=2\n\n\n\n   Si les donnees GB et TN sont fournies, la production ou destruction\n   d'energie turbulente d'origine thermique est prise en compte:\n\n                   G = (GB/sgt) * Grad(TN)\n\n                           avec sgt = 0.7 (Prandtl turbulent)\n\n   La modelisation adoptee ici est inspiree par les travaux de W.Rodi.\n   Seule les contributions stabilisatrices des forces de flottabilite\n   sont considerees:\n\n    - si Grad(T)*GB est negatif (stratification stable), la production\n      totale est amoidrie comme suit:\n\n                   (P + G)(1 + c3.Rf)\n\n                          avec Rf = -G/(P+G)  (Nombre de Richardson)\n                               c3 = 0.8\n\n    - sinon, G=Rf=0 de sorte qu'une stratification instable ne modifie\n      pas la production.",
  },
  {
    name: "PROG",
    url: "PROG",
    documentation:
      "$$$$ PROG     NOTICE  PASCAL    20/11/04    21:20:29     10764          \n                                             DATE     20/11/04\n\n    Operateur PROG                           Voir aussi : LECT MOTS SUIT\n    --------------                                        EVOL  \n    LREEL1 = PROG 1. 2. 3. 4. 5. ;\n\n\n    Objet :\n    _______\n\n    L'operateur PROG fabrique un objet LREEL1 de type LISTREEL a partir\nd'un nombre arbitraire d'objets de type ENTIER ou FLOTTANT.\n\n    La sous-directive PAS permet d'engendrer des nombres regulierement\nespaces, et la sous directive * permet d'engendrer plusieurs fois le\nmeme nombre. Par ailleurs des options correspondant a certaines\nfonctions sont disponibles.\n\n    Commentaire :\n    _____________\n\n\n    ------------------------\n    |  Sous-directive PAS  |\n    ------------------------\n\n    LREEL1 = PROG 1. PAS 2. 5. ; equivaut a : LREEL1 = PROG 1. 3. 5. ;\n\n    Si le PAS ne divise pas exactement l'intervalle, est retenue la\nvaleur la plus proche le permettant.\n    Si le PAS est incoherent, le resultat contiendra la valeur\ninitiale et la valeur finale.\n\n\n    Autre possibilite :\n    -------------------\n\n    LREEL1 = PROG 1. PAS 1. GEOM 2. 8. ;\n\n    equivaut a :\n\n    LREEL1 = PROG 1. 2. 4. 8. ;\n\n    Dans ce cas, le pas est pondere par la suite geometrique de raison 2.\n    Si le PAS ne divise pas exactement l'intervalle, est retenue la\nvaleur par exces la plus proche le permettant.\n    Si le PAS est incoherent, le resultat contiendra la valeur\n initiale et la valeur finale.\n\n        \n        Autre possibilite :\n    -------------------\n\n    LREEL1 = PROG 1. PAS 2. NPAS 2 ; equivaut a : LREEL1 = PROG 1. 3. 5. ;\n\n    NPAS doit etre positif ou nul.\n\n\n        Autre possibilite :\n    -------------------\n\n    LREEL1 = PROG 1. PAS 1. GEOM 2. NPAS 3 ;\n\n    equivaut a :\n        \n    LREEL1 = PROG 1. 2. 4. 8. ;\n\n    Dans ce cas, le pas est pondere par la suite geometrique de raison 2.\n\n\n    -----------------------\n    |  Sous-directive  *  |\n    -----------------------\n\n    LREEL1 = PROG 4 * 3. ; equivaut a : LREEL1 = PROG 3. 3. 3. 3. ;\n\n    On peut utiliser des pas negatifs et utiliser ensemble les sous-\ndirectives.\n\n    LREEL1 = PROG 1. 2.  PAS -2. -6. 2.  3 * 9. PAS 2.  3. * 13. ;\nou\n    LREEL1 = PROG 1. 2.  PAS -2. NPAS 4  2.  3 * 9. PAS 2.  3. * 13. ;\nequivaut a\n    LREEL1 = PROG 1. 2. 0. -2. -4. -6. 2.  9. 9. 9.  11. 13. 13. 13.;\n\n\n\n    ------------------\n    |  Option  SINU  |\n    ------------------\n\n    LREEL1 = PROG 'SINU' FLOT1 ('PHAS' FLOT2)  ('AMPL' FLOT3)  ...\n\n                ...         | PROG 1. 2. ..X.. 4. 5.  |    ;\n                            | LREEL2                  |\n\n    L'option SINU de l'operateur PROG permet d'engendrer une liste de\nsinus de reels a partir :\n\n       - d'un nombre arbitraire d'objets de type ENTIER ou FLOTTANT\n       - d'un objet de type LISTREEL\n\n    A X on associe ( FLOT3 * SIN ( 360*FLOT1*X + FLOT2 ) )\n\n\n    LREEL2  : objet de type LISTREEL\n\n    FLOT1   : frequence en Hz (type FLOTTANT positif)\n\n   'PHAS'   : mot-cle suivi de :\n    FLOT2   : valeur de la phase en degres (type FLOTTANT),\n              egale a 0. par defaut.\n\n   'AMPL'   : mot-cle suivi de :\n    FLOT3   : valeur de l'amplitude du sinus (type FLOTTANT\n              positif), egale a 1. par defaut.\n\n    Remarque :\n    __________\n\n    Il est naturellement possible d'utiliser les directives PAS et *\npour cette option .\n\n\n    ---------------------------------\n    |  Options  LINE , EXPO , LOGA  |\n    ---------------------------------\n\n                  |'LINE'|\n    LREEL1 = PROG |'EXPO'| ('A' A1) ('B' B1) | PROG 1. 2. ..X.. 4. 5. |\n                  |'LOGA'|                   | LREEL2                 |\n\n    Les options 'LINE', 'EXPO' et 'LOGA' calculent les valeurs des\nfonctions :\n\n       A1*X+B1        pour l'option 'LINE'\n       EXP(A1*X+B1)   pour l'option 'EXPO'\n       LOG(A1*X+B1)   pour l'option 'LOGA'\n\npour les valeurs de la variable X contenues dans l'objet LREEL2 de type\nLISTREEL ou definies apres le mot cle 'PROG'.\n\n    LREEL2  : objet de type LISTREEL\n\n   'A'      : mot-cle suivi de :\n    A1      : valeur de type FLOTTANT, egale a 1. par defaut.\n\n   'B'      : mot-cle suivi de :\n    B1      : valeur de type FLOTTANT, egale a 0. par defaut.",
  },
  {
    name: "PROI",
    url: "PROI",
    documentation:
      "$$$$ PROI     NOTICE  GOUNAND   19/02/19    21:15:05     10114          \n                                             DATE     19/02/19\n\n  Operateur PROI                           Voir aussi :\n    --------------  \n   OBJ1 = PROI | GEO2   CHEL1               | (FLOT1)            | ; (1)\n               | MOD2   (CARA) CHEL1  (MOT2)|                    |   (2)\n               | MOD2   (CARA) CHEL1  'MINI' (ENT1)              |   (3)\n               | 'POLY' GEO1 GEO2 CHPO1 ENT2 MOT1 ('POID' X1 X2) |   (4)\n\n\n\n    Objet:\n    ______\n\n    L'operateur PROI effectue la projection des composants d'un MCHAML\n    defini aux noeuds d'une geometrie donnee soit sur une nouvelle\n    geometrie GEO2, soit sur les noeuds (par defaut) ou les points\n    d'int\u00e9gration d'un modele MOD2 (si MOT2 est present et different de\n    'NOEUDS').\n\n    Pour les syntaxes 1 et 2, les nouvelles valeurs sont obtenues par\n    interpolation avec les fonctions de forme a partir des valeurs\n    initiales et definissent un champ par points sur la nouvelle\n    geometrie. Ce champ est de nature diffuse si le champ resultat est\n    un champ par point.\n\n\n    Commentaire :\n    _____________\n\n    OBJ1  :  Champ apres projection\n             type CHPOINT  pour les syntaxes (1) et (4)\n             type MCHAML   pour les syntaxes (2) et (3)\n\n    GEO2  :  Nouvelle geometrie (type MAILLAGE) sur laquelle on veut\n             projeter le champ CHEL1\n\n    MOD2  :  Modele (type MMODEL) contenant les nouveaux points supports\n             (noeuds ou points d'int\u00e9gration) sur lesquels on veut\n             projeter les valeurs du champ CHEL1\n\n    CARA  :  Caracteristiques associees au modele MOD2 (type MCHAML,\n             sous-type CARACTERISTIQUES) pour les elements coque\n             (attention : on rappelle que ce champ doit etre donne avant\n             CHEL1 si CHEL1 est \u00e9galement de sous-type CARACTERISTIQUES)\n\n    CHEL1  : Champ par elements (type MCHAML) que l'on veut projeter. Il\n             doit \u00eatre defini aux NOEUDS du massif\n\n    MOT2   : Mot precisant la localisation des point ou sera defini le\n             champ. Par defaut aux 'NOEUDS' ou aux points d'integration\n             au choix 'GRAVITE', 'RIGIDITE', 'MASSE' ou 'STRESSES'\n\n    FLOT1  : Crit\u00e8re de rattrapage pour les points de GEO2 ou MOD2\n             situ\u00e9s l\u00e9g\u00e8rement en-dehors du domaine de CHEL1\n             Valeur par d\u00e9faut : 1.e-5\n\n    'MINI' : Si ce mot 'MINI' est present, l'evaluation est faite\n             pour chaque composante par minimisation de l integrale\n             (Ue-Us)**2 sur chaque element du support de sortie\n             Ue : valeur de la composante au point courant dans\n             le champ origine\n             Us : valeur de la composante au point courant dans\n             le champ resultat\n\n    ENT1   : Si le mot-clef 'MINI' est present, on peut donner le nombre\n             de points d'integration utilises par direction pour evaluer\n             l'integrale (3 par defaut, i.e. 9 points pour une surface\n             et 27 pour un volume) en pr\u00e9cisant l'entier ENT1\n\n    'POLY' : Si le mot-clef 'POLY' est present, l'operateur PROI\n             effectue la projection sur GEO2 des composantes\n             d'un CHPOINT CHPO1 defini sur GEO1. Il calcule aussi les\n             derivees premieres et secondes du champ par rapport aux\n             variables X et Y. Cette option marche en axisymmetrique et\n             en dimension 2. (Voir remarque b pour plus de details)\n\n    ENT2   : Si le mot-clef 'POLY' est present, l'entier ENT2 precise le\n             type de symetrie :\n                  1 : pas de symetrie\n                  2 : symetrie par rapport a l'axe X\n                      etc.....\n\n    CHPO1  : Champ par point (type CHPOINT) a projeter\n\n    GEO1   : Geometrie associee a CHPO1\n\n    MOT1   : Mot 'PLAN' ou 'AXIS'\n\n    'POID' : Mot-clef facultatif introduisant la donnee de deux poids\n             pour l'interpolation des fonctions. Ils valent 1 par defaut\n        X1 : Poids des premiers voisins\n        X2 : Poids des secondes voisins\n\n\n\n    Remarques :\n    __________\n\n    a) Le champ par element CHEL1 doit obligatoirement etre supporte par\n       des element massifs\n\n    b) Avec l'option POLY :\n       L'operateur effectue la projection sur GEO2 des composantes d'un\n       CHPOINT CHPO1 defini sur GEO1. Il calcule aussi les derivees\n       premieres et secondes du champ par rapport aux variables X et Y.\n       Cette option marche en axisymmetrique et en dimension 2.\n\n       La methode POLY consiste pour chaque point de GEO2 a selectionner\n       les premiers voisins et les seconds puis d'ajuster au mieux des\n       fonctions polynomiales connaissant les valeurs aux points voisins\n       et leur poids.\n\n       Les fonctions polynomiales sont obtenues a partir du\n       developpement en serie entiere des fonctions complexes.\n       L'ajustement est fait par la methode des moindres carres (on\n       attribue des poids aux premiers et aux seconds voisins).\n\n       Les derivees sont obtenues en derivant les fonctions polynomiales.\n\n       Le champ resultat a plusieurs composantes :\n            A:   champ interpole.\n            BX:  derivee suivant X (R en axisymmetrique).\n            BY:  derivee suivant Y (Z en axisymmetrique).\n            BXY: derivee seconde suivant X et Y (R et Z en axisymmetrie)\n            BXX: derivee seconde suivant X.\n            BYY: derivee seconde suivant Y.\n\n       La methode POLY n'est donc pas l'interpolation naturelle utilisee\n       habituellement en elements finis i.e. via les fonctions de forme.\n       Cet operateur doit donc etre utilise avec precaution. Si un point\n       est commun aux maillages GEO1 et GEO2, la valeur associee a ce\n       point dans le CHPOINT resultat OBJ1 sera differente, en general,\n       de la valeur associee a ce point dans le CHPOINT initial CHPO1 !!",
  },
  {
    name: "PROJ",
    url: "PROJ",
    documentation:
      "$$$$ PROJ     NOTICE  CHAT      11/09/12    21:17:46     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur PROJETER                       Voir aussi :\n    ------------------  \n   --------  \n   --------\n\n   GEO1 = GEO2 PROJ |('CYLI') VEC1  | |'PLAN' POIN1  POIN2  POIN3;\n                    | 'CONI'  SOMM1 | |'SPHE' CENTR1 POIN1;\n                                      |'CYLI' CENTR1 CENTR2 POIN1;\n                                      |'CONI' SOMM2  AXEI1  POIN1;\n                                      |'TORI' CENTR1 AXEI1  CENTR2 POIN1\n                                      |'DROI' POIN1  POIN2;\n                                      |'CERC' CENTR1 POIN1;\n\n\n    Objet :\n    _______\n\n    L'operateur PROJ construit un objet GEO1 resultant de la projection\nd'un objet GEO2 suivant un vecteur (projection CYLIndrique) ou de la\nprojection radiale de sommet donne (projection CONIque).\n\n    Commentaire :\n    _____________\n\n    GEO2   : geometrie a projeter (type MAILLAGE)\n\n    'CYLI' : mot-cle indiquant une projection cylindrique suivi de :\n    VEC1   : vecteur (type POINT) utilise dans la projection cylindrique\n\n    'CONI' : mot-cle indiquant une projection conique suivi de :\n   SOMM1   : centre de la projection conique (type POINT)\n\n\n    La projection se fait sur differents supports geometriques suivant l\nmot-cle :\n\n   'PLAN' : sur un plan definit par trois points POIN1, POIN2 et POIN3\n            (type POINT)\n\n   'SPHE' : sur une sphere de centre CENTR1 (type POINT) passant par le\n            point POIN1 (type POINT)\n\n   'CYLI' : sur un cylindre d'axe passant par CENTR1 et CENTR2 (type\n            POINT) et contenant le point POINT1 (type POINT)\n\n   'CONI' : sur le cone de sommet SOMM2 (type POINT), dont l'axe passe\n            par le point AXEI1 (type POINT) et contenant le point POIN1\n            (type POINT)\n\n   'TORI' : sur le tore de centre CENTR1 (type POINT), dont l'axe passe\n            par le point AXEI1(type POINT), dont un centre de petit\n            cercle est CENTR2 (type POINT) et passant par le point POIN1\n            (type POINT)\n\n   'DROI' : sur une droite (en 2D) passant par les points POIN1 et POIN2\n            (type POINT)\n\n   'CERC' : sur un cercle (en 2D) de centre CENTR1 (type POINT) passant\n            par le point POIN1 (type POINT)\n\n\n\n\n    ----------\n   | 2EME CAS |\n    ----------\n      \n      GEO1 = GEO2 PROJ 'CYLI' DIR GEO3\n                       'CONI' P1  GEO3\n\n\n    Objet :\n    _______\n\n    L'operateur PROJ effectue la projection cylindrique d'un objet\n    GEO2 sur un objet GEO3 suivant la direction DIR, ou la \n    projection conique de sommet P1 d'un objet GEO2 sur un objet GEO3.\n    L'objet resultant de l'une ou l'autre des projections est GEO3.\n\n    Commentaires :\n    _____________\n\n     GEO1 : objet (type maillage) resultant de la projection.  \n              \n     GEO2 : objet (type maillage) que l'on projette.\n\n     CYLI : mot cle designant la projection cylindrique.\n\n     CONI : mot cle designant la projection conique.\n\n     DIR : direction de la projection cylindrique (type point).\n \n     P1 : sommet de la projection conique (type point).\n \n     GEO3 : objet (type maillage) sur lequel on projette.",
  },
  {
    name: "PROJGRIL",
    url: "PROJGRIL",
    documentation:
      "$$$$ PROJGRIL NOTICE  FD218221  15/10/23    21:15:01     8698           \n                                             DATE     15/10/23\n\n    Procedure PROJGRIL                          Voir aussi : NUAG, IPOL\n    ------------------  \n    MAIL1 CHP1 = PROJGRIL NUAG1 (LISMO1 si n > 2) (LISRE1 si n > 2) ;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure construit la projection d'un NUAGE, representant une\n    fonction de n variables definie sur une grille de points, dans un\n    plan de 2 composantes de la grille.\n    Le plan de la projection se definit en fixant n-2 composantes de la\n    grille (voir exemples ci dessous). La projection se fait alors dans\n    les deux dimensions non fixees.\n    Cette procedure peut etre utilie afin de visualiser les valeurs d'un\n    tel nuage (pour verification par exemple).\n\n\n    Commentaire :\n    _____________\n\n    NUAG1  : NUAGE representant la fonction de n variables definie sur\n             une grille de points (voir notice de IPOL option 'GRILL').\n\n    LISMO1 : LISTMOTS contennant les noms des composantes fixees de\n             NUAG1 (seulement si n > 2, le nombre de composantes fixees\n             doit etre egal a n-2).\n\n    LISRE1 : LISTREEL contennant les valeurs des composantes fixees\n             (seulement si n > 2, de meme taille que LISMO1).\n\n\n    MAIL1  : MAILLAGE d'elements QUA4 ou chaque noeud est un point de la\n             grille \"coupee\" par la projection. Les noeuds de MAIL1 sont\n             positionnes selon les deux composantes non fixees :\n             - la 1ere coordonnee des noeuds correspond a la 1ere\n               composante du NUAGE non fixee ;\n             - la 2eme coordonnee des noeuds correspond a la 2eme\n               composante du NUAGE non fixee.\n\n    CHP1   : CHPOINT des valeurs de la fonction aux noeuds de MAIL1.\n\n\n    Remarques :\n    ___________\n\n    La construction d'un NUAGE representant une grille est decrite dans\n    la notice de IPOL option 'GRILL'.\n    Dans le cas d'un plan ne passant par les points de la grille, une\n    interpolation multi-lineaire est effectuee.\n\n\n    Exemples :\n    __________\n\n    1) Grille de dimension 2. Dans ce cas, il n'y a pas de projection a\n       effectuer, on ne fixe pas de composantes, le nuage est represente\n       dans son integralite.\n\n          NUA1 = NUAG 'COMP' 'X' (PROG  0. 1. 2.)\n                      'COMP' 'Y' (PROG -1. 1.)\n                      'COMP' 'F' (PROG 4. 8. 15.   16. 23. 42.) ;\n          MAIL1 CHP1 = PROJGRIL NUA1 ;\n          TRAC CHP1 MAIL1 ;\n\n        Ce qui donnera le champ suivant :\n\n       Y\n       ^\n       |\n       |        16.       23.       42.\n    1  -       O---------O---------O\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |4.       |8.       |15.\n   -1  -       O---------O---------O\n       |\n       |\n    0  --------|---------|---------|---------> X\n               0         1         2\n\n\n\n    2) Grille de dimension 3. Dans ce cas, il faut fixer une composante\n       pour faire la projection (ici on projette dans le plan Y=0.)\n\n          NUA1 = NUAG 'COMP' 'X' (PROG  0. 1. 2.)\n                      'COMP' 'Y' (PROG -1. 1.)\n                      'COMP' 'Z' (PROG  1. 3.)\n                      'COMP' 'F' (PROG 4. 8.  15.   16. 23. 42.\n                                       8. 42. 23.   15.  4. 16.) ;\n          MAIL1 CHP1 = PROJGRIL NUA1 (MOTS 'Y') (PROG 0.) ;\n          TRAC CHP1 MAIL1 ;\n\n        Ce qui donnera le champ suivant :\n\n       Z\n       ^\n       |\n       |        11.5      23.       19.5\n    3  -       O---------O---------O\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |         |         |\n       |       |10.      |15.5     |28.5\n    1  -       O---------O---------O\n       |\n       |\n    0  --------|---------|---------|---------> X\n               0         1         2",
  },
  {
    name: "PROL",
    url: "PROL",
    documentation:
      "$$$$ PROL     NOTICE  PASCAL    21/03/09    21:15:07     10917          \n                                             DATE     21/03/09\n\n    Operateur PROL                           Voir aussi : IPOL, VARI\n    --------------  \n    EVOL2  =  PROL | (BORN) |  EVOL1  FLOT1  (FLOT2)  ;\n                   |  LINE  |\n\n    Objet :\n    -------\n\n        L'operateur PROL prolonge une fonction definie par un objet\n    evolution (EVOL1) en un (ou deux) point(s) des abscisses situe(s)\n    hors de son intervalle de definition (liste des abscisses).\n\n        Le prolongement est effectue en prenant la valeur a la borne\n    de l'intervalle de definition la plus proche (option BORN) ou en\n    extrapolant lineairement la fonction (option LINE).\n\n\n    Commentaire :\n    -------------\n\n    EVOL1  : objet EVOLUTION, fonction que l'on souhaite prolonger\n             hors de son domaine de definition.\n\n    FLOT1  : objet FLOTTANT, valeur des abscisses a laquelle on\n             souhaite prolonger la fonction.\n\n    FLOT2  : objet FLOTTANT, valeur des abscisses a laquelle on\n             souhaite prolonger la fonction.\n\n    EVOL2  : objet EVOLUTION, prolongement de EVOL1 en FLOT1\n             (et FLOT2).\n\n\n    Remarques :\n    -----------\n        Si FLOT1 (ou FLOT2) est dans l'intervalle de definition de\n    EVOL1, alors il est ignore.",
  },
  {
    name: "PROP",
    url: "PROP",
    documentation:
      "$$$$ PROP     NOTICE  CB215821  19/10/08    21:15:16     10329          \n                                             DATE     19/10/08\n\n    Operateur PROP                           Voir aussi : PMAT PHAJ EXCP\n    --------------                                        SOUR RESO  \n      PROP1 = 'PROP' MOD1 PROP0 QLINT CHP1 ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur 'PROP' calcule le champ par element de proportion de\nphase pour une formulation de type 'CHANGEMENT_PHASE'.\nCet operateur est automatiquement appele dans la procedure TRANSNON.\n\n\n      Commentaire :\n      _____________\n\n      MOD1  : objet de type MMODEL contenant une formulation de type\n             'CHANGEMENT_PHASE'.\n\n      PROP0 : objet de type MCHAML contenant les proportions de phases\n              initiales.\n\n      QLINT : objet de type MCHAML contenant la quantite latente\n              integree sur l'element (aux NOEUDS) avec l'operateur 'SOUR'.\n\n      CHP1  : objet de type CHPOINT contenant les reactions associees\n              aux matrices de blocages du changement de phases. De maniere\n              classique, ce champ sort directement de 'RESO'\n\n      PROP1 : nouveau MCHAML de proportions de phases.",
  },
  {
    name: "PROPAG",
    url: "PROPAG",
    documentation:
      "$$$$ PROPAG   NOTICE  MB234859  17/10/02    21:15:21     9577           \n                                             DATE     17/10/02\n\n    Procedure PROPAG                         Voir aussi : MATE   \n    ----------------  \n    EVOL1 = PROPAG TAB1 ;\n                                  TAB1.'METHODE'  TAB1.'COUTRA'\n                                  TAB1.'JDA'      TAB1.'YOUN'\n                                  TAB1.'SIG1'     TAB1.'SIGF'\n                                  TAB1.'REXT'     TAB1.'EPAI'\n                                  TAB1.'ANGLE'    TAB1.'COUL'\n                                  TAB1.'ALFA'     TAB1.'N'\n\n\n    Objet :\n    _______\n\n   Cette procedure est specifique a l'element de tuyauterie fissuree\nTUFI . Elle permet de determiner la loi de comportement globale\nmoment-rotation de l'element incluant la propagation de fissure\na partir de la courbe de traction et de la courbe de resistance\na la dechirure du materiau ,en appliquant:\n   - soit une methode simplifiee (quatre methodes sont disponibles\n     correspondant respectivement aux mots-cles TADA,LBBNRC,LBB1,LBB2)\n   - soit une base de donnees experimentales (mot-cle DEFR)\npour la prise en compte de la plasticite.\n\n   La procedure cree un objet evolution pouvant etre directement\n   introduit en donnees de l'operateur MATE (composante TRAC) pour\n   l'element TUFI.\n\n   Commentaire :\n   _____________\n\n   EVOL1 : objet (type EVOLUTION) decrivant la courbe moment-rotation\n\n   TAB1  :  objet (type TABLE) contenant :\n\n      TAB1 METHODE : mot-cle (type MOT) valant DEFR, TADA, LBBNRC,\n                     LBB1 ou LBB2 et indiquant la methode simplifiee\n                     utilisee\n      TAB1 COUTRA  : objet (type EVOLUTION) decrivant la courbe de\n                     traction du materiau\n      TAB1 JDA     : objet (type EVOLUTION) decrivant la courbe de\n                     resistance a la dechirure du materiau\n      TAB1 YOUN    : module d'Young (type FLOTTANT)\n      TAB1 SIG1    : contrainte conventionnelle a 0.2% (type FLOTTANT)\n      TAB1 SIGF    : eventuellement contrainte d'ecoulement\n                     (type FLOTTANT)\n      TAB1 REXT    : rayon exterieur (type FLOTTANT)\n      TAB1 EPAI    : epaisseur\n      TAB1 ANGLE   : angle total de la fissure en degres\n      TAB1 COUL    : indique eventuellement la couleur (type MOT)\n                     affectee a la courbe creee\n      TAB1 ALFA    : eventuellement coefficients de la loi de type\n      TAB1 N       : Ramberg-Osgood qui permet de representer la\n                     courbe de traction du materiau (methode LBBNRC)\n                     (type FLOTTANT)",
  },
  {
    name: "PRRA",
    url: "PRRA",
    documentation:
      '$$$$ PRRA     NOTICE  AM        14/07/22    21:15:01     8047           \n                                             DATE     14/07/22\n\n \n  Operateur PRRA                           Voir aussi : \n    --------------  \n      TAB1 =  PRRA  MOD1 ;\n                                \n\n\n    Objet :\n    _______\n\n    L\'operateur PRRA met sous forme de table, exploitable par la procedure\n    charther, les donn\u00e9es du rayonnement.\n\n\n      Commentaire :\n      _____________\n\n      MOD1 : objet modele de "thermique rayonnement"\n\n      TAB1 : objet TABLE indic\u00e9e de 1 a N pour les N  conditions \n      independantes de rayonnement\n      \n      ',
  },
  {
    name: "PSATT",
    url: "PSATT",
    documentation:
      "$$$$ PSATT    NOTICE  CHAT      11/09/12    21:17:46     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure PSATT                          Voir aussi :\n    ---------------  \n      P = PSATT T ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  La procedure PSATT calcule la pression partielle de vapeur pour la\n temperature de saturation T.\n\n\n    Commentaires\n    ____________\n\n   T    : Temperature de la vapeur (en K)\n  La donnee d'entree est un CHPOINT, un FLOTTANT ou un LISTREEL.\n\n   P    : PSAT(T) (en Pa)",
  },
  {
    name: "PSCA",
    url: "PSCA",
    documentation:
      "$$$$ PSCA     NOTICE  BP208322  20/02/24    21:15:06     10530          \n                                             DATE     20/02/24\n\n    Operateur PSCAL                          Voir aussi : PVEC\n    ---------------                                       PMIX  \n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Syntaxe avec des POINTS\n    1.1 Objet\n    1.2 Commentaire\n2. Syntaxe avec des CHPOINT ou des MCHAML\n    2.1 Objet\n    2.2 Commentaire\n    2.3 Exemple\n\n  \n1. Syntaxe avec des POINTS1 \n========================== \n    FLOT1 = VEC1  PSCA VEC2  ;\n\n  \n1.1 Objet \n--------- \n    L'operateur PSCA effectue le produit scalaire de deux vecteurs.\n\n  \n1.2 Commentaire \n--------------- \n    VEC1, VEC2 : vecteurs (type POINT ou type TABLE, sous-type VECTEUR)\n    FLOT1      : resultat du produit scalaire (type FLOTTANT)\n\n    \n  \n2. Syntaxe avec des CHPOINT ou des MCHAML \n========================================= \n \n    OBJ3 = PSCA OBJ1 OBJ2 LMOTS1 LMOTS2  ;\n\n  \n2.1 Objet \n--------- \n    L'operateur PSCA effectue le produit scalaire de deux champs par\n    points ou de deux champs par elements. Le resultat est obtenu en \n    faisant en chaque point la somme des produits des composantes \n    definies pour chaque champ.\n\n  \n2.2 Commentaire \n--------------- \n    OBJ1   : champ par points (type CHPOINT  ou MCHAML ) \n    OBJ2   : champ par points (type CHPOINT  ou MCHAML ) \n    LMOTS1 : liste des composantes (type LISTMOTS) du premier champ \n    LMOTS2 : liste des composantes (type LISTMOTS) du second champ\n    OBJ3   : objet resultat (type CHPOINT ou MCHAML )\n    \n  \n2.3 Exemple \n----------- \n    Si les composantes du premier champ sont UX,UY,UZ et celles  du\n    second sont FX,FY,FZ, on calculera en chaque point support \n         (UX*FX)+(UY*FY)+(UZ*FZ).         \n         \n    NOTA: pour les champs par elements, sous zones, points supports,\n    harmoniques doivent imperativement etre identiques  pour les champs \n    d'entree  (operer prealablement les conversions necessaires \n    ( CHANGER , REDUIRE ... ) \n    ",
  },
  {
    name: "PSIP",
    url: "PSIP",
    documentation:
      "$$$$ PSIP     NOTICE  BP208322  18/06/11    21:15:10     9829           \n                                             DATE     18/06/11\n                                     \n \n    Operateur PSIP                            Voir aussi : TRIE\n    --------------  \n    CHP1           | = PSIP MAIL1 MAIL2 (CRIT1) |                  | ;\n    CHP1 CHP2      |                            | 'DEUX' | P1 (P2) | \n                   |                            |        | MAIL3   |\n    CHP1 CHP2 CHP3 |                            | 'TROI' | P1 (P2) | \n                                                         | MAIL3   |\n                              \n\n\n    Objet :\n    _______\n\n   Pour les points de MAIL1, l'operateur calcule le champ de distance\n   euclidienne au maillage MAIL2 (compose de seg2 en 2D et de tri3/qua4 \n   en 3D).\n   Cette distance est signee suivant l'orientation de MAIL2. \n   L'utilisation de CRIT1 permet d'exclure du champs resultat CHP1 les\n   points situes a une distance (en norme infinie) superieure a CRIT1.\n   \n   Si l'option 'DEUX' est utilisee, un second champ CHP2, orthogonal au \n   premier, donne en 2D la distance signee par rapport a la droite \n   perpendiculaire a MAIL2 en son extremite P1, et en 3D au plan \n   perpendiculaire a MAIL2 passant par MAIL3 (maillage de seg2).\n   En 2D, dans le cas ou deux pointes sont donnees, la distance signee\n   CHP2 est calculee par rapport a la pointe la plus proche.\n   \n   Avec l'option 'TROI' (uniquement possible en 3D), un troisieme champ\n   CHP3 orthogonal aux deux premiers vient completer la base.\n   \n\n    Commentaire :\n    _____________\n\n   CHP1  : objet CHPOINT de distance signee dont le nom de composante\n           est PHI\n   \n   CHP2  : objet CHPOINT de distance signee dont le nom de composante \n           est PSI\n   \n   CHP3  : objet CHPOINT de distance signee dont le nom de composante \n           est TAU\n \n   MAIL1 : maillage donnant les points pour lesquels on veut les champs\n\n   MAIL2 : maillage en 2D de seg2 et en 3D de tri3\n\n   'DEUX': Mot option demandant le calcul du deuxieme champ.\n\n   P1    : point extremite de la ligne MAIL2 \n   \n   P2    : 2eme point extremite de la ligne MAIL2 \n\n   MAIL3 : maillage de seg2\n\n   CRIT1 : distance minimale pour laquelle CHP1 et CHP2 doivent etre \n           evalues \n\n\n    Remarque : \n    __________ \n\n   Lors d'une modelisation avec des elements finis etendus en\n   mecanique de la rupture (XFEM),\n   -CHP1 et CHP2 sont les level set decrivant le repere local de fissure.\n   -MAIL2 represente la fissure ou le plan de la fissure.\n   -En 2D, P1 (et P2) represente(nt) la (les) pointe(s) de fissure.\n   -En 3D, MAIL3 represente le front de fissure.\n    ",
  },
  {
    name: "PSMO",
    url: "PSMO",
    documentation:
      "$$$$ PSMO     NOTICE  MB234859  17/10/02    21:15:21     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur PSMO                           Voir aussi :\n    --------------  \n    SOLUT  =  PSMO |    STRU1   MOD1   ( LIAI1 )    | ('FREQ' XFREQ )\n                   | RIGT  ( MAST )  TBA1 ( TLIAI ) |\n\n           ...  ('SEISME'('UX') ('UY') ('UZ') )  (| CHPO1 |)  ;\n                                                 (| LCHP1 |)\n\n\n    Objet :\n    _______\n\n    L'operateur  PSMO  permet de calculer, lors d'un calcul par\nrecombinaison modale, la contribution des modes negliges non pris\nen compte dans la base modale. Ces modes sont supposes avoir une\nreponse quasi-statique.\n\n    Commentaire :\n    _____________\n\n     STRU1   :  objet de type STRUCTURE\n\n     MOD1    :  objet de type SOLUTION, contenant les modes de la\n                structure\n\n     LIAI1   :  objet decrivant les liaisons non permanentes (chocs)\n                existant sur la structure (type ATTACHE).\n\n     RIGT    :  objet de type RIGIDITE, matrice de raideur de la\n                structure\n\n     MAST    :  objet de type RIGIDITE, matrice de masse de la\n                structure\n\n     TBA1    :  objet de type TABLE de sous-type BASE_DE_MODES,\n                issu de la procedure TRADUIRE\n\n     TLIAI   :  objet de type TABLE de sous-type 'POINT_DE_LIAISON',\n                indice de 1 a N points de choc, contenant :\n                  - TLIAI.I.'POINT'   = le point de choc (type POINT)\n                           .'NORMALE' = la normale de choc (type POINT)\n\n     CHPO1   :  objet contenant la description spatiale des chargements\n                (cas des forces concentrees) ou des supports (cas\n                d'une structure multisupportee) (type CHPOINT)\n\n     LCHP1   :  objet contenant plusieurs CHPOINTs (type LISTCHPO)\n\n    'SEISME' :  mot-cle indiquant que la structure est soumise a une\n                excitation sismique.\n\n    'UX'     :  mot-cle, direction de l'excitation suivant X.\n\n    'UY'     :  mot-cle, direction de l'excitation suivant Y.\n\n    'UZ'     :  mot-cle, direction de l'excitation suivant Z.\n\n\n    'FREQ'   :  mot-cle indiquant, dans le cas o\u00ba la structure a des\n                modes de corps solide, que l'utilisateur veut imposer\n                la frequence a laquelle on etudiera la reponse de la\n                structure.\n\n     XFREQ   :  valeur de la frequence (type FLOTTANT).\n\n     SOLUT   :  objet resultat\n                - de type SOLUTION de sous-type PSEUMODE, si on a donne\n                  les modes de la structure dans un objet SOLUTION.\n                - de type TABLE de sous-type PSEUDO_MODE, si on a donne\n                  les modes de la structure dans un objet TABLE.\n                  Description de SOLUT :\n                    TABLE indicee par des ENTIERs I variant de 1 a N\n                    SOLUT . I . 'DEPLACEMENT'  = pseudo-mode calcule\n                                                 (type CHPOINT)\n                    cas d'une structure monosupportee (option SEISME)\n                              . 'DIRECTION'    = 1, 2, ou 3\n                                                 direction du seisme\n                    cas d'une force concentree\n                              ou structure multisupportee\n                              . 'CHAMP_BASE_B' = pointeur du CHPOINT\n                                                 pour lequel on a calcu-\n                                                 le le pseudo-mode\n                              . 'CHAMP_BASE_A' = pointeur du CHPOINT\n                                                 BASE_B projete sur la\n                                                 base modale.\n                    cas d'une force de choc\n                              . 'POINT'        = point de choc\n                              . 'NORMALE'      = normale de choc\n\n\n    Remarques :\n    ___________\n\n    * Cas d'une structure monosupportee\n\n      La structure est soumise a une acceleration sismique d'ensemble\nunitaire dans la direction donnee.\n        Lors de la demande de recombinaison l'utilisateur donnera le\nchargement reel.\n\n        Exemple pour un seisme de direction UX :\n\n               SOLUT  =  'PSMO'  STRU1  MOD1  'SEISME'  'UX'  ;\n           ou\n               SOLUT  =  'PSMO'  RIGT  MAST  TBA1  'SEISME'  'UX'  ;\n\n\n    * Cas d'une structure multisupportee\n\n      On associe a chaque pseudo-mode un CHPOINT.\nLe pseudo-mode est calcule a partir du champ contenant les\ndeplacements des points supports.\n      Lors de la demande de recombinaison l'utilisateur donnera le\nchargement reel.\n\n       Exemple :\n\n               SOLUT  =  'PSMO'  STRU1  MOD1  'SEISME'  CHPO1  ;\n           ou\n               SOLUT  =  'PSMO'  RIGT  MAST  TBA1  'SEISME'  CHPO1  ;\n\n\n    * Cas d'une force concentree\n\n      On associe a chaque pseudo-mode un CHPOINT.\n      Lors de la demande de recombinaison l'utilisateur donnera le\nchargement reel.\n\n       Exemple pour une force concentree :\n\n               SOLUT  =  'PSMO'  STRU1   MOD1  CHPO1 ;\n           ou\n               SOLUT  =  'PSMO'  RIGT  TBA1  CHPO1  ;\n\n\n    * Cas d'une force de choc\n\n      On associe a chaque pseudo-mode un CHPOINT.\n\n       Exemple pour une force de choc :\n\n               SOLUT  =  'PSMO'  STRU1   MOD1  LIAI1 ;\n           ou\n               SOLUT  =  'PSMO'  RIGT  TBA1  TLIAI  ;",
  },
  {
    name: "PSRS",
    url: "PSRS",
    documentation:
      "$$$$ PSRS     NOTICE  MB234859  17/10/02    21:15:21     9577           \n                                             DATE     17/10/02\n\n    Operateur PSRS                           Voir aussi : RESPOWSP\n    --------------  \n    EVOL1 = PSRS EVOL2 FLOT1 LREEL1 (LREEL2 MOT1 MOT2 MOT3 COUL1);\n\n\n\n    objet :\n    _______\n\n    Calcul des N spectres de reponse EVOL1 associes au spectre de\n    puissance EVOL2 (comportant une unique courbe) d'un signal de\n    dure FLOT1 (REEL) et aux N amortissements contenu dans LREEL1.\n\n    options :\n    _________\n\n    - Le calcul des spectres de reponse s'effectue sur une grille\n      de periode de 75 points, compris entre 0.04s (25 Hz) et FLOT1 et\n      uniformement distribue dans un espace logarithmique. Une grille\n      alternative peut etre donnee en option dans LREEL2.\n\n    - MOT1 represente la grandeur physique de reponse:\n      'ACCE'(leration), 'VITE'(sse) ou 'DEPL'(acement relatif). Le\n      defaut est 'ACCE'.\n\n    - MOT2 represente le type de distribution choisi pour evaluer le\n      lieu des maxima du spectre de reponse: 'CRAM'(er) ou 'NEWG'(umg).\n      Le defaut est 'CRAM'.\n\n    - MOT3  represente la grandeur en abscisse de EVOL1:\n      'PERI'(ode) ou 'FREQ'(uence). Le defaut est 'PERI'.\n\n    - COUL1 represente la couleur de l'objet cree.\n      Par defaut c'est la couleur de EVOL2.",
  },
  {
    name: "PVEC",
    url: "PVEC",
    documentation:
      "$$$$ PVEC     NOTICE  JB251061  21/04/13    21:15:12     10954          \n                                             DATE     21/04/13\n\n    Operateur PVEC                           Voir aussi : PSCA\n    --------------                                        PMIX  \n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Syntaxe avec des POINTS\n    1.1 Objet\n    1.2 Commentaire\n2. Syntaxe avec des CHPOINT ou des MCHAML\n    2.1 Objet\n    2.2 Commentaire\n    2.3 Exemple\n\n  \n1. Syntaxe avec des POINTS1 \n========================== \n    VEC3 = VEC1  PVEC  (VEC2 si 3D) ;\n        \n  \n1.1 Objet \n--------- \n    L'operateur PVEC effectue le produit vectoriel (note x) \n    de n-1 vecteurs, n etant la dimension de l'espace (n=2 ou 3). \n    Le resultat est le vecteur :\n          VEC3 = | e_Z  x VEC1   en 2D\n                 | VEC1 x VEC2   en 3D\n\n  \n1.2 Commentaire \n--------------- \n   VEC1, VEC2 : vecteurs (type POINT)\n   VEC3       : objet resultat (type POINT)\n   \n   \n  \n2. Syntaxe avec des CHPOINT ou des MCHAML \n========================================= \n \n    OBJ3 = PVEC OBJ1 LMOTS1 (OBJ2 LMOTS2 si 3D) LMOTS3  ;\n    \n  \n2.1 Objet \n--------- \n    L'operateur PVEC effectue le produit vectoriel de n-1 champs par\n    point/element, n \u00e9tant la dimension de l'espace (n=2 ou 3).\n    En dimension 2, le resultat est le champ par point/element de\n    composantes (-y, x), o\u00f9 x et y sont les composantes de OBJ1.\n\n  \n2.2 Commentaire \n--------------- \n    OBJ1, OBJ2, OBJ3  : champ (type CHPOINT ou MCHAML) \n    LMOTS1, LMOTS2, LMOTS3 : liste des composantes (type LISTMOTS), \n    de dimension n, associee a chaque champ, dans l'ordre du systeme de\n    coordonnees retenu.\n    \n  \n2.3 Exemple \n----------- \n    Avec :\n      LMOTS1 = MOTS 'U,X' 'U,Y' 'U,Z' ;\n      LMOTS2 = MOTS 'V,X' 'V,Y' 'V,Z' ;\n      LMOTS3 = MOTS 'W,X' 'W,Y' 'W,Z' ;\n    OBJ3 aura la structure :\n      W,X = (U,Y * V,Z) - (U,Z * V,Y) \n      W,Y = (U,Z * V,X) - (U,X * V,Z) \n      W,Z = (U,X * V,Y) - (U,Y * V,X) ",
  },
  {
    name: "QOND",
    url: "QOND",
    documentation:
      "$$$$ QOND     NOTICE  CHAT      11/09/12    21:17:48     7124           \n                                             DATE     11/09/12\n\n  Operateur QOND                          Voir aussi :\n     --------------  \n\n\n  Objet : Calcule le flux de masse de vapeur d'eau condensee dans un\n          melange air-vapeur au contact d'une zone froide (paroi ou\n          condenseur volumique).\n\n  Syntaxe : M = QOND CP ALFAB ALFAT H TP PTOT YVAP YH2O <BETA> ;\n\n  M = BETA * H/CP *(ALFAB/ALFAT)**.666 *Ln[(PTOT-PSAT(TP))/(PTOT-PVAP)]\n  M = 0   si  PVAP < PSAT(TP)\n\n\n  M     : CHPOINT SCAL (densite de flux de masse de vapeur condensee\n                        [kg/m2/s])\n  CP    : FLOTTANT     (chaleur specifique vapeur [J/kg/K])\n  ALFAB : FLOTTANT     (diffusivite brownienne [m2/s])\n  ALFAT : FLOTTANT     (diffusivite thermique [m2/s])\n  H     : CHPOINT SCAL (coeff d'echange thermique a la paroi [W/m2/K])\n  TP    : CHPOINT SCAL (temperature paroi [K])\n  PTOT  : CHPOINT SCAL (pression totale du melange [Pa])\n  YVAP  : CHPOINT SCAL (fraction massique vapeur [vap/eau tot])\n  YH2O  : CHPOINT SCAL (fraction massique eau [eau tot/gaz])\n  BETA  : FLOTTANT     (coefficient [option, par defaut beta=1])\n\n\n  Important: - Tous les CHPOINTs doivent avoir le meme support geom.\n  _________    et LE MEME POINTEUR SUR LE SUPPORT GEOMETRIQUE.\n             - Il faut utiliser les UNITES S.I.\n             - M aura le meme support geometrique que H,TP....\n             - Bien respecter l'ordre des donnees.\n             - ne fonctionne pas en vapeur pure (ie sans air)",
  },
  {
    name: "QUADRATU",
    url: "QUADRATU",
    documentation:
      "$$$$ QUADRATU NOTICE  CHAT      11/09/12    21:17:48     7124           \n                                             DATE     11/09/12\n\n  Procedure QUADRATU                       Voir aussi :\n    ------------------  \n    TAB1 = QUADRATU MOT1 FLOT1 FLOT2 ENTI1;\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule les points et poids d'integration\n    associes a une densite de probabilite.\n\n    Commentaire :\n    _____________\n\n    MOT1 : type de loi ('NORM', 'LOGN', 'EXPO', 'UNIF')\n\n    FLOT1 : valeur moyenne  (type REEL)\n\n    FLOT2 : ecart-type (type REEL)\n\n    ENTI1 : nombre de points d'integration (type ENTIER)\n\n    TAB1 : (type TABLE)\n\n    TAB1.i.POINT = i-eme point d'integration (type FLOTTANT)\n\n    TAB1.i.POIDS = i-eme poids d'integration (type FLOTTANT)",
  },
  {
    name: "QUEL",
    url: "QUEL",
    documentation:
      "$$$$ QUEL     NOTICE  GOUNAND   17/06/30    21:15:10     9468           \n                                             DATE     17/06/30\n\n    Operateur QUELCONQUE                     Voir aussi : DROI\n    --------------------  \n    LIG1 = QUELCONQUE  | 'SEG2' |  | POIN1 POIN2 ......   POINn | ;\n                       | 'SEG3' |  | LISTX (LISTY (LISTZ))      |\n                                   | MAIL1                      |\n\n\n    Objet :\n    _______\n\n    L'operateur QUELCONQUE permet de construire une ligne brisee \n    constituee d'elements du type demande, passant :\n    - soit par les points donnes\n    - soit par les points dont les coordonnees sont fournies dans des\n      listes de reels.\n    - soit a partir d'un maillage de points\n\n    Commentaire :\n    _____________\n\n    'SEG2' | mot-cle indiquant le type d'element souhaite.\n    'SEG3' |\n\n     POINi : points definissant la ligne brisee (type POINT)\n\n     LISTX : abscisses des points definissant la ligne brisee\n             (type LISTREEL)\n\n     LISTY : ordonnees des points definissant la ligne brisee\n             (type LISTREEL) \n             Cet operande n'est a donner qu'en 2D ou 3D.\n\n     LISTZ : cotes des points definissant la ligne brisee\n             (type LISTREEL) \n             Cet operande n'est a donner qu'en 3D. \n\n     MAIL1 : maillage constitue de points (type MAILLAGE)\n\n     LIG1  : ligne brisee (type MAILLAGE)\n\n     Remarque :\n     __________\n\n     Si le type est 'SEG3' : \n\n     1) Il faut, suivant la syntaxe choisie, soit donner dans la \n        liste les points intermediaires, soit prendre en compte les \n        coordonnees des points intermediaires.\n\n     2) Soit N le nombre de points a considerer. N-3 doit etre pair,\n        afin que le dernier segment de la ligne ne soit pas incomplet.",
  },
  {
    name: "QUIT",
    url: "QUIT",
    documentation:
      "$$$$ QUIT     NOTICE  CHAT      11/09/12    21:17:48     7124           \n                                             DATE     11/09/12\n                                             \n    Directive QUITTER                        Voir aussi : REPE DEBP\n    -----------------                                     DEBM   \n    QUITTER   OBJ1   ;\n\n\n    Objet :\n    _______\n\n    La directive QUITTER sert a interrompre l'execution du bloc OBJ1,\nou de la procedure OBJ1. Le contr\u00d4le est alors rendu a l'instruction\nsuivant la fin du bloc ou a l'instruction FINPRO de la procedure.\n\n    Remarque :\n    __________\n\n    Si plusieurs blocs sont imbriques, il est possible de quitter celui\nque l'on desire en indiquant son nom.\n\n    Exemple :\n    _________\n\n    * calcul de la constante d'EULER\n\n    * INITIALISATIONS\n    I=0 ; CRIT= 1E-5; CRITM= CRIT*-1; C=0. ;\n    EPS1= 0 ; OK = FAUX ;\n\n    REPETER 50 BLOC1 ;\n\n     I = I + 1; C = C + (1./ I) ;\n     EPS = C - (LOG I) ;\n     D = EPS - EPS1 ;\n\n       SI ( (D < CRIT) ET (D > CRITM) ) ;\n\n       OK = VRAI ;\n       QUITTER BLOC1 ;\n\n       FINSI ;\n\n     EPS1 = EPS ;\n\n     FIN BLOC1 ;\n\n     SI OK ;\n      LIST EPS ;\n     SINON ;\n      LIST 'RATE' ;\n     FINSI ;\n     FIN;\n\n    Exemple d'utilisation de blocs imbriques :\n\n    REPETER BLOC1 ;\n       .....\n\n    REPETER BLOC2  ;\n       .......\n\n      SI CONDITION ;\n        QUITTER BLOC2 ;\n      SINON ;\n        QUITTER BLOC1 ;\n      FIN BLOC2 ;\n    FIN BLOC1 ;",
  },
  {
    name: "QULX",
    url: "QULX",
    documentation:
      "$$$$ QULX     NOTICE  CHAT      11/09/12    21:17:49     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur QULX                           Voir aussi :\n    --------------  \n    CHPO1 = QULX  RIG1 CHPO2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur QULX sert uniquement pour la procedure des appuis unila-\nteraux. Il extrait d'un champ par points les multiplicateurs de Lagrange\nexistant dans une matrice de rigidite. Le champ par point obtenu est\nde nature discrete.\n\n    Commentaire :\n    _____________\n\n    RIG1  : matrice de rigidite (type RIGIDITE)\n\n    CHPO2 : champ par point (type CHPOINT) contenant les multiplicateurs\n            de Lagrange\n\n    CHPO1 : multiplicateurs de Lagrange (type CHPOINT)",
  },
  {
    name: "RACC",
    url: "RACC",
    documentation:
      "$$$$ RACC     NOTICE  FANDEUR   11/09/26    21:16:27     7107           \n                                             DATE     11/09/26\n                                             \n    -----------------------------------------------------------------\n    | 1ere possibilite : creation d'un element de raccord ordinaire |\n    -----------------------------------------------------------------\n\n    GEO3 = RACC  (FLOT1) GEO1 GEO2  ;\n\n    Objet :\n    _______\n\n    L'operateur RACCORD engendre une ligne GEO3 de points doubles en\nraccordant les objets GEO1 et GEO2 (lignes en 2D).\n\n    Commentaire :\n    _____________\n\n    GEO1, GEO2 : objets a raccorder (type MAILLAGE)\n\n    GEO3       : ligne de raccordement (type MAILLAGE)\n\n    FLOT1      : critere de distance (type FLOTTANT)\n                 (voir remarque ci-dessous)\n\n    Remarque :\n    __________\n\n    Les objets GEO1 et GEO2 sont des SEGMENTS a 2 ou 3 points.\n    Utiliser l'operateur LIAISON pour des maillages surfaciques en 3D.\n\n    Un element est cree entre un element de l'objet GEO1 et un element\nde l'objet GEO2 distants point a point de moins d'un critere FLOT1\n(type FLOTTANT), egal, par defaut, au dixieme de la densite courante.\n\n    Si l'objet GEO3 doit etre utilise comme raccord fluide-structure,\nil est imperatif que le premier objet GEO1 soit l'objet fluide et que\nle second objet GEO2 soit l'objet solide.\n\n    Pour la creation d'un element joint JOI2, JOI3 (2D) :\n\n         -GEO1 et GEO2 definissent respectivement les lignes 1 et 2\nde cet element. Ces lignes doivent etre parcourues dans le meme sens.\nCe sens est defini par celui de la ligne 1, et tel que si un\nobservateur la parcourt selon ce sens, il doit voir le joint\na sa droite.\n\n         -Pour la prise en compte d'un jeu initial x dans un element\njoint, GEO1 et GEO2 doivent etre distants de x. De plus, x doit etre\nrentre comme deformation inelastique normale initiale lors de l'appel\na PASAPAS (cf rapport DMT/93.655).\n\n    --------------------------------------------------------------\n    | 2eme possibilite : creation d'un element de raccord poreux |\n    --------------------------------------------------------------\n\n    GEO4 = RACC  (FLOT1) GEO1 GEO2 GEO3  ;\n\n    Objet :\n    _______\n\n    L'operateur RACCORD engendre une ligne GEO4 de points doubles ou\n    triples en raccordant les objets GEO1, GEO2 et GEO3.\n\n    Commentaire :\n    _____________\n\n    GEO1, GEO2, GEO3 : objets a raccorder (type MAILLAGE)\n\n    GEO4             : ligne de raccordement (type MAILLAGE)\n\n    FLOT1            : critere de distance (type FLOTTANT)\n                       (voir remarque)\n\n    Remarque :\n    __________\n\n    Les objets GEO1 et GEO2 sont des SEGMENTS a 3 points. L'objet GEO3\n    est un SEGMENT a 2 points.\n    Un element est cree entre un element de l'objet GEO1, un element\n    de l'objet GEO2 et un element de l'objet GEO3 distants point a point\n    de moins d'un critere FLOT1 (type FLOTTANT), egal, par defaut, \n    au dixieme de la densite courante.\n    La convention est la meme que ci-dessus pour les JOI2 et JOI3, et\n    GEO3 definit la ligne intermediaire.\n\n \n ",
  },
  {
    name: "RACP",
    url: "RACP",
    documentation:
      "$$$$ RACP     NOTICE  CHAT      11/09/12    21:17:49     7124           \n                                             DATE     11/09/12\n\n  Operateur RACPOL                         Voir aussi :\n    ----------------  \n      XR1 ( XI2)  = RACPOL |(MOT1)   | LISTREE1 ( MOT1 )    ||;\n                           |         | A0  A1  A2  (A3) (A4)||  \n                           | 'INTE' X1 X2 LISTREE1           |\n                             \n\n    Objet :\n    _______\n\n    L'operateur RACP calcule les racines  d'un polynome du Neme\ndegre .\n\n      Commentaire :\n      -------------\n\n      Le polynome est de la forme :\n\n             A0 + A1*X + (A2*X**2) + (A3*X**3) + (A4*X**4) + ...\n      avec A0 la premiere valeur du listreel LISTREE1, A1 la\n      seconde valeur etc... \n      \n      Les racines reelles sont rangees par ordre croissant dans le\n      listreel XR1. Si MOT1 prend la valeur IMAGINAIRE toutes les \n      racines du polynome sont sorties. XR1, ordonne par ordre \n      croissant, contient la partie reelle et XI2 contient la partie \n      imaginaire.\n\n      Le mot MOT1 peut aussi prendre comme valeur BAIRSTOW dans ce \n      cas la methode de Bairstow est utilisee.\n       \n      Dans la seconde syntaxe seules les racines reelles sont sorties.          \n      \n      L'option 'INTE' demande de chercher la premiere racine relle dans \n      l'intervalle X1 X2. S'il n'y en a pas XR1 prend la valeur 'VIDE'.",
  },
  {
    name: "RAFF",
    url: "RAFF",
    documentation:
      "$$$$ RAFF     NOTICE  PASCAL    20/06/08    21:15:10     10623          \n                                             DATE     20/06/08\n \n  Operateur RAFF                           Voir aussi :\n    \n    1ere fonction : raffinement d'un maillage\n    _______________                           \n\n      GEO2  =  RAFF  GEO1  CHPO1 ; \n\n\n    Objet :\n    _______\n\n       L'operateur RAFF part d'un maillage existant (GEO1) pour le raffiner\n    en respectant un champ de densite  (CHPO1). Tant que la densite n'est \n    pas atteinte un element est divise en sous elements etc... \n    Le maillage genere contient le resultat de la division des elements \n    plus des elements de types relations (itypel=22) qui permettent de \n    realiser au mieux la conformite en deplacement des elements. \n\n\n    Commentaire :\n    _____________\n\n    Entrees :\n\n      - GEO1  :  Maillage initial\n                                                   \n      - CHPO1 :  Objet CHPOINT de densite                                         \n    \n\n    Sortie :\n\n      - GEO2  : Maillage final, contenant les relations a imposer.                \n\n    \n    Remarque : \n    __________\n\n    Apres avoir raffin\u00e9 un maillage il est n\u00e9c\u00e9ssaire de faire appel \u00e0 \n    l'op\u00e9rateur RELA pour contruire les relations de conformit\u00e9 \n    entre les diff\u00e9rentes zones de raffinement.\n\n\n    2e fonction : raffinement d'une liste de reels\n    -------------                           \n\n      LRE2  =  RAFF  LRE1  | ENT1  ;\n                           [ FLOT1\n\n    Objet\n    _____\n\n       L'operateur RAFF permet egalement de raffiner un LISTREEL.\n\n\n    Commentaire\n    ___________\n\n    Entrees :\n      - LRE1  :  objet LISTREEL, liste initiale.\n                                                     \n      - ENT1  :  objet ENTIER, nombre de sous-decoupages de chaque\n                 intervalle de la liste. ENT1 peut etre negatif\n                 (voir remarque).\n\n      - FLOT1 :  objet FLOTTANT, valeur cible de la taille\n                 des intervalles de la liste.\n\n    Sortie :\n      - LRE2  :  objet LISTREEL, liste raffinee.\n\n\n    Remarque 1\n    __________\n\n    Si ENT1 est negatif, la taille du decoupage de deux intervalles\n    successifs de tailles differentes suit une progression geometrique.\n    Le nombre d'intervalles peut alors etre different de celui attendu\n    (abs(ENT1)).\n\n    Remarque 2\n    __________\n\n    Si le LISREEL contient une succession de valeurs identiques,\n    les intervalles entre ces veleurs sont egalement decoupes.\n    Par exemple, la liste {1 1} raffinee d'un facteur 3 est\n    la liste {1 1 1 1}.\n    Ce comportement est souhaitable pour obtenir des LISTREEL\n    de meme dimension en sortie de RAFF, quelles que soient\n    les valeurs du LISTREEL en entree.\n\n\n\n    Exemple d'utilisation de la 1ere fonction\n    -----------------------------------------\n\n    opti elem qua4 mode plan defo dime 2; \n    dens 2.;\n* mesh 10x6 \n    pa= 0 0; pb= 10 0;pc= 20 0;\n    liab= pa droi pb;libc= pb droi pc;\n    su = (liab et libc)  trans  ( 0 12);\n    trac su;\n* definition of density\n    x y = coor su;\n    distance = ((x - 10 ) * ( x- 10) + ( y * y)) ** 0.5;\n    den = 0.3 + (0.18*distance);\n    trac su den;\n* new mesh \n    su2= raff su den;\n    hh = elem su2 SURE ;\n    sureal = su2 diff hh ;\n* use of this mesh\n* definition of model and caracteristic\n    mo= mode su2 mecanique elastique isotrope ;    \n    ma = mate mo  YOUN 2.e5  NU 0.3 ; \n* conformity relations\n    rel = rela mo;\n* loads\n    psupe = su2 poin droite ( 0 12) ( 10 12) 0.1;\n    lisupe = elem ( contour su2) appu stric psupe;\n    ff = pres ( redu mo sureal) massif lisupe  -1.;\n* displacements conditions\n    py0= point su2 droit pa pc 0.01;\n    liy0= elem ( contou su2) appu strict py0;\n    li2bc = liy0 elem compris pb pc;\n    cl1= bloqu li2bc UY;\n    cl2= bloq UX pb;\n    cltot= cl1 et cl2;\n* compute elastic solution\n    ri = rigi mo ma;\n    displa =  reso ( ri et cltot et rel) ff;\n    stre = sigma displa mo ma;\n    vm = vmis stre mo ma;\n    trac  su2 vm mo ma;    \n* compute stress intensity factor\n    gt = table;\n    gt.'OBJECTIF' = MOT 'J';\n    lifis = liy0 elem compris pa pb;   \n    gt.'LEVRE_SUPERIEURE' = lifis;\n    gt.'FRONT_FISSURE' = Pb;\n    gt.'CARACTERISTIQUES' = ma;\n    gt.'MODELE' = mo;\n    gt.'SOLUTION_RESO' = displa; \n    rea = reaction  (ri et rel) displa;\n    gt.'CHARGEMENTS_MECANIQUES'=rea;  \n    naa = 5;opti veri 1;\n    repe no naa;\n      gt.'COUCHE' = &no;                \n      G_THETA gt; \n      si ( &no ega 1) ; g2=prog gt.resultats;sinon;\n      g2 = g2 et ( prog gt.resultats); finsi;\n    fin no; \n    xx = prog 1 pas 1 naa;\n    ev= evol manu  'nb of rows' xx 'G ' g2;\n    ttt=table;\n    ttt.1 = mot 'MARQ CROI';\n    tt2=table;\n    tt2.1= ' G '; \n    ttt.'TITRE'=tt2;\n    dess ev lege ttt;\n$$$$\n \n \n \n ",
  },
  {
    name: "RAFT",
    url: "RAFT",
    documentation:
      "$$$$ RAFT     NOTICE  CHAT      11/09/12    21:17:50     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur RAFT                          Voir aussi :\n     --------------  \n     SURF2 = RAFT (CHPO1) SURF1 (N1);\n\n\n\n     Objet :\n     _______\n     \n     L'operateur  RAFT raffine  un  maillage  triangulaire (objet \n SURF1) pour respecter une carte de taille donnee par des valeurs \n aux noeuds de SURF1 (objet CHPO1 ou directement les valeurs  aux\n noeuds). Aucun  noeud n'est ajoute sur la frontiere, en revanche \n des noeuds sont ajoutes a  l'interieur  du  domaine pour que les \n triangles aient  la taille souhaitee. Le  nombre  de  noeuds  du  \n maillage  resultant  peut  etre  limite  par l'utilisateur a une \n valeur N1. \n\n     Commentaire :\n     _____________\n     \n     SURF1: objet de type MAILLAGE. Il doit etre constitue exclu-\n sivement de triangles.\n \n     CHPO1: objet de type CHPOINT. Ce  champ de  point  donne  la \n carte des tailles souhaitees. Chaque point correspond a un noeud \n du maillage de SURF1.La valeur associee au noeud correspond a la \n longueur souhaitee pour les  elements  incidents au  noeud.\n Si CHPO1 n'est pas donne on prend la densite  locale  affectee a \n chaque noeud du maillage SURF1 lors de sa creation  (voir TRIA). \n Si elle est nulle (non fixee),on raffine pour ameliorer la forme \n des triangles.\n\n     N1 : objet de type ENTIER. C'est le nombre maximum de noeuds\n que l'on souhaite dans  le maillage  resultant.  Il ne peut etre\n inferieur au nombre de noeuds deja presents dans SURF1.\n \n     Remarques :\n     ___________\n     \n     Comme son nom l'indique le  RAFFINEUR  n'enleve  aucun noeud  \n du maillage initial (SURF1)  meme  si  ce dernier est trop dense \n pour la taille souhaitee imposee (CHPO1).\n \n     RAFT ne fonctionne que pour des triangles lineaires (TRI3).\n \n ",
  },
  {
    name: "RAMBERG",
    url: "RAMBERG",
    documentation:
      "$$$$ RAMBERG  NOTICE  CHAT      11/09/12    21:17:50     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure RAMBERG                        Voir aussi :\n    ------------------  \n        RAMBERG TAB1;\n\n               TAB1.'COURBE_TRACTION'.'SIG0'.'EPS0'\n                   .'ALPHA'.'N'.'COUBE_RAMBERG'\n                   .'AJUSTEMENT'\n\n\n   \n    Objet :\n    _______\n\n          Etant donnee la courbe de traction d'un materiau,\n     cette procedure permet d'ajuster sur cette courbe une \n     loi de type Ramberg-Osgood :\n            eps/eps0 = (sig/sig0) + (alpha * ((sig/sig0)**n))\n     L'ajustement est effectue par regression lineaire des\n     points de la courbe de traction en coordonnees log-log.\n\n\n   Commentaire :\n   _____________\n\n\n       ENTREES :\n      ----------\n          \n          Une table TAB1 indicee par des mots .\n         \n       TAB1.'COURBE_TRACTION' : courbe de traction du materiau\n                                constitue par un objet de type \n                                EVOLUTION, avec en abscisse les \n                                deformations et en ordonnee les \n                                contraintes (les premiers points\n                                doivent deja contenir une partie\n                                plastique).\n\n       TAB1.'SIG0' : valeur de la contrainte intervenant dans la \n                     loi de Ramberg-Osgood.\n\n       TAB1.'EPS0' : deformation associee a la contrainte SIG0 dans\n                     la loi de Ramberg-Osgood.\n\n\n        SORTIES :  \n       ----------\n\n          Une table indicee par des mots.\n \n       TAB1.'ALPHA' : coefficient alpha de la loi Ramberg-Osgood\n\n       TAB1.'N' : paramatre d'ecrouissage de la loi Ramberg-Osgood\n\n       TAB1.'COURBE_RAMBERG' : objet de type EVOLUTION donnant la\n                                loi Ramberg-Osgood ajustee\n\n       TAB1.'AJUSTEMENT' : coefficient d'ajustement de la loi par \n                            regression lineaire (AJUSTEMENT = 1 \n                            ajustement parfait)",
  },
  {
    name: "RAVC",
    url: "RAVC",
    documentation:
      "$$$$ RAVC     NOTICE  CHAT      11/09/12    21:17:50     7124           \n                                             DATE     11/09/12\n                                             \n \n  Operateur RAVC                           Voir aussi :\n    --------------  \n    \n    \n\n\n    Objet :\n    _______\n\n   Cet operateur  est specifique a la procedure VITEUNIL\n    ",
  },
  {
    name: "RAY",
    url: "RAY",
    documentation:
      "$$$$ RAY      NOTICE  CHAT      11/09/12    21:17:51     7124           \n                                             DATE     11/09/12\n\n    Procedure RAY                            Voir aussi : NAVI\n    -------------                                                     \n                                                                                \n    SYNTAXE (EQEX et EXEC) : Cf operateur EQEX et EXEC\n    _______________\n\n  'ZONE' paroi 'OPER' RAY  TABRA 'INCO' 'TN'\n\n                                                                                \n\n                                                                                \n    OBJET :\n    ______\n\nProcedure permettant de prendre en compte du rayonnement (en cavite) dans\nles operateurs 'EQEX' & 'EXEC' (couplage convection-rayonnement);\nSe couple aux equations habituelles de Navier_Stokes (cf. conv_ray.dgibi)\n\n        EN 2D\n        elements lignes (SEG2 ou SEG3)    \n        EN 3D\n        elements coques (QUA4 ou TRI3)\n        \n     Commentaires :\n     ______________\n                                                                                \n\n     paroi    Objet MMODEL de type 'NAVIER_STOKES' associe a la\n              surface \n\n     TABRA    table propre au rayonnement\n     \n     TN       Champ de temperature (en K)      CHPOINT SCAL SOMMET\n\n\n tabra . ma_rai = maillage rayonnement\n tabra . mm_rai = modele rayonnement  (de type rayonnement)\n tabra . mr_rai = chamelem (issu de l'operateur rayonnement)\n ",
  },
  {
    name: "RAYE",
    url: "RAYE",
    documentation:
      "$$$$ RAYE     NOTICE  CHAT      11/09/12    21:17:50     7124           \n                                             DATE     11/09/12\n\n     Operateur RAYE                          Voir aussi : MODE FFOR RAYN\n     --------------                                                HRCAV CAV HRC  \n \n      CH2 = RAYE  MODL1   CHAM1 CHAM2  ;\n  ou\n      CH2 = RAYE  MODL1   CHAM1 CHAM2 CHAM3  (PREC) ('TABS' VAL);\n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n\n     Cet operateur intervient dans la modelisation du rayonnement\n  thermique  dans une cavite contenant un milieu transparent\n  ou un milieu absorbant a temperature uniforme.\n     Il calcule:\n - soit la matrice de rayonnement R telle que:\n                    Phi = R.T**4\n - soit la temperature de rayonnement Trad associee a la valeur\n   du champ de temperature T pour une iteration donnee telle que\n             Phi = emis * stefan * (T**4 - Trad**4)\n\n            (Phi: flux rayonne, emis: emissivite)\n\n     Commentaire :                                                       \n     _____________                                                       \n                                                                         \n     MODL1 : structure modelisee (type MMODEL)\n\n     CHAM1 : matrice des facteurs de forme (type MCHAML)\n\n     CHAM2 : champ d'emissivite (type MCHAML)\n\n     CHAM3 : champ de temperature (type MCHAML)\n\n     PREC  : precision relative du calcul de la radiosite\n             par une methode iterative (type flottant)\n             (valeur par defaut 1e-10)\n\n     'TABS': mot-cle necessaire si la cavite contient\n             un milieu absorbant a temperature uniforme\n\n     VAL   : temperature du milieu absorbant (type flottant)\n             en degre K\n\n     CH2   : matrice de rayonnement (type MCHAML)\n             ou bien champ de temperature (type MCHAML)",
  },
  {
    name: "RAYN",
    url: "RAYN",
    documentation:
      '$$$$ RAYN     NOTICE  CHAT      11/09/12    21:17:51     7124           \n                                             DATE     11/09/12\n\n     Operateur RAYN                          Voir aussi : MODE FFOR\n     --------------                                       RAYE  \n      CH2 = RAYN  MODL1  CHAM1 CHAM2 (STEF) ;\n                                                                         \n\n     Objet :                                                             \n     _______                                                             \n\n     Cet operateur calcule la matrice de "conductivite" correspondant\n a la linearisation du rayonnement en milieu transparent dans une\n cavite.\n\n     Commentaire :                                                       \n     _____________                                                       \n                                                                         \n     MODL1 : structure modelisee (type MMODEL)\n\n     CHAM1 : matrice de rayonnement (type MCHAML)\n\n     CHAM2 : champ de temperature (type MCHAML)\n\n     CH2   : matrice de conductivite (type RIGIDITE)\n\n     STEF  : constante de Stefan-Boltzmann (par defaut 5.67e-8 Wm-2K-4)\n             (type FLOTTANT)\n                                                                         \n     Remarque importante:\n     -------------------\n     L\'unite de la temperature est obligatoirement le degre Kelvin.',
  },
  {
    name: "RDIV",
    url: "RDIV",
    documentation:
      "$$$$ RDIV     NOTICE  CHAT      11/09/12    21:17:52     7124           \n                                             DATE     11/09/12\n\n  Procedure RDIV                           Voir aussi :\n    --------------  \n    SYNTAXE ( EQEX ) : Cf operateur EQEX\n    _________________\n\n     'OPER' 'RDIV' 'U0'       'INCO' 'UN'\n                                                                                \n                                          \n\n                   \n    OBJET :\n    -----\n                                                                                \n   Calcule le champ de vitesse U a divergence nulle et minimisant l'ecart\n ||U - U0||.\n                 \n                \n                      \n    Commentaires\n    ____________\n                                                                                \n                                                                                \n                                                                                \n    U0     Champ de vitesse ne verifiant pas DIV (U0) = 0\n           CHPOINT VECT CENTRE ou MOT\n                                                                                \n                                                                                \n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.",
  },
  {
    name: "REAC",
    url: "REAC",
    documentation:
      "$$$$ REAC     NOTICE  CHAT      11/09/12    21:17:52     7124           \n                                             DATE     11/09/12\n\n    Operateur REAC                           Voir aussi : BLOQ ANTI\n    --------------                                        RELA     RESO  \n                                                          SYMT  \n    | CHPO2 |  =  REAC  RIG1 | CHPO1 | ;\n    | TAB2  |                | TAB1  |\n     ( TAB4 = )              | TAB3  |\n\n\n    Objet :\n    _______\n\n    L'operateur REACTION construit a partir de la solution CHPO1 d'un\nsysteme lineaire, sur le premier membre duquel ont ete imposees des\nconditions, la variation du second membre permettant de verifier\nces conditions.\n\n    Commentaire :\n    _____________\n\n    RIG1  : objet contenant entre autres des conditions imposees (type\n            RIGIDITE)\n\n    CHPO1 : champ solution (obtenu par exemple par RESOU)\n            (type CHPOINT).\n\n    TAB1  : objet TABLE definissant les modes, les pseudo-modes, ...\n                - de sous-type BASE_MODALE, ou\n                - de sous-type ENSEMBLE_DE_BASES.\n       \n    CHPO2 : champ d'actions resultat (type CHPOINT) de nature discrete\n            necessaire a la verification des conditions imposees.\n\n    TAB2  : meme structure que TAB1, mais completee a l'indice\n              'REACTION_MODALE' pour les modes\n              'REACTION' pour les pseudo-modes,\n            par le champ d'actions resultat (type CHPOINT)\n\n    TAB3  : objet TABLE de sous-type 'LIAISONS_STATIQUES' \n            (TAB4 optionnel). Doit comporter des indices de type\n            ENTIER pointant sur des tables (type TABLE). Celles-ci\n            doivent comporter un indice 'DEFORMEE', type CHPOINT\n            et sont completees par un indice 'REACTION', type CHPOINT\n\n    Exemple :\n    _________\n\n    Soit RIG1 la matrice de rigidite d'une structure, BLO1 l'objet\ncontenant les blocages et relations, FORC1 un champ de forces externes,\nle champ de deplacements de la structure est obtenu par :\n\n             DEP1 = RESOU  ( RIG1 ET BLO1 ) FORC1 ;\n\n    On obtient les reactions aux appuis par :\n\n             CHPO1 = REAC  BLO1 DEP1 ;\n\n    Remarque :\n    __________\n\n    Si RIG1 ne contient pas de matrices elementaires associees a\ndes conditions imposees, on cree un champ CHPO2 vide.",
  },
  {
    name: "RECENTRE",
    url: "RECENTRE",
    documentation:
      "$$$$ RECENTRE NOTICE  CHAT      11/09/12    21:17:53     7124           \n                                             DATE     11/09/12\n                                               \n   Procedure RECENTRE                        Voir aussi : DARCYSAT\n   ------------------  \n    CHP2 = RECENTRE CHP1 MODELE NIV\n                                               \n\n    Objet :\n    _______\n\n    Procedure interne appelee par DARCYSAT\n    \n    prend un champ point centre CHP1, et\n      - si le mot niv = 'CENTRE', ne fait rien,\n      - si le mot niv = 'MSOMMET'  , fait la moyenne au centre\n      - si le mot niv = 'FACE'  (en EFMH) , fait la moyenne au centre a l'aide d\n\n    Retourne le champ-point (re)centre CHP2.\n    S'appuie sur le modele.",
  },
  {
    name: "RECO",
    url: "RECO",
    documentation:
      "$$$$ RECO     NOTICE  BP208322  20/02/20    21:15:01     10528          \n                                             DATE     20/02/20\n                                             \n    Operateur RECO                           Voir aussi : PJBA \n    --------------                                        EVOL 'RECO'  \n\n\n    CHPO2  =  RECO  CHPO1 | TBAS1 (TLIA1) ;\n                          | MOD1 CAR1 ;\n                          | BASE1 (CHAR1 XLIAI TEMPS) TYPE ;\n\n    CHPO2  =  RECO  TPASA | TBAS1 (TLIA1)        | TEMPS TYPE ;\n                          | MOD1 CAR1            | \n                          | BASE1 (CHAR1 XLIAI ) |\n\n    CHPO2  =  RECO  TDYNE  TBAS2 (CHAR1 TLIAI) TEMPS TYPE ;\n    \n    LCHPO2 =  RECO  LCHPO1 TBAS1 NMOD1 ;\n\n\n    Objet :\n    _______\n    \n    L'operateur RECO recombine un (ou plusieurs) CHPOINT(s) sur base\n    \"physique\" a partir des contributions modales q contenues dans un\n    (ou plusieurs) CHPOINT(s) ou dans une TABLE de resultats (PASAPAS\n    ou DYNE) et des modes X et solutions statiques Y constituant une \n    base.\n    Autrement dit, il calcule :\n         u(t) = [ X Y ] * q(t)\n    \n    Les deformees modales doivent avoir le meme maillage support (les\n    memes points avec le meme ordre) et les memes noms de composantes \n    dans le meme ordre.\n    \n\n    Commentaire :\n    _____________\n\n  - q(t) fourni sous la forme :  \n  \n    CHPO1  : Contributions modales (type CHPOINT)    \n    LCHPO1 : Evolution temporelle des contributions modales (type\n             LISTCHPO)    \n    TDYNE  : Objet TABLE de sous-type RESULTAT_DYNE        \n    TPASA  : Objet TABLE de sous-type PASAPAS\n\n  - X et Y fournis sous la forme :\n  \n    TBAS1  : Objet TABLE de sous-type BASE_MODALE \n    NMOD1  : ENTIER indiquant le nombre de modes retenus pour effectuer\n             la recombinaison modale (par defaut : tous les modes)            \n    TLIA1  : Objet TABLE de sous-type LIAISONS_STATIQUES             \n    TBAS2  : Objet TABLE definissant les modes, les pseudo-modes...\n             de sous-type BASE_MODALE ou ENSEMBLE_DE_BASES                 \n    BASE1  : Objet BASE MODALE elementaire (la procedure de declaration\n             d'une base elementaire figure au chapitre BASE)\n    MOD1   : Objet MMODEL decrivant la base modale\n    CAR1   : Objet MCHAML decrivant les proprietes de la base\n    \n  - options de sortie :\n  \n    TEMPS  : Temps ou on demande la recombinaison (type FLOTTANT)     \n    TYPE   : Type de la variable (type MOT) choisi parmi:\n             'DEPL', 'VITE', 'ACCE', 'CONT', 'REAC'\n              - pour recombiner les contraintes: le TYPE est 'CONT'\n                et le resultat est un objet de type MCHAML\n              - pour les autres TYPEs, le resultat est un CHPOINT\n              - l'option REAC ne fonctionne que si l'on a donne la\n                base modale sous forme d'une TABLE\n                \n  - u(t) obtenus sous la forme :\n  \n    CHPO2  : Grandeur reconstruite sur base physique a l'instant\n             demande (type CHPOINT)                   \n    LCHPO2 : Evolution temporelle de la grandeur reconstruite sur base\n             physique, aux memes instants que LCHPO1 (type LISTCHPO)\n\n              \n  - si l'on veut tenir compte des pseudo-modes :\n    \n    CHAR1  : Objet definissant le chargement de la structure (type\n             CHARGEME). Les pseudo-modes ont ete calcules et doivent\n             etre dans la base.            \n    XLIAI  : Contributions modales definissant les forces de liaison\n             (type CHPOINT)            \n    TLIAI  : Table de liaison DYNE (type TABLE)",
  },
  {
    name: "RECOMPOM",
    url: "RECOMPOM",
    documentation:
      "$$$$ RECOMPOM NOTICE  MB234859  17/10/02    21:15:22     9577           \n                                             DATE     17/10/02\n\n    Procedure RECOMPOM                       Voir aussi : RECOMPOS LSQF\n    ------------------                                    NORMALIM   \n                                                          RESPOWNS  \n    N2 EVOL1_SIGN =RECOMPOM EVOL2_MRESI EVOL3_MDECO\n               FLOT1_DTIME (FLOT2_RESI  LREEL1_DECO TAB1);\n\n\n\n    Objet :\n    -------\n\n    La procedure RECOMPOM permet d'effectuer la recomposition\n    EVOL1_SIGN (comportant une courbe) d'un signal dont on connait\n    la decomposition en ondelette orthogonal sous forme de fonctions\n    de modulation EVOL3_MDECO (contenant N1 courbes) et d'une fonction\n    residu EVOL2_MRESI (contenant une courbes). FLOT1_DTIME indique\n    la periode echantillonnage associee a EVOL2_MRESI. Le signe des\n    coefficients en ondelette est genere de fa\u00e7on aleatoire. N2 indique\n    le nombre de niveaux de recomposition effectivement atteint.\n\n    Les fonctions EVOL3_MDECO et EVOL2_MRESI peuvent etre identifiees\n    en utilisant la procedure DECOMPOS, l'operateur LSQF.\n\n    les valeurs FLOT2_RESI et LREEL1_DECO peuvent etre determinees\n    avec la procedure NORMALIM ou calculees avec RESPOWNS.\n\n    La procedure RECOMPOM utilise la procedure RECOMPOS et l'operateur\n    PERT.\n\n    Options :\n    ---------\n\n    FLOT2_RESI  : FLOT2_RESI permet de ponderer EVOL2_MRESI. Defaut 1.\n\n    LREEL1_DECO : LREEL1_DECO, comportant N1 FLOTTANT permet de\n                  ponderer EVOL3_MDECO. Defaut 1. ... 1.\n\n    TAB1        : le contenu significatif de TAB1 est le suivant:\n\n    indice  type objet    commentaires\n             pointe\n\n\n     LREC   ENTIER       permet de specifier le nombre de niveaux\n                         de recomposition souhaite. Par defaut c'est\n                         le maximum, c'est-a-dire N1.\n\n     FORC   LOGIQUE      permet de forcer la recomposition suivant\n                         LREC au dela de N1 en ajoutant des niveaux\n                         nuls. Le defaut est FAUX (pas d'autorisation).\n\n     BORD   MOT          specifie les conditions de bord pour les\n                         calcul de correlation: 'SYME'(trique) ou\n                         'PADD'(ing) de zero. Le defaut est 'SYME'.\n\n     TYPE   MOT          permet de specifier le type d'ondelette\n                         orthogonale: 'MALL'(at) ou 'DAUB'echie.\n                         Le defaut est 'MALL'.\n\n     AMPL   FLOTTANT     introduit une perturbation aleatoire de\n                         type sinus/cosinus dans la determination\n                         des signaux en ondelette (operateur PERT).\n                         Par defaut AMPL est nul.\n\n     INIT   ENTIER       permet d'initialiser le generateur de\n                         nombre aleatoire. Par defaut on ne fait rien.\n\n     TINI   FLOTTANT     permet de preciser une borne inferieure\n                         de reconstruction du signal.\n\n     TFIN   FLOTTANT     permet de preciser une borne superieure\n                         de reconstruction du signal.",
  },
  {
    name: "RECOMPOS",
    url: "RECOMPOS",
    documentation:
      "$$$$ RECOMPOS NOTICE  MB234859  17/10/02    21:15:22     9577           \n                                             DATE     17/10/02\n\n    Procedure RECOMPOS                       Voir aussi : MULTIREC\n    ------------------                                     \n    N2 EVOL1_SIGN =RECOMPOS EVOL2_RESI EVOL3_DECO (TAB1);\n\n\n    Objet :\n    -------\n\n    La procedure RECOMPOS permet d'effectuer la recomposition\n    EVOL1_SIGN (comportant une courbe) d'un signal dont on\n    connait la decomposition en ondelette orthogonale EVOL3_DECO\n    (contenant N1 courbes) et le residu EVOL2_RESI (contenant une\n    courbes). L'entier N2 indique le nombre de niveaux de\n    recomposition effectivement atteint.\n\n    La procedure RECOMPOS utilise la procedure MULTIREC.\n\n    Options :\n    ---------\n\n    Le contenu significatif de TAB1 est le suivant:\n\n    indice  type objet    commentaires\n             pointe\n\n\n     LREC   ENTIER       permet de specifier le nombre de niveaux\n                         de recomposition souhaite. Par defaut c'est\n                         le maximum, c'est-a-dire N1.\n\n     FORC   LOGIQUE      permet de forcer la recomposition suivant\n                         LREC au dela de N1 en ajoutant des niveaux\n                         nuls. Le defaut est FAUX (pas d'autorisation).\n\n     BORD   MOT          specifie les conditions de bord pour les\n                         calcul de correlation: 'SYME'(trique) ou\n                         'PADD'(ing) de zero. Le defaut est 'SYME'.\n\n     TYPE   MOT          permet de specifier le type d'ondelette\n                         orthogonale: 'MALL'(at) ou 'DAUB'echie.\n                         Le defaut est 'MALL'.\n\n     TINI   FLOTTANT     permet de preciser une borne inferieure\n                         de reconstruction du signal.\n\n     TFIN   FLOTTANT     permet de preciser une borne superieure\n                         de reconstruction du signal.",
  },
  {
    name: "REDU",
    url: "REDU",
    documentation:
      "$$$$ REDU     NOTICE  PASCAL    17/09/07    21:15:04     9477           \n                                             DATE     17/09/07\n                                             \n  Operateur REDU                           Voir aussi :\n    --------------  \n      OBJET3 = REDU ('STRI') OBJET1  OBJET2  ;\n\n\n    Objet :\n    _______\n\n    L'operateur REDU reduit :\n\n          - un champ par points aux points d'un maillage donne.\n          - un champ par points aux valeurs non nulles d'un CHPOINT.\n          - un champ par elements aux elements d'un maillage donne.\n          - un champ par elements a l'objet MMODEL donne.\n          - un objet MMODEL a un maillage donne.\n          - un objet NUAGE a des composantes donnees.\n          - un objet RIGIDITE aux elements d'un maillage donne\n          - objet ESCLAVE de champ par elements a l'objet MMODEL donne\n          - un MMODEL de contact aux elements qui risquent d'etre actifs\n          \n      Commentaire :\n      _____________\n\n      Types possibles :\n      _________________\n\n      ----------------------------------------------------\n      |     OBJET1     |     OBJET2      |     OBJET3    |\na     ----------------------------------------------------\n      |    CHPOINT     |    MAILLAGE     |    CHPOINT    |\n      |    CHPOINT     |     POINT       |    CHPOINT    |\n      |    CHPOINT     |    CHPOINT      |    CHPOINT    |\n      |     MCHAML     |    MAILLAGE     |     MCHAML    |\n      |     MCHAML     |     MMODEL      |     MCHAML    |\n      |     MMODEL     |    MAILLAGE     |     MMODEL    |\n      |     NUAGE      |  MOT1,MOT2...   |     NUAGE     |\n      |   RIGIDITE     |    MAILLAGE     |  RIGIDITE     | \n      | TABLE (esclave)|     MMODEL      |     MCHAML    |\n      |    MMODEL      |   'CONTACT'     |     MMODEL    |\n      ----------------------------------------------------\n\n\n    Remarque 1 : modele de MELANGE\n    ______________________________\n\n\n    En cas de reduction  d'un MCHAML sur un MMODEL de MELANGE, le\n    mot-cle STRICT indique de ne garder que les composantes portant\n    sur le melange.\n\n    En cas de reduction  d'un MCHAML ou d'un MMODEL\n    sur un maillage :\n\n     - ce maillage doit etre constitue d'elements du meme type que le\n       maillage support du MCHAML ou du MMODEL.\n\n     - tous les elements du maillage doivent etre inclus dans le\n       maillage support du MCHAML, ou du MMODEL.\n\n\n    Remarque 2 : TYPE des MCHAML\n    ____________________________\n\n\n    REDU verifie le type des MCHAML et le corrige au besoin.\n    Les types consid\u00e9r\u00e9s par REDU sont les suivants :\n\n      - DEPLACEMENTS\n      - FORCES\n      - TEMPERATURE\n      - GRADIENT\n      - DEFORMATIONS\n      - CONTRAINTES\n      - CONTRAINTES PRINCIPALES\n      - DEFORMATIONS INELASTIQUES\n      - VARIABLES INTERNES\n      - CARACTERISTIQUES\n      - GRADIENT DE FLEXION\n      - SCALAIRE\n      - MATRICE DE HOOKE\n      - MATRICE DE RAYONNEMENT\n\n    Le type d'un MCHAML est d\u00e9fini par ses composantes.  S'il\n    possede au moins une composante d'un type connu et aucune\n    composante d'un autre type, alors son type est celui de la\n    composante identifiee. Par exemple, s'il possede un nom de\n    composante de CONTRAINTES, alors il est type CONTRAINTES.\n\n    Le type des MCHAML sert de precondionnement a certains\n    operateurs.\n\n    Toutefois LE TYPE DES MCHAML N'EST PAS UNE DONNEE OBLIGATOIRE.\n\n ",
  },
  {
    name: "REFE",
    url: "REFE",
    documentation:
      "$$$$ REFE     NOTICE  CHAT      11/09/12    21:17:54     7124           \n                                             DATE     11/09/12\n\n  Operateur REFE                          Voir aussi :\n     --------------  \n\n\n\n     OBJET : Lister les objets maillages inclus au sens des noeuds dans\n     -----   un autre ou indiquer si un objet maillage est inclus dans\n             un autre.\n\n     SYNTAXE 1 : LOBI =  REFE OBJ2 ;\n     -------\n                 LOBI : objet LISTMOTS contenant la liste\n\n\n\n     SYNTAXE 2 : LOGI = OBJ1 REFE OBJ2 ;\n     -------\n                 LOGI : objet de type LOGIQUE prenant les valeurs VRAI\n                        ou FAUX suivant que OBJ1 est inclus ou non dans\n                        OBJ2",
  },
  {
    name: "REGE",
    url: "REGE",
    documentation:
      "$$$$ REGE     NOTICE  BP208322  13/02/05    21:15:08     7693           \n                                             DATE     13/02/05\n                                             \n  Operateur REGENERER                      Voir aussi :\n    -------------------  \n    GEO1 = REGE  GEO2 ('VERI');\n\n\n    Objet :\n    _______\n\n    Certaines situations conduisent a creer des elements ayant des\nnoeuds spatialement confondus. Il peut etre interessant de les remplacer\npar des elements ou les noeuds doubles n'apparaissent qu'une fois, par\nexemple triangle pour quadrangle, prisme pour cube.\n\n    L'operation se fait en deux temps:\n\nIl faut d'abord fusionner les noeuds confondus par l'utilisation de\nl'operateur ELIMINATION, puis transformer les elements les contenant\npar l'utilisation de l'operateur REGENERER.\n\n    Commentaire :\n    _____________\n\n    GEO2 : geometrie a regenerer (type MAILLAGE)\n\n    GEO1 : geometrie resultat (type MAILLAGE)\n    \n    VERI : mot cl\u00e9 indiquant que l'on souhaite verifier que le maillage\n           finale ne comporte pas de noeud double (avertissement sinon)\n\n    Exemple :\n    _________\n\n    OPTI  ELEM QUA4 DIME 2;\n    POIN1 = 0 0 ; POIN2 = 5 0;\n    LIG1  =  POIN1 DROI 5 POIN2;\n    SURF1 = LIG1 ROTA 5 90.  ( 0.001 0.) ;\n    ELIM SURF1 0.05 ;\n    TRIQUA1 = REGENERER SURF1 ;\n\n     Remarque :\n     __________\n\n     Sont actuellement prevus les passages suivants :\n\n                SEG2  --->  POI1\n                SEG3  --->  SEG2\n                TRI3  --->  SEG2\n                TRI4  --->  SEG2\n                QUA4  --->  TRI3\n                QUA5  --->  TRI3\n                TRI6  --->  SEG3\n                TRI7  --->  SEG3\n                QUA8  --->  TRI6\n                QUA9  --->  TRI6\n                CUB8  --->  PRI6\n                CU20  --->  PR15",
  },
  {
    name: "REGL",
    url: "REGL",
    documentation:
      "$$$$ REGL     NOTICE  CB215821  15/12/04    21:15:19     8724           \n                                             DATE     15/12/04\n                                             \n    Operateur REGLER                         Voir aussi : TRAN DALL\n    ----------------                                      ROTA SURF GENE  \n    SURF1 = LIG1  REGLER  (N1) ('DINI' DENS1) ('DFIN' DENS2) LIG2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur REGLER construit la surface reglee s'appuyant sur les\nlignes LIG1 et LIG2. Ces deux lignes doivent etre de meme type,\navoir le meme nombre d'elements et etre decrites dans le meme sens.\n\n    Commentaire :\n    _____________\n\n    LIG1 |  : lignes sur lesquelles s'appuie la surface a generer\n    LIG2 |    (type MAILLAGE)\n\n    N1      : nombre de couches d'elements generees (type ENTIER)\n\n    DENS1 | : densites associees aux lignes LIG1 et LIG2 (type FLOTTANT)\n    DENS2 |\n\n    Remarque :\n    __________\n\n    Si N1 est specifie, N1 est le nombre de couches d'elements engendree\ndans l'operation.\n\n    Si N1 n'est pas specifie, ce nombre est calcule en fonction des\ndensites utilisees.\n\n    Si N1 est negatif, N1 couches seront engendrees et leurs epaisseurs\nseront calculees en tenant compte des densites des extremites.\n\n    Si les densites associees aux lignes LIG1 et LIG2 ne sont pas\ncorrectes, il est possible de les surcharger. Pour la densite initiale,\nil faut donner la bonne valeur derriere le mot-cle 'DINI' et, pour la\nfinale, derriere le mot-cle 'DFIN'.\n\n    Si LIG1 est une surface, l'operation s'applique au cote 3 de cette\nsurface, s'il existe, et le resultat est la surface initiale augmentee\nde celle que l'on cree.\n\n    Si LIG2 est une surface, l'operation s'applique au cote 1 de cette\nsurface s'il existe, et le resultat est la surface initiale precedee\nde celle que l'on cree.",
  },
  {
    name: "RELA",
    url: "RELA",
    documentation:
      "$$$$ RELA     NOTICE  PV        20/12/16    21:15:06     10802          \n                                             DATE     20/12/16\n\n    Operateur RELA     Voir aussi : BLOQ REAC DEPI\n    --------------                  SYMT   RESO  \n                                    ANTI   COLLER  \n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Definir une relation lineaire entre des inconnues\n    1.1 Relation definie entre deux maillages\n    1.2 Relation definie par un champ par point (CHPOINT)\n    1.3 Relation definie par un modele (MMODEL)\n    1.4 Option CORI : relation de mouvement de corps rigide\n    1.5 Option ENSE : relation de mouvement d'ensemble\n    1.6 Option ACCRO : accrochage de deux maillages\n    1.7 Option GLISSANT : relation de glissement entre deux maillages\n    1.8 Option MILI : lier des noeuds milieux a leurs noeuds sommets\n    1.9 Option TUYAU : lier la surface et la fibre neutre d'un tuyau\n2. Definir une liaison elementaire entre sous-structures\n\n  \n1. Definir une relation lineaire entre des inconnues1 \n==================================================== \n  \n1.1 Relation definie entre deux maillages \n----------------------------------------- \n   RIG1 = RELA  |      | (VAL1) | MOT1                     | GEO1 ...\n                |'MINI'|        | 'DEPL' |'DIRECTION' VEC1 |\n                |'MAXI'|        | 'ROTA' |                 |\n\n                |  +   | (VAL2) | MOT2                     | GEO2  ...\n                |  -   |        | 'DEPL' |'DIRECTION' VEC2 |\n                                | 'ROTA' |                 |\n\n    Objet :\n    _______\n\n    L'operateur RELATION permet de construire la raideur associee a une\nrelation lineaire entre les inconnues de noms MOTi ponderees par des\ncoefficients (eventuels) VAL1, VAL2 ..., des noeuds respectifs des\nmaillages GEO1, GEO2, (voir l'exemple ci-dessous) ...\n\n    Commentaire :\n    _____________\n\n    MOTi : noms des inconnues (type MOT)\n\n    VALi : coefficients de ponderation (type ENTIER ou FLOTTANT)\n\n    VECi : permet de mettre en relation le deplacement (mot-cle 'DEPL')\n           ou la rotation (mot-cle 'ROTA') dans la direction VEC1 (type\n           POINT)\n\n    GEOi : geometries (type MAILLAGE) constituees toutes du meme nombre\n           de noeuds ou d'un seul noeud.\n\n    RIG1 : objet resultat (type RIGIDITE)\n           a adjoindre a la rigidite de la structure pour la resolution\n\n    Remarque :\n    __________\n\n    L'operateur DEPIMP permet eventuellement d'imposer une valeur non\nnulle a la relation.\n\n    Si une geometrie ne contient qu'un seul noeud, il apparaitra dans toutes \nles relations balayant les noeuds respectifs des autres geometries.\n\n\n    La relation peut etre d'egalite ou d'inegalite (cas des relations\nunilaterales) en presence des mots-cles 'MINI' ou 'MAXI'.\n\n    Exemple :\n    _________\n\n    REL1 = RELA MINI 2.5 UX L1 - UY L2 + 3 UX L3 ;\n    JEU1 = DEPIMP REL1 0.3 ;\n\n  Ceci traduit les inegalites : \n\n   2.5*UX(noeud i de L1)-UY(noeud i de L2)+3*UX(noeud i de L3) >EG 0.3\n\n  pour i allant de 1 au nombre de noeuds de L1 (L2, L3, ... aussi)\n\n  \n1.2 Relation definie par un champ par point (CHPOINT) \n----------------------------------------------------- \n    RIG1 = RELA  | 'MAXI' |  CHPO1  ('DUAL' CHPO2);\n                 | 'MINI' |\n\n\n    Objet :\n    _______\n\n    L'operateur RELATION permet de construire la raideur associee a\nune relation lineaire entre les inconnues dont les noms sont ceux des\ncomposantes du champ par points CHPO1 (type CHPOINT) aux points qui\nsont ceux du champ et ponderees par les valeurs du champ en ces\npoints.\n\n    La relation peut etre d'egalite ou d'inegalite (cas des relations\nunilaterales) en presence des mots-cles 'MINI' ou 'MAXI'.\n\n    Si le mot cle DUAL est indique, il faut fournir un champ (type CHAMPOINT)\ndecrivant les reactions sur la relation. Sinon, c'est la transposee de la\nrelation qui est utilisee Pour pouvoir traiter l'aspect unilateral,\nil faut prendre soin de la direction du champ de reactions.\n\n\n  \n1.3 Relation definie par un modele (MMODEL) \n------------------------------------------- \n    RIG1 = RELA  MOD1  ;\n\n\n    Objet :\n    _______\n\n    L'operateur RELATION permet de construire la raideur associee a une\nrelation lineaire entre inconnues, contenue dans un objet MMODEL.\n\n\nCommentaire :\n    _____________\n\n    MOD1 : Objet MMODEL a partir duquel on va construire la raideur.\n \n           Si MOD1 contient des sous-zones X-FEM on va construire les \n           blocages mettant a zero les ddl non actifs.  \n           \n           SI MOD1 contient des sous-zones de SURE on va construire les \n           relation lin\u00e9aires associ\u00e9es.\n\n           Sinon on sort une raideur vide.\n\n  \n1.4 Option CORI : relation de mouvement de corps rigide \n------------------------------------------------------- \n    RIG1 = RELA  'CORI' 'DEPL' | ('NOVERIF') GEO1 ;\n                               |\n                               | 'ROTA' GEO1 (GEO2) ;\n\n    Objet :\n    _______\n\n    L'option 'CORI' de l'operateur RELA permet de construire la raideur\nRIG1 (type RIGIDITE) associee a un mouvement de corps rigide,au premier\nordre pour une geometrie :\n\n   En l'absence du mot cle 'ROTA' le mouvement de corps rigide pour\nl'objet GEO1 (type MAILLAGE) est assure en imposant que la distance\nentre les noeuds reste constante. Pour cela il faut au moins 4 points\nnon-coplanaires en 3D et 3 points non-alignes en 2D (si ce n'est pas\nle cas utiliser le mot 'NOVERIF' avec le risque de ne pas avoir le\nresultat souhaite). Cette option est a utiliser quand les rotations ne\nsont pas considerees commes des DDL.\n  En presence du mot cle 'ROTA' le mouvement de corps rigide est assure\nen imposant que les DDL des noeuds de GEO1 (type MAILLAGE ou POINT avec\ndes DDL de rotation) et de GEO2 (type MAILLAGE sans DDL de rotation /\nfacultatif) soient les elements de reduction du meme distributeur defini\na partir des deplacements et rotations d'un point maitre de GEO1.\n\n  \n1.5 Option ENSE : relation de mouvement d'ensemble \n-------------------------------------------------- \n    RIG1 = RELA  'ENSE' MOT1 GEO1 ;\n\n    Objet :\n    _______\n\n    L'option 'ENSE' de l'operateur RELA permet de construire la raideur\nRIG1 (type RIGIDITE) associee a un mouvement d'ensemble : la valeur\nsur le degre de liberte MOT1 (type MOT) est imposee egale pour tous les\nnoeuds de GEO1 (type MAILLAGE).\n\n  \n1.6 Option ACCRO : accrochage de deux maillages \n----------------------------------------------- \n  RIG1 = RELA  GEO1  'ACCRO'  GEO2  ( LMOTS )  (FLOT1) ;\n  \n  RIG1 = RELA  'ACCRO' 'FORT' MODL2 | GEO1  ;\n                                    | MODL1 ;\n  \n    Objet :\n    _______ \n    L'option  'ACCRO' permet de construire la raideur associee a \n    l'accrochage du maillage GEO1  sur le maillage GEO2. Tout point \n    de GEO1 est assujeti a  suivre une combinaison lineaire  des\n    deplacements des noeuds de l'element de GEO2 dans lequel il se \n    trouve. \n    \n    Eventuellemnt LMOTS  (type LISTMOTS) donne la liste des DDL \n    concernes. Par defaut ce sont ceux de la mecanique ,\n   ( 2D : UX UY ou UR UZ si mode  axisymetrique  ,\n    3D : UX UY UZ  )   \n            \n    FLOT1 optionnel critere de rattrapage de points legerement\n    en dehors du mailage GEO1 ( defaut 1.E-5 ..Attention , ne pas \n    l'augmenter exagerement ) \n\n    Avec le mot-cle FORT, les noeuds de GEO1 (ou du modele MODL1) sont\n    accroches aux elements du modele MODL2. Cet accrochage tient compte\n    du possible enrichissement XFEM (saut + pointe de fissure) de MODL2.\n    \n    NOTA: cette operation peut etre longue , si possible ne pas demander\n    d'accrocher des points manifestement hors de GEO2 \n  \n  \n1.7 Option GLISSANT : relation de glissement entre deux maillages \n----------------------------------------------------------------- \n  RIG1 = RELA  GEO1  'GLISSANT'   GEO2  ( LMOTS )  (FLOT1) ;\n  \n    Objet :\n    _______ \n    L'option  'GLISS' permet de construire la raideur associee a \n    l'accrochage du maillage GEO1  sur le maillage GEO2. GEO1 doit \n    etre compose de seg2 et/ou de seg3.\n    Tout point de GEO1 peut glisser dans la direction de l'element \n    de GEO1 qui le contient et est assujeti a  suivre une combinaison\n    lineaire  des deplacements des noeuds de l'element de GEO2,\n    ou il se trouve, dans les directions perpendiculaires.\n            \n    FLOT1 optionnel critere de rattrapage de points legerement\n    en dehors du mailage GEO1 ( defaut 1.E-5 ..Attention , ne pas \n    l'augmenter exagerement ) \n    \n    NOTA cette operation peut etre longue , si possible ne pas demander\n    d'accrocher des points manifestement hors de GEO2 \n  \n  \n1.8 Option MILI : lier des noeuds milieux a leurs noeuds sommets \n---------------------------------------------------------------- \n  RIG1 = RELA  MILI (LISMOT1) GEO1 ;\n  \n    Objet :\n    _______ \n\n    L'option MILIeu permet de relier lineairement les DDL des noeuds\n    milieux d'un maillage quadratique (GEO1) aux noeuds sommets. Les DDL\n    concernes sont donnes par le LISTMOTS. Par defaut, on considere les\n    DDL de la mecanique.\n\n    REMARQUE : Cette option permet de modeliser des problemes de contact\n    en utilisant des elements quadratiques. En reliant les deplacements\n    des noeuds milieux de la surface de contact aux noeuds sommets, on\n    assure une description de la cinematique des noeuds de cette surface\n    compatible avec celle du maillage de contact (elements lineaires).\n\n  \n1.9 Option TUYAU : lier la surface et la fibre neutre d'un tuyau \n---------------------------------------------------------------- \n  RIG1 = RELA  TUYA  GEOM1  GEOM2  CRIT;\n  \n\n    En Supposant un fluide dans une tuyauterie ( GEOM1 compose de seg2 \n    ou seg3) pour lequel la temperature est constante par section cet  \n    operateur imposera l'egalite de temperature de chaque point de GEOM2 \n    avec son point projete sur la tuyauterie. La distance entre un point \n    et son projete  sur la ligne doit etre inferieur \\E0 CRIT.\n    \n  \n2. Definir une liaison elementaire entre sous-structures \n======================================================== \n \n    ATTA1 = RELA   ELSTR1  MOT1  LREEL1\n                   BLSTR1  'LX'  LREEL2\n                    ....   ...    ....      ;\n\n    L'operateur RELA decrit une liaison elementaire entre une (ou des)\nsous-structure(s).\nIl cree un objet ATTA1 de type ATTACHE.\n\n    Commentaire :\n    _____________\n\n\n    ELSTR1  : objet de type ELEMSTRU fabrique par l'operateur ELST\n\n    MOT1    : composante du (ou des) point(s) d'ELSTR1\n\n    LREEL1  : valeurs des coefficients appliques a chaque point\n              d'ELSTR1 (type LISTREEL)\n              S'il n'y a qu'un point dans ELSTR1, on peut donner un\n              nombre FLOTTANT.\n\n    BLSTR1  : objet de type BLOQSTRU fabrique par l'operateur CLST\n\n    'LX'    : composante obligatoire pour un blocage\n\n    LREEL2  : valeurs des coefficients appliques aux points crees\n              lors du blocage par l'operateur BLOQUE (type LISTREEL)",
  },
  {
    name: "REMA",
    url: "REMA",
    documentation:
      "$$$$ REMA     NOTICE  GOUNAND   21/04/09    21:15:07     10945          \n                                             DATE     21/04/09\n\n    Operateur REMA (REMAiller)              Voir aussi : TRIA\n    --------------------------                           RAFT  \n    MAIL1 (METR1) =  'REMA' MAIL2 (MAIL3) (METR2) ...\n\n                           ... | ('AJNO') | ('IPOL') (TAB1) ;\n                               |  'NOAJ'  |\n\n    Objet :\n    _______\n\n    Cet operateur remaille un maillage de simplex (triangles ou\n    tetraedres) de maniere anisotrope par un algorithme de maillage\n    topologique du a T. Coupez et al.\n\n    Commentaire :\n    _____________\n\n      MAIL1 : maillage genere (type MAILLAGE)\n\n      METR1 : si le mot-cle 'IPOL' est donne, METR1 (type CHPOINT) est\n              la metrique interpolee sur le nouveau maillage MAIL1\n\n      MAIL2 : maillage a optimiser (type MAILLAGE)\n\n      MAIL3 : partie du bord de MAIL2 que le mailleur ne doit pas\n              modifier (par defaut le mailleur peut retirer ou ajouter\n              des noeuds sur les parties planes du bord de MAIL2)\n\n      METR2 : objet de type FLOTTANT ou CHPOINT               \n              Si METR2 est de type FLOTTANT, il s'agit de la taille\n              d'arete voulue (densite)\n              Si METR2 est de type CHPOINT, il s'agit de l'inverse\n              de la metrique voulue (unite : longueur^-2)\n\n      TAB1  : objet optionnel de type TABLE dont les indices sont des\n              parametres d'entree ou de sortie du mailleur\n              (voir notice MAILTOPO pour plus de details)\n\n    Remarques :\n    ___________\n\n     1) Si la metrique voulue est isotrope, le nom de composante est G.\n        Si la metrique voulue est anisotrope, les noms des composantes\n        sont :  G11, G21, G22, (G31, G32, G33 en 3D)\n        \n     2) Si le mot-clef 'AJNO' (par defaut) est donne, le mailleur peut\n        generer de nouveaux noeuds.\n        Si le mot-clef 'NOAJ' est donne, le mailleur ne genere pas de\n        nouveaux noeuds.\n    ",
  },
  {
    name: "REMP",
    url: "REMP",
    documentation:
      "$$$$ REMP     NOTICE  JC220346  19/12/29    21:15:06     10441          \n                                             DATE     19/12/29\n\n    Directive/operateur REMPLACER            Voir aussi : INSE\n    -----------------------------                         ENLE  \n    REMPLACER OBJET1 INDIC1 OBJET2 ;\n    \n    MOT2 = REMPLACER MOT1 INDIC1 OBJET2 ;\n\n\n    Objet :\n    _______\n\n    La directive REMPLACER remplace l'element de position INDIC1 dans\n    l'objet OBJET1 par l'objet OBJET2.\n\n\n    Si INDIC1 est un objet LISTENTI, on remplace successivement les\n    indices voulus de OBJET1 par :\n\n     - la meme valeur \u00e0 chaque fois, si OBJET2 n'est pas une liste.\n\n     - des valeurs definies individuellement, si OBJET2 est une liste\n       de meme longueur que INDIC1.\n       \n    Dans le cas ou OBJET1 est de type MOT, REMPLACER devient un\n    operateur (le resultat est renvoye dans un nouvel objet MOT2).\n\n\n    Operations possibles :\n    ______________________\n\n    ----------------------------------------------\n    |    OBJET1    |   INDIC1     |    OBJET2    |\n    ----------------------------------------------\n    |   MOT        |   MOT        |   MOT        |\n    |   MOT        |   LISTMOTS   |   LISTMOTS   |\n    ----------------------------------------------\n    |   LISTREEL   |   ENTIER     |   FLOTTANT   |\n    |   LISTENTI   |   ENTIER     |   ENTIER     |\n    |   LISTMOTS   |   ENTIER     |   MOT        |\n    |   LISTCHPO   |   ENTIER     |   CHPOINT    |\n    ----------------------------------------------\n    |   LISTREEL   |   LISTENTI   |   FLOTTANT   |\n    |   LISTENTI   |   LISTENTI   |   ENTIER     |\n    |   LISTMOTS   |   LISTENTI   |   MOT        |\n    |   LISTCHPO   |   LISTENTI   |   CHPOINT    |\n    ----------------------------------------------\n    |   LISTREEL   |   LISTENTI   |   LISTREEL   |\n    |   LISTENTI   |   LISTENTI   |   LISTENTI   |\n    |   LISTMOTS   |   LISTENTI   |   LISTMOTS   |\n    |   LISTCHPO   |   LISTENTI   |   LISTCHPO   |\n    ----------------------------------------------\n \n \n ",
  },
  {
    name: "REPART",
    url: "REPART",
    documentation:
      "$$$$ REPART   NOTICE  CHAT      11/09/12    21:17:56     7124           \n                                             DATE     11/09/12\n                                             \n    Procedure REPART                         Voir aussi : NATAF FDENS\n    -----------------                                     FINVREPA     \n    FLO2 = REPART TAB1 FLO1;\n\n           TAB1 .  typva\n                . A\n                . B\n                . LAMBDA\n                . MU\n                . MOYENNE\n                . ECART_TYPE\n                . TAU\n                . K\n                . W\n                . MIN\n                . MAX\n                . U\n\n       FLO1 flottant.\n\n\n\n    Objet :\n    _______\n La procedure REPART calcule au point FLO1 la valeur de la fonction de\n  repartition de la variable aleatoire dont les caracteristique se trouvent\n  dans TAB1.\n    Donnees :\n    ---------\n\n  TAB1 . 'TYPVA' : chaine de caractere contenant le type de\n      la  variable aleatoire.\n     Les types disponibles sont :\n                                 'LOI_UNIFORME'\n                                 'LOI_DE_LAPLACE'\n                                 'LOI_NORMALE_STANDARD' (i.e. centree,reduite)\n                                 'LOI_EXPONENTIELLE'\n                                 'LOI_LOGNORMALE'\n                                 'LOI_NORMALE'\n                                 'LOI_WEIBULL_MIN'\n                                 'LOI_NORMALE_TRONQUEE'\n                                 'LOI_EXPONENTIELLE_TRONQUEE'\n                                 'LOI_GUMBEL_MAX'\n                                 'LOI_NORMALE_TRONQUEE_INF'\n                                 'LOI_DE_FRECHET'\n\n   Dans le cas de la loi uniforme :\n  TAB1 . 'A'\n  TAB1 . 'B' : sont les bornes de l'intervalle sur lequel\n        la variable est definie (A<B)\n\n   Dans le cas de la loi de Laplace :\n pas de parametre. La densite vaut : 0.5*exp( - |x|).\n\n   Dans le cas de la loi normale centree reduite (LOI_NORMALE_STANDARD) :\n pas de parametre. La densite vaut : exp(-0.5*x^2)/((2*pi)**0.5)\n\n   Dans le cas de la loi exponentielle :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut : lambda*exp(lambda*(mu - x)) si x >= mu \n                     0                          sinon\n\n   Dans le cas de la loi lognormale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi normale :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n\n   Dans le cas de la loi Weibull min :\n  TAB1 . 'TAU'\n  TAB1 . 'K'\n  TAB1 . 'W'\n  la densite vaut :\n   ((X-TAU)/(W-TAU))**(K-1) * K / (W - TAU) * (exp (- ((X-TAU)/(W-TAU))**K))\n\n   Dans le cas de la loi normale tronquee :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n  TAB1 . 'MIN'\n  TAB1 . 'MAX'\n Les deux premiers parametres \n sont la moyenne et l'ecart-type de la variable aleatoire.\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi exponentielle tronquee :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n     TAB1 . 'MIN'\n     TAB1 . 'MAX'\n MIN et MAX sont deux reels qui determinent l'intervalle de variation.\n\n   Dans le cas de la loi Gumbel max :\n     TAB1 . 'LAMBDA'\n     TAB1 . 'MU'\n  la densite vaut :\n lambda*exp(-lambda*(x-mu)-exp(-lambda*(x-mu)))\n\n   Dans le cas de la loi Normale tronquee inf :\n  TAB1 . 'MOYENNE'\n  TAB1 . 'ECART_TYPE'\n sont la moyenne et l'ecart-type de la variable aleatoire.\n  TAB1 . 'MIN'\n  est la borne inferieure des valeurs que peut prendre la variable\n   aleatoire.\n\n   Dans le cas de la loi de Frechet :\n  TAB1 . 'U'\n  TAB1 . 'K'\n  TAB1 . 'B'\n  la densite vaut :\n   ((u - b)/(x - b))**k * exp(- ((u - b)/(x - b))**k) * k / (x - b) ",
  },
  {
    name: "REPE",
    url: "REPE",
    documentation:
      "$$$$ REPE     NOTICE  JC220346  16/07/08    21:15:04     9008           \n                                             DATE     16/07/08\n\n    Directive REPETER                        Voir aussi : ITER QUIT\n    -----------------                                     FIN  \n    REPETER BLOC1 (N1) ;\n\n\n    Objet :\n    _______\n\n    L'objet BLOC1 (de type BLOC) est constitue de l'ensemble des\n    instructions comprises entre la directive REPETER BLOC1 et\n    la directive FIN BLOC1.\n\n    La directive REPETER permet de repeter N1 (type ENTIER) fois\n    l'execution de cet ensemble d'instructions.\n\n    Un objet ENTIER s'appelant &BLOC1 est incremente a chaque iteration\n    (compteur de la boucle valant 1 lors du premier passage).\n    \n    ATTENTION : seules les 7 premieres lettres du nom BLOC1 sont mises\n                derriere le caractere &.\n\n    \n    Remarque :\n    __________\n\n    Si N1 est specifie, il faut le mettre apres le nom de la boucle.\n    \n    Si N1 est nul, le code de la boucle n'est jamais execute.\n\n    Si N1 est negatif ou s'il n'est pas specifie, la repetition se fait\n    indefiniment.\n    \n    Il est possible dans tous les cas d'interrompre la repetition a\n    l'aide de la directive QUITTER. L'instruction ITERER permet quant\n    a elle de passer directement a l'iteration suivante, sans executer\n    le reste du code present jusqu'a la fin du bloc.\n\n    \n    Exemple :\n    _________\n    \n    \n    * Calcul de la constante d'Euler\n\n    I=0 ; CRIT= 1E-5; CRITM= CRIT*-1; C=0. ;\n    EPS1= 0 ; OK = FAUX ;\n\n    REPETER BLOTO 100 ;\n\n    I = I + 1; C = C + (1./ I) ;\n    EPS = C - (LOG I) ;\n    D = EPS - EPS1 ;\n\n    SI ( (D < CRIT) ET (D > CRITM) ) ;\n\n    OK = VRAI ;\n    MESS ' constante d'euler atteinte au bout de ' &BLOTO 'iterations';\n    QUITTER BLOTO ;\n\n    FINSI ;\n    EPS1 = EPS ;\n\n    FIN BLOTO ;\n\n    SI OK ;\n    LIST EPS ;\n    SINON ;\n    MESSAGE 'RATE' ;\n    FINSI ;\n    FIN;",
  },
  {
    name: "REPIX",
    url: "REPIX",
    documentation:
      '$$$$ REPIX    NOTICE  CHAT      11/09/12    21:17:57     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure REPIX                          Voir aussi :\n    ---------------  \n    REPIX TAB1 ;\n                                                                                \n\n    Objet :\n    _______\n                                                                                \n    Cette procedure "nettoie" la table TAB1 de sous type EQEX utilisee\nen mecanique des fluides.\n                                                                                \n    Commentaires :\n    ______________\n                                                                                \n    TAB1 : Table de sous type EQEX creee par l\'operateur EQEX.',
  },
  {
    name: "RESEAU",
    url: "RESEAU",
    documentation:
      "$$$$ RESEAU   NOTICE  MB234859  17/10/02    21:15:22     9577           \n                                             DATE     17/10/02\n\n    Procedure RESEAU                         Voir aussi : TRACTUFI\n    ----------------  \n\n    Objet :\n    _______\n\n    Cette procedure est appelee par la procedure TRACTUFI.",
  },
  {
    name: "RESI",
    url: "RESI",
    documentation:
      "$$$$ RESI     NOTICE  CHAT      11/09/12    21:17:57     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur RESI                           Voir aussi :\n    --------------  \n    RIG1 = RESI MOD1 MAT1;\n\n\n\n    Objet :\n    _______\n\n    L'operateur RESI construit la matrice de resistance d'un modele\n    'MAGNETODYNAMIQUE' avec une formulation 'POTENTIEL_VECTEUR'.\n\n    Commentaire :\n    _____________\n\n     MOD1  : nom du modele 'MAGNETODYNAMIQUE' (type MODELE)\n     MAT1  : champ de caracteristiques du materiau  (type MCHAML)\n     RIG1  : matrice de resistance (type RIGIDITE)",
  },
  {
    name: "RESO",
    url: "RESO",
    documentation:
      "$$$$ RESO     NOTICE  PV        20/05/12    21:15:10     10614          \n                                             DATE     20/05/12\n                                             \n  Operateur RESO                           Voir aussi :\n    --------------  \n CHPO1 (CHPO2 ..) = RESO RIG1 (PREC) CHPO3 (CHPO4..)\n ('NOID')('NOUNIL')('STAB')('ELIM' NBPASSE)('NOSTAB')('SOUC')\n (CHPOF) ('INIB' BLO1 LENTI1);\n\n (NB_MOD_RIG MAIL_CONTR) ... = ...  ('ENSE')          ;\n\n    LICHP2 = RESO RIG1 LICHP1 ;\n\n    (TAB2 = ) RESO RIG1 TAB1 ;\n\n    Objet :\n    _______\n\n    L'operateur RESO construit une solution, si elle existe, du systeme\nlineaire :   RIG1 CHPO1 = CHPO3 .\n    L'operateur RESO construit les solutions, si elles existent, \n  de chacun des systemes lineaire :   RIG1 CHPO1 = CHPO3 ,\n     CHPO1 pris dans LICHP1, ou dans TAB1, \n     CHPO3 range dans LICHP2, resp. TAB1 \n\n    Commentaire :\n    _____________\n\n    RIG1  : objet de type RIGIDITE.\n\n    CHPO3 : objet de type CHPOINT.\n\n    CHPO1 : objet de type CHPOINT dont les composantes sont les duales\n            de celles de CHPO3 par rapport a RIG1.\n\n    LICHP1, LICHP2 : objet de type LISTCHPO\n\n    TAB1 : objet de type TABLE, de sous-type 'LIAISONS_STATIQUES'\n           Les indices sont de type ENTIER, pointent sur des objets\n           TABLE, comportant les entrees\n           - 'BLOCAGE', type RIGIDITE\n           - 'FORCE', type CHPOINT, 2nd membre du systeme\n           et completes par\n           - 'DEFORMEE' type CHPOINT, solution du systeme\n           - 'POINT_REPERE', type POINT, associe au deplacement calcule\n     \n    TAB2 : type TABLE, optionnel\n\n    Remarque :\n    __________\n\n 1- En presence d'une famille de seconds membres CHPO3, CHPO4 ...,\nl'operateur RESO construit la famille de solutions CHPO1, CHPO2 ..\nrespectivement associee.\n\n 2- Si RIG1 contient des matrices issues de conditions unilaterales,\nRESO appelle la procedure UNILATER pour fournir une solution du systeme.\nSi il y a des matrices de frottement, il faut fournir le champ CHPOF\nde forces limite de frottement.\n\n 3- Les mots-cle 'NOID' et 'NOUNIL' sont utiles quand on emploie RESO a\n    l'interieur d'une procedure :\n\n      - 'NOID' desactive la v\u00c3\u00a9rificatin du residu ce qui autorise la\n      resolution du systeme avec comme second membre la restriction de \n      CHPO3, (CHPO4 ..) a l'espace cible de RIG1.\n\n\n      - 'NOUNIL' permet de resoudre le systeme en ignorant le caractere\n        eventuellement unilateral de RIG1.\n\n      - 'INIB' BLO1 LENTI1 permet dans le cas de contact d'indiquer un\n        etat de contact initial. Voir la procedure UNILATER.\n\n 4- Le mot cle 'STAB' fait utiliser pour la resolution un operateur \n    rendu positif par augmentation diagonale. CHPOx peut donc ne pas\n    etre solution du probleme initial.\n    Le mot-cl\u00c3\u00a9 'NOSTAB' fait gconserver l'op\u00c3\u00a9rateur fourni.\n\n 5- Le mot cle 'SOUC' provoque l'emission d'un soucis au lieu d'une\n    erreur en cas d'impossibilite de resoudre le systeme.\n\n 6- Le mot cle 'ELIM' permet de regler le nombre NBPASSE de passes\n    d'elimination des inconnues soumises a des conditions ou relations\n    imposees.\n\n 7- Par \"OPTION RESO DIRECTE\" ou \"OPTION RESO ITERATIVE\"\n    on peut choisir soit une resolution par methode de CROUT \n    ( methode par defaut) soit une resolution par methode de gradients\n    conjugues avec preconditionnement ILU0 stabilise.\n\n 8- Les champs par points CHPO1(2..) obtenus sont de nature diffuse.\n\n 9- Le mot-cle 'ENSE' indique que au cas ou le systeme est singulier\n    et la singularite est excite, RESO fournira un vecteur du noyau.\n    Il y a alors deux resultats supplementaires : NB_MOD_RIG qui est le\n    nombre de vecteurs du noyau retournes et MAIL_CONTR qui est le \n    maillage des noeuds sur lesquels on a applique une contrainte\n    pour pouvoir resoudre le systeme.\n\n10- PREC est la precision de l'operation. Le defaut est 1D-18.\n\n    Exemple :\n    _________\n\n    RIG1 etant la raideur d'une structure , FORC1 un champ de force\ns'exer\u00e7ant sur cette structure, on obtiendra le champ de deplacements\nDEP1 en resultant, par l'instruction :\n\n                  DEP1 = RESO  RIG1 FORC1 ;",
  },
  {
    name: "RESO_ASY",
    url: "RESO_ASY",
    documentation:
      "$$$$ RESO_ASY NOTICE  CHAT      11/09/12    21:17:57     7124           \n                                             DATE     11/09/12\n\n  Procedure RESO_ASY                       Voir aussi :\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure ne peut pas etre appelee par l'utilisateur.\n\n    Elle est appelee par l'operateur RESO",
  },
  {
    name: "RESP",
    url: "RESP",
    documentation:
      "$$$$ RESP     NOTICE  CHAT      11/09/12    21:17:58     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur RESPRO                         Voir aussi : \n    ----------------  \n    RESPRO  OBJET1 OBJET2  ..... ;\n\n\n    Objet :\n    _______\n\n    L'operateur RESPRO  permet a l'interieur d'une procedure de rendre\ndes resultats  OBJET1 OBJET2 .....\n\n    Remarque :\n    __________\n\n    Il peut y avoir plusieurs ordres RESPRO dans une procedure.\n\n    Ces resultats ne seront disponibles a la lecture qu'au moment de\nl'appel a FINPRO.\n\n    Le premier resultat rendu par RESP sera affecte au premier nom\ndevant le signe = , etc....\n\n\n    Exemple :\n    _________\n\n    Procedure  creant les N premieres puissances entieres d'un nombre.\n\n\n\n             DEBP PUISSANC ;\n             ARGU X*FLOTTANT N*ENTIER  ;\n             SI ( N <EG 0) ; QUITTER PUISSANC; FINSI;\n             B = 1.;\n             RESPRO  B;\n             NN = N - 1 ;\n             SI ( NN EGA 0) ; QUITTER PUISSANC; FINSI;\n             REPETER PU NN;\n             B = B * X ;\n             RESPRO B;\n             FIN    PU;\n             FINPROC;\n\n             A B C  = PUISSANC 4 3;\n             AA = PUISSANC 2 20 PROG;\n\n   Dans notre exemple A B C valent respectivement 1 4 16 et AA est un\nobjet LISTREEL contenant les 20 premieres puissances de 2 (1 2 4 8...).",
  },
  {
    name: "RESPOWNS",
    url: "RESPOWNS",
    documentation:
      "$$$$ RESPOWNS NOTICE  MB234859  17/10/02    21:15:22     9577           \n                                             DATE     17/10/02\n\n    Procedure RESPOWNS                       Voir aussi : PRNS\n    ------------------  \n\n    EVOL1_PS = RESPOWNS EVOL2_RS EVOL3_M LREEL1_F (TAB1);\n\n\n    objet :\n    _______\n\n    Calcul du spectre de puissance EVOL1_PS (comportant une unique\n    courbe) d'un signal stationnaire \"virtuel\" de duree TE associe a\n    un spectres de reponse EVOL2_RS (comportant une courbe)\n    correspondant a un amortissement AMOR, et a N courbes de\n    modulation EVOL3_M (comportant N courbes) aux bandes de\n    frequence indiquees dans LREEL1_F. La bande de frequence de la\n    i-eme fonction EVOL3_M est donnee par le i-eme (frequence\n    inferieure) et le i+1-eme (frequence superieure) element de OM.\n\n    Les fonctions de modulation doivent toutes demarrer au meme instant TI\n    et s'achever au meme instant TF. La duree du signal TE est evidemment\n    donnee par TF-TI. La frequence de coupure de EVOL1_PS est donnee par la\n    valeur maximale de LREEL1_F.\n\n    Pour stabiliser le processus de convergence, les iteration\n    s'effectuent en utilisant le filtre de Hanning (operateur HANN).\n\n    Une option speciale permet une identification compatible avec un\n    calcul en ondelette.\n\n    options :\n    _________\n\n    Les options sont contenues dans TAB1.\n\n    indice  type objet    commentaires\n             pointe\n\n\n     GPRP   MOT           representant la grandeur physique de\n                          reponse : 'ACCE'(leration), 'VITE'(sse) ou\n                          'DEPL'(acement relatif). Le defaut est 'ACCE'.\n\n     GPAB   MOT           representant la grandeur physique en abscisse\n                          de la reponse: 'PERI'(ode) ou 'FREQ'(uence).\n                          Le defaut est 'PERI'.\n\n     AMOR   FLOTTANT      specifiant l'amortissement AMOR. Le defaut\n                          est 0.05.\n\n     FFPS   LISTREEL      donnant le reticule de calcul en frequence\n                          du spectre de puissance. Le defaut est une\n                          progression geometrique entre 1/TE et la\n                          frequence de coupure dont la raison est\n                          (1+2*KSI), ou KSI=MIN AMOR.\n\n     TTRS   LISTREEL      donnant le reticule de calcul en periode du\n                          spectre de reponse. Le defaut est celui de\n                          operateur PSRS.\n\n     JMAX   ENTIER        representant le nombre maximum iteration\n                          autorise. Le defaut est 15.\n\n     JHAN   ENTIER        representant le nombre iteration comportant\n                          le filtrage de Hanning.  le defaut est JMAX.\n\n     EMAX   REEL          representant la limite de convergence de\n                          l'erreur. Le defaut est 1.E-2.\n\n     NBPR   ENTIER        indiquant le nombre de processus stationnaires\n                          associes au calcul de spectre de reponse.\n                          Le defaut est celui de operateur PRNS.\n\n     NBIN   ENTIER        indiquant le nombre de points integration\n                          temporelle associe a chaque processus\n                          stationnaire. Le  defaut est celui de\n                          operateur PRNS.\n\n     LIST   LOGIQUE       indiquant la possibilite d'affichage du\n                          processus de convergence. Le defaut est FAUX.\n\n     ONDE   FLOTTANT      indiquant t la periode echantillonnage\n                          associee a la premiere fonction de modulation.\n                          La presence de ce parametre indique un calcul\n                          par ondelette: dans ce cas EVOL1_PS contient\n                          autant de point que de bande de frequence et\n                          EVOL3_M la modelisation des coefficients en\n                          ondelette: la premiere courbe est le residu,\n                          et les suivantes sont relatives a chaque niveau\n                          de decomposition (des basses vers les hautes\n                          frequences).",
  },
  {
    name: "RESPOWSP",
    url: "RESPOWSP",
    documentation:
      "$$$$ RESPOWSP NOTICE  MB234859  17/10/02    21:15:23     9577           \n                                             DATE     17/10/02\n\n    Procedure RESPOWSP                       Voir aussi : PSRS\n    ------------------  \n    EVOL1_PS = RESPOWSP EVOL2_RS FLOT1_TE LREEL1_AMOR (TAB1);\n\n\n    objet :\n    _______\n\n    Calcul du spectre de puissance EVOL1_PS (comportant une unique\n    courbe) d'un signal de duree FLOT1_TE associe a N spectres de\n    reponse EVOL2_RS (pouvant comporter N courbes) correspondant\n    aux N amortissements LREEL1_AMOR. Cette transformation inverse\n    n'a de sens mathematique que si EVOL2_RS ne contient qu'une\n    seule courbe.  Si N>1, EVOL1_PS doit etre considere comme\n    un spectre moyen.\n\n    Pour stabiliser le processus de convergence, les iteration\n    s'effectuent en utilisant le filtre de Hanning (operateur HANN).\n\n    options :\n    _________\n\n    Les options sont contenues dans TAB1 (objet de type TABLE).\n\n    indice  type objet    commentaires\n             pointe\n\n     GPRP   MOT           representant la grandeur physique de reponse:\n                          'ACCE'(leration), 'VITE'(sse) ou\n                          'DEPL'(acement relatif). Le defaut est 'ACCE'.\n\n     GPAB   MOT           representant la grandeur physique en abscisse\n                          de la reponse: 'PERI'(ode) ou 'FREQ'(uence).\n                          Le defaut est 'PERI'.\n\n     FRCO   FLOTTANT      indiquant la frequence de coupure du signal.\n                          le defaut est 25 Hz.\n\n     FFPS   LISTREEL      donnant le reticule de calcul en frequence du\n                          spectre de puissance. Le defaut est une\n                          progression geometrique entre 1/FLOT1_TE et\n                          la frequence de coupure dont la raison\n                          est (1+2*KSI), ou KSI=MIN LREEL1_AMOR.\n\n     TTRS   LISTREEL      donnant le reticule de calcul en periode du\n                          spectre de reponse. Le defaut est celui de\n                          operateur PSRS.\n\n     DIST   MOT           representant le type de distribution choisie\n                          pour evaluer le lieu des maxima du spectre de\n                          reponse: 'CRAM'(er) ou 'NEWG'(umg).  Le\n                          defaut est 'CRAM'.\n\n     JMAX   ENTIER        representant le nombre maximum iteration\n                          autorisee. Le defaut est 15.\n\n     JHAN   ENTIER        representant le nombre iteration comportant\n                          le filtrage de Hanning.  le defaut est JMAX.\n\n     EMAX   FLOTTANT      representant la limite de convergence de\n                          l'erreur. Le defaut est 1.E-2.\n\n     LIST   LOGIQUE       indiquant la possibilite d'affichage du\n                          processus de convergence. Le defaut est FAUX.",
  },
  {
    name: "REST",
    url: "REST",
    documentation:
      "$$$$ REST     NOTICE  CHAT      11/09/12    21:17:59     7124           \n                                             DATE     11/09/12\n                                             \n    Directive RESTITUER                      Voir aussi : SAUV\n    -------------------                        \n    RESTITUER ( 'FORMAT'     )      ;\n              ( 'LABEL' CHA1 )\n\n\n    Objet :\n    _______\n\n    La directive RESTITUER permet de remettre en memoire les objets\ndecrits dans le fichier de numero logique IORES1 defini par :\n\n           OPTION REST IORES1 ;\n\n    Si le \"label\" est precise la lecture s'arretera un fois lu la\npartie de la sauvegarde portant ce label.\n\n\n    Remarque :\n    __________\n\n    Utiliser l'option FORMAT si et seulement si le fichier a ete\necrit en formate.\n\n    Un LABEL vide ou pas de label du tout entraine la restitution de\ntout le fichier.\n\n    Il est possible, dans le cas o\u00ba on a fait plusieurs calculs avec\nle meme maillage, de les fusionner en utilisant conjointement la\ndirective OPTION NBP NPT.\n\n    ATTENTION :\n    ___________\n\n    Il est conseille de mettre cette directive en tete du fichier\nde donnees et en particulier avant la creation de nouveaux points.\nPar contre, elle doit etre precedee de la redefinition des OPTIONs.",
  },
  {
    name: "RESU",
    url: "RESU",
    documentation:
      "$$$$ RESU     NOTICE  BP208322  16/05/24    21:15:16     8932           \n                                             DATE     16/05/24\n                                             \n  Operateur RESULT                         Voir aussi :\n    ----------------  \n\n    CHPO1 = RESULT CHPO2 ;\n\n    Objet :\n    _______\n\n    L'operateur RESULT calcule la resultante d'un champ par points. Le\nchamp resultant contient un point auquel sont affectees les valeurs\ncorrespondant aux sommations sur les differentes composantes.\n\n    Commentaire :\n    _____________\n\n    CHPO2 : champ dont on calcule la resultante (type CHPOINT)\n\n    CHPO1 : champ resultat (type CHPOINT) de nature discrete\n    \n    \n    Remarque : fonctionnalit\u00e9 obsolete \n    __________________________________  \n    \n    Le calcul de la somme des valeurs des objets LISTREEL et LISTENTI\n    est desormais realise par l'operateur SOMM.",
  },
  {
    name: "RETO",
    url: "RETO",
    documentation:
      "$$$$ RETO     NOTICE  CHAT      11/09/12    21:17:59     7124           \n                                             DATE     11/09/12\n  Voir aussi :\nL'operateur RETOUR permet de quitter l'interpreteur GIBIANE et de revenir au pro\n\n$$$$\n\n \n ",
  },
  {
    name: "RETRAIT",
    url: "RETRAIT",
    documentation:
      "$$$$ RETRAIT  NOTICE  CHAT      11/09/12    21:17:59     7124           \n                                             DATE     11/09/12\n\n    Procedure RETRAIT                        Voir aussi : PREC    \n    -----------------                                     PHASAGE  \n                                                          TENSION  \n                                                          EPAIFUT  \n                                                          PFLUAGE   \n      CHAM2 = RETRAIT  ........;\n\n\n\n    Objet :\n    _______\n\n      Cette procedure permet de calculer le tenseur de deformations \n      differees du au retrait du beton. Elle est appellee \n      automatiquement par la procedure PHASAGE. \n       ",
  },
  {
    name: "RETSAT",
    url: "RETSAT",
    documentation:
      "$$$$ RETSAT   NOTICE  CHAT      11/09/12    21:18:00     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure RETSAT                         Voir aussi :\n    ----------------  \n      RETSAT  RXT TBT ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure RETSAT est une procedure interne appelee par EXECRXT\n\n    Commentaires\n    ____________\n\n    RXT   TABLE  :\n    TBT   TABLE  :",
  },
  {
    name: "RFCO",
    url: "RFCO",
    documentation:
      "$$$$ RFCO     NOTICE  PV        20/04/25    21:15:07     10589          \n                                             DATE     20/04/25\n \n \n    Operateur RFCO                         \n    -------------\n    \n      R1 R2 F1  =  RFCO  MOD1 LOG1 CHP1 ;\n      MOD2 CHEL2 R1 R2 F1  =  RFCO  MOD1 LOG1 CHP1 CHEL1 ;\n                                \n\n\n    Objet :\n    _______\n\n    L'operateur RFCO  calcule les raideurs des modeles de CONTACT MOD1\n    ainsi que les valeurs de jeux ou de forces de frottements. \n   \n\n\n      Commentaire :\n      _____________\n\n      MOD1  : objet MODELE contenant la formulation 'CONTACT'\n\n      MOD2  : objet MODELE contenant le modele reduit sur les contacts retenus\n\n      LOG1  : LOGIQUE a VRAI pour calculer ce qui a trait au frottement\n      \n      CHP1  : CHPOINT de deplacements pour calculer les jeux\n\n      CHEL1 : CHAMELEM de caracteristiques de contact\n\n      CHEL2 : CHAMELEM de caracteristiques de contact reduit sur MOD2\n\n      R1 R2 : RIGIDITES de blocages ou ENTIERS 0\n      \n      F1    : CHPOINT contenant les jeux ou les frottements ou ENTIERS 0        \n                    \n            \n     Remarque : Cet operateur est appele par PASAPAS et il n'y a pas de\n                raison de l'utiliser autrement.",
  },
  {
    name: "RIGI",
    url: "RIGI",
    documentation:
      "$$$$ RIGI     NOTICE  PV        18/04/24    21:15:09     9815           \n                                             DATE     18/04/24\n                                             \n    Operateur RIGIDITE                       Voir aussi : MATE MODE\n    ------------------                                    CARA  MEC3  \n      RIG1 =  RIGI  MODL1  CHAM1 ( CHAM2 ) ('NOER');\n\n\n    Objet :\n    _______\n\n    L'operateur RIGI calcule la RIGIDITE de differents objets :\n\n    --------------------\n    |  Elements finis  |\n    --------------------\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : objet modele ( type MMODEL ).\n\n      CHAM1  : Champ de caracteristiques materielles et eventuellement\n               geometriques si necessaire pour certains elements (cf\n               remarque ci-dessous) (type MCHAML, sous-type\n               CARACTERISTIQUES) ou de matrices de Hooke (type MCHAML,\n               sous-type MATRICE DE HOOKE).\n\n      CHAM2  : Champ de caracteristiques (type MCHAML, sous-type\n               CARACTERISTIQUES) necessaires  pour certains elements\n               (cf remarque ci-dessous) si CHAM1 est un champ de\n               matrices de Hooke.\n\n      RIG1   : Resultat de type RIGIDITE de sous-type RIGIDITE.\n\n      'NOER' : En presence de ce mot cle rend un entier contenant le numero\n               de l'erreur comme resultat.\n\n\n\n      Remarque :\n      __________\n\n      Il faut specifier des caracteristiques si la description\n      geometrique de l'element ne peut se faire par le maillage;\n      par exemple l'epaisseur d'elements de plaques ou les inerties\n      de flexion pour les elements de poutres etc...\n\n\n\n    -----------------------------\n    |  Raideurs additionnelles  |\n    -----------------------------\n\n    RIG1 = RIGI    |  ('DEPL') ('ROTA')  |  VAL   GEO1   ;\n                   |   NOMINC ...        |\n\n    Commentaire :\n    _____________\n\n\n    'DEPL'     : mot-cle pour designer toutes les translations\n\n    'ROTA'     : mot-cle pour designer toutes les rotations\n\n     NOMINC    : un ou plusieurs noms (type MOT) designant les degres de\n                 liberte concernes (dans ce cas ne pas se servir\n                 des 2 mots-cles precedents )\n\n     Les noms d'inconnues possibles sont :\n\n     pour un calcul en MODE PLAN CONT :  UX   UY\n     pour un calcul en MODE PLAN DEFO :  UX   UY\n     pour un calcul en MODE AXIS      :  UR   UZ   RT\n     pour un calcul en MODE FOUR      :  UR   UZ   UT   RT\n     pour un calcul en MODE TRID      :  UX   UY   UZ   RX   RY   RZ\n\n\n     VAL       : rigidite additionnelle (type FLOTTANT).\n\n     GEO1      : objet contenant les noeuds o\u00ba seront ajoutees les\n                 rigidites (type POINT ou MAILLAGE).\n\n     RIG1      : objet de type RIGIDITE de sous-type RIGIDITE.\n\n\n    --------------------\n    |  Analyse modale  |\n    --------------------\n\n\n    RIG2 = RIGI BAS1 ;\n    RIG3 = RIGI SOL1 ;\n    RIG4 = RIGI SOL2 STRU1 ;\n\n    RIG5 = RIGI TAB1 ;\n\n    RIG6 = RIGI TAB2 (TAB3) ;\n    Commentaire :\n    _____________\n\n    RIG2 est l'ensemble des matrices de rigidites s'appuyant sur la\nbase modale BAS1. La base modale BAS1 est donnee sous la forme d'un\nobjet BASEMODA.\n\n    RIG3 est la rigidite due aux modes (rigidites generalisees) contenus\ndans l'objet SOL1 (type SOLUTION, sous-type MODE).\n\n    RIG4 est la rigidite due au couplage sur la structure STRU1 (type\nSTRUCTUR) des solutions statiques contenues dans l'objet SOL2 (type\nSOLUTION, sous-type SOLUSTAT).\n\n    RIG5 est la rigidite due aux modes (rigidites generalisees) contenus\ndans l'objet TAB1 (type TABLE de sous-type 'BASE_DE_MODES').\n\n    RIG6 est la rigidite dans la base des deformees dans TAB2 (type\nTABLE) de sous-type 'BASE_MODALE' ou bien 'LIAISONS_STATIQUES'. \nLorsque TAB3 est specifie, de sorte que ces deux sous-types \napparaissent en argument, les termes de couplage sont egalement calcules.\n\n    Remarque :\n    __________\n\n    Les supports geometriques de RIG2, RIG3 et RIG4 contiennent les\npoints associes aux modes ou aux liaisons definies entre les structures.\nOn associe la composante 'ALFA' au mode, 'BETA' a une liaison sur des\nlibres, 'FBET' a une liaison sur des noeuds bloques.\n\n    Le support geometrique de RIG6 contient les points associes \naux deformees statiques ou modales. Les composantes 'BETA', duale 'FBET'\nsont relatives aux premieres, 'ALFA', duale 'FALF' aux secondes.",
  },
  {
    name: "RIMP",
    url: "RIMP",
    documentation:
      "$$$$ RIMP     NOTICE  CHAT      11/09/12    21:18:00     7124           \n                                             DATE     11/09/12\n                                             \n  Directive RIMP                           Voir aussi :\n    --------------  \n    RIMP  EVOL1 ;\n\n\n    Objet :\n    _______\n\n    La directive RIMP permet de changer les sous-types d'un objet\ncomplexe EVOL1 de type EVOLUTION.\n\n    Si l'objet est de sous-type PREE PIMA (partie reelle, partie\nimaginaire), il deviendra MODU PHAS (module, phase) et vice-versa.",
  },
  {
    name: "ROSENT",
    url: "ROSENT",
    documentation:
      "$$$$ ROSENT   NOTICE  CHAT      11/09/12    21:18:00     7124           \n                                             DATE     11/09/12\n\n  Procedure ROSENT                         Voir aussi :\n    ----------------  \n    CHPO1 = ROSENT TAB1 ;\n\n                TAB1.'PUISSANCE' .'RENDEMENT'\n                    .'DIFFUSVITE'  .'CONDUCTIVITE'\n                    .'VITESSE'\n                    .'T0'\n                    .'NTERMES'\n                    .'MAILLAGE'\n                    .'EPAISSEUR'\n                    .'LOCAL' .'INSTANT'\n                    .'GAUSS' .'XPOS' .'YPOS'\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule le champ de temperature resultant du\n    deplacement d'un arc de soudure sur une plaque infinie. L'arc est \n    soit ponctuel et se deplace selon l'axe X.\n    La solution analytique du probleme est tiree de Rosenthal : \n    Mathematical Theory of Heat Distribution During Welding and \n    Cutting. \n\n    Commentaire :\n    _____________\n\n    En entree :\n    __________\n\n        TAB1 : Objet de type TABLE, indice par des mots, servant a\n                definir les options de calcul :\n \n        Arguments :\n        ___________\n\n            'PUISSANCE' : REEL : Puissance de l'arc (en W)        \n\n            'RENDEMENT' : REEL : Rendement de l'arc : Rapport de  \n               la puissance recue par la piece et de la puissance \n               de l'arc                                           \n\n            'DIFFUSVITE' : REEL : Diffusivite thermique du materiau \n               (en m2/s)                                 \n\n            'CONDUCTIVITE' : REEL : Conductivite thermique du     \n               materiau (en W/Km2)                                \n\n            'VITESSE' : REEL : Vitesse de deplacement de l'arc (en m/s)\n\n            'T0' : REEL : Temperature ambiante (en \u00b0C ou en K)    \n\n            'NTERMES' : ENTIER : Nombre de termes de la somme     \n\n            'MAILLAGE' : MAILLAGE : Maillage support du champ de  \n               temperature                                        \n\n            'EPAISSEUR' : REEL : Epaisseur de la piece (en m)     \n\n            'LOCAL' : BOOLEEN : VRAI si la piece est decrite dans \n               le repere local a l'arc                            \n\n            'INSTANT' : REEL : Si 'LOCAL' est FAUX, instant       \n               auquel il faut calculer le champ de temperature    \n               (l'abscisse de l'arc est alors V*t) (en s)         \n\n            'GAUSS' : BOOLEEN : VRAI si la source est gaussienne\n\n            'XPOS' : REEL : Si 'GAUSS' est VRAI, abscisse de la\n               source\n\n            'YPOS' : REEL : Si 'GAUSS' est VRAI, ordonnee de la\n               source\n\n    En sortie :\n    __________\n\n            CHPO1 : CHPOINT : Champ de temperature (en \u00b0C ou en K)",
  },
  {
    name: "ROTA",
    url: "ROTA",
    documentation:
      "$$$$ ROTA     NOTICE  CB215821  15/12/04    21:15:20     8724           \n                                             DATE     15/12/04\n                                             \n    Operateur ROTATION                       Voir aussi : TRAN DALL REGL\n    ------------------                                         SURF GENE  \n    SURF1 = LIG1  ROTA  (N1) FLOT1 ('DINI' DENS1) ('DFIN' DENS2) ...\n                    ... POIN1 (POIN2 si 3D) ;\n\n\n    Objet :\n    _______\n\n    L'operateur ROTATION construit une surface engendree par la rotation\nd'une ligne, d'un angle donne autour d'un point en 2D ou d'un axe en 3D.\n\n    Commentaire :\n    _____________\n\n    FLOT1       : angle de rotation (type FLOTTANT)\n\n    POIN1       : centre de rotation (type POINT)\n\n    POIN1 POIN2 : points definissant l'axe de rotation (type POINT)\n\n    LIG1        : ligne generant la surface (type MAILLAGE)\n\n    DENS1 DENS2 : densites associees a la ligne LIG1 et au(x) point(s)\n                  POIN1 (et POIN2) (type FLOTTANT)\n\n    N1          : nombre de couches d'elements generees (type ENTIER)\n\n    SURF1       : surface resultat (type MAILLAGE)\n\n\n    Remarque :\n    __________\n\n    Si N1 est specifie, N1 est le nombre de couches d'elements engendrees\ndans la rotation.\n\n    Si N1 est positif, N1 couches d'egale epaisseur seront engendrees.\n\n    Si N1 est negatif, N1 couches seront engendrees et leur epaisseur\nsera calculee en tenant compte des densites utilisees.\n\n    Si N1 n'est pas specifie, ce nombre est calcule en fonction des\ndensites utilisees.\n\n    Si les densites associees a la ligne LIG1 et au point POIN1 (et\nPOIN2) ne sont pas correctes, il est possible de les surcharger. Pour la\ndensite initiale, il faut donner la bonne valeur derriere le mot-cle\n'DINI', et pour la finale, derriere le mot-cle 'DFIN'.\n\n    Si LIG1 est une surface, la rotation s'applique au cote 3 de cette\nsurface s'il existe, et le resultat est la surface initiale augmentee\nde celle que l'on cree.\n\n    La ligne LIG1 ne doit pas avoir de points sur l'axe de rotation.",
  },
  {
    name: "ROTA_IMP",
    url: "ROTA_IMP",
    documentation:
      "$$$$ ROTA_IMP NOTICE  PV        18/07/20    21:15:09     9885           \n                                             DATE     18/07/20\n\n  Procedure ROTA_IMP                          Voir aussi :\n     ---------------  \n   RIG1 CH1 = ROTA_IMP ANGLE POIN1 POIN2 MAIL1\n\n\n\n    Objet :\n    _______\n\n  La procedure ROTA_IMP construit la raideur RIG1 et le champ de deplacement\n  impose CH1 permettant d'imposer au maillage MAIL1 une condition de rotation\n  d'angle ANGLE autour de l'axe defini par les points POINT1 et POINT2.\n\n\n  Remarques:\n\n  La matrice et le champ dependent de l'angle. Il faut donc les reevaluer \n  pour chaque nouvel angle\n\n  L'angle doit etre strictement compris entre -90 et +90.",
  },
  {
    name: "RSET",
    url: "RSET",
    documentation:
      "$$$$ RSET     NOTICE  CHAT      11/09/12    21:18:01     7124           \n                                             DATE     11/09/12\n\n  Directive RSET                          Voir aussi :\n     --------------  \n\n\n      OBJET    : Surcharger tout ou partie d'un CHAMPOINT TRIO existant\n                 avec un flottant et/ou un autre CHAMPOINT\n                 Dans ce dernier cas seul les points communs entre le\n                 premier et le deuxieme CHAMPOINT sont concernes.\n\n\n      SYNTAXE  : RSET CHP1  VAL  <SPG> ;\n                 RSET CHP1  CHP2 <SPG> ;\n\n                 SPG support geometrique",
  },
  {
    name: "RTEN",
    url: "RTEN",
    documentation:
      "$$$$ RTEN     NOTICE  CHAT      11/09/12    21:18:01     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur RTENS                          Voir aussi : SIGM EPSI\n    ---------------                                       CALP    GRAD  \n                                                          POLA  \n\nCHAM3  =  RTENS  CHAM1 MODL1 |   CHAM2   ;\n                             |\n                             |  ( CHAM2 )  ...\n\n                 |   VEC1 ( VEC2 )  ;\n                 |\n           ...   |  'POLA'  CENTR1 ;\n                 |  'SPHE'  CENTR1   AXEI1 ;\n                 | 'CYLI'  CENTR1   AXEI1 ;\n                 | 'TORI' ('CART')  CENTR1 AXEI1 ;\n                 | 'TORI'  'CIRC'   CENTR1 AXEI1 CENTR2 ;\n\nCHPO2  =  RTENS  CHPO1 VEC1 (VEC2)  ;\n\nCHAM4  =  RTENS  CHAM1 MODL1  GRAD1  | ('RTAR') |  ;\n                                     |   RART   |\n\n\n    Cet operateur a plusieurs fonctions selon les donnees.\n\n\n    ---------------\n    | 1\u009b Fonction |\n    ---------------\n\n\n    A partir d'un champ de contraintes ou de deformations definis\npour des elements massifs dans le repere general, pour les coques minces\ndans le repere local a l'element (dont le premier vecteur est colineaire\nau premier cote de l'element), et pour les coques epaisses dans les reperes \nlocaux (repere a chacun des points d'integration), l'operateur RTENS calcule \nle champ de contraintes ou de deformations dans un nouveau repere orthonorme \ndirect.\n\n\n    CHAM3  =  RTENS  CHAM1 MODL1 (CHAM2) VEC1 ( VEC2 )  ;\n\n\n    Commentaire :\n    _____________\n\n    CHAM1  : champ de contraintes ou de deformations initial (type\n             MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n    MODL1  : objet modele (type MMODEL)\n\n    CHAM2  : champ de caracteristiques contenant les epaisseurs dans \n             le cas des coques epaisses (type MCHAML, sous-type \n             CARACTERISTIQUES)\n\n    VEC1 | : vecteurs servant a definir le repere orthonorme (type\n    VEC2 |   POINT )\n\n    CHAM3  : champ de contraintes ou de deformations dans le nouveau\n             repere (type MCHAML, sous-type CONTRAINTES ou\n             DEFORMATIONS)\n\n\n\n    Remarque :\n    __________\n\n    Le repere orthonorme direct est defini comme suit :\n\n  -  pour les elements massifs bidimensionnels par le vecteur VEC1 et\n     le vecteur normal a VEC1 (obtenu a partir de VEC1 par une rotation\n     de pi/2 dans le sens trigonometrique)\n\n  -  pour les elements massifs tridimensionnels par le vecteur VEC1, le\n     vecteur contenu dans le plan (VEC1,VEC2) et normal a VEC1, et le\n     vecteur produit vectoriel de VEC1 et VEC2\n\n  -  pour les elements coque tridimensionnels, par le vecteur\n     projection de VEC1 dans le plan de la coque et le vecteur contenu\n     dans le plan de la coque, normal a VEC1 et tel que leur produit\n     vectoriel soit dirige suivant la normale positive a l'element si\n     seul VEC1 est fourni, ou bien tel que leur produit vectoriel soit\n     de meme sens que le produit vectoriel de VEC1 et VEC2, si VEC2\n     est fourni egalement.\n\n\n    ---------------\n    | 2\u009b Fonction |\n    ---------------\n\n    A partir d'un champ de contraintes ou de deformations definies\npour des elements massifs orthotropes dans le repere general, pour les \ncoques minces orthotropes dans le repere local a l'element (dont le premier\nvecteur est colineaire au premier cote de l'element), et pour les coques\nepaisses orthotropes dans les reperes locaux (repere a chacun des points\nd'integration), l'operateur RTENS calcule le champ de contraintes ou de  \ndeformations dans le repere d'orthotropie .\n\n\n    CHAM3  =  RTENS  CHAM1 MODL1 CHAM2     ;\n\n\n    Commentaire :\n    _____________\n\n    CHAM1  : champ de contraintes ou de deformations initial (type\n             MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n    MODL1  : objet modele (type MMODEL)\n\n    CHAM2  : champ de cosinus-directeurs des axes d'orthotropie par\n             rapport aux reperes locaux des elements(type MCHAML,\n             sous-type CARACTERISTIQUES)\n\n    CHAM3  : champ de contraintes ou de deformations dans le repere\n             d'orthotropie (type MCHAML, sous-type CONTRAINTES ou\n             DEFORMATIONS)\n\n\n    Remarque 1 :\n    __________\n\n    CHAM2 (ou CHEL2) peut etre le mchaml de caracteristiques\n    materielles cree par l'operateur MATR (ou MATE) etant donne que\n    le mchaml de caracteristiques materielles contient les cosinus-\n    directeurs des axes d'orthotropie. Les noms de composantes qui\n    representent les cosinus-directeurs des axes d'orthotropie sont :\n    V1X,V1Y pour les elements coques et les element massifs en 2D, et\n    V1X,V1Y,V1Z,V2X,V2Y,V2Z pour les elements massifs en 3D.\n\n\n\n    ---------------\n    | 3 Fonction |\n    ---------------\n\n    A partir d'un champ de contraintes ou de deformations definies\npour des elements massifs dans le repere general, pour les coques minces\ndans le repere local a l'element (dont le premier vecteur est colineaire\nau premier cote de l'element), et pour les coques epaisses dans les reperes \nlocaux (repere a chacun des points d'integration), l'operateur RTENS calcule\nle champ de contraintes ou de deformations dans un nouveau repere orthonorme\ndirect local, adapte a la geometrie choisie.\n\n\n\nCHAM3 = RTENS CHAM1 MODL1 (CHAM2) | 'POLA'  CENTR1 ;\n                                  | 'SPHE'  CENTR1   AXEI1 ;\n                                  | 'CYLI'  CENTR1   AXEI1 ;\n                                  | 'TORI' ('CART')  CENTR1 AXEI1 ;\n                                  | 'TORI'  'CIRC'   CENTR1 AXEI1 CENTR2 ;\n\n\n\n   Commentaire :\n   _____________\n\n    CHAM1  : champ de contraintes ou de deformations initial (type\n             MCHAML, sous-type CONTRAINTES ou DEFORMATIONS)\n\n    MODL1  : objet modele (type MMODEL)\n\n    CHAM2  : champ de caracteristiques contenant les epaisseurs dans \n             le cas des coques epaisses (type MCHAML, sous-type \n             CARACTERISTIQUES)\n\n    CHAM3  : champ de contraintes ou de deformations dans le nouveau\n             repere (type MCHAML, sous-type CONTRAINTES ou\n             DEFORMATIONS)\n\n    CENTR1 : centre du nouveau repere\n\n    AXEI1  : point definissant l'axe de symetrie de revolution du \n             nouveau repere : cet axe passe par CENTR1 et AXEI1\n\n    CENTR2 : centre du petit cercle dans le cas torique circulaire\n\n    'POLA' : le nouveau repere est le repere des coordonnees polaires\n             (en 2D uniquement)\n\n    'CYLI' : le nouveau repere est le repere des coordonnees\n             cylindriques de cote verticale selon (CENTR1,AXEI1). Les axes\n             de projection sont :\n              * UR : axe radial\n              * UTHETA : axe orthoradial correspondant\n              * V1 : axe (CENTR1,AXEI1)\n\n    'SPHE' : le nouveau repere est le repere des coordonnees\n             spheriques de centre CENTR1. Les axes de projection sont:\n              * UR : axe radial\n              * UTHETA : tangente a la meridienne (longitude, sens\n                         nord->sud)\n              * UPHI : tangente au parallele ( latitude, sens\n                       ouest->est)\n\n    'TORI' : le nouveau repere est l'un des reperes de coordonnees\n             toriques envisageable. Si le second mot-cle n'est pas\n             precise, on se place par defaut dans le cas torique\n             cartesien \n             \n    'CART' : le repere est cartesien dans tout plan meridien. Les axes\n             de projection sont :\n              * UR : axe radial des coordonnees cylindriques\n                     classiques \n              * UTHETA : axe orthoradial correspondant\n              * V1 : axe (CENTR1,AXEI1)\n\n    'CIRC' : le repere est celui des coordonnees polaires dans\n             tout plan meridien. Les axes de projection sont :\n              * UTHETA : le meme que pour 'TORI' 'CART'\n              * UT : tangente au cercle meridien\n              * UN : normale exterieure au cercle meridien      \n\n   REMARQUE IMPORTANTE\n   _____________________\n\n   Les suffixes X, Y et Z correspondent respectivement aux trois axes\n   de projections precises pour chaque repere.\n   Exemple : la contrainte SMYZ en coordonnees spheriques est le \n   terme lie aux directions UTHETA et UPHI.\n\n   Dans le cas des coques la premiere direction correspond a la projection \n   de la direction UTHETA sur le plan de la coque et la deuxieme a la \n   projection sur le meme plan (et orthogonalisation par rapport a la \n   projection de UTHETA) de la direction (axei1 - centr1). Si la direction \n   (axei1 - centr1) est normale au plan de l'element, la deuxieme direction \n   est -UR.\n\n\n    ---------------\n    | 4e Fonction |\n    ---------------\n\n   A partir d'un champ de deplacement defini en 2D et 3D a \nl'exception des cas axisymetriques et Fourier, l'operateur RTENS\ncalcule le champ de deplacement dans un nouveau repere orthonorme\ndirect. \n\n\n    CHPO2  =  RTENS  CHPO1 VEC1 (VEC2)  ;\n\n\n\n    Commentaire :\n    _____________\n\n    CHPO1  : champ de deplacement initial (type CHPOINT)\n             \n    VEC1   : premier vecteur du repere (type POINT)\n\n    VEC2   : deuxieme vecteur du repere (en 3D seulement)\n               (type POINT)\n\n    CHPO2  : champ de deplacement dans le repere particulier\n               (type CHPOINT)\n\n\n    Note :\n    ______\n\n    Les cas axisymetriques et Fourier ne sont pas traites.\n\n    Le repere orthonorme direct est defini comme suit :\n\n  -  en 2D par le vecteur VEC1 et le vecteur normal a VEC1 (obtenu a \n     partir de VEC1 par une rotation de pi/2 dans le sens trigonometrique)\n\n  -  en 3D par le vecteur VEC1, le vecteur contenu dans le plan (VEC1,VEC2) \n     et normal a VEC1, et le vecteur produit vectoriel de VEC1 et VEC2\n\n\n    ---------------\n    | 5e Fonction |\n    ---------------\n\n   Etant donne un champ de matrices de rotation, l'operateur RTENS\npermet de changer de repere un champ de contraintes ou de deformations\nou de variables internes. Dans ce dernier cas, seules les composantes\ntensorielles sont modifiees.\n\n\n   CHAM4  =  RTENS  CHAM1 MODL1  GRAD1  | ('RTAR') |  ;\n                                        |   RART   |\n\n\n\n    Commentaire :\n    _____________\n\n    CHAM1  : champ de contraintes ou de deformations initial (type\n             MCHAML, sous-type CONTRAINTES ou DEFORMATIONS ou\n             VARIABLES INTERNES)\n\n    MODL1  : objet modele (type MMODEL)\n\n    GRAD1  : champ de matrices de rotation (type MCHAML,\n             sous-type GRADIENT)\n\n   'RTAR'  : mot-cle (option par defaut) indiquant qu'on veut\n             le produit Rt * A * R, ou R est la matrice de rotation,\n             Rt sa transposee, et A le tenseur de contraintes ou de\n             deformations  (type MOT)\n\n   'RART'  : mot-cle indiquant qu'on veut le produit R * A * Rt\n             (type MOT)\n\n    CHAM3  : champ de contraintes ou de deformations dans le repere\n             d'orthotropie (type MCHAML, sous-type CONTRAINTES ou\n             DEFORMATIONS ou VARIABLES INTERNES)",
  },
  {
    name: "RVSAT",
    url: "RVSAT",
    documentation:
      "$$$$ RVSAT    NOTICE  CHAT      11/09/12    21:18:01     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure RVSAT                          Voir aussi : ENCEINTE\n    ---------------                                       ASPARAM  \n    OBJ2 OBJ3 = RVSAT OBJ1 ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure RVSAT calcule la densite de vapeur d'eau a saturation et\n sa derivee par rapport a la temperature (la temperature etant comprise\n entre 20 et 200 degre C. )\n Cette procedure est appelee par la procedure ASPARAM.\n\n    Commentaires\n    ____________\n\n     OBJ1    CHPOINT  Champ de temperature  [C]\n     OBJ2    CHPOINT  Densite de vapeur     [kg/m3]\n     OBJ3    CHPOINT  Derive de la densite par rapport a la temp.\n                                            [kg/C/m3]",
  },
  {
    name: "RVST2",
    url: "RVST2",
    documentation:
      "$$$$ RVST2    NOTICE  CHAT      11/09/12    21:18:01     7124           \n                                             DATE     11/09/12\n                                                                                \n    Procedure RVST2                          Voir aussi : ENCEINTE\n    ---------------                                       ASPARAM  \n    OBJ2 OBJ3 = RVSAT OBJ1 ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure RVS2T calcule la densite de vapeur d'eau a saturation et\n sa derivee par rapport a la temperature (la temperature etant comprise\n entre 0 et 20 degre C. )\n Cette procedure est appelee par la procedure ASPARAM en complement de la\n procedur rvsat.procedur\n\n    Commentaires\n    ____________\n\n     OBJ1    CHPOINT  Champ de temperature  [C]\n     OBJ2    CHPOINT  Densite de vapeur     [kg/m3]\n     OBJ3    CHPOINT  Derive de la densite par rapport a la temp.\n                                            [kg/C/m3]",
  },
  {
    name: "SAIS",
    url: "SAIS",
    documentation:
      "$$$$ SAIS     NOTICE  CHAT      11/09/12    21:18:02     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur SAIS                           Voir aussi :\n    --------------  \n    OBJ1 = SAIS CHAINE TYPE;\n\n\n    Objet :\n    _______\n\n    L'operateur SAIS permet de saisir interactivement un nom\n    d'objet ou une valeur sur la fenetre de trace.\n\n   CHAINE  : Chaine de caracteres affichee a l'ecran\n\n   TYPE    : Type de l'objet a saisir\n\n   OBJ1    : Objet saisi",
  },
  {
    name: "SATUTILS",
    url: "SATUTILS",
    documentation:
      "$$$$ SATUTILS NOTICE  CHAT      11/09/12    21:18:02     7124           \n                                             DATE     11/09/12\n     Procedure SATUTILS\n     ------------------                       Voir aussi : HT_PRO\n                                                           KR_PRO  \n                                                           PECHE  \n                                                           TRACHIS  \n                                                           TRACHIT  \n\n\n    Objet :\n    _______\n\n    Ensemble de procedures appelees par DARCYSAT reunies dans\n    SATUTILS appelees comme suit :\n    SATUTILS nom_proc arguments de la procedure ",
  },
  {
    name: "SAUF",
    url: "SAUF",
    documentation:
      "$$$$ SAUF     NOTICE  JC220346  14/12/09    21:15:12     8315           \n                                             DATE     14/12/09\n                                             \n  Operateur SAUF                           Voir aussi :\n    --------------  \n            LIST3 = LIST1 SAUF LIST2 (| FLOT1  |) ;\n                                      | 'NOCA' |\n\n    Objet :\n    _______\n\n    L'operateur SAUF cree une liste LIST3 a partir des elements\n    d'une liste LIST1 differents des elements d'une liste LIST2.\n\n    Les listes peuvent etre des objets de type LISTENTI, LISTREEL ou\n    LISTMOTS.\n    \n    Dans le cas des LISTREEL, on peut fournir un critere FLOT1 (type\n    FLOTTANT) pour differencier deux reels en valeur absolue.\n    \n    Dans le cas des LISTMOTS, on peut ajouter le mot-cle 'NOCA' pour\n    considerer egaux deux mots de casse differente.\n    ",
  },
  {
    name: "SAUT",
    url: "SAUT",
    documentation:
      "$$$$ SAUT     NOTICE  CHAT      11/09/12    21:18:03     7124           \n                                             DATE     11/09/12\n                                             \n  Directive SAUTER                         Voir aussi :\n    ----------------  \n                   | 'LIGNE' |\n    SAUTER  (N1)   |         |  ;\n                   | 'PAGE'  |\n\n\n    Objet :\n    _______\n\n    La directive SAUTER permet de sauter des pages ou des lignes lors\ndes impressions.\n\n    Remarque :\n    __________\n\n    Le nombre entier N1 de lignes ou pages a sauter vaut 1 par defaut.\n\n    En utilisation interactive, SAUTER PAGE provoque l'effacement\nde l'ecran.",
  },
  {
    name: "SAUV",
    url: "SAUV",
    documentation:
      "$$$$ SAUV     NOTICE  BP208322  12/10/03    21:15:33     7518           \n                                             DATE     12/10/03\n                                             \n    Directive SAUVER                         Voir aussi : REST SORT\n    ----------------                           \n    SAUVER  ('FORMAT'      )     OBJET1 ... OBJETi  ;\n            ('LABEL'  CHA1 )\n            ('MUET'        )\n\n    Objet :\n    _______\n\n    La directive SAUVER permet d'ecrire les objets OBJET1, ... OBJETi\n sur le fichier logique IOSAU1 (au format XDR ou FORMAT) defini par :\n\n                OPTION SAUV (|'XDR'   |) IOSAU1 ;\n                             |'FORMAT'| \n\n de maniere a interrompre un calcul, pour le reprendre ulterieurement.\n Il ne s'agit pas d'un stockage de resultats en vue d'une recombinaison\n ulterieure.\n\n    L'ecriture se fait en incremental, c'est a dire que seuls les\n objets n'ayant pas deja etes sauves et ceux ayant etes modifies seront\n ecrits a la suite de ceux etant deja sur le fichier. Il est possible\n de donner un \"label\" a cette partie de la sauvegarde dans la\n perspective de relire le fichier jusqu'a ce label inclus.\n\n    Commentaire :\n    _____________\n\n    Types d'objets possibles a sauver :\n\n                               - ELEMENT\n                               - CHPOINT\n                               - RIGIDITE\n                               - DEFORME\n                               - SOLUTION\n                               - STRUCTURE\n                               - LISTREEL\n                               - LISTENTI\n                               - CHARGEMENT\n                               - EVOLUTION\n                               - MODELE\n                               - TABLE\n\n    Tous les objets nommes, inclus ou references par les operandes\n sont egalement sauves.\n\n    La forme triangularisee (si elle existe) associee aux rigidites\n est sauvee exclusivement pour les objets RIGIDITE qui figurent\n parmi les operandes.\n\n    Remarque :\n    __________\n\n    L'option facultative FORMAT permet l'ecriture en formate.\n Elle DOIT etre prealablement precisee par la directive OPTI 'SAUV'.\n Les fichiers formates sont encombrants. N'utiliser cette option que\n pour transferer un fichier d'une machine a l'autre. \n\n    L'option facultative MUET demande au logiciel de ne signaler que \n la fin de la sauvegarde\n\n    L'operation SAUVER n'est possible qu'avec le niveau courant\n (voir OPTI NIVE).",
  },
  {
    name: "SEIS",
    url: "SEIS",
    documentation:
      "$$$$ SEIS     NOTICE  MB234859  17/10/02    21:15:23     9577           \n                                             DATE     17/10/02\n\n  Operateur SEISME                         Voir aussi :\n    ----------------  \n    CHAR1 = SEISME  EVOL1 | BAS1 | FLOT1 MOT1 ;\n                          | TAB1 |\n\n\n    Objet :\n    _______\n\n    L'operateur SEISME cree un objet CHARGEMENT a partir d'une\ndescription temporelle et d'une description spatiale sur la base modale\nd'un seisme.\n\n    Commentaire :\n    _____________\n\n    EVOL1   : objet contenant la discretisation temporelle du\n              seisme (type EVOLUTION).\n\n    BAS1    : objet contenant la base modale de la structure\n              (description spatiale) (type BASEMODA)\n\n    TAB1    : objet contenant la base modale de la structure\n              (description spatiale) (type TABLE)\n\n    FLOT1   : coefficient multiplicateur applique au seisme\n              (type FLOTTANT)\n\n    MOT1    : nom (type MOT) definissant la direction du seisme,\n              a choisir parmi : 'UX', 'UY', 'UZ'.\n\n    CHARG1  : objet resultat (type CHARGEME)\n\n\n\n    Remarque :\n    __________\n\n    Au 26/06/86, cet operateur ne fonctionne que pour les bases\nmodales.\n\n    Il engendre un CHPOINT qui represente la repartition spatiale\n(sur les ALFA) du chargement sismique.\n\n    Ce champ multiplie par la fonction de temps donne les forces\ngeneralisees :\n\n                  FN = - Q   * GAM(t) * FLOT1\n                          NI\n\n      o\u00ba Q   est le deplacement generalise du NI-ieme mode dans la\n          NI\ndirection I et GAM(t) l'acceleration.",
  },
  {
    name: "SENS",
    url: "SENS",
    documentation:
      "$$$$ SENS     NOTICE  CHAT      11/09/12    21:18:03     7124           \n                                             DATE     11/09/12\n\n    Operateur SENS                           Voir aussi : CCON                  \n    --------------  \n   a)\n                                                         \n    TAB1 = SENS CHAM1 CHAM2 ;   \n\n   b)  \n \n    TAB2 = SENS TAB1 ;                         \n\n\n    Objet :\n    _______\n\n  a) SENSIBILITE\n\n    L'operateur SENS calcule la difference des champs CHAM1  et \n  CHAM2 (CHAM1 - CHAM2) de type MCHAML.Lorsq'il a calcule cette\n  difference,l'operateur SENS fait la moyenne arithmetique de la\n  valeur du champ aux points de gauss pour avoir la valeur moyenne\n  du champ sur chaque sous-zone.\n  Ces valeurs sont alors rangees dans la table TAB1 indicee par des\n  entiers de 1 au nombre d'elements.\n  \n  b) SENS\n      \n     L'operateur SENS determine le sens de parcours d'un ou\n  plusieurs contours orientes fermes en dimension 2.\n  La table TAB1 doit avoir le format de la table issue de \n  l'operateur CCON:\n\n       TAB1 . entier ---> maillage du contour (SEG2 ou SEG3)\n\n   La table TAB2 a pour format\n\n       TAB2 . entier ---> +/- 1\n\n   A chaque maillage est associe un entier \n        +1 si le maillage est parcouru dans le sens trigonometrique\n        -1 sinon\n\n\n    Remarque :\n    ____________\n\n  a)\n    Pour que l'operateur SENS calcule bien la difference des deux\n    MCHAML, ils doivent presenter des sous zones elementaires \n    similaires et des noms  de composantes identiques.\n    Cet operateur est utile en optimisation pour preparer le calcule\n    de sensibilites.\n\n  b)\n    Sous l'option MODE AXIS le contour n'est pas necessairement ferme.\n    Les points situes sur l'axe OZ sont consideres comme lie entre eux\n    par application de la symetrie.",
  },
  {
    name: "SGE",
    url: "SGE",
    documentation:
      "$$$$ SGE      NOTICE  CHAT      11/09/12    21:18:04     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure SGE                            Voir aussi :\n    -------------  \n    SYNTAXE ( EQEX ) :   Cf operateur EQEX:\n    _______________________________________\n\n\n    ZONE  $M     'OPER'  'SGE' 'RO' 'UN' 'MU'     'INCO' 'UN'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n Cette procedure calcule le terme de viscosite de sous-maille selon le\n                                                     t\n modele de Smagorinsky : MUs= Ro Cs H**2. |Grad U + Grad U | ou\n Cs est la constante de Smagorinsky (Cs=0.01), H la taille des mailles.\n MUs est homogene a une viscosite dynamique (Kg/m/s).\n Les effets lies a la temperature ne sont pas pris en compte pour le\n moment.\n Le resultat est place dans la table 'INCO' a l'indice 'MUT' et est\n CHPOINT (SCAL SOMMET).\n                                                                                \n    Commentaires\n    ____________\n                                                                                \n                                                                                \n    $M     Modele NAVIER_STOKES\n           MMODEL\n\n    RO     Densite\n           FLOTTANT ou CHPOINT SCAL SOMMET ou MOT\n\n    U      Champ de vitesse moyen\n           CHPOINT (VECT SOMMET)\n                                                                                \n    MU     Viscosite dynamique moleculaire\n           FLOTTANT ou CHPOINT SCAL SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.",
  },
  {
    name: "SHFDT",
    url: "SHFDT",
    documentation:
      "$$$$ SHFDT    NOTICE  MB234859  17/10/02    21:15:23     9577           \n                                             DATE     17/10/02\n                                             \n    Procedure SHFDT                             Voir aussi : DECONV3D\n    ----------------  \n\n\nLa procedure SHFDT est appelee par la procedure DECONV3D dans l'option\nBIELAK pour onde incidente SH inclinee. Elle calcule la fonction de \ntransfert du mouvement d'un point dans le sol par rapport a un point de\nreference a la surface. ",
  },
  {
    name: "SI",
    url: "SI",
    documentation:
      "$$$$ SI       NOTICE  CHAT      11/09/12    21:18:07     7124           \n                                             DATE     11/09/12\n\n    Directive SI                             Voir aussi : SINO\n    ------------                                          FINS  \n    SI  LOG1 ;\n\n\n    Objet :\n    _______\n\n    Les directives SI, SINON et FINSI permettent l'execution\nconditionnelle de donnees suivant la valeur de la variable LOG1 (type\nLOGIQUE)\n\n    Exemple :\n    _________\n\n    BOOL = I > 10 ;\n    SI   BOOL ;\n\n    J= 2 * I ;  COMM execute si I est plus grand que 10\n    LIST J ;\n\n    SINON ;\n\n    J= I ;      COMM execute si I est plus petit que 10\n\n    FINSI ;\n\n\n    Note : SINON est optionnel.\n    ______",
  },
  {
    name: "SIAR",
    url: "SIAR",
    documentation:
      "$$$$ SIAR     NOTICE  MB234859  17/10/02    21:15:23     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur SIAR (SIgnaux ARtificiel)      Voir aussi :\n    -----------------------------------  \n    EVOL1 and/or EVOL2 and/or EVOL3 = SIAR ...\n\n\n\n            ..... | EVOL4 EVOL5 LREEL1 (FLOT1  'TINI' FLOT2)  |\n                  | EVOL4               FLOT1 ('TINI' FLOT2)  | .....\n\n\n\n                         .....  ('ACCE' 'VITE' 'DEPL'             )\n                                ('NCOU'  ENTI1                    )\n                                ('NPOI'  ENTI2                    )\n                                ('NSIN'  ENTI3                    )\n                                ('INIT'  ENTI4                    )\n\n\n\n    Objet :\n    -------\n\n    L'operateur SIAR genere un ensemble de ENTI1 signaux non\n    stationnaires (en acceleration et/ou vitesse et/ou deplacement\n    selon la syntaxe indiquee) correspondant au spectre de puissance\n    stationnaire EVOL4 (comportant une courbe) et aux N fonctions de\n    modulation EVOL5 (comportant N courbes) associees aux bandes de\n    frequences extraites de LREEL1 [ la bande de frequence de la i-eme\n    fonction EVOL5 est donnee par le i-eme (frequence inferieure) et le\n    i+1-eme (frequence superieure) element de LREEL1 ]. Dans le cas ou\n    EVOL5 et LREEL1 ne sont pas donnes, la modulation est de 1 en temps\n    sur toute la plage de frequence de EVOL4.\n\n    Options :\n    ---------\n\n    - Par defaut on genere 3 series de signaux, en acceleration (EVOL1\n      comportant ENTI1 courbes), en vitesse (EVOL2 idem EVOL1) et en\n      deplacement (EVOL3: idem EVOL1).  On ne peut generer qu'une seule\n      serie de signaux en utilisant les mots cle 'ACCE'(leration),\n      'VITE'(sse) et 'DEPL'(acement).\n\n    - Par defaut on ne genere qu'un seul signal par serie EVOL1 et/ou\n      EVOL2 et/ou EVOL3. L'option 'NCOU'  permet d'introduire un nombre\n      ENTI1 plus eleve.\n\n    - Dans le cas ou EVOL5 et LREEL1 sont donnes, les signaux sont\n      generes sur l'intervalle de temps defini par les abscisses dans\n      EVOL5. Un intervalle plus restreint peut etre defini en\n      introduisant les valeurs FLOT1 et/ou FLOT2, ce dernier apres\n      le mot-cle 'TINI'.\n\n    - Dans le cas ou  EVOL5 et LREEL1 ne sont pas donnes, les signaux\n      sont generes de 0. a FLOT1. L'instant initial peut etre change\n      en utilisant l'option 'TINI'.\n\n    - Le signal est genere sur une grille d'instant equidistant. Le\n      nombre de point par defaut correspond a un intervalle elementaire\n      de 0.02s.  On peut aussi indiquer ce nombre a l'aide de l'option\n      'NPOI' suivi de ENTI2.\n\n    - Le signal est genere a partir d'une recomposition en frequence.\n      On peut specifier le nombre de frequence a l'aide du ENTI3 en\n      utilisant l'option 'NSIN'. Par defaut ENTI3 correspond a des\n      bandes de frequence de 0.1 Hz.\n\n    - La recomposition necessite un tirage de phase aleatoire. L'option\n      'INIT' permet l'initialisation de generateur par l'utilisateur en\n      introduisant ENTI4 (objet de type entier).",
  },
  {
    name: "SIF",
    url: "SIF",
    documentation:
      "$$$$ SIF      NOTICE  FD218221  18/03/20    21:15:05     9778           \n                                             DATE     18/03/20\n                                             \n    Procedure SIF                            Voir aussi : G_THETA\n    -------------  \n    SIF   MAT1  DEP1  TAB1 ;\n\n                TAB1.'FRTFISS'\n                    .'LEVRE_1'\n                    .'LEVRE_2'\n                    .'MODMIXTE'\n                    .'MAILLAGE'\n                    .'DEBOUCH'\n                    .'PDEBOUCH'\n                    .'EPAI'\n                    .'FLEXION'\n                    .'MEMBRANE'\n\n\n    Objet :\n    _______\n\n    Cette procedure calcule le facteur d'intensite de contraintes\n    en mode I (eventuellement en mode II ), a partir des deplacements\n    des levres de la fissure.\n    La valeur calculee est une moyenne sur les trois points les\n    plus proches de la pointe de fissure.\n    La procedure est applicable aux cas bidimensionnels, tridimen-\n    sionnels massifs et coques minces.\n    - En 2D, le probleme d'un chargement en mode mixte peut etre traite.\n    - En 3D massif , pour chaque noeud du front de fissure, le facteur \n      d'intensite de contraintes est calcule a partir des deplacements \n      des points situes dans le plan normal au front de fissure au noeud \n      considere (le maillage doit etre elabore de maniere a prevoir \n      l'existence de ces plans normaux au front de fissure). Si la \n      fissure est debouchante, la formule de contraintes planes est \n      appliquee pour les points situes en surface.\n    - En 3D coques minces, les facteurs d'intensite de contraintes de\n      membrane et de flexion peuvent etre calculees. Le calcul du facteur\n      d'intensite de contrainte en flexion est realise grace aux\n      rotations aux noeuds induisant une deformation de peau. Le calcul\n      en mode mixte est supporte.\n\n    Commentaire :\n    _____________\n\n    En entree :\n    __________\n\n    MAT1  : Champ de caracteristiques materielles\n\n    DEP1  : Champ de deplacements\n\n    TAB1  : Objet de type TABLE ,indice par des mots, servant a\n            definir les options et les parametres du calcul :\n\n      Arguments pour un probleme bidimensionnel\n      _________________________________________\n\n       indice       type objet         commentaires\n                      pointe\n\n      FRTFISS        POINT        pointe de la fissure\n\n      LEVRE_1        MAILLAGE     ligne decrivant les levres de la fissure\n                                  si chargement en mode mixte, 1ere levre\n\n      MODMIXTE       LOGIQUE      VRAI si chargement en mode mixte\n\n      LEVRE_2        MAILLAGE     si chargement en mode mixte, ligne\n                                  decrivant la 2ieme levre de la fissure\n\n\n      Arguments pour un probleme tridimensionnel massif\n      _________________________________________________\n\n       indice       type objet         commentaires\n                      pointe\n\n      FRTFISS        MAILLAGE     ligne decrivant le front de fissure\n\n      LEVRE_1        MAILLAGE     surface decrivant les levres de la fissure\n                                  si chargement en mode mixte, 1ere levre\n\n      MODMIXTE       LOGIQUE      VRAI si chargement en mode mixte\n\n      LEVRE_2        MAILLAGE     si chargement en mode mixte, surface\n                                  decrivant la 2ieme levre de la fissure\n\n      DEBOUCH        LOGIQUE      VRAI si la fissure est debouchante\n\n      PDEBOUCH    POINT/MAILLAGE  points du front situes en surface\n\n\n\n      Arguments pour un probleme tridimensionnel coques minces\n      ________________________________________________________\n\n       indice       type objet         commentaires\n                      pointe\n\n      FRTFISS        POINT        pointe de la fissure\n\n      LEVRE_1        MAILLAGE     ligne decrivant les levres de la fissure\n                                  si chargement en mode mixte, 1ere levre\n\n      MODMIXTE       LOGIQUE      VRAI si chargement en mode mixte\n\n      LEVRE_2        MAILLAGE     si chargement en mode mixte, ligne\n                                  decrivant la 2ieme levre de la fissure\n\n      EPAI           FLOTTANT     epaisseur des coques\n\n      MEMBRANE       LOGIQUE      VRAI pour le calcul du terme de\n                                  membrane\n\n      FLEXION        LOGIQUE      VRAI pour le calcul du terme de\n                                  flexion\n\n\n      En sortie :\n      __________\n\n      En sortie, TAB1 permet de retrouver les valeurs du facteur\n      d'intensite de contraintes.\n\n      indice         type objet     commentaires\n                       pointe\n\n      K1           FLOTTANT/TABLE   en 2D, flottant: valeur de K1,\n                                    en 3D massif, table contenant \n                                    les valeurs de K1 a chaque noeud\n                                    du front,\n                                    en 3D coques minces, table\n                                    contenant 3 flottants :\n                                      MEMBRANE : terme de membrane\n                                      FLEXION  : terme de flexion\n                                      TOTAL    : somme des deux\n\n      K2           FLOTTANT/TABLE   si chargement en mode mixte :\n                                    en 2D, flottant : valeur de K2 \n                                    en 3D coques minces, table\n                                    contenant 3 flottants :\n                                      MEMBRANE : terme de membrane\n                                      FLEXION  : terme de flexion\n                                      TOTAL    : somme des deux\n\n\n      Exemple : pour lister le facteur K calcule au noeud P15 du\n                front de fissure ,il faudra coder : LIST (TAB1.K1.P15 )\n\n\n      Remarque :\n      _________\n\n      Si on utilise l'option impi 1 ,le trace de la droite V**2=f(r)\n      ajustee par la methode des moindres carres est superpose aux\n      valeurs de V**2 aux 3 premiers noeuds de la fissure ;le coef-\n      ficient R1 qui qualifie l'ajustement de la droite est egale-\n      ment indique (R1=1 : ajustement parfait).\n      D'autre part, l'ouverture de la fissure (courbe V=f(r)) est\n      tracee .\n      Le signe de K en mode II est donne de fa\u00e7on conventionnelle :\n      un deplacement positif dans le repere de la fissure de la levre\n      superieure (donc negatif de la levre inferieure) implique un\n      K II positif. Si les levres superieures et inferieures sont \n      respectivement introduite dans la table sous 'LEVRE_1' et\n      'LEVRE_2', la convention de signe est respectee. Sinon les levres\n      seront echangees et le message suivant sera affiche :\n           ATTENTION! Echange des lignes de fissure!",
  },
  {
    name: "SIGM",
    url: "SIGM",
    documentation:
      "$$$$ SIGM     NOTICE  FD218221  20/12/17    21:15:54     10820          \n                                             DATE     20/12/17\n                                             \n    Operateur SIGMA                          Voir aussi : VMIS PRIN\n    ---------------                                       CALP    CARA  \n                                                          TRES    RTEN  \n                                                          COMP  \n    SIG1 = SIGMA ('NOER')  | ('LINE') |  MODL1 CHAM1 ( CHAM2 ) DEP1 ;\n                           |  'QUAD'  |\n\n\n\n    Objet :\n    _______\n\nL'operateur SIGMA calcule un champ de contraintes SIG1 a partir d'un\nchamp de deplacements DEP1.\n\nATTENTION : cet operateur suppose un comportement elastique lineaire \ndu materiau et l'absence de deformation initiale.\n(par ex. en cas de deformation due a un champ de temperature, il faudra \nsoustraire a ce champ de contraintes les contraintes d'origine \nthermiques calculees par l'operateur THETA).\n\nPar defaut, seuls les termes LINEAIRES des deformations sont pris en \ncompte. Si une autre hypothese de deformation (quadratique ...) est \nsouhaitee, le mot-cle associe ('QUAD'...) doit etre specifie.\n\nPour certains elements, il s'agit d'efforts (barres, poutres, tuyaux),\npour d'autres il s'agit de contraintes generalisees (coques minces)\nLes contraintes sont calculees dans le repere general pour les\nelements massifs et dans le repere local pour les elements coques,\nplaques, poutres.\n\n\n    Commentaire :\n    _____________\n    \n    'NOER' : Mot-cle indiquant de ne pas faire d'erreur en cas de\n             changement de signe du jacobien.\n\n    'LINE' : Mot-cle indiquant que seuls les termes du premier ordre \n             en deplacement doivent etre utilises.\n    'QUAD' : Mot-cle indiquant que les termes lineaire et quadratiques\n             sont utilises.\n\n    MODL1  : objet modele (type MMODEL)\n\n    CHAM1  : Champ de caracteristiques materielles et eventuellement\n             geometriques si necessaire pour certains elements (cf\n             remarque ci-dessous) (type MCHAML, sous-type\n             CARACTERISTIQUES) ou de matrices de Hooke (type MCHAML,\n             sous-type MATRICE DE HOOKE).\n\n    CHAM2  : Champ de caracteristiques (type MCHAML, sous-type\n             CARACTERISTIQUES) necessaires  pour certains elements\n             (cf remarque ci-dessous) si CHAM1 est un champ de\n             matrices de Hooke.\n\n    DEP1   : champ de deplacements (type CHPOINT)\n\n    SIG1   : champ de contraintes resultat (type MCHAML, sous-type\n             CONTRAINTES)\n\n\n    Remarques :\n    __________\n\n1.  Il faut specifier des caracteristiques si la description\n    geometrique de l'element ne peut se faire par le maillage;\n    par exemple l'epaisseur d'elements de plaques ou les inerties\n    de flexion pour les elements de poutres etc...\n\n2.  Dans le cas de coques excentrees, les contraintes sont calculees\n    au niveau de la surface moyenne excentree.\n\n3. Le calcul des contraintes du second ordre est implemente pour les\n   elements suivants :\n      - massifs : tous\n      - lineiques : BARR POUT TUYA TIMO\n      - plaques et coques : COQ2\n\n --------------------------------------------------------------------\n |                    Contraintes calculees                         |\n |            \u00c9lements finis en formulation MECANIQUE               |\n --------------------------------------------------------------------\n | Element |   Option   |   Noms des      | Repere de |   Points    |\n |  fini   |  de calcul |  contraintes    |   calcul  |   Supports  |\n --------------------------------------------------------------------\n |  POI1   | PLAN GENE  |  EFFX           |  local    |  noeud      |\n --------------------------------------------------------------------\n |  CERC   |   AXIS     |  EFFX           |  local    |  noeud      |\n |         |   FOUR     |                 |           |             |\n --------------------------------------------------------------------\n |  BARR   | PLAN CONT  |  EFFX           |  local    |  Points de  |\n |  BAR3   | PLAN DEFO  |                 |           |    Gauss    |\n |         | TRID       |                 |           |             |\n --------------------------------------------------------------------\n |  COQ2   | PLAN CONT  | N11,NZZ,M11,MZZ |  local    |  Points de  |\n |         | PLAN DEFO  | N11,NZZ,M11,MZZ |           |    Gauss    |\n |         | AXIS       | N11,N22,M11,M22 |           |             |\n |         | FOUR       | N11,N22,N12,    |           |             |\n |         |            | M11,M22,M12     |           |             |\n --------------------------------------------------------------------\n |  POUT   | TRID       | EFFX,EFFY,EFFZ, |  local    |  noeuds     |\n |  TUYA   |            | MOMX,MOMY,MOMZ  |           |             |\n --------------------------------------------------------------------\n |  TIMO   | TRID       | EFFX,EFFY,EFFZ, |  local    |  centre de  |\n |         |            | MOMX,MOMY,MOMZ  |           |  gravite    |\n --------------------------------------------------------------------\n |  TUFI   | TRID       | EFFX,EFFY,EFFZ, |  local    |  centre de  |\n |         |            | MOMX,MOMY,MOMZ  |           |  gravite    |\n |         |            | KI  ,AIRE       |           |             |\n --------------------------------------------------------------------\n |  TRI3   | PLAN CONT  | SMXX,SMYY,SMZZ, |  global   |  Points de  |\n |  QUA4   | PLAN DEFO  | SMXY            |           |    Gauss    |\n |  TRI6   | AXIS       | SMRR,SMZZ,SMTT, |           |             |\n |  QUA8   |            | SMRZ            |           |             |\n |  ICT3   | FOUR       | SMRR,SMZZ,SMTT, |           |             |\n |  ICT6   |            | SMRZ,SMRT,SMZT  |           |             |\n |  ICQ4   |            |                 |           |             |\n |  ICQ8   |            |                 |           |             |\n --------------------------------------------------------------------\n |  JOI2   | TRID       | SMSN,SMN        |  local    |  Points de  |\n |  JOI3   | PLAN DEFO  |                 |           |    Gauss    |\n |         | AXIS       |                 |           |             |\n --------------------------------------------------------------------\n |  JOI4   | TRID       | SMS1,SMS2,SMN   |  local    |  Points de  |\n |         |            |                 |           |    Gauss    |\n --------------------------------------------------------------------\n |  COQ3   | TRID       | N11,N22,N12,    |  local    |  centre de  |\n |         |            | M11,M22,M12     |           |  gravite    |\n --------------------------------------------------------------------\n |  DKT    | TRID       | N11,N22,N12,    |  local    |  Points de  |\n |         |            | M11,M22,M12     |           |   Hammer    |\n --------------------------------------------------------------------\n |  DST    | TRID       | N11,N22,N12,    |  local    |  Points de  |\n |         |            | M11,M22,M12     |           |   Hammer    |\n |         |            | V1 ,V2          |           |             |\n --------------------------------------------------------------------\n |  COQ4   | TRID       | N11,N22,N12,    |  local    |  Points de  |\n |         |            | M11,M22,M12     |           |  Gauss et   |\n |         |            | V1 ,V2          |           |  centre de  |\n |         |            |                 |           |  gravite    |\n --------------------------------------------------------------------\n |  COQ6   | TRID       | SMSS,SMTT,SMST, |  local    |  Points de  |\n |  COQ8   |            | SMSN,SMTN       |           |    Gauss    |\n --------------------------------------------------------------------\n |  CUB8   | TRID       | SMXX,SMYY,SMZZ, |  global   |  Points de  |\n |  TET4   |            | SMXY,SMXZ,SMYZ  |           |    Gauss    |\n |  PRI6   |            |                 |           |             |\n |  PYR6   |            |                 |           |             |\n |  CU20   |            |                 |           |             |\n |  TE10   |            |                 |           |             |\n |  PR15   |            |                 |           |             |\n --------------------------------------------------------------------\n |  LISP   | TRID       | NZZ,NXZ,NYZ,    |  local    |  Points de  |\n |  LISM   |            | MXX,MZZ,KI      |           |    Gauss    |\n --------------------------------------------------------------------",
  },
  {
    name: "SIGN",
    url: "SIGN",
    documentation:
      "$$$$ SIGN     NOTICE  CB215821  18/06/05    21:15:18     9830           \n                                             DATE     18/06/05\n\n      RESU1 =  'SIGN'  OBJET1 ;\n\n\n    Operateur SIGN                           Voir aussi : ABS MASQ\n    --------------  \n    Objet :\n    _______\n\n    L'operateur SIGN calcule le signe d'OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    ENTIER       |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTENTI     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n\n\n      Remarque :\n      __________\n\n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee,\n      seule l'ordonnee subit l'operation.",
  },
  {
    name: "SIGNCORR",
    url: "SIGNCORR",
    documentation:
      "$$$$ SIGNCORR NOTICE  MB234859  17/10/02    21:15:24     9577           \n                                             DATE     17/10/02\n\n  Procedure SIGNCORR                       Voir aussi :\n    ------------------  \n\n    Cette procedure est appelee par la procedure SIGNSYNT",
  },
  {
    name: "SIGNDERI",
    url: "SIGNDERI",
    documentation:
      "$$$$ SIGNDERI NOTICE  MB234859  17/10/02    21:15:24     9577           \n                                             DATE     17/10/02\n\n  Procedure SIGNDERI                       Voir aussi :\n    ------------------  \n    EV02 =  SIGNDERI  EVO1\n\n\n    Objet :\n    _______\n\n    La directive SIGNDERI  ajoute une droite a l'accelerogramme pour\navoir les vitesse et deplacement nuls aux temps initial et final.\n\n    Commentaire :\n    _____________\n\n    EVO1  :  signal a corriger        (type EVOLUTION)\n    EVO2  :  signal corrige           (type EVOLUTION)",
  },
  {
    name: "SIGNENVE",
    url: "SIGNENVE",
    documentation:
      "$$$$ SIGNENVE NOTICE  MB234859  17/10/02    21:15:24     9577           \n                                             DATE     17/10/02\n\n\n  Procedure SIGNENVE                       Voir aussi :\n    ------------------  \n\n    Cette procedure est appelee par la procedure SIGNSYNT",
  },
  {
    name: "SIGNSYNT",
    url: "SIGNSYNT",
    documentation:
      "$$$$ SIGNSYNT NOTICE  MB234859  17/10/02    21:15:24     9577           \n                                             DATE     17/10/02\n\n  Procedure SIGNSYNT                       Voir aussi :\n    ------------------  \n    EV01 =  SIGNSYNT  MOT1  TAB1\n\n\n    Objet :\n    _______\n\n    La procedure SIGNSYNT cree des signaux synthetiques par recombinaison\nde sinuso\u00efdes a phases aleatoires. Deux options sont prevues :\n                     FABR   ET  BLAN\n\n    Commentaire :\n    _____________\n\n    MOT1  :  mot-cle (type MOT ) caracterisant la sortie desiree\n    TAB1  :  objet de type TABLE\n    EVO1  :  signal(signaux) cree(s)\n\n  1-OPTION   creation de signaux synthetiques a partir d'un spectre de\n             reference\n\n   MOT1 = FABR\n\n   TAB1 'MOTIT'            ( type MOT)     texte sur 16 caracteres max.\n\n   TAB1 'SEISME' 'SPECTRE' (type EVOL)     spectre de reference\n   TAB1 'SEISME' 'AMORT'   (type FLOTTANT) amortissement\n   TAB1 'SEISME' 'TYPSP'   (type MOT))     type du spectre\n                                           'ACCE' 'VITE' ou 'DEPL'\n\n   TAB1 'SIGNAL'   'ENVE'    (TYPE MOT)    facultatif : type de\n                                           l'enveloppe = 'PLATLIN'\n                                           par defaut enveloppe constant\n   TAB1 'SIGNAL'   'NP'     (TYPE ENTIER)  tel que le nombre de points\n                                            du signal : 2 ** NP\n   TAB1 'SIGNAL'   'DUREE'  (TYPE FLOTTANT) duree du signal\n   TAB1 'SIGNAL'   'TDEBUT' (TYPE FLOTTANT) debut du plateau\n   TAB1 'SIGNAL'   'TFIN'   (TYPE FLOTTANT) fin du plateau\n\nSignal\n   ^\n   |     --------\n   |   /          \\\n   |  /            \\\n   | /              \\\n   |----|--------|---|-----> temps\n        tdebut  tfin T\n\n   TAB1 'NBITER'           (type ENTIER)   Nombre d'iterations demandees\n   TAB1 'NBSIGN'           (type ENTIER)   Nombre de signaux\n   TAB1 'NALEAT'           (type ENTIER)   Parametre d'initialisation\n                                           des phases\n   TAB1 'FRCOUP'           (type FLOTTANT)  frequence de coupure\n   TAB1 'OPTSORT'          (type MOT)      option facultative de sorties\n                                           intermediaires :\n                                           SPECTRE  : a chaque iteration\n                                               on sortira les spectres\n                                               obtenus\n                                           SIGNAUX  : a chaque iteration\n                                               on sortira les spectres e\n                                               les signaux\n\n       ++ RESULTAT EN SORTIE\n\n   EV01              (type TABLE)      contient le(s) signal(ux)\n                                       genere(s) (ecart-type unite)\n\n 2-OPTION  signal bruit blanc par combinaison de sinuso\u00efdes a phases\n           aleatoires\n\n   MOT1 =  BLANC\n\n   TAB1 'MOTIT'            (type MOT)      texte sur 16 caracteres max.\n   TAB1 'NP'               (type ENTIER)   nombre de points =  2 ** NP\n   TAB1 'DELTAF'           (type FLOTTANT) pas en frequence\n   TAB1 'NALEAT'           (type ENTIER)   parametre d'initialisation\n                                           des phases\n\n       ++ RESULTAT EN SORTIE\n\n   EV01              (type EVOLUTION)      contient le signal\n                                           genere (ecart-type unite)\n\n       REMARQUES\n       ---------\n    La methode de generation utilise la TFR. On doit donc utiliser\n                            2 ** NP  points\n\n  Le spectre de reference doit couvrir l'intervalle :\n     fmin <  1 / T avec T duree du signal\n     fmax > 1 / (2 * DT)  avec DT = T / (2 ** NP)",
  },
  {
    name: "SIGS",
    url: "SIGS",
    documentation:
      "$$$$ SIGS     NOTICE  MB234859  17/10/02    21:15:25     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur SIGSOL                         Voir aussi :\n    ----------------  \n      SOL2  =  SIGSOL  MODL1  MAT1  ( CAR1 )  |  SOL1  |  ;\n                                              |  TAB1  |\n\n\n    Objet :\n    _______\n\n    L'operateur SIGSOL calcule les contraintes a partir d'un objet de\n    type SOLUTION ou d'un objet de type TABLE.\n\n      Commentaire:\n      ____________\n\n\n      MODL1: objet modele ( type MMODEL ).\n\n      MAT1 : champ de caracteristiques materielles et geometriques\n             ou de matrices de Hooke (type MCHAML, sous-type\n             CARACTERISTIQUES ou MATRICE DE HOOKE)\n\n      CAR1 : champ de caracteristiques geometriques\n             (type MCHAML, sous-type CARACTERISTIQUES)\n\n\n\n  a/ cas de l'objet SOLUTION :\n\n    SOL1 : objet de type SOLUTION de sous-type MODE, SOLUSTAT ou\n           PSEUMODE\n\n    SOL2 : objet de type SOLUTION de sous-type identique a celui de SOL1\n           SOL2 est en fait identique a SOL1, mais complete par les\n           contraintes.\n\n  b/ cas de l'objet TABLE :\n\n    TAB1  : objet TABLE definissant les modes, les pseudo-modes, ...\n                - de sous-type BASE_MODALE, ou\n                - de sous-type ENSEMBLE_DE_BASES.\n\n    SOL2 : objet de type TABLE, identique a TAB1 mais complete\n            - a l'indice 'CONTRAINTE_MODALE' pour les modes,\n            - a l'indice 'CONTRAINTE' pour les pseudo-modes,\n           par le champ de contraintes.\n\n    Remarque :\n    __________\n\n    Les caracteristiques CAR1 sont facultatives. Leur support\ngeometriques doit etre inclus dans celui de MAT1. Si on met CAR1, il\nfaut le mettre apres MAT1.\n\n    Il faut specifier les caracteristiques, si la description\ngeometrique de l'element ne peut se faire par le maillage; par exemple,\nl'epaisseur d'elements de plaques ou les inerties d'elements de poutres.",
  },
  {
    name: "SILAM",
    url: "SILAM",
    documentation:
      "$$$$ SILAM    NOTICE  CHAT      11/09/12    21:18:06     7124           \n                                             DATE     11/09/12\n\n    Procedure SILAM                          Voir aussi : @LAREAD\n    ---------------                                       @LACALC  \n    SILAM TAB_LAM DEPL1 NZON VET1 P0 ;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de visualiser la variation des contraintes\n    suivant l'epaisseur par rapport a un point demande.\n\n    En entree:\n\n    TAB_LAM  Table caracteristique du multicouche\n    DEPL1    Champ des deplacements\n    NZON     Numero de la zone demandee\n    VET1     Direction d'orientation du champ des contraintes\n    P0       Point pur lequel on veut visualiser les contraintes",
  },
  {
    name: "SIMP",
    url: "SIMP",
    documentation:
      "$$$$ SIMP     NOTICE  CHAT      11/09/12    21:18:06     7124           \n                                             DATE     11/09/12\n \n  Operateur SIMPLEX                        Voir aussi :\n    -----------------  \n    ENT1 TAB4_X TAB5_D= SIMPLEX TAB1_F TAB2_I TAB3_E (FLOT1);\n\n\n    Objet :\n    -------\n \n    L'operateur SIMPLEX cherche le maximum d'une fonction lineaire\n    ou linearisee F(Xi) de la forme :\n \n    F(Xi) = F0 + Fi * Xi ;\n \n    soumises aux contraintes suivantes:\n\n    - Xi >EG 0.            contraintes primaires\n    \n    - Iji * Xi <EG Ij      contraintes additionnelles de type inegalite\n\n    - Eji * Xi  =  Ej      contraintes additionnelles de type egalite\n\n    Dans le cas ou il y a une solution non infinie on indique :\n\n    - les valeurs de Xi et celle correspondante de F\n\n    - les distances Dj aux inegalites\n\n    Commentaire :\n    -------------\n \n    TAB1_F : table (type TABLE) contenant :\n             - dans TAB1_F.0 : la  valeur    F0   (FLOTTANT)\n             - dans TAB1_F.i : les valeurs   Fi   (FLOTTANT)\n\n    TAB2_I : table (type TABLE) decrivant les inegalites\n             - dans TAB2_I.j.0 : la  valeur  Ij   (FLOTTANT)\n             - dans TAB2_I.j.i : les valeurs Iji  (FLOTTANT)\n\n    TAB2_E : table (type TABLE) decrivant les egalites\n             - dans TAB2_E.j.0 : la  valeur  Ej   (FLOTTANT)\n             - dans TAB2_E.j.i : les valeurs Eji  (FLOTTANT)\n\n    FLOT1  : FLOTTANT facultatif qualifiant la convergence de la\n             solution (par defaut 1.D-10)\n\n    ENT1   : information sur la solution\n             - ENT1 = 0 une solution non infinie existe\n             - ENT1 = 1 solution infinie\n             - ENT1 =-1 pas de solution possible\n \n    TAB4_X : table (type TABLE) contenant les resultats primaires :\n             - dans TAB1_X.0 : la  valeur de F    (FLOTTANT)\n             - dans TAB1_X.i : les valeurs   Xi   (FLOTTANT)\n \n    TAB5_D : table (type TABLE) contenant les distances aux inegalites:\n             - dans TAB5_D.i : les valeurs   Di   (FLOTTANT)\n \n    Remarques :\n    -----------\n\n    Le nombre d'egalites independantes doit etre strictement inferieur\n    au nombre d'inconnues.\n\n    En entree comme en sortie les indices des tables correspondant a des\n    valeurs nulles peuvent etre omis.\n\n    S'il n'y a pas de contraintes additionnelles de type inegalite ou\n    (exclusif) de type egalite, on doit cependant entrer une table vide.\n\n    Si ENT1 n'est pas nul les tables TAB4_X TAB5_D sont vides.",
  },
  {
    name: "SIN",
    url: "SIN",
    documentation:
      "$$$$ SIN      NOTICE  CB215821  18/06/05    21:15:18     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'SIN'   OBJET1 ;\n\n\n    Operateur SIN                            Voir aussi : COS TAN\n    -------------                                         ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur SIN calcule le sinus de l'objet OBJET1.\n    Les valeurs de OBJET1 doivent etre exprimees en degres.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "SINH",
    url: "SINH",
    documentation:
      "$$$$ SINH     NOTICE  CB215821  18/06/05    21:15:18     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'SINH'  OBJET1 ;\n\n\n    Operateur SINH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH      TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur SINH calcule le sinus hyperbolique de l'objet OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "SINO",
    url: "SINO",
    documentation:
      "$$$$ SINO     NOTICE  CHAT      11/09/12    21:18:07     7124           \n                                             DATE     11/09/12\n\n    Directive SINON                          Voir aussi : SI\n    ---------------                                       FINS  \n    SINON ;\n\n\n    Objet :\n    _______\n\n    Les directives SI, SINON et FINSI permettent l'execution condition-\nnelles de donnees.\n\n    Exemple :\n    _________\n\n\n    BOOL = I >  10 ;\n    SI   BOOL ;\n    J= 2 * I ;  COMM EXECUTE SI I EST PLUS GRAND QUE 10 ;\n    LIST J ;\n    SINON ;\n    J= I ;      COMM EXECUTE SI I EST PLUS PETIT QUE 10 ;\n    FINSI ;\n\n    Note  :  SINON est optionnel.\n    _______",
  },
  {
    name: "SISSIB",
    url: "SISSIB",
    documentation:
      "$$$$ SISSIB   NOTICE  AF221230  18/04/19    21:15:01     9813           \n                                             DATE     18/04/19\n\n  Procedure SISSIB                         Voir aussi :\n    ----------------   \n    TAB2 = SISSIB TAB1 ;\n\n\n\n    Objet :\n    _______\n\n    La procedure SISSIB calcule la reponse sismique d'une structure a\nl'aide d'une methode spectrale\n\n    Commentaire :\n    _____________\n\n    TAB1  : objet de type TABLE de sous-type DONNEE contenant les\n            donnees suivantes :\n\n    TAB1.'STRUCTURE'    : TAB2 (type TABLE) de sous-type BASE_MODALE\n                          contenant a l'indice  MODES les modes propres\n                          de la  structure et a l'indice 'PSEUDO_MODES'\n                          (facultatif) les pseudomodes associes a une\n                          excitation sismique.\n\n    TAB1.'AMORTISSEMENT': LREE1 (type LISTREEL) contenant les\n                          amortissements modaux des modes de la\n                          structure.\n\n    TAB1.'EXCITATION'   : TAB3 (type TABLE) de sous-type 'EXCITATION'\n                          indicee par un entier I1 variant de 1 au\n                          nombre de directions d'excitation a prendre\n                          en compte dans le calcul (<EG 3).\n    TAB3.I1             : objet de type TABLE telle que :\n      TAB3.I1.'DIRECTION'             : MO1 (type MOT) valeur 'X' ou 'Y'\n                                        ou 'Z' decrivant la direction de\n                                        l'excitation\n      TAB3.I1.'SPECTRE'               : EVO1 (type EVOLUTION)\n                                        contenant le(s) spectre(s)\n                                        en pseudo acceleration du\n                                        mouvement sismique\n      TAB3.I1.'AMORTISSEMENT'         : LREE2 (type LISTREEL)\n                                        contenant les amortissements\n                                        des spectres\n      TAB3.I1.'ACCELERATION_MAXIMALE' : FLOT1 (type FLOTTANT)\n                                        (facultatif) acceleration\n                                        maximale du seisme.\n\n    TAB1.'RECOMBINAISON_MODES'    : MO2 (type MOT) type de recombinaison\n                                    a choisir parmi :\n          SRSS                    : combinaison quadratique simple\n          ROSENBLUETH             : combinaison quadratique complete\n                                    formule de ROSENBLUETH\n          CQC                     : combinaison quadratique complete\n                                    formule de DER KIUREGHIAN\n          DIX_POUR_CENT           : combinaison par la regle des 10%.\n\n    TAB1.'DUREE'                     : FLOT2 (type FLOTTANT), duree de\n                                       la partie forte du seisme.\n                                       Necessaire uniquement dans le\n                                       cas de la formule de ROSENBLUETH\n\n    TAB1.'RECOMBINAISON_DIRECTIONS'  : MO3 (type MOT) regle de\n                                       recombinaison des directions\n                                       de seisme (actuellement une seule\n                                       possibilite : 'QUADRATIQUE').\n\n    TAB1.'SORTIES'       : TAB4 (type TABLE) de sous-type 'SORTIES'\n                           contenant :\n          TAB4.'DOMAINE'         : objet de type MAILLAGE ou MMODEL\n                                   designant le domaine geometrique sur\n                                   lequel on veut des sorties (il faut\n                                   fournir un objet de type MMODEL quand\n                                   on demande des sorties relatives aux\n                                   contraintes)\n          TAB4.'DEPLACEMENTS'    : objet de type LOGIQUE (VRAI OU FAUX)\n                                   indiquant que l'on veut sortir les\n                                   deplacements.\n          TAB4.'ACCELERATIONS'   : objet de type LOGIQUE (VRAI OU FAUX)\n                                   indiquant que l'on veut sortir les\n                                   accelerations.\n          TAB4.'CONTRAINTES'     : objet de type LOGIQUE (VRAI OU FAUX)\n                                   indiquant que l'on veut sortir les\n                                   contraintes.\n          TAB4.'REACTIONS'       : objet de type LOGIQUE (VRAI OU FAUX)\n                                   indiquant que l'on veut sortir les\n                                   reactions.\n\n    TAB1.'IMPRESSION'    : objet de type LOGIQUE indiquant que l'on veut\n                           l'impression automatique des resultats\n                           (facultatif, par defaut : FAUX).\n\n    TAB1.'TRONCATURE'    : objet de type LOGIQUE indiquant que l'on veut\n                           tenir compte de l'effet de troncature de la\n                           base modale a l'aide des pseudo-modes.\n                           (facultatif, par defaut : FAUX).\n\n    TAB1.'REPRISE'       : Objet de type TABLE (facultatif) genere lors\n                           d'un precedent appel a SISSIB pour la meme\n                           structure, contenant les valeurs des spectres\n                           pour chacun des modes ainsi que les\n                           coefficients de correlation entre modes qui\n                           dans ce cas ne sont pas recalculer.\n\n    TAB2                 : objet de type TABLE contenant les resultats\n                           du calcul :\n\n    TAB2.'REPRISE'       : objet de type TABLE pouvant etre fournie\n                           comme donnee a SISSIB  lors d'un calcul\n                           ulterieur sur la meme structure (voir\n                           TAB1.'REPRISE').\n\n    TAB2.MO4.MO5                : objet de type CHPOINT ou MCHAML\n                                  contenant les sorties MO5\n                                  (objet de type MOT, de valeur\n                                  DEPLACEMENTS, ACCELERATIONS,\n                                  CONTRAINTES ou REACTIONS) pour\n                                  la direction d'excitation MO4\n                                  (objet de type MOT, de valeur\n                                  X, Y ou Z).\n\n    TAB2.'REPONSE_TOTALE'.MO6   : objet de type CHPOINT ou MCHAML\n                                  contenant les sorties MO6\n                                  (objet de type MOT, de valeur\n                                  DEPLACEMENTS, ACCELERATIONS,\n                                  CONTRAINTES ou REACTIONS) pour\n                                  combinees pour l'ensembles des\n                                  directions d'excitation.\n\n  ---------------  Option supplementaire ------------------------------\n\n  TABRESU = SISSIB TAB1 TAB2;\n  \n    La procedure SISSIB autre que la determination de la reponse \n    dynamique d'une structure par la methode sprectrale calcule la\n    matrice correspondant \u00c3  l'enveloppe des efforts pour les elements de type\n    coque,voile (selon le modele de MARTI  \u00c2  trois couches) et pour les\n    elements de type portique (frame) (POUT et TIMO).\n\n    La table TAB2 fourni les elements d'entr\u00c3\u00a9es pour ce calcul:\n\n    TAB2:                Table concernant le voile i-eme objet \n                           de l'etude \n        .I:              voile i\n          .'TYPE':       Chaine 'VOILE' 'POTEAU'\n  Si TYPE == VOILE\n          .'MAIL':       Maillage (MAILLAGE)  i-eme voile\n          .'MODE':       Modele   (MMODEL)    i-eme voile\n          .'MATE':       Materiau (MCHAML)    i-eme voile\n          .'EPAISSEUR':  Epaisseur (FLOTTANT)\n          .'ENROBAGE_E': Enrobage couche externe (FLOTTANT)\n          .'ENROBAGE_I': Enrobage couche interne (FLOTTANT)\n          .'COT_THETA':  Cotg(theta) - facteur pour \n          .'DIR1':       Direction 1 des axes locaux\n          .'DIR2':       Direction 2 des axes locaux\n  Si TYPE == POUTR\n          .'MAIL':       Maillage (MAILLAGE)  i-eme element frame\n          .'MODE':       MMODEL associ\u00c3\u00a9 \u00c3  l'element\n\n\n  En sortie dans la TABRESU on a:\n\n  TABRESU.'CONTRAINTES_MEMBRANE'    sous table des efforts modaux \n                                    projet\u00c3\u00a9s selon le modele de MARTI\n                                    pour les voiles et les coques.\n                           .'VOIi'  Liste des voiles objet de l'etude.\n                                    La numerotation est progressive:\n                                        VOI1; VOI2 etc\n                               . I    efforts modaux \nprojetes \n                                               - mode I\n                                 . J  efforts modaux \nprojetes \n                                      et amplifies selon le coefficient\n                                      d'amplification deduit par le \n                                      spectre selon la direction J\n                                      Composent MCHAML: \n                                      N11E, N22E, N12E, N11I N22I, N12I\n                                      M11T, M22T, M12T, V1T, V2T, VR\n                                      (voir notice EFFMARTI)\n  TABRESU.'CONTRAINTES_POUTRE'    sous table des efforts modaux \n                                  pour les elements frame \n                                  (TIMO et POUT).\n                           .'POUi'  Liste des elements frame objets de \n                                    l'etude.\n                                    La numerotation est progressive:\n                                        POU1; POU2 etc\n                               . I    efforts modaux \nprojetes \n                                               - mode I\n                                 . J  efforts modaux \nprojetes \n                                      et amplifies selon le coefficient\n                                      d'amplification deduit par le \n                                      spectre selon la direction J\n                                      Composent MCHAML: \n                                      EFFX,EFFY,EFFZ,MOMX,MOMY,MOMZ\n  TABRESU.'COVARIANCE'              sous table de la matrice \n                                    caracteristique de l'enveloppe de\n                                    la reponse sismique pour les \n                                    elements  voiles et frame\n  \n                                    pour les voiles les efforts sont \n                                    calcules selon le modele \u00c3  trois \n                                    couches de MARTI (modele MARTI - \n                                    voir EFFMARTI)\n                           .'VOIi'  Liste des voiles objet de l'etude.\n                                    La numerotation est progressive: \n                                    VOI1; VOI2 etc\n                                    Les composantes du MCHAML sont:\n                                    C11E C22E C33E C12E C13E C23E \n                                    C11I C22I C33I C12I C13I C23I \n                                    C11V C22V C12V\n                                    plus precisement\n                                    couche externe [C11E C12E C13E\n                                                    C12E C22E C23E\n                                                    C13E C23E C33E]\n                                    couche interne [C11I C12I C13I\n                                                    C12I C22I C23I\n                                                    C13I C23I C33I]\n                                    couche interm. [C11V C12V \n                                                   C12V C22V]\n                                    ou:\n                                    (couche externe)\n                                      C11E = N11E_max^2\n                                      C22E = N22E_max^2\n                                      C33E = N12E_max^2\n                                      C12E = N11EN22E \n                                               (covariance N11E, N22E)\n                                      C13E = N11EN12E \n                                               (covariance N11E, N12E)\n                                      C23E = N22EN12E \n                                               (covariance N22E, N12E)\n                                    (couche interne)\n                                      C11I = N11I_max^2\n                                      C22I = N22I_max^2\n                                      C33I = N12I_max^2\n                                      C12I = N11IN22I \n                                               (covariance N11I, N22I)\n                                      C13I = N11IN12I \n                                               (covariance N11I, N12I)\n                                      C23I = N22IN12I \n                                               (covariance N22I, N12I)\n                                     (couche intermediaire)\n                                      C11V = V1_max^2\n                                      C22V = V2_max^2\n                                      C12V = V1V2 \n                                               (covariance V1,V2) \n                                    pour les elements frame \n                                    (POUT ou TIMO):\n                           .'POUi'  Liste des element frame objets \n                                    de l'etudes.\n                                    La numerotation est progressive: \n                                    POU1; POU2 etc\n                                    Les composantes du MCHAML sont:\n                                    C11 C12 C13 C14 C15 C16 \n                                        C22 C23 C24 C25 C26\n                                            C33 C34 C35 C36\n                                                C44 C45 C46\n                                                    C55 C56\n                                                        C66\n                                    ou:\n                                      C11 = EFFX_max^2\n                                      C22 = EFFY_max^2\n                                      C33 = EFFZ_max^2\n                                      C44 = MOMX_max^2\n                                      C55 = MOMY_max^2\n                                      C66 = MOMZ_max^2\n\n                                      C12 = EFFXEFFY\n                                               (covariance EFFX, EFFY)\n                                      C13 = EFFXEFFZ\n                                               (covariance EFFX, EFFZ)\n                                      C14 = EFFXMOMX\n                                               (covariance EFFX, MOMX)\n                                      C15 = EFFXMOMY\n                                               (covariance EFFX, MOMY)\n                                      C16 = EFFXMOMZ\n                                               (covariance EFFX, MOMZ)\n\n                                      C23 = EFFYEFFZ\n                                               (covariance EFFY, EFFZ)\n                                      C24 = EFFYMOMX\n                                               (covariance EFFY, MOMX)\n                                      C25 = EFFYMOMY\n                                               (covariance EFFY, MOMY)\n                                      C26 = EFFYMOMZ\n                                               (covariance EFFY, MOMZ)\n\n                                      C34 = EFFZMOMX\n                                               (covariance EFFZ, MOMX)\n                                      C35 = EFFZMOMY\n                                               (covariance EFFZ, MOMY)\n                                      C36 = EFFZMOMZ\n                                               (covariance EFFZ, MOMZ)\n\n                                      C45 = MOMXMOMY\n                                               (covariance MOMX, MOMY)\n                                      C46 = MOMXMOMZ\n                                               (covariance MOMX, MOMZ)\n\n                                      C56 = MOMYMOMZ\n                                               (covariance MOMY, MOMZ)\n\n\n    Remarque 1 :\n    ____________\n\n    Lorsque l'on demande dans un calcul des sorties en contraintes,\nreactions ou bien la prise en compte des effets de troncature de la base\nmodale a l'aide des pseudo-modes, la base modale (TAB1.'STRUCTURE')\ndoit etre completee avec les grandeurs correspondantes (en utilisant\nles operateurs SIGS, REAC, PSMO.\n\n\n    Remarque 2 :\n    ____________\n\n    Les sorties en deplacement (option DEPLACEMENTS) incluent tous\nles degres de liberte du systeme (Deplacements,rotations,pression...)\n\n\n    Remarque 3 :\n    ____________\n\n    Seulement en 3D le caLcul est possible",
  },
  {
    name: "SMTP",
    url: "SMTP",
    documentation:
      "$$$$ SMTP     NOTICE  CHAT      11/09/12    21:18:08     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur SMTP                           Voir aussi :\n    --------------  \n    (RIG2) (CHP3) = SMTP MODE1  RIG1 (TAB2) (CHP1) (CHP2) ;\n\n\n    Objet :\n    _______\n\n    L'operateur SMTP cree la contribution au systeme matriciel\nen trace de charge des termes sources et des termes de convection\ndans le cadre de la resolution de l'equation de diffusion-convection\npar une methode d'elements finis mixtes hybrides (modele DARCY).\n\n\n    Commentaire :\n    _____________\n\n       MODE1  : Objet modele (type MMODEL) decrivant la formulation\n                utilisee. On attend une formulation DARCY (cf. MODE).\n\n       RIG1   : Objet rigidite de sous type MASSEHYB contenant les\n                matrices masses elementaires inverses pour les elements\n                hybrides (cf. MHYB).\n\n       TAB2   : Objet table de sous type DARCY_TRANSITOIRE contenant\n                les conditions initiales et les coefficients pour le\n                schema d'integration en temps dans le cas transitoire\n                (cf procedure darcytra).\n\n       CHP1   : Objet de type CHPOINT contenant l'integrale du terme\n                source en chaque element. Le support geometrique de\n                ce champ est le MAILLAGE des points CENTRE.\n                Le nom de la composante du CHPOINT est SOUR.\n\n       CHP2   : Objet de type CHPOINT contenant le flux a travers\n                chaque face de la vitesse. Le support geometrique de\n                ce champ est le MAILLAGE des points FACE .\n                Le nom de la composante du CHPOINT est FLUX.\n\n       CHP3   : Objet resultat de type CHPOINT contenant differentes\n                contributions au second membre. Le support geometrique\n                de ce champ est le MAILLAGE des points FACE.\n                Le nom de la composante du CHPOINT est FLUX.\n                En permanent, CHP3 n'est cree que si CHP1 est donne.\n\n       RIG2   : Objet rigidite de sous type CONVEFMH contenant les\n                matrices elementaires provenant des termes convectifs.\n                RIG2 n'est cree que si CHP2 est donne. En transitoire\n                RIG2 n'est pas cree si la convection est explicite.",
  },
  {
    name: "SOLS",
    url: "SOLS",
    documentation:
      "$$$$ SOLS     NOTICE  MB234859  17/10/02    21:15:25     9577           \n                                             DATE     17/10/02\n                                             \n    Operateur SOLS                           \n    --------------\n\n    SOL1 = SOLS  ATTA1 STRU1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur SOLS fabrique des solutions statiques U pour l'ensemble\ndes liaisons permanentes de ATTA1 qui s'appliquent sur la structure STRU\n    Il peut s'agir :\n\n                 - soit de liaisons portant sur des noeuds libres,\nU est alors solution de  :  KU + Pt = 0\n\n                 - soit de liaisons portant sur des noeuds bloques,\nU est alors obtenu en imposant un deplacement unite aux noeuds de\nliaison.\n\n    Commentaire :\n    _____________\n\n\n    SOL1   : objet resultat (type SOLUTION, sous-type SOLUSTAT)\n\n    STRU1  : structure elementaire (type STRUCTURE)\n\n    ATTA1  : ensemble des liaisons permanentes (type ATTACHE)",
  },
  {
    name: "SOLVEFMH",
    url: "SOLVEFMH",
    documentation:
      "$$$$ SOLVEFMH NOTICE  CHAT      11/09/12    21:18:08     7124           \n                                             DATE     11/09/12\n\n  Operateur SOLVEFMH                   Voir aussi :\n        ------------------  \n\n\n  APPELE PAR TRANGEOL- PAS POUR UTILISATEUR\n\n  |-----------------------------------------------------------------|\n  | Phrase d'appel (en GIBIANE)                                     |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | mattr TABRES tfin tcfin = SOLVEFMH MoDARCY ChPSour              |\n  |                      MassEFMH (MatTR ou mattM) SMTR Tcini cini  |\n  |                      nomespec nbespece nbsource TABRES tbdartra |\n  |                      CHCLIM ;                                   |\n  |                                                                 |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  | Generalites : MATTEFMH construit la matrice de discretisation   |\n  |               du probleme de transport convection-diffusion pour|\n  |               le premier pas de tps d'un algorithme transitoire.|\n  |               Le second membre et les Conditions limites de flux|\n  |               sont pris en compte.                              |\n  |            RESTE TCINI, DECENTR et TERME LIN                    |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | Deltat   : pas de temps utilise pour calculer la concentration  |\n  |                                                                 |\n  | ChPSour  : Champ par points des sources volumiques par unite de |\n  |            temps (support maillage centre). Composante associees|\n  |            aux especes                                          |\n  |                                                                 |\n  | MassEFMH : matrice elementaire EFMH                             |\n  |                                                                 |\n  | MatTr    : matrice globale sur les traces - rigidite            |\n  |            argument optionnel on donne alors martTM             |\n  |                                                                 |\n  | MatTM    : matrice globale sur les traces - Matrik              |\n  |            argument optionnel on donne alors matrTR             |\n  |                                                                 |\n  | SMTr     : second membre sur les traces                         |\n  |                                                                 |\n  | Tcini    : Trace de concentration aux faces (eventuellement a   |\n  |            plusieurs composantes (especes) - sert a initialiser |\n  |            le XINIT de KRES et a calculer la valeur de la       |\n  |            concentration au centre                              |\n  |                                                                 |\n  | nomespec : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | nbsource : nombre de composantes du terme source qd X especes   |\n  |                                                                 |\n  | TABRES   : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  | TbDarTra : table Darcy transitoire utilisee par MHYB, SMTP ...  |\n  |                                                                 |\n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | Tcfin    : Trace de concentration aux faces (eventuellement a   |\n  |            plusieurs composantes (especes) - etat final apres   |\n  |            resolution                                           |\n  |                                                                 |\n  | cfin     : concentration apres calcul pour toutes les especes   |\n  |                                                                 |\n  | TABSORT  : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  | Matk     : matrice globale sur les traces pour la convection    |\n  |             en format matrik. Elle differe de la matrice entree |\n  |            si cette derniere est une rigidite car traduite en   |\n  |            Matrik. Elle contient egalement les preconditionnemen|\n  |            cree par l'operateur de resolution KRES              |\n  |                                                                 |\n  |-----------------------------------------------------------------|",
  },
  {
    name: "SOLVVF",
    url: "SOLVVF",
    documentation:
      "$$$$ SOLVVF   NOTICE  CHAT      11/09/12    21:18:08     7124           \n                                             DATE     11/09/12\n\n\n  Operateur SOLVVF                           Voir aussi :\n  ----------------  \n\n\n\n   APPELE par TRANGEOL\n\n  |-----------------------------------------------------------------|\n  | Phrase d'appel (en GIBIANE)                                     |\n  |-----------------------------------------------------------------|\n                                                                  \n \n        matsor TABRES cfin cflu cfluco = SOLVVF MoDARCY\n          ChPSour Mattt Smtr Cini Mctot Mdiff Difftot\n          Qface nomespec nbespece\n           nbsource OPTRES CHCLIM  Nouvmat   ;\n\n                                                                  \n  |-----------------------------------------------------------------|\n  | Generalites : MATTVF construit la matrice de discretisation   |\n  |               du probleme de transport convection-diffusion pour|\n  |               le premier pas de tps d'un algorithme transitoire.|\n  |               Le second membre et les Conditions limites de flux|\n  |               sont pris en compte.                              |\n  |            RESTE TCINI, DECENTR et TERME LIN                    |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | ChPSour  : Champ par points des sources volumiques par unite de |\n  |            temps (support maillage centre). Composante associees|\n  |            aux especes                                          |\n  |                                                                 |\n  | Mattt : matrice discretisation  VF                              |\n  |                                                                 |\n  | SMTr     : second membre sur les traces                         |\n  |                                                                 |\n  | nomespec : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | nbsource : nombre de composantes du terme source qd X especes   |\n  |                                                                 |\n  | TABRES   : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  |                                                                 |\n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n\n  | NOUVMAT   : Logique affecte a VRAI lorsque que Matot vient\n  |             d'etre calculee\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  | Matk     : matrice globale VF   \n  |                                                                 |\n  | cfin     : concentration apres calcul pour toutes les especes   |\n  |                                                                 |\n  | TABSORT  : Table complete definissant les options de resolution |    \n  |            pour 'KRES'.                                         |\n  |                                                                 |\n  |-----------------------------------------------------------------|",
  },
  {
    name: "SOMM",
    url: "SOMM",
    documentation:
      "$$$$ SOMM     NOTICE  BP208322  17/07/12    21:15:07     9493           \n                                             DATE     17/07/12\n                                             \n    Operateur SOMME                          Voir aussi : INTG, RESU\n    ---------------  \n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Calcul de la somme des valeurs d'une liste\n2. Calcul de la somme cumulee des valeurs d'une liste\n\n  \n1. Calcul de la somme des valeurs d'une liste1 \n============================================= \n    | REEL2 | = SOMME | LREEL1 | ;\n    | ENTI2 |         | LENTI1 |\n\n    Commentaire :\n    _____________\n\n     LREEL1/LENTI1 : liste de valeurs a sommer (type LISTREEL/LISTENTI)\n                     (= {x1 x2 x3 ...})\n\n     REEL2/ENTI2   : objet resultat (type FLOTTANT/ENTIER)\n                     (= x1 + x2 + x3 + ...)\n     \n     \n  \n2. Calcul de la somme cumulee des valeurs d'une liste \n===================================================== \n \n    | LREEL2 | = SOMME 'CUMU' | LREEL1 | ;\n    | LENTI2 |                | LENTI1 |\n\n    Commentaire :\n    _____________\n\n     LREEL1/LENTI1 : liste de valeurs a sommer (type LISTREEL/LISTENTI)\n                     (= {x1 x2 x3 ...})\n\n     LREEL2/LENTI2 : liste resultat (type LISTREEL/LISTENTI)\n                     (= {x1 (x1+x2) (x1+x2+x3) ...})\n    \n     ",
  },
  {
    name: "SOMT",
    url: "SOMT",
    documentation:
      "$$$$ SOMT     NOTICE  CHAT      11/09/12    21:18:09     7124           \n                                             DATE     11/09/12\n\n  Operateur SOMT                           Voir aussi :\n    --------------  \n    RESU1 = SOMT CHP1 ;\n\n                                            CHP1=CHPOINT\n\n    Objet :\n    _______\n\n   Cet operateur permet de sommer les valeurs d'un champoint.\n   \n   - CHP1 doit etre un champoint a une seule composante de \n     type SCAL.\n   - RESU1 correspond a la somme des valeurs du champoint. C'est \n     un objet de type FLOTTANT.\n   \n   Cet operateur est appele a disparaitre.\n   Il est preferable d'utiliser : \n           \n           RESU1 = MAXI (RESULT CHP1) ;",
  },
  {
    name: "SORE",
    url: "SORE",
    documentation:
      "$$$$ SORE     NOTICE  CB215821  17/07/18    21:15:18     9504           \n                                             DATE     17/07/18\n\n   Operateur SORET                           Voir aussi : COND CAPA GRAD\n   ---------------  \n      RIG1 =  SORET  MMODE1  MAT1 CHAM1  CHPO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur SORET cree une matrice de type conductivite pour des \n    problemes de diffusion particuliers\n\n    Commentaire :\n    _____________\n\n    MMODE1  : Modele de 'THERMIQUE' 'CONDUCTION' ou 'DIFFUSION' 'FICK'\n             (Type MMODEL)\n\n    MAT1    : Champ de caracteristiques materiau \n             (Type MCHAML)\n\n    CHAM1   : Multiplicateur K dans l'equation ci-apres\n             (Type MCHAML)\n\n    CHPO1   : Champ potentiel dont on veut calculer le gradient\n              H dans l'equation ci-apres \n             (Type CHPOINT)\n\n    RIG1    : matrice de rigidite  sous type conductivite \n             (Type RIGIDITE)\n\n  Remarque importante :\n  ---------------------\n       Construit la matrice correspondant au flux suivant :\n\n             Ji = -Di.K.(GRAD H).Ci\n\n        Ji Densite de flux de l'espece i\n        Di Coefficient de diffusion de l'espece i \n        Ci Concentration de l'espece i\n        H  Potentiel induisant un courant proportionnel a Ci\n        K  Coefficient multiplicateur du flux",
  },
  {
    name: "SORT",
    url: "SORT",
    documentation:
      "$$$$ SORT     NOTICE  BP208322  19/04/09    21:15:24     10188          \n                                             DATE     19/04/09\n\n    Directive SORTIR                         Voir aussi : LIRE OPTI\n    ----------------                                      REST SAUV  \n\n    Objet :\n    _______\n\n    Sortie  d'objets  GIBI  vers  un  fichier  d\u00e9fini  au pr\u00e9alable  par\n    l'instruction :\n\n    OPTI 'SORT' NOMFIC ;\n\n    Il est inutile de sp\u00e9cifier l'extension dans NOMFIC.\n\n\n    Remarque : On peut aussi  utiliser  la  syntaxe : 'OPTI' 'SORT' N1 ;\n               o\u00f9 N1 est le num\u00e9ro  d'unit\u00e9 logique (N1 = 7 par d\u00e9faut).\n               Le  fichier  de  sortie sera alors  nomm\u00e9 \"fort.N1\". Ceci\n               n'est toutefois PAS recommand\u00e9.\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Sortie  standard\n2. Sortie 'AVS '\n3. Sortie 'EXCE' (EXCEL TM)\n4. Sortie 'ABAQ' (ABAQUS)\n5. Sortie 'MED ' (Salome)\n6. Sortie 'VTK ' (Paraview)\n7. Sortie 'MAT ' (Echange de Matrices)\n8. Sortie 'CHAI' (Chaines de caracteres)\n9. Sortie 'FER ' (FerView)\n10. Sortie 'NAS ' (Nastran)\n11. Sortie 'STL ' (Stereolithographie)\n\n  \n1. Sortie  standard1 \n=================== \n    +------------------------+\n    | Sortie standard        |\n    +------------------------+\n\n    SORT MAIL1 ('NOOP') ;\n    __________\n\n    En l'absence de mot-cl\u00e9, la directive SORTir \u00e9crit la g\u00e9om\u00e9trie\n    d\u00e9finie par l'objet MAIL1 (type MAILLAGE). Tous les sous-objets\n    nomm\u00e9s contenus dans MAIL1 figurent dans le fichier de sortie.\n\n    Il est possible de relire ce maillage gr\u00e2ce \u00e0 la directive LIRE.\n\n    La num\u00e9rotation des noeuds du maillage sorti est optimis\u00e9e pour\n    une r\u00e9solution par la m\u00e9thode de CROUT. Si l'optimisation n'est\n    pas d\u00e9sir\u00e9e, mettre le mot-cl\u00e9 'NOOP'.\n\n    Remarque : Cette directive existe pour compatibilit\u00e9 avec les\n               versions ant\u00e9rieures de CASTEM et n'est pas appel\u00e9e \u00e0\n               \u00eatre am\u00e9lior\u00e9e (le niveau de sortie utilis\u00e9 est bloqu\u00e9\n               \u00e0 2)\n\n               Dans le contexte d'une utilisation exclusive avec CASTEM,\n               utilisez de pr\u00e9f\u00e9rence SAUVer (et RESTituer).\n  \n2. Sortie 'AVS ' \n================ \n \n    +------------------------+\n    | Sortie AVS             |\n    +------------------------+\n\n    SORT 'AVS' (MAIL1) (CHPO1) (CHML1) ('SUIT') ('TEMP' FLOT1) ;\n    __________\n\n    Lorsque le mot-cl\u00e9 'AVS' est specifi\u00e9, la directive SORTir \u00e9crit\n    MAIL1 (type MAILLAGE), CHPO1 (type CHPOINT) et CHML1 (type MCHAML)\n    au format AVS UCD ASCII (extension .inp).\n\n    La pr\u00e9sence de chacun des trois arguments est facultative, mais au\n    moins l'un des trois doit \u00eatre pr\u00e9sent.\n\n    La partie de la g\u00e9ometrie sortie est d\u00e9termin\u00e9e par (dans l'ordre\n    de priorit\u00e9 d\u00e9croissante) :\n       - le maillage MAIL1\n       - le support du champ par \u00e9l\u00e9ments CHML1\n       - le support du champ par points CHPO1\n\n    Seuls les points qui appartiennent \u00e0 la partie de la geom\u00e9trie\n    specifi\u00e9e ci-dessus sont sortis. Le crit\u00e8re d'appartenance est\n    le num\u00e9ro du noeud et non sa position.\n\n    Lorsqu'un MAILLAGE et un MCHAML sont fournis, on v\u00e9rifie que le\n    support du MCHAML contient enti\u00e8rement le MAILLAGE ; dans le cas\n    contraire un message d'erreur est g\u00e9ner\u00e9.\n\n    Lorsqu'un CHPOINT est pr\u00e9sent dans la liste des arguments et que la\n    geom\u00e9trie est sp\u00e9cifi\u00e9e (soit par un MAILLAGE soit par un MCHAML),\n    on verifie que l'intersection du support du CHPOINT avec cette\n    geom\u00e9trie est non vide. Si ce n'est pas le cas, la sortie du\n    CHPOINT est annul\u00e9e. Lorsque le support du CHPOINT ne couvre pas\n    enti\u00e8rement la g\u00e9ometrie, le CHPOINT est \u00e9tendu sur le reste de\n    la g\u00e9ometrie avec des valeurs nulles.\n\n    Le MCHAML ne doit contenir qu'une seule valeur (de chaque\n    composante) par \u00e9lement. Cette contrainte est impos\u00e9e par AVS.\n    Dans un cas g\u00e9n\u00e9ral, il convient donc de changer les noeuds support\n    du MCHAML \u00e0 sortir en centres de gravit\u00e9 des elements (op\u00e9rateur\n    CHANger).\n\n    La pr\u00e9sence du mot-cl\u00e9 'SUIT' permet de ne pas \u00e9craser les donn\u00e9es\n    \u00e9crites pr\u00e9c\u00e9demment et de rajouter le nouvel enregistrement \u00e0 la\n    suite du fichier. Dans ce cas pr\u00e9cis, il ne faut pas utiliser\n    OPTI 'SORT' avant d'appeler SORT 'AVS'. Le fichier pourrait alors\n    ne pas \u00eatre disponible pour des applications externes tant qu'il\n    n'est pas referm\u00e9 (en utilisant OPTI \"SORT\" \u00e0 nouveau ou en\n    quittant CASTEM).\n\n    Le mot-cl\u00e9 'TEMP' (suivi par un FLOTTANT) donne la possibilit\u00e9\n    de rajouter au fichier AVS une variable globale 'time' qui\n    permettra d'associer les donn\u00e9es \u00e9crites \u00e0 un instant pr\u00e9cis de la\n    simulation.\n  \n3. Sortie 'EXCE' (EXCEL TM) \n=========================== \n \n    +------------------------+\n    | Sortie EXCEL (TM)      |\n    +------------------------+\n\n    SORT 'EXCE' OBJ1 (... OBJn) ('NCOL' ENTI1) ('SEPA' |'PVIR'|) ...\n                                                       |'VIRG'|\n                                                       |'ESPA'|\n                                                       |'TABU'|\n                                                       |'OBLI'|\n                ... ('DIGI' ENTI2) ;\n                \n    avec OBJi = [ LENTIi | LREELi | LMOTSi | EVOLi | TABi ]\n    __________\n\n    Lorsque le mot-cl\u00e9 'EXCE' est specifi\u00e9, la directive SORTir \u00e9crit\n    des donn\u00e9es tabulaires sous forme de .csv (Comma-Separated Values),\n    interpr\u00e9table par des logiciels comme Microsoft EXCEL ou MATLAB par\n    exemple.\n\n    Il est possible de sortir des listes de nombres entiers ou r\u00e9els\n    mais aussi des listes de mots (de 4 caract\u00e8res). Ces listes peuvent\n    \u00eatre contenues dans des objets de type LISTENTI, LISTREEL, LISTMOTS,\n    EVOLUTION ou TABLE.\n\n    Le titre d'une colonne (12 caract\u00e8res max.) peut \u00eatre sp\u00e9cifi\u00e9\n    dans le cas des objets de type EVOLUTION (titres des axes X et Y)\n    ou TABLE (indices de type MOT).\n\n    La longueur du tableau \u00e9crit dans le fichier .csv est celle de la\n    plus longue des listes contenues dans les OBJi.\n\n    En pr\u00e9sence du mot-cl\u00e9 'NCOL', le fichier de sortie se limite \u00e0\n    ENTI1 colonnes. Si l'on d\u00e9passe ce nombre, 3 lignes blanches sont\n    ins\u00e9r\u00e9es pour s\u00e9parer les diff\u00e9rentes s\u00e9ries de ENTI1 colonnes.\n\n    On peut choisir le caract\u00e8re utilis\u00e9 pour s\u00e9parer les colonnes\n    gr\u00e2ce au mot-cl\u00e9 'SEPA', suivi du nom du s\u00e9parateur :\n\n          - 'PVIR' pour un point-virgule (;) => valeur par d\u00e9faut\n          - 'VIRG' pour une virgule (,)\n          - 'ESPA' pour un espace ( )\n          - 'TABU' pour une tabulation ([tab])\n          - 'OBLI' pour une barre-oblique (/)\n\n    Avec le mot-cle 'DIGI', on peut choisir d'ecrire les nombres reels\n    avec ENTI2 decimales apres la virgule.\n    \n  \n4. Sortie 'ABAQ' (ABAQUS) \n========================= \n \n    +------------------------+\n    | Sortie ABAQUS (TM)     |\n    +------------------------+\n\n    SORT 'ABAQ' MAIL1 ;\n    __________\n\n    Lorsque le mot-cl\u00e9 'ABAQ' est specifi\u00e9, la directive SORTir \u00e9crit\n    l'objet MAIL1 (type MAILLAGE) au format des fichiers de donn\u00e9es du\n    code ABAQUS(TM) (extension .inp).\n\n    Seuls les maillages dont les \u00e9lements sont de type MASSIF peuvent\n    \u00eatre sauv\u00e9s au format .inp du code ABAQUS(TM).\n  \n5. Sortie 'MED ' (Salome) \n========================= \n \n    +------------------------+\n    | Sortie MED             |\n    +------------------------+\n\n    SORT 'MED' OBJ1 OBJ2 ... OBJn ;\n\n    avec OBJi = [ MAILi | CHPOi | MCHAi | PASAPASi ]\n    __________\n\n    Lorsque le mot-cl\u00e9 'MED' est  specifi\u00e9, la directive SORTir \u00e9crit au\n    format MED 3.2  les OBJETS OBJi.  Ils pourront  etre  import\u00e9s  dans\n    SALOME.\n\n    OBJi peut \u00eatre de type MAILLAGE, CHPOINT, MCHAML ou une table issue \n    d'un calcul PASAPAS.\n\n    Remarque 1: Les valeurs des objets de type MCHAML doivent \u00eatre \n                exprim\u00e9es sur l'un des supports suivants : \n                 - NOEUD\n                 - GRAVITE\n    \n    Remarque 2: Les MCHAML contenus dans une TABLE issue d'un calcul\n                PASAPAS sont automatiquement chang\u00e9s au support \"NOEUD\".\n                \n    Remarque 3: La TABLE issue d'un calcul PASAPAS doit etre de SOUS-TYPE\n                PASAPAS. Elle doit contenir les indices 'TEMPS' et 'MODELE'. \n                L'indice 'REACTIONS' n'est actuellement pas traite.\n    \n  \n6. Sortie 'VTK ' (Paraview) \n=========================== \n \n    +------------------------+\n    | Sortie PARAVIEW        |\n    +------------------------+\n\n    SORT 'VTK' OBJ1 (MOT1) ... (OBJn) (MOTn)\n               (|'FORM'|) (|'AUTO'|) ('TEMP' FLOT1) ('DOUBLE_PRECISION')\n                |'BINA'|   |'NOUV'|\n                |'ZIP' |   |'SUIT'|\n                           |'NPVD'|\n\n    avec OBJi = [ MAILi | CHPOi | CHMLi | TABi ]\n\n    __________\n\n\n    Objets et noms\n    --------------\n\n    Lorsque le mot-cl\u00e9 'VTK' est specifi\u00e9, la directive SORTir \u00e9crit\n    des objets OBJi de type MAILLAGE, CHPOINT et/ou MCHAML au format\n    VTK, exploitable par exemple par le logiciel PARAVIEW.\n\n    Les objets MOTi (type MOT) sont des noms optionnellement attribu\u00e9s\n    aux diff\u00e9rents OBJi. Ils contiennent 4 caract\u00e8res maximum pour les\n    OBJi de type MAILLAGE (par d\u00e9faut '0001', '0002', etc...), et 8\n    caract\u00e8res maximum pour les objets CHPOINT ou MCHAML (par d\u00e9faut\n    le nom de l'objet s'il existe, ou 'CHPO1', 'CHPO2', etc... sinon).\n\n    Dans la syntaxe ci-dessus, OBJi peut aussi \u00eatre de type TABLE.\n    Celle-ci contient alors des objets MAILLAGE, CHPOINT et/ou MCHAML,\n    dont les noms sont cr\u00e9\u00e9s \u00e0 partir des indices de la TABLE (types\n    ENTIER, FLOTTANT ou MOT convertis en cha\u00eenes de 4 ou 8 caract\u00e8res).\n    Il ne faut donc pas fournir d'objet MOTi si OBJi est une TABLE.\n\n    Il est requis de fournir au moins un objet OBJi de type MAILLAGE.\n    Lorsque plusieurs maillages sont sp\u00e9cifi\u00e9s, chacun est associ\u00e9 \u00e0 un\n    fichier .vtu diff\u00e9rent. Les elements suivants sont disponibles :\n    POI1 SEG2 SEG3 TRI3 TRI6 TRI7 QUA4 QUA8 QUA9 TET4 TE10 PRI6 PR15\n    PYR5 PY13 CUB8 CU20 CU27\n\n\n    Options\n    -------\n\n    a) Les objets OBJi peuvent \u00eatre \u00e9crits sous forme de texte format\u00e9\n       (option 'FORM') ou de donn\u00e9es binaires (option 'BINA').\n       L'option 'ZIP' (binaire compress\u00e9) n'est pas encore impl\u00e9ment\u00e9e.\n\n    b) Le mot-cl\u00e9 'TEMP' permet d'indiquer l'instant de la simulation\n       auquel sont sorties les donn\u00e9es, via FLOT1 (type FLOTTANT).\n       Chaque pas de temps est \u00e9crit dans un fichier .vtu s\u00e9par\u00e9.\n\n    c) Quand plusieurs maillages sont fournis, ou que l'on \u00e9crit des\n       r\u00e9sultats pour diff\u00e9rents pas de temps, les donn\u00e9es sont situ\u00e9es\n       dans plusieurs fichiers, nomm\u00e9s comme suit :\n\n                        NOMFIC.xxxx.yyyy.vtu\n\n        o\u00f9 : xxxx fait r\u00e9f\u00e9rence \u00e0 l'indice du pas de temps\n             yyyy est le nom de la partition MAILi de la g\u00e9om\u00e9trie\n\n       Dans ces cas-l\u00e0, il est fortement recommand\u00e9 de cr\u00e9er un fichier\n       .pvd pour chapeauter les fichiers .vtu d'une m\u00eame simulation.\n       Plusieurs mots-cl\u00e9s r\u00e9gissent la cr\u00e9ation du fichier .pvd :\n\n         - 'AUTO' : essayer de compl\u00e9ter un .pvd si compatible, en\n                    cr\u00e9er un nouveau sinon (comportement par d\u00e9faut)\n         - 'NOUV' : forcer la cr\u00e9ation d'un nouveau .pvd\n         - 'SUIT' : forcer la compl\u00e9tion d'un .pvd d\u00e9j\u00e0 existant\n         - 'NPVD' : ne pas cr\u00e9er de fichier .pvd\n\n       Pour pouvoir compl\u00e9ter un .pvd, il faut \u00e9videmment qu'il existe\n       mais aussi qu'il soit \"compatible\" : le dernier pas de temps doit\n       \u00eatre ant\u00e9rieur \u00e0 la valeur de FLOT1, et la partition du maillage\n       doit \u00eatre identique \u00e0 celle sp\u00e9cifi\u00e9e pour l'appel courant (m\u00eame\n       nombre et m\u00eames noms pour les OBJi de type MAILLAGE).\n\n    d) Le mot-cl\u00e9 'DOUBLE_PRECISION' indique que l'on souhaite \u00e9crire\n       les donn\u00e9es avec une pr\u00e9cision am\u00e9lior\u00e9e :\n       - en ASCII, le format est E24.15E3 au lieu de E14.6E2\n       - en binaire, on utilise 8 octets au lieu de 4 pour les r\u00e9els\n       Le format de l'attribut 'time' des fichiers .pvd est aussi\n       affect\u00e9 par la pr\u00e9sence de cette option.\n  \n7. Sortie 'MAT ' (Echange de Matrices) \n====================================== \n \n    +------------------------+\n    | Sortie MAT             |\n    +------------------------+\n\n    SORT 'MAT' MOT1 MOT2 RIG1\n        ('TITR' MOT3)\n        ('INCO')\n        ('GEOM')\n        ('FORC' CHP1)\n        ('CONN' CHP2)\n        ('RESU' CHP3)\n        ('SOLU' CHP4) ;\n\n\n    MOT1 = | 'MM' ou 'MATRIX_MARKET'\n           | 'RB' ou 'RUTHERFORD_BOEING'\n\n    MOT2 = | 'ASSE' pour 'ASSEMBLEE'\n           | 'ELEM' pour 'ELEMENTAIRE'\n\n    __________\n\n    Lorsque le mot-cl\u00e9 'MAT' est specifi\u00e9, la directive SORTir \u00e9crit\n    l'objet RIG1 de type RIGIDITE dans un format standardis\u00e9 d'\u00e9change\n    de donn\u00e9es matricielles. Il s'agit de fichiers ASCII analysables\n    tr\u00e8s facilement gr\u00e2ce \u00e0 des scripts \u00e9crits en Matlab, fortran,\n    python, etc...\n\n    Deux formats sont disponibles :\n\n    MatrixMarket (.mm)\n    ------------------\n    C'est une repr\u00e9sentation qui privil\u00e9gie la simplicit\u00e9 et la\n    lisibilit\u00e9 : \u00e0 choisir si l'on veut pouvoir lire le fichier \"\u00e0\n    l'oeil nu\" ou avec un parseur programm\u00e9 en moins de 3 minutes.\n\n    Rutherford-Boeing (.rb)\n    -----------------------\n    Ce format utilise le stockage CSC (Compressed Sparse Column) pour\n    minimiser la taille du fichier. En contrepartie, la matrice n'est\n    pas d\u00e9chiffrable sans un parseur (un peu) plus complexe que pour\n    les fichiers MatrixMarket.\n\n\n    Dans les deux cas, on peut choisir de sortir l'objet RIG1 tel qu'il\n    est stock\u00e9 en interne dans CAST3M (sous forme \u00e9l\u00e9mentaire, mot-cl\u00e9\n    'ELEM') ou apr\u00e8s assemblage (tel que r\u00e9alis\u00e9 lors de l'appel \u00e0 RESO,\n    mot-cl\u00e9 'ASSE').\n\n\n    On peut adjoindre une courte description (128 caract\u00e8res maximum)\n    du probl\u00e8me trait\u00e9 dans l'ent\u00eate du fichier gr\u00e2ce \u00e0 l'option 'TITR'\n    suivie du texte d\u00e9sir\u00e9 dans l'objet MOT3 (type MOT).\n\n\n    Quand le mot-cl\u00e9 'INCO' est pr\u00e9sent, on \u00e9crit aussi un fichier\n    annexe d'extension .inco associant tous les degr\u00e9s de libert\u00e9\n    primaux (inconnues) puis duaux (\u00e9quations) \u00e0 un num\u00e9ro de noeud\n    (premi\u00e8re colonne) et un num\u00e9ro de composante (deuxi\u00e8me colonne) :\n\n    - Les indices des noeuds proviennent d'une num\u00e9rotation locale \u00e0 la\n      matrice, que l'on peut obtenir dans un fichier annexe .geom en\n      utilisant le mot-cl\u00e9 'GEOM' (la i-\u00e8me ligne de ce fichier donne\n      les coordonn\u00e9es du noeud n\u00b0i de la matrice ; le numero de noeud\n      interne a CAST3M est donne en derniere colonne).\n\n    - Les indices des composantes sont rattach\u00e9s aux noms (mots de 4\n      lettres maxi.) via des listes \u00e9crites en fin des fichiers .inco.\n\n\n    Les mot-cl\u00e9s FORC, CONN, RESU et SOLU, qui permettent de sortir\n    respectivement le second-membre, la connectivit\u00e9 du maillage, les\n    champs de r\u00e9sultats ou une solution analytique, dans chacun des deux\n    formats, ne sont pas encore disponibles.\n\n\n    REMARQUE 1 : L'op\u00e9rateur SORT ne permet pas directement d'\u00e9crire une\n                 sous-matrice issue de RIG1. Pour limiter les noeuds ou\n                 les composantes \u00e0 sortir, il faut utiliser au pr\u00e9alable\n                 les op\u00e9rateurs REDU et/ou EXTR.\n\n    REMARQUE 2 : Lorsque l'on sort RIG1 sous forme ASSEmbl\u00e9e, la valeur\n                 sp\u00e9cifi\u00e9e pour l'option 'NORM' affectera le resultat :\n\n                 - OPTI 'NORM' 'ANNU'\n                   => sort une matrice \"brute\", \u00e9quivalente (au sens\n                      math\u00e9matique) \u00e0 celle obtenue avec MOT2='ELEM'\n                      (ceci est valable uniquement pour SORT, car RESO\n                       renormalise TOUJOURS les multiplicateurs de\n                       Lagrange).\n\n                 - OPTI 'NORM' 'AUTO'\n                   => sort une matrice dans laquelle seuls les \u00e9ventuels\n                      multiplicateurs de Lagrange ont \u00e9t\u00e9 renormalis\u00e9s\n\n                 - OPTI 'NORM' LMOT1 LREE1 LMOT2 LREE2\n                   => sort une matrice renormalis\u00e9e manuellement.\n\n    REMARQUE 3 : Pour en savoir plus sur les formats d'\u00e9criture\n                 utilis\u00e9s, merci de se r\u00e9f\u00e9rer aux documents suivants :\n\n                 - The Matrix Market Exchange Formats: Initial Design,\n                   Boisvert R. F., Pozo R., Remington K. A. (Dec 1996)\n                 - The Rutherford-Boeing Sparse Matrix Collection,\n                   Duff I. S., Grimes R. G., Lewis G. L. (Sep 1997)\n  \n8. Sortie 'CHAI' (Chaines de caracteres) \n======================================== \n \n    +------------------------+\n    | Sortie CHAINE          |\n    +------------------------+\n\n    SORT 'CHAI' OBJ1 (... OBJn) ;\n\n    avec OBJi = [ MOT | ENTIER | FLOTTANT | TEXTE ]\n    __________\n\n    Lorsque le mot-cl\u00e9 'CHAI' est specifi\u00e9, la directive SORTir \u00e9crit\n    les objets en arguments au format texte d'une maniere similaire a\n    celle de la directive MESS, mais dans le fichier specifie\n    prealablement par OPTI 'SORT'.\n  \n9. Sortie 'FER ' (FerView) \n========================== \n \n    +------------------------+\n    | Sortie FER/View        |\n    +------------------------+\n\n    SORT 'FER' MAIL1 (CHPO1 ... CHPOn)  ('TITR' CHAI1)\n                    ('SUIT'   (ENTI1))  ('TEMP' FLOT1) ;\n    __________\n\n    Cette fonctionnalite a ete mise gracieusement a disposition de la\n    communaut\u00e9 Cast3M par :\n       Z. Q. FENG  (Universit\u00e9 d'Evry - zhi-qiang.feng@ufrst.univ-evry.fr)\n       G. TURBELIN (Universit\u00e9 d'Evry - gregory.turbelin@ufrst.univ-evry.fr)\n       J. M. CROS  (Universit\u00e9 d'Evry - jean-michel.cros@ufrst.univ-evry.fr)\n\n    Lorsque le mot-cl\u00e9 'FER' est sp\u00e9cifi\u00e9, la directive SORTir \u00e9crit les\n    objets en arguments au format des fichiers de donn\u00e9es du logiciel de\n    post-traitement FERVIEW (extension .asc).\n\n    MAIL1     : Objet  MAILLAGE a fournir obligatoirement\n    CHPOi     : Objets CHPOINT dont l'intersection du MAILLAGE support\n                avec MAIL1 est non vide\n   'TITR'     : MOT  cle suivi  d'une  chaine de  caracteres  permettant\n                d'affecter un titre global aux donnees sorties\n   'SUIT'     : MOT cle  indiquant que les donnees  seront ecrites  a la\n                suite du  fichier sans  ecrasement. L'ajout  de l'entier\n                ENTI1 permet d'indexer l'enregistrement par cette valeur\n   'TEMP'     : MOT  cle  suivi  d'un   FLOTTANT  permettant  d'associer\n                l'enregistrement a un instant de la simulation\n\n    Les donnees sont ecrites dans le fichier specifie prealablement par\n    la directive 'OPTI' 'SORT' 'Nom_du_fichier' ;\n  \n10. Sortie 'NAS ' (Nastran) \n=========================== \n \n    +------------------------+\n    | Sortie NAS             |\n    +------------------------+\n\n    SORT 'NAS' MAIL1 ;\n    __________\n\n    Cette fonctionnalite a ete mise gracieusement a disposition de la\n    communaut\u00e9 Cast3M par :\n       M. BULIK  (Altair Engineering France - mbulik@altair.com)\n\n    Lorsque le mot-cl\u00e9 'NAS' est sp\u00e9cifi\u00e9, la directive SORTir \u00e9crit les\n    objets de type MAILLAGE au format BULK de Nastran.\n\n    MAIL1     : Objet  MAILLAGE a fournir obligatoirement\n\n    Les donnees sont ecrites dans le fichier specifie prealablement par\n    la directive 'OPTI' 'SORT' 'Nom_du_fichier' ;\n  \n11. Sortie 'STL ' (Stereolithographie) \n====================================== \n \n    +------------------------+\n    | Sortie STL             |\n    +------------------------+\n\n    SORT 'STL' MAIL1 ;\n    __________\n\n    Lorsque le mot-cl\u00e9 'STL' est sp\u00e9cifi\u00e9, la directive SORTir \u00e9crit les\n    objets de type MAILLAGE au format STL ASCII.\n\n    MAIL1     : Objet   MAILLAGE 3D  compose de 'TRI3' et  decrivant une\n                surface ferm\u00e9e. La convention  de ce format specifie que\n                les normales sont sortantes. \n\n    Les donnees sont ecrites dans le fichier specifie prealablement par\n    la directive 'OPTI' 'SORT' 'Nom_du_fichier' ;",
  },
  {
    name: "SOUC",
    url: "SOUC",
    documentation:
      "$$$$ SOUC     NOTICE  PV        19/01/18    21:15:01     10079          \n                                             DATE     19/01/18\n\n    Operateur SOUCIS                           Voir aussi : ERRE\n    ----------------  \n\n    Objet:\n    -----\n\n    L' operateur SOUCI gere la signalisation des soucis.\n\n    Il rend un logique vrai si le souci est non nul et faux sinon.\n    Suivi par un entier N1, il positionne l'indicateur de souci courant.\n\n    Remarques:\n    --------\n\n    Le souci est croissant mais peut \u00eatre remis a zero.\n\n    Chaque assistant a son souci propre.",
  },
  {
    name: "SOUDAGE",
    url: "SOUDAGE",
    documentation:
      "$$$$ SOUDAGE  NOTICE  PASCAL    21/01/29    21:15:33     10872          \n                                             DATE     21/01/29\n  \n    Procedure SOUDAGE                        Voir aussi : WAAM\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. 1ere Fonction : specification d'une sequence de soudage\n    1.1 Specification generale\n    1.2 Donnees d'entree\n    1.3 Option POINT\n    1.4 Option PASSE\n    1.5 Option DEPLA\n    1.6 Donnees en sortie\n2. 2nd Fonction : sequencage de l'apport de matiere\n\n  \n1. 1ere Fonction : specification d'une sequence de soudage1 \n========================================================== \n  \n1.1 Specification generale \n-------------------------- \n    Objet :\n    -------\n\n        La procedure SOUDAGE permet de definir une sequence de soudage,\n    dont la description est stockee dans une table qui contient aussi\n    des donnees d'entree, principalement des parametres relatifs au\n    procede de soudage (vitesse de soudage, puissance, debit de fil...).\n\n        La procedure possede 3 options :\n        - POINT : pour definir un point de soudure ;\n        - PASSE : pour definir une passe de soudage ;\n        - DEPLA : pour definir un deplacement de l'outil.\n        La specification de la sequence de soudage se fait par des appels\n    successifs a la procedure en combinant ces differentes options.\n\n       En sortie, la table contient des donnees servant a la definition\n    d'un calcul de soudage (evolution de la puissance thermique au cours\n    du temps, trajectoire de l'outil, etc.)\n\n    Sa syntaxe generale est :\n\n    SOUDAGE TAB1 | POINT  ... ;\n                 | PASSE  \n                 | DEPLA  \n\n    Remarque : la procedure SOUDAGE ne fonctionne qu'en dimension 3.\n    ----------\n\n  \n1.2 Donnees d'entree \n-------------------- \n    TAB1 . VITESSE_DE_SOUDAGE      : objet FLOTTANT, vitesse de soudage\n\n    TAB1 . PUISSANCE_DE_SOUDAGE    : objet FLOTTANT, puissance thermique\n                                     de soudage\n\n    TAB1 . DIAMETRE_DE_FIL         : objet FLOTTANT, diametre du fil de\n                                     metal d'apport\n\n    TAB1 . VITESSE_DE_FIL          : objet FLOTTANT, vitesse de devidement\n                                     du fil de metal d'apport\n\n    TAB1 . DEBIT_DE_FIL            : objet FLOTTANT, debit volumique de\n                                     fil de metal d'apport (ignore si\n                                     les indices VITESSE_DE_FIL et\n                                     DIAMETRE_DE_FIL sont renseignes)\n\n    TAB1 . VITESSE_DE_DEPLACEMENT  : objet FLOTTANT, vitesse de deplacement\n                                     de la torche sans soudage (par defaut,\n                                     egal a VITESSE_DE_SOUDAGE)\n\n    TAB1 . POINT_DE_DEPART         : objet POINT, origine de la sequence\n                                     de soudage ((0 0 0) par defaut)\n\n    TAB1 . TEMPS_DE_COUPURE        : objet FLOTTANT, temps de mise a zero\n                                     ou a valeur nominale de la puissance\n                                     de soudage (0,1 par defaut)\n\n    TAB1 . LARGEUR_DE_PASSE        : objet FLOTTANT, largeur d'une passe\n                                     (requis pour appel option DEPLA COUCHE) \n\n\n  \n1.3 Option POINT \n---------------- \n    Syntaxe :\n    ---------\n\n    SOUDAGE TAB1 'POINT' FLOT1 ('PUIS' FLOT2) ('DEBI' FLOT3) ;\n\n    Commentaire :\n    -------------\n\n    FLOT1   : objet FLOTTANT, duree de realisation du point de soudure\n\n    FLOT2   : objet FLOTTANT, puissance thermique utilisee pour la\n              realisation de ce point de soudure. Ne modifie pas la\n              valeur fournie dans TAB1.'PUISSANCE_DE_SOUDAGE'\n\n    FLOT3   : objet FLOTTANT, debit de fil utilise pour la realisation\n              de ce point de soudure. Ne modifie pas la valeur fournie\n              dans TAB1.'DEBIT_DE_FIL'\n\n\n  \n1.4 Option PASSE \n---------------- \n    Syntaxe :\n    ---------\n\n    SOUDAGE TAB1 'PASSE' | 'DROI' P1         | ('RELA') ('VITE' FLOT1) ...\n                         | 'CERC' P1 P2 (N1) |  'ABSO'\n                         | 'MAIL' LIGN1 \n\n    ... ('PUIS' FLOT2) ('DEBI' FLOT3) ;\n\n    Objet :\n    -------\n\n       L'option PASSE permet de specifier la realisation d'une passe\n    partant du point courant et suivant :\n       - DROI : une ligne droite jusqu'au point P1 ;\n       - CERC : un arc de cercle de centre P2 jusqu'au point P1 ;\n       - MAIL : la ligne de maillage LIGN1.\n       \n\n    Commentaire :\n    -------------\n\n    P1      : objet POINT, extremite finale de la passe\n\n    P2      : objet POINT, centre du cercle\n\n    N1      : objet ENTIER, nombre de segments discretisant l'arc de cercle\n              (par defaut, valeur calculee pour avoir 5 degres d'angle\n               entre deux segments).\n\n    LIGN1   : objet MAILLAGE, ligne de maillage orientee representant\n              la trajectoire de la passe\n\n    'RELA'  : objet MOT, indique que les coordonnees des points sont fournies\n              relativement au point courant\n\n    'ABSO'  : objet MOT, indique que les coordonnees des points sont fournies\n              dans le repere general de coordonnees\n\n    FLOT1   : objet FLOTTANT, vitesse de soudage utilisee pour la\n              realisation de cette passe. Ne modifie pas la\n              valeur fournie dans TAB1.'VITESSE_DE_SOUDAGE'\n\n    FLOT2   : objet FLOTTANT, puissance thermique utilisee pour la\n              realisation de cette passe. Ne modifie pas la\n              valeur fournie dans TAB1.'PUISSANCE_DE_SOUDAGE'\n\n    FLOT3   : objet FLOTTANT, debit de fil utilise pour la realisation\n              cette passe soudure. Ne modifie pas la valeur fournie\n              dans TAB1.'DEBIT_DE_FIL'\n    \n\n  \n1.5 Option DEPLA \n---------------- \n    Syntaxe :\n    ---------\n\n    SOUDAGE TAB1 'DEPLA' | 'DROI' P1         | ('RELA') ('VITE' FLOT1) ;\n                         | 'CERC' P1 P2 (N1) |  'ABSO'\n                         | 'MAIL' LIGN1 ;\n                         | 'COUCHE' ('PAUSE' FLOT2) ;\n\n    Objet :\n    -------\n\n       L'option DEPLA permet de specifier un deplacement de l'outil\n    partant du point courant et suivant :\n       - DROI : une ligne droite jusqu'au point P1 ;\n       - CERC : un arc de cercle de centre P2 jusqu'au point P1 ;\n       - MAIL : la ligne de maillage LIGN1.\n\n       Lors de la realisation d'un depot multi-couches, l'option COUCHE\n    permet de deplacer l'outil verticalement sur la couche superieure.\n    Pour cela, l'indice 'LARGEUR_DE_PASSE' doit etre renseigne. Cette\n    option suppose que les couches sont deposees suivant le 3e axe de\n    de coordonnees.\n    \n\n    Commentaire :\n    -------------\n\n    P1      : objet POINT, extremite finale du deplacement\n\n    P2      : objet POINT, centre du cercle\n\n    N1      : objet ENTIER, nombre de segments discretisant l'arc de cercle\n              (par defaut, valeur calculee pour avoir 5 degres d'angle\n               entre deux segments).\n\n    LIGN1   : objet MAILLAGE, ligne de maillage orientee representant\n              la trajectoire du deplacement\n\n    'RELA'  : objet MOT, indique que les coordonnees des points sont fournies\n              relativement au point courant\n\n    'ABSO'  : objet MOT, indique que les coordonnees des points sont fournies\n              dans le repere general de coordonnees\n\n    FLOT1   : objet FLOTTANT, vitesse utilisee pour ce deplecement. Ne modifie\n              pas la valeur fournie dans TAB1.'VITESSE_DE_DEPLACEMENT'\n\n    FLOT2   : objet FLOTTANT, temps de pause lors du changement de couche\n              (par default, calcule a partir de la VITESSE_DE_DEPLACEMENT\n              et de l'epaisseur de la couche)\n\n\n  \n1.6 Donnees en sortie \n--------------------- \n    TAB1 . TRAJECTOIRE             : objet MAILLAGE, ligne orientee decrivant\n                                     la trajectoire de la torche de soudage.\n                                     Les segments de couleur rouge representent\n                                     les passes de soudage, les segments de\n                                     couleur verte, les deplacements.\n\n         . EVOLUTION_DEPLACEMENT   : objet EVOLUTION, evolution temporelle\n                                     du deplacement de la torche de soudage\n                                     sur sa trajectoire.\n\n         . EVOLUTION_PUISSANCE     : objet EVOLUTION, evolution temporelle\n                                     de la puissance thermique delivree.\n\n         . EVOLUTION_DEBIT         : objet EVOLUTION, evolution temporelle\n                                     du debit de fil de metal d'apport.\n\n    \n    Donnees pour la procedure WAAM :\n    --------------------------------\n\n         . POINTS                  : objet TABLE, contient les differents\n                                     points de soudure specifies\n\n         . POINTS . i . POINT      : objet POINT, lieu geometrique du point\n                      . INSTANTS   : objet LISTREEL, instants de debut et\n                                     de fin de realisation du point de soudure\n                      . PUISSANCE  : objet FLOTTANT, puissance de soudage\n                                     utilisee pour le point de soudure\n                      . DEBIT      : objet FLOTTANT, debit de fil de metal\n                                     d'apport utilise pour le point de soudure\n\n         . PASSES                  : objet TABLE, contient les differentes\n                                     passes de soudage specifiees\n\n         . PASSES . i . MAILLAGE   : objet MAILLAGE, trajectoire de la passe\n                      . GEOMETRIE  : objet MOT, valant DROITE, CERCLE ou\n                                     MAILLAGE en fonction de l'option choisie\n                      . CENTRE     : objet POINT, si geometrie CERC, centre\n                                     du cercle, indice inexistant sinon.\n                      . INSTANTS   : objet LISTREEL, instants de debut et\n                                     de fin de realisation de la passe\n                      . VITESSE    : objet FLOTTANT, vitesse de soudage\n                                     utilisee pour la passe\n                      . PUISSANCE  : objet FLOTTANT, puissance de soudage\n                                     utilisee pour la passe\n                      . DEBIT      : objet FLOTTANT, debit de fil de metal\n                                     d'apport utilise pour la passe\n  \n2. 2nd Fonction : sequencage de l'apport de matiere \n=================================================== \n \n    Objet :\n    -------\n\n        La procedure SOUDAGE permet de sequencer dans le temps l'apparition\n    des elements du maillage de cordons de soudure. Ce sequencage definit\n    la discretisation spatio-temporelle de l'apport de matiere d'une\n    simulation numerique du soudage.\n\n        On distingue le maillage de chaque cordon par sa COULEUR. Certains\n    cordons peuvent avoir la meme couleur mais leurs maillages ne doivent\n    alors pas avoir de noeud en commun.\n\n        On suppose que chaque cordon correspond a une passe de soudage et\n    que l'ordonnancement des passes respecte l'ordre des couleurs defini\n    par l'operateur COUL : passe 1 = cordon de couleur 1, passe 2 = cordon\n    de couleur 2, et ainsi de suite.\n\n        Si l'ordonnancement des couleurs des cordons ne respecte pas cet\n    ordre, alors il doit etre precise (voir syntaxe).\n\n\n    Syntaxe :\n    ---------\n\n    TAB2     = SOUDAGE TAB1 'MAIL' GEO1 (| LENT1 ) 'PAS' FLOT1 ('TEMP' (FLOT2)) ;\n                                        (| LMOT1 )\n\n    Commentaire :\n    -------------\n\n    TAB1     : objet TABLE, sequence de soudage definit avec la procedure\n               soudage (1ere fonction).\n\n    GEO1     : objet MAILLAGE, maillage des cordons de soudure.\n\n    LENT1    : objet LISTENTIER, liste des numeros de couleur des cordons \n               dans l'ordre de realisation des passes.\n\n    LMOT1    : objet LISTMOTS, liste des couleurs des cordons dans l'ordre\n               de realisation des passes.\n\n    FLOT1    : objet FLOTTANT, pas de discretisation en espace de l'apport\n               de matiere (le long de la trajectoire de soudage).\n\n    FLOT2    : objet FLOTTANT, pas des temps de calcul des passes de soudage.\n               Par defaut, (1/pi) du temps de parcours du 1er pas de\n               discretization en espace.\n                 ",
  },
  {
    name: "SOUR",
    url: "SOUR",
    documentation:
      "$$$$ SOUR     NOTICE  PASCAL    19/11/19    21:15:38     10384          \n                                             DATE     19/11/19\n                                             \n  Operateur SOURCE                         Voir aussi :\n    ----------------  \n    CHPO1 =  SOURCE  MODE1 | VAL1 GEO1 | (CAR1) ('ELEM') ;\n                           |           |\n                           | CHPO2     |\n                           | CHAM1     |\n\n\n    Objet :\n    _______\n\n    L'operateur SOURCE permet d'imposer une source volumique de\nchaleur dans une ou plusieurs parties d'une structure.\n\n    Commentaire :\n    _____________\n\n\n    MODE1     : structure modelisee (type MODELE)\n\n    VAL1      : valeur de la source volumique (type FLOTTANT)\n\n    GEO1      : partie de la structure ou est imposee la\n                source (type MAILLAGE)\n\n    CHPO2     : champ a une seule composante pour les massifs\n                et a 3 composantes  QINF, QVOL et QSUP pour les coques \n                contenant les valeurs des sources respectivement en \n                peau interne,  surface moyenne , peau externe.\n                (type CHPOINT)\n\n   CHAM1      : champ par element a une seule composante pour les\n                massifs et a trois composantes QINF, QVOL et QSUP \n                pour les coques contenant les valeurs des sources\n                respectivement en peau interne,  surface moyenne,\n                peau externe.\n\n    CAR1      : caracteristiques geometriques de la structure\n                (type MCHAML, sous-type CARACTERISTIQUES).Cette\n                donnee est utilisee uniquement dans le cas des\n                elements coques, barre, tuy2 et tuy3\n                (tuy. = advection thermique dans un tuyau).\n\n    'ELEM'    : (facultatif) si fourni, le champ resultat CHPO1 est\n                alors un MCHAML aux NOEUDS.\n\n    CHPO1     : flux nodaux equivalents (type CHPOINT) de composantes\n                Q pour les massifs, QINF Q QSUP pour les coques.\n\n\n      ATTENTION : Si vous utilisez un MODELE plus grand que la zone ou\nla source est definie par le CHPOINT CHPO2 ou le maillage GEO2 , alors\nles elements exterieurs touchantla frontieres, voient une source non\nnulle,et seront eux aussi charges. Il est donc fortement conseille de\nfournir une reduction du MODELE sur les elements strictement concernes.",
  },
  {
    name: "SPAL",
    url: "SPAL",
    documentation:
      "$$$$ SPAL     NOTICE  CHAT      11/09/12    21:18:10     7124           \n                                             DATE     11/09/12\n\nProcedure SPAL                                  Voir aussi : KEPSILON\n\n  SYNTAXE (cf. operateur EQEX)\n  ____________________________\n\n        'ZONE' $MD 'OPER' 'SPAL' 'RHO' 'UN' 'MU' 'DT'\n                                 ('PERIODIC' GEOM1 GEOM2)\n                                 'INCO' 'NU0'\n\n\n\n\n   Objet :\n   _______\n\n   Calcule le champ de viscosite dynamique turbulente grace au modele\n   de Spalart-Allmaras.\n\n\n   Commentaires :\n   ______________\n\n   1) LES PARAM\u00c8TRES REQUIS sont:\n\n      RHO*[MOT|FLOTTANT|CHPOINT] : Masse volumique            (kg/m3)\n      UN *[MOT|CHPOINT]          : Vitesse d'advection        (m/s)\n      MU *[MOT|FLOTTANT|CHPOINT] : Viscosite moleculaire dyn. (Pa.s)\n      DT *[MOT|FLOTTANT]         : Duree du pas de temps      (s)\n      NU0*[MOT]                  : Nom attribue a la viscosite modifiee\n\n      Un objet de type MOT indique que l'on va chercher la valeur\n      dans la table 'INCO'.\n\n   /!\\ ATTENTION: Ce modele necessite aussi la donnee de la distance\n                  a la paroi dans (RV.'PAROIS'.'DIST') !!\n\n\n\n   2) Le champ de viscosite effective (moleculaire + turbulente) est\n      renvoye dans la table 'INCO' a l'indice 'MUFN' par defaut, mais\n      l'utilisateur peut definir ce nom lui-meme (cf. definition des\n      parametres avances, remarque 4)\n\n   /!\\ ATTENTION: Les conditions aux limites de Dirichlet ainsi que\n                  les conditions initiales devront porter sur 'NU0'\n                  et non pas sur 'MUFN' !!\n\n\n\n   3) LE PARAM\u00c8TRE OPTIONNEL 'PERIODIC' permet d'imposer des\n      conditions de periodicite sur 'MUFN' entre les maillages GEOM1\n      et GEOM2.\n\n\n\n   4) LES PARAM\u00c8TRES AVANC\u00c9S du modele peuvent etre personnalises en\n      ajoutant une table nommee 'SPALART_ALLMARAS' dans RV:\n\n   +----------------------------------------------------------------+\n   | TABLE PRINCIPALE 'SPALART_ALLMARAS'                            |\n   +-----------+-----------+----------------------------------------+\n   | Indice    | Valeur    | Description                            |\n   +-----------+-----------+----------------------------------------+\n   | 'KVERS'   | [MOT-cle] | Variante du modele a utiliser:         |\n   |           | 'ORIG'    | - Modele original de base (par defaut) |\n   |           | 'TRIP'    | - Modele original avec ft1 et ft2      |   <= \u00c0 FAI\n   |           | 'SALSA'   | - Modele modifie par Rung et al.       |   <= \u00c0 FAI\n   |           |           |                                        |\n   | 'NOMMUF'  | MOT       | Nom de l'inconnue de viscosite totale  |\n   |           |           |                   ('MUFN' par defaut)  |\n   |           |           |                                        |\n   | 'KCONST'  | TABLE     | Constantes du modele                   |\n   |           |           |                                        |\n   | 'KTGRAD'  | [MOT-cle] | Mesure scalaire du tenseur gradient:   |\n   |           | 'TOROT'   | - Taux de rotation (Par defaut)        |\n   |           | 'TODEF'   | - Taux de deformation                  |\n   |           | 'COMPL'   | - Norme euclidienne du tenseur complet |\n   |           | 'MIXTE'   | - Expression de Dacles-Mariani et al.  |\n   |           |           |                                        |\n   | 'KMUFN'   | [MOT-cle] | Instant auquel est renvoye 'MUFN'      |\n   |           | 'APRES'   | - Fin du pas de temps (Par defaut)     |\n   |           | 'AVANT'   | - Debut du pas de temps                |\n   |           | 'DEMI'    | - Apres le demi pas de temps ('ALGO1') |\n   |           |           |                                        |\n   | 'KSRC'    | [MOT-cle] | Algo. utilise pour les termes sources  |\n   |           | 'ALGO1'   | - Methode de Newton (Par defaut)       |\n   |           | 'ALGO2'   | - Separation S+/S-                     |\n   |           |           |                                        |\n   | 'NEWTON'  | TABLE     | Parametres de l'algorithme de Newton   |\n   |           |           | si le parametre 'KSRC' vaut 'ALGO1'    |\n   |           |           |                                        |\n   | 'METHINV' | TABLE     | Options de la methode d'inversion.     |\n   |           |           | Par defaut, ce sont celles definies    |\n   |           |           | pour le probleme global dans RV        |\n   |           |           |                                        |\n   | 'KOPT2'   | TABLE     | Options de discretisation temporelle.  |\n   |           |           | Par defaut, les parametres passes par  |\n   |           |           | EQEX 'OPTI' sont appliques a la fois a |\n   |           |           | l'operateur de convection/diffusion    |\n   |           |           | TSCA et a la derivee temporelle DFDT   |\n   |           |           | (sauf que DFDT est 'CENTREE')          |\n   |           |           |                                        |\n   | 'VERROU'  | TABLE     | Etat des verrous numeriques            |\n   |           |           |                                        |\n   | 'DUMP'    | LOGIQUE   | Sauver les variables internes au modele|\n   |           |           | SA dans la table 'INCO' sous l'indice  |\n   |           |           | 'SPAL'? (Par defaut: FAUX)             |\n   +-----------+-----------+----------------------------------------+\n\n   +----------------------------------------------------------------+\n   | SOUS-TABLE 'KCONST'                                            |\n   +-----------+-----------+----------------------------------------+\n   | Indice    | Valeur    | Description                   | Defaut |\n   +-----------+-----------+-------------------------------+--------+\n   | 'SIGMA'   | FLOTTANT  | Nombre de Prandtl turbulent   | 2/3    |\n   | 'CB1'     | FLOTTANT  | Taux de production turbulente | 0.1355 |\n   | 'CB2'     | FLOTTANT  | Diffusion non conservative    | 0.622  |\n   | 'KAPPA'   | FLOTTANT  | Constante de Von Karman       | 0.41   |\n   | 'CV1'     | FLOTTANT  | \u00c9pai. ss-couche visq. (Bas-Re)| 7.1    |\n   | 'CW1'     | FLOTTANT  | Equilibre Prod/Dest zone log. | 3.2391 |\n   | 'CW2'     | FLOTTANT  | Controle du coef. frottement  | 0.3    |\n   | 'CW3'     | FLOTTANT  | Borne sup. de fw (environ)    | 2.     |\n   +-----------+-----------+----------------------------------------+\n\n   +----------------------------------------------------------------+\n   | SOUS-TABLE 'NEWTON'                                            |\n   +-----------+-----------+----------------------------------------+\n   | Indice    | Valeur    | Description                   | Defaut |\n   +-----------+-----------+-------------------------------+--------+\n   | 'CRIT'    | FLOTTANT  | Critere d'arret en norme inf. | 1.E-10 |\n   | 'IMAX'    | ENTIER    | Nombre max. d'iterations      | 10     |\n   | 'OMEGA'   | FLOTTANT  | Facteur de relaxation         | 1.     |\n   +-----------+-----------+----------------------------------------+\n\n   +----------------------------------------------------------------+\n   | SOUS-TABLE 'VERROU'                                            |\n   +-----------+-----------+----------------------------------------+\n   | Indice    | Valeur    | Description                   | Defaut |\n   +-----------+-----------+-------------------------------+--------+\n   | 'POSITIF' | LOGIQUE   | Maintenir NU0 et S0 positifs  | VRAI   |\n   | 'DURBIN'  | LOGIQUE   | Realisabilite selon Durbin    | FAUX   |   <= \u00c0 FAI\n   +-----------+-----------+----------------------------------------+\n\n\n\n   Complements : PR\u00c9CISIONS SUR LES ALGORITHMES DISPONIBLES\n   _____________\n\n   Les termes sources sont tous non lineaires, et peuvent devenir\n   negatifs (du moins dans sa version originale). Deux algorithmes ont\n   ete mis en place pour ameliorer la robustesse:\n\n   'ALGO1' => Le traitement des termes sources est effectue avant\n              l'etape de convection/diffusion (methode de splitting).\n              On avance jusqu'a un pas de temps intermediaire grace\n              a une methode de Newton prenant en compte uniquement\n              les termes sources. Le demi-pas de temps restant\n              concerne alors la resolution de l'EDO de transport,\n              sans termes sources.\n\n   'ALGO2' => La partie negative du terme source est linearisee afin\n              d'etre implicitee, tandis que la partie positive est\n              laissee au second membre (explicite). On resout alors\n              l'equation de transport complete, avec sources.",
  },
  {
    name: "SPO",
    url: "SPO",
    documentation:
      "$$$$ SPO      NOTICE  MB234859  17/10/02    21:15:25     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur SPO                            Voir aussi :\n    --------------  \n    EVOL2 = SPO  EVOL1 'AMOR' LREEL1 ('FREQ' LREEL2) ('TEMP' LREEL3) ...\n\n            ... ('COUL' COUL1)  MOT1 ;\n\n\n    Objet :\n    _______\n\n    Cet operateur permet de calculer un ou plusieurs spectres\nd'oscillateurs selon qu'on donne un ou plusieurs amortissements.\n\n    Commentaire :\n    _____________\n\n    EVOL1    : objet contenant le signal d'excitation (type EVOLUTION)\n\n   'AMOR'    : mot-cle suivi de :\n    LREEL1   : valeur(s) d'amortissement correspondant a (aux)\n               oscillateur(s) (type LISTREEL)\n\n   'FREQ'    : mot-cle suivi de :\n    LREEL2   : objet contenant la liste de frequences o\u00ba l'on desire\n               que les deplacements maximaux soit calcules.\n\n               Par defaut, on prend la liste definie comme suit :\n\n               Soit    T la duree du signal.\n                       DT le pas de temps moyen du signal.\n                       XSI une valeur de la liste des amortissements.\n\n               On prend une liste de frequences comprises entre 1/T et\n               1/2*DT :\n\n               De 1/T a 1/XSI*T les frequences sont prises avec un pas\n               constant qui vaut 1/T.\n\n               De 1/T a 1/2*DT, le pas DF varie de fa\u00e7on que l'on ait\n               DF/F=XSI.\n               DF=F(i+1)-F(i) (difference entre 2 frequences successives\n               F(i) etant la valeur de la ieme frequence).\n\n   'TEMP'    : mot-cle suivi de :\n    LREEL3   : objet contenant la liste des temps o\u00ba l'on desire\n               que les deplacements soient calcules (reponse de\n               l'oscillateur) (type LISTREEL)\n               Par defaut, on utilise la liste des temps de l'objet\n               EVOLUTION, contenant l'excitation completee sur une\n               demi periode par des zeros.\n\n   'COUL'    : mot-cle suivi de :\n    COUL1    : couleur desiree des courbes (type MOT)\n\n    MOT1     : MOT permettant de specifier le type de sortie :\n              'DEPL' : spectre en deplacement\n              'VITE' : spectre en pseudo-vitesse\n              'ACCE' : spectre en pseudo-acceleration\n              'ACCA' : spectre en acceleration absolue\n\n    EVOL2    : objet resultat (type EVOLUTION).",
  },
  {
    name: "SPON",
    url: "SPON",
    documentation:
      "$$$$ SPON     NOTICE  MB234859  17/10/02    21:15:26     9577           \n                                             DATE     17/10/02\n\n    Operateur SPON                           Voir aussi : SPO\n    --------------  \n    EVOL3 = SPON ('DEMA') 'SIGN' EVOL1 'SPEL' EVOL2 MOT1 \n\n             'AMOR' LREEL1 'MOT2' LREEL2  ('COUL' COUL1)  MOT3;\n\n\n    Objet :\n    _______\n\n    Cet operateur permet de calculer un ou plusieurs spectres\n    d'oscillateurs non lineaires EVOL3 selon qu'on donne un ou\n    plusieurs amortissements et spectres lineaires.\n\n    Commentaire :\n    _____________\n\n   'DEMA'    : mot-cle. En presence du mot cle 'DEMA' le spectre \n               calcule est le spectre de reponse non-lineaire \n               ayant comme ductilite appellee la valeur de la \n               ductilite donnee (a 5% pres). Dans ce cas l'\n               evolution resultat a en ordonnees le deplacement \n               relatif, pseudo-vitesse ou pseudo-acceleration \n               correpondant a la limite elastique.\n               En l'absence du mot cle 'DEMA' le spectre calcule \n               est le spectre de reponse non-lineaire ayant \n               comme deplacement limite elastique le quotient \n               entre le deplacement maximum lineaire (donne par \n               EVOL2) est la ductilite donnee (1ere valeur de \n               LREEL2). Dans ce cas l'evolution resultat a en\n               ordonnees le deplacement relatif, pseudo-vitesse \n               ou pseudo-acceleration definis de la fa\u00e7on usuelle.    \n\n   'SIGN'    : mot-cle suivi de :\n    EVOL1    : objet  contenant le signal d'excitation avec pas\n               de temps constant ( DT = CONSTANT !! )\n\n   'SPEL'    : mot-cle suivi de :\n    EVOL2    : objet contenant le  spectre lineaire avec ordonnees en\n               frequence. Elle peut etre calculee par l'operateur SPO. \n               Ceci n'est pas obligatoire car cette evolution ne sert\n               que pour definir la limite elastique en absence du mot \n               cle 'DEMA' ou la valeur de la limite elastique de la \n               premiere iteration dans le cas ou le mot cle 'DEMA' \n               est donne.  \n\n    MOT1     : MOT permettant de specifier le type du spectre lineaire\n              (EVOL2) :\n              'DEPL' : spectre en deplacement\n              'VITE' : spectre en pseudo-vitesse\n              'ACCE' : spectre en pseudo-acceleration\n\n   'AMOR'    : mot-cle suivi de :\n    LREEL1   : valeur(s) d'amortissement correspondant a (aux)\n               oscillateur(s) et a (aux) spectre(s) donne(s) en EVOL2\n\n   'MOT2'    : MOT specifiant le comportement non-lineaire \n              (de type bilineaire)\n              'TAKE' : Takeda bilineaire\n              'CINE' : elastoplastique avec ecrouissage cinematique\n              'ISOT' : elastoplastique avec ecrouissage isotrope\n              'ELAS' : elastique non-lineaire\n\n    LREEL2   : objet  contenant les proprietes du modele non lineaire\n\n               Pour le modele Takeda :\n               -----------------------\n               5 flottants. En ordre :\n\n                       Force |\n                             |    ___2_____\n                             |   /      * /\n                             | 1/*       /\n                         7*  | /        /3\n              _______*_______ /________/_________\n                    /        /      *       Depl.\n                  6/        /|   *\n                  /        / |* 4\n                -----5----/* |\n                             |\n                             |\n             Figure: Forme General des Relations Force/Deplacement\n                     du Modele\n\n\n                - Ductilite : quotient entre le deplacement\n                  maximum et le deplacement limite elastique\n\n                - Teta : quotient entre la raideur tangente de\n                  la courbe monotone apres la limite\n                  elastique (Rig2) et la raideur lineaire\n                  ( Rig1 = W**2 ). La raideur apres le limite elastique\n                  est calculee par : Rig2 = W ** 2 * Teta \n\n                - sfdp :parametre de degradation de rigidite cyclique.\n                  Une decharge est orientee vers un effort egal a\n                  -sfdp*effort limite elastique (voir notice de MATE). \n                                 \n                - Beta :parametre de pincement\n                  La valeur de l'effort pinp (voir notice de MATE) est\n                  pinp = beta*effort limite elastique.\n\n                - srdp : parametre d'adoucissement cyclique\n                  Il represente l'augmentation de la deformation maximale\n                  atteinte par unite d'energie absorbee.\n                  (voir notice de MATE)\n\n\n               Pour les autres modeles :\n               --------------------------------\n               Il suffit de donner les deux premiers parametres du\n               modele precedent. \n\n\n   'COUL'    : mot-cle suivi de :\n    COUL1    : couleur desiree des courbes\n\n    MOT3     : MOT permettant de specifier le type de sortie :\n              'DEPL' : spectre en deplacement\n              'VITE' : spectre en pseudo-vitesse\n              'ACCE' : spectre en pseudo-acceleration\n              'EPSE' : spectre en deformation non-lineaire\n                       cumulee\n\n    EVOL3    : resultat de type EVOLUTION. Chaque courbe de cet\n               objet contient autant de points que EVOL2",
  },
  {
    name: "SPPLANC",
    url: "SPPLANC",
    documentation:
      "$$$$ SPPLANC  NOTICE  MB234859  17/10/02    21:15:26     9577           \n                                             DATE     17/10/02\n                                                                     \n  Procedure SPPLANC                          Voir aussi :\n  -------------------  \n  TAB2 =  SPPLANC   TAB1 \n\n\n  Objet :\n  -------\n  Cette procedure permet le calcul des spectres de plancher par une \n   approche analytique.                                               \n                                                                    \n Commentaire\n ------------\n TAB1   :   objet de type table contenant                           \n                                                                    \n                                                                    \n     Indice   Type                         Commentaires             \n     ------   ----                         ------------                         \n     STRUC    TABLE                        Caracteristiques modales \n                                           de la structure support  \n                                                                    \n                     Indice     Type                                \n                                                                    \n                     NMODE      ENTIER     Nombre de modes          \n                     FREQU      TABLE      Les frequences modales   \n                     AMORT      TABLE      Les amortissements modaux\n                                                                    \n     PLANCH   TABLE                        Caracteristiques du      \n                                           Plancher etudie (P)      \n                                                                    \n                     Indice     Type                                \n                                                                    \n                     LISFREQ    LISTREEL   Axe frequentiel du       \n                                           spectre de plancher      \n                                              PAR DEFAUT :          \n                                           discretisation par la    \n                                           procedure \"DISCRFR\"      \n                                                                    \n                     COEFFPL    TABLE      Les coefficients de      \n                                           participation modale     \n                                           en P : ( Qn * PHIn ) / Mn\n                                                                    \n                     AMORTPL    FLOTTANT   Amortissement du spectre \n                                           de plancher a calculer   \n                                                                    \n                     TYPSPPL    MOT        Type du spectre de       \n                                           plancher                 \n                                           'DEPL' : deplacement     \n                                           'VITE' : pseudo-vitesse  \n                                           'ACCE' : pseudo-accel.   \n                                                                    \n     EXCIT    TABLE                        Donnees de l'excitation  \n                                           ( processus separable )  \n                                                                    \n                     Indice     Type                                \n                                                                    \n                     ENVE       MOT        Type de l'enveloppe      \n                                           'PLATLIN' :              \n                                           montee-plat-descente     \n                                           ( par defaut : plateau ) \n                                                                    \n                     DUREE      FLOTTANT   Duree du signal          \n                                                                    \n                     TDEB       FLOTTANT   Temps ou commence        \n                                           le plateau ( montee )    \n                                                                    \n                     TFIN       FLOTTANT   Temps ou se termine      \n                                           le plateau ( debut desc.)\n                                                                    \n                     DSP        EVOLUTION  D.S.P. de la fonction    \n                                           aleatoire stationnaire \n\n\n\n\n TAB2   :   objet de type table contenant                           \n                                                                    \n                                                                    \n     Indice   Type                         Commentaires             \n     ------   ----                         ------------       \n     SIGM     EVOLUTION                    Spectre ecart-type \n  \n     FPIC     EVOLUTION                    Spectre de facteur de pic\n\n     SPPL     EVOLUTION                    Spectre de plancher \n                                           (SPPL = SIGM*FPIC)\n                                           ",
  },
  {
    name: "SQTP",
    url: "SQTP",
    documentation:
      "$$$$ SQTP     NOTICE  CHAT      11/09/12    21:18:11     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur SQTP                           Voir aussi :\n    --------------  \n    CHP2 = SQTP MODE1 RIG1 RIG2 CHP1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur SQTP cree la contribution au systeme matriciel\nen trace de charge de force vomuliques dans le cadre de la resolution \nde la loi de DARCY par une methode d'elements finis mixtes hybrides\n(modele DARCY). Cet operateur est notamment utile pour prendre en compte \nles forces de gravite lorsque l'on pose le probleme de DARCY en terme\nde pression et non plus de charge.\n\n   !! Cette fonctionnalite n'est pas compatible actuellement avec la \n   resolution d'un probleme de DARCY en transitoire !!\n\n\n    Commentaire :\n    _____________\n\n     MODE1  : Objet modele (type MMODEL) decrivant la formulation\n              utilisee. On attend une formulation DARCY (cf. MODE).\n\n     RIG1   : Objet rigidite de sous type MASSE contenant les\n              matrices masses elementaires pour les elements\n              hybrides (cf. MHYB).\n\n     RIG2   : Objet rigidite de sous type HYBTP (cf. MATP)\n\n     CHP1   : Objet de type CHPOINT de composantes FX FY (FZ) contenant\n              le vecteur de la force volumique moyenne par element.\n            Le support geometrique de ce champ est le MAILLAGE CENTRE\n\n     CHP2   : Objet resultat de type CHPOINT contenant la contribution\n              au second membre des forces volumiques. Le support\n              geometrique de ce champ est le MAILLAGE de points FACE.\n              Le nom de la composante du CHPOINT est FLUX.",
  },
  {
    name: "SSCH",
    url: "SSCH",
    documentation:
      "$$$$ SSCH     NOTICE  CHAT      11/09/12    21:18:11     7124           \n                                             DATE     11/09/12\n        \n    Operateur SSCH                           Voir aussi : CHI1\n    --------------                                        CHI2  \n       CHPO1 = SSCH TAB1 CHPO2 CHPO3 CHPO4 ;\n\n\n\n      Objet\n      -----\n      Calcul du terme de production chimique lors d'un calcul couple\n      avec une equation de transport par espece.\n\n\n      Commentaires\n      ------------\n      TAB1  est un objet de type TABLE et de sous type chimi1\n            (cf operateur CHI1)\n\n      CHPO2 nom d'un objet de type CHPOIN ayant une composante pour\n            chaque composante du systeme chimique\n            contient la variation de la partie fixee des composantes\n            chimiques au cours du pas de temps.\n\n      CHPO3 nom d'un objet de type CHPOIN ayant une composante pour\n            chaque espece en solution, et contenant la concentration\n            de chaque espece en solution.\n\n      CHPO4 nom d'un objet de type CHPOIN ayant une composante pour\n            chaque espece en solution, et contenant la variation\n            des especes en solution au cours du pas de temps\n\n      CHPO1 nom d'un objet de type CHPOIN ayant une composante pour\n            chaque espece en solution, et contenant le terme de\n            production chimique.",
  },
  {
    name: "SSTE",
    url: "SSTE",
    documentation:
      "$$$$ SSTE     NOTICE  CHAT      11/09/12    21:18:11     7124           \n                                             DATE     11/09/12\n\n  Operateur SSTE                          Voir aussi :\n     --------------                                                      \n      SIGF VARF DEPIN RI1 = 'SSTE'  MODL SIG0 VAR0 DEPST CARAC\n                                    (PRECIS) (NMAXSSTEPS) (NITMAX) ;\n\n\n\n     Description :\n     -------------\n\n     Integration avec sous-decoupage de l'equation constitutive \n     elastoplastique au niveau du point d'integration.\n\n     Modeles : J2, RH_COULOMB, MRS_LADE.\n\n     Il rend les contraintes (SIGF), les variables internes (VARF) et \n     la deformation plastique (DEPIN).\n\n     Il rend aussi le module tangent consistant (RI1).\n\n     Il est appele par UNPAS.\n\n     Voir la notice de PASAPAS pour utiliser cette possibilite.",
  },
  {
    name: "STRU",
    url: "STRU",
    documentation:
      "$$$$ STRU     NOTICE  MB234859  17/10/02    21:15:26     9577           \n                                             DATE     17/10/02\n                                             \n  Operateur STRU                           Voir aussi :\n    --------------  \n    STRU1 = STRU  RIG1 MASS1 (N1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur STRU permet de creer un objet STRUCTURE, par les\ndonnees des objets RIGIDITE et MASSE s'y rapportant.\n\n    Commentaire :\n    _____________\n\n    RIG1  : matrice de rigidite (type RIGIDITE)\n\n    MASS1 : matrice de masse de la structure (type RIGIDITE)\n\n    N1    : nombre de sous-structures identiques a creer (type ENTIER)\n\n    STRU1 : structure (type STRUCTURE)\n\n    Remarque :\n    __________\n\n    Si N1 n'est pas specifie, STRU1 est une sous-structure dite element-\ntaire (elle ne contient qu'une seule structure).\n\n    Si N1 est specifie, N1 sous-structures identiques sont creees. Chaque\nsous-structure est reperable par son numero. Par exemple STRU1 4 est la\n4ieme sous-structure de STRU1.",
  },
  {
    name: "SUIT",
    url: "SUIT",
    documentation:
      "$$$$ SUIT     NOTICE  CB215821  17/07/17    21:15:03     9496           \n                                             DATE     17/07/17\n\n    Operateur SUITE                          Voir aussi : PROG LECT MOTS\n    ---------------  \n    LCHPO1 = SUITE (CHPO1 (CHPO2 ...)) ;\n\n\n    Objet :\n    _______\n\n    L'operateur SUITE permet de creer une liste de champs par points.\n\n\n    Commentaire :\n    _____________\n\n    CHPOi  : champs par points (type CHPOINT)\n\n    LCHPO1 : objet resultat (type LISTCHPO) contenant les champs par\n             points CHPOi",
  },
  {
    name: "SUPE",
    url: "SUPE",
    documentation:
      "$$$$ SUPE     NOTICE  PV        18/04/24    21:15:19     9815           \n                                             DATE     18/04/24\n                                             \n  Operateur SUPER                          Voir aussi :\n    ---------------  \n    RESU1 = SUPER  | 'RIGIDITE'  ('NOMU') RIG1  |  GEO1  |   \n                   |                            |  RIG2  |\n                   |                            |  CHPO1 |\n                   |\n                   | 'CHARGE'    SUPER1   FORC1\n                   | 'DEPLA'     SUPER1   DEP1  (FORC1) ('NOER')\n\n    (LCHP1) RESU1 = SUPER 'MASSE' SUPER1  MAS1 ('LCHP')\n \n\n    Objet :\n    _______\n \n    L'operateur SUPER est le point de passage oblige pour toutes les\noperations concernant un super-element.\n \n    Commentaire :\n    _____________\n \n    Suivant le mot-cle, plusieurs options sont possibles :\n \n    ---------------\n    | 1ere Option |\n    ---------------\n \n     'RIGIDITE' : mot-cle indiquant qu'on definit et qu'on calcule la\n                  matrice equivalente d'un super-element. Pour permettre\n                  de charger les relations, les multiplicateurs de \n                  Lagrange associes sont ajoutes aux points maitres.\n \n     NOMU       : mot cle optionnel indiquant qu'on ne veut pas   \n                  transferer les multiplicateurs de Lagrange dans les \n                  noeuds maitres\n \n     RIG1       : matrice de rigidite que l'on veut reduire\n                  (type RIGIDITE)\n \n     GEO1   |   : servent a definir l'ensemble des points maitres et les\n     RIG2   |     inconnues associees definissant le super-element.\n     CHPO1  |     (type MAILLAGE, RIGIDITE ou CHPOINT)\n \n                  Avec GEO1 (type MAILLAGE), on prend pour chaque noeud\n                  les inconnues existant dans RIG1.\n \n \n     RESU1      : objet resultat (type SUPERELE)\n \n \n    ---------------\n    | 2eme Option |\n    ---------------\n \n     'CHARGE'   : mot-cle indiquant qu'on reduit le chargement sur les\n                  points maitres du super-element.\n \n     SUPER1     : super-element sur lequel on reduit les charges\n                  (type SUPERELE)\n \n     FORC1      : charges a reduire (type CHPOINT)\n \n     RESU1      : objet resultat (type CHPOINT)\n \n    ---------------\n    | 3eme Option |\n    ---------------\n \n     'DEPLA'    : mot-cle indiquant qu'on veut calculer le champ de\n                  deplacements a l'interieur du super-element.\n \n     SUPER1     : super-element dans lequel on calcule le champ de\n                  deplacements (type SUPERELE)\n \n     DEP1       : champ de deplacements des noeuds maitres (type CHPOINT\n\n     FORC1      : charges s'appliquant sur la structure ( CHPOINT)\n \n     RESU1      : objet resultat (type CHPOINT) representant les depla-\n                  cements .\n\n     'NOER'     : Les Nan sont transformes en zero dans la solution.\n\n \n \n    ---------------\n    | 4eme Option |\n    ---------------\n \n    'MASSE'     : mot-cle indiquant qu'on calcule la matrice de masse\n                  equivalente.\n \n    SUPER1      : super-element qui permet de reduire la masse\n                  (type SUPERELE)\n \n    MASS1       : matrice de masse qu'on veut reduire (type RIGIDITE)\n \n    RESU1       : matrice de masse reduite (type RIGIDITE)\n\n    'LCHP'      : en presence du mot clef 'LCHP' (type MOT), LCHP1\n    LCHP1         (type LISTCHPO) contient les ligne de la matrice\n                  de transformation\n \n    Exemple :\n    _________\n \n    STRU1 est compose de RIG1 et RIG2 dont les supports geometriques\nGEO1 et GEO2 ont une ligne LIG1 commune.\n    Soit FORC1 et FORC2 les charges sur les deux parties.\nOn peut enchainer le calcul suivant :\n \n        * calcul de la rigidite equivalente de RIG2\n                  SUPER1 = SUPER 'RIGIDITE' RIG2 LIG1 ;\n        * recuperation de la rigidite et assemblage avec le reste de\n        * la structure\n                 RIG3  = EXTRAI SUPER1 'RIGI';\n                 RIG4  = RIG1 ET RIG3;\n        * reduction des charges\n                 FORC3 = SUPER 'CHARGE' SUPER1 FORC2;\n        * resolution de la structure totale\n                 DET1  = RESOU RIG4 ( FORC1 ET FORC3);\n        * calcul des deplacements dans le super-element\n                 DEP1  = SUPER 'DEPLA'  SUPER1 DET1   FORC2;\n        * calcul de la masse equivalente a MASS2\n                 MASS3 = SUPER 'MASSE' SUPER1 MASS2;\n        * calcul d'un mode propre\n                 MOD1  = VIBR 'PROCHE' (PROG 0.) RIG4 (MASS1 ET MASS3);\n ",
  },
  {
    name: "SURF",
    url: "SURF",
    documentation:
      "$$$$ SURF     NOTICE  CB215821  15/12/04    21:15:22     8724           \n                                             DATE     15/12/04\n                                             \n    Operateur SURFACE                        Voir aussi : TRAN DALL REGL\n    -----------------                                     ROTA      GENE  \n    SURF1 = SURFACE (CHPO1) | LIG1  | 'PLANE' (CRIT) ;\n                            |       | 'SPHERIQUE'   CENTR1 ;\n                            |       | 'CYLINDRIQUE' AXEI1  AXEJ1 ;\n                            |       | 'CONIQUE'     SOMM1  AXEJ1 ;\n                            |       | 'TORIQUE'     CENTR1 AXEJ1 CENTR2 ;\n                            |\n                            |\n                            | 'POLYNOME' N1 N2 P1   P2  (P3  (P4  ... ) )\n                            |                  P11  P12 (P13 (P14 ... ) )\n                            |                 (P21 (P22 (P23 (P24 ... ) )\n                            |                 (           ...           )\n                            |    ('PARAMETRE' U1 U2   V1 V2) ('REGULIER') ;\n\n\n    Objet :\n    _______\n\n    L'operateur SURFACE construit le maillage de l'interieur du contour defini\npar l'objet LIG1 (qui doit etre un ensemble de lignes fermees). Par ailleurs\nl'option POLYNOME permet de construire une surface parametree.\n\n\n    Commentaire :\n    _____________\n\n    Il est possible de donner un CHPOINT (CHPO1) de taille de maille\n(une composante par noeud) a respecter.\n\n    LIG1 peut etre constitue de contours exterieurs et interieurs\n(delimitant des trous) qui doivent tourner dans des sens opposes.\n\n    Le maillage peut etre realise a l'aide d'elements triangulaires ou\nquadrangulaires et triangulaires selon ce qui a ete demande dans la\ndirective OPTION.\n\n    La surface peut etre PLANE, SPHERIQUE, CYLINDRIQUE, CONIQUE ou\nTORIQUE (suivant le mot-cle).\n\n\n    'PLAN'          : en option :\n    'CRIT'          : critere de planeite. cosinus de l'angle entre\n                      les points de la ligne et la normale au plan\n\n    'SPHERIQUE'     : mot-cle suivi de :\n    CENTR1          : centre de la sphere (type POINT)\n\n    'CYLINDRIQUE'   : mot-cle suivi de :\n    AXEI1, AXEJ1    : deux points de l'axe du cylindre (type POINT)\n\n    'CONIQUE'       : mot-cle suivi de :\n    SOMM1, AXEI1    : sommet du cone et un point de l'axe (type POINT)\n\n    'TORIQUE'       : mot-cle suivi de :\n    CENTR1          : centre du tore (type POINT)\n    AXEI1           : un point de l'axe de symetrie (type POINT)\n    CENTR1          : centre d'un petit cercle (type POINT)\n\n    Remarque :\n    __________\n\n    Dans le cas d'une surface conique, le contour ne doit pas passer par\nle sommet du cone.\n\n   ---------------------\n   |  Option POLYNOME  |\n   ---------------------\n\n    Le resultat est le MAILLAGE de la surface parametree d'equation :\n\n\n                               |  P1  P2  P3  P4 .. |   |   1     |\n               2     (N2-1)    | P11 P12 P13 P14 .. |   |   U     |\nP(U,V) = (1 V V  ...V      ) x | P21 P22 P23 P24 .. | x |  ..     |\n                               |         ...        |   |U**(N1-1)|\n\n\n    N1 , N2,         : respectivement le nombre de colonnes et\n                       de lignes de la matrice de points (type ENTIER).\n\n    P1, P11, ... ,   : objets de type POINT. Les abscisses de\n                       ces points donnent la representation parametrique\n                       des abscisses des points de la surface, etc...\n\n    U1, U2           : bornes de variation du parametre U (type\n                       FLOTTANT) (egales a (0,1) par defaut).\n\n    V1, V2           : bornes de variation du parametre V (type\n                       FLOTTANT) (egales a (0,1) par defaut).\n\n   'REGULIER'        : mot-cle (type MOT) indiquant que les points\n                       de la surface doivent etre regulierement\n                       repartis dans l'espace geometrique (eu egard\n                       aux densites existantes) plutot que dans\n                       l'espace parametrique.",
  },
  {
    name: "SYME",
    url: "SYME",
    documentation:
      "$$$$ SYME     NOTICE  CHAT      11/09/12    21:18:13     7124           \n                                             DATE     11/09/12\n\n    Operateur SYMETRIE                       Voir aussi : AFFI TOUR\n    ------------------                                    HOMO  \n\n\n    Cet operateur a plusieurs fonctions selon les donnees.\n\n   ----------------\n   | 1re fonction |\n   ----------------\n\n    L'operateur SYME construit l'objet resultant de la symetrie de\nl'objet GEO2 par rapport a un point, une droite ou un plan.\n\n    GEO1 = GEO2  SYME | 'POINT' POIN1 ;\n                      | 'DROIT' POIN1 POIN2 ;\n                      | 'PLAN'  POIN1 POIN2 POIN3 ;\n\n    Commentaire :\n    _____________\n\n    GEO2     : objet a symetriser (type POINT ou MAILLAGE)\n\n   'POINT'   : mot-cle indiquant une symetrie par rapport a un point,\n               suivi de :\n    POIN1    : point de symetrie (type POINT)\n\n   'DROIT'   : mot-cle indiquant une symetrie par rapport a une droite,\n               suivi de :\n    POIN1 |  : deux points definissant une droite (type POINT)\n    POIN2 |\n\n   'PLAN'    : mot-cle indiquant une symetrie par rapport a un plan,\n               suivi de :\n    POIN1 |  : trois points definissant un plan (type POINT)\n    POIN2 |\n    POIN3 |\n\n    GEO1     : objet symetrise (type POINT ou MAILLAGE)\n\n    Remarques :\n    ___________\n\n    OBJET1 OBJET2 ... OBJETn  SYME | 'POINT' POIN1 ;\n                                   | 'DROIT' POIN1 POIN2 ;\n                                   | 'PLAN'  POIN1 POIN2 POIN3 ;\n\n    L'operation est effectuee sur les n objets simultanement et a n\nresultats :\n\n         NC1 NC2 NC3 NC4 = C1 C2 C3 C4 SYME 'POINT' (10. 0.) ;\n\n    Cette regle n'est pas applicable aux objets de type POINT dont\nla symetrie doit etre ecrite separement pour chaque point.\n\n    Seul le mot-cle 'POINT' est utilisable en DIMEnsion 1.\n\n   ---------------\n   | 2e fonction |\n   ---------------\n\n    L'operateur SYME construit l'objet resultant de la symetrie de\nl'objet champ par points scalaire CHP2 par rapport a un point, une\ndroite ou un plan. L'operation est effectuee simultanement sur\nl'objet maillage support du champ GEO2.\n\n    GEO1 CHP1 = GEO2 CHP2 SYME | 'POINT' POIN1 ;\n                               | 'DROIT' POIN1 POIN2 ;\n                               | 'PLAN'  POIN1 POIN2 POIN3 ;\n\n    Commentaire :\n    _____________\n\n    GEO2     : objet maillage support du champ a symetriser\n               (type MAILLAGE)\n    CHP2     : objet champ par points a symetriser (type CHPOINT)\n     \n   'POINT'   : mot-cle indiquant une symetrie par rapport a un point,\n               suivi de :\n    POIN1    : point de symetrie (type POINT)\n\n   'DROIT'   : mot-cle indiquant une symetrie par rapport a une droite,\n               suivi de :\n    POIN1 |  : deux points definissant une droite (type POINT)\n    POIN2 |\n\n   'PLAN'    : mot-cle indiquant une symetrie par rapport a un plan,\n               suivi de :\n    POIN1 |  : trois points definissant un plan (type POINT)\n    POIN2 |\n    POIN3 |\n\n    GEO1     : objet maillage support  symetrise (type MAILLAGE)\n\n    CHP1     : objet champ par points symetrise (type CHPOINT) \n\n    Seul le mot-cle 'POINT' est utilisable en DIMEnsion 1.",
  },
  {
    name: "SYMT",
    url: "SYMT",
    documentation:
      "$$$$ SYMT     NOTICE  CHAT      11/09/12    21:18:13     7124           \n                                             DATE     11/09/12\n\n    Operateur SYMT :                         Voir aussi : ANTI REAC\n    --------------                                        RESO      RELA  \n                                                          BLOQ      TRAC  \n    RIG1 = SYMT ('DEPL') ('ROTA') POIN1 POIN2 (POIN3 si 3D) GEO1 (FLOT1)\n\n\n\n    Objet :\n    _______\n\n    L'operateur SYMT permet d'imposer des conditions aux limites de type\nSYMETRIE sur les degres de liberte en deplacement et/ou en rotation.\n\n    Commentaire :\n    _____________\n\n   'DEPL'    : conditions aux limites de type SYMETRIE sur les d.d.l.\n               en DEPLACEMENT.\n\n   'ROTA'    : conditions aux limites de type SYMETRIE sur les d.d.l.\n               en ROTATION.\n\n\n   IMPORTANT : l'UNE au moins de ces deux specifications est OBLIGATOIRE\n   ___________\n\n\n    POIN1 |  : points definissant l'axe de symetrie en 2D (type POINT).\n    POIN2 |\n\n\n    POIN1 |  : points definissant le plan de symetrie en 3D (type POINT)\n    POIN2 |\n    POIN3 |\n\n    GEO1     : objet sur lequel on impose les conditions aux limites\n               (type  MAILLAGE).\n\n    FLOT1    : critere de selection des points appartenant a\n               l'axe ou au plan de symetrie (type FLOTTANT).\n               Par defaut on utilise le 1/10 de la densite courante.\n               FLOT1 est donc NECESSAIRE lorsqu'aucune densite n'a\n               ete definie precedemment.\n\n    RIG1     : conditions aux limites symetriques (type RIGIDITE)\n\n    ATTENTION  Le choix du critere conditionne l'ensemble des points\n    _________  sur lesquels porteront les conditions de symetrie.\n               Il est donc conseille d'une part de le choisir avec\n               soin et d'autre part de visualiser les blocages ainsi\n               obtenus au moyen de l'operateur TRAC.\n\n    Remarques :\n    ___________\n\n    NE PAS CONFONDRE cet operateur avec l'operateur de maillage SYME ||\n\n    Cet operateur n'est pas disponible en dimension 1.\n    L'utilisation de l'operateur BLOQUE est suffisante.",
  },
  {
    name: "SYNT",
    url: "SYNT",
    documentation:
      "$$$$ SYNT     NOTICE  MB234859  17/10/02    21:15:26     9577           \n                                             DATE     17/10/02\n\n  Operateur SYNTHESE                       Voir aussi :\n    ------------------  \n    SOL2 = SYNTHESE  SOL1 BAS1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur SYNTHESE est utilise en sous-structuration.\nIl cree un objet SOLUTION contenant les modes de la structure, a partir\ndes modes des sous-structures et des champs de contributions modales\nsur ces modes.\n\n    Commentaire :\n    _____________\n\n      BAS1 : base modale contenant les modes des sous-structures,\n             les objets ATTACHE decrivant les liaisons entre les sous-\n             structures et les solutions statiques correspondantes\n             (type BASEMODA)\n\n      SOL1 : objet contenant les modes de la structure exprimes sur la\n             base modale BAS1 (obtenu en utilisant l'operateur VIBR)\n             (type SOLUTION)\n\n      SOL2 : objet contenant les modes de la structure exprimes sur la\n             base elements finis (type SOLUTION, sous-type MODE)",
  },
  {
    name: "TABL",
    url: "TABL",
    documentation:
      "$$$$ TABL     NOTICE  CHAT      11/09/12    21:18:14     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur TABLE                          Voir aussi :\n    ---------------  \n    TAB1 = TABLE  | ( MOT1 ) | ;\n                  | ( TAB2 ) |\n\n\n    Objet :\n    _______\n\n    L'operateur TABLE sert a initialiser une structure de table.\n\n    Commentaire :\n    _____________\n\n    L'operateur TABLE suivi par :\n\n    MOT1  : indique le sous-type de la table (type MOT)\n            ce mot est range dans la table avec pour indice le mot\n            'SOUSTYPE'\n\n    TAB2  : permet de renommer la table TAB2 (type TABLE)\n\n    Remarque importante :\n    ____________________\n\n    Pour l'utilisation, le nom de la table doit etre separe de l'indice\nconsidere par un . ; si l'indice est un nombre flottant contenant un .,\nil faut en plus mettre des blancs entre le nom de la table et l'indice.\nD'un maniere generale, l'usage des blancs entre la table et les indices\nest fortement recommande.\n\nPar exemple :   MATAB1 . 3.68\n\n Pour les indices de type MOT on ne tient pas compte des blancs situes\n a la fin des mots. C'est a dire que  TAB1.'AA'  et TAB1.'AA   '\n representent le meme indice\n\n    Exemple d'emploi d'une table :\n    ______________________________\n\n*\n*  on cree une table de sous-type VECTEUR\n*\n    MATAB = TABLE  'VECTEUR' ;\n*\n*  on definit l'element d'indice 1 comme etant egal a 5\n*\n    MATAB . 1 = 5     ;\n*\n*  on definit l'element d'indice 'ESS' comme etant egal a  2.732\n*\n   J = MOT 'ESS'        ;\n   MATAB . J = 2.732    ;\n   LIST MATAB . J       ;\n*\n   J  =  1           ;\n   B =  MATAB . J    ;\n*\n* B a pour valeur l'element de la table indice (qui vaut 1), soit 5\n*\n   T2 = TABLE MATAB;\n*\n* la table est accessible par le nouveau nom T2\n*",
  },
  {
    name: "TABLO2D",
    url: "TABLO2D",
    documentation:
      "$$$$ TABLO2D  NOTICE  JC220346  16/04/25    21:15:00     8916           \n                                             DATE     16/04/25\n                                           \n    Procedure TABLO2D                        Voir aussi : TABLO3D\n    -----------------                                     @HISTOGR  \n                                                          NTAB  \n    \n             TABLO2D | ('LINE') | NLIG NCOL LVAL (TIT) ;\n                     |  'LOGA'  |\n                     \n    Objet :\n    _______\n\n    La procedure TABLO2D permet d'afficher sous forme graphique 2D\n    (matrice de cases colorees) un tableau de valeurs numeriques.\n    \n    L'option 'LINE' (par defaut) fait une correspondance lineaire entre\n    les donnees et l'echelle de couleurs tandis que l'option 'LOGA' \n    permet de mieux visualiser des donnees s'etalant sur plusieurs\n    ordres de grandeur en en prenant la valeur absolue puis le\n    logarithme decimal.\n\n\n    Commentaire :\n    _____________\n\n    NLIG [ENTIER]   : Nombre de lignes du tableau\n    \n    NCOL [ENTIER]   : Nombre de colonnes du tableau\n\n    LVAL [LISTREEL] : Liste des NLIG*NCOL valeurs du tableau, rangees\n                      ligne apres ligne\n\n    TIT [MOT]       : Titre general du graphique\n            ",
  },
  {
    name: "TABLO3D",
    url: "TABLO3D",
    documentation:
      "$$$$ TABLO3D  NOTICE  JC220346  16/05/10    21:15:00     8926           \n                                             DATE     16/05/10\n                                           \n    Procedure TABLO3D                        Voir aussi : TABLO2D\n    -----------------                                     @HISTOGR  \n                                                          NTAB  \n    \n      TABLO3D | ('LINE') | (ZERO) (MARQ) NLIG NCOL LVAL (TIT) ;\n              |  'LOGA'  |\n              |  'CLOG'  |\n              |  'ZLOG'  |\n                     \n    Objet :\n    _______\n\n    La procedure TABLO3D permet d'afficher sous forme graphique 3D\n    (matrice de barres colorees) un tableau de valeurs numeriques.\n    \n    L'option 'LINE' (par defaut) fait une correspondance lineaire entre\n    les donnees et l'echelle de hauteurs et de couleurs. Pour mieux\n    visualiser des donnees s'etalant sur plusieurs ordres de grandeur,\n    il est possible d'utiliser les options 'CLOG', 'ZLOG' ou 'LOGA' qui\n    en considerent le logarithme decimal respectivement pour la couleur,\n    la hauteur ou les deux.\n    \n    Contrairement a la procedure TABLO2D, il est ainsi possible de\n    distinguer les valeurs positives et negatives tout en utilisant\n    une echelle logarithmique.\n\n\n    Commentaire :\n    _____________\n    \n    ZERO [FLOTTANT] : Valeur en-deca de laquelle un nombre de LVAL\n                      est considere nul ; en termes images, il s'agit\n                      de l'altitude du \"plancher\" du graphe de barres.\n                      Par defaut, on prend le plus petit reel de LVAL.\n    \n    MARQ [LOGIQUE]  : Indique que l'on souhaite identifier la barre\n                      en (1,1) par un petit marqueur triangulaire\n                      (comportement par defaut)\n\n    NLIG [ENTIER]   : Nombre de lignes du tableau\n    \n    NCOL [ENTIER]   : Nombre de colonnes du tableau\n\n    LVAL [LISTREEL] : Liste des NLIG*NCOL valeurs du tableau, rangees\n                      ligne apres ligne\n\n    TIT [MOT]       : Titre general du graphique\n            ",
  },
  {
    name: "TAGR",
    url: "TAGR",
    documentation:
      "$$$$ TAGR     NOTICE  CHAT      11/09/12    21:18:14     7124           \n                                             DATE     11/09/12\n\n    Operateur TAGR                           Voir aussi : GRAD\n    --------------  \n    GRAD1 = TAGR  GRAD2  ;\n\n\n    Objet :\n    _______\n\n    L'operateur TAGR calcule la transposee d'une matrice de gradients.\n\n    Commentaire :\n    _____________\n\n    GRAD1 | : matrice de gradients (type CHAMELEM, sous-type GRADIENT).\n    GRAD2 |",
  },
  {
    name: "TAIL",
    url: "TAIL",
    documentation:
      "$$$$ TAIL     NOTICE  CHAT      11/09/12    21:18:15     7124           \n                                             DATE     11/09/12\n\n    Operateur TAIL                           Voir aussi : MODE (OTTOSEN)\n    --------------                                        MATE   CFL  \n                                                          CSON  \n       CHAM2  =  'TAIL' | 'DIRECTION'  MODL1 ('UNIF') \n                        |\n                        | 'DIAMETRE_MIN' MODL1 (CARA1)  ;\n\n\n    Objet :\n    _______\n\n    L'operateur TAIL permet de caracteriser la geometrie des elements\nd'un modele. \n    \n    Suivi du mot cle 'DIRECTION' il calcule les composantes dans le repere \nglobal de deux tenseurs. Ces tenseurs permettent de calculer un parametre\nde taille en chaque point de calcul de la rigidite d'un element. Les\ncomposantes sont sous la forme d'un CHAML. Avec l'option 'UNIF', \ntoutes les composantes du CHAML sont nulles. \n    \n     Suivi du mot cle 'DIAMETRE_MIN' il calcule le parametre de taille \nqui sert a formuler la condition C.F.L. . Ce parametre  est la plus \npetite longueur separant deux noeuds ou un noeud et un cote non adjacent \ndans l'element. Autrement dit il  minimise la longueur de propagation \nde l'information d'un noeud vers les cotes non adjacents via les \nfonctions d'interpolation d'un element. Dans le cas d'elements de \ncoques ou de poutres un second parametre est calcule qui correspond \na une longueur caracterisant la propagation des ondes de flexion.\n\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele ( type MMODEL ).\n\n      CARA1 : objet de type MCHAML de sous-type CARACTERISTIQUES,\n              caracterisant les eventuels elements de poutres ou \n              de plaque ( voir l'operateur 'CARA' ) \n\n      CHAM2  : objet resultat, champ de CARACTERISTIQUES \n              geometriques (type MCHAML, sous-type CARACTERISTIQUES).\n\n\n    Remarque :\n    __________\n    \n   -- Option 'DIRECTION' :\n    \n    Elle ne s'applique qu'aux elements massifs. \n    Les composantes de ce champ de CARACTERISTIQUES sont des\nproprietes geometriques obligatoires pour l'utilisation du modele\nOTTOSEN (voir aussi : MATE - Modele OTTOSEN).\n\n    Un parametre de taille d'un element fini est une information\ndirectionnelle. Notons VF un vecteur directeur et T,N les tenseurs \ncalcules par l'operateur TAIL. Une information sur la taille de \nl'element au point de calcul considere nous est fournie par le \ncalcul :\n\n            l = ('VF.T.VF)/('VF.N.VF) \n                        ou 'VF designe le vecteur transpose de VF\n\n\n  --  Option 'DIAMETRE_MIN' :\n   \nLe champ par element cree est defini au centre de gravite de l'element.\nIl y a une composante pour les elements massifs de nom 'L' et une\nseconde composante de nom 'L2H' pour les elements de coques ou de\npoutre.",
  },
  {
    name: "TAKM_EFZ",
    url: "TAKM_EFZ",
    documentation:
      "$$$$ TAKM_EFZ NOTICE  CHAT      11/09/12    21:18:15     7124           \n                                             DATE     11/09/12\n\n    Procedure TAKM_EFZ                       Voir aussi : MODE MATE\n    ------------------  \n    EVOL1=TAKM_EFZ LREE1 LENT1 TABL1;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de tester le modele de plasticite de \npoutre 'TAKEMO_EFFZ', plasticite sur l'effort tranchant.\n \n    A partir d'un programme de chargement en courbure dont les\nextremites des branches sont definies par LREE1 (objet de type \nLISTREEL) et dont le nombre de point par branche est specifie par\nLENT1 (objet de type LISTENTI), on produit la courbe EVOL1 (objet\nde type evolution) de reponse du modele.\n\n    La table TABL1 contient les parametres sigificatifs du modele:\n\n    indice   |    type objet   |     commentaires\n             |      point      |\n    ---------|-----------------|-------------------------\n     GELA    |     FLOTTANT    |     Module de cisaillement elastique\n     SECZ    |     FLOTTANT    |     Surface reduite d'effort tranchant\n     TRAC    |     EVOLUTION   |     Courbe trilineaire \n             |                 |      cisaillement/effort\nSFDP,SFDN    |     FLOTTANT    |     Degradation de raideur\nPINP,PINN    |     FLOTTANT    |     \"Pinching\"\nSRDP,SRDN    |     FLOTTANT    |     adoucissement cyclique\n\n \n ",
  },
  {
    name: "TAKM_MOY",
    url: "TAKM_MOY",
    documentation:
      "$$$$ TAKM_MOY NOTICE  CHAT      11/09/12    21:18:15     7124           \n                                             DATE     11/09/12\n\n    Procedure TAKM_MOY                       Voir aussi : MODE MATE\n    ------------------  \n    EVOL1=TAKM_MOY LREE1 LENT1 TABL1;\n\n\n    Objet :\n    -------\n\n    Cette procedure permet de tester le modele de plasticite de \npoutre 'TAKEMO_MOMY', plasticite de flexion.\n \n    A partir d'un programme de chargement en courbure dont les\nextremites des branches sont definies par LREE1 (objet de type \nLISTREEL) et dont le nombre de point par branche est specifie par\nLENT1 (objet de type LISTENTI), on produit la courbe EVOL1 (objet\nde type evolution) de reponse du modele.\n\n    La table TABL1 contient les parametres sigificatifs du modele:\n\n    indice   |    type objet   |     commentaires\n             |      point      |\n    ---------|-----------------|-------------------------\n     EELA    |     FLOTTANT    |     Module elastique\n     INRY    |     FLOTTANT    |     Moment d'inertie\n     TRAC    |     EVOLUTION   |     Courbe trilineaire moment/courbure\nSFDP,SFDN    |     FLOTTANT    |     Degradation de raideur\nPINP,PINN    |     FLOTTANT    |     \"Pinching\"\nSRDP,SRDN    |     FLOTTANT    |     adoucissement cyclique\n\n \n ",
  },
  {
    name: "TAN",
    url: "TAN",
    documentation:
      "$$$$ TAN      NOTICE  CB215821  18/06/05    21:15:18     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'TAN'   OBJET1 ;\n\n\n    Operateur TAN                            Voir aussi : COS SIN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH SINH TANH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur TAN calcule la tangente de l'objet OBJET1.\n    Les valeurs de OBJET1 doivent etre exprimees en degres.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "TANH",
    url: "TANH",
    documentation:
      "$$$$ TANH     NOTICE  CB215821  18/06/05    21:15:19     9830           \n                                             DATE     18/06/05\n\n      RESU1 = 'TANH'  OBJET1 ;\n\n\n    Operateur TANH                           Voir aussi : COS SIN TAN\n    --------------                                        ACOS ASIN ATG  \n                                                          COSH SINH  \n                                                          ACOH ASIH ATAH  \n    Objet :\n    _______\n\n    L'operateur TANH calcule la tangente hyperbolique de l'objet OBJET1.\n\n              -------------------------------------\n              |    OBJET1       |      RESU1      |\n              -------------------------------------\n              |    ENTIER       |    FLOTTANT     |\n              |    FLOTTANT     |    FLOTTANT     |\n              |    LISTENTI     |    LISTREEL     |\n              |    LISTREEL     |    LISTREEL     |\n              |    EVOLUTIO     |    EVOLUTIO     |\n              |    CHPOINT      |    CHPOINT      |\n              |    MCHAML       |    MCHAML       |\n              -------------------------------------\n      \n      \n      Remarque :\n      __________\n      \n      Dans le cas d'un objet EVOLUTIO, l'abscisse n'est pas modifiee, \n      seule l'ordonnee subit l'operation.\n      ",
  },
  {
    name: "TASS",
    url: "TASS",
    documentation:
      "$$$$ TASS     NOTICE  CHAT      11/09/12    21:18:16     7124           \n                                             DATE     11/09/12\n\n    Directive TASSER                         Voir aussi : ELIM\n    ----------------  \n    GEO2 = TASS  (GEO1) ('NOOP') ;\n\n\n    Objet :\n    _______\n\n    La directive TASS retasse le contenu de la memoire en eliminant les\npoints qui ne sont plus accessibles.\n\n    ATTENTION :\n    ___________\n\n    Le plus souvent, l'utilisation de TASSER est inutile, car une\nrenumerotation automatique est faite lors de la resolution (operateur\nRESOU). Il convient d'utiliser la directive TASSER que si l'on comprend\nbien ce qu'elle fait. Remarquons que TASS est appele automatiquement\npar l'operateur MENAGE.\n\n\n    Commentaire :\n    _____________\n\n    GEO1   : geometrie (type MAILLAGE)\n\n             Si l'objet GEO1 (type MAILLAGE) est specifie, la nouvelle\n             numerotation est optimisee pour cet objet, du point de vue\n             de la resolution du systeme lineaire associe, par la\n             methode de CROUT.\n\n             Cette numerotation (qui est continue et commence a 1 pour\n             l'objet GEO1) est reproductible. Elle est identique a celle\n             obtenue dans la directive SORTIR.\n\n             Si GEO1 est un maillage de POI1, la nouvelle numerotation\n             numerotera les noeuds a leur rang d'apparition dans GEO1.\n\n    GEO2   : geometrie (type MAILLAGE de POI1)\n\n             Ce maillage de POI1 contient l'ancienne numerotation, c'est\n             a dire que le ieme element contient l'ancien noeud numero i\n             (sauf disparition de noeuds).\n             Il permet de reconstruire l'ancienne numerotation (si cela\n             est possible) en le soumettant a l'operateur TASS.\n\n\n    'NOOP' : mot-cle signifiant que l'optimisation de la numerotation\n             n'est pas necessaire.",
  },
  {
    name: "TCNM",
    url: "TCNM",
    documentation:
      "$$$$ TCNM     NOTICE  CHAT      11/09/12    21:18:16     7124           \n                                             DATE     11/09/12\n                                                                                \n  Operateur TCNM                          Voir aussi :\n     --------------  \n     Cet operateur est appele en interne par la procedure EXEQ\n\n\n                                                                                \n     OBJET :\n     ______\n\n                                                                                \n    Commentaires :\n    ______________",
  },
  {
    name: "TCRR",
    url: "TCRR",
    documentation:
      "$$$$ TCRR     NOTICE  CHAT      11/09/12    21:18:16     7124           \n                                             DATE     11/09/12\n\n     Operateur TCRR                          \n     --------------\n\n     Cet operateur est appele par la procedure EXEQ\n\n\n                                                                                \n     OBJET :\n     ______\n\n                                                                                \n    Commentaires :\n    ______________",
  },
  {
    name: "TEMP",
    url: "TEMP",
    documentation:
      "$$$$ TEMP     NOTICE  PASCAL    21/06/24    21:15:03     11043          \n                                             DATE     21/06/24\n\n    Directive TEMPS                           Voir aussi : PLAC\n    ---------------  \n  TEMPS |   -                       | ;\n        | 'PLAC'                    |\n        | 'IMPR' |   -    |   -     |\n        |        | 'MAXI' | 'HORL'  |\n        |        | 'SOMM' | 'CPU'   |\n        |                   'APPE'  |\n        |                   'EFFI'  |\n        |        | 'PROC' |   -     |\n        |        | 'BOUC' | 'HORL'  |\n        |                 | 'CPU'   |\n        |                 | 'APPE'  |\n        | 'ZERO'                    |\n        | 'SGAC' 'IMPR'             |\n\n\n    Operateur TEMPS\n    ---------------\n\n  TAB1        = TEMPS 'NOEC' ;\n  ENTI1 ENTI2 = TEMPS 'SGAC' ;\n  ENTI1       = TEMPS | 'CPU'  | ;\n                      | 'HORL' |\n\n\n    Objet :\n    -------\n\n Syntaxe 1 : Utilisation comme une directive\n -------------------------------------------\n  -'TEMP';\n      - Affiche le temps horloge et CPU ecoule depuis le dernier appel\n\n  -'TEMP' 'SGAC' 'IMPR' ;\n      - Affiche le  nombre d'appel  par operateur,  le cumul de segments\n        restes actifs  apres  l'appel  ainsi que  la  taille (en K-MOTS)\n        correspondante.\n        Remarque : Esope fait une pile de SEGMENTS a desactiver, un SEGMENT\n                   dans cette pile n'est pas compte comme desactive.\n\n  -'TEMP' 'PLAC' ;\n      - Affiche l'etat de la memoire dans ESOPE (en MOTS)\n\n  -'TEMP' 'IMPR' (MOT1 (MOT2)) (MOT3) ;\n      - MOT1 : 'PROC'    : Informations sur les PROCEDURES\n               'BOUC'    : Informations sur les BOUCLES\n                Sans MOT1: Informations sur les OPERATEURS (MOT2 possible)\n                           MOT2 :'MAXI'    : Maximum  de  tous  les ASSISTANTS\n                                 'SOMM'    : Somme  sur   tous  les ASSISTANTS\n                                  Sans MOT2: Toutes les valeurs des ASSISTANTS\n            Attention, c'est le maximum du temps horloge qui est indique,\n            meme avec SOMM.\n\n      - MOT3 : 'HORL'    : Temps horloge   seulement (Avec trie croissant)\n               'CPU '    : Temps CPU       seulement (Avec trie croissant)\n               'APPE'    : Nombre d'appels seulement (Avec trie croissant)\n                Sans MOT3: Toutes les informations. \n\n\n  -'TEMP' 'ZERO' ;\n      - Initialise  les tableaux  des temps  ainsi que  les informations\n        liees aux SEGMENTS.\n\n    Remarque : 1 MOT = 8 octets en 64-bits\n    ----------         4 octets en 32-bits\n\n\n Syntaxe 2 : Utilisation comme un operateur\n ------------------------------------------\n  - TAB1 ='TEMP' 'NOEC' ;\n      - Renvoie  dans la TABLE TAB1  le detail par operateur et\n        par assistant  des  temps  horloge  et CPU ainsi que le\n        nombre  d'appels.  On  retrouvera  egalement  les temps\n        horloge et CPU depuis le  depart du calcul et depuis le\n        dernier appel a l'operateur TEMP.\n\n        \n  - ENTI1 ENTI2 ='TEMP' 'SGAC' ;\n      - Renvoie dans 2 entiers l'etat general des segments\n         ENTI1 : Nombre total de SEGMENTS Actifs\n         ENTI2 : Taille totale correspondante (en MOTS).\n\n    Remarque : 1 MOT = 8 octets en 64-bits\n    ----------         4 octets en 32-bits\n\n  - ENTI1 ='TEMP' | 'CPU'  | ;\n                  | 'HORL' |\n      - Renvoie  dans  l'entier ENTI1 le temps CPU ou le temps HORLoge\n        (en millisecondes) ecoule depuis le dernier appel a TEMP ZERO.",
  },
  {
    name: "TENSION",
    url: "TENSION",
    documentation:
      "$$$$ TENSION  NOTICE  CHAT      11/09/12    21:18:17     7124           \n                                             DATE     11/09/12\n\n    Procedure TENSION                        Voir aussi : PREC    \n    -----------------                                     PHASAGE  \n                                                          RETRAIT  \n                                                          EPAIFUT  \n                                                          PFLUAGE   \n      TAB2 = TENSION TAB1;\n\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de creer une table contenant toutes les\n    donnees, concernant les cables, necessaires a un calcul de \n    precontrainte dans une structure en beton arme. Elle utilise \n    l'operateur PREC pour determiner la distribution des efforts \n    le long des cables en tenant compte des pertes de tension quasi \n    instantanees. Les formules utilisees sont celles du BPEL91.\n\n    TAB1 est indicee par des entiers 1,2,3,... et pointe vers des \n    tables qui contiennent les donnees pour un groupe de cables.\n\n    les indices de ces tables sont:\n     \n            \n        'TPS'    : flottant contenant la date de mise en tension \n                   de n sous-groupes de cables considere en jours. \n                   Cette date est a compter a partir de la premiere \n                   levee de beton.\n\n        IET      : indice entier du sous-groupe (1,..n) qui pointe \n                   vers une table \n   \n   les indices, tous de type mot, de cette table sont :\n        \n        'GEOMETRIE1'  : maillage contenant la description des extremites\n                        tendues\n  \n        'GEOMETRIE2'  : maillage contenant la description des deuxiemes \n                        extremites tendues (uniquement si necessaire).\n                      \n        'MODELE'      : objet MODELE associe au groupe de cables.\n\n        'MATERIAU'    : materiau associe au groupe de cables.\n\n        'FORCE'       : flottant donnant la force exprimee en Newton.\n\n        'TYPE_CAB'    : mot '1EXT' ou '2EXT' indiquant si le groupe de\n                        cables est tendu par une ou par les deux\n                        extremites.\n                        \n        'COEF_PREC'   : table contenant les valeurs pour prise en compte\n                        des pertes quasi instantanees. Ces donnees sont\n                        celles de l'operateur PREC.\n\n\n   les indices, tous de type mot, de cette  derniere table sont :       \n\n        'FF'     : coefficient de frottement angulaire defaut 0.18 rd-1)\n        'PHIF'   : coefficient de frottement lineaire (defaut 0.002 m-1)\n   \n         Pour la perte de precontrainte par recul a l'ancrage :\n   \n        'GANC'  : glissement a l'ancrage (defaut  0.0m)\n\n         Pour la perte de precontrainte par relaxation de l'acier :\n    \n        'RMU0': coefficient de relaxation de l'armature ((defaut 0.43)\n        'FPRG': contrainte de rupture garantie ((defaut 1700.e6 Pa)\n        'RH10': relaxation a 1000 heures expimee en % (defaut 2.5 )\n   \n      \n ",
  },
  {
    name: "TEXT",
    url: "TEXT",
    documentation:
      "$$$$ TEXT     NOTICE  CHAT      11/09/12    21:18:17     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur TEXTE                          Voir aussi :\n    ---------------  \n    TEXT1 = TEXTE  OBJET1 (OBJET2 ....... )   ;\n\n\n    Objet :\n    _______\n\n    L'operateur TEXTE permet de donner un nom a un texte.\nCe texte est fabrique a partir des objets OBJET1, OBJET2, ...\n\n    Commentaire :\n    _____________\n\n    Les types possibles pour les objets sont  MOT, ENTIER, FLOTTANT.\n\n    A l'utilisation, un texte est remplace par son contenu, qui est\nassocie a une instruction elementaire. Par suite, si il comprend des\nparentheses, elles ne sont par remplacees par leur contenu.\n\n    Exemples :\n    __________\n\n    Si OEIL est un point de vue et MAIL un maillage,\nl'instruction : \"  T = TEXTE ' TRAC OEIL MAIL '; \"  suivie de\nl'instruction : \"  T ;  \"  aura le meme effet que \" TRAC OEIL MAIL ; \"\nc'est-a-dire effectuera un trace.\n\n    La suite d'instructions :  I = 2; J = 3; K = 6;\n                               TT = TEXTE I 'FOIS' J 'EGALE' K ;\n                               LIST TT;\n\nprovoquera l'impression de:    2  FOIS 3 EGALE 6",
  },
  {
    name: "TFR",
    url: "TFR",
    documentation:
      "$$$$ TFR      NOTICE  MB234859  17/10/02    21:15:27     9577           \n                                             DATE     17/10/02\n\n    Operateur TFR                            Voir aussi : TFRI\n    --------------  \n    | EVOL1             | = TFR N1 | EVOL2       | MOT1 ... \n    | LCHPR LCHPI LISTF |          | LCHPO LISTT | \n    \n            ... ('FMIN' FLOT1) ('FMAX' FLOT2) (COUL1) (COUL2) ;\n\n            \n    Objet :\n    _______\n\n    L'operateur TFR construit la transformee de Fourier rapide (FFT)\n    d'un signal.\n\n    Commentaire :\n    _____________\n\n\n    N1     : on utilise, pour la transformee de Fourier rapide,\n             un nombre de points egal a 2**N1 (type ENTIER)\n             (Si le signal traite est plus long, on le tronque;\n             s'il est plus court, on le complete par des 0.)\n\n    EVOL2  : objet contenant le signal a etudier (type EVOLUTION);\n             les abscisses doivent etre a pas constant, les valeurs\n             du signal etant les ordonnees. L'objet ne doit contenir\n             qu'une seule courbe.\n    ou         \n    LCHPO  : objet contenant le signal a etudier (type LISTCHPO) sous\n             la forme d'une liste de champs par points en fonction du \n             temps. les chpoints contenus doivent tous avoir exactement\n             la meme structure. LCHPO doit etre suivi de :\n    LISTT  : liste des temps du signal a etudier;\n             le pas de temps est suppose constant.\n    \n    MOT1   : mot indiquant la syntaxe des valeurs complexes de la TFR\n\n             'REIM' pour partie reelle et partie imaginaire / Frequence\n             'MOPH' pour module et phase  / Frequence\n\n   'FMIN'   : mot-cle suivi de :\n    FLOT1   : frequence minimale visualisee; elle sera superieure a 0.\n              (type FLOTTANT, valeur par defaut = 0.)\n\n   'FMAX'   : mot-cle suivi de :\n    FLOT2   : frequence maximale visualisee; elle sera inferieure\n              a 1/(2*DT), DT etant le pas de temps du signal d'entree.\n              (type FLOTTANT, valeur par defaut = valeur maximale\n              calculee)\n\n    COUL1   : couleur choisie de la premiere courbe (type MOT)\n              (blanc par defaut)\n\n    COUL2   : couleur choisie de la deuxieme courbe (type MOT)\n              (blanc par defaut)\n\n    EVOL1   : objet contenant la TFR, sous forme de deux courbes.\n              (type EVOLUTION)\n    ou\n    LCHPR   : partie reelle de la TFR (type LISTCHPO) sous la forme \n              d'une liste de champs par points en fonction de la \n              frequence.\n    LCHPI   : partie imaginaire de la TFR (type LISTCHPO) sous la forme \n              d'une liste de champs par points en fonction de la \n              frequence.\n    LISTF   : liste des frequences (type LISTREEL).\n    ",
  },
  {
    name: "TFRI",
    url: "TFRI",
    documentation:
      "$$$$ TFRI     NOTICE  MB234859  17/10/02    21:15:27     9577           \n                                             DATE     17/10/02\n\n    Operateur TFRI                           Voir aussi : TFR\n    --------------  \n    EVOL2 = TFRI  EVOL1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur TFRI construit la transformee de Fourier inverse d'un\nsignal (inverse de la transformee de Fourier rapide).\n\n    Commentaire :\n    _____________\n\n    EVOL1  : objet complexe sur lequel on fera la transformee de\n             Fourier inverse (type EVOLUTION).\n             Les abscisses doivent etre a pas constant.\n             L'objet EVOLUTION doit etre complexe :\n\n                 PREE,PIMA  : partie reelle, partie imaginaire\n             ou  MODU,PHAS  : module, phase\n\n\n    EVOL2  : objet reel contenant la transformee de FOURIER\n             inverse (type EVOLUTION).",
  },
  {
    name: "THERMIC",
    url: "THERMIC",
    documentation:
      "$$$$ THERMIC  NOTICE  CHAT      11/09/12    21:18:18     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure THERMIC                        Voir aussi :\n    -----------------  \n    THERMIC  (MOT1) TAB1 ;\n\n              MOT1=NONLINEAIRE:\n                   TAB1.'SOUSTYPE' .'MAILLAGE'  .'COQUE'  .'EPAI'\n                       .'CONDUCTIVITE' .'BLOCAGE' .'CRITERE' .'EVOCOND'\n                       .'ITERMAX' .'IMPOSE' .'NITER' .'FLUX' .'NIVEAU'\n\n\n    Objet :\n    _______\n\n    La procedure THERMIC permet de traiter le probleme suivant :\n\n    - regime permanent nonlineaire (materiaux isotropes seulement) ;\n\n    Commentaire :\n    _____________\n\n    TAB1 : objet (type TABLE, sous-type 'THERMIQUE') contenant :\n\n            - les operandes en entree;\n            - les champs thermiques resultats en sortie;\n\n    MOT1 : mots-cle (type MOT) caracterisant le type de\n           calcul entrepris.\n\n    -------------------------------------\n    | 1 - Regime permanent non-lineaire |\n    -------------------------------------\n\n    MOT1 = NONLINEAIRE\n\n    TAB1 contient en entree les operandes suivants :\n\n    TAB1 'SOUSTYPE'       'THERMIQUE' (type MOT)\n    TAB1 'COQUE'          type d'element coque(type MOT)\n    TAB1 'EPAI'           epaisseur de la coque\n    TAB1 'PEAU'           Peau sur laquelle s'effectue l'echange\n    TAB1 'BLOCAGE'        matrice de blocage (type RIGIDITE)\n    TAB1 'IMPOSE'         valeurs imposees (type CHPOINT)\n    TAB1 'FLUX'           flux equivalents (type CHPOINT)\n    TAB1 'INSTANT(0)'     Champ de temperature initial(type CHPOINT)\n                          ou sinon fournir les trois donnees\n                          suivantes\n    TAB1 'CONDUC(0)'      Table des valeurs initiales de la conduc-\n                          tivite indicee par les modeles des sous zones\n    TAB1 'CONVEC(0)'      Table des valeurs initiales de la convection\n                          indicee par les objets modeles\n    TAB1 'TEMPEX(0)'      Table des temperatures initiales exterieures\n                          indicee par les objets modeles\n    TAB1 'CONDUCTIVITE'   Matrice de conductivite ou sinon fournir les\n                          deux donnees suivantes\n    TAB1  'TABCOND'       table des conductivites indicee par les objets \n                          modeles des differentes sous-zones,la conduc-\n                          tivite de chaque zone peut etre representee \n                          par un nombre (type FLOTTANT) ou par un objet \n                          d'evolution decrivant la variation de la  \n                          dconductivite fonction de la temperature : K(T)\n    TAB1 'CONVECTION'     table des tables pour une condition de convection\n                          indicee par les mots-cles suivants :\n\n         'TABCONV1'       table des coefficients d'echange indicee par \n                          les objets modeles des differentes surfaces de\n                          convection ,le coefficient d'echange de chaque \n                          surface peut etre represente par un nombre (type \n                          FLOTTANT) ou par un objet d'evolution decrivant \n                          la variation du coefficient d'echange fonction  \n                          de la temperature : H(T) \n         'TABTE1'         table des temperatures exterieures indicee par \n                          les objets modeles des differentes surfaces de \n                          convection,la temperature exterieure de chaque \n                          surface peut etre representee par un nombre  \n                          (type FLOTTANT) ,par un champ  par point (type\n                           CHPOINT) ou par un objet d'evolution decrivant \n                          la variation de la temperature exterieure  \n                          fonction de la temperature de la surface \n                          de convection : TE(T)\n    TAB1 'CRITERE'        critere de convergence ( 10E-5 par defaut )\n                          (type FLOTTANT)\n    TAB1 'NITER'          reactualisation de la conductivite toutes\n                          les NITER iterations ( NITER = 1 par defaut )\n                          (type ENTIER)\n    TAB1 'NIVEAU'         niveaux de messages ( NIVEAU = 0 par defaut )\n                          (type ENTIER)\n    TAB1 'ITERMAX'        nombre d'iterations maximum (type ENTIER)\n                          ( ITERMAX = 10 par defaut )\n\n    TAB1 contient en sortie:\n\n    TAB1 'TEMPERATURE'    champ de temperature resultat (type CHPOINT)",
  },
  {
    name: "THET",
    url: "THET",
    documentation:
      "$$$$ THET     NOTICE  JB251061  20/11/12    21:15:08     10777          \n                                             DATE     20/11/12\n                                             \n    Operateur THETA                          Voir aussi : EPTH\n    ---------------  \n      SIG1 = THET  MODL1 MAT1 CH1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur THETA calcule les contraintes associees aux \n    deformations d'origine thermique, a savoir :\n\n                   SIGMA   = HOOK  * EPSTHER\n                   EPSTHER = ALPHA * (T - TALP)\n\n    ou HOOK est la matrice de Hooke et EPSTHER les deformations\n    d'origine thermique.\n\n\n      Commentaire :\n      _____________\n\n      MODL1 : Objet modele (type MMODEL)\n\n      MAT1  : Champ de caracteristiques materielles et geometriques\n              (type MCHAML, sous-type CARACTERISTIQUES )\n\n      CH1   : champ de temperature (type MCHAML, sous-type TEMPERATURES\n              ou type CHPOINT). Pour les elements joints, seuls sont\n              autorises les champs de temperature de type MCHAML. Le\n              type CHPOINT est interdit pour les joints.\n\n      SIG1  : champ de contraintes (type MCHAML, sous-type CONTRAINTES)\n\n\n    Remarque :\n    __________\n\n\n    SGIMA est le champ de contraintes entre les temperatures TALP et T.\nPour obtenir le champ de contraintes total entre TREF et T, il faut donc\nretrancher le champ de contraintes entre TALP et TREF, obtenu en appelant\nTHET avec le champ de temperature TREF et le champ de caracteristiques\nmaterielles a TREF.\n\n    Remarque :\n    __________\n\n\n    Pour les elements    coques ,le champ de temperature doit avoir\ntrois composantes de noms : TINF ,T, et TSUP, designant respectivement\nla temperature en peau inferieure ,en surface moyenne et en peau\nsuperieure.\n\n    Pour les autres elements, le champ de temperature doit avoir une\ncomposante de nom : T.\n\n    Il est possible a partir des contraintes thermiques de retrouver\nles deformations thermiques en utilisant l'operateur ELAS.",
  },
  {
    name: "TIRE",
    url: "TIRE",
    documentation:
      "$$$$ TIRE     NOTICE  PASCAL    20/11/20    21:15:08     10790          \n                                             DATE     20/11/20\n\n    Operateur TIRE                           Voir aussi : CHAR\n    --------------  \n\n    Cet operateur a deux fonctions selon les arguments :\n\n    ------------------\n    |  1ere fonction |\n    ------------------\n\n    OBJ1 = TIRE  SOL1 MOT1 (VAL1) ;\n\n    Objet :\n    _______\n\n    L'operateur TIRE permet de tirer d'un objet SOLUTION, un objet\ndont la nature est precisee dans la syntaxe.\n\n    Commentaire :\n    _____________\n\n    On cherche a l'interieur de l'objet SOL1, un objet repere par :\n\n       - un mot-cle   : la liste des mots-cles pour chaque sous-type\n                        d'objet de type SOLUTION est definie dans SOLU.\n       - un 'instant' : un temps, un cas de charge, un mode, ...\n\n\n    SOL1  : objet de type SOLUTION\n\n    MOT1  : mot-cle definissant le type de la variable : ('DEPL',\n            'VITE', 'ACCE', 'LIAI', 'FREQ', 'MGEN', 'QX', 'QY',\n            'QZ' , 'POIN' , ...)\n\n            'POIN' est le mot-cle permettant d'obtenir le point-repere\n            associe a un mode.\n\n    VAL1  : definition de l'instant, a choisir parmi les couples :\n\n            'TEMP' T      : temps a prendre (type FLOTTANT)\n            'CAS'  ICAS   : cas a prendre (type ENTIER)\n            'RANG' IRG    : rang de l'objet a prendre (type ENTIER)\n            'NUME' INUME  : numero du mode a prendre(@ programmer) (type\n                            ENTIER)\n            Par defaut l'operateur choisit le dernier instant.\n\n    OBJ1  : objet resultat (type MOT, FLOTTANT, ENTIER suivant la syntaxe\n            adoptee)\n\n    --------------------\n    |  2eme fonction   |\n    --------------------\n\n    OBJ1 = TIRE  CHAR1 FLOT1 | ('TABL') ;\n                             |  (MOT1)  ;\n\n    Objet :\n    _______\n\n    L'operateur TIRE permet de tirer d'un objet de type CHARGEMENT,\n  un objet correspondant au chargement a un instant donne.\n\n    Commentaire :\n    _____________\n\n    CHAR1  : objet de type CHARGEMENT, sous-type FORCE\n\n    FLOT1  : temps auquel on veut le chargement (type FLOTTANT)\n\n    OBJ1  : objet resultat : type CHPOINT, MCHAML, TABLE, MMODEL,\n            MAILLAGE, RIGIDITE ou POINT. Ce dernier cas correspond\n            a un chargement de nom TRAJ (voir CHAR).\n\n    MOT1  : Nom du chargement pour lequel on desire le champ\n            instancie.\n\n    'TABL': Mot-clef indiquant que l'on veut que les resultats \n            soient ranges dans une table indicee par les noms\n            des chargements elementaires et pointant vers les\n            champs instancies correspondants (type CHPOINT ou\n            MCHAML). \n\n  Remarque : si ni MOT1 ni 'TABL' ne sont precises, le chargement\n             sera la somme des chargements elementaires instancies.\n             Dans ce cas, tous les chargements elementaires instan-\n             -cies doivent etre du meme type.\n         ",
  },
  {
    name: "TITR",
    url: "TITR",
    documentation:
      "$$$$ TITR     NOTICE  PV        19/12/10    21:15:14     10423          \n                                             DATE     19/12/10\n\n    Directive TITRE                          Voir aussi : CHAIN\n    ---------------  \n\n    Objet :\n    _______\n\n    La directive TITRE permet de donner un titre a la tache en cours.\nIl contient au plus 72 caracteres. La syntaxe est celle de\nl'operateur CHAIN (appele en interne).\n\n    Commentaire :\n    _____________\n\n    Ce titre s'affichera, en particulier, lors de tout trace demande\napres l'execution de cette directive.\n\n    Exemple :\n    _________\n\n    PRESS = 25.86  ;\n    ICAS  = 2 ;\n    TITRE  ' CAS DE CHARGE NUMERO' ICAS ' VALEUR DE LA PRESSION' PRESS;\n\ncette suite d'instructions fabrique le titre suivant :\n\n   CAS DE CHARGE NUMERO     2  VALEUR DE LA PRESSION  25.860",
  },
  {
    name: "TOIM",
    url: "TOIM",
    documentation:
      "$$$$ TOIM     NOTICE  CHAT      11/09/12    21:18:19     7124           \n                                             DATE     11/09/12\n\n  Operateur TOIM                          Voir aussi :\n     --------------  \n     Syntaxe (EQEX) : Cf Operateur EQEX\n     ________________\n\n\n     'OPER' 'TOIM' tos   'INCO' 'UN'\n\n\n\n     Objet :\n     _______\n\n     Discretise une condition de contrainte (visqueuse) sur une\n     surface et calcule l'increment.\n                                                                                \n     Commentaires :\n     ______________\n                                                                                \n\n     tos   tension de surface dans le repere local  CHPOINT VECT CENTRE\n                                                 ou VECTEUR\n           en 2D (Tt=mu dUt/dn  Tn=mu dUn/dn - P)\n     (par convention une tension oposee a la quantite de mouvement est\n      comptee negativement, la pression est positive)\n\n     UN    Champ de vitesse                    CHPOINT VECT SOMMET\n\n\n     OPTION\n     ______\n\n     L'operateur est discretise par une methode d'element finis EF\n     (meme discretisation pour EFM1)",
  },
  {
    name: "TOPOCHAN",
    url: "TOPOCHAN",
    documentation:
      "$$$$ TOPOCHAN NOTICE  CB215821  18/03/22    21:15:01     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPOCHAN                       Voir aussi : TOPOPTIM\n    __________________                                    TOPOSURF  \n\nCette procedure est appelee par TOPOPTIM et TOPOSURF.",
  },
  {
    name: "TOPOCRIT",
    url: "TOPOCRIT",
    documentation:
      "$$$$ TOPOCRIT NOTICE  CB215821  18/03/22    21:15:01     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPOCRIT                       Voir aussi : TOPOPTIM\n\n\nCette procedure est appelee par TOPOPTIM pour mettre a jour le critere\nd optimalite.\n\nLes utilisateurs avances peuvent definir leur propre version de\nTOPOCRIT, juste avant de faire appel a TOPOPTIM.",
  },
  {
    name: "TOPOFILT",
    url: "TOPOFILT",
    documentation:
      "$$$$ TOPOFILT NOTICE  CB215821  18/03/22    21:15:02     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPOFILT                       Voir aussi : TOPOPTIM\n\n\nCette procedure est appelee par TOPOPTIM pour filtrer le champ de\nsensibilite.\n\nLes utilisateurs avances peuvent definir leur propre version de\nTOPOFILT, juste avant de faire appel a TOPOPTIM.",
  },
  {
    name: "TOPOMATE",
    url: "TOPOMATE",
    documentation:
      "$$$$ TOPOMATE NOTICE  CB215821  18/03/22    21:15:02     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPOMATE                       Voir aussi : TOPOPTIM\n\n\nCette procedure est appelee par TOPOPTIM pour modifier les proprietes\ndu materiau afin de tenir compte d'un champ de densite donne.\n\nLa version actuelle de cette procedure ne modifie que le module\nd'Young pour les materiaux mecanique et la conductivite pour les\nmateriaux thermique.\n\nLes utilisateurs avances peuvent definir leur propre version de\nTOPOMATE, juste avant de faire appel a TOPOPTIM, en particulier\nsi un materiau de comportement non lineaire est utilise pour\nmodifier convenablement toutes les proprietes supposees affectees\npar la densite.",
  },
  {
    name: "TOPOPTIM",
    url: "TOPOPTIM",
    documentation:
      "$$$$ TOPOPTIM NOTICE  FD218221  21/04/14    21:15:09     10965          \n                                             DATE     21/04/14\n                 \n\n             CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n              A DISPOSITION DE LA COMMUNAUTE CAST3M\n                    PAR Guenhael Le Quilliec\n              Laboratoire de Mecanique Gabriel Lame\n Universite de Tours, Universite d Orleans, INSA Centre Val de Loire\n    Polytech Tours, 7 avenue Marcel Dassault, 37200 Tours, France\n\n\n    Procedure TOPOPTIM                       Voir aussi : TOPOCHAN\n    __________________                                    TOPOCRIT  \n                                                          TOPOFILT  \n                                                          TOPOMATE  \n                                                          TOPORSTR  \n                                                          TOPOSAUV  \n                                                          TOPOSURF  \n    TOPOPTIM TAB1 ;\n\n\n    TAB1.  CONVERGENCE                     POIDS_ENERGIE_DEFO\n           CRITERE                         POIDS_MECANISME\n           CYCLE                           POIDS_TEMPERATURE\n           CYCLES_SAUVEGARDES              PRECISION\n           FACTEUR_D                       PROCEDURE_TOPOPERS\n           FACTEUR_P                       RAPPORT_RAIDEURS_MECANIQUES\n           FACTEUR_Q                       RAPPORT_RAIDEURS_THERMIQUES\n           FRACTION_VOLUME                 RESOLUTION\n           MAILLAGE                        RESOLUTION_LINEAIRE\n           MAX_CYCLES                      RESOLUTION_PASAPAS\n           MECANISME                       RESTRICTIONS\n           MECANISME_ZERO_SPRING           SEUIL\n           MES_SAUVEGARDES                 TAUX_FILTRAGE\n           OC_B_MIN                        TOPOLOGIE\n           OC_CRITERE                      TOPOLOGIE_MAX_INC\n           OC_L1                           TOPOLOGIE_MIN\n           OC_L2                           TRAC\n           OC_L2_MIN                       ZERO_DIVISION\n           OC_MAX_IT                       ZONE_FIGEE\n\n\n    Objet :\n    _______\n\nCette procedure permet d effectuer une optimisation topologique d une\nstructure soumise a un chargement mecanique et/ou thermique, en\nconsiderant un comportement lineaire ou non-lineaire, avec ou sans\nrestrictions geometriques sur la topologie de sortie. Elle permet aussi\nd effectuer une synthese d un mecanisme souple.\n\n\n    Commentaires :\n    ______________\n\nLa premiere version de cette procedure s inspirait directement des\ntravaux de O. Sigmund ainsi que ceux de W. Hunter.\n\nLa version actuelle (2.4) a ete adaptee pour traiter les non-linearites \n(contact, plasticite, grandes deformations, grands deplacements et\ngrandes rotations), sous chargements multiphysiques. Il est possible\nd ajouter des restrictions geometriques sur la topologie de sortie\n(e.g. une periodicite). Elle est entierement ecrite en Gibiane afin de\nfaciliter les developpements pour les utilisateurs avances.\n\nLe filtrage de la sensibilite est effectue ici par interpolations\nsuccessives entre les noeuds et les points d integration afin d assurer\ndes performances correctes tout en restant en language Gibiane. Cette\noperation est assuree par la procedure TOPOFILT que les utilisateurs\navances peuvent redefinir avant de faire appel a TOPOPTIM.\n\nLes restrictions geometriques, les mises a jour du materiau (pour tenir\ncompte de la densite) et les mises a jour de la topologie sont elles\naussi assurees par des procedures externes : TOPORSTR, TOPOMATE et\nTOPOCRIT. La encore, les utilisateurs avances peuvent redefinir ces\nprocedures avant de faire appel a TOPOPTIM.\n\nEnfin, une procedure personnelle TOPOPERS peut etre appelee a chaque\ncycle d optimisation, juste apres la resolution, donnant a\nl utilisateur la possibilite d intergir avec TOPOPTIM au cours du\nprocessus d optimisation. Il peut par exemple appliquer sa propre\nfonction objectif et calculer son propre champs de sensibilite, ou\nbien encore creer ses propres restrictions geometriques...\n\n\n    Remarques :\n    ___________\n\nPour debuter, il est preferable de garder a 1 les facteurs de penalite\net d echelle de gris pour choisir convenablement le taux de filtrage.\nPuis on ajustera dans un second temps le facteur de penalite pour\nterminer par ajuster le facteur d echelle de gris.\n\nIl est possible de stopper le processus a tout instant avec Ctrl+C et\nanalyser/modifier/sauvegarder les donnees de TAB1 (en mode interactif)\npuis eventuellement continuer l optimisation en redonnant TAB1 a\nTOPOPTIM.\n\nApres avoir utilise TOPOPTIM, la procedure TOPOSURF peut etre lancee\nafin d obtenir une surface maillee lissee de la topologie de sortie.\nFinallement, ce maillage peut etre sauve au format STL en utilisant la\ndirective SORTIR. Ce format de fichier est souvent prefere pour les\napplications d impressions 3D.\n\n\n    En entree :\n    ___________\n\nEn entree, TAB1 sert a definir les options et les parametres de\nl optimisation. Les indices de l objet TAB1 sont des mots (a ecrire en\ntoutes lettres, et en majuscules s ils sont mis entre cotes) dont voici\nla liste :\n\n CRITERE : critere de convergence. Cette donnee est facultative et est\n           egale a 0.01 par defaut.\n\n CYCLE : numero du precedent cycle a partir duquel l optimisation doit\n         se poursuivre. Cette donnee est facultative et est egale a 0\n         par defaut.\n\n CYCLES_SAUVEGARDES : LISTENTI contenant la liste des cycles pour\n                      lesquels la procedure TOPOSAUV sauvegardera les\n                      resultats specifies par MES_SAUVEGARDES. Cette\n                      donnee est facultative et une LISTENTI vide par\n                      defaut. Le dernier cycle est toujours sauvegarde,\n                      qu il fasse ou non partie de LISTENTI.\n\n FACTEUR_D : FLOTTANT si constant ou EVOLUTION du facteur\n             d amortissement au cours des cycles (fonction contenant\n             en abscisse les cycles et en ordonnee les valeurs du\n             facteur d amortissement). Ce facteur permet d attenuer\n             les phenomenes oscillatoires lors des cycles d optimisation.\n             Cette donnee est facultative et est egale a 0.5 par defaut.\n             Une valeur plus faible est generalement souhaitable dans\n             le cas d une synthese de mecanisme souple.\n\n FACTEUR_P : FLOTTANT si constant ou EVOLUTION du facteur de penalite\n             au cours des cycles (fonction contenant en abscisse les\n             cycles et en ordonnee les valeurs du facteur de penalite).\n             Cette donnee est facultative et est egale a 3.0 par defaut.\n\n FACTEUR_Q : FLOTTANT si constant ou EVOLUTION du facteur d echelle de\n             gris au cours des cycles d optimisation (fonction contenant\n             en abscisse les cycles et en ordonnee les valeurs du\n             facteur d echelle de gris). Cette donnee est facultative\n             et est egale a 1.0 par defaut.\n\n FRACTION_VOLUME : fraction de volume autorisee. Cette donnee est\n                   facultative et est egale a 0.4 par defaut.\n\n MAX_CYCLES : nombre maximum de cycles d optimisation. Cette donnee est\n              facultative et est egale a 100 par defaut.\n\n MECANISME : cette donnee permet d effectuer une synthese de mecanisme\n             souple. Elle indique la direction dans laquelle les\n             deplacements doivent etre maximises sous l effet du\n             chargement applique. Pour un cas de charge unique, la\n             direction est donnee sous la forme d un simple objet\n             forces. Pour un cas de charges multiples, les directions\n             sont donnees par une TABLE d objets forces. Chaque objet\n             forces est de type CHPOINT dans le cas d une resolution\n             lineaire, ou sous la forme d un objet de type CHARGEME,\n             cree par l operateur CHAR, dans le cas d une resolution\n             non-lineaire. Notons que la synthese de mecanismes souples\n             est encore en developpement et principalement a destination\n             des utilisateurs avances pour le moment.\n\n MECANISME_ZERO_SPRING : LOGIQUE indiquant s il faut aussi effectuer\n             une resolution sans les ressorts appliques dans le cas\n             d une synthese de mecanisme souple. Cette donnee est\n             facultative et est egale a FAUX par defaut.\n\n MES_SAUVEGARDES : TABLE permettant de specifier quel resultats doivent\n                   etre sauves.\n\n                   Les indices de cette table sont :\n\n                   MAILLAGE : LOGIQUE valant VRAI pour sauver le\n                              maillage au cours de l optimisation.\n                              Cette donnee est facultative et est\n                              egale a VRAI par defaut.\n\n                   RESOLUTION : LOGIQUE valant VRAI pour sauver les\n                                resultats issus des resolutions\n                                effectuees au cours de l optimisation.\n                                Cette donnee est facultative et est\n                                egale a FAUX par defaut.\n\n                   TOPOLOGIE : LOGIQUE valant VRAI pour sauver la\n                               topologie au cours de l optimisation.\n                               Cette donnee est facultative et est\n                               egale a VRAI par defaut.\n\n OC_B_MIN : valeur minimale de B appliquee dans le cas d une synthese\n            de mecanisme souple avec B**D correspondant au rapport\n            entre le nouveau champ topologique et celui du cycle\n            precedent. Cette donnee est facultative et est egale a\n            1.0e-10 par defaut.\n\n OC_CRITERE : valeur du critere de convergence pour l algorithme\n              dicotomique du critere d optimalite. Cette donnee est\n              facultative et est egale a 1.0e-8 par defaut.\n\n OC_L1 : valeur de la borne inferieure intiale de l interval de\n         recherche pour l algorithme dicotomique du critere\n         d optimalite. Cette donnee est facultative et est egale a 0.0\n         par defaut.\n\n OC_L2 : valeur de la borne superieure intiale de l interval de\n         recherche pour l algorithme dicotomique du critere\n         d optimalite. Cette donnee est facultative et est egale au\n         maximum de la valeur absolue de la sensibilit\u00e9 courante.\n\n OC_L2_MIN : valeur minimale de la borne superieure de l interval de\n             recherche pour l algorithme dicotomique du critere\n             d optimalite. Cette donnee est facultative et est egale a\n             1.0e-40 par defaut.\n\n OC_MAX_IT : nombre maximum d iterations pour l algorithme dicotomique\n             du critere d optimalite. Cette donnee est facultative et\n             est egale a 1.0e5 par defaut.\n\n POIDS_TEMPERATURE : poids permettant d affecter la sensibilite a la\n                     minimisation de souplesse thermique par rapport\n                     aux autres criteres de sensibilite eventuels.\n                     Cette donnee est facultative et est egale par\n                     defaut a 0.0 dans le cas d une synthese de\n                     mecanisme souple ou 1.0 sinon. Pour ne pas etre\n                     sensible a la souplesse thermique, mettre ce\n                     parametre a zero.\n\n POIDS_MECANISME : poids permettant d affecter la sensibilite du critere\n                   pour la synthese de mecanisme souple par rapport aux\n                   autres criteres de sensibilite eventuels. Cette\n                   donnee est facultative et est egale a 1.0 par defaut.\n                   Pour ne pas etre sensible a ce critere, mettre ce\n                   parametre a zero.\n\n POIDS_ENERGIE_DEFO : poids permettant d affecter la sensibilite a la\n                      minimisation de l energie de deformation\n                      elastique par rapport aux autres criteres de\n                      sensibilite eventuels. Cette donnee est\n                      facultative et est egale par defaut a 0.0 dans le\n                      cas d une synthese de mecanisme souple ou 1.0\n                      sinon. Pour ne pas etre sensible a l energie de\n                      deformation elastique, mettre ce parametre a\n                      zero.\n\n PRECISION : seuil de precision en deca duquelle on considere qu un\n             nombre est nul. Cette donnee est facultative et est egale\n             a 1.0e-9 par defaut.\n\n PROCEDURE_TOPOPERS : LOGIQUE indiquant si une procedure TOPOPERS a\n                      ete definie par l utilisateur. Auquel cas elle\n                      sera appelee a chaque cycle du processus\n                      d optimisation, juste apres la resolution. Cette\n                      donnee est facultative et est egale a FAUX par\n                      defaut.\n\n RAPPORT_RAIDEURS_MECANIQUES : valeur du rapport entre la raideur\n                               correspondant aux vides et celle\n                               de la matiere. Cette donnee est\n                               facultative et est egale par defaut a \n                               1.0e-8 dans le cas d une synthese de\n                               mecanisme souple ou 0.0 sinon. Une valeur\n                               differente de 0.0 revient a considerer\n                               que les vides ont une certaine raideur.\n\n RAPPORT_RAIDEURS_THERMIQUES : valeur du rapport entre la conductivite\n                               correspondant aux vides et celle\n                               de la matiere. Cette donnee est\n                               facultative et est egale a 0.001 par\n                               defaut. Par exemple, si les vident\n                               correspondent a de l air, ce rapport\n                               doit etre celui de la conductivite de\n                               l air sur celle de la matiere.\n\n RESOLUTION_LINEAIRE : TABLE contenant les donnees de la simulation\n                       pour une resolution lineaire via la procedure\n                       RESO. Si cette table est donnee, alors\n                       RESOLUTION_PASAPAS ne doit pas etre fourni.\n                       \n       Les indices de cette table sont :\n                       \n       BLOCAGES_MECANIQUES : blocages mecaniques (type RIGIDITE) ou\n                             TABLE contenant les differents cas de\n                             blocages mecaniques.\n\n       BLOCAGES_THERMIQUES : blocages thermiques (type RIGIDITE) ou\n                             TABLE contenant les differents cas de\n                             blocages thermiques.\n\n       CARACTERISTIQUES : champ de caracteristiques materielles et\n                          geometriques si necessaire.\n\n       CHARGEMENT : objet de type CHPOINT pour un cas de charge unique,\n                    ou bien de type TABLE contenant les differents\n                    cas de chargement, chacun de type CHPOINT. Dans le\n                    cas d un chargement thermo-mecanique, la resolution\n                    sera decouplee. Pour une resolution couplee,\n                    utiliser RESOLUTION_PASAPAS.\n\n       MODELE : objet modele (type MMODEL) de la structure de\n                comportement lineaire.\n\n RESOLUTION_PASAPAS : TABLE contenant les donnees de la simulation pour\n                      une resolution non-lineaire via la procedure\n                      PASAPAS. Si cette table est donnee, alors\n                      RESOLUTION_LINEAIRE ne doit pas etre fourni.\n\n       Les indices de cette table sont ceux decrits dans la procedure\n       PASAPAS a l exception des indices suivants qui peuvent etre\n       donnes sous forme de TABLE pour les cas de chargements\n       multiples :\n       \n       BLOCAGES_MECANIQUES : blocages mecaniques (type RIGIDITE) ou\n                             TABLE contenant les differents cas de\n                             blocages mecaniques, chacun de type\n                             RIGIDITE.\n\n       BLOCAGES_THERMIQUES : blocages thermiques (type RIGIDITE) ou\n                             TABLE contenant les differents cas de\n                             blocages thermiques, chacun de type\n                             RIGIDITE.\n\n       CHARGEMENT : chargement en fonction du parametre d evolution\n                    (type CHARGEME, cree par l operateur CHAR), ou\n                    TABLE contenant les differents cas de chargement,\n                    chacun de type CHARGEME.\n\n RESTRICTIONS : TABLE contenant les donnees sur les restrictions\n                geometriques a appliquer. Cette donnee est facultative\n                et aucune restriction n est applique par defaut.\n               \n                Les indices de cette TABLE sont des entiers\n                correspondant aux numeros, de 1 a N, des N restrictions\n                a appliquer. Les donnees relatives a chaque restriction\n                sont elles-meme indiquees dans une TABLE.\n\n       Les indices de la TABLE d une restriction sont :\n       \n       ZONE : partie du maillage sur lequel s applique la restriction.\n              Ce maillage doit lui meme respecter la restriction a\n              imposer a la topologie de sortie. Cette donnee est\n              facultative et la restriction s applique par defaut sur\n              l ensemble du domaine optimise.\n       \n       TYPE : MOT indiquant le type de restriction a appliquer. Les\n              valeurs possibles sont :\n\n                1 - SYME_POIN : pour une symetrie centrale.\n                2 - SYME_DROI : pour une symetrie axiale.\n                3 - SYME_PLAN : pour une symetrie plane.\n                4 - PERIODICITE_AXIALE : pour une periodicite axiale\n                5 - PERIODICITE_CIRCULAIRE : pour une periodicite\n                                             circulaire.\n       \n       POIN1 : un, deux ou trois points suivant le type de restriction.\n       POIN2   Par exemple, pour SYME_PLAN, en 2D, seuls POIN1 et POIN2\n       POIN3   sont attendus. Pour le cas de la periodicite axiale,\n               POIN1 et POIN2 donnent la direction et leur distance\n               doit correspondre a la taille d une periode.\n       \n       PERIODES : nombre de periodes. Cette donnee est attendue\n                  uniquement pour PERIODICITE_AXIALE et pour\n                  PERIODICITE_CIRCULAIRE.\n\n SEUIL : valeur seuil du rapport des raideurs en deca duquelle les\n         elements sont elimines pour accelerer le processus\n         d optimisation. Cette donnee est facultative et est egale a\n         1.0e-9 par defaut.\n\n TAUX_FILTRAGE : taux de filtrage de la sensibilite. Cette donnee est\n                 facultative et est egale a 1 par defaut.\n\n TOPOLOGIE : TABLE facultative qui peut contenir une topologie de\n             depart imposee dont l indice doit etre egal a CYCLE\n             (0 par defaut). Le maillage et le modele associes a ce\n             champ topologique de depart n ont pas besoin d etre les\n             memes que ceux donnes dans la table de resolution. Cela\n             peut etre utile dans le cas d un raffinement de maillage\n             entre plusieurs appels successifs a TOPOPTIM.\n\nTABLE that can contain an initial topology field whose\n            index should be equal to CYCLE (0 by default). The\n            mesh and model associated to this prescribed initial\n            topology field do not need to be the same as those given\n            in the resolution table. This can be useful in case of\n            mesh refinement between several calls to TOPOPTIM. This\n            data is optional. \n\n\n TOPOLOGIE_MAX_INC : increment maximum d evolution du critere\n                     d optimalite entre deux cycles d optimisation\n                     successifs. Cette donnee est facultative et est\n                     egale a 0.2 par defaut.\n\n TOPOLOGIE_MIN: valeur minimale du champ topologique. Cette donnee est\n                facultative et est egale par defaut a 0.001 dans le\n                cas d une synthese de mecanisme souple ou 0.0 sinon.\n\n TRAC : LOGIQUE permettant de dessiner l evolution de la topologie a\n        la fin de chaque cycle du processus d optimisation. Cette\n        donnee est facultative et est egale a VRAI par defaut.\n\n ZERO_DIVISION : valeur utilisee pour eviter les divisions par zero\n                 lors des operations sur les champs de sensibilite.\n                 Cette donnee est facultative et est egale a 0.001 par\n                 defaut.\n\n ZONE_FIGEE : partie du maillage qui fera obligatoirement partie de la\n              topologie optimisee. Cette donnee est facultative.\n\n\n    En sortie :\n    ___________\n\nEn sortie, TAB1 permet de retrouver differentes donnes dont voici\nla liste :\n\n CONVERGENCE : LOGIQUE indiquant si le critere de convergence a ete\n               atteint. Dans le cas contraire, le nombre maximum\n               de cycles d optimisation a ete atteint.\n\n MAILLAGE : TABLE contenant le maillage au cours de l optimisation.\n            Si la sauvegarde du maillage n a pas ete specifiee dans\n            MES_SAUVEGARDES, alors cette table est vide. Dans le cas\n            contraire, les indices de cette table sont ceux des cycles\n            auquels la sauvegarde a ete demandee ainsi que celui du\n            dernier cycle d optimisation effectue.\n\n RESOLUTION : TABLE contenant les resultats issus des resolutions\n              effectuees au cours de l optimisation. Si la sauvegarde\n              des resolutions n a pas ete specifiee dans\n              MES_SAUVEGARDES, alors cette table est vide. Dans le cas\n              contraire, les indices de cette table sont ceux des cycles\n              auquels la sauvegarde a ete demandee ainsi que celui du\n              dernier cycle d optimisation effectue. \n\n TOPOLOGIE : TABLE contenant la topologie au cours de l optimisation.\n             Si la sauvegarde de la topologie n a pas ete specifiee dans\n             MES_SAUVEGARDES, alors cette table contient uniquement la\n             topologie du dernier cycle d optimisation effectue. Dans le\n             cas contraire, les indices de cette table sont ceux des\n             cycles auquels la sauvegarde a ete demandee ainsi que celui\n             du dernier cycle d optimisation effectue. Chaque topologie\n             correspond a un champ scalaire de type MCHAML, exprime aux\n             centres de gravite des elements du maillage initial.\n\n\n    Exemples :\n    __________\n\ntopoptim_01.dgibi topoptim_02.dgibi topoptim_03.dgibi topoptim_04.dgibi\ntopoptim_05.dgibi topoptim_06.dgibi topoptim_07.dgibi topoptim_08.dgibi\ntopoptim_09.dgibi topoptim_10.dgibi topoptim_11.dgibi",
  },
  {
    name: "TOPORSTR",
    url: "TOPORSTR",
    documentation:
      "$$$$ TOPORSTR NOTICE  CB215821  18/03/22    21:15:05     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPORSTR                       Voir aussi : TOPOPTIM\n\n\nCette procedure est appelee par TOPOPTIM pour appliquer une restriction\ngeometrique sur la topologie de sortie.\n\nLes utilisateurs avances peuvent definir leur propre version de\nTOPORSTR, juste avant de faire appel a TOPOPTIM.",
  },
  {
    name: "TOPOSAUV",
    url: "TOPOSAUV",
    documentation:
      "$$$$ TOPOSAUV NOTICE  CB215821  18/03/22    21:15:05     9786           \n                                             DATE     18/03/22\n\n\n    Procedure TOPOSAUV                       Voir aussi : TOPOPTIM\n\n\nCette procedure est appelee par TOPOPTIM pour sauvegarder des\nresultats au cours de l'optimisation.\n\nLes utilisateurs avances peuvent definir leur propre version de\nTOPOSAUV, juste avant de faire appel a TOPOPTIM.",
  },
  {
    name: "TOPOSURF",
    url: "TOPOSURF",
    documentation:
      "$$$$ TOPOSURF NOTICE  CB215821  18/03/22    21:15:05     9786           \n                                             DATE     18/03/22\n                                      \n\n             CETTE PROCEDURE A ETE MISE GRACIEUSEMENT\n              A DISPOSITION DE LA COMMUNAUTE CAST3M\n                    PAR Guenhael Le Quilliec\n              Laboratoire de Mecanique Gabriel Lame\n Universite de Tours, Universite d Orleans, INSA Centre Val de Loire\n    Polytech Tours, 7 avenue Marcel Dassault, 37200 Tours, France\n\n\n    Procedure TOPOSURF                       Voir aussi : SORTIR\n    __________________                                    TOPOPTIM  \n\n    MAIL1 = TOPOSURF TAB1 ;\n\n\n    TAB1.  ELIMINATION                     ORIENTATION\n           EPAISSEUR                       SUREPAISSEUR\n           ISOVALEUR                       TAUX_FILTRAGE\n           MODELE                          TOPOLOGIE\n\n\n    Objet :\n    _______\n\nCette procedure permet de generer une surface lissee a partir d une\ntopologie 2D ou 3D. La topologie a lisser peut etre directement issue\nde la porcedure TOPOPTIM.\n\n\n    En entree :\n    ___________\n\nEn entree, TAB1 sert a definir les options et les parametres de lissage.\nLes indices de l objet TAB1 sont des mots (a ecrire en toutes lettres,\net en majuscules s ils sont mis entre cotes) dont voici la liste :\n\n ELIMINATION : FLOTTANT correspondant au critere de la directive\n               ELIMINATION applique pour la fusion des elements de la\n               surface de sortie. Cette donnee est facultative et est\n               egale a 1.0e-6 par defaut.\n\n EPAISSEUR : FLOTTANT donnant l epaisseur d extrusion dans le cas d une\n             topologie 2D et qu un maillage 3D est souhaite en sortie\n             (mettre a 0.0 sinon). Cette donnee est facultative et est\n             egale a 1.0 par defaut.\n\n ISOVALEUR : FLOTTANT donnant l isovaleur de la surface a generer. Cette\n             donnee est facultative et est egale a 0.5 par defaut.\n\n MODELE : modele de comportement sur lequel repose le champ tolologique\n          a lisser. Cette donnee est obligatoire.\n\n ORIENTATION : LOGIQUE precisant s il faut ou non orienter les elements\n               de la surface de sortie et fusionner les elements\n               superposes. Cette donnee est facultative et est egale a\n               VRAI par defaut.\n\n SUREPAISSEUR : FLOTTANT correspondant a la valeur de surepaisseur creee\n                autour du domaine occupe par le modele du champ\n                topologique. De preference, cette valeur doit etre tres\n                faible comparee a la taille des elements lorsque le\n                domaine n est pas convexe. Cette donnee est facultative\n                et est egale a 1.0e-3 par defaut.\n\n TAUX_FILTRAGE : taux de filtrage a appliquer a la topologie donnee en\n                 entree. Cette donnee est facultative et est egale a 1\n                 par defaut.\n\n TOPOLOGIE : champ scalaire de type MCHAML exprime aux centres de\n             gravite et correspondant a la topologie a lisser. Cette\n             donnee est obligatoire.\n\n\n    En sortie :\n    ___________\n\nUne surface MAIL1 est obtenue en sortie sous la forme d un maillage\ncompose d elements triangulaires a 3 noeuds en 3D ou d elements de type\nsegments a 2 noeuds en 2D.\n\nCette surface peut ensuite etre extraite au format STL via la procedure\nSORTIR.\n\n\n    Exemples :\n    __________\n\ntoposurf_01.dgibi toposurf_02.dgibi toposurf_03.dgibi",
  },
  {
    name: "TOTE",
    url: "TOTE",
    documentation:
      "$$$$ TOTE     NOTICE  MB234859  17/10/02    21:15:27     9577           \n                                             DATE     17/10/02\n                                             \n    Operateur TOTEMP                         Voir aussi : COMT\n    ----------------  \n    L'operateur TOTEMP calcule la somme des intervalles de l'abscisses\n    d'une fonction pour lesquelles son ordonnee est superieure a un \n    seuil predefini. Exemple : calcul de la duree totale de choc d'un \n    enregistrement d'impacts au cours du temps.\n    \n    \n    LREEL1 = TOTEMP  EVOL1 VAL1 ;\n\n    \n    Commentaire :\n    _____________\n\n    EVOL1  : objet contenant une ou des fonctions (type EVOLUTIO)\n\n    FLOT1  : seuil (type FLOTTANT)\n             FLOT1 est donne sous la forme d'un % de la valeur maximale\n             de l'enregistrement (1.D-6% par defaut)\n\n    LREEL1 : objet resultat (type LISTREEL)\n\n    Remarque :\n    __________\n\n    Si EVOL1 contient plusieurs fonctions, l'operation est faite pour\n    chacune d'elles.\n\n    Les abscisses doivent etre classees dans un ordre strictement\n    croissant.",
  },
  {
    name: "TOUR",
    url: "TOUR",
    documentation:
      "$$$$ TOUR     NOTICE  CHAT      11/09/12    21:18:21     7124           \n                                             DATE     11/09/12\n\n    Operateur TOUR                           Voir aussi : PLUS MOIN\n    --------------                                        DEDU  \n\n         OBJ2 = OBJ1 TOUR FLOT1 POIN1 (POIN2 si 3D) ;\n\n         NOBJ1 ...  NOBJN = OBJ1  ... OBJN TOUR\n                                         FLOT1 POIN1 (POIN2 si 3D) ;\n\n\n\n    Objet :\n    _______\n \n    L'operateur TOUR cree un objet resultant de la rotation autour\n    d'un point ou d'un axe du support geometrique d'un objet, et\n    eventuellement de ses composantes.\n\n    Lorsque l'operation est realisee simultanement pour plusieurs\n    operandes, les geometries elementaires ne sont transformees\n    qu'une seule fois.\n\n    Dans le cas ou l'objet est un CHPOINT et possede des composantes\n       'UX' 'UY' 'UZ' ou 'FX' 'FY' 'FZ' ou\n       'RX' 'RY' 'RZ' ou 'MX' 'MY' 'MZ' ,\n    ou s'il s'agit d'un MCHAML de composantes\n       'SMXX' 'SMYY' 'SMZZ' 'SMXY' 'SMXZ' 'SMYZ' ou\n       'EPXX' 'EPYY' 'EPZZ' 'EPXY' 'EPXZ' 'EPYZ',\n    celles-ci subissent egalement la rotation, les autres composantes\n    restant inchangees.\n\n    Cet operateur n'est pas disponible en DIMEnsion 1 (sans interet).\n\n\n    Commentaire :\n    _____________\n\n      OBJ1 : types POINT, MAILLAGE, CHPOINT, MCHAML, MMODEL.\n             OBJ1 peut aussi etre une table. Dans ce cas tous les \n             objets contenus dans la table, qui doivent etre d'un des \n             types ci-dessus, subiront la translation ou la \n             transformation. Si une table est donnee, il ne doit pas y\n             avoir d'autres objets.\n\n      FLOT1 : type FLOTTANT, amplitude de rotation en degres\n\n      POIN1, POIN2 : type POINT, centre de rotation en 2D, axe en 3D\n\n      OBJ2 : resultat de meme type que OBJ1\n\n      OBJ1 ... OBJN : voir OBJ1\n\n      NOBJ1 ... NOBN : resultats respectivement de memes types\n                       que OBJ1 ... OBJN",
  },
  {
    name: "TRAC",
    url: "TRAC",
    documentation:
      "$$$$ TRAC     NOTICE  FD218221  21/05/06    21:15:28     11000          \n                                             DATE     21/05/06\n\n    Directive TRACER                         Voir aussi : DESS\n    ----------------                                      @PLOTPRI  \n                                                          @B_TPO2D  \n                                                          BOITE  \n\n    La directive TRAC permet de dessiner plusieurs types d'objets :\n    1 : MAILLAGE\n    2 : DEFORMEE\n    3 : VECTEUR\n    4 : isovaleurs d'un CHPOINT ou d'un MCHAML\n    5 : ARETE d'un MAILLAGE\n    \n    La directive TRAC ne modifie pas les objets fournis en entree, \n    mais realise le trace sur l'unite graphique specifiee par\n    l'instruction : \" OPTION TRAC ... \".\n\n    \n \nSOMMAIRE DE LA NOTICE\n---------------------\n    1. trace d'un MAILLAGE\n    2. trace d'une DEFORMEE} \n    3. trace d'un VECTEUR}\n    4. trace des ISOVALEURS d'un CHPOINT ou MCHAML}\n    5. trace des ARETES d'un MAILLAGE}\n  \n1. trace d'un MAILLAGE \n---------------------- \n    TRAC  OBJET1 | ((OEIL1) si 3D)              |  ;\n                 | ('QUAL')                     | \n                 | ('NOEUD')                    |\n                 | ('COUL'  ( COUL1 ) )         |\n                 | ('ELEM')                     |\n                 | ('CACH')                     |\n                 | ('FACE')                     |\n                 | ('ECLA'  ( RAPP1 ) )         |\n                 | ('COUPE' POIN1 POIN2 POIN3 ) |\n                 | ('SECT'  POIN1 POIN2 POIN3 ) |\n                 | ('TITR' 'bla bla...')        |\n                 | ('NCLK')                     |\n                 | ('DATE')                     |\n                 | ('CHAM')                     |\n                 | ('BOIT' MAIL3)               |\n                 | (ANNO1)                      |\n\n    Commentaire :\n    _____________\n    \n    OBJET1  : objet a tracer (type MAILLAGE ou RIGIDITE). \n              Dans le cas ou il s'agit d'une RIGIDITE, c'est le maillage\n              sous-jacent a la rigidite qui est trace. Ceci permet \n              d'obtenir un trace d'une structure munie de ses conditions\n              aux limites.\n              \n    OEIL1   : point de vue (en 3D) (type POINT) (facultatif)\n              le trace est fait alors en perspective cavaliere.\n\n    'QUAL'  : mot-cle indiquant que les noms des entites presentes sur\n              le dessin y seront portes.\n\n    'NOEUD' : mot-cle indiquant que les numeros reels des noeuds seront\n              mentionnes sur le dessin.\n              ATTENTION : la numerotation change lors de certaines \n              instructionsa (comme TASS ou SORT).\n\n    'COUL'  : mot-cle indiquant que seuls les elements qui ont la\n              couleur specifiee par COUL1 (type MOT) ou, si COUL1 n'est\n              pas precisee, la couleur par defaut, seront affiches.\n\n    'ELEM'  : mot-cle indiquant que les numeros locaux dans chaque\n              objet elementaire seront mentionnes sur le dessin.\n              Un objet elementaire est constitue d'un seul type\n              d'element.\n\n    'CACH'  : mot-cle indiquant que seules les parties apparentes de\n              l'objet seront affichees.\n\n    'FACE'  : mot-cle indiquant que la representation sera effectuee en\n              remplissant les faces de l'element. L'intensite sera\n              fonction de l'angle de la facette avec l'observateur.\n\n    'ECLA'  : mot-cle indiquant que le trace sera effectue en eclatant\n              les elements. Chaque element sera represente avec un\n              rapport d'homothetie RAPP1 (type FLOTTANT), egal par\n              defaut a 0.5.\n\n    'COUPE' : mot-cle indiquant que seule la partie se trouvant au dela\n              du plan de coupe, defini par trois points POIN1, POIN2 et\n              POIN3 (type POINT), par rapport a l'oeil est tracee.\n\n    'SECT ' : mot-cle indiquant que seule l'intersection avec le plan de\n              coupe, defini par trois points POIN1, POIN2 et POIN3 (type\n              POINT), par rapport a l'oeil est tracee.\n\n    'TITR'  : Modification du titre du trace.\n\n    'NCLK'  : supprime les possibilites de trace interactif (X & OGL).\n    \n    'DATE'  : mot-cle indiquant que l'affichage sera horodate.\n\n    'CHAMP' : mot-cle indiquant que la valeur des champs sera indique au \n              du point support.\n\n    'BOITE' : mot-cle indiquant que la fenetre de trace sera centree sur \n              le maillage MAIL3 (type MAILLAGE). MAIL3 n'est pas trace.\n              \n    ANNO1   : objet ANNOTATI permettant d'enrichir l'affichage graphique\n              (categories, etiquettes...)\n\n\n  \n2. trace d'une DEFORMEE}  \n------------------------- \n    TRAC  DEFO1  | ((OEIL1) si 3D)                      |  ;\n                 | ('CACH')                             | \n                 | (('DIRE') 'COUPE' POIN1 POIN2 POIN3) |                       \n                 | ('SECT' POIN1 POIN2 POIN3);          |\n                 | ('ANIME')                            |\n                 | ('OSCIL')                            |\n                 | ('TITR' 'bla bla...')                |\n                 | ('NCLK')                             |\n                 | ('FACE') ('FACB') ('FSDB')           |\n                 | ('BOIT' MAIL3)                       |\n                 | (ANNO1)                              |\n\n    Commentaire :\n    _____________\n\n    DEFO1   : objet deforme a tracer (type DEFORME).\n\n    OEIL1   : point de vue (en 3D seulement) (type POINT) (facultatif).\n\n    'COUPE' : mot-cle indiquant que seule la partie se trouvant au dela\n              du plan de coupe, defini par trois points POIN1, POIN2 et\n              POIN3 (type POINT), par rapport a l'oeil est tracee.\n\n    'SECT ' : mot-cle indiquant que seule l'intersection avec le plan de\n              coupe, defini par trois points POIN1, POIN2 et POIN3 (type\n              POINT), par rapport a l'oeil est tracee.\n\n    'CACH'  : mot-cle indiquant que seules les parties apparentes de\n              l'objet sont tracees.\n\n    'ANIME' : mot-cle indiquant, si le systeme graphique le permet, de\n              visualiser en animation les deformees successives conte-\n              nues dans l'objet DEFO1.\n\n    'OSCIL' : mot-cle indiquant, si le systeme graphique le permet, de\n              visualiser en animation les deformees successives conte-\n              nues dans l'objet DEFO1.\n\n    'TITR'  : Modification du titre du trace.\n\n    'NCLK'  : supprime les possibilites de trace interactif (X & OGL).\n\n    'DIRE'  : permet de specifier l'orientation de la fenetre de\n              de vue:\n              vi=(POIN1 'MOINS' OEIL1) definie la direction de vision\n              ve=partie de (POIN2 'MOINS' POIN1) orthogonal a vi definie\n                 la direction verticale de la fenetre vision\n              POIN1,POIN2,POIN3 definissent le plan de vision\n\n    'FACE'  : permet d'intensifier la couleur de l'objet deforme selon\n              la normale de l'element par rapport a la direction de\n              vision. Le maillage est trace selon la couleur des\n              elements.\n\n    'FACB'  : idem 'FACE' mais le maillage est trace en blanc.\n\n    'FSDB'  : idem 'FACB' sans degrade pour les faces.\n\n    'BOITE' : mot-cle indiquant que la fenetre de trace sera centree sur \n              le maillage MAIL3 (type MAILLAGE). MAIL3 n'est pas trace.\n\n    ANNO1   : objet ANNOTATI permettant d'enrichir l'affichage graphique\n              (categories, etiquettes...)              \n              \n\n    Remarque :\n    __________\n\n    L'objet DEFO1 peut contenir un objet de type VECTEUR auquel cas\n celui-ci est trace sur la deformee.\n\n    L'objet DEFO1 peut contenir un objet de type CHPOINT ou MCHAML \n auquel cas l'isovaleur de celui-ci est trace sur la deformee.\n\n    L'objet DEFO1 peut contenir plusieurs deformees elementaires auquel \n cas celles-ci sont toutes tracees.\n\n    Les seules options permises sont 'CACH' et 'COUPE'.\n\n    ANIME effectue une animation simple de DEFO1, OSCIL effectue l'aller\n et retour sur les deformees.\n\n    DIRE permet d'effectuer des traces 3D dans les situations ou l'oeil\n se trouve a l'interieur de l'objet.\n\n    FACE, FACB et FSDB sont supportes dans l'interface MIF.\n\n\n  \n3. trace d'un VECTEUR} \n---------------------- \n    TRAC VEC1 OBJET1 | ((OEIL1) si 3D)              |  ;\n                     | ('CACH')                     | \n                     | ('COUPE' POIN1 POIN2 POIN3)) | \n                     | ('SECT' POIN1 POIN2 POIN3)   |\n                     | ('TITR' 'bla bla...')        |\n                     | ('BOIT' MAIL3)               |\n                     | (ANNO1)                      |\n                     | ('NCLK')                     |\n\n    Objet :\n    _______\n\n    La directive TRAC effectue un trace de l'objet VEC1 de type VECTEUR\n    sous forme de fleches. Ce trace est superpose a celui de l'objet \n    OBJET1 (type MAILLAGE).\n\n    Les seules options permises sont 'CACH' 'COUPE' 'SECT' 'TITR' 'BOIT'\n    et 'NCLK'.\n\n\n  \n4. trace des ISOVALEURS d'un CHPOINT ou MCHAML} \n----------------------------------------------- \n    TRAC (N1) (LREEL1) | CH1   | (OBJET1)        | (OBJET2)  (VEC1) ...\n                               | DEFO1           |\n                       | MODL1 CH2 (DEFO1) (CH3) |\n\n\n          ... | ((OEIL1) si 3D)                 |  ;\n              | ('CACH')                        | \n              | ('COUPE' POIN1 POIN2 POIN3 )    | \n              | ('SECT'  POIN1 POIN2 POIN3 )    |                               \n              | ('TITR' 'bla bla...')('NCLK')   | \n              | ('BOIT' MAIL3)                  | \n              | (ANNO1)                         |\n              | ('NCLK')                        | \n              | ('LEGE' MOT1)                   | \n              | ('NOLE')                        | \n\n\n    Objet :\n    _______\n\n    La directive TRAC effectue un trace d'un champ sous la forme definie\ndans OPTION ISOVALEUR, c'est-a-dire soit comme un reseau de courbes iso-\nvaleurs ('LIGNE'), soit en remplissant par des couleurs differentes les\nzones contenant des valeurs differentes ('SURF'), ou encore les deux\n('SULI'). \n\n    Dans le cas d'un MCHAML ayant plusieurs composantes, le VonMises\n(pour un champ de sous-type CONTRAINTES) ou la premiere composante\nest trace. On peut ensuite choisir interactivement une autre composante.\n\n    Commentaire :\n    _____________\n\n    OEIL1  : point de vue (type POINT) (en 3D) (facultatif).\n\n    CH1    : champ a tracer (type CHPOINT).\n\n    MODL1  : modele (type MMODEL) (non utilise pour la\n             determination de l'objet a tracer).\n\n    CH2    : champ a tracer (type MCHAML).\n\n    CH3    : champ de caracteristiques (pour le calcul du Vonmises\n             sur les coques plaques et poutres).\n\n    LREEL1 : liste des valeurs selon lesquelles on affiche les\n             isovaleurs (type LISTREEL).\n             Leur nombre effectivement pris en compte est limite aux\n             capacites de la sortie graphique.\n\n    N1     : permet de specifier le nombre d'isovaleurs desirees. Le\n             calcul des niveaux est automatique.\n\n    OBJET1 : objet (type MAILLAGE) permettant d'effectuer, par\n             interpolation, le trace dans le cas d'un CHPOINT.\n             Si OBJET1 n'est pas fourni, le CHPOINT est alors trace\n             sur les noeuds (sans interpolation).\n\n    OBJET2 : objet (type MAILLAGE) qui, s'il est fourni, est trace.\n             Si OBJET2 n'est pas fourni, alors OBJET1 est trace.\n\n    'CACH' : mot-cle indiquant que seule la partie apparente de l'objet\n             trace est affichee.\n\n    'COUPE': mot-cle indiquant que seule la partie se trouvant au dela\n             du plan de coupe, defini par trois points POIN1, POIN2 et\n             POIN3 (type POINT), par rapport a l'oeil est tracee.\n\n    'SECT' : mot-cle indiquant que seule l'intersection avec le plan de\n             coupe, defini par trois points POIN1, POIN2 et POIN3 (type\n             POINT), par rapport a l'oeil est tracee.\n\n    'BOITE' : mot-cle indiquant que la fenetre de trace sera centree sur \n              le maillage MAIL3 (type MAILLAGE). MAIL3 n'est pas trace.\n              \n    ANNO1   : objet ANNOTATI permettant d'enrichir l'affichage graphique\n              (categories, etiquettes...)\n              \n    MOT1   : mot (moins de 9 caracteres) remplacant 'ISO- VAL' dans la\n             legende des isovaleurs\n             \n    'NOLE' : mot-cle indiquant que l'on ne souhaite pas tracer la \n             legende des isovaleurs (i.e. pas de colormap)\n\n    VEC1   : si VEC1 (type VECTEUR) est fourni, il est egalement repre-\n             sente sur le trace.\n\n    DEFO1  : si au lieu d'OBJET1, l'objet DEFO1 (type DEFORME) contenant\n             une seule deformee est fournie, le trace est effectue sur\n             l'objet deforme.\n             Dans ce cas, il n'est pas possible de fournir l'objet VEC1.\n             Celui-ci peut cependant faire partie de l'objet DEFO1.\n\n\n    Les seules options permises sont 'CACH' 'COUPE' 'TITR' 'LEGE' 'BOITE'\n    'NOLE' et 'NCLK'.\n\n\n  \n5. trace des ARETES d'un MAILLAGE} \n---------------------------------- \n    TRAC  'ARET' OBJET1 OBJET2 | ('CACH')                    | ;\n                               | ('FACE')                    |\n                               | ('COUPE' POIN1 POIN2 POIN3) |\n                               | ('SECT' POIN1 POIN2 POIN3)  |\n                               | ('TITR' 'bla bla...')       |\n                               | ('BOIT' MAIL3)              |\n                               | (ANNO1)                     |\n                               | ('NCLK')                    |\n                                             \n\n    Objet :\n    _______\n\n    La directive TRAC effectue un trace du maillage OBJET2, obtenu par\n    l'operateur ARETE a partir du maillage OBJET1, en gerant les parties\n    cachees.",
  },
  {
    name: "TRAC3D",
    url: "TRAC3D",
    documentation:
      "$$$$ TRAC3D   NOTICE  CHAT      11/09/12    21:18:21     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure TRAC3D                         Voir aussi :\n    ----------------  \n    TRAC3D  GEO1 CHPO1 FLOT1 FLOT2 N1 N2 FLOT3 FLOT4 FLOT5 LOG1 ;\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de construire un maillage 3D deforme a par-\ntir d'un maillage 2D (forme d'elements SEG2 uniquement) et d'un champ\nde deplacements axisymetrique ou de Fourier.\n\n    Elle permet ensuite de tracer ce maillage 3D suivant un oeil dont le\ncoordonnees sont passees en argument. Il est possible aussi de tracer\nce maillage a partir d'un autre oeil, il faut pour cela affecter au\nparametre LOG1 la valeur vraie.\n\n    Commentaire :\n    _____________\n\n   GEO1  : maillage 2D (type MAILLAGE)\n\n   CHPO1 : champ de deplacements issu d'un calcul axisymetrique ou de\n           (type CHPOINT)\n\n   FLOT1 : amplification des deplacements (type FLOTTANT)\n\n   FLOT2 : angle de rotation en degres pour la construction du\n           maillage 3D (type FLOTTANT)\n\n   N1    : nombre de decoupages de cet angle (type ENTIER)\n\n   N2    : numero de l'harmonique (type ENTIER) (0 si calcul axi)\n\n   FLOT3 : abscisse de l'oeil (type FLOTTANT)\n\n   FLOT4 : ordonnee de l'oeil (type FLOTTANT)\n\n   FLOT5 : cote de l'oeil (type FLOTTANT)\n\n   LOG1  : objet (type LOGIQUE) qui est egal a VRAI si on utilise la\n           procedure en interactif ou egal a FAUX sinon\n\n\n    Remarque IMPORTANTE :\n    _____________________\n\n    Cette procedure ne cree aucun objet.\n\n    Si on utilise cette procedure en batch il faut affecter a l'argument\nLOG1 la valeur FAUX.",
  },
  {
    name: "TRAC3D_2",
    url: "TRAC3D_2",
    documentation:
      "$$$$ TRAC3D_2 NOTICE  CHAT      11/09/12    21:18:21     7124           \n                                             DATE     11/09/12\n\n  Procedure TRAC3D_2                       Voir aussi :\n    -------------------  \n    TAB1 = TRAC3D_2  GEO1 OBJ1 MODL1 FLOT1 N1 N2  ;\n\n\n\n\n    Objet :\n    _______\n\n    Cette procedure permet de construire un maillage et un champs\nsoit de deplacements, soit de contraintes, soit de deformations \nou soit de pression 3D a partir d'un maillage 2D (forme d'elements\nSEG2, TRI3 ou QUA4 uniquement) et d'un champ respectivement de \ndeplacements, de contraintes, de deformations ou de pression \naxisymetrique ou de Fourier. Il ne peut pas etre fournit de \nmaillage de fluide et de structure en meme temps.\n\nNote : le MCHAML de sortie est appuye aux noeuds du maillage.\n       le CHPOINT de sortie est de nature 'DIFFUS'\n\n    Apes l'execution a la procedure l'option 'DIME' vaut 3 .\n\n    Commentaire :\n    _____________\n\n   GEO1  : maillage 2D (type MAILLAGE) \n           (optionnel - donne uniquement si OBJ1 est un CHPOINT)\n   \n   OBJ1 est soit :\n          \n         - champs de deplacements ou de contraintes ou de deformations\n           ou de pression issu d'un calcul axisymetrique ou de\n           FOURIER (type CHPOINT)\n\n            soit\n\n         - champs de contraintes ou de deformations issu d'un calcul\n           axisymetrique ou de FOURIER (type MCHAML)\n\n   MODL1  : modele associe au champs par elements (type MMODEL)\n            (optionnel - donne uniquement si OBJ1 est un MCHAML)\n\n   FLOT1 : angle de rotation en degres pour la construction du\n           maillage 3D (type FLOTTANT)\n\n   N1    : nombre de decoupages de cet angle (type ENTIER)\n\n   N2    : numero de l'harmonique (type ENTIER) ( si calcul axi 0)\n\n   TAB1                : objet de type TABLE \n    \n        .'MAILLAGE'    : objet de type MAILLAGE .\n\n        .'DEPLACEMENT' : objet de type CHPOINT. Actuellement ce champ\n                         n'a comme composantes que 'UX', 'UY', 'UZ'.\n\n        .'CONTRAINTE'  : objet de type CHPOINT ou MCHAML. Ce champs a\n                         comme composantes 'N11' 'N22' 'N12' 'M11'\n               'M22' 'M12' pour les elements coques et 'SMRR' 'SMTT' \n               'SMZZ' 'SMRZ' 'SMRT' 'SMZT' pour les elements massifs.\n\n        .'DEFORMATION' : objet de type CHPOINT ou MCHAML. ce champs a  \n                 comme composantes 'EPSS' 'EPTT' 'GAST' 'RTSS' 'RTTT'\n                'RTST' pour les elements coques et 'EPRR' 'EPZZ' \n                'EPTT' 'GARZ' 'GART' 'GAZT' pour les elements massifs.\n\n        .'FLUIDE'      : objet de type CHPOINT. Ce champs a comme \n                         composantes  'P', 'PI', 'UZ'. \n\n        .'MODELE' : objet de type MMODEL associe au maillage 3D. ",
  },
  {
    name: "TRACHIS",
    url: "TRACHIS",
    documentation:
      "$$$$ TRACHIS  NOTICE  CHAT      11/09/12    21:18:21     7124           \n                                             DATE     11/09/12\n\n\n     Procedure TRACHIS                     Voir aussi : DESTRA DARCYSAT\n     ------------------                                 EVOL    DARCYTRA  \n                                                        TRACHIT CONVT  \n                                                        PASAPAS CHIMIE  \n     TAB1 = TRACHIS TAB2 MOT1 GEO1  (| LENTI1 |) (LMOTS1) (| LMOTS2 |)  \n                                     | LREEL1 |            | TAB3   |\n\n                    ('PREF' MOT2) ('UNIT' MOT3 (FLOT1)) ;\n\n    Objet\n    -----\n\n        Cette procedure sert au post-traitement des resultats d'un\n        calcul transitoire type DARCYTRA, DARCYSAT, PASAPAS, CHIMIE ...\n        On genere des evolutions le long d'une ligne et leurs legendes.\n        Les resultats sont groupes dans une table qui permettra\n        d'effectuer des traces a l'aide de la procedure DESTRA.\n\n    Commentaires\n    ------------\n\n      TAB2   : Table de donnees issue du calcul transitoire\n               contenant les indices 'TEMPS' et MOT2,\n               auxquels on trouve, aux indices entiers les temps et\n               le champ point que l'on souhaite explorer a ces\n               temps-la.\n\n      MOT1   : Nom de l'indice de TAB2 indiquant les CHPOs a suivre\n               (type MOT). TAB2.MOT1.i doit etre un CHPOINT.\n\n      GEO1   : MAILLAGE de la ligne (SEG2) selon laquelle visualiser\n               l'evolution de la grandeur MOT1.\n\n      MOT2   : mot par lequel on voudra remplacer MOT1 dans les\n               legendes des graphiques.\n               c'est aussi le prefixe des legendes.\n               (type MOT, Defaut = MOT2)\n\n      LENTI1 : Liste des indices des temps a utiliser\n               (type LISTENTI, Defaut = tous)\n\n      LREEL1 : Liste des temps a utiliser (Defaut = tous), doivent\n               correspondre a ceux de TAB2.\n\n      LMOTS1 : Liste des composantes des chpos a utiliser\n               (Defaut = toutes)\n\n      TAB3   : Table contenant, pour chaque indice entier de\n               composante, la chaine de caracteres correspondante.\n               Ils sont aussi le suffixe de la legende qui varie avec la\n               composante.\n               (type MOT, defaut = nom de la composante).\n\n      LMOTS2 : idem sous forme de liste, si on peut se contenter de 4\n               caracteres (type MOT, defaut = nom de la composante).\n\n      MOT3   : Unite de temps a faire figurer en suffixe de legende\n               (facultatif, type MOT, dans {us,ms,s,h,j,a}),\n               voir CONVT.\n\n      FLOT1  : valeur en secondes de l'unite de temps dans laquelle\n               sont donnees les valeurs de TAB2.'TEMPS' (defaut=1)\n\n      TAB1   : table indicee par des entiers. Elle contient pour\n               chaque cas i une table a trois indices :\n        . 'VALEUR' : L'evolution en fonction de l'abscisse pour une\n                     composante a un temps donne.\n        . 'LEGEND1': Prefixe de la legende pour toutes les courbes\n                     contient MOT2 (defaut : MOT1)\n        . 'LEGEND2': Suffixe de cette legende (variable)\n                     contient TAB3.i (defaut LMOTS1(i)) et le mot 't='\n                     suivi de la valeur du temps dans l'unite MOT4, puis\n                     l'unite de temps MOT4.\n\n    Remarques\n    ----------\n\n    Les mots-clefs et leurs arguments doivent etre places en dernier",
  },
  {
    name: "TRACHIT",
    url: "TRACHIT",
    documentation:
      "$$$$ TRACHIT  NOTICE  CHAT      11/09/12    21:18:22     7124           \n                                             DATE     11/09/12\n\n\n     Procedure TRACHIT                     Voir aussi : DESTRA DARCYSAT\n     ------------------                                 EVOL    DARCYTRA  \n                                                        TRACHIS CONVT  \n                                                        PASAPAS CHIMIE  \n     TAB1 = TRACHIT TAB2 MOT1 GEO1 (| LENTI1 |) (LMOTS1) (TAB3) (TAB4)\n                                    | LREEL1 |\n\n                    ('PREF' MOT2) ;\n\n    Objet\n    -----\n\n        Cette procedure sert au post-traitement des resultats d'un\n        calcul transitoire type DARCYSAT, DARCYTRA, PASAPAS, CHIMIE ...\n        On genere des evolutions en fonction du temps et leurs legendes.\n        Les resultats sont groupes dans une table qui permettra\n        d'effectuer des traces a l'aide de la procedure DESTRA.\n\n    Commentaires\n    -------------\n\n      TAB2   : Table de donnees issue du calcul transitoire\n               contenant les indices 'TEMPS' et MOT2,\n               auxquels on trouve, aux indices entiers les temps et\n               le champ point que l'on souhaite explorer a ces\n               temps-la.\n\n      MOT1   : Nom de l'indice de TAB2 indiquant les CHPOs a suivre\n               (type MOT). TAB2.MOT1.i doit etre un CHPOINT.\n\n      GEO1   : MAILLAGE contenant les points auxquels\n               visualiser l'evolution de la grandeur MOT1\n                 (type MAILLAGE).\n\n      MOT2   : mot par lequel on voudra remplacer MOT1 dans les\n               legendes des graphiques.\n               c'est aussi le prefixe des legendes.\n               (type MOT, Defaut = MOT2)\n\n      LENTI1 : Liste des indices des temps a utiliser\n               (type LISTENTI, Defaut = tous)\n\n      LREEL1 : Liste des temps a utiliser, doivent correspondre a ceux\n               de TAB2 (type LISTREEL, Defaut = tous).\n\n      LMOTS1 : Liste des composantes des chpos a utiliser\n               (type LISTMOTS, Defaut = toutes)\n\n      TAB3   : Table contenant, pour chaque indice entier de\n               composante, la chaine de caracteres correspondante.\n               Ils sont aussi la premiere partie du suffixe de la\n               legende qui varie avec la composante\n               (type MOT, defaut = nom de la composante, sous-type\n               (obligatoire si on donne  TAB4) indice\n               'SOUSTYPE'='NOM_COMPOSANTE').\n\n      TAB4   : TABLE contenant, pour chaque indice entier de\n               point, la chaine de caracteres correspondante.\n               Ils sont aussi la deuxieme partie du suffixe de la\n               legende qui varie avec le point.\n               (type MOT, defaut = numero du point, sous-type\n               (obligatoire) indice 'SOUSTYPE'='NOM_POINT').\n\n      TAB1   : TABLE indicee par des entiers. Elle contient pour\n               chaque indice i une table a trois indices :\n        . 'VALEUR' : L'evolution en fonction du temps pour une\n                     composante en un point.\n        . 'LEGEND1': Prefixe de la legende pour toutes les courbes.\n                     Contient MOT2 (defaut = MOT1)\n        . 'LEGEND2': Suffixe de cette legende (variable).\n                     Contient le nom de composante TAB3.i (defaut =\n                     LMOTS1(i)) et le nom du point TAB4.i (defaut =\n                     mot 'PT ' puis le numero du point dans le maillage\n                     GEO1).\n\n    Remarques\n    ----------\n\n    Les mots-clefs doivent etre places en dernier",
  },
  {
    name: "TRACMECA",
    url: "TRACMECA",
    documentation:
      "$$$$ TRACMECA NOTICE  CHAT      11/09/12    21:18:22     7124           \n                                             DATE     11/09/12\n                                             \n   Procedure TRACMECA                        Voir aussi : MESM\n   ------------------                                     LIMEMECA  \n   TAB3=TRACMECA MODL1 TAB1 TAB2 (FLOT1);\n\n\n    Objet :\n    _______\n\n    La procedure TRACMECA permet de visualiser les modes de rupture\nelementaires de la structure MODL1, determines dans les table TAB1 et \nTAB2 par l'operateur MESM. Le resultat est une table TAB3 d'index entier \nassocier au numero du mecanisme d'objet de type DEFORMEE. FLOT1 et un \ncoefficient reel qui permet de moduler l'amplitude de la deformee \n(defaut 1.).\n\n    La presence de rotation plastique est indiquee par de cercles\n(de couleur rouge si la rotation est positive, rose si elle est \nnegative). La plastification d'un element est representee par des \netoiles (de couleur bleue en compression, turquoise en traction).",
  },
  {
    name: "TRACPART",
    url: "TRACPART",
    documentation:
      "$$$$ TRACPART NOTICE  JC220346  16/11/21    21:15:07     9192           \n                                             DATE     16/11/21\n\n    Procedure TRAC PART                        Voir aussi : TRAC  PART\n    ------------------  \n\n    TRACPART TAB1 ( | 'TOUT' | ) 'NCLK' ;\n                    | 'ANIM' |  \n                    |  ENTI1 |             \n\n    Objet :\n    _______\n\n    La procedure TRACPART permet de visualiser graphiquement les\n    partitions d'un maillage telles que creees avec l'operateur PART\n\n    \n    Commentaire :\n    _____________\n\n    TAB1   : partition du maillage renvoyee par PART (type TABLE)\n\n    'TOUT' : mot-cle indiquant que l'on souhaite tracer toutes les\n             partitions simultanement\n             \n    'ANIM' : mot-cle indiquant de mettre en evidence les differentes\n             partitions les unes apres les autres\n             \n    ENTI1  : numero de la partition que l'on souhaite mettre en\n             evidence (type ENTIER)\n             \n    'NCLK' : mot-cle permettant de desactiver l'interactivite du trace\n             (pas de rotation, zoom, etc...)\n    \n\n    Remarques :\n    ___________\n\n    1) En l'absence des mots-cles 'TOUT' et 'ANIM' et sans nombre\n       ENTI1, la fenetre de trace fera apparaitre un menu interactif\n       permettant a l'utilisateur de balayer les differentes partitions\n       a sa guise.\n       \n    2) La vitesse de defilement des partitions avec l'option 'ANIM'\n       est pilotee par la valeur de la variable __ANIM__ (type ENTIER)\n       valant 1000000 par defaut. Plus sa valeur est petite, plus\n       le defilement est rapide. Elle peut etre modifiee directement\n       dans le jeu de donnees avant l'appel a TRACPART.",
  },
  {
    name: "TRACTUFI",
    url: "TRACTUFI",
    documentation:
      "$$$$ TRACTUFI NOTICE  MB234859  17/10/02    21:15:28     9577           \n                                             DATE     17/10/02\n\n    Procedure TRACTUFI                       Voir aussi : MATE   \n    ------------------  \n    EVOL1 CM KF = TRACTUFI TAB1 ;\n                                  TAB1.'METHODE' .'COUTRA' .'YOUN'\n                                      .'SIG1' .'SIGF4 .'REXT' .'EPAI'\n                                      .'ANGLE' .'COUL' .'ALFA' .'N'\n\n\n    Objet :\n    _______\n\n   Cette procedure est specifique a l'element de tuyauterie fissuree\nTUFI . Elle permet de determiner la loi de comportement globale\nmoment-rotation de l'element a partir de la courbe de traction du\nmateriau, en appliquant :\n\n   - soit une methode simplifiee (quatre methodes sont disponibles\n     correspondant respectivement aux mots-cles TADA,LBBNRC,LBB1,LBB2)\n   - soit une base de donnees experimentales (mot-cle DEFR)\n\n   La procedure cree un objet evolution pouvant etre directement\n   introduit en donnees de l'operateur MATE (composante TRAC) pour\n   l'element TUFI. Elle fournit aussi CM coefficient de la matrice de\n   complaisance ainsi que KF qui permet de calculer le facteur de\n   forme\n\n   Commentaire :\n   _____________\n\n   EVOL1 : objet (type EVOLUTION) decrivant la courbe moment-rotation\n\n   CM    : objet (type FLOTTANT)  complaisance\n\n   KF    : objet (type FLOTTANT) pour le calcul du facteur de forme\n\n   TAB1  :  objet (type TABLE) contenant :\n\n      TAB1 METHODE : mot-cle (type MOT) valant DEFR, TADA, LBBNRC,\n                     LBB1 ou LBB2 et indiquant la methode simplifiee\n                     utilisee\n      TAB1 COUTRA  : objet (type EVOLUTION) decrivant la courbe de\n                     traction du materiau\n      TAB1 YOUN    : module d'Young (type FLOTTANT)\n      TAB1 SIG1    : contrainte conventionnelle a 0.2% (type FLOTTANT)\n      TAB1 SIGF    : eventuellement contrainte d'ecoulement\n                     (type FLOTTANT)\n      TAB1 REXT    : rayon exterieur (type FLOTTANT)\n      TAB1 EPAI    : epaisseur\n      TAB1 ANGLE   : angle total de la fissure en degres\n      TAB1 COUL    : indique eventuellement la couleur (type MOT)\n                     affectee a la courbe creee\n      TAB1 ALFA    : eventuellement valeurs permettant d'adapter\n      TAB1 N       : la courbe de traction (methode LBBNRC)\n                     (type FLOTTANT)",
  },
  {
    name: "TRADUIRE",
    url: "TRADUIRE",
    documentation:
      "$$$$ TRADUIRE NOTICE  MB234859  17/10/02    21:15:28     9577           \n                                             DATE     17/10/02\n\n    Procedure TRADUIRE                       Voir aussi : DYNE\n    ------------------  \n    TAB1 = TRADUIRE (SOL1) ;\n\n\n    Objet :\n    _______\n\n    Cette procedure cree, a partir d'un objet SOLUTION de sous-type MODE\nune table de sous-type BASE_DE_MODES.\n\n    Commentaire :\n    _____________\n\n    SOL1 : objet (type SOLUTION, sous-type MODE) a convertir\n\n    TAB1 : objet (type TABLE) utilise en entree de l'operateur DYNE",
  },
  {
    name: "TRAJ",
    url: "TRAJ",
    documentation:
      "$$$$ TRAJ     NOTICE  CHAT      11/09/12    21:18:23     7124           \n                                             DATE     11/09/12\n  \n  Operateur TRAJ                            Voir aussi :\n   --------------  \n\n\n    Cas d'une formulation elements finis :\n    MODL4 MCH4 = TRAJ MOT1  |CHPO1|   |TAB1 |  ('PORO' MCH1) TAB2 ;\n                            |TAB4 |   |MODL1|\n\n    Cas d'une formulation mixte hybride(modele DARCY)\n    MODL4 MCH4 = TRAJ MOT1 MODL1 |CHPO2|  ('PORO' MCH1)  TAB2  ;\n                                 |TAB5 |  ('DISP' MCH2)\n                                          ('DIFF' MCH3)\n\n      Objet\n     -------\n     L'operateur TRAJ permet de calculer les trajectoires de particules\n     lachees dans un domaine maille pour lequel on connait :\n     soit un champs de vitesses ou de flux, constant au cours du temps,\n     soit des champs de vitesses ou de flux, donnes pour differentes\n     valeurs du temps.\n     \n     Commentaire\n     -----------\n \n     TAB1   est un objet de type TABLE et de sous type DOMAINE.\n            C'est le resultat de l'operateur DOMA applique au maillage\n            sur lequel on fait le calcul.\n            \n     MOT1   indique le type de calcul que l'on veut faire :\n            'CONVECTION_EXPLICITE' la position des particules est\n                 calculee de proche en proche en fonction de la\n                 vitesse locale (c'est l'option par defaut).\n            'CONVECTION_ANALYTIQUE' Calcul des lignes de courant par \n                 integration analytique (uniquement en formulation EFMH)\n            'CONVECTION_DIFFUSION' Calcul des trajectoires par\n                 iterations successives en prenant en compte les\n                 phenomenes de convection-dipersion-diffusion. (Cette\n                 option n'est pour l'instant developpee que pour le\n                 modele DARCY)\n                 \n     MODL1  Objet modele (type MMODEL) decrivant la formulation\n            utilisee (cf. MODE). Les formulations actuellement\n            prevues sont DARCY et NAVIER_STOKES.\n\n     CHPO1  champ de vitesse defini aux noeuds du maillage TAB1.MAILLAGE\n            Les composantes ont pour noms VX VY (VZ).\n\n     TAB4   est le nom d'un objet de type TABLE et de sous type\n            TRANSITOIRE. Cette table contient a l'indice 'TEMPS'\n            une table de flottants, et a l'indice 'VITESSE',une\n            table de CHPOINT. Ces deux tables sont indicees par des\n            entiers 0 1 2 ...N :\n              TAB4.VITESSE.N est un CHPOINT ayant les memes\n                  caracteristiques que CHPO1.\n              TAB4.TEMPS.N est le temps correspondant.\n\n     CHP02  Objet de type CHPOINT contenant le debit a travers\n            chaque face. Le support geometrique de ce champ est\n            le maillage contitue les centres des FACES. Le nom de\n            la composante du CHPOINT est FLUX (cf. HDEB).\n\n     TAB5   est un objet de type TABLE et de sous-type\n            DARCY_TRANSITOIRE. Elle contient a l'indice 'TEMPS'\n            une table de flottants, et a l'indice 'FLUX', une table de\n            CHPOINT. Ces deux tables sont indicees par des\n            entiers 0 1 2 ...N (cf DARCYTRA) :\n              TAB5.FLUX.N est un CHPOINT ayant les memes\n                caracteristiques que CHPO2.\n              TAB5.TEMPS.N est le temps correspondant.\n               \n     MCH1   objet MCHAML contenant la porosite au centre de gravite\n            de chaque element. Au moment du calcul la vitesse sera\n            divisee par la porosite. Si cette valeur  est absente la\n            porosite est supposee egale a 1.\n\n     MCH2   objet MCHAML a deux composantes contenant respectivement\n            la dispersivite longitudinale et la dispersivite\n            transversale au centre de gravite de chaque element. Les\n            dispersivites sont imposees constantes par element.\n            Par defaut, la dispersivite est nulle. \n            (utilise uniquement dans le calcul 'CONVECTION_DIFFUSION')\n\n     MCH3   objet MCHAML a une composante contenant la diffusion\n            isotrope effective au centre de gravite de chaque\n            element. Par defaut, la diffusion est nulle.\n            (utilise uniquement dans le calcul 'CONVECTION_DIFFUSION')\n\n     TAB2   table a plusieurs indices contenant la description\n            du lacher de particules :\n\n     TAB2.'TEMPS_LIMITE' contient un reel : le temps maximal de calcul\n\n     TAB2.'CFL' contient un reel : le nombre de Courant a respecter.\n            Le pas de temps de calcul en depend. En moyenne, il y aura\n            1/CFL sauts de particule par maille.\n            Ce nombre doit etre compris entre 1.E-8 et 1.(Defaut 0.05)\n            (utilise uniquement dans le calcul 'CONVECTION_EXPLICITE').\n\n     TAB2.'DELTAT_SAUVE' contient un reel : le pas de temps avec lequel\n            on conserve les resultats pour un post-traitement. Si\n            cette valeur est nulle, tous les temps de calcul seront\n            sauvegardes. \n\n     TAB2.'TEMPS_SAUVES' contient un 'LISTREEL' : liste des temps\n            auxquels les resultats sont sauvegardes pour un\n            post-traitement.\n            Cet indice 'ET' le precedent, 'DELTAT_SAUVE', ne peuvent\n            pas co-exister. Si aucun des deux n'existe, tous les temps\n            de calcul seront sauvegardes. \n            Disponible uniquement dans le calcul 'CONVECTION_DIFFUSION'.\n\n\n     TAB2.'IMPERMEABLE' : objet MAILLAGE de points faces de type 'POI1'\n            determinant les faces infranchissables par les particules.\n            Disponible uniquement dans un calcul 'CONVECTION_DIFFUSION'.\n\n     TAB2.'TEMPS_LACHER' : LISTREEL contenant les temps initiaux des\n            differents lachers. Pour chacun des reels de cette liste,\n            il doit y avoir un maillage de points de lacher (voir\n            plus bas).\n\n     TAB2.1 : maillage (elements 'POI1') representant les positions des\n            particules qui seront lachees au premier temps de la liste\n            TAB2.'TEMPS_LACHER' \n       \"           \"\n       \"           \"\n       \"           \"\n     TAB2.i : maillage de POI1 representant les positions des\n            particules qui seront lachees au ieme temps de la liste\n            TAB2.'TEMPS_LACHER' \n\n     MODL4  est un modele, concatenation d'un modele elementaire par\n            trajectoire. La formulation est 'TRAJECTOIRE'.\n            Le maillage associe est un maillage de SEG2 appuyes sur\n            les points des trajectoires (voir 'EXTR' 'ZONE' et 'COOR'\n            pour en obtenir les coordonnees).\n\n     MCH4   est un MCHAML base sur le modele MOD4, a valeurs aux\n            noeuds des SEG2 des trajectoires. La composante\n            'TMPS' contient le temps en chacun des points de chaque\n            trajectoire. \n\n            \n     Exemple:   (voir valitraj.dgibi et trajec.dgibi)\n     --------\n\n     si CARRE est un maillage et VN un champ de vitesse aux noeuds,\n     et MODCAR un modele de type NAVIER_STOKES, on pourra coder la\n     sequence suivante. \n\n*    DEFINITION DE LA TABLE DE LACHER\n     LACHER = TABLE ;\n     LACHER.TEMPS_LACHER = PROG 0.  2. ;\n     LACHER.TEMPS_LIMITE =  180.;\n     LACHER.CFL =  0.05 ;\n     LACHER.DELTAT_SAUVE =  0. ;\n*    points du premier lacher a t=0. :      \n     LACHER.1 = (0.0 0.0) 'ET' (0.0 1.) 'ET' (0.0 2.0) ;\n*    points du second lacher a t= 2. :      \n     LACHER.2 = 'MANU' 'POI1' (0.0 1.)  ;\n    \n*    CALCUL DES TRAJECTOIRES\n     MODL4 MCH4 = 'TRAJ' MODCAR VN LACHER ;\n*    TRACE DES TRAJECTOIRES\n     CROB = 'EXTR' MODL4 'MAIL' ;\n     'TRACER' CROB  ;\n*    TRACE DES ISOVALEURS DU TEMPS\n     'TRACER' MCH4 MODL4 ;\n      \n*    IMPRESSION DU TEMPS DE SORTIE DE LA 1ERE PARTICULE\n     TABZON = 'EXTR' MODL4 'ZONE' ;\n     NBB    = 'NBEL' TABZON . 2 ;\n     TT1    = 'EXTR' MCH4 'TMPS' 1 NBB 2 ;\n     'LISTE' TT1 ;\n\n        \n     Remarques :\n     -----------\n     \n    1. Les elements de maillages actuellement utilisables sont,\n       en 2D : TRI3  QUA4\n       en 3D : PRI6  CUB8  TET4\n    2. Le nombre de Courant est utilise pour calculer le pas de\n       temps dans chaque element du maillage par la formule\n       dt = (L * C) / Vm\n       ou L est 2 fois la plus petite distance entre le point centre\n              et le milieu de faces de l'element.\n          Vm est la vitesse moyenne sur l'element.\n          dt est le pas de temps du calcul.\n          C  est le nombre de Courant.\n       C doit etre suffisament petit pour permettre de faire plusieurs\n       pas par element. \n       Nous avons fait nos tests de validation avec C=0.05 .\n     3. Lorsque TAB2.DELTAT_SAUVE est donne different de 0.,\n        on conserve les positions des particules avec le pas de temps\n        donne. Toutefois si la particule sort du domaine entre deux pas\n        de temps on conserve la position et le temps du point de sortie.\n     4. Dans le cas d'un calcul transitoire, la vitesse ou le flux sont\n        interpoles lineairement en fonction du temps.\n\n\n\n \n\n \n\n \n \n \n \n ",
  },
  {
    name: "TRAN",
    url: "TRAN",
    documentation:
      "$$$$ TRAN     NOTICE  CB215821  15/12/04    21:15:22     8724           \n                                             DATE     15/12/04\n                                             \n    Operateur TRANSLATION                    Voir aussi : DALL REGL\n    ---------------------                                 ROTA SURF GENE  \n    SURF1 = LIG1  TRANSLATION  (N1) ('DINI' DENS1) ('DFIN' DENS2) VEC1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur TRANSLATION construit la surface engendree par la trans-\nlation d'une ligne suivant un vecteur donne.\n\n    Commentaire :\n    _____________\n\n    LIG1    : ligne a translater (type MAILLAGE)\n              l'objet LIG1 doit etre une ligne\n\n    N1      : nombre de couches d'elements engendrees dans la translation\n              (type ENTIER)\n\n    VEC1    : vecteur de translation (type POINT)\n\n    DENS1 | : densites associees (type FLOTTANT) a la ligne LIG1 et au\n    DENS2 |   vecteur VEC1\n\n    SURF1   : surface engendree (type MAILLAGE)\n\n    Remarque :\n    __________\n\n    Si N1 n'est pas specifie, le nombre de couches d'elements est calcul\nen fonction des densites utilisees.\n\n    Si N1 est specifie et positif, N1 couches d'egale epaisseur seront\nengendrees.\n\n    Si N1 est negatif, N1 couches seront engendrees et leur epaisseur\nsera calculee en tenant compte des densites utilisees.\n\n    Si les densites associees a la ligne LIG1 et au vecteur VEC1 ne\nsont pas correctes, il est possible de les surcharger. Pour la densite\ninitiale, il faut donner la bonne valeur derriere le mot-cle 'DINI'\net pour la finale, derriere le mot-cle 'DFIN'.\n\n    Si LIG1 est une surface, la translation s'applique au cote 3 de\ncette surface, si il existe, et le resultat est la surface initiale\naugmentee de celle que l'on cree.",
  },
  {
    name: "TRANGEOL",
    url: "TRANGEOL",
    documentation:
      "$$$$ TRANGEOL NOTICE  CB215821  15/06/25    21:15:05     8554           \n                                             DATE     15/06/25\n\n  Procedure TRANGEOL                     Voir aussi :\n      ------------------  \n      RES1 RES2 = TRANGEOL modarcy TRANS1 (TRANS2);\n\n\n\n\n   APPELE par TRANSGEN - DECONSEILLE AUX UTILISATEURS NON DEVELOPPEURS\n\n   resout : POROSITE * DC/DT = DIV (DIFFUSIVITE GRAD C - CONVECTION C)\n                               + SOURCE\n\n             ou C est la CONCENTRATION, eventuellement a plusieurs\n                  composantes (multiespeces non couplees).\n                  La diffusivite, la convection ... doivent etre\n                  toutefois les memes pour toutes les especes\n                  pour avoir des matrices de discretisation communes.\n                  seul le terme source est donne par espece.\n\n            Condition aux limites Neumann DIrichlet Mixtes flux total\n\n            DIFFUSIVITE = DIFFUSIVITE entree + Dispersivite calculee\n\n            Decentrement automatique (peut etre desactive en EFMH).\n\n            Resolution sur 1 avancee en TEMPS.\n\n            Discretisation VF ou EFMH\n \n            Solveur KRES\n\n  -------------------------------------------------------------------\n  |modarcy       Objet modele (MMODEL cree par MODE) DARCY          |\n  -------------------------------------------------------------------\n\n  -------------------------------------------------------------------\n  | TRANS1       Table contenant les indices suivants :             |\n  |---------------------------------------------------------------- |\n  |'DIFFUSIVITE' Donnees physiques et materielles :                 |\n  |              diffusivite effective - CHAMPOINT de COMPOSANTES   |\n  |              K11 K21 K22 K31 K32 K33 au centre des elements     |\n  |                                                                 |\n  |'POROSITE'    Valeur du coef devant D/DT (Type Champoint, Comp   |\n  |              'SCAL', ou FLOTTANT) - Defaut 1.                   |\n  |                                                                 |\n  | DELTAT       pas de temps                                       |\n  |                                                                 |\n  |'CONVECTION'  vitesse au face. C'est le debit integre aux faces  |\n  |              multiplie par la normale sortante de l'element     |\n  |              et divise par la longueur de la face.              |\n  |              Il s'agit de la projection du vecteur vitesse sur  |\n  |              direction normale a la face. (Type CHPO Face, comp.|\n  |              VX VY VZ). L'interet est que cette vitesse est     |\n  |              desormais intependante de l'orientation des normale|\n  |              ce qui est utile dans certains cas.                |\n  |              OPTIONNEL                                          |\n  |                                                                 |\n  |'VITELEM'    Vitesse au centre des elements (Type CHPO centre,   |\n  |             comp. VX VY VZ). Utilise uniquement si DECENTREMENT |\n  |             ou si dispersion. OPTIONNEL donc                    |\n  |                                                                 |\n  |'ALPHAL'      coefficient de dispersivite longitudinale (CHPO de |\n  |              composante SCAL) - 0 si absent                     |\n  |                                                                 |\n  |'ALPHAT'      coefficient de dispersivite transverse (CHPO de    |\n  |              composante SCAL) - 0 si absent                     |\n  |              Rque : si ALPHAL ou ALPHAT est present les deux    |\n  |              doivent etre renseignes.                           | \n  |                                                                 |\n  |----------------------                                           |\n  |Conditions initiales :                                           |\n  |----------------------                                           |\n  |                                                                 |\n  |'CONCENTRATION' concentration en debut de pas de temps           |\n  |              (quantite d'element par unite de volume d'eau)     |\n  |              (Type CHPO Centre, Comp libre 4 lettres au plus)   |\n  |               la concentration peut avoir plusieurs composante  |\n  |               la resolution etant alors faite pour chaque       |\n  |               composante                                        |\n  |                                                                 |\n  |--------------------------------------                           |\n  |Conditions aux limites / chargements :                           |\n  |--------------------------------------                           |\n  -------------------------------------------------------------------\n  |                                                                 |\n  | 'CLIMITES'   table contenant les indices suivants :             |\n  |                                                                 |\n  |'TRACE_IMPOSE' Valeurs des traces imposees (charge ou concentra- |\n  |              -tion) - nom de la concentration                   |\n  |                                                                 |\n  |'FLUX_IMPOSE' Valeurs des flux imposes integres par face         |\n  |              (Type CHARGEMENT de CHPO Face) - nom concentration |\n  |                                                                 |\n  |'FLUXTOT_IMP' Valeurs des flux totaux imposes integres par face  |\n  |              (Type CHARGEMENT de CHPO Face, comp. nom de la     |\n  |               concentration )                                   |\n  |                                                                 |\n  |'MIXTES'      Table : - indice C contient les valeurs des flux   |\n  |                               mixtes imposes integres par face  |\n  |                             (Type CHARGEMENT de CHPO Face,      |\n  |                              comp. idem concentration defaut 0.)|\n  |                      - indices A et B sont des reels            |\n  |                                                                 |\n  |              la condition mixte s'ecrit                         |\n  |                   C =  A * flux diffusif +  B * Concentration   |\n  |                                                                 |\n  ------------------------------------------------------------------\n  |                                                                 |\n  |'SOURCE'      Valeurs du terme source par maille et par unite de |\n  |              temps (ex : puits, filiation)                      |\n  |              Les valeurs a l'indice i sont les valeurs entre    |\n  |              les temps i-1 et i.                                |\n  |              (CHARGEMENT de CHPO Centre, comp de conc. ini)     |\n  |                                                                 |\n  |                                                                 |\n  |--------------------                                             |\n  |Donnees numeriques :                                             |\n  |--------------------                                             |\n  |                                                                 |\n  |                                                                 |\n  | 'LUMP'       FAUX SI pas de mass lumping, VRAI sinon.           |\n  |              VRAI seulement sur des maillages de rectangles et  |\n  |              parallelepipedes rectangles et tenseur de dissusion|\n  |              orthotrope. Permet de rendre les schemas monotone  |\n  |              pour la diffusion-instationnaire - OBLIGATOIRE     |\n  |                                                                 |\n  | 'DECENTREMENT' VRAI si diffusion numerique pour Peclet = 2,     |\n  |                permet                                           |\n  |              de stabiliser (en explicite) voire rendre monotone |\n  |              le schema de convection.                           |\n  |              FAUX si schema sans convection, ou en implicite et |\n  |              absence d'oscillations - plus precis               |\n  |              OBLIGATOIRE                                        |\n  |                                                                 |\n  | 'TYPDISCRETISATION'   'VF' si VF et 'EFMH' si EFMH              |\n  |                                                                 |\n  |                                                                 |\n  |'THETA_DIFFUSION' Coefficient de relaxation compris entre 0. et 1|\n  |              (theta-methode diffusion) ('FLOTTANT' - OBLIGATOIRE)|\n  |                                                                 |\n  |'THETA_CONVECTION' Idem pour la convection                       |\n  |              ('FLOTTANT', OBLIGATOIRE)                          |\n  -------------------------------------------------------------------\n  | Solveurs : - OPTIONNELS\n  |-----------\n  |                                                                 |\n  | 'METHINV'    TABLE DE PARAMETRE du solveur KRES, cf KRES        |\n  |              peut etre remplie partiellement                    |\n  |              deux indices importants :                          |\n  |              'TYPINV'  1 pour direct 3 pour BiCGSTAB            |\n  |              'PRECOND' 3 pour ILU0, 5 pour ILUT                 |\n  |              conseil TYPINV = 1 en 2D ou petits calculs, 3 sinon|\n  |              conseil PRECOND = 3 sauf si problemes mettre 5     |\n  |              DERNIER CONSEIL : si message du type convergence   |\n  |              breakdown, Pivot nul ... mettre la tolerence       |\n  |              BCGSTOL a la precision machine 1.D-300, cf notice  |\n  |              de KRES                                            |\n  |              METHINV est OPTIONNELLE                            |\n  |                                                                 |\n  | 'SOLVEUR'    type de solveur 1 pour direct                      |\n  |                              2 grad conjugue                    |\n  |                              3 BiCGSTAB                         |\n  |                              4 GMRES                            |\n  |              ecrase le choix dans METHINV si double entree      |\n  |              OPTIONNEL EGALEMENT                                |\n  |                                                                 |\n  | 'PRECONDITIONNEUR' type de precond. 0 rien                      |\n  |                                     1 diag.                     |\n  |                                     2 D-ILU                     |\n  |                                     3 ILU0                      |\n  |                                     4 MILU                      |\n  |                                     5 ILUT                      |\n  |                                     6 ILUT2                     |\n  |                    OPTIONNEL - Ecrase choix dans METHINV si doub|\n  |                                le entree.                       |\n  |                                                                 |\n  |-----------                                                      |\n  | recalculs  - OPTIONNELS                                         |\n  |-----------                                                      |\n  | 'ABANDON'      Si VRAI alors les resultats sont nuls lorsque    |\n  |                la concentration est inferieur a 'SEUILCALC'     |\n  |                un calcul non couteux est effectue a chaque pas de|\n  |                temps. Le calcul reprend normalement si la conc. |\n  |                refranchit a nouveau le seuil (source accrue....)|\n  |                                                                 |\n  | 'SEUILCALC'    Si ABANDON est vrai il faut preciser le seuil    |\n  |                d'arret des calculs                              |\n  |                                                                 |\n  |-----------                                                      |\n  | pilotage   -OPTIONNELS                                          |\n  |-----------                                                      |\n  | 'RECALCUL' si VRAI alors toutes les matrices seront recalculees |\n  |                                                                 |\n  | 'INITIALI' Si vrai on considere que c'est le premier appel      |\n  |            On a RECALCUL mis a VRAI et rien de TRANS2 ne sert   |\n  |            ie tous les objets de preconditionnement sont recalc |\n  |                                                                 |\n  | 'MODIFICATI' TABLE plus detaillee que 'RECALCUL' contient les   |\n  |               indices :                                         |\n  |             'POROSITE' = VRAI si recalcul lie a variation de    |\n  |                               la porosite                       |\n  |             'CONVECTI' = VRAI si recalcul lie a variation de    |\n  |                               la CONVECTIOn                     |\n  |             'DELTAT'   = VRAI si recalcul lie a variation de    |\n  |                               DELTAT                            |\n  |             'DIFFUSIV' = VRAI si recalcul lie a variation de    |\n  |                               DIFFUSIVITE                       |\n  |                                                                 |\n  | En cas d'absence de tout indice on reinitialise                 |\n  | REINIT domine RECALCUL qui domine MODIFICATI                    |\n  ------------------------------------------------------------------\n\n  -------------------------------------------------------------------\n  |                        TRANS2 - OPTIONNEL                       |\n  ------------------------------------------------------------------\n  |   Table optionnelle qui contient tous les preconditionnements   |\n  |   comme les matrices de discretisation, le surfaces des elements|\n  |   etc... calules lors d'un precedent appel                      |\n  |                                                                 |\n  |   TRANS2 est donc en general le resultat RES2 d'un precedent    |\n  |          calcul reinjecte en entree de TRANGEOL                 |\n  |          selon les options de pilotages precedentes, tout       |\n  |          ou partie de TRANS2 sera utilisee.                     |\n  |          TRANS2 contient notamment les traces de concentration  |\n  |          en EFMH                                                |\n  |                                                                 |\n  |  Ne pas donner TRANS2 revient a faire un premier calcul         |\n  |  C'est identique a REINIT = VRAI                                |\n  |                                                                 |\n  |  Ce preconditionneur n'a d'interet que pour des calculs a pas   |\n  |  de temps constant (en EFMH) ou relativement lineaires (en EFMH |\n  |  et VF)                                                         |\n  |_________________________________________________________________|\n\n\n                        SORTIES\n\n  RES1 table identique a TRANS1 mais donc la concentration est remise\n       a jour (nouvelle apres calcul).\n       L'indice INITIALI est mis a FAUX (cree si absent auparavent).\n       Les indices FLUXDIFF et FLUXCONV contenant les CHPO de flux\n       convectifs et diffusifs integres aux faces sont ajoutes.\n\n\n  RES2 table contenant les objets de preconditionnement pour une \n       utilisation plus rapide lors d'appels suivants.\n\n\n\n                      UTILISATION\n\n      premier appel :   RES1 RES2 = TRANGEOL MODARCY TRANS1 ;\n      apres         :   RES1 RES2 = TRANGEOL MODARCY RES1 RES2 ;\n      point fixe : reflechir !!!",
  },
  {
    name: "TRANSFER",
    url: "TRANSFER",
    documentation:
      "$$$$ TRANSFER NOTICE  MB234859  17/10/02    21:15:28     9577           \n                                             DATE     17/10/02\n\n  Procedure TRANSFER                        Voir aussi :\n   ------------------  \n                                 |   Mot1    P1  |\n    Ftrans = TRANSFER Modes Amor |               |\n                                 | 'SEISME' Dir1 |\n\n                      Mot2 P2 Mosort Lfreq Mochoi (Mocoul) ;\n\n\n\n   Cette procedure calcule la fonction de transfert d'une structure\n   en deplacement, vitesse ou acceleration. C'est la reponse (amplitude\n   complexe) a une force localisee ou a une acceleration d'ensemble.\n   Le calcul est effectue par recombinaison modale.\n\n\n\n       Modes   : Objet SOLUTION contenant les modes de la structure\n                                     ou\n                 Objet TABLE    contenant les modes de la structure\n\n       Amor    : Objet LISTREEL contenant les amortissements reduits\n                 pour chaque mode (ex : pour 2% on mettra 0.02)\n\n       Mot1    : Objet MOT definissant la direction de la sollicitation\n                 (UX, UY, UZ ... ) dans le cas d'une force ponctuelle\n\n       P1      : Objet POINT definissant le point d'application de la\n                 sollicitation dans le cas d'une force ponctuelle\n\n       Dir1    : Objet MOT definissant la direction de la sollicitation\n                 (UX, UY, UZ ... ) dans le cas d'une acceleration\n                 d'ensemble\n\n       Mot2    : Objet MOT definissant la direction pour laquelle on\n                 calcule la reponse\n\n       P2      : Objet POINT definissant le point o\u00ba l'on calcule la\n                 reponse\n\n       Lfreq   : Objet LISTREEL definissant les frequences pour\n                 lesquelles le calcul est effectue\n\n       Mosort  : Objet MOT definissant le type de reponse demande\n                 Les mots admis sont : DEPL pour deplacement\n                                       VITE pour vitesse\n                                       ACCE pour acceleration\n                 Dans le cas d'une acceleration d'ensemble (SEISME), le\n                 deplacement et la vitesse sont donnes dans le repere \n                 relatif et l'acceleration dans le repere absolu.\n\n       Mochoi  : Objet MOT definissant le type de sortie desire\n                 Les mots admis sont : MOPH pour module et phase\n                                       REIM pour partie reelle et partie\n                                       imaginaire\n\n       Mocoul  : Objet MOT facultatif definissant la couleur des courbes\n                 Si Mocoul est absent, la couleur choisie est la couleur\n                 par defaut\n\n\n      Le resultat Ftrans est un objet EVOLUTION, de sous-type complexe\n      contenant soit la partie reelle et la partie imaginaire, soit le\n      module et la phase suivant la valeur de Mochoi",
  },
  {
    name: "TRANSGEN",
    url: "TRANSGEN",
    documentation:
      "$$$$ TRANSGEN NOTICE  CHAT      11/09/12    21:18:24     7124           \n                                             DATE     11/09/12\n\n\n      Operateur TRANSGEN                     Voir aussi : DARCYTRA, TRANGEOL\n      ------------------  \n      TRANSGEN TABLE  ;\n\n\n\n\n    ISSUE de la procedure DARCYTRA !\n    La syntaxe est conservee a l'exception de quelques points :\n\n    1 -  quelques nouvelles fonctionnalites supplementaires\n         - numeriques : choix VF EFMH, decentrement, mass lumping, \n                        solveur KRES accessible\n         - physique : dispersivite calculee, nouvelles conditions\n                      aux limites (mixtes, flux total)\n\n    2 - syntaxe modifiee pour porosite et caracteristiques, et FLUXDIFF\n        FLUXCONV au lieu de 'FLUX', CONVECTION est maintenant une vitesse\n        et non un flux convectif, VITELEM la vitesse au centre est rajoutee\n        pour les calculs de dispersivite.\n\n    3 - plus d'histoire de composantes 'H' 'TH' pour la concentration\n      et sa trace car pas lieu d'etre en VF et relativement incompatible\n      avec une gestion multiespece. La composante de concentration est\n      libre (ex I129) et les conditions aux limites doivent avoir\n      le meme nom de composante, ainsi que pour toutes les variables de meme\n      dimension que la concentration (Concentration de saturation etc ...).\n      Voire notice detaillee en dessous pour les noms de composantes.\n      En gros, les jeux de donnees Darcytra tournent si les 'TH' sont\n      transformes en 'H' plus modifs -1- et -2- (au plus quelques lignes\n      dans les jeux de donnees), voir les jeux transport*.dgibi etc ..\n\n    Fonction\n    --------\n\n    Resolution de l'equation de transport de Radio nucleides en milieu\n    poreux par une methode d'elements finis mixtes hybrides ou VF. \n    Les inconnues du probleme sont\n    - en EFMH, la concentration, la trace de\n     concentration et le debit diffusif. \n    - en VF, la concentration\n    Gere pas de temps, retard, diffusion, dispersion, convection,\n    source, preicipitation dissolution, decroissance, conditions aux\n    limites (Dirichlet, Neumann, Mixtes, flux total)\n    numerique : solveurs directs et iteratifs, decentrement, VF et\n                EFMH, implicte explicite krank-Nicholson, mass lump\n\n\n    Remarque\n    --------\n\n    TRANSGEN remplace DARCYTRA pour le transport, DARCYTRA reste pour la resolut\n    de l'equation de DARCY. Les personnes qui tiennent a utiliser des VF\n    pour resoudre DARCY peuvent utiliser TRANSGEN en mettant une porosite\n    nulle (annule le terme en temps) et une convection nulle. \n\n\n\n----------------------------------\n Operandes (a mettre dans TABLE) :\n----------------------------------\n\n  ___________________________________________________________________\n  |                                                                 |\n  | Indice      Contenu                                             |\n  |                                                                 |\n  -------------------------------------------------------------------\n  |                                                                 |\n  |------------------------------------------------                 |\n  |Donnees physiques, geometriques et materielles :                 |\n  |------------------------------------------------                 |\n  |                                                                 |\n  |'MODELE'      Objet modele (MMODEL cree par MODE) DARCY          |\n  |                                                                 |\n  |'CARACTERISTIQUES' Donnees physiques et materielles :            |\n  |              diffusivite effective - CHAMPOINT de COMPOSANTES   |\n  |              K11 K21 K22 K31 K32 K33 au centre des elements     |\n  |                                                                 |\n  |'POROSITE'    Valeur de la porosite (Type Champoint, Comp        |\n  |              'SCAL', ou FLOTTANT) - Defaut 1.                   |\n  |                                                                 |\n  |'DECROISSANCE' Valeur du terme de decroissance (Type FLOTTANT)   |\n  |              Tel que dC/dt = - Lambda * C     - Defaut 0.       |\n  |                                                                 |\n  |'COEF_RETARD' Coefficient de retard lineaire dans le cas simple, |\n  |              ou  Pente a l'origine de la fonction F(C) dans le  |\n  |                  cas d'isotherme non lineaire de Langmuir       |\n  |              ou  Coefficient K de l'isotherme de Freundlich     |\n  |              (Type CHPO Centre 'SCAL', ou FLOTTANT)             |\n  |                                                                 |\n  |'LANGMUIR'    Quantite maximale 'Fsat' adsorbee sur le solide    |\n  |              rapportee a l'unite de volume du fluide et exprimee|\n  |              dans la meme unite que le solute.                  |\n  |              (Type CHPO Centre 'SCAL', ou FLOTTANT).            |\n  |              F = (R-1) C / [1 + ((R-1) C / Fsat)]               |\n  |              Si cet indice et le suivant sont absents,          |\n  |              l'equilibre d'adsorption est lineaire. Cet indice a|\n  |              priorite sur l'indice FREUNDLICH.                  |\n  |                                                                 |\n  |'FREUNDLICH'  Exposant de la loi de Freundlich F = K (C ^ 1/n)   |\n  |              (Type FLOTTANT).                                   |\n  |              Dans ce cas (et si l'indice LANGMUIR n'existe pas),|\n  |              l'indice 'COEF_RETARD' contient le coefficient     |\n  |              K ramene a une unite de volume de fluide.          |\n  |              - Non disponible pour l'instant -                  |\n  |                                                                 |\n  |'LIMITE_SOLUBILITE' Limite de solubilite (Type chpoin), composante\n  |                    identique a la concentration                 |\n  |                    si absente pas de precipitation dissolution  |\n  |                                                                 |\n  |'COEF_DISSOLUTION' Coef. de dissolution (Type CHPO Centre, Comp  |\n  |              'SCAL'). Tel que dC/dt = Coef * (Csat - C)         |\n  |              Si absent pas de dissolution precipitation         |\n  |                                                                 |\n  |'CONVECTION'  vitesse au face. C'est le debit integre aux faces  |\n  |              multiplie par la normale sortante de l'element     |\n  |              et divise par la longueur de la face.              |\n  |              Il s'agit de la projection du vecteur vitesse sur  |\n  |              direction normale a la face. (Type CHPO Face, comp.|\n  |              VX VY VZ). L'interet est que cette vitesse est     |\n  |              desormais intependante de l'orientation des normale|\n  |              ce qui est utile dans certains cas.\n  |                                                                 |\n  |'VITELEM'    Vitesse au centre des elements (Type CHPO centre,   |\n  |             comp. VX VY VZ). Utilise uniquement si DECENTREMENT |\n  |             ou si dispersion                                    |\n  |                                                                 |\n  |'ALPHAL'      coefficient de dispersivite longitudinale (CHPO de |\n  |              composante SCAL) - 0 si absent                     |\n  |                                                                 |\n  |'ALPHAT'      coefficient de dispersivite transverse (CHPO de    |\n  |              composante SCAL) - 0 si absent                     |\n  |              Rque : si ALPHAL ou ALPHAT est present les deux    |\n  |              doivent etre renseignes.                           |\n  |----------------------                                           |\n  |Conditions initiales :                                           |\n  |----------------------                                           |\n  |                                                                 |\n  |'TEMPS'       TABLE contenant a l'indice 0 la valeur du temps    |\n  |              initial (FLOTTANT)                                 |\n  |                                                                 |\n  |                                                                 |\n  |'CONCENTRATION' TABLE contenant a l'indice 0 la concentration    |\n  |              (quantite d'element par unite de volume d'eau)     |\n  |              (Type CHPO Centre, Comp libre 4 lettres au plus)   |\n  |                                                                 |\n  |                                                                 |\n  |'PRECIPITE'   TABLE contenant a l'indice 0 la quantite initiale  |\n  |              de precipite par unite de volume de milieu solide  |\n  |              (Type CHPO Centre, Comp identique a concentration) |\n  |                                                                 |\n  |'FLUXDIFF'    TABLE contenant a l'indice 0 les debits diffusifs  | \n  |              integres                                           |\n  |              par face (Type CHPO Face, nom de la concentration) |\n  |                                                                 |\n  |'FLUXCONV'    TABLE contenant les debits convectifs integres     |\n  |              par face (Type CHPO Face, nom de la concentration) |\n  |              a l'indice 0.                                      |\n  |                                                                 |\n  |'DISSOLUTION' TABLE contenant a l'indice 0 la quantite initiale  |\n  |              pour estimer la dissolution au premier pas de temps|\n  |              (Type CHPO, Comp de la concentration).             |\n  |                                                                 |\n  |                                                                 |\n  |--------------------------------------                           |\n  |Conditions aux limites / chargements :                           |\n  |--------------------------------------                           |\n  |                                                                 |\n  |                                                                 |\n  |'TRACE_IMPOSE' Valeurs des traces imposees (charge ou concentra- |\n  |              -tion) - nom de la concentration                   |\n  |                                                                 |\n  |'FLUX_IMPOSE' Valeurs des flux imposes integres par face         |\n  |              (Type CHARGEMENT de CHPO Face) - nom concentration |\n  |                                                                 |\n  |'FLUXTOT_IMP' Valeurs des flux totaux imposes integres par face  |\n  |              (Type CHARGEMENT de CHPO Face, comp. nom de la     |\n  |               concentration )                                   |\n  |                                                                 |\n  |'MIXTES'      Table : - indice C contient les valeurs des flux   |\n  |                               mixtes imposes integres par face  |\n  |                             (Type CHARGEMENT de CHPO Face,      |\n  |                              comp. idem concentration defaut 0.)|\n  |                      - indices A et B sont des reels            |\n  |                                                                 |\n  |              la condition mixte s'ecrit                         |\n  |                   C =  A * flux diffusif +  B * Concentration   |\n  |                                                                 |\n  |                                                                 |\n  |'SOURCE'      Valeurs du terme source par maille et par unite de |\n  |              temps (ex : puits, filiation)                      |\n  |              Les valeurs a l'indice i sont les valeurs entre    |\n  |              les temps i-1 et i.                                |\n  |              (CHARGEMENT de CHPO Centre, comp de conc. ini)     |\n  |                                                                 |\n  |                                                                 |\n  |'DISSOLUTION_IMPOSEE' Valeurs des dissolutions imposees par unite|\n  |              de temps et par maille. (Type CHARGEMENT de CHPO,  |\n  |              Comp conc). Les valeurs a l'indice i sont les      |\n  |              valeurs moyennes de dissolution par unite de temps |\n  |              entre les temps i-1 et i.                          |\n  |              Priorite de la dissolution imposee sur les         |\n  |              cinetiques.                                        |\n  |                                                                 |\n  |--------------------                                             |\n  |Donnees numeriques :                                             |\n  |--------------------                                             |\n  |                                                                 |\n  |                                                                 |\n  |'TEMPS_CALCULES' Valeur des temps calcules (LISTREEL)            |\n  |              Contient obligatoirement le temps final.           |\n  |                                                                 |\n  |'TEMPS_SAUVES' Valeur des temps sauvegardes (LISTREEL - defaut : |\n  |              on sauve tous les pas de temps)                    |\n  |                                                                 |\n  | 'LUMP'       FAUX SI pas de mass lumping, VRAI sinon.           |\n  |              VRAI seulement sur des maillages de rectangles et  |\n  |              parallelepipedes rectangles et tenseur de dissusion|\n  |              orthotrope. Permet de rendre les schemas monotone  |\n  |              pour la diffusion-instationnaire                   |\n  |                                                                 |\n  | 'DECENTR'    VRAI si diffusion numerique pour Peclet = 2, permet|\n  |              de stabiliser (en explicite) voire rendre monotone |\n  |              le schema de convection.                           |\n  |              FAUX si schema sans convection, ou en implicite et |\n  |              absence d'oscillations - plus precis               |\n  |                                                                 |\n  | 'TYPDISCRETISATION' 'VF' si VF et 'EFMH' si EFMH                |\n  |                                                                 |\n  | 'METHINV'    TABLE DE PARAMETRE du solveur KRES, cf KRES        |\n  |              peut etre remplie partiellement                    |\n  |              deux indices importants :                          |\n  |              'TYPINV' OBLIGATOIRE 1 pour direct 3 pour BiCGSTAB |\n  |              'PRECOND' obligatoire 3 pour ILU0, 5 pour ILUT     |\n  |              conseil TYPINV = 1 en 2D ou petits calculs, 3 sinon|\n  |              conseil PRECOND = 3 sauf si problemes mettre 5     |\n  |              DERNIER CONSEIL : si message du type convergence   |\n  |              breakdown, Pivot nul ... mettre la tolerence       |\n  |              BCGSTOL a la precision machine 1.D-300, cf notice  |\n  |              de KRES                                            |\n  |                                                                 |\n  |'THETA_DIFF'  Coefficient de relaxation compris entre 0. et 1.   |\n  |              (theta-methode diffusion) ('FLOTTANT' - defaut 1.) |\n  |                                                                 |\n  |'THETA_CONVECTION' Idem pour la convection                       |\n  |              ('FLOTTANT', Defaut = THETA_DIFF)                  |\n  |'THETA_DEC'   Idem mais pour la decroissance                     |\n  |              ('FLOTTANT' - defaut 1/2)                          |\n  |                                                                 |\n  |'THETA_DISS'   Idem mais pour la dissolution                     |\n  |              ('FLOTTANT' - defaut 1.)                           |\n  |                                                                 |\n  |'EPSI_RET'    Precision relative d'arret pour la resolution      |\n  |              iterative (Picard) de l'adsorption non lineaire    |\n  |              (Type FLOTTANT) - Defaut 1.D-4                     |\n  |                                                                 |\n  |'EPSI_COR'    Petit saut de concentration pour calculer le coef. |\n  |              de retard par la methode de la corde lorsque le    |\n  |              retard est non-lineaire.                           |\n  |              (Type FLOTTANT) - Defaut 1.D-4                     |\n  |                                                                 |\n  |'ITMAX_RET'   Nombre maxi d'iterations correspondant au retard   |\n  |              non lineaire avant d'abandonner.                   |\n  |              (Type 'ENTIER') - Defaut 20                        |\n  |_________________________________________________________________|\n\n\n\n---------------------------------\n Resultats (stockes dans TABLE) :\n---------------------------------\n\n  ___________________________________________________________________\n  |                                                                 |\n  | Indice      Contenu                                             |\n  |                                                                 |\n  -------------------------------------------------------------------\n  |                                                                 |\n  |                                                                 |\n  |'TEMPS'       TABLE contenant les temps sauvegardes (FLOTTANT)   |\n  |                                                                 |\n  |'CONCENTRATION' TABLE contenant les concentrations               |\n  |              (Type CHPO Centre, Comp libre, celle de C ini)     |\n  |                                                                 |\n  |'FLUXDIFF'    TABLE contenant les debits diffusifs integres      |\n  |              par face (Type CHPO Face, nom de la concentration) |\n  |                                                                 |\n  |'FLUXCONV'    TABLE contenant les debits convectifs integres     |\n  |              par face (Type CHPO Face, nom de la concentration) |\n  |                                                                 |\n  |'PRECIPITE'   TABLE contenant la quantite de precipite par maille|\n  |              (Type CHPO Centre, Comp de la concentration)       |\n  |                                                                 |\n  |                                                                 |\n  |'RETARD'      Si cet indice a ete prealablement defini comme une |\n  |              TABLE, alors il contient les valeurs du coefficient|\n  |              de retard (Type 'CHPO' centre, Comp 'SCAL'). Sinon,|\n  |              les valeurs du coefficient de retard ne sont pas   |\n  |              sauvegardees.                                      |\n  |_________________________________________________________________|\n  \n\n  ___________________________________________________________________\n  |                                                                 |\n  | Les tables resultats sont indicees par des entiers variant de 0 |\n  | a N .                                                           |\n  | A l'indice 0 on stocke les valeurs initiales, aux indices       |\n  | suivants les champs correspondant au temps de sortie TEMPS.I .  |\n  | Les champs servant en cas de reprise sont ceux correpondant au  |\n  | dernier indice.                                                 |\n  |_________________________________________________________________|",
  },
  {
    name: "TRANSIT0",
    url: "TRANSIT0",
    documentation:
      "$$$$ TRANSIT0 NOTICE  CHAT      11/09/12    21:18:24     7124           \n                                             DATE     11/09/12\n\n    Procedure TRANSIT0                       Voir aussi : THERMIC\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure est appelee par la procedure THERMIC.",
  },
  {
    name: "TRANSIT1",
    url: "TRANSIT1",
    documentation:
      "$$$$ TRANSIT1 NOTICE  CHAT      11/09/12    21:18:24     7124           \n                                             DATE     11/09/12\n\n    Procedure TRANSIT1                       Voir aussi : THERMIC\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure est appelee par la procedure THERMIC.",
  },
  {
    name: "TRANSIT2",
    url: "TRANSIT2",
    documentation:
      "$$$$ TRANSIT2 NOTICE  CHAT      11/09/12    21:18:24     7124           \n                                             DATE     11/09/12\n\n    Procedure TRANSIT2                       Voir aussi : THERMIC\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure est appelee par la procedure THERMIC.",
  },
  {
    name: "TRANSIT3",
    url: "TRANSIT3",
    documentation:
      "$$$$ TRANSIT3 NOTICE  CHAT      11/09/12    21:18:25     7124           \n                                             DATE     11/09/12\n\n    Procedure TRANSIT3                       Voir aussi : THERMIC\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure est appelee par la procedure THERMIC.",
  },
  {
    name: "TRANSLIN",
    url: "TRANSLIN",
    documentation:
      "$$$$ TRANSLIN NOTICE  CHAT      11/09/12    21:18:25     7124           \n                                             DATE     11/09/12\n                                             \n  T R A N S L I N                         Voir aussi : \n\n\n                                                                      \n     RESOLUTION D'UN PROBLEME DE THERMIQUE TRANSITOIRE LINEAIRE   \n     METHODE A UN PAS DE TEMPS ( THETA SCHEMA )\n\n     PROCEDURE APPELEE PAR PASAPAS :  STAB = TRANSLIN ETAB\n\n-------------------------------------------------------------------  \n                                                                      \n     ETAB, TABLE CONTENANT EN ENTREE :                                \n                                                                      \n     INDICE 'INITIAL(1)'   CHAMP DE TEMPERATURE INITIAL AU PAS 0                \n     INDICE 'MOD_THE'      OBJET MODELE THERMIQUE                     \n     INDICE 'MOD_CON'      OBJET MODELE CONVECTION                    \n     INDICE 'BLOCAGES_THERMIQUES'      MATRICE DE BLOCAGE             \n     INDICE 'MAT_THE'      OBJET MATERIAU THERMIQUE.                 \n     INDICE 'MAT_CON'      OBJET MATERIAU CONVECTION                  \n     INDICE 'CHARGEMENT'   CHARGEMENT DECRIVANT LES                   \n                           VALEURS DES VARIABLES EXTERNES (EX: TE,    \n                           FLUX,TEMPERATURES IMPOSEES ,...)               \n     INDICE 'TEMPS0'       TEMPS INITIAL (CORRESPOND A INITAL(1))      \n     INDICE 'TEM_CALC'     LISTREEL : TEMPS DES RESULTATS A CALCULER  \n     INDICE 'RELAXATION_THETA'  VALEUR DU COEFFICIENT DE RELAXATION      \n                           (VALEUR PAR DEFAUT 0.5)                    \n     INDICE 'SOUS-RELAXATION'   VALEUR DU COEFF. DE SOUS-RELAXATION      \n                           (VALEUR PAR DEFAUT 0.5)                    \n\n---------------------------------------------------------------------\n\n     ETAB, TABLE CONTENANT EN SORTIE\n\n     INDICE INITIAL(2)     DERNIER CHAMP DE TEMPERATURE CALCULE    ",
  },
  {
    name: "TRANSNON",
    url: "TRANSNON",
    documentation:
      "$$$$ TRANSNON NOTICE  CHAT      11/09/12    21:18:25     7124           \n                                             DATE     11/09/12\n                                             \n  T R A N S N O N                     Voir aussi :\n\n                                                                      \n     RESOLUTION D'UN PROBLEME DE THERMIQUE TRANSITOIRE NON-LINEAIRE   \n     METHODE A UN PAS DE TEMPS ( THETA SCHEMA )\n\n     PROCEDURE APPELEE PAR PASAPAS :  STAB = TRANSNON ETAB\n\n-------------------------------------------------------------------             \n                                                                      \n     ETAB, TABLE CONTENANT EN ENTREE :                                \n                                                                      \n     INDICE 'INITIAL(1)'   CHAMP DE TEMPERATURE INITIAL AU PAS 0                \n     INDICE 'RAYONNEMENT'  LOGIQUE VALANT VRAI POUR UNE CONDITION     \n                           DE RAYONNEMENT                             \n     INDICE 'EMISSIVITE'   MCHAML DECRIVANT  LES FACTEURS D'EMISSIVITE\n                           NOM DE LA COMPOSANTE : EMIS\n     INDICE 'CELSIUS'      LOGIQUE VALANT VRAI SI L'UNITE EST LE      \n                           DEGRE CELSIUS (CAPITAL SI RAYONNEMENT)     \n     INDICE 'MOD_THE'      OBJET MODELE THERMIQUE                     \n     INDICE 'MOD_CON'      OBJET MODELE CONVECTION                    \n     INDICE 'BLOCAGES_THERMIQUES'      MATRICE DE BLOCAGE             \n     INDICE 'MAT_THE'      OBJET MATERIAU THERMIQUE.                  \n                           CE CHAMP PEUT AVOIR DES COMPOSANTES DE     \n                           TYPE FLOTTANT OU EVOLUTION (ABS-ORD).    \n                           ORD : VALEUR DE LA COMPOSANTE CONCERNE POUR\n                           LA VALEUR ABS.                             \n     INDICE 'MAT_CON'      OBJET MATERIAU CONVECTION                  \n     INDICE 'CHARGEMENT'   CHARGEMENT DECRIVANT LES                   \n                           VALEURS DES VARIABLES EXTERNES (EX: TE,    \n                           FLUX,TEMPERATURES IMPOSEES ,...)           \n     INDICE 'PHASE'        TABLE TAB1 POUR L'OPERATEUR CAPACITE       \n     INDICE 'TEMPS0'       TEMPS INITIAL (CORRESPOND A INITAL(1)      \n     INDICE 'TEM_CALC'     LISTREEL : TEMPS DES RESULTATS A CALCULER  \n     INDICE 'RELAXATION_THETA'  VALEUR DU COEFFICIENT DE RELAXATION      \n                           (VALEUR PAR DEFAUT 0.5)                    \n     INDICE 'SOUS_RELAXATION'   VALEUR DU COEFF. DE SOUS-RELAXATION      \n                           (VALEUR PAR DEFAUT 0.5)                    \n     INDICE 'CRITERE'      VALEUR DU CRITERE DE FIN D'ITERATION       \n                           (VALEUR PAR DEFAUT 10E-5)                  \n     INDICE 'MAXITERATION' NOMBRE MAXIMUM D'ITERATIONS AUTORISEES\n     INDICE PROJECTION     LOGIQUE VALANT VRAI SI COUPLAGE ET SI LE   \n                           MAILLAGE DE LA MECANIQUE ET DE LA THERMIQUE\n                           EST DIFFERENT                              \n\n---------------------------------------------------------------------\n\n     ETAB, TABLE CONTENANT EN SORTIE\n\n     INDICE INITIAL(2)     DERNIER CHAMP DE TEMPERATURE CALCULE \n     INDICE ERREUR         DRAPEAU D'ERREUR\n     INDICE TEM_SAUV       DERNIER TEMPS CALCULE \n     INDICE RAYONNEMENT    INFORMATIONS SUR LE RAYONNEMENT\n                           EVENTUELLEMENT REACTUALISEES",
  },
  {
    name: "TRC",
    url: "TRC",
    documentation:
      "$$$$ TRC      NOTICE  CB215821  19/06/17    21:15:22     10228          \n                                             DATE     19/06/17\n\n  Procedure TRC                            Voir aussi :\n\n    TRC MOD1 MAT1 TINI TFIN LRE1 ;\n\n    Objet :\n    _______\n\n  Cette procedure  permet de calculer  un diagramme  TRC a  partir  d'un\n  modele metallurgique.\n\n+---------+-----------------------------------------+----------+\n| Entrees | Description                             | Type     |\n+---------+-----------------------------------------+----------+\n| MOD1    |Modele de formulation METALLURGIQUE      | MMODEL   |\n| MAT1    |Caracteristiques du Modele METALLURGIQUE | MCHAML   |\n| TINI    |Temperature initiale                     | FLOTTANT |\n| TFIN    |Temperature finale                       | FLOTTANT |\n| LRE1    |Liste des vitesses de refroidissement    | LIRTREEL |\n+---------+-----------------------------------------+----------+",
  },
  {
    name: "TRES",
    url: "TRES",
    documentation:
      "$$$$ TRES     NOTICE  CHAT      11/09/12    21:18:26     7124           \n                                             DATE     11/09/12\n                                             \n    Operateur TRESCA                         Voir aussi : VMIS SIGM\n    ----------------                                      PRIN    CALP  \n                                                          CARA  \n      CHAM2 =  TRES  MODL1 SIG1 (CAR1) (MOT1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur TRESCA calcule la contrainte equivalente de Tresca\nd'un champ de contraintes.\n\n\n      Commentaire :\n      _____________\n\n\n      SIG1  : champ de contraintes (type MCHAML, sous-type\n              CONTRAINTES)\n\n      CAR1  : champ de caracteristiques geometriques necessaire pour\n              les coques minces (type MCHAML, sous-type\n              CARACTERISTIQUES)\n\n      MOT1  : mot-cle qui indique pour les coques o\u00ba on veut calculer\n              les contraintes :\n\n              'SUPE'  : en peau superieure\n              'MOYE'  : sur la surface moyenne ( par defaut )\n              'INFE'  : en peau inferieure\n\n      CHAM2  : contrainte equivalente de Tresca (type MCHAML, sous-type\n               SCALAIRE)\n\n\n      Remarque :\n      ---------\n\n\n    Dans le cas des coques minces, on calcule a partir des contraintes\ngeneralisees une contrainte de Tresca vraie.",
  },
  {
    name: "TRIA",
    url: "TRIA",
    documentation:
      "$$$$ TRIA     NOTICE  GOUNAND   21/06/11    21:15:01     11033          \n                                             DATE     21/06/11\n\n     Operateur TRIANGULATION                 Voir aussi : VORO\n     -----------------------                              RAFT  \n                                                          REMA  \n\n    L'operateur TRIANGULATION s'utilise dans les cas suivants :\n\n    -----------------------\n    |  1ere possibilite   |\n    -----------------------\n\n     SURF1 = TRIA LIG1 (N1) ;\n\n     Objet :\n     _______\n\n     L'operateur TRIANGULATION construit un maillage d'un domaine\n plan defini par  sa frontiere (objet LIG1).  Aucun  noeud  n'est \n ajoute sur la frontiere, en revanche des noeuds  sont ajoutes  a \n l'interieur  du domaine pour  ameliorer la forme des  triangles. \n Le nombre  de noeuds generes  est minimum, il  peut  etre encore \n limite en fixant la valeur de N1.\n\n     Commentaire :\n     _____________\n\n     LIG1 : objet de type MAILLAGE. Il  est  constitue  d'une  ou \n plusieurs lignes fermees. Leur orientation et leur ordre peuvent \n etre quelconque. LIG1 peut contenir des aretes pendantes  et des \n lignes ouvertes .Ce sont des aretes imposees que l'on retrouvera \n dans le maillage resultant (SURF1). Ces  aretes  doivent etre  a \n l'interieur du domaine.\n\n     N1   : objet de type  ENTIER. C'est  le  nombre  maximum  de\n noeuds que doit contenir SURF1.  Il  est  superieur  ou  egal au\n nombre de noeuds de LIG1.\n\n     Remarque :\n     __________\n\n     L'operateur TRIANGULATION genere peu de triangles ;  il  est \n deconseille d'utiliser directement le resultat  pour  un  calcul\n elements finis. En revanche on  peut raisonnablement evaluer  la\n fonction \"taille souhaitee\" et raffiner le maillage avec l'opera-\n teur RAFT.\n\n    La densite affectee a chaque noeud du maillage est la densite \n courante(voir DENS).Elle peut etre positive ou nulle(non fixee).\n\n    TRIANGULATION ne fonctionne que pour des elements lineaires :  \n LIG1 doit etre compose de SEG2 et SURF ne contient que des TRI3.\n\n\n\n    -----------------------\n    |  2eme possibilite   |\n    -----------------------\n\n     MAIL2 = TRIA MAIL1 ('CONV') (FLOT1) ;\n\n     Objet :\n     _______\n\n     L'operateur TRIANGULATION construit la triangulation de\n     Delaunay d'un ensemble de points.\n\n     Commentaire :\n     _____________\n\n     MAIL1  : objet MAILLAGE, forme d'elements de type POI1.\n\n     'CONV' : mot clef permettant de verifier la convexite de la\n              triangulation. La taille de la boite de triangulation\n              utilisee est augmentee si besoin.\n\n     FLOT1  : objet FLOTTANT permettant de definir une taille de maille\n              cible a respecter pour la triangulation. De nouveaux\n              noeuds sont ajoute a l'ensemble de points initial.\n\n     MAIL2  : objet MAILLAGE, triangulation de Delaunay des points\n              de MAIL1, constitue d'elements TRI3 (TET4) en 2D (3D).\n\n\n\n    -----------------------\n    |  3eme possibilite   |\n    -----------------------\n\n     MAIL1 = 'TRIA' 'TOPO' MAIL2  | ('AJNO') | (TAB1) ;\n                                  |  'NOAJ'  |\n\n     Objet :\n     _______\n\n     L'operateur TRIANGULATION genere un maillage de simplex (triangles\n     ou tetraedres) par un algorithme de maillage topologique du a T.\n     Coupez et al.\n\n     Commentaire :\n     _____________\n\n      MAIL1 : maillage genere (type MAILLAGE)\n\n      MAIL2 : bord du maillage a generer (type MAILLAGE)\n\n      TAB1  : objet optionnel de type TABLE dont les indices sont des\n              parametres d'entree ou de sortie du mailleur\n              (voir notice MAILTOPO pour plus de details)\n\n     Remarque :\n     __________\n\n     Si le mot-clef 'AJNO' (par defaut) est donne, le mailleur peut\n     generer de nouveaux noeuds.\n     Si le mot-clef 'NOAJ' est donne, le mailleur ne genere pas de\n     nouveaux noeuds.\n     \n     Limitation :\n     ____________\n\n     MAIL2 doit etre connexe",
  },
  {
    name: "TRIE",
    url: "TRIE",
    documentation:
      "$$$$ TRIE     NOTICE  BP208322  12/12/20    21:15:29     7632           \n                                             DATE     12/12/20\n                                         \n \n    Operateur TRIE                            \n    --------------\n    \n\n    ------------------------------------------------------------\n    Syntaxe 1 : trie des elements en fonction des level set\n    ------------------------------------------------------------    \n\n       MCHAM1 |      | =  TRIE  MO1 CHP1 CHP2 |        | ;\n              |      |                        | 'SAUT' |\n              | REL1 |                        | 'DESE' |\n                                \n\n    Objet :\n    _______\n\n    L'operateur TRIE trie les elements d'un modele xfem et sort un\n    MCHAML d'enrichissement en fonction de la valeur des level set.\n    En presence du mot 'SAUT', l'approximation du deplacement est\n    seulement H-enrichie, la pointe de fissure doit toujours etre\n    sur un bord de l'element.\n    En pr\u00e9sence du mot 'DESE', l'enrichissement \"pointe de fissure\"\n    est progressivement abandonn\u00e9 : celui qui correspond \u00e0 la fissure \n    \u00e0 l'instant n-1 est retir\u00e9 du mod\u00e8le, celui de l'instant n est \n    mis \u00e0 0 (via REL1), et celui de l'instant n+1 (actuel) est ajout\u00e9.\n\n\n    Commentaire :\n    _____________\n\n    MO1 (E/S) : objet MMODEL dont les elements sont a trier /\n                objet MMODEL avec les elements tries\n    \n    CHP1,CHP2 (E) : les deux CHPOINT level set servant a \n                    trier les elements \n\n    MCHAM1 (S) : objet MCHAML d'enrichissement.\n\n    'SAUT' : mot cle relatif \u00e0 l'option sans enrichissement de type \n             \"pointe de fissure\".\n             \n    'DESE' : mot cle relatif \u00e0 l'option de d\u00e9senrichissement progressif\n             des fonctions de type \"pointe de fissure\".\n    \n\n    ------------------------------------------------------------\n    Syntaxe 2 : trie des elements en fonction d'un enrichissement donne\n    ------------------------------------------------------------    \n\n       TRIE  MO1 MCHAM1;\n                                \n\n    Objet :\n    _______\n\n    L'operateur TRIE trie les elements d'un modele xfem en fonction\n    d'un MCHAML d'enrichissement fourni (ayant ete prealablement \n    construit avec la syntaxe 1).\n    Cela permet de re-construire le modele a la configuration associee \n    a MCHAM1.\n\n\n    Commentaire :\n    _____________\n\n    MO1 (E/S) : objet MMODEL dont les elements sont a trier /\n                objet MMODEL avec les elements tries\n\n    MCHAM1 (E) : objet MCHAML d'enrichissement.",
  },
  {
    name: "TRTRAJEC",
    url: "TRTRAJEC",
    documentation:
      "$$$$ TRTRAJEC NOTICE  CHAT      11/09/12    21:18:26     7124           \n                                             DATE     11/09/12\n\n  Procedure TRTRAJEC                       Voir aussi :\n    ------------------  \n        GEO1 = TRTRAJEC TAB1 ;\n\n\n        Objet\n        -----\n        Cette procedure genere un maillage de SEG2 a partir de la table\n        resultat de l'operateur TRAJ.\n        Ceci de facon a pouvoir tracer les trajectoires.\n\n        Commentaires\n        -------------\n\n        GEO1 est un maillage de SEG2\n        TAB1  est la table issue de l'operateur TRAJ",
  },
  {
    name: "TSCA",
    url: "TSCA",
    documentation:
      "$$$$ TSCA     NOTICE  CHAT      11/09/12    21:18:26     7124           \n                                             DATE     11/09/12\n\n  Operateur TSCA                           Voir aussi :\n    --------------  \n    SYNTAXE - EQEX  Cf operateur EQEX\n    ______________\n\n     1/ Formulation non conservative\na/\n    'OPER' 'TSCA' rocp un lambda s       'INCO' 'TN' :\n\nb/\n    'OPER' 'TSCA' alpha  un  s           'INCO' 'TN' :\n    'OPER' 'TSCA' alpha  un  s nut st    'INCO' 'TN' :\n\n     2/ Formulation conservative\n\n    'OPER' 'TSCA' lambda 'UN' S tn        'INCO' 'HN' :\n    'OPER' 'TSCA' lambda 'UN' S tn mut st 'INCO' 'HN' :\n\n\n\n    Objet :\n    ______\n\n  Cet operateur discretise une equation de transport diffusion\n  + source et calcule l'increment pour un algorithme explicite.\n   Suivant l'option les equations sont traites sous forme\n  conservative ou non conservative.\n\n     1/ Formulation non conservative\na/\n  rocp dT/dt + u Grad T = lambda Lapl T + s            (s=S)\n\nb/\n  dT/dt + u Grad T = alpha Lapl T + s                  (s=S/(ro cp))\n\n     2/ Formulation conservative\n\n  dh/dt + Div ( u h ) = (lambda + mut/st) Lapl(T) + S\n\n\n    Commentaires :\n    ______________\n\n     rocp, alpha capacite calorifique, diffusivite thermique\n     lambda conductivite thermique\n          FLOTTANT ou CHPOINT SCAL CENTRE ou CHPOINT SCAL SOMMET ou MOT\n     s,S  densite de source volumique    (s=S/ro cp)\n          POINT ou CHPOINT SCAL CENTRE ou MOT\n     nut,(mut) viscosite cinematique,(dynamique) turbulente\n          CHPOINT SCAL CENTRE ou MOT\n     st   Prandtl turbulent\n          FLOTTANT ou MOT\n     un   Champ de vitesse transportant\n          CHPOINT VECT SOMMET ou MOT\n     tn,hn  Champ de temperature ou d'enthalpie\n          CHPOINT SCAL SOMMET ou MOT\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n coefficient dans la table INCO a l'indice MOT.\n\n\n    Options : (EQEX)\n    _________\n\n La discretisation des termes de convection peut etre :\n\n centree                              OPTION CENTREE\n decentree                            OPTION SUPG\n decentree avec capture de choc       OPTION SUPGCC   Option par defaut\n tenseur visqueux (ordre 2 en temps)  OPTION TVISQ\n\n Formulation non conservative         OPTION NOCONS   Option par defaut\n Formulation conservative             OPTION CONS\n\n Formulation EFM1                     OPTION EFM1     Option par defaut",
  },
  {
    name: "TYPE",
    url: "TYPE",
    documentation:
      "$$$$ TYPE     NOTICE  CHAT      11/09/12    21:18:27     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur TYPE                           Voir aussi :\n    --------------  \n    MOT1 = TYPE OBJET1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur TYPE permet de connaitre le type d'un objet OBJET1.\nLe resultat MOT1 est un objet de type MOT, il contient 8 caracteres .",
  },
  {
    name: "T_IPOL",
    url: "T_IPOL",
    documentation:
      "$$$$ T_IPOL   NOTICE  CHAT      11/09/12    21:18:18     7124           \n                                             DATE     11/09/12\n        \n  Procedure T_IPOL                         Voir aussi :\n    ----------------  \n\n                        \n    OBJET :\n    -----\n\n  Procedure appelee uniquement par le procedure ENCEINTE.",
  },
  {
    name: "T_PITETA",
    url: "T_PITETA",
    documentation:
      '$$$$ T_PITETA NOTICE  MB234859  17/10/02    21:15:27     9577           \n                                             DATE     17/10/02\n\n  Procedure T_PITETA                       Voir aussi :\n    ------------------  \n\n    Objet :\n    _______\n\n   Cette procedure est utilisee par la procedure G_THETA. Elle \npermet de fabriquer un "champ theta".',
  },
  {
    name: "UNILATER",
    url: "UNILATER",
    documentation:
      "$$$$ UNILATER NOTICE  CHAT      11/09/12    21:18:27     7124           \n                                             DATE     11/09/12\n                                             \n  Procedure UNILATER                       Voir aussi :\n    ------------------  \n\n    Objet :\n    _______\n\n    Cette procedure ne peut pas etre appelee par l'utilisateur.\n\n    Elle sert aux appuis unilateraux.",
  },
  {
    name: "UNIQ",
    url: "UNIQ",
    documentation:
      "$$$$ UNIQ     NOTICE  PV        14/12/05    21:15:01     8307           \n                                             DATE     14/12/05\n\n                                             DATE     12/12/21\n\n  Operateur UNIQUE                         Voir aussi :\n    ----------------  \n    RES1 ... RESi ... RESn = UNIQUE OBJ1 ... OBJi ... OBJn\n                                    (FLOT1) ('NOCA') ;\n\n    Objet :\n    _______\n\n    Supprime les doublons dans un objet.\n    RESi est du meme type que OBJi.\n\n\n >> CAS DES OBJETS DE TYPE 'LISTENTI'\n    _________________________________\n\n    Supprime les doublons dans OBJi de type LISTENTI.\n\n\n >> CAS DES OBJETS DE TYPE 'LISTREEL'\n    _________________________________\n\n    Supprime les doublons dans OBJi de type LISTREEL.\n\n    Pour detecter que deux nombres reels sont egaux, on compare leur\n    difference (en valeur absolue) a un nombre juge suffisamment petit.\n    Par defaut, on utilise un critere RELATIF base sur la precision\n    machine. L'utilisateur peut imposer une valeur ABSOLUE pour ce\n    critere via la donnee de FLOT1 (type FLOTTANT).\n\n\n >> CAS DES OBJETS DE TYPE 'LISTMOTS'\n    _________________________________\n\n    Supprime les doublons dans OBJi de type LISTMOTS.\n\n    Par defaut, l'identification de doublons est sensible a la casse,\n    ce qui signifie que l'on distingue les majuscules des minuscules.\n    On peut indiquer a la directive que l'on souhaite plutot faire une\n    elimination insensible a la casse grace au mot-cle 'NOCA'.\n\n\n >> CAS DES OBJETS DE TYPE 'MAILLAGE'\n    _________________________________\n\n    Supprime les doublons dans OBJi de type MAILLAGE.\n\n    Deux elements sont egaux si ils contiennent les memes noeuds m\u00eame\n    si ils sont de couleurs diff\u00e9rentes.\n\n\n >> REMARQUE\n    ________\n\n    Quand des doublons sont detectes, seule la premiere occurrence \n    est conservee, toutes les autres sont supprimees.",
  },
  {
    name: "UNPAS",
    url: "UNPAS",
    documentation:
      "$$$$ UNPAS    NOTICE  PV        16/03/29    21:15:03     8875           \n                                             DATE     16/03/29\n\n\n    procedure UNPAS   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle calcule un pas \n    mecanique.\n      \n    \n    ",
  },
  {
    name: "UPDAEFMH",
    url: "UPDAEFMH",
    documentation:
      "$$$$ UPDAEFMH NOTICE  CHAT      11/09/12    21:18:27     7124           \n                                             DATE     11/09/12\n\n  Operateur UPDAEFMH                   Voir aussi :\n        ------------------  \n\n  ATTENTION La vitesse est optionnelle, L'ordre est important\n  et les types d'arguments qui se suivent aussi pour tester leur\n presence\n \n  APPELE PAR TRANGEOL - PAS POUT UTILISATEUR\n \n   |-----------------------------------------------------------------|\n   | Phrase d'appel (en GIBIANE)                                     |\n   |-----------------------------------------------------------------|\n   |                                                                 |\n   |SMTr MatrTr TbDarTra MassEFMH Difftot = UPDAEFMH MoDARCY Porosite|\n   |                     MateDiff difftot ChPSour cini tcini deltat  |\n   |                     (Qface) nomespec nbespece nbsource LMLump   |\n   |                     DECENTR massEFMH | mattr tbdartra TABMODI;  |\n   |                                      | mattm                    |\n   |-----------------------------------------------------------------|\n   | Generalites : UPDAEFMH construit la matrice de discretisation   |\n   |               du probleme de transport convection-diffusion pour|\n   |               le premier pas de tps d'un algorithme transitoire.|\n   |               Le second membre et les Conditions limites de flux|\n   |               sont pris en compte.                              |\n   |            RESTE TCINI, DECENTR et TERME LIN                    |\n   |-----------------------------------------------------------------|\n   |                                                                 |\n   |-----------------------------------------------------------------|\n   |                         ENTREES                                 |\n   |-----------------------------------------------------------------|\n   | MoDARCY  : modele Darcy.                                        |\n   |                                                                 |\n   | Porosite : champ par elements de composante 'CK'                |\n   |                                                                 |\n   | MateDiff : Tenseur de diffusion  (type iso, ..) champ par       |\n   |            points de composante 'K' en isotrope, 'K11', 'K21',  |\n   |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n   |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n   |                                                                 |\n   | Diffdisp : Tenseur de dispersion  (type iso, ..) champ par      |\n   |            points de composante 'K' en isotrope, 'K11', 'K21',  |\n   |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n   |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n   |                                                                 |\n   | ChPSour  : Champ par points des sources volumiques par unite de |\n   |            temps (support maillage centre). Composante ??????   |\n   |                                                                 |\n   | Cini     : Concentration initiale, CHPOINT centre.              |\n   |            Composante 'H'.                                      |\n   |                                                                 |\n   | Tcini    : Trace de concentration aux faces (eventuellement a   |\n   |            plusieurs composantes (especes)                      |\n   |                                                                 |\n   | Deltat   : Pas de temps                                         |\n   |                                                                 |\n   | Qface    : vitesse aux faces, CHPO face de composantes Vx, Vy   |\n   |            en 2d et Vx, Vy, Vz en 3d. Il s'agit plus exatement  |\n   |            de (V.n)n, c'est a dire de la composante normale de  |\n   |            la vitesse aux faces. ???????? (je pressens que      |\n   |            castem va sortir des flux, cad integres sur surfaces)|\n   |                                                                 |\n   | nomespec : liste des noms de composante des especes dans Cini   |\n   |                                                                 |\n   | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n   |                                                                 |\n   | nbsource : nombre de composantes du terme source qd X especes   |\n   |                                                                 |\n   | LMLump   : Logique. Si vrai on effectue une condensation de     |\n   |            masse de la matrice EFMH                             |\n   |                                                                 |\n   | DECENTR  : Logique. Vrai veut dire schemas decentres et faux    |\n   |            veut dire schema convectif centre.                   |        \n   |                                                                 |\n   | MatTm    : matrice globale sur les traces. MATRIK en entree     |\n   |            sort MATRIK si non modifiee, RIGIDITE sinon          |\n   |            Soit on rentre cet argument soit le suivant Mattr    |\n   |                                                                 |\n   | MatTr    : idem mais rigidite en entree on ressort cette matrice|\n   |            inchangee si les options MATMODI indiquent aucune    |\n   |            modif. Optionnel. On rentre Mattm si absent.         |\n   |                                                                 |\n   | TbDarTra : table Darcy transitoire utilisee par MHYB, SMTP ...  |\n   |                                                                 |\n   | TABMODI  : table contenant des logiques indiquant la necessite  |\n   |            ou non de reclalculer certains termes.               |\n   |            'POROSITE' : VRAI si le coefficient devant D/DT      |\n   |                         (porosite) est modifie depuis le dernier|\n   |                         appel                                   |\n   |            'DELTAT'   : VRAI si le pas de tps a change          |\n   |            'CONVECTI' : VRAI si la vitesse a change             |\n   |            'COEF_LIN' : VRAI si le coef en facteur de C a change|\n   |            'DIFFUSI'  : VRAI si les diffusivites ont change     |\n   |                                                                 |\n   | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n   |            Chpoint a n composantes contenant les conditions aux |\n   |            limites de Neumann et Dirichlet par espece.          |\n   |                                                                 |\n   |                                                                 |\n   |-----------------------------------------------------------------|\n   |                         ENTREES-SORTIES                         |\n   |-----------------------------------------------------------------|\n   |                                                                 |\n   | MassEFMH : matrice elementaire EFMH                             |\n   |                                                                 |\n   | Remarque                                                        |\n   | --------                                                        |\n   | On a toujours interet a rentrer Mattm si on l'a et qu'il n'y a  |\n   | pas de modification, afin de conserver les factorisations LU    |\n   | dans solvEFMH en cas de resolution par methode directe.         |\n   |                                                                 |\n   |-----------------------------------------------------------------|\n   |                         SORTIES                                 |\n   |-----------------------------------------------------------------|\n   |                                                                 |\n   | SMTr     : second membre sur les traces                         |\n   |                                                                 |\n   | Matrtr   : Matrice du probleme, rigidite si nouvelle, egale a la|\n   |            matrice entree (mattm ou mattr) sinon                |\n   |                                                                 |\n   |-----------------------------------------------------------------|",
  },
  {
    name: "UPDAVF",
    url: "UPDAVF",
    documentation:
      "$$$$ UPDAVF   NOTICE  CHAT      11/09/12    21:18:28     7124           \n                                             DATE     11/09/12\n\n  Operateur UPDAVF                     Voir aussi :\n        ----------------  \n\n\n ATTENTION La vitesse est optionnelle, L'ordre est important\n et les types d'arguments qui se suivent aussi pour tester leur\n presence\n\n APPELE PAR TRANGEOL. PAR POUR UTILISATEUR\n\n  |-----------------------------------------------------------------|\n  | Phrase d'appel (en GIBIANE)                                     |\n  |-----------------------------------------------------------------|\n\n                 SMTr Mattt Difftot Mctot Mdiff Nouvmat = UPDAVF\n                 MoDARCY Porosite Matediff Diffdisp ChPSour\n                 DeltaT Cini TetaDiff TetaConv\n                 Qface nomespec nbespece nbsource\n                 Matot Jaco Mctot Mdiff Mpor TABMODI CHCLIM        ;\n\n  |-----------------------------------------------------------------|\n  | Generalites : MATTVF construit la matrice de discretisation   |\n  |               du probleme de transport convection-diffusion pour|\n  |               le premier pas de tps d'un algorithme transitoire.|\n  |               Le second membre et les Conditions limites de flux|\n  |               sont pris en compte.                              |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES                                 |\n  |-----------------------------------------------------------------|\n  | MoDARCY  : modele Darcy.                                        |\n  |                                                                 |\n  | Porosite : champ par elements de composante 'CK'                |\n  |                                                                 |\n  | MateDiff : Tenseur de diffusion  (type iso, ..) champ par       |\n  |            points de composante 'K' en isotrope, 'K11', 'K21',|\n  |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n  |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n  |                                                                 |\n  | Diffdisp : Tenseur de dispersion  (type iso, ..) champ par      |\n  |            points de composante 'K' en isotrope, 'K11', 'K21',|\n  |            'K22' en anisotrope 2d et  'K11', 'K21', 'K22', 'K31'|\n  |            'K32', 'K33' en anisotrope 3d. Type 'CARACTERISTIQUE'|\n  |                                                                 |\n  | ChPSour  : Champ par points des sources volumiques par unite de |\n  |            temps (support maillage centre). Composante ??????   |\n  |                                                                 |\n  | Cini     : Concentration initiale, CHPOINT centre.              |\n  |            Composante 'H'.                                      |\n  |                                                                 |\n  | Deltat   : Pas de temps                                         |\n  |                                                                 |\n  | Qface    : vitesse aux faces, CHPO face de composantes Vx, Vy   |\n  |            en 2d et Vx, Vy, Vz en 3d. Il s'agit plus exatement  |\n  |            de (V.n)n, c'est a dire de la composante normale de  |\n  |            la vitesse aux faces. ???????? (je pressens que      |\n  |            castem va sortir des flux, cad integres sur surfaces)|\n  |                                                                 |\n  | nomespec : liste des noms de composante des especes dans Cini   |\n  |                                                                 |\n  | nbespece : nombre de composante de Cini, soit nombre d'especes  |\n  |                                                                 |\n  | nbsource : nombre de composantes du terme source qd X especes   |\n  |                                                                 |\n  | Matot    : matrice globale de discretisation en VF              |\n  |                                                                 |\n  | Jaco     : matrice globale de discretisation en VF pour le probleme\n  |          stationnaire\n\n  | Mpor     : matrice globale de discretisation en VF pour le probleme\n  |          stationnaire\n  |                                                                 |\n  | Mchamt   : Coef permettant de calculer le flux total\n  |                                                                 |\n  | Mchamt1  : Coef permettant de calculer le flux diffusif\n  |                                                                 |\n  |                                                                 |\n  | TABMODI  : table contenant des logiques indiquant la necessite  |\n  |            ou non de reclalculer certains termes.               |\n  |            'POROSITE' : VRAI si le coefficient devant D/DT      |\n  |                         (porosite) est modifie depuis le dernier|\n  |                         appel                                   |\n  |            'DELTAT'   : VRAI si le pas de tps a change          |\n  |            'CONVECTI' : VRAI si la vitesse a change             |\n  |            'COEF_LIN' : VRAI si le coef en facteur de C a change|\n  |            'DIFFUSI'  : VRAI si les diffusivites ont change     |\n  |                                                                 |\n  | CHCLIM   : table d'indice 'NEUMANN' et 'DIRICHLET' contenant les|\n  |            Chpoint a n composantes contenant les conditions aux |\n  |            limites de Neumann et Dirichlet par espece.          |\n  |                                                                 |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         ENTREES-SORTIES                         |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  | Difftot  : Coefficient de diffusion totale, integre decentrement|\n  |                                                                 |\n  |                                                                 |\n  |-----------------------------------------------------------------|\n  |                         SORTIES                                 |\n  |-----------------------------------------------------------------|\n  |                                                                 |\n  |                                                                 |\n  | RESI     : second membre                                        |\n  |                                                                 |\n  | Matot    : matrice globale de discretisation en VF              |\n  |                                                                 |\n  | Difftot  : Coefficient de diffusion totale, integre decentrement|\n\n  | Mpor     : matrice globale de discretisation en VF pour le probleme\n  |          stationnaire\n  |                                                                 |\n  | Mchamt   : Coef permettant de calculer le flux total\n  |                                                                 |\n  | Mchamt1  : Coef permettant de calculer le flux diffusif\n  |                                                                 |\n  |                                                                 |\n  |-----------------------------------------------------------------|",
  },
  {
    name: "UTIL",
    url: "UTIL",
    documentation:
      "$$$$ UTIL     NOTICE  CHAT      11/09/12    21:18:28     7124           \n                                             DATE     11/09/12\n                  \n  Directive UTILISATEUR                    Voir aussi :\n    ---------------------                      \n      UTIL    MOT1  MONFICHIER  ;\n                       \n\n\n    Objet :\n    -------\n\n    La directive UTILISATEUR  permet de mettre au bon format un\nfichier personnel contenant soit des notices soit des procedures.\n    Le fichier MONFICHIER doit etre un fichier sequentiel formate\n(A80) avec en tete de chaque procedure (ou notice) la ligne (ecrite \nen colonne 1) :\n   \n   $$$$ NOMUTI    qui annonce la lecture de la procedure (ou de la \nnotice) de nom NOMUTI (NOMUTI doit etre ecrit en majuscule).\nLe fichier doit se terminer par une ligne ne contenant que les\nquatre dollars.\n     \n    Commentaire :\n    -------------\n    \n      MOT1 = 'NOTI'  si on veut declarer un fichier notices\n           = 'PROC'  si on veut declarer un fichier procedures\n\n\n      NOMFICHIER  est le nom du fichier utilisateur \n\n\n    En sortie :\n    -----------\n\n      Un fichier acces direct de nom UTILPROC ou UTILNOTI est cree,\nil sera automatiquement lu lors des executions suivantes du \nprogramme. De plus, si une \"procedure\" s'appelle INITIALE, elle sera \nexecutee au moment du chargement de castem2000.\n\n       Exemple de fichier utilisateur.\n\n    $$$$ MAPRO1\n    DEBPROC  MAPRO1 i*.....\n    .....\n    FINPROC  J...;\n    $$$$ MAPRO2\n    DEBPROC MAPRO2 ....\n    .....\n    FINPROC ....;\n    $$$$ TITIPRO\n    DEBPROC TITIPRO ....\n    ......\n    FINPRO .....;\n    $$$$ INITIALE\n    D= MOT 'DROITE' ; C = MOT 'CERC'; T = MOT 'TRACER';\n    OX=10000 ; OY = 20000 ; OZ = 30000;\n    $$$$\n\n ",
  },
  {
    name: "VALE",
    url: "VALE",
    documentation:
      "$$$$ VALE     NOTICE  BP208322  21/01/05    21:15:05     10842          \n                                             DATE     21/01/05\n\n    Operateur VALEUR                         Voir aussi : OPTI\n    ----------------                           \n    VAL1 = VALEUR MOT1 ;\n\n\n    Objet :\n    _______\n   -----------------\n   | 1ere fonction |\n   -----------------\n\n    L'operateur VALE sert a recuperer les valeurs affectees aux options\n    generales de calcul (ces valeurs ont ete soit affectees par\n    l'intermediaire de la directive OPTION, soit initialisees au debut\n    de l'execution).\n\n    Options possibles :\n    ___________________\n\n--------------------------------------------------------------------\n|mot-cle      | resultat(s) possible(s)    |     commentaire       |\n| MOT1        | VAL1                       |                       |\n|-------------|----------------------------|-----------------------|\n|'ACQU'       | numero unite logique       | fichier d'entree      |\n|             |                            |                       |\n|'ASSI'       | nombre d'assistants        | parall\u00e9lisme          |\n|             |                            |                       |\n|'CADR'       | FLOTTANT positif           | Cote du cadre (en cm) |\n|             |                            |                       |\n|'COSC'       |  NOIR,BLANC, JAUN          | Couleur fond d'ecran  |\n|             |                            |                       |\n|'COUL'       | DEFA,BLEU,ROUG,ROSE,JAUN,  | couleur pr\u00e9d\u00e9finie    |\n|             | VERT,TURQ,BLAN,NOIR,AZUR,  |                       |\n|             | ORAN,VIOL,OCEA,CYAN,OLIV,  |                       |\n|             | GRIS                       |                       |\n|             |                            |                       |\n|'DEBU'       |    0,1                     | en cas d'erreur, on ne!\n|             |                            | peut pas lister les   |\n|             |                            | objets internes \u00e0 la  |\n|             |                            | procedure             | \n|             |                            |                       |\n|'DENS'       |     FLOTTANT positif       | taille de maille par  |\n|             |                            | defaut (voir aussi    |\n|             |                            | notice DENS)          |\n|             |                            |                       |\n|'DIME'       | 0,1,2,3                    | dimension de l'espace |\n|             |                            |                       |\n|'DONN'       | numero unite logique       | cartes donnees        |\n|             |                            |                       |\n|'ECHO'       | 0,1,2                      | echo donnees          |\n|             |                            |                       |\n|'ELEM'       | POI1,SEG2,SEG3,TRI3,TRI6,  | element a fabriquer   |\n|             | QUA4,QUA8,RAC2,RAC3,CUB8,  |                       |\n|             | CU20,PRI6,PR15,PYR5,PY13,  |                       |\n|             | TET4,TE10                  |                       |\n|             |                            |                       |\n|'EPTR'       |    1,2,...,10              | \u00e9paisseur du trait    |\n|             |                            | pour le trac\u00e9         |\n|             |                            |                       |\n|'ERRE'       | 0,1,2,3                    | niveau max d'erreur   |\n|             |                            | permis                |\n|             |                            |                       |\n|'FTRA'       | cha\u00eene de caract\u00e8res       | Nom du fichier conte- |\n|             |                            | nant le trac\u00e9 de type |\n|             |                            | PostScript ou MIF     |\n|             |                            | (FrameMaker)          |\n|             |                            |                       |\n|'GRAN'       | FLOTTANT                   | Plus grande valeur    |\n|             |                            | dans Cast3M           |\n|             |                            | (System Dependant)    |\n|             |                            |                       |\n|'IMPI'       | 0,1,2                      | niveau de message     |\n|             |                            |                       |\n|'IMPR'       | numero unite logique       | imprimante            |\n|             |                            |                       |\n|'INCO'       |  LMOT1 LMOT2               | Noms des inconnues    |\n|             |                            | primales (LMOT1) et   |\n|             |                            | duales (LMOT2)        |\n|             |                            |                       |\n|'ISOV'       | LIGNE,SURFACE,SULI         | Type de trace des     |\n|             |                            | isovaleurs            |\n|             |                            |                       |\n|'LANG'       | FRAN,ANGL,...              | Langue pour la notice |\n|             |                            |                       |\n|'LECT'       | numero unite logique       | fichier d'entree      |\n|             |                            |                       |\n|'LOCA'       | VRAI,FAUX                  | creation d'une table  |\n|             |                            | &TOTO apres chaque    |\n|             |                            | appel de la procedure |\n|             |                            | TOTO contenant toutes |\n|             |                            | ses variables locales |\n|             |                            |                       |\n|'MODE'       | PLANCONT                   | modele de calcul      |\n|             | PLANDEFO                   |                       |\n|             | PLANGENE                   |                       |\n|             | AXIS                       |                       |\n|             | FOUR                       |                       |\n|             | TRID                       |                       |\n|             | UNIDPLANDYDZ               |                       |\n|             | UNIDPLANDYCZ               |                       |\n|             | UNIDPLANCYDZ               |                       |\n|             | UNIDPLANCYCZ               |                       |\n|             | UNIDPLANGYDZ               |                       |\n|             | UNIDPLANGYCZ               |                       |\n|             | UNIDPLANDYGZ               |                       |\n|             | UNIDPLANCYGZ               |                       |\n|             | UNIDPLANGYGZ               |                       |\n|             | UNIDAXISAXDZ               |                       |\n|             | UNIDAXISAXCZ               |                       |\n|             | UNIDAXISAXGZ               |                       |\n|             | UNIDSPHE                   |                       |\n|             | FREQ                       |                       |\n|             |                            |                       |\n|'MODE' 'FOUR'| nn                         | Harmonique de Fourier |\n|             |                            |                       |\n|'NAVI'       | LICE,LIMS,LBMS,MCCE,MCP1,  | D\u00e9finition du couple  |\n|             | MCMS,QFCE,QFP1,QFMS        | vitesse/pression dans |\n|             |                            | le cadre NavierStokes |\n|             |                            |                       |\n|'NBP'        | ENTIER positif ou nul      | Impose le nombre de   |\n|             |                            | points                |\n|             |                            |                       |\n|'NGMA'       | ENTIER positif (VAR NGMAXY)| Nb de mots ( matrice )|\n|             |                            |                       |\n|'NIVE'       |    0...19                  | Niveau des sorties    |\n|             |                            |                       |\n|'OEIL'       | POINT                      |Point de vu courant    |\n|             |                            |                       |\n|'OMBR'       | VRAI,FAUX                  |Ombrage des traces FACE|\n|             |                            |                       |\n|'PARA'       | VRAI,FAUX                  | Gibiane parall\u00e8le     |\n|             |                            |                       |\n|'PETI'       | FLOTTANT                   | Plus petite valeur non|\n|             |                            | nulle dans Cast3M     |\n|             |                            | (System Dependant)    |\n|             |                            |                       |\n|'PLAC'       | Entier positif             | Place memoire libre   |\n|             |                            | minimale a respecter  |\n|             |                            |                       |\n|'POLI'       |8_BY_13,9_BY_15,TIMES_10,   | choix de la police    |\n|             |TIMES__24,HELV_10,HELV_12,  | pour dessins et traces|\n|             |HELV_18                     |                       |\n|             |                            |                       |\n|'POTR'       | COURIER_N, HELVETICA_N     |   choix de la police  |\n|             | ou TIMES_N                 | pour dessins et traces|\n|             | avec N=12,14,16 ou 18      | postscript (PS et PSC)|\n|             |                            |                       |\n|'PREC'       | FLOTTANT                   | Precision des         |\n|             |                            | operations sur les    |\n|             |                            | FLOTTANTS             |\n|             |                            | (System Dependant)    |\n|             |                            |                       |\n|'RESO'       | 'DIRECTE' ou  'ITERATIVE'  | M\u00e9thode de r\u00e9solution |\n|             |                            |                       |\n|'REST'       | numero unite logique       | fichier d'entree      |\n|             |                            |                       |\n|'SAUV'       | numero unite logique       | fichier de sortie     |\n|             |                            |                       |\n|'SOUC'       | Entier positif ou nul      | souci courant         |\n|             |                            |                       |\n|'SORT'       | numero unite logique       | fichier de sortie     |\n|             |                            |                       |\n|'TRAC'       | BENS,IBM,GKS,PHIG,X,PS,    | unite de sortie       |\n|             | MIF,PSC,OPEN               | graphique             |\n|             |                            |                       |\n|'VERI'       | 0,1                        | Trace des operateurs  |\n|             |                            |                       |\n|'ZERO'       | ENTIER positif             | Nombre de zeros       |\n|             |                            | consecutifs a prendre |\n|             |                            | en compte (RESOLUTION)|\n|-------------|----------------------------|-----------------------|\n\n   -----------------\n   | 2eme fonction |\n   -----------------\n    Suivi du mot clef 'POIN' (teur), l'operateur VALE permet de recuperer les\n    pointeurs des segments Esope stockant les objets donn\u00e9s en argument.\n    (Peut etre utilise avec la directive OPTI 'SURV')\n\n      ENT1 ENT2 ... ENTi = VALE 'POIN' OBJ1 OBJ2 ...OBJi;\n\n    Note: Les objets de types LOGIQUE, FLOTTANT, ENTIER et MOT ne sont pas\n    stock\u00e9s dans des segments Esope. L'op\u00e9rateur renvoit alors la valeur -3 pour\n    ce type d'objet.",
  },
  {
    name: "VALNOM",
    url: "VALNOM",
    documentation:
      "$$$$ VALNOM   NOTICE  MB234859  17/10/02    21:15:28     9577           \n                                             DATE     17/10/02\n\n    Procedure VALNOM                         voir aussi : RESPOWNS VALSPE\n    ----------------                                      RECOMPOM\n\n    FLOT1_R LREEL1_O = VALNOM LREEL2_S FLOT1_DT;\n\n\n\n    objet :\n    _______\n\n    A partir de la donnee d'un spectre stationnaire LREEL2_S associe\n    a un calcul en ondelette (voir e.g. RESPOWNS et VALSPE) et du pas\n    de temps FLOT1_DT du residu, on calcul la ponderation LREEL1_O des\n    coefficients en ondelettes et FLOT1_R du residu. Cette procedure\n    permet une generation du signal a l'aide de RECOMPOM.",
  },
  {
    name: "VALP",
    url: "VALP",
    documentation:
      "$$$$ VALP     NOTICE  CHAT      11/09/12    21:18:29     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur VALPROPRE                      Voir aussi :\n    -------------------  \n    LREEL1 = VALPROPRE  LREEL2 LREEL3 ('ITERATION' N1)  ...\n\n                                          |'ABSOLU' |\n                                    ... ( |         | FLOT1 ) ;\n                                          |'RELATIF'|\n\n\n    Objet :\n    _______\n\n    L'operateur VALPROPRE calcule les valeurs propres d'une matrice\ntridiagonale de la forme:\n\n    | A1   1   0   0   0   0 |\n    | B1  A2   1   0   0   0 |\n    |  0  B2  A3   1   0   0 |\n    |  0   0  B3  A4   1   0 |\n    |  0   0   0  B4  A5   1 |\n    |  0   0   0   0  B5  A6 |\n\n\n    Commentaire :\n    _____________\n\n    LREEL2  : termes de la diagonale de la matrice (type LISTREEL)\n\n    LREEL3  : termes de la sous-diagonale de la matrice (type LISTREEL)\n\n    N1      : nombre maximum d'iterations permis dans les calculs\n              (type ENTIER)\n\n    FLOT1   : precision absolue ou relative de convergence\n              (type FLOTTANT)\n\n    LREEL1  : liste des valeurs propres, dans l'ordre de calcul\n              (type LISTREEL)",
  },
  {
    name: "VALSPE",
    url: "VALSPE",
    documentation:
      "$$$$ VALSPE   NOTICE  MB234859  17/10/02    21:15:29     9577           \n                                             DATE     17/10/02\n\n    Procedure VALSPE                         voir aussi : NORMALIM\n    ----------------                                      COURSPEC\n\n    LREEL1_S= VALSPE FLOT1_R LREEL2_O FLOT1_DT;\n\n\n    objet :\n    _______\n\n    A partir de la donnee de la ponderation LREEL1_O des coefficients\n    en ondelettes et FLOT1_R du residu (e.g. via NORMALIM) ainsi que\n    le pas de temps FLOT1_DT du residu, on calcule le spectre\n    stationnaire LREEL1_S. Cette procedure permet e.g. un trace\n    a l'aide de COURSPEC.",
  },
  {
    name: "VAPDIF",
    url: "VAPDIF",
    documentation:
      "$$$$ VAPDIF   NOTICE  CHAT      11/09/12    21:18:29     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure VAPDIF                         Voir aussi :\n    ----------------  \n    DV = VAPDIF PM TM YV YH2 YHE YO2 YN2 YCO2 YCO ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n  Procedure donnant le coefficient de diffusion de la vapeur dans le\n  melange\n\n\n    Commentaires\n    ____________\n\n      PM   : Pression totale (Pa)\n      TM   : Temperature du melange (K)\n      YV   : Fraction massique de vapeur\n      YH2  : Fraction massique de hydrogene\n      YHE  : Fraction massique de helium\n      YO2  : Fraction massique de oxygene\n      YN2  : Fraction massique de azote\n      YCO2 : Fraction massique de CO2\n      YCO  : Fraction massique de CO\n\n      DV   : coefficient de diffusion en m2/s",
  },
  {
    name: "VARI",
    url: "VARI",
    documentation:
      "$$$$ VARI     NOTICE  SERRE     16/07/20    21:15:09     9017           \n                                             DATE     16/07/20\n                                             \n  Operateur VARI                           Voir aussi :\n    --------------  \n\n    --------------------\n    | 1ere possibilite |\n    --------------------\n\n    Objet :\n    _______\n\n    L'operateur VARI calcule un champ variable a partir d'un champ\ndonne et d'une loi de variation donnee sous la forme d'une fonction.\n\n      CHEL2 = VARI  | MODL1 CHEL1 EVOL1 |  (MOT1) ;\n                    | MODL1 CHPO1 EVOL1 |\n      ou\n\n      CHPO2 = VARI CHPO1 EVOL1 (MOT2) ;\n\n      Commentaire :\n      _____________\n\n\n      MODL1  : Objet modele (type MMODEL)\n\n      CHEL1  : Champ donne (type MCHAML)\n               S'il a plusieurs composantes, on prend celle dont le nom\n               est en abscisse de la loi de variation.\n\n      CHPO1  : Champ donne (type CHPOINT)\n               S'il a plusieurs composantes, on prend celle dont le nom\n               est en abscisse de la loi de variation.\n\n      EVOL1  : Objet definissant la loi de variation (type EVOLUTION)\n\n      MOT1   : Objet de type MOT, sur 8 caracteres, servant a preciser\n               le support du champ scalaire. Les noms possibles sont :\n\n               'NOEUD   '  : Scalaire aux noeuds\n\n               'GRAVITE '  : Scalaire au centre de gravite\n\n               'RIGIDITE'  : Scalaire aux points d'integration de la\n                             raideur\n\n               'MASSE   '  : Scalaire aux points d'integration de la\n                             masse\n\n               'STRESSES'  : Scalaire aux points de calcul des\n                             contrainte\n\n               Le nom pris par defaut est 'RIGIDITE'.\n\n      MOT2   : nom a attribuer a la composante du champ par point\n               resultat. Par defaut, on prend le nom en ordonnee de la loi\n               de variation.\n\n      CHPO2  : champ par points (type CHPOINT) a une seule composante\n               de meme nature que CHPO1.\n\n      CHEL2  : objet resultat (type MCHAML, de sous-type SCALAIRE).\n\n    --------------------\n    | 2eme possibilite |\n    --------------------\n\n    Objet :\n    _______\n\n    La valeur de certaines composantes d'un champ/element (ex :\n    les proprietes materielles) depend en un point d'un parametre\n    (ex : la temperature). Les lois de variation de ces composantes \n    en fonction de leur parametre respectif sont donnees par des\n    objets de type EVOLUTION ou NUAGE (FLOTTANT - EVOLUTION ou \n    FLOTTANT-FLOTTANT-EVOLUTION). \n    (note : operateur MATE accepte les objets de ces types).\n    Etant donne un champ/point ou un champ/element, l'operateur VARI\n    determine la valeur des composantes du champ/element selon leurs\n    lois de variation en chaque point.\n    Remarque 1 :  Le parametre sus-cite peut varier d'un point a \n                  l'autre du champ/element .\n    Remarque 2 : Dans le cas d'un nuage sous la forme \n                 FLOTTANT-FLOTTANT-EVOLUTION, il est necessaire que le\n                 nuage soit defini sous la forme d'une grille (memes\n                 valeurs donnees au deuxieme FLOTTANT pour chaque \n                 valeur du premier FLOTTANT)\n\n\n    Extension : evaluation externe de composantes\n    ---------\n    La valeur de certaines composantes d'un champ/element (ex : les\n    proprietes materielles) depend en un point d'un ou de plusieurs\n    parametres.\n    Ces composantes sont decrites par des objets LISTMOTS donnant les\n    listes de leurs parametres respectifs.\n    (note : operateur MATE accepte les objets de type LISTMOTS)\n    Les lois de variation de ces composantes en fonction de leurs\n    parametres sont programmees par l'utilisateur dans le module\n    externe COMPUT et ses dependances, qui ont ete compiles et lies\n    au reste du code.\n    Etant donne un champ/point ou un champ/element donnant les valeurs\n    des parametres, l'operateur VARI appelle le module externe COMPUT\n    pour evaluer les composantes en chaque noeud ou point d'integration\n    du support demande.\n\n    Remarque 1 : la description d'une composante par un objet LISTMOTS\n    doit etre uniforme sur toutes les sous-zones du modele, car la\n    fonction externe evaluant la composante est unique.\n\n    Remarque 2 : le module externe COMPUT est appele pour TOUTES les\n    composantes devant etre evaluees par des fonctions externes.\n    La programmation de l'utilisateur doit faire la distinction des\n    composantes par leur nom.\n\n    Remarque 3 : avant l'evaluation de chaque composante, un premier\n    appel au module externe COMPUT est effectue, afin de verifier la\n    coherence entre la description de la composante et la programmation\n    du module externe : meme nombre de parametres et memes noms de\n    parametres. Apres cette verification, le module COMPUT est appele\n    pour evaluer la composante en chaque point du support demande.\n\n    Remarque 4 : mode operatoire\n    1 - Programmer le module externe COMPUT et ses dependances :\n        - Reprendre le module exemple integre au code.\n          Il faut conserver imperativement la premiere carte du module\n          exemple pour assurer le succes de la compilation.\n        - Respecter l'interface d'appel de la routine.\n        - Prevoir une sequence de verification initiale dissociee des\n          operations d'evaluation.\n    2 - Compiler le module externe et ses dependances, puis edition de\n        liens avec le reste du code.\n    3 - Mise en oeuvre en langage Gibiane en respectant la syntaxe\n        decrite ci-apres.\n\n    Remarque 5 : interface du module externe COMPUT\n\n      SUBROUTINE COMPUT(IVERI,NOMCMP,NOMPAR,VALPAR,NPARA,VALCMP,IERUT)\n      IMPLICIT REAL*8(A-H,O-Z)\n\n      INTEGER      IVERI, NPARA, IERUT\n      CHARACTER*4  NOMCMP, NOMPAR(NPARA)\n      REAL*8       VALPAR(NPARA), VALCMP\n\n      ENTREE : IVERI  : INTEGER, indicateur de verification\n                        IVERI=1 : On fait les verifications puis\n                                  retour a l'appelant sans faire\n                                  de calcul\n                        IVERI=0 : On ne fait pas les verifications\n                                  On calcule directement la composante\n                                  demandee\n      ENTREE : NOMCMP : CHARACTER*4, nom de la composante a evaluer\n      ENTREE : NOMPAR : CHARACTER*4(NPARA), noms des parametres\n      ENTREE : VALPAR : REAL*8(NPARA), valeurs des parametres\n      ENTREE : NPARA  : INTEGER, nombre de parametres\n      SORTIE : VALCMP : REAL*8, valeur de la composante\n      SORTIE : IERUT  : INTEGER, code retour\n                        IERUT= 0 : OK\n                        IERUT<>0 : NOOK\n                        Les cas d'erreur pris en charge par la\n                        programmation de l'utilisateur doivent\n                        faire l'objet d'une affectation de IERUT\n                        differente de 0\n\n    CHEL2 = VARI 'NUAG' MODL1 CHEL1 CHEP1 (MOT1) (MOT2);\n\n      Commentaire :\n      _____________\n\n      NUAG   : Mot cle\n\n      MODL1  : Objet modele (type MMODEL)\n\n      CHEL1  : Champ donne (type MCHAML). Ses composantes peuvent etre\n               des objets de type\n               1) FLOTTANT si la composante est constant sur toute\n                  la structure;\n               2) EVOLUTIO si la composante en ce point depend du\n                  parametre cite en haut;\n               3) NUAGE si la composante elle-meme est decrite par\n                  un objet de type EVOLUTIO qui est une fonction\n                  du parametre cite en haut.\n\n      CHEP1  : Champ donne (type CHPOINT ou MCHAML) ayant les\n               composantes necessaires au calcul\n\n      MOT1   : Objet de type MOT, sur 8 caracteres, servant a preciser\n               le support du champ scalaire. Les noms possibles sont :\n\n               'NOEUD   '  : Scalaire aux noeuds\n\n               'GRAVITE '  : Scalaire au centre de gravite\n\n               'RIGIDITE'  : Scalaire aux points d'integration de la\n                             raideur\n\n               'MASSE   '  : Scalaire aux points d'integration de la\n                             masse\n\n               'STRESSES'  : Scalaire aux points de calcul des\n                             contrainte\n\n               Le nom pris par defaut est 'RIGIDITE'.\n\n      MOT2   : Objet de type MOT servant a indiquer un sous-type \n               pour le MCHAML resultat. Par defaut, il aura le \n               meme sous-type que celui de MCHAML donne CHEL1. \n          \n      CHEL2  : objet resultat (type MCHAML, de meme sous-type que le \n               champ CHEL1).\n\n\n      REMARQUE :\n      __________\n\n      Si CHEP1 est de type MCHAML, il convient de respecter       \n      l'ordre d'ecriture des arguments.\n\n\n    --------------------\n    | 3eme possibilite |\n    --------------------\n\n    Objet :\n    _______\n\n    L'operateur VARI permet d'evaluer les tables de l'eau. Les objets\n  OBJi sont tous de meme type (FLOTTANT, CHPOINT ou LISTREEL).\n\n    OBJ3 = 'VARI' MOT1  OBJ1  OBJ2 ;\n\n    Commentaire :\n    _____________\n\n    1) OBJ3 = 'VARI' 'CPLIQ' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression totale (en Pa)\n            OBJ2 : Enthalpie liquide specifique (en J/kg)\n            OBJ3 : Capacite calorifique de l'eau liquide (en J/kg/K)\n\n    2) OBJ3 = 'VARI' 'HLS' OBJ1 (OBJ2) ;\n\n       avec OBJ1 : Pression totale (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Enthalpie liquide specifique (en J/kg)\n       Note : En absence de temperature, evaluation a saturation.\n\n    3) OBJ3 = 'VARI' 'HVS' OBJ1 (OBJ2) ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Enthalpie vapeur specifique (en J/kg)\n       Note : En absence de temperature, evaluation a saturation.\n\n    4) OBJ3 = 'VARI' 'LATENT' OBJ1 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ3 : Chaleur latente de vaporisation (en J/kg)\n\n    5) OBJ3 = 'VARI' 'PSATT' OBJ1 ;\n\n       avec OBJ1 : Temperature (en K)\n            OBJ3 : Pression partielle de vapeur a saturation (en Pa)\n\n    6) OBJ3 = 'VARI' 'TSATP' OBJ1 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ3 : Temperature a saturation (en K)\n\n    7) OBJ3 = 'VARI' 'PVAP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Densite de vapeur (en kg/m3)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Pression partielle de vapeur (en Pa)\n\n    8) OBJ3 = 'VARI' 'ROLIQ' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression de l'enceinte (en Pa)\n            OBJ2 : Enthalpie liquide specifique (en J/kg)\n            OBJ3 : Densite de l'eau liquide (en kg/m3)\n\n    9) OBJ3 = 'VARI' 'ROVAP' OBJ1 (OBJ2) ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Densite de la vapeur d'eau (en kg/m3)\n       Note : En absence de temperature, evaluation a saturation.\n            \n   10) OBJ3 = 'VARI' 'TLIQ' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression totale (en Pa)\n            OBJ2 : Enthalpie liquide specifique (en J/kg)\n            OBJ3 : Temperature de l'eau liquide (en K)\n\n   11) OBJ3 = 'VARI' 'ZVAP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Densite de la vapeur d'eau (en kg/m3)\n            OBJ2 : Temperature de la vapeur d'eau (en K)\n            OBJ3 : Correction gaz reel de la vapeur (-)\n\n   12) OBJ3 = 'VARI' 'DHVDT' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature de la vapeur d'eau (en K)\n            OBJ3 : Derivee partielle de l'enthalpie vapeur par\n                   rapport a la temperature\n\n   13) OBJ3 = 'VARI' 'DHVDP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature de la vapeur d'eau (en K)\n            OBJ3 : Derivee partielle de l'enthalpie vapeur par\n                   rapport a la pression partielle de vapeur\n\n   14) OBJ3 = 'VARI' 'DHVDT' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression totale (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle de l'enthalpie liquide par\n                   rapport a la temperature\n\n   15) OBJ3 = 'VARI' 'DHLDP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression totale (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle de l'enthalpie liquide\n                   rapport a la pression totale\n\n   16) OBJ3 = 'VARI' 'DPSAT' OBJ1 ;\n\n       avec OBJ1 : Temperature (en K)\n            OBJ3 : Derivee partielle de la pression de saturation\n                   par rapport a la temperature\n\n   17) OBJ3 = 'VARI' 'DZVDP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle du facteur de compressibilite\n                   rapport a la pression partielle de vapeur\n\n   18) OBJ3 = 'VARI' 'DZVDT' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle du facteur de compressibilite\n                   rapport a la temperature\n\n   19) OBJ3 = 'VARI' 'DRVDP' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle de la densite de vapeur par\n                   rapport a la pression partielle de vapeur\n\n   20) OBJ3 = 'VARI' 'DRVDT' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression partielle de vapeur (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Derivee partielle de la densite de vapeur par\n                   rapport a la temperature\n\n   21) OBJ3 = 'VARI' 'MULIQ' OBJ1 ;\n\n       avec OBJ1 : Temperature (en K)\n            OBJ3 : Viscosit\u00e9 dynamique de l'eau (en kg/m/s)\n\n   22) OBJ3 = 'VARI' 'LBDALIQ' OBJ1 OBJ2 ;\n\n       avec OBJ1 : Pression (en Pa)\n            OBJ2 : Temperature (en K)\n            OBJ3 : Conductivit\u00e9 thermique de l'eau (en W/m/K)",
  },
  {
    name: "VARIHC",
    url: "VARIHC",
    documentation:
      "$$$$ VARIHC   NOTICE  BR232186  16/12/05    22:04:40     9238           \n                                             DATE     16/12/05\n\n\n    Procedure VARIHC   \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle cree un champ \n    par element permettant d assurer la continuite du trajet de \n    fissuration dans le cas d un probleme resolu par la methode\n    E-FEM. La continuite est assuree en resolvant un probleme \n    de convection-diffusion a la fin de chaque pas de temps. \n    La diffusion est consideree comme isotrope.\n        \n    ",
  },
  {
    name: "VARIHCSU",
    url: "VARIHCSU",
    documentation:
      "$$$$ VARIHCSU NOTICE  BR232186  16/12/05    22:04:41     9238           \n                                             DATE     16/12/05\n\n\n    Procedure VARIHCSU  \n    ------------------\n\n\n \n    Cette procedure est appelee par PASAPAS, elle cree un champ \n    par element permettant d assurer la continuite du trajet de \n    fissuration dans le cas d un probleme resolu par la methode\n    E-FEM. La continuite est assuree en resolvant un probleme \n    de convection-diffusion a la fin de chaque pas de temps. \n    La diffusion est consideree comme anisotrope.\n        \n    ",
  },
  {
    name: "VECT",
    url: "VECT",
    documentation:
      "$$$$ VECT     NOTICE  FD218221  16/01/08    21:15:15     8773           \n                                             DATE     16/01/08\n                                             \n  Operateur VECTEUR                        Voir aussi :\n    -----------------  \n    VEC1 = VECT | CHPO1 (FLOT1) (|    'DEPL'  |  'FORC'   |)  (COUL1);\n                |               (|         LMOT1          |)\n                |               (| MOT1 MOT2 (MOT3 si 3D) |)\n                |\n                | CHAM1 (CHAM2) MOD1 (FLOT1) (MOCOMP1)        (LISMO1);\n                |\n                | CHAM1 (CHAM2) MOD1 (FLOT1)   LCOMP1         (LISMO1);\n\n\n    Objet :\n    _______\n\n    L'operateur VECT construit un objet de type VECTEUR a partir :\n       - des composantes d'un champ par point de vecteurs (syntaxe 1),\n       - d'un champ par elements de contraintes principales (syntaxe 2),\n       - d'un champ par elements de variables internes (syntaxe 2),\n       - d'un champ par elements autre (syntaxe 3).\n\n    Commentaire :\n    _____________\n\n    VEC1   : vecteur resultat (type VECTEUR)   \n\n    Syntaxe n\u00b01 :\n    \n      CHPO1  : champ de vecteurs (type CHPOINT)\n\n      FLOT1  : coefficient d'amplification (type FLOTTANT)\n               Si il est positif le trace se fera sous formes de fleches\n               originaire des points.\n               Si il est negatif, le trace se fera sous forme de fleches\n               pointant vers les points\n               Si il est omis, il sera automatiquement calcule.\n\n      'DEPL' | : mot-cle designant les composantes de deplacement\n      'FORC' |   ou de force         \n\n      MOT1 | : noms des composantes du champ associees aux directions Ox\n      MOT2 |   Oy (et eventuellement Oz en 3D) (type MOT)\n      MOT3 |\n\n      LMOT1  : idem MOT1, MOT2...\n\n      COUL1  : couleur attribuee au vecteur VEC1 (type MOT)\n\n    Syntaxe n\u00b02 :\n\n      CHAM1   : champ par elements (type MCHAML, sous-type \n                CONTRAINTES PRINCIPALES ou VARIABLES INTERNES)\n\n      CHAM2   : champ par elements optionnel (type MCHAML, sous-type \n                CARACTERISTIQUES)         \n\n      MOD1    : objet modele (type MMODEL)\n\n      FLOT1   : coefficient d'amplification (type FLOTTANT)\n\n      MOCOMP1 : si on ne souhaite conserver qu'une seule composante, \n                nom de cette composante (type MOT)\n\n      LISMO1  : liste des couleurs affectees aux composantes\n                (type LISTMOTS)\n                \n    Syntaxe n\u00b03 :\n\n      CHAM1   : champ par elements (type MCHAML, de sous-type diff\u00e9rent\n                de CONTRAINTES PRINCIPALES et VARIABLES INTERNES)\n\n      CHAM2   : champ par elements (type MCHAML, de sous-type\n                CARACTERISTIQUES) des caracteristiques geometriques\n                (necessaire uniquement pour les coques epaisses)\n\n      MOD1    : objet modele (type MMODEL)\n\n      FLOT1   : coefficient d'amplification (type FLOTTANT)\n\n      LCOMP1 : noms des composantes obligatoires constituant le vecteur \n               (type LISTMOT)\n\n      LISMO1  : liste des couleurs affectees aux composantes\n                (type LISTMOTS)\n\n    Remarques :\n    ___________\n\n    Le vecteur VEC1 peut etre visualise par la directive TRACER.\n\n    Il apparaitra avec l'amplification FLOT1 et la couleur COUL1 dans le \n    premier cas ; avec l'amplification FLOT1 et les couleurs donnees\n    dans LISMO1 dans le second cas.\n\n    Il est possible, dans le but d'obtenir plusieurs traces de vecteurs\n    sur le meme graphique, d'appliquer l'operateur ET entre des objets\n    de type VECTEUR.\n\n    Le MCHAML de VARIABLES INTERNES est normalement issu de la\n    procedure PASAPAS et est destine a la visualisation des fissures\n    avec la directive TRACER. En 2D ( ou element de coque ) le trait\n    dessine represente la fissure, tandis qu'en 3D il est\n    perpendiculaire au plan de la fissure.\n\n    Exemple d'application :\n    _______________________\n\n    Visualisation du champ de reactions a des blocages :\n\n           RITOT = RIGID ET BLOQ ;\n           DEP   = RESOU RITOT FORCES;\n           REA   = REACT DEP RITOT;\n           VEC   = VECTEUR  REA 15. FX FY FZ  ROUG;\n           TRAC OEIL S VEC ;",
  },
  {
    name: "VENV",
    url: "VENV",
    documentation:
      "$$$$ VENV     NOTICE  CHAT      11/09/12    21:18:30     7124           \n                                             DATE     11/09/12\n\n  Operateur VENV                          Voir aussi : \n    --------------  \n\n    MOT2  =  'VENV'  MOT1  ;\n\n\n\n    Objet :\n    _______\n\n    L'operateur VENV recupere, dans MOT2, la valeur de la variable \n    d'environnement de nom MOT1.\n\n\n    Commentaire :\n    _____________\n\n\n    MOT1  :  Chaine de caracteres (de type MOT) correspondant au nom de la\n             variable d'environnement (variable systeme) a lire.\n             Cette chaine ne doit pas compter plus de 256 caracteres.\n\n    MOT2  :  Chaine de caracteres (de type MOT) contenant la valeur de la\n             variable de nom MOT1 lue. Dans le cas ou la variable n'est pas\n             definie, MOT2 contient le MOT ' ' (un seul espace).\n\n\n    Remarques :\n    ___________\n\n    Tous les espaces sont ignores lors de la lecture du nom de la variable MOT1.\n\n    \"'VENV' 'USER' ;\" et \"'VENV' '  U S  ER  ' ;\" conduisent au meme resultat\n    (par exemple, root).\n\n    Les noms de variables acceptes sont composes de lettres majuscules et/ou\n    minuscules, de chiffres et du caractere souligne \"_\", les chiffres etant\n    interdits en premier caractere.",
  },
  {
    name: "VERI",
    url: "VERI",
    documentation:
      "$$$$ VERI     NOTICE  GOUNAND   17/12/07    21:15:17     9650           \n                                             DATE     17/12/07\n    Operateur VERI                           Voir aussi : VERM\n    --------------                                          \n    LOG1 = 'VERI' | FLOT1 | ;\n                  | CHPO1 |\n    \n    Objet :\n    _______\n\n    L'operateur VERI verifie qu'un nombre FLOTTANT FLOT1 est un reel.\n    Il peut aussi verifier que les valeurs d'un CHPOINT CHPO1 sont\n    reelles.\n\n    Il rend le LOGIQUE LOG1 egal a VRAI si oui et FAUX si non.\n\n    Remarque :\n    __________\n    \n      INF et NAN ne sont pas des reels.",
  },
  {
    name: "VERM",
    url: "VERM",
    documentation:
      "$$$$ VERM     NOTICE  GOUNAND   17/12/07    21:15:17     9650           \n                                             DATE     17/12/07\n    Directive VERM                           Voir aussi : VERI\n    --------------                                          \n        VERM  GEO1 ;\n\n    Objet :\n    _______\n\n    La directive VERM verifie le maillage GEO1 constitue d'elements\n    massifs. Les verifications sont de deux types.\n\n    - verifie qu'une meme maille n'apparait pas plusieurs fois dans\n      une meme sous-zone.\n\n    - verifie qu'il n'y a pas d'elements de degre un accole a un\n      element de degre 2,\n\n    - verifie que la continuite des elements massifs 3D est bien\n      assuree par des faces de meme types.\n\n    Pour aider l'utilisateur des points et des mailles nommees sont\n    crees, de noms NODEXX et MESHXX ou XX vaut 1,2,3,...\n\n    Des messages d'avertissements sont emis.",
  },
  {
    name: "VERS",
    url: "VERS",
    documentation:
      "$$$$ VERS     NOTICE  CHAT      11/09/12    21:18:31     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur VERSENS                        Voir aussi :\n    -----------------  \n    GEO2 = VERSENS  GEO1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur VERSENS est l'operateur identite sur le objet GEO1 (type\nMAILLAGE). Toutefois, il produit une erreur si dans GEO1 deux elements\njointifs sont orientes en sens opposes.",
  },
  {
    name: "VERTYTAB",
    url: "VERTYTAB",
    documentation:
      "$$$$ VERTYTAB NOTICE  CHAT      11/09/12    21:18:31     7124           \n                                             DATE     11/09/12\n                                                                                \n  Procedure VERTYTAB                       Voir aussi :\n    ------------------  \n    VERTYTAB OBJ1 ENTREE TYPE ;\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n La procedure VERTYTAB verifie l'existence et le type d'une entree\n dans une table. Si OBJ1.ENTREE n'existe pas ou n'est pas du type TYPE\n un message d'erreur est edite.\n\n    Commentaires\n    ____________\n\n    OBJ1     : Objet de type TABLE\n    ENTREE   : Objet de type MOT    indice de la table dont on teste\n                                    l'existence\n    TYPE     : Objet de type MOT    type attendu pour OBJ1.ENTREE",
  },
  {
    name: "VIBC",
    url: "VIBC",
    documentation:
      "$$$$ VIBC     NOTICE  BP208322  20/02/20    21:15:02     10528          \n                                             DATE     20/02/20\n                                             \n    Operateur VIBC                           Voir aussi : VIBR PJBA\n    --------------  \n    --------------------\n    | 1ere possibilite |\n    --------------------\n    \n      BAS2 = VIBC  MASS1 RIG1 (AMOR1) (BAS1)  (ENT1);\n\n\n\n    Objet :\n    _______\n\n    L'operateur VIBC recherche les valeurs propres complexes w (en Hz)\n    et les vecteurs propres complexes X solutions de l'equation \n    fondamentale de la dynamique :\n                        M q'' + C q' + K q = 0\n                 avec   q(t) = X exp(i*2*pi*w*t)\n                 \n    Il resoud donc :\n              [K + (i*2*pi*w)*C - (2*pi*w)**2 M] X = 0\n    et fournit :\n              X = X  + i X       et    w = w  + i w\n                   R      I                 R      I\n                   \n    L'algorithme utilise est le QZ, ce qui implique que la taille du \n    probleme doit etre petite (on utilise generalement les matrices K, \n    C et M projetees sur la base de modes reels obtenue avec VIBR).\n\n    Commentaire :\n    _____________\n\n    MASS1        : matrice de masse\n                   (type RIGIDITE, sous-type MASSE)\n\n    RIG1         : matrice de rigidite\n                   (type RIGIDITE, sous-type RIGIDITE)\n\n    AMOR1        : matrice d'amortissement\n                   (type RIGIDITE, sous-type AMORTISSEMENT)\n\n    Si le type des matrices correspond a MASSE, RIGIDITE et AMORTISSE-\n    -MENT (dans le cas ou cette derniere est specifiee), elles sont \n    triees et leur ordre d'entree n'a pas d'importance. Sinon elles sont \n    traitees selon leur ordre d'entree.\n\n\n    BAS1         : base de modes reels, sur laquelle les matrices ont \n                   ete eventuellement projetees (type TABLE, sous-type \n                   BASEMODA). Sa specification permet la restitution  \n                   d'une base de modes complexes physique.\n                   \n    ENT1         : entier specifiant le nombre de couple de modes \n                   complexes de plus bas module a sortir. Par defaut,\n                   tous sont fournis en sortie.\n\n    BAS2         : objet resultat contenant les valeurs et les vecteurs\n                   propres complexes (type TABLE, sous-type BASEMODA).\n\nREMARQUE : structure de BAS2 (objet de type TABLE)\n_________  \n\n           \n           BAS2.'SOUSTYPE'    = 'BASE_MODALE'\n           BAS2.'MODES'       = TAB2  \n           BAS2.'CONVERGENCE' = LOGIQ1  \n\n           TAB2.'SOUSTYPE'    = 'BASE_DE_MODES'\n           TAB2.'MAILLAGE'    = MAIL1\n           TAB2.IMOD          = TAB3 (objet de type TABLE)\n\n           TAB3.'SOUSTYPE'      = 'MODE_COMPLEXE'\n           TAB3.'POINT_REPERE'  = PT1\n           TAB3.'NUMERO_MODE'   = NUMOD\n           TAB3.'FREQUENCE_REELLE'      = FLOT1\n           TAB3.'FREQUENCE_IMAGINAIRE'  = FLOT2\n           TAB3.'DEFORMEE_MODALE_REELLE'     = CH1\n           TAB3.'DEFORMEE_MODALE_IMAGINAIRE' = CH2\n\n\n      MAIL1 : support geometrique des modes (type MAILLAGE)\n      \n      IMOD  : nombre variant de 1 au nombre de modes calcules (ENTIER) \n      \n      PT1   : point servant a reperer le mode (POINT)\n      \n      NUMOD : numero du mode (ENTIER)\n \n      FLOT1 : partie reelle de la frequence propre (FLOTTANT)\n      FLOT2 : partie imaginaire de la frequence propre (FLOTTANT)\n\n      CH1   : partie reelle du vecteur propre (CHPOINT)\n      CH2   : partie imaginaire du vecteur propre (CHPOINT)\n      \n      LOGIQ1 : logique indiquant si VIBC a converge\n\n\n    --------------------\n    | 2eme possibilite |\n    --------------------\n\n    \n      BAS2 = VIBC  RIG1 RIG2 RIG3 RIG4 ;\n      \n\n\n    Objet :\n    _______\n\n    L'operateur VIBC recherche les valeurs propres complexes \n    de la matrice de monodromie A :\n          [ A - \\lambda I ] . X = 0\n    A est fournie sous la forme de 4 RIGIDITEs elementaires :\n          A = [ RIG1  RIG2 ] \n              [ RIG3  RIG4 ]\n    L'algorithme utilise est le QZ, ce qui implique que la taille du \n    probleme est censee etre petite.\n\n    Commentaire :\n    _____________\n\n    RIG1,2,3 et 4 : matrice de rigidite projetee\n                   (type RIGIDITE, sous-type indifferent)\n\n    BAS2  : objet TABLE resultat contenant les valeurs propres\n         ",
  },
  {
    name: "VIBR",
    url: "VIBR",
    documentation:
      "$$$$ VIBR     NOTICE  BP208322  21/01/05    21:15:05     10842          \n                                             DATE     21/01/05\n                                             \n    Operateur VIBRATION                      Voir aussi : VIBC DIAG\n    -------------------  \n                      |'PROCHE'     ... |\n    SOL1 = VIBRATION  |'INTERVALLE' ... |   RIG1 MASS1  (AMO1) ...\n                      |'SIMULTANE'  ... |\n                      |'IRAM'       ... |\n\n                       ...  ('IMPR')  (LOG1) ;\n                            \n\n    Objet :\n    _______\n\n    L'operateur VIBRATION recherche certaines valeurs propres w (en Hz)\n    et modes propres X d'un systeme physique represente par :\n    - sa rigidite K\n    - sa masse M\n    - son amortissement C (uniquement possible avec l'option IRAM)\n\n    Autrement dit, il resoud : \n      [K - (2*pi*w)**2 M] X = 0\n        ou \n      [K + (2*i*pi*w)*C - (2*pi*w)**2 M] X = 0\n\n\n    Commentaire :\n    _____________\n\n    SOL1         : objet resultat contenant les valeurs et les modes\n                   propres (de TYPE TABLE).\n                   \n    RIG1         : matrice de rigidite K du systeme physique\n                   (type RIGIDITE, sous-type RIGIDITE)\n\n    MASS1        : matrice de masse du M systeme physique\n                   (type RIGIDITE, sous-type MASSE)\n\n    AMO1         : matrice d'amortissement C du systeme physique\n                   (type RIGIDITE, sous-type AMORTISS)\n\n    'IMPR'       : mot-cle indiquant que l'on veut des impressions\n                   intermediaire\n\n    LOG1         : indique quel traitement adopter pour les valeurs \n                   propres negatives (type LOGIQUE, par defaut VRAI).\n                   - si VRAI, pour lambda = (2*pi*w)**2  negatif, \n                     la frequence propre retournee sera : \n                     sign(lambda)*|w|\n                   - si FAUX, la frequence retournee sera : |w|\n\n                   \n    Suivant le mot-cle ('PROCHE', 'INTERVALLE', 'SIMULTANE', ou 'IRAM'),\n    la recherche des modes propres est effectuee de plusieurs manieres :\n\n    \n    --------------------------------------------------------------------\n    |                1ere possibilite  :   'PROCHE'                    |\n    --------------------------------------------------------------------\n\n\n    SOL1 = VIBRATION 'PROCHE' LREEL1 ( LENTI1 ) RIG1 MASS1 ;\n\n    L'option 'PROCHE' correspond a la methode des iterations inverses\nsur sous-espace. Cet algorithme robuste peut s'averer couteux\nlorsqu'un tres grand nombre de modes est recherche.\n    Pour chaque reel FREQ de LREEL1 (type LISTREEL) et pour chaque\nentier N de LENTI1 ( type LISTENTI ) on recherche les N  modes propres\ndont les frequences sont les plus proches de FREQ. Les listes doivent\ndonc etre de meme taille !\n\n\n    --------------------------------------------------------------------\n    |              2eme possibilite  :   'INTERVALLE'                  |\n    --------------------------------------------------------------------\n\n                                               |'BASSE'|\n    SOL1 = VIBRATION 'INTERVALLE' FLOT1 FLOT2 (|       | N1) \n                                               |'HAUTE'|\n\n                                  RIG1  MASS1 ( 'MULT' )\n\n\n    L'option 'INTERVALLE' correspond a la methode de la bissection. Cet \nalgorithme se revele generalement tres couteux par rapport aux autres.\n    On recherche les modes propres dont les frequences sont contenues\ndans l'intervalle [FLOT1,FLOT2]. FLOT1 et FLOT2 sont de type FLOTTANT.\n    On peut limiter la recherche aux N1 (type ENTIER) plus basses\n(option 'BASSE') ou hautes (option 'HAUTE') frequences dans\nl'intervalle donne. Les modes multiples peuvent etre obtenus avec\nl'option 'MULT'.\n\n\n    --------------------------------------------------------------------\n    |              2eme possibilite  :   'SIMULTANE'                   |\n    --------------------------------------------------------------------\n\n    SOL1 = VIBRATION 'SIMULTANE' FLOT1 N1 RIG1 MASS1 ;\n\n    L'option 'SIMULTANE' correspond a la methode de Lanczos avec re-\northogonalisation. Cet algorithme est particulierement efficace \nlorsqu'un tres grand nombre de modes est recherche.\n    On recherche une serie de N1 (type ENTIER) modes propres dont les\nfrequences sont voisines d'une valeur FLOT1 (type FLOTTANT).\n\n             \n    --------------------------------------------------------------------\n    |                4eme possibilite  :   'IRAM'                      |\n    --------------------------------------------------------------------\n\n    SOL1 = VIBRATION 'IRAM' FLOT1 N1 RIG1 MASS1 (AMO1) (MOTRI);\n\n\n    L'option 'IRAM' correspond \u00e0 la m\u00e9thode d'Arnoldi avec red\u00e9marrage \nimplicite.\n\nLa librairie libre ARPACK (Copyright (c) 1996-2008 Rice University. \nDeveloped by D.C. Sorensen, R.B. Lehoucq, C. Yang, and K. Maschhoff. \nAll rights reserved.) est utilisee.\nCette derni\u00e8re utilise \u00e9galement les libraires LAPACK ET BLAS.\n\nElle permet de traiter diff\u00e9rents types de probl\u00e8mes :\n  - Hermitiens et non-Hermitiens\n  - Lin\u00e9aires ou quadratiques\n  \nOn recherche une serie de N1 (type ENTIER) modes propres dont les\nfrequences sont voisines d'une valeur FLOT1 (type FLOTTANT).\n\n\n    MOTRI : MOT correspondant \u00e0 l'option de tri utilis\u00e9e pour les  \n            valeurs propres. A choisir parmi :\n                  \n         'LM' - Extraction des modes avec les valeurs propres les plus \n         proches - en module - de du d\u00e9calage spectral (option par \n         d\u00e9faut)\n      \n         'SM' - Extraction des modes avec les valeurs propres les plus \n         \u00e9loign\u00e9es du d\u00e9calage spectral \n         \n         'LR' - Extraction des modes avec les valeurs propres \u00e0 la plus \n         grande partie r\u00e9\u00e9lle\n\n         'SR' - Extraction des modes avec les valeurs propres \u00e0 la plus \n         petite partie r\u00e9\u00e9lle\n      \n         'LI' - Extraction des modes avec les valeurs propres \u00e0 la plus \n         grande partie imaginaire\n         \n         'SI' - Extraction des modes avec les valeurs propres \u00e0 la plus \n          petite partie imaginaire\n         \n         'LA' - Extraction des modes avec les valeurs propres les plus \n          grandes (alg\u00e9brique)\n          \n         'SA' - Extraction des modes avec les valeurs propres les plus \n         petites (alg\u00e9brique)\n         \n         'BE' - Extraction des modes avec des valeurs propres de chaque \n          cot\u00e9 de la valeur de d\u00e9calage spectral\n        \n    \n \n \nREMARQUES:\n_________ \n\n  1. Les frequences seront calculees dans une unite coherente avec \n     celles utilisees pour le calcul des matrices en arguments de \n     VIBR.\n        \n  2. Structure de la table SOL1 en fonction de la nature (reelle ou\n     complexe) des modes propres :\n        \n  \n        ----------------------- PAIRES REELLES -----------------------\n\n        SOL1 objet de type TABLE\n        SOL1.'SOUSTYPE' = 'BASE_MODALE'\n        SOL1.'MODES' = TAB2  (objet de type TABLE)\n          TAB2.'SOUSTYPE' = 'BASE_DE_MODES'\n          TAB2.'MAILLAGE' = MAIL1\n            MAIL1 : support geometrique des modes (type MAILLAGE)\n          TAB2.IMOD = TAB3 (objet de type TABLE)\n            IMOD  : nombre (ENTIER) variant de 1 au nombre de modes\n                    calcules\n            TAB3.'SOUSTYPE' = 'MODE'\n            TAB3.'POINT_REPERE' = PT1\n               PT1   : POINT servant a reperer le  mode\n            TAB3.'NUMERO_MODE' = NUMOD\n               NUMOD : ENTIER numero du mode\n            TAB3.'FREQUENCE' = FLOT1\n               FLOT1 : FLOTTANT valeur de la frequence propre\n            TAB3.'MASSE_GENERALISEE' = FLOT2\n               FLOT2 : FLOTTANT valeur de la masse generalisee\n            TAB3.'DEFORMEE_MODALE' = CH1\n               CH1   : vecteur propre (CHPOINT)\n            TAB3.'DEPLACEMENTS_GENERALISES' = TAB4 (objet de type TABLE)\n               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'\n               TAB4.1 = FLOT3\n               TAB4.2 = FLOT4\n               TAB4.3 = FLOT5\n               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur du\n               deplacement generalise dans la direction X (resp. Y et Z)\n              \n\n        ----------------------- PAIRES COMPLEXES -----------------------\n           \n        SOL1 objet de type TABLE\n        SOL1.'SOUSTYPE' = 'BASE_MODALE'\n        SOL1.'MODES' = TAB2  (objet de type TABLE)\n          TAB2.'SOUSTYPE' = 'BASE_DE_MODES'\n          TAB2.'MAILLAGE' = MAIL1\n             MAIL1 : support geometrique des modes (type MAILLAGE)\n          TAB2.IMOD = TAB3 (objet de type TABLE)\n            IMOD  : nombre (ENTIER) variant de 1 au nombre de modes\n                    calcules\n            TAB3.'SOUSTYPE' = 'MODE'\n            TAB3.'POINT_REPERE' = PT1\n               PT1   : POINT servant a reperer le  mode\n            TAB3.'NUMERO_MODE' = NUMOD\n               NUMOD : ENTIER numero du mode\n            TAB3.'FREQUENCE_REELLE' = FLOT1\n               FLOT1 : FLOTTANT valeur de la partie reelle de la \n                       frequence propre\n            TAB3.'MASSE_GENERALISEE_REELLE' = FLOT2\n               FLOT2 : FLOTTANT valeur de la partie reelle de la masse \n                       generalisee\n            TAB3.'DEFORMEE_MODALE_REELLE' = CH1\n               CH1   : vecteur propre (CHPOINT)\n            TAB3.'DEPLACEMENTS_GENERALISES_REELS' = TAB4 (objet de type TABLE)\n               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'\n               TAB4.1 = FLOT3\n               TAB4.2 = FLOT4\n               TAB4.3 = FLOT5\n               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur de la \n                     partie reelle du deplacement generalise dans la \n                     direction X (resp. Y et Z)\n            TAB3.'FREQUENCE_IMAGINAIRE' = FLOT1\n               FLOT1 : FLOTTANT valeur de la partie imaginaire de la \n                       frequence propre\n            TAB3.'MASSE_GENERALISEE_IMAGINAIRE' = FLOT2\n               FLOT2 : FLOTTANT valeur de la partie imaginaire de la \n                       masse generalisee\n            TAB3.'DEFORMEE_MODALE_IMAGINAIRE' = CH1\n               CH1   : vecteur propre (CHPOINT)\n            TAB3.'DEPLACEMENTS_GENERALISES_IMAGINAIRES' = TAB4 (objet \n                                                          de type TABLE)\n               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'\n               TAB4.1 = FLOT3\n               TAB4.2 = FLOT4\n               TAB4.3 = FLOT5\n               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur de la \n                 partie imaginaire du deplacement generalise dans la \n                 direction X (resp. Y et Z)",
  },
  {
    name: "VIDE",
    url: "VIDE",
    documentation:
      "$$$$ VIDE     NOTICE  PASCAL    20/12/04    21:15:05     10803          \n                                             DATE     20/12/04\n\n    Operateur VIDE                         Voir aussi : ZERO, LECT, PROG\n    --------------                                      SUIT MOTS MANU  \n                                                        TABL  \n\n    Objet :\n    _______\n\n    L'op\u00e9rateur VIDE permet de cr\u00e9er un ou plusieurs objets vides\n    de types/sous-types donn\u00e9s.\n\n    L'op\u00e9rateur VIDE permet egalement de tester si un objet est vide.\n\n\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Creation d'un objet vide\n2. Test d'un objet\n\n  \n1. Creation d'un objet vide1 \n=========================== \n    Syntaxe :\n    _________\n\n    Deux possibilit\u00e9s pour r\u00e9cup\u00e9rer les objets vides cr\u00e9\u00e9s :\n\n\n      1) Objets s\u00e9par\u00e9s :\n\n        OBJ1,...,OBJn = VIDE [GROUPE1,...,GROUPEn]\n\n\n      2) Objets indic\u00e9s dans une table :\n\n        TAB1 = VIDE ('TABULER' ( |LENTI1| ) ) [GROUPE1,...,GROUPEn]\n                                 |LREEL1|\n                                 |LMOTS1|\n\n\n    Dans les deux cas, GROUPEi est de la forme :\n\n                         MOTAi(/MOTBi)(*ENTIi)\n\n\n\n   Commentaires :\n   ______________\n\n   1) La cr\u00e9ation d'objets vides peut \u00eatre int\u00e9ressante lorsqu'il s'agit\n      de construire des objets par it\u00e9rations successives.\n      L'op\u00e9rateur VIDE permet  d'initialiser l'objet global  et d'\u00e9viter\n      ainsi  tout test  d'existence  avant  d'utiliser  l'op\u00e9rateur  ET.\n      Ceci  est  particuli\u00e8rement  pr\u00e9cieux  quand  le  premier  ET peut\n      survenir alternativement en diff\u00e9rents points du jeu de donn\u00e9es.\n\n   2) Si  l'option 'TABULER' est  utilisee, il est possible d'indiquer \u00e0\n      quels indices sont plac\u00e9s  les objets qui sont cr\u00e9\u00e9s en sp\u00e9cifiant\n      une  liste LENTI1  (type LISTENTI)  ou  LREEL1  (type LISTREEL) ou\n      LMOTS1 (type LISTMOTS).\n\n      Si  la liste  est trop courte,  les indices  manquants  seront des\n      entiers incr\u00e9ment\u00e9s suivant l'ordre de cr\u00e9ation des objets.\n\n      /!\\ ATTENTION : On  laisse \u00e0  l'utilisateur  le  soin de s'assurer\n                      qu'aucun  indice  de la table ne sera \u00e9cras\u00e9. Cela\n                      surviendra  automatiquement  si  la  liste fournie\n                      comporte  des  doublons,  mais  peut aussi arriver\n                      s'il s'agit d'un LISTENTI trop court.\n\n   3) Les GROUPEi d\u00e9finissent  le type MOTAi, ainsi qu'\u00e9ventuellement le\n      sous-type  MOTBi  et/ou le  nombre  d'objets  \u00e0  cr\u00e9er. Le tableau\n      ci-dessous pr\u00e9cise quelles sont les valeurs autoris\u00e9es :\n\n        MOTAi      |   MOTBi\n      +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n       'MAILLAGE'  |   N'importe quel type d'\u00e9l\u00e9ment valide\n                   |   (Par d\u00e9faut : valeur retourn\u00e9e par VALE 'ELEM')\n      -------------+---------------------------------------------------\n       'CHPOINT '  |   Nature du champ : 'DISCRET' ou 'DIFFUS'\n                   |   (Par d\u00e9faut : 'INDETERMINE')\n      -------------+---------------------------------------------------\n       'MCHAML  '  |   AUCUN\n      -------------+---------------------------------------------------\n       'MMODEL  '  |   AUCUN\n      -------------+---------------------------------------------------\n       'RIGIDITE'  |   Le sous-type attribu\u00e9 \u00e0 la matrice\n                   |   (Par d\u00e9faut : cha\u00eene vide '        ')\n      -------------+---------------------------------------------------\n       'EVOLUTIO'  |   Le sous-type REEL ou COMPLEXE (courbes par paire)\n                   |   (Par d\u00e9faut : cha\u00eene vide '        ')\n      -------------+---------------------------------------------------\n       'LISTENTI'  |   AUCUN\n      -------------+---------------------------------------------------\n       'LISTREEL'  |   AUCUN\n      -------------+---------------------------------------------------\n       'LISTMOTS'  |   AUCUN\n      -------------+---------------------------------------------------\n       'LISTCHPO'  |   AUCUN\n      -------------+---------------------------------------------------\n       'TABLE   '  |   Le sous-type attribu\u00e9 \u00e0 la table\n                   |   (Par d\u00e9faut : la table n'a pas de sous-type)\n      -------------+---------------------------------------------------\n       'DEFORME '  |   AUCUN\n      -------------+---------------------------------------------------\n       'VECTEUR '  |   AUCUN\n      -------------+---------------------------------------------------\n       'CHARGEME'  |   AUCUN\n      -------------+---------------------------------------------------\n       'NUAGE'     |   AUCUN\n      -------------+---------------------------------------------------\n       'ANNOTATI'  |   AUCUN\n      -------------+---------------------------------------------------\n\n\n\n   Exemples :\n   __________\n\n\n   a) MAIL1 = VIDE 'MAILLAGE' ;\n      MAIL2 = VIDE 'MAILLAGE'/'SEG2' ;\n      MAIL3 = VIDE 'MAILLAGE'/'TRI3' ;\n\n      MAIL1 est un maillage vide constitu\u00e9 de l'\u00e9l\u00e9ment par d\u00e9faut\n      MAIL2 est un maillage vide de SEG2\n      MAIL3 est un maillage vide de TRI3\n\n\n   b) RIG1 RIG2 = VIDE 'RIGIDITE'/'RIGIDITE' 'RIGIDITE'/'MASSE' ;\n\n      RIG1 est une matrice vide de sous-type 'RIGIDITE'\n      RIG2 est une matrice vide de sous-type 'MASSE'\n\n\n   c) LENTI1 LENTI2 LENTI3 = VIDE 'LISTENTI'*3 ;\n      TAB1 = VIDE 'TABU' 'LISTENTI'*3 ;\n      TAB2 = VIDE 'TABU' (MOTS 'UX' 'UY' 'UZ') 'LISTENTI'*3 ;\n\n      LENTI1, LENTI2 et LENTI3 sont trois listes d'entiers vides.\n      TAB1  contient  trois indices  1, 2 et 3  renvoyant  chacun  \u00e0 une\n      liste d'entiers vide. \n      Idem dans TAB3, mais les indices sont 'UX','UY' et 'UZ'.\n\n\n   d) MAIL1 MAIL2 = VIDE 'MAILLAGE'/'CUB8'*2 ;\n      MAIL1 MAIL2 = VIDE 'MAILLAGE'*2/'CUB8' ;\n\n      L'ordre est indiff\u00e9rent : MAIL1 et MAIL2 sont deux maillages vides\n      de CUB8.\n  \n2. Test d'un objet \n================== \n \n    LOG1  =  VIDE OBJ1 ;\n\n    LOG1  : LOGIQUE, resultat du test,\n\n    et OBJ1 de type :\n\n    MAILLAGE, CHPOINT, MCHAML, MMODEL, RIGIDITE, EVOLUTIO,\n    LISTENTI, LISTREEL, LISTMOTS, LISTCHPO, TABLE, DEFORME,\n    VECTEUR, CHARGEME, NUAGE, ANNOTATI.\n\n\n    Remarque : l'objet MOT ne peut pas etre teste.\n    ----------",
  },
  {
    name: "VISA",
    url: "VISA",
    documentation:
      "$$$$ VISA     NOTICE  CHAT      11/09/12    21:18:32     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur VISAVIS                        Voir aussi :\n    -----------------  \n    MAI1 MAI2 = VISAVIS   (FLOT1) GEO1 (GEO2) ;\n\n\n    Objet :\n    _______\n\n    Operateur VISAVIS  cree la liste des noeuds de GEO1 ayant un\nnoeud de GEO2 localise au meme endroit, il cree aussi\nla liste des noeuds de GEO2 concernes.\n\n    Les listes des noeuds en vis-a-vis sont presentees sous la forme\nd'objets de type MAILLAGE compose elements POI1 a un noeud.\n\n    Les noeuds selectionnes sont a une distance inferieure au dixieme\nde la densite courante ou inferieur a FLOT1 s'il est fourni.\n\n    Si GEO2  n'est pas fourni on dresse les listes des noeuds doubles\nde GEO1.\n\n   Remarque :\n   ----------\n   Cet operateur peut etre utile quand il faut fournir des objets\nmaillages dont seul la liste des noeuds ordonnee est importante,\npar exemple pour operateur RELATION.",
  },
  {
    name: "VITETFOR",
    url: "VITETFOR",
    documentation:
      "$$$$ VITETFOR NOTICE  MB234859  17/10/02    21:15:29     9577           \n                                             DATE     17/10/02\n\n  procedure VITETFOR                       Voir aussi :\n    ------------------  \n\n    cette procedure est appelee par la procedure de dynamique\nPASAPAS afin de calculer des corrections aux vitessses et\naux forces en cas de contact avec liaison persistante",
  },
  {
    name: "VITEUNIL",
    url: "VITEUNIL",
    documentation:
      "$$$$ VITEUNIL NOTICE  MB234859  17/10/02    21:15:29     9577           \n                                             DATE     17/10/02\n\n  procedure VITEUNIL                       Voir aussi :\n    ------------------  \n\n    cette procedure est appelee par les procedures de dynamique\n( NEWMARK, NONLIN) afin de corriger les vitesses en cas d'appuis\nunilateraux.",
  },
  {
    name: "VLOC",
    url: "VLOC",
    documentation:
      "$$$$ VLOC     NOTICE  BP208322  17/01/23    21:15:06     9284           \n                                             DATE     17/01/23\n\n    Operateur VLOC                           Voir aussi : MATE\n    --------------                                        VECT VSUR  \n\n    CHAM123 = VLOC MOD1 MAT1 ;\n\n    \n\n    Objet :\n    _______\n    \n    L'operateur VLOC construit un champ (type CHAMELEM) representant \n    le repere local d'orthotropie a partir du modele et du materiau.\n\n    \n    Commentaire :\n    _____________\n    \n    MOD1 : modele de calcul , type MMODEL (cree par MODE)\n    \n    MAT1 : materiau associe au modele, type CHAMELEM (cree par MATE)\n\n    CHAM123 : CHAMELEM defini aux POINTS DE GAUSS de RIGIDITE\n              de sous type VECTEUR LOCAUX de composantes :\n              \n    +---------+-----------+-----------------------------------------+\n    | Mode de | type      |          Noms des composantes           |\n    | calcul  | d'element | vecteur V1  | vecteur V2  | vecteur V3  |\n    +---------+-----------+-----------------------------------------+\n    |   3D    |  tous     | V1X V1Y V1Z | V2X V2Y V2Z | V3X V3Y V3Z |\n    +---------+-----------+-----------------------------------------+\n    |   2D    |  massif   | V1X V1Y     | V2X V2Y     |     -       |\n    +---------+-----------+-----------------------------------------+\n    |   2D    |  coque    | V1X V1Y V1Z | V2X V2Y V2Z | V3X V3Y V3Z |\n    +---------+-----------+-----------------------------------------+\n    |  Axi et |  massif   | V1R V1Z     | V2R V2Z     |     -       |\n    | Fourier |           |             |             |             |\n    +---------+-----------+-----------------------------------------+\n    |  Axi et |  coque    | V1R V1Z V1T | V2R V2Z V2T | V3R V3Z V3T |\n    | Fourier |           |             |             |             |\n    +---------+-----------+-----------------------------------------+\n     \n    Dans le cas des coques, V3 est toujours perpendiculaire a la coque.\n\n    Il est ensuite possible de visualiser la base (V1,V2,V3) avec \n    l'operateur VECT.\n    ",
  },
  {
    name: "VMIS",
    url: "VMIS",
    documentation:
      "$$$$ VMIS     NOTICE  PASCAL    18/11/09    21:15:10     9987           \n                                             DATE     18/11/09\n\n    Operateur VMIS                           Voir aussi : SIGM TRES\n    --------------                                        PRIN  CARA  \n                                                          CALP  \n       VMIS1  =  VMIS  MODL1 SIG1 ( CAR1 ) ;\n\n\n    Objet :\n    _______\n\n    L'operateur VMIS calcule une contrainte equivalente a un champ de\ncontraintes. Dans les cas massifs ( 2D et 3D ), elle co\u00efncide avec\nla contrainte de Von Mises.\n\n      Commentaire :\n      _____________\n\n\n      MODL1 : objet modele ( type MMODEL ).\n\n      SIG1  : champ de CONTRAINTES ( type MCHAML,\n                                     sous-type CONTRAINTES)\n\n      CAR1  : champ de CARACTERISTIQUES geometriques necessaires\n              pour les elements coques, poutres et tuyaux (type\n              MCHAML, sous-type CARACTERISTIQUES)\n\n      VMIS1 : objet resultat (type MCHAML ).\n\n\n    Remarque :\n    __________\n\n    Dans le cas des coques minces, la contrainte equivalente est\ncalculee a partir des efforts membranaires Nij et flexionnels Mij\net des caracteristiques (cf operateur CARA) selon la formule :\n\n    Seq = ( (N / EPAIS)**2 + (6 * ALFA * M / EPAIS**2)**2 ) ** 0.5\n\n    ou     N   = ( N11**2 + N22**2 - N11*N22 + 3*N12**2 ) ** 0.5\n           M   = ( M11**2 + M22**2 - M11*M22 + 3*M12**2 ) ** 0.5\n\n    Dans le cas des poutres, la contrainte equivalente est calculee\na partir des efforts, des moments, et des caracteristiques (cf operateur\nCARA) selon la formule :\n\n    Seq = ( ( EFFX / SECT )**2\n        + ( MOMX * DX / TORS )**2\n        + ( MOMY * DZ / INRY )**2\n        + ( MOMZ * DY / INRZ )**2 )**0.5\n\n    Dans le cas des tuyaux, la contrainte equivalente est calculee\na partir des efforts, des moments, et des caracteristiques (cf operateur\nCARA) selon la formule :\n\n    Seq = ( ( EFFX * CFFX / SECT )**2 +\n        + ( MOMX * CFMX * RMOY / TORS )**2\n        + ( MOMY * CFMY * RMOY / INRY )**2\n        + ( MOMZ * CFMZ * RMOY / INRZ )**2 )\n        + ( PRES * RMOY * CFPR / EPAI )**2 )**0.5\n\n    Les inerties etant eventuellement modifiees en fonction\ndes flexibilites pour les coudes.",
  },
  {
    name: "VNIMP",
    url: "VNIMP",
    documentation:
      "$$$$ VNIMP    NOTICE  CHAT      11/09/12    21:18:33     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur VNIMP                          Voir aussi : NAVI\n    ---------------                                       EQEX  \n\n    SYNTAXE ( EQEX ) :   Cf operateur EQEX\n    __________________\n\n\n      'OPER'  'VNIMP' coef     'INCO' 'UN'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n L'operateur VNIMP discretise en 2D la condition limite V.n = vnormale\n par une methode d'elements finis. (n normale dependant du sens de\n description de la frontiere)\n\n    Commentaires\n    ____________\n\n     coef    vitesse normale\n             FLOTTANT\n             ou CHPOINT SCAL SOMMET\n             ou MOT\n\n     UN      Champ de vitesse\n             CHPOINT VECT SOMMET\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n champ dans la table INCO a l'indice MOT.",
  },
  {
    name: "VOLU",
    url: "VOLU",
    documentation:
      "$$$$ VOLU     NOTICE  JC220346  16/11/29    21:15:42     9221           \n                                             DATE     16/11/29\n                                             \n  Operateur VOLUME                         Voir aussi :\n    ----------------  \n\n    L'operateur VOLU s'emploie dans differents cas :\n\n    ----------------------\n    |  1ere possibilite  |\n    ----------------------\n\n    GEO1 = SURF1 VOLU ('VERB') ;\n\n    Objet :\n    _______\n\n   L'operateur VOLU construit le maillage GEO1 (type MAILLAGE) du volume\nsitue a l'interieur de l'enveloppe SURF1 (type MAILLAGE).\n\n   Le mot-cle 'VERB' indique que l'on souhaite afficher des informations\nsupplementaires pendant la construction des elements du maillage.\n\n\n    ----------------------\n    |  2eme possibilite  |\n    ----------------------\n\n\n    GEO1 = SURF1 VOLU | (N1) ('DINI' DENS1) ('DFIN' DENS2) |  ...\n                      | 'PROG' LR1                         |\n\n                               |'TRAN'  VEC1                 |\n                     ...       |'ROTA'  FLOT1  AXEI1 AXEJ1   | ;\n                               |'GENE'  LIG1                 |\n                               | SURF2                       |\n\n    Objet :\n    _______\n\n    L'operateur VOLU construit le volume engendre par translation ou\nrotation d'une surface.\n\n    Commentaire :\n    _____________\n    SURF1   : surface (type MAILLAGE)\n\n    N1      : nombre de couches engendrees (type ENTIER)\n\n    'TRAN'  : mot-cle, indiquant que le volume est engendre par une\n              translation de la surface SURF1, suivi de :\n    VEC1    : vecteur de translation (type POINT)\n\n    'ROTA'  : mot-cle, indiquant que le volume est engendre par une rota\n              tion de la surface SURF1, suivi de:\n    FLOT1   : angle de rotation (type FLOTTANT)\n    AXEI1 | : points (type POINT) definissant l'axe (oriente) de\n    AXEJ1 |   rotation\n\n    'GENE'  : mot-cle, indiquant que le volume est engendre par une\n              translation parallelement a une generatrice, suivi de :\n    LIG1    : ligne generatrice (type MAILLAGE)\n\n    SURF2   : si aucun mot-cle n'est precise, le volume construit relie\n              SURF1 et SURF2 (type MAILLAGE)\n              les deux objets SURF1 et SURF2 doivent etre homeomorphes\n\n    DENS1 | : densites associees a la surface SURF1 et au vecteur VEC1\n    DENS2 |   (option 'TRAN') ou a l'axe AXEI1 AXEJ1 (option 'ROTA') ou\n              a la ligne LIG1 (option 'GENE') ou a la surface SURF2.\n\n    LR1     : LISTREEL definissant les positions des noeuds\n              intermediaires crees (voir la remarque).\n\n    Remarques :\n    __________\n\n    Si SURF1 est deja un volume, l'operation s'applique a la face 2 de\nSURF1 et a pour resultat SURF1 augmente des elements engendrees. Il en\nest de meme pour SURF2 et son eventuelle face 1.\n\n    Si N1 n'est pas specifie, le nombre de couches engendrees et leurs\nepaisseurs seront calcules en fonction des densites utilisees.\n\n    Si N1 est specifie et positif, N1 couches d'egale epaisseur seront\nengendrees.\n\n    Si N1 est negatif, N1 couches seront engendrees et leur epaisseur\nsera calculee en tenant compte des densites utilisees.\n\n    Si les densites associees a la surface SURF1 et au vecteur VEC1 ou\n aux points AXEI1 et AXEJ1 ou a la surface SURF2 ne sont pas correctes,\nil est possible de les surcharger. Pour la densite initiale, il faut\ndonner la bonne valeur derriere le mot-cle 'DINI' et, pour la finale,\nderriere le mot-cle 'DFIN'.\n\n    Lorsque l'option 'PROG' suivie d'un LISTREEL est utilisee, les\nnoeuds intermediaires seront crees selon la regle suivante. Les deux\nextremites du volume (SURF1 et SURF2 ou l'image de SURF1 par TRANslation\nou ROTAtion) sont homeomorphes, chaque point de la premiere possede donc\nl'equivalent appartenant a la seconde surface.\nSi LR1 = {r1,...,rn} alors on pour toute paire de points equivalents\nnous definisson una application lineaire L: [r1,rn] --->\nintervalle(P1,P2) (ou arc liant P1 et P2 dans le cas 'ROTA') telle que\nL(r1)=P1 et L(rn)=P2. Les points intermediaires seront places aux\nendroits L(r2), L(r3), ... Si LR1 contient n valeurs, alors (n-1)\ncouches d'elements seront generees.\nATTENTION !!! Aucune verification n'est faite sur le contenu de LR1. En\nparticulier, si la progression a l'interieur de LR1 n'est pas monotone,\ndes couches d'elements vont se chevaucher.\n\n\n    ----------------------\n    |  3eme possibilite  |\n    ----------------------\n    \n\n     GEO1 = SURF1 VOLU SURF2 PO1 PO2 (N1) ('DINI' DENS1) ('DFIN' DENS2)\n\n\n     Objet :\n     _______\n     \n\n     L'operateur  VOLU   raccorde des maillages  surfaciques qui \n ont des structures de grille mais pas forcement le  meme nombre\n de lignes et de colonnes. Par contre le nombre total de  noeuds\n sur les lignes de SURF1 et SURF2 doit etre pair.  De meme  pour \n les noeuds des colonnes.\n \n     Commentaire :\n     _____________\n     \n     SURF1: objet de type MAILLAGE. Il doit etre constitue exclu-\n            sivement  de  quadrangle  QUA4 ou QUA8  et avoir  une  \n            structure de grille.\n\n     SURF2: objet de type MAILLAGE. Il doit etre constitue du me-\n            me type d'elements  que SURF1 et avoir une  structure \n            de grille.\n \n     PO1  : point au coin de reference de SURF1 (type POINT)\n     PO2  : point au coin de SURF2 a connecter a PO1\n\n     Les parametres  ont la  meme signification que  precedemment\n a l'exception d'une legere  difference pour N1 :\n     Si N1 n'est pas specifie, une seule couche sera engendree. \n     Si N1 est specifie  et positif, N1 couches d'egale epaisseur\n seront engendrees.\n     Si N1 est negatif un message d'erreur sera affiche.\n\n     Remarque :\n     __________\n\n    La solution  n'est pas  unique si  le nombre  de lignes  et le  \n nombre de colonnes  croissent ou decroissent simultanement.  Dans\n ce cas le traitement a 2 etapes.Le nombre de colonnes est d'abord\n augmente, puis c'est le nombre de lignes.  \"Lignes\" et \"colonnes\"\n dependent du choix du coin.\n\n\n    ----------------------\n    |  4eme possibilite  |\n    ----------------------\n\n\n     GEO1 = SURF1 VOLU | EPAI   |  PO1 \n                       | MCHPO1 |\n\n\n     Objet :\n     _______\n     \n      Transformation d'un maillage de surface en maillage volumique.\n      A partir d'un maillage de surface en QUA4 et d'une epaisseur\n      (ou d'un champ par point d'epaisseurs) on fabrique un maillage \n      de CUB8. PO1 donne la direction de la surface interne vers la\n      surface externe.\n      \n      \n      \n     Commentaire :\n     _____________\n     \n     SURF1: objet de type MAILLAGE. Il doit etre constitue exclu-\n            sivement  de  quadrangle  QUA4.\n            \n\n     EPAI : reel donnant l'epaisseur \n \n     MCHPO1 :  champ par point d'epaisseurs\n     \n     PO1 : vecteur donnant la direction generale de l'interieur vers\n           l'exterieur (voir remarque).\n           \n\n     Remarque :\n     __________\n\n     l'objet GEO1 contient deux references qui sont les surfaces \n     inferieure et superieure au sens de PO1. Pour y acceder il faut \n     utiliser l'operateur FACE (sinf= geo1 FACE 1).",
  },
  {
    name: "VORO",
    url: "VORO",
    documentation:
      "$$$$ VORO     NOTICE  SH236661  13/11/25    21:15:12     7869           \n                                             DATE     13/11/25\n\n     Operateur VORONOI                       Voir aussi : TRIA\n     -----------------  \n     TAB1 = VORO MAIL1 MAIL2 (CHR1);\n\n     Objet :\n     _______\n\n    L'operateur VORONOI construit la partition de Voronoi d'un ensemble\n    de points MAIL1 limitee au domaine defini par le maillage MAIL2.\n    La partition de Voronoi est definie par la table TAB1 decrite\n    ci-dessous.\n\n\n     Commentaire :\n     _____________\n\n     MAIL1 : objet MAILLAGE, forme d'elements de type POI1.\n\n     MAIL2 : objet MAILLAGE, contour (enveloppe) ferme, oriente, connexe\n             et constitue d'elements SEG2 (TRI3) en 2D (3D), servant a\n             limiter la partition de Voronoi.\n\n     CHR1  : objet CHPOINT, permet de decrire le poid associe a chaque\n             centre de cellule. \n\n     TAB1  : objet TABLE contenant la partition de Voronoi.\n             La table est organisee ainsi :\n\n       - TAB1 . 'VISU' = Maillage de toutes les aretes de la partition\n                         de Voronoi (elements SEG2)\n       - TAB1 . 'POND' = Objet de type CHPOINT indiquant le poid associe\n                         a chaque centre de cellule\n\n       - TAB1 . 'CELL'               = Table des cellules de Voronoi\n       - TAB1 . 'CELL' . P1          = Table de la cellule de\n                                          germe P1 (type POINT)\n       - TAB1 . 'CELL' . P1 . 'VISU' = Maillage de la cellule de\n                                          germe P1\n       - TAB1 . 'CELL' . P1 . 'FACS' = Liste-entier des numeros des\n                                          faces formant la cellule\n                                          de germe P1 (en 3D)\n       - TAB1 . 'CELL' . P1 . 'ARTS' = Liste-entier des numeros des\n                                          aretes formant la cellule\n                                          de germe P1 (en 2D)\n       - TAB1 . 'CELL' . P1 . 'VOIS' = Maillage des points\n                                          voisins du point P1\n\n       - TAB1 . 'FACS'               = Table des faces des cellules\n       - TAB1 . 'FACS' . n1          = Table de la face numero n1\n                                          (type ENTIER)\n       - TAB1 . 'FACS' . n1 . 'VISU' = Maillage de la face numero n1\n       - TAB1 . 'FACS' . n1 . 'ARTS' = Liste des numeros des aretes\n                                          formant la face numero n1\n\n       - TAB1 . 'ARTS'      = Table des aretes des cellules\n       - TAB1 . 'ARTS' . m1 = Maillage de l'arete numero m1\n\n\n     Remarque : \n     __________\n     \n     * L'utilisation d'un champ par point comme argument de VORO permet\n     de generer une partition de Voronoi Ponderee.\n     Les valeurs du champ par point doivent verifier : pour tout couple \n     de points (P1,P2) de poids (x1,x2), on a :\n                  |(x1)**2 - (x2)**2| =< (d(P1,P2))**2\n     ou d(P1,P2) est la longueur du segment P1P2.",
  },
  {
    name: "VSUR",
    url: "VSUR",
    documentation:
      "$$$$ VSUR     NOTICE  BP208322  13/02/05    21:15:09     7692           \n                                             DATE     13/02/05\n                                             \n  Operateur VSUR                           Voir aussi :\n    --------------  \n    CHAM1 = VSUR MODL1 ('NORM')\n\n\n    Objet :\n    _______\n\n    L'operateur VSUR permet de calculer :\n - les 'vecteurs surface' aux points d'integration des elements coques,\n - les 'vecteurs tangent' aux points d'integration des elements poutres,\n - pour les autres types d'element le champ par element est vide.\n Si le mot-cle 'NORM' n'est pas specifie, la norme des vecteurs est \n egale au jacobien au point considere, sinon le champ par element est \n en fait le champ de normales aux coques.\n\n    Commentaire :\n    _____________\n\n    MODL1  : objet modele (type MMODEL)\n\n    CHAM1   : objet resultat (type MCHAML) de composantes VX, VY, (VZ) \n              ou VR, VZ\n\n    'NORM' : mot-cle : s'il est specifie les vecteurs sont normes,\n          CHAM a alors pour sous-type 'NORMALES', sinon CHAM a pour \n          sous-type 'VECTEURS SURFACE'",
  },
  {
    name: "VTIMP",
    url: "VTIMP",
    documentation:
      "$$$$ VTIMP    NOTICE  CHAT      11/09/12    21:18:34     7124           \n                                             DATE     11/09/12\n                                                                                \n    Operateur VTIMP                          Voir aussi : NAVI\n    ---------------                                       EQEX  \n\n    SYNTAXE ( EQEX ) :   Cf operateur EQEX\n    __________________\n\n\n      'OPER'  'VTIMP' coef     'INCO' 'UN'\n\n\n                                                                                \n                                                                                \n    OBJET :\n    -----\n\n L'operateur VTIMP discretise en 2D la condition limite V.t = vtangente\n par une methode d'elements finis. (t tangente dependant du sens de\n description de la frontiere)\n\n    Commentaires\n    ____________\n\n     coef    vitesse tangente\n             FLOTTANT\n             ou CHPOINT SCAL SOMMET\n             ou MOT\n\n     UN      Champ de vitesse\n             CHPOINT VECT SOMMET\n\n Un coefficient de type MOT indique que l'operateur va chercher le\n champ dans la table INCO a l'indice MOT.",
  },
  {
    name: "WAAM",
    url: "WAAM",
    documentation:
      "$$$$ WAAM     NOTICE  PASCAL    20/11/04    21:22:16     10765          \n                                             DATE     20/11/04\n  \n    Procedure WAAM                           Voir aussi : SOUDAGE\n \nSOMMAIRE DE LA NOTICE\n---------------------\n1. Specification generale\n2. Option MAIL\n3. Option VISU\n\n  \n1. Specification generale1 \n========================= \n    Objet :\n    -------\n\n        La procedure WAAM permet de mailler une sequence de soudage\n    (voir SOUDAGE). Outre le maillage, elle fournit en sortie un\n    sequencage du maillage en fonction du temps representant une\n    discretisation spatio-temporelle de l'apport de matiere selon\n    un pas de discretisation choisi. Elle propose egalement une\n    discretisation temporelle du chargement (sous-option TEMP).\n    Enfin, l'option VISU permet de visualiser le sequencage realise\n    de l'apport de matiere.\n\n    Remarque : la procedure WAAM est uniquement disponible en dimension 3.\n    ----------\n  \n2. Option MAIL \n============== \n \n    Syntaxe :\n    ---------\n\n    TAB2 = WAAM TAB1 'MAIL' 'PAS' | FLOT1 | ('LARG' FLOT2) | ('DENS FLOT3) | ...\n                                  | LREE1 |                |     (N1)      |\n\n           ... ('TEMP' (FLOT4)) ;\n\n    Entrees :\n    ---------\n\n    TAB1    : objet TABLE, sequence de soudage definie avec SOUDAGE.\n\n    FLOT1   : objet FLOTTANT, pas de discretisation en espace de l'apport\n              de matiere (le long de la trajectoire de soudage).\n\n    LREE1   : objet LISTREEL, liste des pas de discretisation en espace de\n              l'apport de matiere (le long de la trajectoire de soudage).\n              Chaque pas est utilise successivement. Le dernier pas est\n              conserve pour discretiser le reste de la passe a mailler si\n              l'ensemble des pas de la liste ne couvre pas toute la longueur.\n\n    FLOT2   : objet FLOTTANT, largeur des passes de soudage (facultatif\n              si defini dans TAB1).\n \n    FLOT3   : objet FLOTTANT, densite du maillage.\n\n    N1      : objet ENTIER, nombre d'element sur un pas de discretisation\n              en espace (1 par defaut). Si un LISTREEL est fourni,\n              on considere le 1er pas de la liste.\n\n    FLOT4   : objet FLOTTANT, pas de temps de calcul lors des passes de soudage.\n              Par defaut, (1/pi) du temps de parcours du 1er pas de\n              discretization en espace.\n\n\n    Sorties :\n    ---------\n\n    TAB2 . MAILLAGE           : objet MAILLAGE, maillage final de la sequence\n\n    TAB2 . EVOLUTION_MAILLAGE : objet TABLE definissant le sequencage\n                                temporel de l'apport de matiere\n\n         . EVOLUTION_MAILLAGE . TEMPS    : objet TABLE contenant en indice\n                                           les instants du sequencage de\n                                           l'apport de matiere (0 a N)\n\n         . EVOLUTION_MAILLAGE . MAILLAGE : objet TABLE contenant en indice\n                                           les maillages actives aux instants\n                                           definis a l'indice TEMPS\n\n         . EVOLUTION_MAILLAGE . TEMPS    . i : objet FLOTTANT, (i+1)eme instant\n                                               de la sequence\n \n         . EVOLUTION_MAILLAGE . MAILLAGE . i : objet MAILLAGE, maillage\n                                               a l'instant correspant\n                                               de la table des TEMPS\n\n    TAB2 . TEMPS_CALCULES     : objet LISTREEL, liste des temps de calculs\n                                fournie par l'option TEMP.\n\n    Remarque : dans la liste des TEMPS_CALCULES, le pas de temps est deraffine\n    ---------- progressivement selon une suite geometrique de raison 2 lorsque\n               la puissance thermique est a 0 (deplacement ou pause).\n  \n3. Option VISU \n============== \n \n    Syntaxe :\n    ---------\n\n    WAAM TAB2 'VISU' | (CACH) | (GEO2) ;\n                     | (FACE) | ;\n\n    Commentaire :\n    -------------\n    \n     CACH  : visualisation avec option CACH de TRAC\n\n     FACE  : visualisation avec option FACE de TRAC\n\n     GEO2  : objet MAILLAGE ajoute aux maillages visualises",
  },
  {
    name: "WEIBULL",
    url: "WEIBULL",
    documentation:
      "$$$$ WEIBULL  NOTICE  MB234859  17/10/02    21:15:29     9577           \n                                             DATE     17/10/02\n                                                                                \n    Procedure WEIBULL                        Voir aussi : WEIP                  \n    -----------------   \n    PR1 CHEL1 = WEIBULL SIG1 MO1 KV SIGU SIG0 M ; \n                                                                       \n\n    Objet:                                                                      \n    ------ \n\n    Calcul de la probabilite de rupture selon la statistique\n    de Weibull et le principe des actions indipendantes (PIA).\n\n\n\n    En entree:\n\n      SIG1 : MCHAML de type CONTRAIN de contraintes.\n\n      MO1  : Objet MMODL associe a SIG1\n\n      KV   : Coefficient corretif de volume en cas de\n             calculs planes et/ou possibles symmetries.\n\n      SIGU : Containte limite (nulle pour les materiaux\n             ceramiques).\n \n      SIG0 : Containte de normalisation. \n\n      M    : Puissance ou Module de Weibull.\n\n    En sortie:\n\n      PR1  : Probabilite de rupture.\n\n      CHEL1: MCHAML qu'on integre.",
  },
  {
    name: "WEIP",
    url: "WEIP",
    documentation:
      "$$$$ WEIP     NOTICE  MB234859  17/10/02    21:15:30     9577           \n                                             DATE     17/10/02\n                                                                                \n    Operateur WEIP                           Voir aussi : WEIBULL               \n    --------------                                                             \n    M SIG0 = WEIP LREEL1 D1 D2 A1 ;                                      \n                                                                       \n\n    Objet:                                                                      \n    ------ \n\n    Cet operateur calcule les parametres M (module de Weibull)\n    et SIG0 (sigma-zero) relatifs a une distribution statistique\n    de Weibull.\n\n    En entree:\n\n    LREEL1 : Liste des valeurs de la contrainte de ruptur\n             obtenu experimentalement avec des essais a\n             flexion a 4 points sur un'eprouvette.\n\n    D1     : distance entre les appuis de l'eprouvette.\n\n    D2     : distance entre les charges appliquees. \n\n    A1     : Surface de la section de l'eprouvette. \n\n\n                           D2\n                     |<---------->|\n                 P/2 |            | P/2\n             --------|------------|--------------\n            /        v            v            /|\n           /                                  / |\n          ------------------------------------  |\n          |                                  |A1|\n          |                                  | /\n          |                                  |/\n          ------------------------------------\n             /\\                       /\\\n             |         D1             |\n             |<---------------------->|  \n\n\n \n ",
  },
  {
    name: "WORK",
    url: "WORK",
    documentation:
      "$$$$ WORK     NOTICE  CHAT      11/09/12    21:18:34     7124           \n                                             DATE     11/09/12\n\n  Operateur WORK                           Voir aussi :\n    --------------  \n    WORK1  =  WORK MODL1  SIG1  GRAD1  (GRAF1) ;\n\n\n    Objet :\n    _______\n\n    L'operateur WORK calcule la trace de produit tensoriel\n    contracte d'un champ de contraintes SIG1 avec un champ\n    de gradients GRAD1 (et facultativement un champ de gradients\n    de flexion GRAF1 pour les elements coques), i.e.\n\n           WORK1  = Tr (SIG1 * GRAD1)\n\n\n    Commentaire :\n    _____________\n\n     MODL1 : objet modele ( type MMODEL)\n\n     SIG1  : champ de contraintes (type MCHAML,\n                                   sous-type CONTRAINTES)\n\n     GRAD1 : champ de gradients (type MCHAML )\n\n     GRAF1 : champ de gradients de flexion (type MCHAML)\n\n     WORK1 : objet de  type MCHAML\n\n   Remarque:\n  ----------\n\n  Le champ de gradients de flexion( necessaire uniquement pour les\n elements coques mince )est donne en derniere position .",
  },
  {
    name: "XBIF",
    url: "XBIF",
    documentation:
      "$$$$ XBIF     NOTICE  CHAT      11/09/12    21:18:35     7124           \n                                             DATE     11/09/12\n\n\n  Procedure XBIF                          Voir aussi :\n     --------------  \n                                                                                \n\n\n    OBJET :                                                                     \n    -------\n                                                                                \n    Cette procedure resoud les equations d'un modele bifluide. Deux\n    phases sont en presence: un gaz qui est le fluide porteur et des\n    particules qui sont considerees comme un gaz (particulaire).\n\n    Les principales hypotheses sont les suivantes:\n\n         - les particules sont monodisperses, homogenes et spheriques\n\n         - le fluide particulaire est tres dilue: sa fraction\n           volumique est tres inferieure a un et on approxime\n           la fraction volumique du fluide porteur par un\n\n         - le fluide porteur est incompressible\n\n         - le gradient de pression exerce sur chacune des phases\n           est le meme a un facteur de proportionnalite pres: le\n           rapport des masses volumiques du gaz porteur et du solide\n\n         - le couplage des deux phases apparait dans leurs\n           equations de quantite de mouvement par un terme de\n           transfert interfacial qui n'est autre que la trainee\n           de Stokes ou une formule contenant un coefficient de\n           trainee; le terme de couplage est de la forme\n           +/-K*(U-V) ou U et V sont les vitesses respectivement\n           du gaz porteur et des particules\n\n    Le systeme a traiter comprend deux equations de conservation: masse\n    et quantite de mouvement pour chacune des phases. Il y a donc quatre\n    equations a quatre inconnues: les vitesses du gaz porteur et du\n    gaz particulaire, la pression totale et la fraction volumique en\n    particules.\n\n    Les equations a resoudre sont les suivantes:\n\n     | alphf = 1 ; div(U) = 0\n     |\n     | dU/dt + (U.div)U = -grad(P)/rof + nuf*lapl(U) - Kf*(U-V)\n     |\n     | dV/dt + (V.div)V = -grad(P)/rop + nup*lapl(U) + Kp*(U-V)\n     |                               + (1-rof/rop)*g\n     |\n     | d(alphp)/dt + div(alphp*V) = 0\n\n    avec: rof   masse volumique du gaz porteur\n          rop   masse volumique du solide\n          nuf   viscosite cinematique du gaz porteur\n          nup   viscosite cinematique des particules\n    (ces quatre proprietes pysiques sont supposees constantes)\n\n          Kf    coefficient de couplage du gaz porteur\n          Kp    coefficient de couplage des particules\n\n          alphf fraction volumique du gaz porteur\n          alphp fraction volumique du gaz particulaire\n          U     vitesse du gaz porteur\n          V     vitesse du gaz particulaire\n          P     pression totale\n                                                                                \n  1/ On resoud le systeme couple des equations de quantite de\n    mouvement (qui sont des equations de Navier-Stokes) a partir\n    des algorithmes semi-implicites de deux operateurs NS associes\n    a chacune des equations.\n    Le fluide porteur est incompressible ce qui est le moyen\n    d'obtenir la pression qui est commune aux deux phases.\n    Le couplage entre l'equation de quantite de mouvement du gaz porteur\n    et celle des particules est traite de facon explicite. C'est une\n    limite numerique du modele: le couplage ne peut pas etre\n    extremement fort (tres petites particules). Si tel doit etre\n    le cas, autant conclure au non-glissement interphasique et alors\n    les vitesses des deux gaz sont egales.\n\n    Les informations sont donnees dans une table de type EQEX (creee\n    par EQEX). Cette table doit posseder une entree 'PRESSION'\n    contenant une table de type EQPR (creee par EQPR) ou figurent les\n    informations liees a l'equation de pression et a sa resolution.\n    Enfin la table doit contenir une entree 'KIZT', table cree\n    par l'utilisateur et contenant les CHAMPOINT-TRIO.\n\n\n  2/ On resoud l'equation de conservation de la masse de particules\n    a l'aide de l'operateur KONV suivant les informations donnees\n    dans une table de type EQEX (creee par EQEX).\n                                                                                \n    Voir les operateurs EQEX, EQPR, NS et KONV.\n\n    SYNTAXE :                                                                   \n    ---------\n                                                                                \n       XBIF   Tab1 Tab2 Tab3 Flo1 Flo2   ;\n                                                                                \n                                                                                \n     Tab1 est une table de type EQEX (2 equations de\n                                      quantite de mouvement)\n     Tab2 est une table de type EQPR (pression)\n\n     Tab3 est une table de type EQEX (continuite particules)\n\n     Flo1 est un flottant (coefficient de couplage du\n                                                gaz porteur)\n     Flo2 est un flottant (coefficient de couplage du\n                                          gaz de particules)\n\n    REMARQUES :\n    -----------\n                                                                                \n      1/ L'utilisateur peut trouver en guise d'exemple un jeu de\n      donnees avec un appel a XBIF. C'est xbif.dtc.\n\n      2/ Noter que dans l'etat actuel de la modelisation ne figurent\n      pas encore de termes liees a la turbulence.",
  },
  {
    name: "XFEM",
    url: "XFEM",
    documentation:
      "$$$$ XFEM     NOTICE  BP208322  19/12/03    21:15:07     10406          \n                                             DATE     19/12/03\n                                             \n  Operateur XFEM                            Voir aussi :\n    -----------------  \n\n    Objet :\n    _______\n\n    L'operateur XFEM permet de post-traiter les resultats obtenus \n avec un modele utilisant la formuation XFEM.\n\n\n    -------------------------------------------------------------\n    | 1ere possibilite :                                        |\n    |           reconstitution de champ de deplacement physique |\n    -------------------------------------------------------------\n\n    CHPO2       = XFEM 'RECO' CHPO1 MOD1 ;\n    CHPO2 CHPO3 = XFEM 'RECO' CHPO1 MOD1 MAIL2;\n\n    Objet :\n    _______\n\n   L'operateur XFEM avec le mot-cle 'RECO' reconstruit le deplacement\n  physique a partir des inconnues de deplacement classique et de \n  celles associees aux enrichissements.\n\n    Commentaire :\n    _____________\n\n    CHPO1 : champ de deplacement avec inconnues XFEM (UX, AX, B1X..)\n            (type CHPOINT)\n\n    MOD1   : Modele contenant au moinsune sous-zone XFEM (type MODELE)\n\n    CHPO2 : Champ de deplacement physique (UX, UY, UZ) (type CHPOINT)\n    CHPO3 :  \"\n    \n    MAIL2  : Support de CHPO2 et CHPO3 si different des noeuds de CHPO1\n\n\n    -----------------------------------------------------------\n    | 2eme possibilite : Calcul du deplacement sur la fissure |\n    -----------------------------------------------------------\n\n    CHPO2 CHPO3 = XFEM 'FISS' GEO1 CHPO1 MOD1\n\n    Objet :\n    _______\n\n  L'operateur XFEM avec le mot-cle 'FISS' construit les champs de \n deplacements physiques sur le maillage de la fissure. Ces champs\n sont utiles pour tracer l'ouverture de la fissure.\n  \n    Commentaire :\n    _____________\n\n    GEO11   : Support geometrique de la fissure (type MAILLAGE)\n\n    CHPO1 : champ de deplacement avec inconnues XFEM (UX, AX, B1X..)\n            (type CHPOINT)\n\n    MOD1   : Modele contenant au moins une sous-zone XFEM (type MODELE)\n\n    CHPO2  : Champ de deplacement levre superieure (type CHPOINT)\n\n    CHPO3  : Champ de deplacement levre inferieure (type CHPOINT)",
  },
  {
    name: "XTMX",
    url: "XTMX",
    documentation:
      "$$$$ XTMX     NOTICE  CHAT      11/09/12    21:18:35     7124           \n                                             DATE     11/09/12\n\n    Operateur XTMX                           Voir aussi : YTMX, XTX, XTY\n    --------------  \n    FLOT1 = XTMX  CHPO1 RIG1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur XTMX calcule l'application de la forme quadratique\nassociee a une rigidite et a un champ par points.\n\n\n    Commentaire :\n    _____________\n\n    CHPO1 : champ par points (type CHPOINT)\n\n    RIG1  : matrice de rigidite (type RIGIDITE)\n\n    FLOT1 : objet resultat (type FLOTTANT)\n    \n    \n    Remarque : \n    La regle de transposition associant les inconnues primales de X \n    et duales de MX utilise les noms definis dans bdata (CCHAMP)\n    (on calcule donc implicitement : UX*FX + UY*FY + ...). \n    L'utilisation d'une autre regle passe par une syntaxe du type :\n    flot1 = XTY chpo1 (Rig1 * chpo1) lmot1 lmot2;\n    ou lmot1 et lmot2 sont des LISTMOTS definis par l'utilisateur.\n    \n    ",
  },
  {
    name: "XTX",
    url: "XTX",
    documentation:
      "$$$$ XTX      NOTICE  CHAT      11/09/12    21:18:35     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur XTX                            Voir aussi :\n    -------------  \n    FLOT3 = XTX  | CH1                  |  ;\n                 |                      |\n                 | FLOT1 CH1  FLOT2 CH2 |\n\n\n    Objet :\n    _______\n\n    L'operateur XTX calcule la norme d'un champ ou celle d'une combinai-\nson lineaire de deux champs de meme type.\n\n    Commentaire :\n    _____________\n\n    CH1 |   : champs a normer (type  MCHAML ou CHPOINT)\n    CH2 |\n\n    FLOT1 | : coefficients multiplicatifs (type FLOTTANT)\n    FLOT2 |\n\n    FLOT3   : norme du champ CH1 (type FLOTTANT)\n\n    Remarque :\n    __________\n\n    Cette norme est la somme des carres de toutes les composantes\nen tous points. Le resultat FLOT3 est de type FLOTTANT.",
  },
  {
    name: "XTY",
    url: "XTY",
    documentation:
      "$$$$ XTY      NOTICE  CHAT      11/09/12    21:18:36     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur XTY                            Voir aussi :\n    -------------  \n    FLOT1 = XTY  CHPO1 CHPO2 LMOTS1 LMOTS2 ;\n\n    LREE11 = XTY  LICHP1 LICHP2 LMOTS1 LMOTS2 ;\n\n\n    Objet :\n    _______\n\n    L'operateur XTY calcule le produit scalaire de deux champs en\n  faisant la somme des produits terme a terme de certaines composantes.\n   L'operateur calcule les produits scalaires pour 2 champs de \n  meme indice pris dans des listes et forme ainsi une suite de reels  \n\n\n    Commentaire :\n    _____________\n\n    CHPO1     : objet de type CHPOINT\n\n    CHPO2     : objet de type CHPOINT\n\n   LICHP1, LICHP2 : objet de type LISTCHPO\n\n    LMOTS1    : liste des noms de composantes de CHPO1 a prendre en\n                compte (type LISTMOTS).\n\n    LMOTS2    : liste des noms des composantes de CHPO2 correspondantes\n                (type LISTMOTS)\n\n    FLOT1     : produit scalaire (type FLOTTANT)\n\n    LREE1     : type LISTREEL\n\n    Exemple :\n    _________\n\n    Pour faire le produit  F * U  en dimension 3, on utilisera les\nnoms de composantes : UX UY UZ et FX FY FZ .\n\n\n    ATTENTION :\n    ___________\n\n    Les deux LISTMOTS doivent etre de meme longueur.",
  },
  {
    name: "XXT",
    url: "XXT",
    documentation:
      "$$$$ XXT      NOTICE  CHAT      11/09/12    21:18:36     7124           \n                                             DATE     11/09/12\n\n  Operateur XXT                            Voir aussi :\n    -------------  \n    RIG1 = XXT CH1 (FLOT2);\n    \n\n    Objet :\n    _______\n \n    L'operateur XXT calcule la matrice de rigidite RIG3 (objet de type\n RIGIDITE) a partir du produit tensoriel du champ par point CH1 (objet\n de type CHPOINT) par lui meme, pondere eventuellement par FLOT2 (objet\n de type flottant).\n    \n    Remarque :\n    __________\n\n -  Le maillage support de RIG1 est un unique superelement construit\n    a partir des noeuds du maillage sous-tendant CH1.\n\n -  Pour ne pas perturber le fonctionnement de l'operateur RESO \n    (resolution de systeme lineaire), CH1 ne doit comporter qu'une\n    seule zone, et des composantes homogenes a des forces (voir le\n    manuel de l'operateur FORC).\n\n -  RIG1 est de sous-type 'RIGIDITE'.",
  },
  {
    name: "YTMX",
    url: "YTMX",
    documentation:
      "$$$$ YTMX     NOTICE  CHAT      11/09/12    21:18:36     7124           \n                                             DATE     11/09/12\n\n    Operateur YTMX                           Voir aussi : XTMX, XTX, XTY\n    --------------  \n    FLOT1 = YTMX  CHPO1 CHPO2 RIG1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur YTMX calcule l'application de la forme bilineaire\nassociee a une rigidite et a deux champs par points.\n\n    Commentaire :\n    _____________\n\n    CHPO1 : champ par points (type CHPOINT)\n\n    CHPO2 : champ par points (type CHPOINT)\n\n    RIG1  : matrice de rigidite (type RIGIDITE)\n\n    FLOT1 : objet resultat (type FLOTTANT)\n\n    Dans le cas de matrices non-symetrique l'ordre des champs par\n points est important. L'operateur effectue l'operation :\n\n    CHPO2(transpose)*RIG1*CHPO1\n    \n    \n    Remarque : \n    La regle de transposition associant les inconnues primales de Y \n    et duales de MX utilise les noms definis dans bdata (CCHAMP)\n    (on calcule donc implicitement : UX*FX + UY*FY + ...). \n    L'utilisation d'une autre regle passe par une syntaxe du type :\n    flot1 = XTY chpo2 (Rig1 * chpo1) lmot1 lmot2;\n    ou lmot1 et lmot2 sont des LISTMOTS definis par l'utilisateur.\n    \n     \n     ",
  },
  {
    name: "ZERO",
    url: "ZERO",
    documentation:
      "$$$$ ZERO     NOTICE  CHAT      11/09/12    21:18:38     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ZERO                           Voir aussi :\n    --------------  \n      CHAM1  =  ZERO  MODL1  MOT1 ;\n\n\n    Objet :\n    _______\n\n    L'operateur ZERO permet de creer un champ par element dont les\ncomposantes sont toutes nulles.\n\n\n      Commentaire:\n      ____________\n\n      MODL1   : objet modele ( type MMODEL ).\n\n      MOT1    : objet de type MOT, de 8 caracteres, definissant le nom d\n                sous-type du champ par element a creer, choisi parmi :\n\n               'NOEUD   '    : scalaire aux noeuds\n\n               'GRAVITE '    : scalaire au centre de gravite\n\n               'RIGIDITE'    : scalaire aux points d'integration de la\n                               raideur\n\n               'MASSE   '    : scalaire aux points d'integration de la\n                               masse\n\n               'STRESSES'    : scalaire aux points de contraintes\n\n               'DEPLACEM'    : deplacements\n\n               'FORCES  '    : forces\n\n               'GRADIENT'    : gradient\n\n               'CONTRAIN'    : contraintes\n\n               'DEFORMAT'    : deformations\n\n               'MATERIAU'    : materiaux\n\n               'CARACTER'    : caracteristiques\n\n               'TEMPERAT'    : temperatures\n\n               'PRINCIPA'    : contraintes principales\n\n               'MAHOOKE '    : matrice de Hooke\n\n               'HOTANGEN'    : matrice de Hooke tangente\n\n               'VARINTER'    : variables internes\n\n               'DEFINELA'    : deformations inelastiques\n\n      CHAM1   : champ par elements cree (type MCHAML)",
  },
  {
    name: "ZIGZAG",
    url: "ZIGZAG",
    documentation:
      "$$$$ ZIGZAG   NOTICE  CHAT      11/09/12    21:18:39     7124           \n                                             DATE     11/09/12\n\n  Procedure ZIGZAG                         Voir aussi :\n    ----------------  \n    GEO1 = ZIGZAG POIN0 V1 V2 N1 'D' LONG1 'S' LONG2 'R' RAY1 ... ;\nou\n    GEO1 = ZIGZAG POIN0 V1 V2 N1 'D' LONG1 'A' ANGL1 'R' RAY1 ... ;\nou\n    GEO1 = ZIGZAG POIN0 V1 V2 'DINI' DENS1 'DFIN' DENS2 'D' LONG1 ... ;\n\n\n\n    Objet :\n    _______\n\n    La procedure ZIGZAG permet de construire une ligne definie par une\nsuccession de parties droites (D) et arrondies (S,R) ou (A,R).\n\n    Commentaires :\n    ______________\n\n    POIN0   : point initial de la ligne (type POINT).\n\n    V1      : vecteur tangent a la ligne en POIN0 (type POINT).\n\n    V2      : deuxieme vecteur (type POINT), necessaire pour definir\n              le plan contenant la ligne. Ce plan est oriente par le\n              produit vectoriel N = V1 ^ V2.\n\n    N1      : nombre d'elements souhaite (type ENTIER).\n\n    DENS1 | : densites associes au point initial et au point final\n    DENS2 |   de la ligne (type FLOTTANT).\n\n    LONG1   : longueur de la partie rectiligne a creer (type FLOTTANT).\n\n    LONG2   : longueur de la partie courbe a creer (type FLOTTANT)\n              (comptee positivement dans le sens de la normale N).\n\n    ANGL1   : angle en degre de la partie courbe (type FLOTTANT)\n              (compte positivement dans le sens de la normale N).\n\n    RAY1    : rayon de la partie courbe (type FLOTTANT).\n\n    GEO1    : ligne creee (type MAILLAGE).\n\n\n    Remarques :\n    ____________\n\n     1/. POIN0 doit etre le premier argument suivi de V1, puis de V2.\n     2/. Il y a un noeud aux extremites de chaque ligne elementaire.\n     3/. Si N1 est specifie, N1 elements environ de longueur voisines\n         seront engendres.\n     4/. Si les densites DENS1 et DENS2 sont specifiees, la taille des\n         elements sera calculee en tenant de ces valeurs.",
  },
  {
    name: "ZLEG",
    url: "ZLEG",
    documentation:
      "$$$$ ZLEG     NOTICE  CHAT      11/09/12    21:18:39     7124           \n                                             DATE     11/09/12\n                                             \n  Operateur ZLEG                           Voir aussi :\n    --------------  \n    LREE1 LREE2 = ZLEG ENT1;\n  \n\n    objet :\n    _______\n \n    Operateur ZLEG calcule les zeros et les poids de la derivee\n    du polynome de Legendre dans l'interval normalise (-1, +1).\n\n    ENT1 est le degre du polynome. Il y a ENT1 + 1 points \n\n    LREE1 listreel contenent les ENT1 + 1 coordonnees des \n          points (normalise dans l'interval (-1, +1)).\n\n    LREE2 listreel contenent les ENT1 + 1 poids de Gauss-Lobatto",
  },
  {
    name: "ZONFIS",
    url: "ZONFIS",
    documentation:
      "$$$$ ZONFIS   NOTICE  LJ1       14/11/26    21:15:05     8301           \n                                             DATE     14/11/26\n\n                                             DATE     14/11/13\n\nSection Rupture Rupture\n\n\n    Procedure ZONFIS                              Voir aussi : INITOU POSTOU  \n\n    Objet :\n    _______\n\nMECANIQUE :\n\n  Une procedure permet d'effectuer un calcul de l'ouverture de fissure\n  dans le cas complexe suivant le trajet de fissure. La fissure s'ouvre \n  perpendiculairement au trajet de fissure. L'ouverture de fissure \n  prend en compte les microfissures autour d'une fissure principale.\n\n  Cette proc\u00e9dure est compos\u00e9e de trois procedures qui r\u00e9alise\n  les calculs dans l'ordre suivant : \n\n  - initou: permet de positionner les points de fissure\n  - zonfis: permet de detecter visuellement une zone de fissure\n  - postou: permet de caculer l'ouverture de fissure\n\n  La procedure zonfis permet de detecter visuellement une zone de fissure.\n\n   Description :\n   ____________\n\nL'entree pour zonfis:\nVoici la liste :\n\n    TAB1.DROI LOGIQUE   : pour ajuster la zone de fissure\n    OBJET1    ENTIER    : numero de colonne de partie haute\n    OBJET2    ENTIER    : numero de colonne de partie basse\n    OBJET3    ENTIER    : numero de ligne de partie haute\n    OBJET4    ENTIER    : numero de ligne de partie basse  \n    OBJET5    FLOTTANT  : limite haute de la grille\n    OBJET6    FLOTTANT  : limite basse de la grille\n    OBJET7    FLOTTANT  : ajustement de translation gauche\n    OBJET8    FLOTTANT  : ajustement de translation droite \n    OBJET9    FLOTTANT  : ajustement en bas gauche ou droite  \n\n\n\nLa sortie pour zonfis:\n\n    TAB1.ZONE liste des points d'ajustement",
  },
];
